include ':crnk-core'
include ':crnk-home'
include ':crnk-test'
include ':crnk-rs'
include ':crnk-client'
include ':crnk-client-angular-ngrx'
include ':crnk-meta'
include ':crnk-jpa'
include ':crnk-validation'

include ':crnk-servlet'
include ':crnk-cdi'
include ':crnk-guice'
include ':crnk-spring'
include ':crnk-brave'
include ':crnk-security'

include ':crnk-operations'
include ':crnk-gen-typescript'

include ':crnk-examples:dropwizard-mongo-example'
include ':crnk-examples:jersey-example'
include ':crnk-examples:dropwizard-simple-example'
include ':crnk-examples:wildfly-example'
include ':crnk-examples:spring-boot-example'

include ':crnk-ui'
include ':crnk-documentation'

gradle.startParameter.showStacktrace = org.gradle.api.logging.configuration.ShowStacktrace.ALWAYS

gradle.beforeProject { Project project ->
	project.with {

		// get password from environment if available
		if (System.env['SIGNING_PASSWORD']) {
			ext['signing.password'] = System.env['SIGNING_PASSWORD']
		}
		String sonarLogin = System.env['SONAR_LOGIN']
		if (sonarLogin) {
			System.setProperty("sonar.login", sonarLogin)
		}

		buildscript {
			repositories {
				maven {
					url('https://plugins.gradle.org/m2')
				}
			}
		}
		repositories {
			mavenCentral()
			maven {
				url('https://plugins.gradle.org/m2')
			}
		}
		version = rootProject.version
		group = rootProject.group
	}
}
