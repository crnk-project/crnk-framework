include ':crnk-core'
include ':crnk-reactive'
include ':crnk-home'
include ':crnk-test'
include ':crnk-client'
include ':crnk-client-angular-ngrx'
include ':crnk-meta'
include ':crnk-jpa'
include ':crnk-validation'

include ':crnk-monitor-brave4'
include ':crnk-security'
include ':crnk-activiti'

include ':crnk-setup:crnk-setup-spring'
include ':crnk-setup:crnk-setup-spring-boot1'
include ':crnk-setup:crnk-setup-spring-boot2'
include ':crnk-setup:crnk-setup-vertx'
include ':crnk-setup:crnk-setup-servlet'
include ':crnk-setup:crnk-setup-cdi'
include ':crnk-setup:crnk-setup-guice'
include ':crnk-setup:crnk-setup-rs'

include ':crnk-operations'
include ':crnk-gen-typescript'

include ':crnk-integration-examples:dropwizard-mongo-example'
include ':crnk-integration-examples:jersey-example'
include ':crnk-integration-examples:dropwizard-simple-example'
include ':crnk-integration-examples:wildfly-example'
include ':crnk-integration-examples:spring-boot-example'
include ':crnk-integration-examples:spring-boot-minimal-example'
include ':crnk-integration-examples:spring-boot-microservice-example'
include ':crnk-integration-examples:dagger-vertx-example'

include ':crnk-ui'
include ':crnk-documentation'
include ':crnk-bom'

gradle.beforeProject { Project project ->
	project.with {

		ext {
			dockerHubUser = System.getenv('DOCKER_HUB_USER')
			dockerHubPass = System.getenv('DOCKER_HUB_PASS')
		}

		// get password from environment if available
		String sonarLogin = System.env['SONAR_LOGIN']
		if (sonarLogin) {
			System.setProperty("sonar.login", sonarLogin)
		}

		buildscript {
			repositories {
				maven {
					url('https://plugins.gradle.org/m2')
				}
			}
		}
		repositories {
			mavenCentral()
			maven {
				url('https://plugins.gradle.org/m2')
			}
		}
		version = rootProject.version
		group = rootProject.group
	}
}

