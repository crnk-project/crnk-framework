ch.qos.logback.classic.BasicConfigurator -> ch.qos.logback.classic.BasicConfigurator:
    32:33:void <init>() -> <init>
    36:59:void configure(ch.qos.logback.classic.LoggerContext) -> configure
ch.qos.logback.classic.ClassicConstants -> ch.qos.logback.classic.ClassicConstants:
    org.slf4j.Marker FINALIZE_SESSION_MARKER -> FINALIZE_SESSION_MARKER
    50:50:void <clinit>() -> <clinit>
ch.qos.logback.classic.Level -> ch.qos.logback.classic.Level:
    java.lang.Integer OFF_INTEGER -> OFF_INTEGER
    java.lang.Integer ERROR_INTEGER -> ERROR_INTEGER
    java.lang.Integer WARN_INTEGER -> WARN_INTEGER
    java.lang.Integer INFO_INTEGER -> INFO_INTEGER
    java.lang.Integer DEBUG_INTEGER -> DEBUG_INTEGER
    java.lang.Integer TRACE_INTEGER -> TRACE_INTEGER
    java.lang.Integer ALL_INTEGER -> ALL_INTEGER
    ch.qos.logback.classic.Level OFF -> OFF
    ch.qos.logback.classic.Level ERROR -> ERROR
    ch.qos.logback.classic.Level WARN -> WARN
    ch.qos.logback.classic.Level INFO -> INFO
    ch.qos.logback.classic.Level DEBUG -> DEBUG
    ch.qos.logback.classic.Level TRACE -> TRACE
    ch.qos.logback.classic.Level ALL -> ALL
    int levelInt -> levelInt
    java.lang.String levelStr -> levelStr
    90:93:void <init>(int,java.lang.String) -> <init>
    99:99:java.lang.String toString() -> toString
    106:106:int toInt() -> toInt
    115:131:java.lang.Integer toInteger() -> toInteger
    148:148:ch.qos.logback.classic.Level toLevel(java.lang.String) -> toLevel
    166:166:ch.qos.logback.classic.Level toLevel(int) -> toLevel
    174:190:ch.qos.logback.classic.Level toLevel(int,ch.qos.logback.classic.Level) -> toLevel
    199:224:ch.qos.logback.classic.Level toLevel(java.lang.String,ch.qos.logback.classic.Level) -> toLevel
    37:82:void <clinit>() -> <clinit>
ch.qos.logback.classic.Logger -> ch.qos.logback.classic.Logger:
    java.lang.String FQCN -> FQCN
    java.lang.String name -> name
    ch.qos.logback.classic.Level level -> level
    int effectiveLevelInt -> effectiveLevelInt
    ch.qos.logback.classic.Logger parent -> parent
    java.util.List childrenList -> childrenList
    ch.qos.logback.core.spi.AppenderAttachableImpl aai -> aai
    boolean additive -> additive
    ch.qos.logback.classic.LoggerContext loggerContext -> loggerContext
    98:106:void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.LoggerContext) -> <init>
    109:109:ch.qos.logback.classic.Level getEffectiveLevel() -> getEffectiveLevel
    117:117:ch.qos.logback.classic.Level getLevel() -> getLevel
    121:121:java.lang.String getName() -> getName
    126:126:boolean isRootLogger() -> isRootLogger
    130:143:ch.qos.logback.classic.Logger getChildByName(java.lang.String) -> getChildByName
    148:174:void setLevel(ch.qos.logback.classic.Level) -> setLevel
    185:197:void handleParentLevelChange(int) -> handleParentLevelChange
    205:208:void detachAndStopAllAppenders() -> detachAndStopAllAppenders
    220:224:void addAppender(ch.qos.logback.core.Appender) -> addAppender
    255:266:void callAppenders(ch.qos.logback.classic.spi.ILoggingEvent) -> callAppenders
    269:272:int appendLoopOnAppenders(ch.qos.logback.classic.spi.ILoggingEvent) -> appendLoopOnAppenders
    322:328:void localLevelReset() -> localLevelReset
    331:340:void recursiveReset() -> recursiveReset
    348:361:ch.qos.logback.classic.Logger createChildByName(java.lang.String) -> createChildByName
    373:384:void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> filterAndLog_0_Or3Plus
    388:399:void filterAndLog_1(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable) -> filterAndLog_1
    404:415:void filterAndLog_2(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable) -> filterAndLog_2
    419:422:void buildLoggingEventAndAppend(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> buildLoggingEventAndAppend
    425:426:void trace(java.lang.String) -> trace
    429:430:void trace(java.lang.String,java.lang.Object) -> trace
    433:434:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    437:438:void trace(java.lang.String,java.lang.Object[]) -> trace
    441:442:void trace(java.lang.String,java.lang.Throwable) -> trace
    465:465:boolean isDebugEnabled() -> isDebugEnabled
    469:477:boolean isDebugEnabled(org.slf4j.Marker) -> isDebugEnabled
    482:483:void debug(java.lang.String) -> debug
    486:487:void debug(java.lang.String,java.lang.Object) -> debug
    490:491:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    494:495:void debug(java.lang.String,java.lang.Object[]) -> debug
    498:499:void debug(java.lang.String,java.lang.Throwable) -> debug
    522:523:void error(java.lang.String) -> error
    526:527:void error(java.lang.String,java.lang.Object) -> error
    530:531:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    534:535:void error(java.lang.String,java.lang.Object[]) -> error
    538:539:void error(java.lang.String,java.lang.Throwable) -> error
    562:562:boolean isInfoEnabled() -> isInfoEnabled
    566:574:boolean isInfoEnabled(org.slf4j.Marker) -> isInfoEnabled
    579:580:void info(java.lang.String) -> info
    583:584:void info(java.lang.String,java.lang.Object) -> info
    587:588:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    591:592:void info(java.lang.String,java.lang.Object[]) -> info
    595:596:void info(java.lang.String,java.lang.Throwable) -> info
    619:619:boolean isTraceEnabled() -> isTraceEnabled
    623:631:boolean isTraceEnabled(org.slf4j.Marker) -> isTraceEnabled
    636:636:boolean isErrorEnabled() -> isErrorEnabled
    640:648:boolean isErrorEnabled(org.slf4j.Marker) -> isErrorEnabled
    653:653:boolean isWarnEnabled() -> isWarnEnabled
    657:665:boolean isWarnEnabled(org.slf4j.Marker) -> isWarnEnabled
    688:689:void warn(java.lang.String) -> warn
    692:693:void warn(java.lang.String,java.lang.Throwable) -> warn
    696:697:void warn(java.lang.String,java.lang.Object) -> warn
    700:701:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    704:705:void warn(java.lang.String,java.lang.Object[]) -> warn
    732:733:void setAdditive(boolean) -> setAdditive
    736:736:java.lang.String toString() -> toString
    751:751:ch.qos.logback.core.spi.FilterReply callTurboFilters(org.slf4j.Marker,ch.qos.logback.classic.Level) -> callTurboFilters
    760:760:ch.qos.logback.classic.LoggerContext getLoggerContext() -> getLoggerContext
    44:44:void <clinit>() -> <clinit>
ch.qos.logback.classic.LoggerContext -> ch.qos.logback.classic.LoggerContext:
    ch.qos.logback.classic.Logger root -> root
    int size -> size
    int noAppenderWarning -> noAppenderWarning
    java.util.List loggerContextListenerList -> loggerContextListenerList
    java.util.Map loggerCache -> loggerCache
    ch.qos.logback.classic.spi.LoggerContextVO loggerContextRemoteView -> loggerContextRemoteView
    ch.qos.logback.classic.spi.TurboFilterList turboFilterList -> turboFilterList
    boolean packagingDataEnabled -> packagingDataEnabled
    int maxCallerDataDepth -> maxCallerDataDepth
    int resetCount -> resetCount
    java.util.List frameworkPackages -> frameworkPackages
    60:85:void <init>() -> <init>
    88:89:void initEvaluatorMap() -> initEvaluatorMap
    96:97:void updateLoggerContextVO() -> updateLoggerContextVO
    101:103:void putProperty(java.lang.String,java.lang.String) -> putProperty
    107:109:void setName(java.lang.String) -> setName
    118:163:ch.qos.logback.classic.Logger getLogger(java.lang.String) -> getLogger
    167:168:void incSize() -> incSize
    185:188:void noAppenderDefinedWarning(ch.qos.logback.classic.Logger) -> noAppenderDefinedWarning
    198:198:ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextRemoteView() -> getLoggerContextRemoteView
    202:203:void setPackagingDataEnabled(boolean) -> setPackagingDataEnabled
    206:206:boolean isPackagingDataEnabled() -> isPackagingDataEnabled
    219:229:void reset() -> reset
    232:236:void cancelScheduledTasks() -> cancelScheduledTasks
    239:243:void resetStatusListeners() -> resetStatusListeners
    258:262:void resetTurboFilterList() -> resetTurboFilterList
    266:269:ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_0_3OrMore(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> getTurboFilterChainDecision_0_3OrMore
    274:277:ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_1(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable) -> getTurboFilterChainDecision_1
    282:285:ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_2(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable) -> getTurboFilterChainDecision_2
    290:291:void addListener(ch.qos.logback.classic.spi.LoggerContextListener) -> addListener
    298:306:void resetListenersExceptResetResistant() -> resetListenersExceptResetResistant
    309:310:void resetAllListeners() -> resetAllListeners
    313:313:java.util.List getCopyOfListenerList() -> getCopyOfListenerList
    317:320:void fireOnLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level) -> fireOnLevelChange
    323:326:void fireOnReset() -> fireOnReset
    329:332:void fireOnStart() -> fireOnStart
    335:338:void fireOnStop() -> fireOnStop
    343:345:void start() -> start
    348:352:void stop() -> stop
    356:356:java.lang.String toString() -> toString
    360:360:int getMaxCallerDataDepth() -> getMaxCallerDataDepth
    377:377:java.util.List getFrameworkPackages() -> getFrameworkPackages
    53:53:org.slf4j.Logger getLogger(java.lang.String) -> getLogger
ch.qos.logback.classic.PatternLayout -> ch.qos.logback.classic.PatternLayout:
    java.util.Map defaultConverterMap -> defaultConverterMap
    129:131:void <init>() -> <init>
    134:134:java.util.Map getDefaultConverterMap() -> getDefaultConverterMap
    138:141:java.lang.String doLayout(ch.qos.logback.classic.spi.ILoggingEvent) -> doLayout
    146:146:java.lang.String getPresentationHeaderPrefix() -> getPresentationHeaderPrefix
    39:39:java.lang.String doLayout(java.lang.Object) -> doLayout
    41:127:void <clinit>() -> <clinit>
ch.qos.logback.classic.boolex.JaninoEventEvaluator -> ch.qos.logback.classic.boolex.JaninoEventEvaluator:
    java.util.List DEFAULT_PARAM_NAME_LIST -> DEFAULT_PARAM_NAME_LIST
    java.util.List DEFAULT_PARAM_TYPE_LIST -> DEFAULT_PARAM_TYPE_LIST
    31:31:void <init>() -> <init>
    76:83:java.lang.String getDecoratedExpression() -> getDecoratedExpression
    87:95:java.lang.String[] getParameterNames() -> getParameterNames
    99:104:java.lang.Class[] getParameterTypes() -> getParameterTypes
    108:149:java.lang.Object[] getParameterValues(ch.qos.logback.classic.spi.ILoggingEvent) -> getParameterValues
    31:31:java.lang.Object[] getParameterValues(java.lang.Object) -> getParameterValues
    35:73:void <clinit>() -> <clinit>
ch.qos.logback.classic.encoder.PatternLayoutEncoder -> ch.qos.logback.classic.encoder.PatternLayoutEncoder:
    20:20:void <init>() -> <init>
    24:31:void start() -> start
ch.qos.logback.classic.gaffer.GafferConfigurator -> ch.qos.logback.classic.gaffer.GafferConfigurator:
    ch.qos.logback.classic.LoggerContext context -> context
    boolean __$stMC -> __$stMC
    java.lang.ref.SoftReference $callSiteArray -> $callSiteArray
    39:39:void informContextOfURLUsedForConfiguration(java.net.URL) -> informContextOfURLUsedForConfiguration
    43:44:void run(java.net.URL) -> run
    void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
ch.qos.logback.classic.gaffer.GafferUtil -> ch.qos.logback.classic.gaffer.GafferUtil:
    java.lang.String ERROR_MSG -> ERROR_MSG
    41:45:void runGafferConfiguratorOn(ch.qos.logback.classic.LoggerContext,java.lang.Object,java.net.URL) -> runGafferConfiguratorOn
    50:64:ch.qos.logback.classic.gaffer.GafferConfigurator newGafferConfiguratorInstance(ch.qos.logback.classic.LoggerContext,java.lang.Object) -> newGafferConfiguratorInstance
    72:77:void addError(ch.qos.logback.classic.LoggerContext,java.lang.Object,java.lang.String,java.lang.Throwable) -> addError
    31:31:void <clinit>() -> <clinit>
ch.qos.logback.classic.jmx.JMXConfigurator -> ch.qos.logback.classic.jmx.JMXConfigurator:
    java.lang.String EMPTY -> EMPTY
    ch.qos.logback.classic.LoggerContext loggerContext -> loggerContext
    javax.management.MBeanServer mbs -> mbs
    javax.management.ObjectName objectName -> objectName
    java.lang.String objectNameAsString -> objectNameAsString
    boolean debug -> debug
    boolean started -> started
    65:82:void <init>(ch.qos.logback.classic.LoggerContext,javax.management.MBeanServer,javax.management.ObjectName) -> <init>
    85:94:boolean previouslyRegisteredListenerWithSameObjectName() -> previouslyRegisteredListenerWithSameObjectName
    237:255:void onStop(ch.qos.logback.classic.LoggerContext) -> onStop
    259:259:void onLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level) -> onLevelChange
    262:263:void onReset(ch.qos.logback.classic.LoggerContext) -> onReset
    271:271:boolean isResetResistant() -> isResetResistant
    275:278:void clearFields() -> clearFields
    281:283:void stop() -> stop
    287:287:void onStart(ch.qos.logback.classic.LoggerContext) -> onStart
    291:291:java.lang.String toString() -> toString
    56:56:void <clinit>() -> <clinit>
ch.qos.logback.classic.jmx.MBeanUtil -> ch.qos.logback.classic.jmx.MBeanUtil:
    31:31:java.lang.String getObjectNameFor(java.lang.String,java.lang.Class) -> getObjectNameFor
    35:45:javax.management.ObjectName string2ObjectName(ch.qos.logback.core.Context,java.lang.Object,java.lang.String) -> string2ObjectName
    50:50:boolean isRegistered(javax.management.MBeanServer,javax.management.ObjectName) -> isRegistered
ch.qos.logback.classic.joran.JoranConfigurator -> ch.qos.logback.classic.joran.JoranConfigurator:
    37:37:void <init>() -> <init>
    42:81:void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> addInstanceRules
    85:86:void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> addDefaultNestedComponentRegistryRules
ch.qos.logback.classic.joran.ReconfigureOnChangeTask -> ch.qos.logback.classic.joran.ReconfigureOnChangeTask:
    long birthdate -> birthdate
    java.util.List listeners -> listeners
    19:27:void <init>() -> <init>
    39:77:void run() -> run
    80:85:void fireEnteredRunMethod() -> fireEnteredRunMethod
    88:93:void fireChangeDetected() -> fireChangeDetected
    97:102:void fireDoneReconfiguring() -> fireDoneReconfiguring
    105:121:void performXMLConfiguration(ch.qos.logback.classic.LoggerContext,java.net.URL) -> performXMLConfiguration
    124:133:java.util.List removeIncludeEvents(java.util.List) -> removeIncludeEvents
    140:162:void fallbackConfiguration(ch.qos.logback.classic.LoggerContext,java.util.List,java.net.URL) -> fallbackConfiguration
    166:166:java.lang.String toString() -> toString
ch.qos.logback.classic.joran.ReconfigureOnChangeTaskListener -> ch.qos.logback.classic.joran.ReconfigureOnChangeTaskListener:
    3:3:void <init>() -> <init>
    5:5:void enteredRunMethod() -> enteredRunMethod
    8:8:void changeDetected() -> changeDetected
    11:11:void doneReconfiguring() -> doneReconfiguring
ch.qos.logback.classic.joran.action.ConfigurationAction -> ch.qos.logback.classic.joran.action.ConfigurationAction:
    long threshold -> threshold
    36:43:void <init>() -> <init>
    46:76:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    84:86:java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    91:123:void processScanAttrib(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes) -> processScanAttrib
    126:136:ch.qos.logback.core.util.Duration getDuration(java.lang.String,java.lang.String) -> getDuration
    140:142:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.ConsolePluginAction -> ch.qos.logback.classic.joran.action.ConsolePluginAction:
    java.lang.Integer DEFAULT_PORT -> DEFAULT_PORT
    25:25:void <init>() -> <init>
    32:56:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    61:61:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    28:28:void <clinit>() -> <clinit>
ch.qos.logback.classic.joran.action.ContextNameAction -> ch.qos.logback.classic.joran.action.ContextNameAction:
    21:21:void <init>() -> <init>
    24:24:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    28:35:void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> body
    38:38:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.EvaluatorAction -> ch.qos.logback.classic.joran.action.EvaluatorAction:
    19:19:void <init>() -> <init>
    21:21:java.lang.String defaultClassName() -> defaultClassName
ch.qos.logback.classic.joran.action.InsertFromJNDIAction -> ch.qos.logback.classic.joran.action.InsertFromJNDIAction:
    34:34:void <init>() -> <init>
    41:79:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    82:82:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.JMXConfiguratorAction -> ch.qos.logback.classic.joran.action.JMXConfiguratorAction:
    31:31:void <init>() -> <init>
    39:75:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    80:80:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.LevelAction -> ch.qos.logback.classic.joran.action.LevelAction:
    boolean inError -> inError
    32:34:void <init>() -> <init>
    37:60:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    66:66:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.LoggerAction -> ch.qos.logback.classic.joran.action.LoggerAction:
    boolean inError -> inError
    ch.qos.logback.classic.Logger logger -> logger
    31:34:void <init>() -> <init>
    39:76:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    79:89:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.LoggerContextListenerAction -> ch.qos.logback.classic.joran.action.LoggerContextListenerAction:
    boolean inError -> inError
    ch.qos.logback.classic.spi.LoggerContextListener lcl -> lcl
    27:28:void <init>() -> <init>
    34:57:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    61:76:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.ReceiverAction -> ch.qos.logback.classic.joran.action.ReceiverAction:
    ch.qos.logback.classic.net.ReceiverBase receiver -> receiver
    boolean inError -> inError
    30:30:void <init>() -> <init>
    38:57:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    62:74:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.RootLoggerAction -> ch.qos.logback.classic.joran.action.RootLoggerAction:
    ch.qos.logback.classic.Logger root -> root
    boolean inError -> inError
    26:29:void <init>() -> <init>
    32:44:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    47:57:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.layout.TTLLLayout -> ch.qos.logback.classic.layout.TTLLLayout:
    ch.qos.logback.core.util.CachingDateFormatter cachingDateFormatter -> cachingDateFormatter
    ch.qos.logback.classic.pattern.ThrowableProxyConverter tpc -> tpc
    23:26:void <init>() -> <init>
    30:32:void start() -> start
    36:58:java.lang.String doLayout(ch.qos.logback.classic.spi.ILoggingEvent) -> doLayout
    23:23:java.lang.String doLayout(java.lang.Object) -> doLayout
ch.qos.logback.classic.net.LoggingEventPreSerializationTransformer -> ch.qos.logback.classic.net.LoggingEventPreSerializationTransformer:
    23:23:void <init>() -> <init>
    26:34:java.io.Serializable transform(ch.qos.logback.classic.spi.ILoggingEvent) -> transform
    23:23:java.io.Serializable transform(java.lang.Object) -> transform
ch.qos.logback.classic.net.ReceiverBase -> ch.qos.logback.classic.net.ReceiverBase:
    boolean started -> started
    25:25:void <init>() -> <init>
    33:42:void start() -> start
    48:56:void stop() -> stop
    62:62:boolean isStarted() -> isStarted
    boolean shouldStart() -> shouldStart
    void onStop() -> onStop
    java.lang.Runnable getRunnableTask() -> getRunnableTask
ch.qos.logback.classic.net.SocketAppender -> ch.qos.logback.classic.net.SocketAppender:
    ch.qos.logback.core.spi.PreSerializationTransformer pst -> pst
    boolean includeCallerData -> includeCallerData
    36:39:void <init>() -> <init>
    43:46:void postProcessEvent(ch.qos.logback.classic.spi.ILoggingEvent) -> postProcessEvent
    49:50:void setIncludeCallerData(boolean) -> setIncludeCallerData
    53:53:ch.qos.logback.core.spi.PreSerializationTransformer getPST() -> getPST
    32:32:void postProcessEvent(java.lang.Object) -> postProcessEvent
    34:34:void <clinit>() -> <clinit>
ch.qos.logback.classic.pattern.Abbreviator -> ch.qos.logback.classic.pattern.Abbreviator:
    java.lang.String abbreviate(java.lang.String) -> abbreviate
ch.qos.logback.classic.pattern.CallerDataConverter -> ch.qos.logback.classic.pattern.CallerDataConverter:
    int depthStart -> depthStart
    int depthEnd -> depthEnd
    java.util.List evaluatorList -> evaluatorList
    int MAX_ERROR_COUNT -> MAX_ERROR_COUNT
    int errorCount -> errorCount
    34:45:void <init>() -> <init>
    49:87:void start() -> start
    90:90:boolean isRange(java.lang.String) -> isRange
    94:94:java.lang.String[] splitRange(java.lang.String) -> splitRange
    98:103:void checkRange() -> checkRange
    106:110:void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator) -> addEvaluator
    113:156:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    161:161:java.lang.String getCallerLinePrefix() -> getCallerLinePrefix
    165:165:java.lang.String getDefaultRangeDelimiter() -> getDefaultRangeDelimiter
    34:34:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.ClassNameOnlyAbbreviator -> ch.qos.logback.classic.pattern.ClassNameOnlyAbbreviator:
    24:24:void <init>() -> <init>
    30:34:java.lang.String abbreviate(java.lang.String) -> abbreviate
ch.qos.logback.classic.pattern.ClassOfCallerConverter -> ch.qos.logback.classic.pattern.ClassOfCallerConverter:
    19:19:void <init>() -> <init>
    23:27:java.lang.String getFullyQualifiedName(ch.qos.logback.classic.spi.ILoggingEvent) -> getFullyQualifiedName
ch.qos.logback.classic.pattern.ClassicConverter -> ch.qos.logback.classic.pattern.ClassicConverter:
    25:25:void <init>() -> <init>
ch.qos.logback.classic.pattern.ContextNameConverter -> ch.qos.logback.classic.pattern.ContextNameConverter:
    23:23:void <init>() -> <init>
    29:29:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    23:23:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.DateConverter -> ch.qos.logback.classic.pattern.DateConverter:
    long lastTimestamp -> lastTimestamp
    java.lang.String timestampStrCache -> timestampStrCache
    ch.qos.logback.core.util.CachingDateFormatter cachingDateFormatter -> cachingDateFormatter
    23:27:void <init>() -> <init>
    31:57:void start() -> start
    60:61:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    23:23:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.EnsureExceptionHandling -> ch.qos.logback.classic.pattern.EnsureExceptionHandling:
    23:23:void <init>() -> <init>
    41:56:void process(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter) -> process
    67:74:boolean chainHandlesThrowable(ch.qos.logback.core.pattern.Converter) -> chainHandlesThrowable
ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter -> ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter:
    20:20:void <init>() -> <init>
    24:25:void extraData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy) -> extraData
ch.qos.logback.classic.pattern.FileOfCallerConverter -> ch.qos.logback.classic.pattern.FileOfCallerConverter:
    19:19:void <init>() -> <init>
    22:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    19:19:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.LevelConverter -> ch.qos.logback.classic.pattern.LevelConverter:
    23:23:void <init>() -> <init>
    26:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    23:23:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.LineOfCallerConverter -> ch.qos.logback.classic.pattern.LineOfCallerConverter:
    19:19:void <init>() -> <init>
    22:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    19:19:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.LineSeparatorConverter -> ch.qos.logback.classic.pattern.LineSeparatorConverter:
    19:19:void <init>() -> <init>
    22:22:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    19:19:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.LocalSequenceNumberConverter -> ch.qos.logback.classic.pattern.LocalSequenceNumberConverter:
    java.util.concurrent.atomic.AtomicLong sequenceNumber -> sequenceNumber
    28:30:void <init>() -> <init>
    34:34:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    28:28:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.LoggerConverter -> ch.qos.logback.classic.pattern.LoggerConverter:
    18:18:void <init>() -> <init>
    21:21:java.lang.String getFullyQualifiedName(ch.qos.logback.classic.spi.ILoggingEvent) -> getFullyQualifiedName
ch.qos.logback.classic.pattern.MDCConverter -> ch.qos.logback.classic.pattern.MDCConverter:
    java.lang.String key -> key
    java.lang.String defaultValue -> defaultValue
    22:25:void <init>() -> <init>
    29:35:void start() -> start
    39:41:void stop() -> stop
    45:59:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    68:79:java.lang.String outputMDCForAllKeys(java.util.Map) -> outputMDCForAllKeys
    22:22:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.MarkerConverter -> ch.qos.logback.classic.pattern.MarkerConverter:
    java.lang.String EMPTY -> EMPTY
    25:25:void <init>() -> <init>
    30:34:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    25:25:java.lang.String convert(java.lang.Object) -> convert
    27:27:void <clinit>() -> <clinit>
ch.qos.logback.classic.pattern.MessageConverter -> ch.qos.logback.classic.pattern.MessageConverter:
    23:23:void <init>() -> <init>
    26:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    23:23:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.MethodOfCallerConverter -> ch.qos.logback.classic.pattern.MethodOfCallerConverter:
    19:19:void <init>() -> <init>
    22:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    19:19:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.NamedConverter -> ch.qos.logback.classic.pattern.NamedConverter:
    ch.qos.logback.classic.pattern.Abbreviator abbreviator -> abbreviator
    18:20:void <init>() -> <init>
    java.lang.String getFullyQualifiedName(ch.qos.logback.classic.spi.ILoggingEvent) -> getFullyQualifiedName
    32:45:void start() -> start
    48:53:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    18:18:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.NopThrowableInformationConverter -> ch.qos.logback.classic.pattern.NopThrowableInformationConverter:
    35:35:void <init>() -> <init>
    38:38:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    35:35:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.PropertyConverter -> ch.qos.logback.classic.pattern.PropertyConverter:
    java.lang.String key -> key
    21:21:void <init>() -> <init>
    26:31:void start() -> start
    34:43:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    21:21:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.RelativeTimeConverter -> ch.qos.logback.classic.pattern.RelativeTimeConverter:
    long lastTimestamp -> lastTimestamp
    java.lang.String timesmapCache -> timesmapCache
    18:21:void <init>() -> <init>
    24:33:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    18:18:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverter -> ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverter:
    24:24:void <init>() -> <init>
    28:30:java.lang.String throwableProxyToString(ch.qos.logback.classic.spi.IThrowableProxy) -> throwableProxyToString
    34:51:void recursiveAppendRootCauseFirst(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy) -> recursiveAppendRootCauseFirst
ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator -> ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:
    int targetLength -> targetLength
    23:25:void <init>(int) -> <init>
    28:63:java.lang.String abbreviate(java.lang.String) -> abbreviate
    67:81:int computeDotIndexes(java.lang.String,int[]) -> computeDotIndexes
    85:113:void computeLengthArray(java.lang.String,int[],int[],int) -> computeLengthArray
ch.qos.logback.classic.pattern.ThreadConverter -> ch.qos.logback.classic.pattern.ThreadConverter:
    23:23:void <init>() -> <init>
    26:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    23:23:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.ThrowableHandlingConverter -> ch.qos.logback.classic.pattern.ThrowableHandlingConverter:
    20:20:void <init>() -> <init>
ch.qos.logback.classic.pattern.ThrowableProxyConverter -> ch.qos.logback.classic.pattern.ThrowableProxyConverter:
    int lengthOption -> lengthOption
    java.util.List evaluatorList -> evaluatorList
    java.util.List ignoredStackTraceLines -> ignoredStackTraceLines
    int errorCount -> errorCount
    35:43:void <init>() -> <init>
    48:85:void start() -> start
    88:92:void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator) -> addEvaluator
    95:99:void addIgnoreStackTraceLine(java.lang.String) -> addIgnoreStackTraceLine
    102:104:void stop() -> stop
    108:108:void extraData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy) -> extraData
    112:145:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    149:153:java.lang.String throwableProxyToString(ch.qos.logback.classic.spi.IThrowableProxy) -> throwableProxyToString
    157:169:void recursiveAppend(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy) -> recursiveAppend
    172:177:void subjoinFirstLine(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinFirstLine
    180:181:void subjoinExceptionMessage(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinExceptionMessage
    184:218:void subjoinSTEPArray(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinSTEPArray
    221:226:void printStackLine(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.StackTraceElementProxy) -> printStackLine
    229:230:void printIgnoredCount(java.lang.StringBuilder,int) -> printIgnoredCount
    233:240:boolean isIgnoredStackTraceLine(java.lang.String) -> isIgnoredStackTraceLine
    35:35:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter -> ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter:
    25:25:void <init>() -> <init>
    29:38:java.lang.String getForegroundColorCode(ch.qos.logback.classic.spi.ILoggingEvent) -> getForegroundColorCode
    25:25:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.classic.selector.ContextJNDISelector -> ch.qos.logback.classic.selector.ContextJNDISelector:
    java.util.Map synchronizedContextMap -> synchronizedContextMap
    ch.qos.logback.classic.LoggerContext defaultContext -> defaultContext
    java.lang.ThreadLocal threadLocal -> threadLocal
    59:62:void <init>(ch.qos.logback.classic.LoggerContext) -> <init>
    73:116:ch.qos.logback.classic.LoggerContext getLoggerContext() -> getLoggerContext
    121:121:java.lang.String conventionalConfigFileName(java.lang.String) -> conventionalConfigFileName
    125:140:java.net.URL findConfigFileURL(javax.naming.Context,ch.qos.logback.classic.LoggerContext) -> findConfigFileURL
    145:150:java.net.URL urlByResourceName(ch.qos.logback.core.status.StatusManager,java.lang.String) -> urlByResourceName
    155:162:void configureLoggerContextByURL(ch.qos.logback.classic.LoggerContext,java.net.URL) -> configureLoggerContextByURL
    57:57:void <clinit>() -> <clinit>
ch.qos.logback.classic.selector.ContextSelector -> ch.qos.logback.classic.selector.ContextSelector:
    ch.qos.logback.classic.LoggerContext getLoggerContext() -> getLoggerContext
ch.qos.logback.classic.selector.DefaultContextSelector -> ch.qos.logback.classic.selector.DefaultContextSelector:
    ch.qos.logback.classic.LoggerContext defaultLoggerContext -> defaultLoggerContext
    25:27:void <init>(ch.qos.logback.classic.LoggerContext) -> <init>
    30:30:ch.qos.logback.classic.LoggerContext getLoggerContext() -> getLoggerContext
    34:34:ch.qos.logback.classic.LoggerContext getDefaultLoggerContext() -> getDefaultLoggerContext
ch.qos.logback.classic.sift.AppenderFactoryUsingJoran -> ch.qos.logback.classic.sift.AppenderFactoryUsingJoran:
    30:31:void <init>(java.util.List,java.lang.String,java.util.Map) -> <init>
    34:34:ch.qos.logback.core.sift.SiftingJoranConfiguratorBase getSiftingJoranConfigurator(java.lang.String) -> getSiftingJoranConfigurator
ch.qos.logback.classic.sift.MDCBasedDiscriminator -> ch.qos.logback.classic.sift.MDCBasedDiscriminator:
    java.lang.String key -> key
    java.lang.String defaultValue -> defaultValue
    42:50:java.lang.String getDiscriminatingValue(ch.qos.logback.classic.spi.ILoggingEvent) -> getDiscriminatingValue
    56:68:void start() -> start
    71:71:java.lang.String getKey() -> getKey
    30:30:java.lang.String getDiscriminatingValue(java.lang.Object) -> getDiscriminatingValue
ch.qos.logback.classic.sift.SiftAction -> ch.qos.logback.classic.sift.SiftAction:
    java.util.List seList -> seList
    28:28:void <init>() -> <init>
    33:35:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    39:47:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    50:51:void inPlay(ch.qos.logback.core.joran.event.SaxEvent) -> inPlay
ch.qos.logback.classic.sift.SiftingAppender -> ch.qos.logback.classic.sift.SiftingAppender:
    33:33:void <init>() -> <init>
    37:37:long getTimestamp(ch.qos.logback.classic.spi.ILoggingEvent) -> getTimestamp
    47:51:boolean eventMarksEndOfLife(ch.qos.logback.classic.spi.ILoggingEvent) -> eventMarksEndOfLife
    33:33:boolean eventMarksEndOfLife(java.lang.Object) -> eventMarksEndOfLife
    33:33:long getTimestamp(java.lang.Object) -> getTimestamp
ch.qos.logback.classic.sift.SiftingJoranConfigurator -> ch.qos.logback.classic.sift.SiftingJoranConfigurator:
    34:35:void <init>(java.lang.String,java.lang.String,java.util.Map) -> <init>
    39:39:ch.qos.logback.core.joran.spi.ElementPath initialElementPath() -> initialElementPath
    44:46:void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> addInstanceRules
    50:51:void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> addDefaultNestedComponentRegistryRules
    55:63:void buildInterpreter() -> buildInterpreter
    67:74:ch.qos.logback.core.Appender getAppender() -> getAppender
ch.qos.logback.classic.spi.CallerData -> ch.qos.logback.classic.spi.CallerData:
    java.lang.String CALLER_DATA_NA -> CALLER_DATA_NA
    java.lang.StackTraceElement[] EMPTY_CALLER_DATA_ARRAY -> EMPTY_CALLER_DATA_ARRAY
    56:87:java.lang.StackTraceElement[] extract(java.lang.Throwable,java.lang.String,int,java.util.List) -> extract
    93:97:boolean isInFrameworkSpace(java.lang.String,java.lang.String,java.util.List) -> isInFrameworkSpace
    105:112:boolean isInFrameworkSpaceList(java.lang.String,java.util.List) -> isInFrameworkSpaceList
    44:49:void <clinit>() -> <clinit>
ch.qos.logback.classic.spi.ClassPackagingData -> ch.qos.logback.classic.spi.ClassPackagingData:
    java.lang.String codeLocation -> codeLocation
    java.lang.String version -> version
    boolean exact -> exact
    25:29:void <init>(java.lang.String,java.lang.String) -> <init>
    31:35:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    38:38:java.lang.String getCodeLocation() -> getCodeLocation
    42:42:java.lang.String getVersion() -> getVersion
    46:46:boolean isExact() -> isExact
    51:54:int hashCode() -> hashCode
    59:78:boolean equals(java.lang.Object) -> equals
ch.qos.logback.classic.spi.Configurator -> ch.qos.logback.classic.spi.Configurator:
    void configure(ch.qos.logback.classic.LoggerContext) -> configure
ch.qos.logback.classic.spi.EventArgUtil -> ch.qos.logback.classic.spi.EventArgUtil:
    19:27:java.lang.Throwable extractThrowable(java.lang.Object[]) -> extractThrowable
    37:43:java.lang.Object[] trimmedCopy(java.lang.Object[]) -> trimmedCopy
    51:51:boolean successfulExtraction(java.lang.Throwable) -> successfulExtraction
ch.qos.logback.classic.spi.ILoggingEvent -> ch.qos.logback.classic.spi.ILoggingEvent:
    java.lang.String getThreadName() -> getThreadName
    ch.qos.logback.classic.Level getLevel() -> getLevel
    java.lang.String getMessage() -> getMessage
    java.lang.Object[] getArgumentArray() -> getArgumentArray
    java.lang.String getFormattedMessage() -> getFormattedMessage
    java.lang.String getLoggerName() -> getLoggerName
    ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextVO() -> getLoggerContextVO
    ch.qos.logback.classic.spi.IThrowableProxy getThrowableProxy() -> getThrowableProxy
    java.lang.StackTraceElement[] getCallerData() -> getCallerData
    boolean hasCallerData() -> hasCallerData
    org.slf4j.Marker getMarker() -> getMarker
    java.util.Map getMDCPropertyMap() -> getMDCPropertyMap
    long getTimeStamp() -> getTimeStamp
ch.qos.logback.classic.spi.IThrowableProxy -> ch.qos.logback.classic.spi.IThrowableProxy:
    java.lang.String getMessage() -> getMessage
    java.lang.String getClassName() -> getClassName
    ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray() -> getStackTraceElementProxyArray
    int getCommonFrames() -> getCommonFrames
    ch.qos.logback.classic.spi.IThrowableProxy getCause() -> getCause
    ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed() -> getSuppressed
ch.qos.logback.classic.spi.LoggerContextListener -> ch.qos.logback.classic.spi.LoggerContextListener:
    boolean isResetResistant() -> isResetResistant
    void onStart(ch.qos.logback.classic.LoggerContext) -> onStart
    void onReset(ch.qos.logback.classic.LoggerContext) -> onReset
    void onStop(ch.qos.logback.classic.LoggerContext) -> onStop
    void onLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level) -> onLevelChange
ch.qos.logback.classic.spi.LoggerContextVO -> ch.qos.logback.classic.spi.LoggerContextVO:
    java.lang.String name -> name
    java.util.Map propertyMap -> propertyMap
    long birthTime -> birthTime
    44:48:void <init>(ch.qos.logback.classic.LoggerContext) -> <init>
    57:57:java.lang.String getName() -> getName
    61:61:java.util.Map getPropertyMap() -> getPropertyMap
    65:65:long getBirthTime() -> getBirthTime
    70:70:java.lang.String toString() -> toString
    75:89:boolean equals(java.lang.Object) -> equals
    94:98:int hashCode() -> hashCode
ch.qos.logback.classic.spi.LoggingEvent -> ch.qos.logback.classic.spi.LoggingEvent:
    java.lang.String fqnOfLoggerClass -> fqnOfLoggerClass
    java.lang.String threadName -> threadName
    java.lang.String loggerName -> loggerName
    ch.qos.logback.classic.LoggerContext loggerContext -> loggerContext
    ch.qos.logback.classic.spi.LoggerContextVO loggerContextVO -> loggerContextVO
    ch.qos.logback.classic.Level level -> level
    java.lang.String message -> message
    java.lang.String formattedMessage -> formattedMessage
    java.lang.Object[] argumentArray -> argumentArray
    ch.qos.logback.classic.spi.ThrowableProxy throwableProxy -> throwableProxy
    java.lang.StackTraceElement[] callerDataArray -> callerDataArray
    org.slf4j.Marker marker -> marker
    java.util.Map mdcPropertyMap -> mdcPropertyMap
    long timeStamp -> timeStamp
    101:102:void <init>() -> <init>
    104:127:void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Throwable,java.lang.Object[]) -> <init>
    130:134:java.lang.Throwable extractThrowableAnRearrangeArguments(java.lang.Object[]) -> extractThrowableAnRearrangeArguments
    145:145:java.lang.Object[] getArgumentArray() -> getArgumentArray
    149:149:ch.qos.logback.classic.Level getLevel() -> getLevel
    153:153:java.lang.String getLoggerName() -> getLoggerName
    161:164:java.lang.String getThreadName() -> getThreadName
    183:183:ch.qos.logback.classic.spi.IThrowableProxy getThrowableProxy() -> getThrowableProxy
    206:210:void prepareForDeferredProcessing() -> prepareForDeferredProcessing
    213:213:ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextVO() -> getLoggerContextVO
    221:221:java.lang.String getMessage() -> getMessage
    232:232:long getTimeStamp() -> getTimeStamp
    257:261:java.lang.StackTraceElement[] getCallerData() -> getCallerData
    265:265:boolean hasCallerData() -> hasCallerData
    273:273:org.slf4j.Marker getMarker() -> getMarker
    277:281:void setMarker(org.slf4j.Marker) -> setMarker
    289:298:java.lang.String getFormattedMessage() -> getFormattedMessage
    303:314:java.util.Map getMDCPropertyMap() -> getMDCPropertyMap
    342:346:java.lang.String toString() -> toString
ch.qos.logback.classic.spi.LoggingEventVO -> ch.qos.logback.classic.spi.LoggingEventVO:
    java.lang.String threadName -> threadName
    java.lang.String loggerName -> loggerName
    ch.qos.logback.classic.spi.LoggerContextVO loggerContextVO -> loggerContextVO
    ch.qos.logback.classic.Level level -> level
    java.lang.String message -> message
    java.lang.String formattedMessage -> formattedMessage
    java.lang.Object[] argumentArray -> argumentArray
    ch.qos.logback.classic.spi.ThrowableProxyVO throwableProxy -> throwableProxy
    java.lang.StackTraceElement[] callerDataArray -> callerDataArray
    org.slf4j.Marker marker -> marker
    java.util.Map mdcPropertyMap -> mdcPropertyMap
    long timeStamp -> timeStamp
    35:35:void <init>() -> <init>
    63:79:ch.qos.logback.classic.spi.LoggingEventVO build(ch.qos.logback.classic.spi.ILoggingEvent) -> build
    83:83:java.lang.String getThreadName() -> getThreadName
    87:87:ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextVO() -> getLoggerContextVO
    91:91:java.lang.String getLoggerName() -> getLoggerName
    95:95:ch.qos.logback.classic.Level getLevel() -> getLevel
    99:99:java.lang.String getMessage() -> getMessage
    103:113:java.lang.String getFormattedMessage() -> getFormattedMessage
    117:117:java.lang.Object[] getArgumentArray() -> getArgumentArray
    121:121:ch.qos.logback.classic.spi.IThrowableProxy getThrowableProxy() -> getThrowableProxy
    125:125:java.lang.StackTraceElement[] getCallerData() -> getCallerData
    129:129:boolean hasCallerData() -> hasCallerData
    133:133:org.slf4j.Marker getMarker() -> getMarker
    137:137:long getTimeStamp() -> getTimeStamp
    149:149:java.util.Map getMDCPropertyMap() -> getMDCPropertyMap
    157:157:void prepareForDeferredProcessing() -> prepareForDeferredProcessing
    197:202:int hashCode() -> hashCode
    207:245:boolean equals(java.lang.Object) -> equals
ch.qos.logback.classic.spi.PackagingDataCalculator -> ch.qos.logback.classic.spi.PackagingDataCalculator:
    ch.qos.logback.classic.spi.StackTraceElementProxy[] STEP_ARRAY_TEMPLATE -> STEP_ARRAY_TEMPLATE
    java.util.HashMap cache -> cache
    boolean GET_CALLER_CLASS_METHOD_AVAILABLE -> GET_CALLER_CLASS_METHOD_AVAILABLE
    29:33:void <init>() -> <init>
    57:67:void calculate(ch.qos.logback.classic.spi.IThrowableProxy) -> calculate
    72:105:void populateFrames(ch.qos.logback.classic.spi.StackTraceElementProxy[]) -> populateFrames
    108:114:void populateUncommonFrames(int,ch.qos.logback.classic.spi.StackTraceElementProxy[],java.lang.ClassLoader) -> populateUncommonFrames
    117:126:ch.qos.logback.classic.spi.ClassPackagingData calculateByExactType(java.lang.Class) -> calculateByExactType
    130:140:ch.qos.logback.classic.spi.ClassPackagingData computeBySTEP(ch.qos.logback.classic.spi.StackTraceElementProxy,java.lang.ClassLoader) -> computeBySTEP
    144:156:java.lang.String getImplementationVersion(java.lang.Class) -> getImplementationVersion
    162:181:java.lang.String getCodeLocation(java.lang.Class) -> getCodeLocation
    185:192:java.lang.String getCodeLocation(java.lang.String,char) -> getCodeLocation
    196:196:boolean isFolder(int,java.lang.String) -> isFolder
    200:211:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    222:242:java.lang.Class bestEffortLoadClass(java.lang.ClassLoader,java.lang.String) -> bestEffortLoadClass
    31:54:void <clinit>() -> <clinit>
ch.qos.logback.classic.spi.PlatformInfo -> ch.qos.logback.classic.spi.PlatformInfo:
    int hasJMXObjectName -> hasJMXObjectName
    28:36:boolean hasJMXObjectName() -> hasJMXObjectName
    25:25:void <clinit>() -> <clinit>
ch.qos.logback.classic.spi.STEUtil -> ch.qos.logback.classic.spi.STEUtil:
    39:55:int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[]) -> findNumberOfCommonFrames
ch.qos.logback.classic.spi.StackTraceElementProxy -> ch.qos.logback.classic.spi.StackTraceElementProxy:
    java.lang.StackTraceElement ste -> ste
    java.lang.String steAsString -> steAsString
    ch.qos.logback.classic.spi.ClassPackagingData cpd -> cpd
    28:33:void <init>(java.lang.StackTraceElement) -> <init>
    36:39:java.lang.String getSTEAsString() -> getSTEAsString
    47:51:void setClassPackagingData(ch.qos.logback.classic.spi.ClassPackagingData) -> setClassPackagingData
    54:54:ch.qos.logback.classic.spi.ClassPackagingData getClassPackagingData() -> getClassPackagingData
    59:59:int hashCode() -> hashCode
    64:82:boolean equals(java.lang.Object) -> equals
    87:87:java.lang.String toString() -> toString
ch.qos.logback.classic.spi.ThrowableProxy -> ch.qos.logback.classic.spi.ThrowableProxy:
    java.lang.Throwable throwable -> throwable
    java.lang.String className -> className
    java.lang.String message -> message
    ch.qos.logback.classic.spi.StackTraceElementProxy[] stackTraceElementProxyArray -> stackTraceElementProxyArray
    int commonFrames -> commonFrames
    ch.qos.logback.classic.spi.ThrowableProxy cause -> cause
    ch.qos.logback.classic.spi.ThrowableProxy[] suppressed -> suppressed
    ch.qos.logback.classic.spi.PackagingDataCalculator packagingDataCalculator -> packagingDataCalculator
    boolean calculatedPackageData -> calculatedPackageData
    java.lang.reflect.Method GET_SUPPRESSED_METHOD -> GET_SUPPRESSED_METHOD
    ch.qos.logback.classic.spi.ThrowableProxy[] NO_SUPPRESSED -> NO_SUPPRESSED
    31:85:void <init>(java.lang.Throwable) -> <init>
    88:88:java.lang.Throwable getThrowable() -> getThrowable
    92:92:java.lang.String getMessage() -> getMessage
    101:101:java.lang.String getClassName() -> getClassName
    105:105:ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray() -> getStackTraceElementProxyArray
    109:109:int getCommonFrames() -> getCommonFrames
    118:118:ch.qos.logback.classic.spi.IThrowableProxy getCause() -> getCause
    122:122:ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed() -> getSuppressed
    129:132:ch.qos.logback.classic.spi.PackagingDataCalculator getPackagingDataCalculator() -> getPackagingDataCalculator
    136:144:void calculatePackagingData() -> calculatePackagingData
    39:48:void <clinit>() -> <clinit>
ch.qos.logback.classic.spi.ThrowableProxyUtil -> ch.qos.logback.classic.spi.ThrowableProxyUtil:
    44:51:ch.qos.logback.classic.spi.StackTraceElementProxy[] steArrayToStepArray(java.lang.StackTraceElement[]) -> steArrayToStepArray
    55:73:int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[]) -> findNumberOfCommonFrames
    100:103:void indent(java.lang.StringBuilder,int) -> indent
    114:126:void subjoinPackagingData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy) -> subjoinPackagingData
    175:179:void subjoinFirstLineRootCauseFirst(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinFirstLineRootCauseFirst
    182:183:void subjoinExceptionMessage(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinExceptionMessage
ch.qos.logback.classic.spi.ThrowableProxyVO -> ch.qos.logback.classic.spi.ThrowableProxyVO:
    java.lang.String className -> className
    java.lang.String message -> message
    int commonFramesCount -> commonFramesCount
    ch.qos.logback.classic.spi.StackTraceElementProxy[] stackTraceElementProxyArray -> stackTraceElementProxyArray
    ch.qos.logback.classic.spi.IThrowableProxy cause -> cause
    ch.qos.logback.classic.spi.IThrowableProxy[] suppressed -> suppressed
    19:19:void <init>() -> <init>
    31:31:java.lang.String getMessage() -> getMessage
    35:35:java.lang.String getClassName() -> getClassName
    39:39:int getCommonFrames() -> getCommonFrames
    43:43:ch.qos.logback.classic.spi.IThrowableProxy getCause() -> getCause
    47:47:ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray() -> getStackTraceElementProxyArray
    51:51:ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed() -> getSuppressed
    56:59:int hashCode() -> hashCode
    64:90:boolean equals(java.lang.Object) -> equals
    94:113:ch.qos.logback.classic.spi.ThrowableProxyVO build(ch.qos.logback.classic.spi.IThrowableProxy) -> build
ch.qos.logback.classic.spi.TurboFilterList -> ch.qos.logback.classic.spi.TurboFilterList:
    30:30:void <init>() -> <init>
    42:65:ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> getTurboFilterChainDecision
ch.qos.logback.classic.turbo.TurboFilter -> ch.qos.logback.classic.turbo.TurboFilter:
    boolean start -> start
    34:37:void <init>() -> <init>
    ch.qos.logback.core.spi.FilterReply decide(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> decide
    55:56:void start() -> start
    59:59:boolean isStarted() -> isStarted
    63:64:void stop() -> stop
ch.qos.logback.classic.util.ContextInitializer -> ch.qos.logback.classic.util.ContextInitializer:
    ch.qos.logback.classic.LoggerContext loggerContext -> loggerContext
    54:56:void <init>(ch.qos.logback.classic.LoggerContext) -> <init>
    59:79:void configureByResource(java.net.URL) -> configureByResource
    88:115:java.net.URL findConfigFileURLFromSystemProperties(java.lang.ClassLoader,boolean) -> findConfigFileURLFromSystemProperties
    119:135:java.net.URL findURLOfDefaultConfigurationFile(boolean) -> findURLOfDefaultConfigurationFile
    139:143:java.net.URL getResource(java.lang.String,java.lang.ClassLoader,boolean) -> getResource
    147:167:void autoConfig() -> autoConfig
    170:177:void statusOnResourceSearch(java.lang.String,java.lang.ClassLoader,java.net.URL) -> statusOnResourceSearch
    180:193:void multiplicityWarning(java.lang.String,java.lang.ClassLoader) -> multiplicityWarning
ch.qos.logback.classic.util.ContextSelectorStaticBinder -> ch.qos.logback.classic.util.ContextSelectorStaticBinder:
    ch.qos.logback.classic.util.ContextSelectorStaticBinder singleton -> singleton
    ch.qos.logback.classic.selector.ContextSelector contextSelector -> contextSelector
    java.lang.Object key -> key
    33:33:void <init>() -> <init>
    41:41:ch.qos.logback.classic.util.ContextSelectorStaticBinder getSingleton() -> getSingleton
    56:71:void init(ch.qos.logback.classic.LoggerContext,java.lang.Object) -> init
    91:93:ch.qos.logback.classic.selector.ContextSelector dynamicalContextSelector(ch.qos.logback.classic.LoggerContext,java.lang.String) -> dynamicalContextSelector
    97:97:ch.qos.logback.classic.selector.ContextSelector getContextSelector() -> getContextSelector
    35:35:void <clinit>() -> <clinit>
ch.qos.logback.classic.util.DefaultNestedComponentRules -> ch.qos.logback.classic.util.DefaultNestedComponentRules:
    35:44:void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> addDefaultNestedComponentRegistryRules
ch.qos.logback.classic.util.EnvUtil -> ch.qos.logback.classic.util.EnvUtil:
    java.lang.ClassLoader testServiceLoaderClassLoader -> testServiceLoaderClassLoader
    24:24:void <init>() -> <init>
    34:39:boolean isGroovyAvailable() -> isGroovyAvailable
    44:44:java.lang.ClassLoader getServiceLoaderClassLoader() -> getServiceLoaderClassLoader
    48:52:java.lang.Object loadFromServiceLoader(java.lang.Class) -> loadFromServiceLoader
    31:31:void <clinit>() -> <clinit>
ch.qos.logback.classic.util.JNDIUtil -> ch.qos.logback.classic.util.JNDIUtil:
    30:30:javax.naming.Context getInitialContext() -> getInitialContext
    34:41:java.lang.String lookup(javax.naming.Context,java.lang.String) -> lookup
ch.qos.logback.classic.util.LogbackMDCAdapter -> ch.qos.logback.classic.util.LogbackMDCAdapter:
    java.lang.ThreadLocal copyOnThreadLocal -> copyOnThreadLocal
    java.lang.ThreadLocal lastOperation -> lastOperation
    39:61:void <init>() -> <init>
    162:163:java.util.Map getPropertyMap() -> getPropertyMap
    185:189:java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
ch.qos.logback.classic.util.LoggerNameUtil -> ch.qos.logback.classic.util.LoggerNameUtil:
    39:49:int getSeparatorIndexOf(java.lang.String,int) -> getSeparatorIndexOf
ch.qos.logback.core.Appender -> ch.qos.logback.core.Appender:
    java.lang.String getName() -> getName
    void doAppend(java.lang.Object) -> doAppend
    void setName(java.lang.String) -> setName
ch.qos.logback.core.AppenderBase -> ch.qos.logback.core.AppenderBase:
    boolean started -> started
    boolean guard -> guard
    java.lang.String name -> name
    ch.qos.logback.core.spi.FilterAttachableImpl fai -> fai
    int statusRepeatCount -> statusRepeatCount
    int exceptionCount -> exceptionCount
    32:54:void <init>() -> <init>
    50:50:java.lang.String getName() -> getName
    63:91:void doAppend(java.lang.Object) -> doAppend
    void append(java.lang.Object) -> append
    99:100:void setName(java.lang.String) -> setName
    103:104:void start() -> start
    107:108:void stop() -> stop
    111:111:boolean isStarted() -> isStarted
    115:115:java.lang.String toString() -> toString
    131:131:ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object) -> getFilterChainDecision
ch.qos.logback.core.BasicStatusManager -> ch.qos.logback.core.BasicStatusManager:
    int count -> count
    java.util.List statusList -> statusList
    ch.qos.logback.core.helpers.CyclicBuffer tailBuffer -> tailBuffer
    ch.qos.logback.core.spi.LogbackLock statusListLock -> statusListLock
    int level -> level
    java.util.List statusListenerList -> statusListenerList
    ch.qos.logback.core.spi.LogbackLock statusListenerListLock -> statusListenerListLock
    26:42:void <init>() -> <init>
    59:74:void add(ch.qos.logback.core.status.Status) -> add
    77:81:java.util.List getCopyOfStatusList() -> getCopyOfStatusList
    85:90:void fireStatusAddEvent(ch.qos.logback.core.status.Status) -> fireStatusAddEvent
    113:121:boolean add(ch.qos.logback.core.status.StatusListener) -> add
    125:129:boolean checkForPresence(java.util.List,java.lang.Class) -> checkForPresence
    133:136:void remove(ch.qos.logback.core.status.StatusListener) -> remove
    139:141:java.util.List getCopyOfStatusListenerList() -> getCopyOfStatusListenerList
ch.qos.logback.core.ConsoleAppender -> ch.qos.logback.core.ConsoleAppender:
    ch.qos.logback.core.joran.spi.ConsoleTarget target -> target
    boolean withJansi -> withJansi
    38:41:void <init>() -> <init>
    76:83:void start() -> start
    87:94:java.io.OutputStream getTargetStreamForWindows(java.io.OutputStream) -> getTargetStreamForWindows
ch.qos.logback.core.Context -> ch.qos.logback.core.Context:
    ch.qos.logback.core.status.StatusManager getStatusManager() -> getStatusManager
    java.lang.Object getObject(java.lang.String) -> getObject
    void putObject(java.lang.String,java.lang.Object) -> putObject
    java.lang.String getProperty(java.lang.String) -> getProperty
    void putProperty(java.lang.String,java.lang.String) -> putProperty
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    long getBirthTime() -> getBirthTime
    java.lang.Object getConfigurationLock() -> getConfigurationLock
    java.util.concurrent.ScheduledExecutorService getScheduledExecutorService() -> getScheduledExecutorService
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    void register(ch.qos.logback.core.spi.LifeCycle) -> register
    void addScheduledFuture(java.util.concurrent.ScheduledFuture) -> addScheduledFuture
ch.qos.logback.core.ContextBase -> ch.qos.logback.core.ContextBase:
    long birthTime -> birthTime
    java.lang.String name -> name
    ch.qos.logback.core.status.StatusManager sm -> sm
    java.util.Map propertyMap -> propertyMap
    java.util.Map objectMap -> objectMap
    ch.qos.logback.core.spi.LogbackLock configurationLock -> configurationLock
    java.util.concurrent.ScheduledExecutorService scheduledExecutorService -> scheduledExecutorService
    java.util.List scheduledFutures -> scheduledFutures
    ch.qos.logback.core.LifeCycleManager lifeCycleManager -> lifeCycleManager
    boolean started -> started
    38:57:void <init>() -> <init>
    60:60:ch.qos.logback.core.status.StatusManager getStatusManager() -> getStatusManager
    82:82:java.util.Map getCopyOfPropertyMap() -> getCopyOfPropertyMap
    86:91:void putProperty(java.lang.String,java.lang.String) -> putProperty
    94:96:void initCollisionMaps() -> initCollisionMaps
    106:112:java.lang.String getProperty(java.lang.String) -> getProperty
    116:121:java.lang.String lazyGetHostname() -> lazyGetHostname
    125:131:void putHostnameProperty(java.lang.String) -> putHostnameProperty
    134:134:java.lang.Object getObject(java.lang.String) -> getObject
    138:139:void putObject(java.lang.String,java.lang.Object) -> putObject
    142:143:void removeObject(java.lang.String) -> removeObject
    146:146:java.lang.String getName() -> getName
    153:154:void start() -> start
    159:162:void stop() -> stop
    165:165:boolean isStarted() -> isStarted
    174:178:void reset() -> reset
    188:196:void setName(java.lang.String) -> setName
    199:199:long getBirthTime() -> getBirthTime
    203:203:java.lang.Object getConfigurationLock() -> getConfigurationLock
    211:211:java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    216:219:java.util.concurrent.ScheduledExecutorService getScheduledExecutorService() -> getScheduledExecutorService
    223:227:void stopExecutorService() -> stopExecutorService
    230:240:void removeShutdownHook() -> removeShutdownHook
    243:244:void register(ch.qos.logback.core.spi.LifeCycle) -> register
    259:262:ch.qos.logback.core.LifeCycleManager getLifeCycleManager() -> getLifeCycleManager
    267:267:java.lang.String toString() -> toString
    272:273:void addScheduledFuture(java.util.concurrent.ScheduledFuture) -> addScheduledFuture
ch.qos.logback.core.CoreConstants -> ch.qos.logback.core.CoreConstants:
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    int LINE_SEPARATOR_LEN -> LINE_SEPARATOR_LEN
    java.lang.String[] EMPTY_STRING_ARRAY -> EMPTY_STRING_ARRAY
    java.lang.Class[] EMPTY_CLASS_ARRAY -> EMPTY_CLASS_ARRAY
    long REFERENCE_BIPS -> REFERENCE_BIPS
    java.lang.String LEFT_ACCOLADE -> LEFT_ACCOLADE
    java.lang.String RIGHT_ACCOLADE -> RIGHT_ACCOLADE
    46:200:void <clinit>() -> <clinit>
ch.qos.logback.core.Layout -> ch.qos.logback.core.Layout:
    java.lang.String doLayout(java.lang.Object) -> doLayout
    java.lang.String getFileHeader() -> getFileHeader
    java.lang.String getPresentationHeader() -> getPresentationHeader
    java.lang.String getPresentationFooter() -> getPresentationFooter
    java.lang.String getFileFooter() -> getFileFooter
ch.qos.logback.core.LayoutBase -> ch.qos.logback.core.LayoutBase:
    boolean started -> started
    java.lang.String fileHeader -> fileHeader
    java.lang.String fileFooter -> fileFooter
    java.lang.String presentationHeader -> presentationHeader
    java.lang.String presentationFooter -> presentationFooter
    18:18:void <init>() -> <init>
    28:29:void setContext(ch.qos.logback.core.Context) -> setContext
    32:32:ch.qos.logback.core.Context getContext() -> getContext
    36:37:void start() -> start
    40:41:void stop() -> stop
    44:44:boolean isStarted() -> isStarted
    48:48:java.lang.String getFileHeader() -> getFileHeader
    52:52:java.lang.String getPresentationHeader() -> getPresentationHeader
    56:56:java.lang.String getPresentationFooter() -> getPresentationFooter
    60:60:java.lang.String getFileFooter() -> getFileFooter
ch.qos.logback.core.LifeCycleManager -> ch.qos.logback.core.LifeCycleManager:
    java.util.Set components -> components
    28:30:void <init>() -> <init>
    38:39:void register(ch.qos.logback.core.spi.LifeCycle) -> register
    47:53:void reset() -> reset
ch.qos.logback.core.LogbackException -> ch.qos.logback.core.LogbackException:
    21:22:void <init>(java.lang.String) -> <init>
    25:26:void <init>(java.lang.String,java.lang.Throwable) -> <init>
ch.qos.logback.core.OutputStreamAppender -> ch.qos.logback.core.OutputStreamAppender:
    ch.qos.logback.core.encoder.Encoder encoder -> encoder
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.io.OutputStream outputStream -> outputStream
    boolean immediateFlush -> immediateFlush
    36:54:void <init>() -> <init>
    70:84:void start() -> start
    98:103:void append(java.lang.Object) -> append
    113:120:void stop() -> stop
    126:136:void closeOutputStream() -> closeOutputStream
    139:148:void encoderClose() -> encoderClose
    161:175:void setOutputStream(java.io.OutputStream) -> setOutputStream
    178:187:void encoderInit() -> encoderInit
    194:206:void writeBytes(byte[]) -> writeBytes
    217:239:void subAppend(java.lang.Object) -> subAppend
    246:247:void setEncoder(ch.qos.logback.core.encoder.Encoder) -> setEncoder
    254:255:void setImmediateFlush(boolean) -> setImmediateFlush
ch.qos.logback.core.UnsynchronizedAppenderBase -> ch.qos.logback.core.UnsynchronizedAppenderBase:
    boolean started -> started
    java.lang.ThreadLocal guard -> guard
    java.lang.String name -> name
    ch.qos.logback.core.spi.FilterAttachableImpl fai -> fai
    int statusRepeatCount -> statusRepeatCount
    int exceptionCount -> exceptionCount
    31:56:void <init>() -> <init>
    52:52:java.lang.String getName() -> getName
    65:93:void doAppend(java.lang.Object) -> doAppend
    void append(java.lang.Object) -> append
    101:102:void setName(java.lang.String) -> setName
    105:106:void start() -> start
    109:110:void stop() -> stop
    113:113:boolean isStarted() -> isStarted
    117:117:java.lang.String toString() -> toString
    133:133:ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object) -> getFilterChainDecision
ch.qos.logback.core.boolex.EvaluationException -> ch.qos.logback.core.boolex.EvaluationException:
    30:31:void <init>(java.lang.String,java.lang.Throwable) -> <init>
ch.qos.logback.core.boolex.EventEvaluator -> ch.qos.logback.core.boolex.EventEvaluator:
    boolean evaluate(java.lang.Object) -> evaluate
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
ch.qos.logback.core.boolex.EventEvaluatorBase -> ch.qos.logback.core.boolex.EventEvaluatorBase:
    java.lang.String name -> name
    boolean started -> started
    18:18:void <init>() -> <init>
    24:24:java.lang.String getName() -> getName
    28:32:void setName(java.lang.String) -> setName
    35:35:boolean isStarted() -> isStarted
    39:40:void start() -> start
    43:44:void stop() -> stop
ch.qos.logback.core.boolex.JaninoEventEvaluatorBase -> ch.qos.logback.core.boolex.JaninoEventEvaluatorBase:
    java.lang.Class EXPRESSION_TYPE -> EXPRESSION_TYPE
    java.lang.Class[] THROWN_EXCEPTIONS -> THROWN_EXCEPTIONS
    java.lang.String expression -> expression
    org.codehaus.janino.ScriptEvaluator scriptEvaluator -> scriptEvaluator
    int errorCount -> errorCount
    java.util.List matcherList -> matcherList
    boolean $assertionsDisabled -> $assertionsDisabled
    28:51:void <init>() -> <init>
    java.lang.String getDecoratedExpression() -> getDecoratedExpression
    java.lang.String[] getParameterNames() -> getParameterNames
    java.lang.Class[] getParameterTypes() -> getParameterTypes
    java.lang.Object[] getParameterValues(java.lang.Object) -> getParameterValues
    56:62:void start() -> start
    65:76:boolean evaluate(java.lang.Object) -> evaluate
    81:81:java.lang.String getExpression() -> getExpression
    28:36:void <clinit>() -> <clinit>
ch.qos.logback.core.boolex.Matcher -> ch.qos.logback.core.boolex.Matcher:
    java.lang.String regex -> regex
    java.lang.String name -> name
    boolean caseSensitive -> caseSensitive
    boolean canonEq -> canonEq
    boolean unicodeCase -> unicodeCase
    boolean start -> start
    java.util.regex.Pattern pattern -> pattern
    22:30:void <init>() -> <init>
    42:65:void start() -> start
    68:69:void stop() -> stop
    72:72:boolean isStarted() -> isStarted
    119:119:java.lang.String getName() -> getName
ch.qos.logback.core.encoder.Encoder -> ch.qos.logback.core.encoder.Encoder:
    byte[] headerBytes() -> headerBytes
    byte[] encode(java.lang.Object) -> encode
    byte[] footerBytes() -> footerBytes
ch.qos.logback.core.encoder.EncoderBase -> ch.qos.logback.core.encoder.EncoderBase:
    boolean started -> started
    18:18:void <init>() -> <init>
    23:23:boolean isStarted() -> isStarted
    27:28:void start() -> start
    31:32:void stop() -> stop
ch.qos.logback.core.encoder.LayoutWrappingEncoder -> ch.qos.logback.core.encoder.LayoutWrappingEncoder:
    ch.qos.logback.core.Layout layout -> layout
    java.nio.charset.Charset charset -> charset
    ch.qos.logback.core.Appender parent -> parent
    java.lang.Boolean immediateFlush -> immediateFlush
    23:37:void <init>() -> <init>
    44:45:void setLayout(ch.qos.logback.core.Layout) -> setLayout
    80:92:byte[] headerBytes() -> headerBytes
    97:103:byte[] footerBytes() -> footerBytes
    107:110:byte[] convertToBytes(java.lang.String) -> convertToBytes
    115:116:byte[] encode(java.lang.Object) -> encode
    120:120:boolean isStarted() -> isStarted
    124:135:void start() -> start
    138:139:void stop() -> stop
    142:145:void appendIfNotNull(java.lang.StringBuilder,java.lang.String) -> appendIfNotNull
ch.qos.logback.core.filter.AbstractMatcherFilter -> ch.qos.logback.core.filter.AbstractMatcherFilter:
    ch.qos.logback.core.spi.FilterReply onMatch -> onMatch
    ch.qos.logback.core.spi.FilterReply onMismatch -> onMismatch
    18:21:void <init>() -> <init>
ch.qos.logback.core.filter.EvaluatorFilter -> ch.qos.logback.core.filter.EvaluatorFilter:
    ch.qos.logback.core.boolex.EventEvaluator evaluator -> evaluator
    37:37:void <init>() -> <init>
    43:48:void start() -> start
    61:72:ch.qos.logback.core.spi.FilterReply decide(java.lang.Object) -> decide
ch.qos.logback.core.filter.Filter -> ch.qos.logback.core.filter.Filter:
    java.lang.String name -> name
    boolean start -> start
    31:35:void <init>() -> <init>
    38:39:void start() -> start
    42:42:boolean isStarted() -> isStarted
    46:47:void stop() -> stop
    ch.qos.logback.core.spi.FilterReply decide(java.lang.Object) -> decide
    62:62:java.lang.String getName() -> getName
ch.qos.logback.core.helpers.CyclicBuffer -> ch.qos.logback.core.helpers.CyclicBuffer:
    java.lang.Object[] ea -> ea
    int first -> first
    int last -> last
    int numElems -> numElems
    int maxSize -> maxSize
    43:48:void <init>(int) -> <init>
    61:66:void init(int) -> init
    80:88:void add(java.lang.Object) -> add
    96:99:java.lang.Object get(int) -> get
    123:127:java.util.List asList() -> asList
    135:135:int length() -> length
ch.qos.logback.core.helpers.NOPAppender -> ch.qos.logback.core.helpers.NOPAppender:
    18:18:void <init>() -> <init>
    22:22:void append(java.lang.Object) -> append
ch.qos.logback.core.helpers.ThrowableToStringArray -> ch.qos.logback.core.helpers.ThrowableToStringArray:
    24:26:java.lang.String[] convert(java.lang.Throwable) -> convert
    32:48:void extract(java.util.List,java.lang.Throwable,java.lang.StackTraceElement[]) -> extract
    51:60:java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[]) -> formatFirstLine
    64:80:int findNumberOfCommonFrames(java.lang.StackTraceElement[],java.lang.StackTraceElement[]) -> findNumberOfCommonFrames
ch.qos.logback.core.hook.ShutdownHook -> ch.qos.logback.core.hook.ShutdownHook:
ch.qos.logback.core.hook.ShutdownHookBase -> ch.qos.logback.core.hook.ShutdownHookBase:
    27:28:void <init>() -> <init>
ch.qos.logback.core.joran.GenericConfigurator -> ch.qos.logback.core.joran.GenericConfigurator:
    ch.qos.logback.core.joran.util.beans.BeanDescriptionCache beanDescriptionCache -> beanDescriptionCache
    ch.qos.logback.core.joran.spi.Interpreter interpreter -> interpreter
    37:37:void <init>() -> <init>
    44:69:void doConfigure(java.net.URL) -> doConfigure
    100:101:void informContextOfURLUsedForConfiguration(ch.qos.logback.core.Context,java.net.URL) -> informContextOfURLUsedForConfiguration
    108:111:void doConfigure(java.io.InputStream,java.lang.String) -> doConfigure
    114:117:ch.qos.logback.core.joran.util.beans.BeanDescriptionCache getBeanDescriptionCache() -> getBeanDescriptionCache
    void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> addInstanceRules
    void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter) -> addImplicitRules
    126:126:void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> addDefaultNestedComponentRegistryRules
    129:129:ch.qos.logback.core.joran.spi.ElementPath initialElementPath() -> initialElementPath
    133:140:void buildInterpreter() -> buildInterpreter
    146:159:void doConfigure(org.xml.sax.InputSource) -> doConfigure
    162:167:void doConfigure(java.util.List) -> doConfigure
    176:177:void registerSafeConfiguration(java.util.List) -> registerSafeConfiguration
    184:184:java.util.List recallSafeConfiguration() -> recallSafeConfiguration
ch.qos.logback.core.joran.JoranConfiguratorBase -> ch.qos.logback.core.joran.JoranConfiguratorBase:
    52:52:void <init>() -> <init>
    58:79:void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> addInstanceRules
    84:91:void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter) -> addImplicitRules
    95:99:void buildInterpreter() -> buildInterpreter
ch.qos.logback.core.joran.action.AbstractEventEvaluatorAction -> ch.qos.logback.core.joran.action.AbstractEventEvaluatorAction:
    ch.qos.logback.core.boolex.EventEvaluator evaluator -> evaluator
    boolean inError -> inError
    26:29:void <init>() -> <init>
    36:71:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    java.lang.String defaultClassName() -> defaultClassName
    86:113:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.Action -> ch.qos.logback.core.joran.action.Action:
    38:38:void <init>() -> <init>
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    64:64:void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> body
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    73:73:java.lang.String toString() -> toString
    77:82:int getColumnNumber(ch.qos.logback.core.joran.spi.InterpretationContext) -> getColumnNumber
    86:91:int getLineNumber(ch.qos.logback.core.joran.spi.InterpretationContext) -> getLineNumber
    95:95:java.lang.String getLineColStr(ch.qos.logback.core.joran.spi.InterpretationContext) -> getLineColStr
ch.qos.logback.core.joran.action.ActionUtil -> ch.qos.logback.core.joran.action.ActionUtil:
    34:39:ch.qos.logback.core.joran.action.ActionUtil$Scope stringToScope(java.lang.String) -> stringToScope
    43:53:void setProperty(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,java.lang.String,ch.qos.logback.core.joran.action.ActionUtil$Scope) -> setProperty
    60:71:void setProperties(ch.qos.logback.core.joran.spi.InterpretationContext,java.util.Properties,ch.qos.logback.core.joran.action.ActionUtil$Scope) -> setProperties
ch.qos.logback.core.joran.action.ActionUtil$1 -> ch.qos.logback.core.joran.action.ActionUtil$1:
    int[] $SwitchMap$ch$qos$logback$core$joran$action$ActionUtil$Scope -> $SwitchMap$ch$qos$logback$core$joran$action$ActionUtil$Scope
    43:43:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.ActionUtil$Scope -> ch.qos.logback.core.joran.action.ActionUtil$Scope:
    ch.qos.logback.core.joran.action.ActionUtil$Scope LOCAL -> LOCAL
    ch.qos.logback.core.joran.action.ActionUtil$Scope CONTEXT -> CONTEXT
    ch.qos.logback.core.joran.action.ActionUtil$Scope SYSTEM -> SYSTEM
    ch.qos.logback.core.joran.action.ActionUtil$Scope[] $VALUES -> $VALUES
    24:24:ch.qos.logback.core.joran.action.ActionUtil$Scope[] values() -> values
    24:24:ch.qos.logback.core.joran.action.ActionUtil$Scope valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:25:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.AppenderAction -> ch.qos.logback.core.joran.action.AppenderAction:
    ch.qos.logback.core.Appender appender -> appender
    boolean inError -> inError
    26:28:void <init>() -> <init>
    39:78:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    85:100:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.AppenderRefAction -> ch.qos.logback.core.joran.action.AppenderRefAction:
    boolean inError -> inError
    26:27:void <init>() -> <init>
    32:71:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    74:74:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.ContextPropertyAction -> ch.qos.logback.core.joran.action.ContextPropertyAction:
    24:24:void <init>() -> <init>
    28:29:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    33:33:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.ConversionRuleAction -> ch.qos.logback.core.joran.action.ConversionRuleAction:
    boolean inError -> inError
    25:26:void <init>() -> <init>
    35:71:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    78:78:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.DefinePropertyAction -> ch.qos.logback.core.joran.action.DefinePropertyAction:
    java.lang.String scopeStr -> scopeStr
    ch.qos.logback.core.joran.action.ActionUtil$Scope scope -> scope
    java.lang.String propertyName -> propertyName
    ch.qos.logback.core.spi.PropertyDefiner definer -> definer
    boolean inError -> inError
    31:31:void <init>() -> <init>
    41:80:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    87:105:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.IADataForBasicProperty -> ch.qos.logback.core.joran.action.IADataForBasicProperty:
    ch.qos.logback.core.joran.util.PropertySetter parentBean -> parentBean
    ch.qos.logback.core.util.AggregationType aggregationType -> aggregationType
    java.lang.String propertyName -> propertyName
    30:34:void <init>(ch.qos.logback.core.joran.util.PropertySetter,ch.qos.logback.core.util.AggregationType,java.lang.String) -> <init>
ch.qos.logback.core.joran.action.IADataForComplexProperty -> ch.qos.logback.core.joran.action.IADataForComplexProperty:
    ch.qos.logback.core.joran.util.PropertySetter parentBean -> parentBean
    ch.qos.logback.core.util.AggregationType aggregationType -> aggregationType
    java.lang.String complexPropertyName -> complexPropertyName
    java.lang.Object nestedComplexProperty -> nestedComplexProperty
    boolean inError -> inError
    31:35:void <init>(ch.qos.logback.core.joran.util.PropertySetter,ch.qos.logback.core.util.AggregationType,java.lang.String) -> <init>
    38:38:ch.qos.logback.core.util.AggregationType getAggregationType() -> getAggregationType
    42:42:java.lang.Object getNestedComplexProperty() -> getNestedComplexProperty
    46:46:java.lang.String getComplexPropertyName() -> getComplexPropertyName
    50:51:void setNestedComplexProperty(java.lang.Object) -> setNestedComplexProperty
ch.qos.logback.core.joran.action.ImplicitAction -> ch.qos.logback.core.joran.action.ImplicitAction:
    30:30:void <init>() -> <init>
    boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> isApplicable
ch.qos.logback.core.joran.action.IncludeAction -> ch.qos.logback.core.joran.action.IncludeAction:
    java.lang.String attributeInUse -> attributeInUse
    boolean optional -> optional
    35:35:void <init>() -> <init>
    49:75:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    78:84:void close(java.io.InputStream) -> close
    87:112:boolean checkAttributes(org.xml.sax.Attributes) -> checkAttributes
    117:121:java.net.URL attributeToURL(java.lang.String) -> attributeToURL
    127:130:java.io.InputStream openURL(java.net.URL) -> openURL
    135:140:java.net.URL resourceAsURL(java.lang.String) -> resourceAsURL
    144:147:void optionalWarning(java.lang.String) -> optionalWarning
    150:156:java.net.URL filePathAsURL(java.lang.String) -> filePathAsURL
    161:180:java.net.URL getInputURL(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes) -> getInputURL
    185:190:java.io.InputStream getInputStream(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes) -> getInputStream
    197:212:void trimHeadAndTail(ch.qos.logback.core.joran.event.SaxEventRecorder) -> trimHeadAndTail
    215:217:void parseAndRecord(java.io.InputStream,ch.qos.logback.core.joran.event.SaxEventRecorder) -> parseAndRecord
    222:222:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.NOPAction -> ch.qos.logback.core.joran.action.NOPAction:
    28:28:void <init>() -> <init>
    31:31:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    34:34:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.NestedBasicPropertyIA -> ch.qos.logback.core.joran.action.NestedBasicPropertyIA:
    java.util.Stack actionDataStack -> actionDataStack
    ch.qos.logback.core.joran.util.beans.BeanDescriptionCache beanDescriptionCache -> beanDescriptionCache
    42:48:void <init>(ch.qos.logback.core.joran.util.beans.BeanDescriptionCache) -> <init>
    53:80:boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> isApplicable
    86:86:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    90:103:void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> body
    107:108:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.NestedBasicPropertyIA$1 -> ch.qos.logback.core.joran.action.NestedBasicPropertyIA$1:
    int[] $SwitchMap$ch$qos$logback$core$util$AggregationType -> $SwitchMap$ch$qos$logback$core$util$AggregationType
    66:66:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.NestedComplexPropertyIA -> ch.qos.logback.core.joran.action.NestedComplexPropertyIA:
    java.util.Stack actionDataStack -> actionDataStack
    ch.qos.logback.core.joran.util.beans.BeanDescriptionCache beanDescriptionCache -> beanDescriptionCache
    47:53:void <init>(ch.qos.logback.core.joran.util.beans.BeanDescriptionCache) -> <init>
    57:85:boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> isApplicable
    92:137:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    143:183:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.NestedComplexPropertyIA$1 -> ch.qos.logback.core.joran.action.NestedComplexPropertyIA$1:
    int[] $SwitchMap$ch$qos$logback$core$util$AggregationType -> $SwitchMap$ch$qos$logback$core$util$AggregationType
    70:70:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.NewRuleAction -> ch.qos.logback.core.joran.action.NewRuleAction:
    boolean inError -> inError
    22:23:void <init>() -> <init>
    30:57:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    64:64:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.ParamAction -> ch.qos.logback.core.joran.action.ParamAction:
    java.lang.String NO_NAME -> NO_NAME
    java.lang.String NO_VALUE -> NO_VALUE
    boolean inError -> inError
    ch.qos.logback.core.joran.util.beans.BeanDescriptionCache beanDescriptionCache -> beanDescriptionCache
    25:30:void <init>(ch.qos.logback.core.joran.util.beans.BeanDescriptionCache) -> <init>
    33:62:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    65:65:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    23:24:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.PropertyAction -> ch.qos.logback.core.joran.action.PropertyAction:
    java.lang.String INVALID_ATTRIBUTES -> INVALID_ATTRIBUTES
    41:41:void <init>() -> <init>
    55:100:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    103:107:void loadAndSetProperties(ch.qos.logback.core.joran.spi.InterpretationContext,java.io.InputStream,ch.qos.logback.core.joran.action.ActionUtil$Scope) -> loadAndSetProperties
    110:115:boolean checkFileAttributeSanity(org.xml.sax.Attributes) -> checkFileAttributeSanity
    119:124:boolean checkResourceAttributeSanity(org.xml.sax.Attributes) -> checkResourceAttributeSanity
    128:133:boolean checkValueNameAttributesSanity(org.xml.sax.Attributes) -> checkValueNameAttributesSanity
    137:137:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    45:45:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.ShutdownHookAction -> ch.qos.logback.core.joran.action.ShutdownHookAction:
    ch.qos.logback.core.hook.ShutdownHookBase hook -> hook
    boolean inError -> inError
    29:29:void <init>() -> <init>
    42:64:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    72:87:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.StatusListenerAction -> ch.qos.logback.core.joran.action.StatusListenerAction:
    boolean inError -> inError
    java.lang.Boolean effectivelyAdded -> effectivelyAdded
    ch.qos.logback.core.status.StatusListener statusListener -> statusListener
    25:29:void <init>() -> <init>
    32:55:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    61:73:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    76:78:boolean isEffectivelyAdded() -> isEffectivelyAdded
ch.qos.logback.core.joran.action.TimestampAction -> ch.qos.logback.core.joran.action.TimestampAction:
    java.lang.String DATE_PATTERN_ATTRIBUTE -> DATE_PATTERN_ATTRIBUTE
    java.lang.String TIME_REFERENCE_ATTRIBUTE -> TIME_REFERENCE_ATTRIBUTE
    java.lang.String CONTEXT_BIRTH -> CONTEXT_BIRTH
    boolean inError -> inError
    32:37:void <init>() -> <init>
    41:73:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    77:77:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    33:35:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.conditional.Condition -> ch.qos.logback.core.joran.conditional.Condition:
    boolean evaluate() -> evaluate
ch.qos.logback.core.joran.conditional.ElseAction -> ch.qos.logback.core.joran.conditional.ElseAction:
    20:20:void <init>() -> <init>
    24:26:void registerEventList(ch.qos.logback.core.joran.conditional.IfAction,java.util.List) -> registerEventList
ch.qos.logback.core.joran.conditional.IfAction -> ch.qos.logback.core.joran.conditional.IfAction:
    java.util.Stack stack -> stack
    30:36:void <init>() -> <init>
    41:75:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    80:115:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    118:124:void setThenSaxEventList(java.util.List) -> setThenSaxEventList
    127:134:void setElseSaxEventList(java.util.List) -> setElseSaxEventList
    137:141:boolean isActive() -> isActive
ch.qos.logback.core.joran.conditional.IfState -> ch.qos.logback.core.joran.conditional.IfState:
    java.lang.Boolean boolResult -> boolResult
    java.util.List thenSaxEventList -> thenSaxEventList
    java.util.List elseSaxEventList -> elseSaxEventList
    boolean active -> active
    145:145:void <init>() -> <init>
ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilder -> ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilder:
    java.lang.String SCRIPT_PREFIX -> SCRIPT_PREFIX
    java.lang.String SCRIPT_SUFFIX -> SCRIPT_SUFFIX
    ch.qos.logback.core.spi.PropertyContainer localPropContainer -> localPropContainer
    java.util.Map map -> map
    34:38:void <init>(ch.qos.logback.core.spi.PropertyContainer) -> <init>
    43:54:ch.qos.logback.core.joran.conditional.Condition build(java.lang.String) -> build
    29:30:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.conditional.PropertyWrapperForScripts -> ch.qos.logback.core.joran.conditional.PropertyWrapperForScripts:
    19:19:void <init>() -> <init>
ch.qos.logback.core.joran.conditional.ThenAction -> ch.qos.logback.core.joran.conditional.ThenAction:
    20:20:void <init>() -> <init>
    24:25:void registerEventList(ch.qos.logback.core.joran.conditional.IfAction,java.util.List) -> registerEventList
ch.qos.logback.core.joran.conditional.ThenActionState -> ch.qos.logback.core.joran.conditional.ThenActionState:
    java.util.List eventList -> eventList
    boolean isRegistered -> isRegistered
    82:85:void <init>() -> <init>
    88:89:void inPlay(ch.qos.logback.core.joran.event.SaxEvent) -> inPlay
ch.qos.logback.core.joran.conditional.ThenOrElseActionBase -> ch.qos.logback.core.joran.conditional.ThenOrElseActionBase:
    java.util.Stack stateStack -> stateStack
    28:30:void <init>() -> <init>
    35:44:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    47:51:boolean weAreActive(ch.qos.logback.core.joran.spi.InterpretationContext) -> weAreActive
    56:71:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    void registerEventList(ch.qos.logback.core.joran.conditional.IfAction,java.util.List) -> registerEventList
    76:78:void removeFirstAndLastFromList(java.util.List) -> removeFirstAndLastFromList
ch.qos.logback.core.joran.event.BodyEvent -> ch.qos.logback.core.joran.event.BodyEvent:
    java.lang.String text -> text
    23:25:void <init>(java.lang.String,org.xml.sax.Locator) -> <init>
    33:36:java.lang.String getText() -> getText
    41:41:java.lang.String toString() -> toString
    45:46:void append(java.lang.String) -> append
ch.qos.logback.core.joran.event.EndEvent -> ch.qos.logback.core.joran.event.EndEvent:
    21:22:void <init>(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Locator) -> <init>
    26:26:java.lang.String toString() -> toString
ch.qos.logback.core.joran.event.InPlayListener -> ch.qos.logback.core.joran.event.InPlayListener:
    void inPlay(ch.qos.logback.core.joran.event.SaxEvent) -> inPlay
ch.qos.logback.core.joran.event.SaxEvent -> ch.qos.logback.core.joran.event.SaxEvent:
    java.lang.String namespaceURI -> namespaceURI
    java.lang.String localName -> localName
    java.lang.String qName -> qName
    org.xml.sax.Locator locator -> locator
    26:32:void <init>(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Locator) -> <init>
    35:35:java.lang.String getLocalName() -> getLocalName
    39:39:org.xml.sax.Locator getLocator() -> getLocator
    47:47:java.lang.String getQName() -> getQName
ch.qos.logback.core.joran.event.SaxEventRecorder -> ch.qos.logback.core.joran.event.SaxEventRecorder:
    ch.qos.logback.core.spi.ContextAwareImpl cai -> cai
    java.util.List saxEventList -> saxEventList
    org.xml.sax.Locator locator -> locator
    ch.qos.logback.core.joran.spi.ElementPath globalElementPath -> globalElementPath
    44:50:void <init>(ch.qos.logback.core.Context) -> <init>
    53:54:void recordEvents(java.io.InputStream) -> recordEvents
    57:69:java.util.List recordEvents(org.xml.sax.InputSource) -> recordEvents
    73:74:void handleError(java.lang.String,java.lang.Throwable) -> handleError
    79:86:javax.xml.parsers.SAXParser buildSaxParser() -> buildSaxParser
    91:91:void startDocument() -> startDocument
    94:94:org.xml.sax.Locator getLocator() -> getLocator
    98:99:void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    103:107:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    110:121:void characters(char[],int,int) -> characters
    124:125:boolean isSpaceOnly(java.lang.String) -> isSpaceOnly
    129:133:ch.qos.logback.core.joran.event.SaxEvent getLastEvent() -> getLastEvent
    137:139:void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    142:146:java.lang.String getTagName(java.lang.String,java.lang.String) -> getTagName
    150:153:void error(org.xml.sax.SAXParseException) -> error
    156:158:void fatalError(org.xml.sax.SAXParseException) -> fatalError
    161:162:void warning(org.xml.sax.SAXParseException) -> warning
    165:166:void addError(java.lang.String) -> addError
    169:170:void addError(java.lang.String,java.lang.Throwable) -> addError
    189:190:void addWarn(java.lang.String,java.lang.Throwable) -> addWarn
    197:198:void setContext(ch.qos.logback.core.Context) -> setContext
ch.qos.logback.core.joran.event.StartEvent -> ch.qos.logback.core.joran.event.StartEvent:
    org.xml.sax.Attributes attributes -> attributes
    ch.qos.logback.core.joran.spi.ElementPath elementPath -> elementPath
    27:31:void <init>(ch.qos.logback.core.joran.spi.ElementPath,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,org.xml.sax.Locator) -> <init>
    39:53:java.lang.String toString() -> toString
ch.qos.logback.core.joran.spi.ActionException -> ch.qos.logback.core.joran.spi.ActionException:
    27:28:void <init>() -> <init>
    31:32:void <init>(java.lang.Throwable) -> <init>
ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport -> ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport:
    336:337:void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter) -> <init>
    341:346:java.lang.Object getOrigin() -> getOrigin
ch.qos.logback.core.joran.spi.ConfigurationWatchList -> ch.qos.logback.core.joran.spi.ConfigurationWatchList:
    java.net.URL mainURL -> mainURL
    java.util.List fileWatchList -> fileWatchList
    java.util.List lastModifiedList -> lastModifiedList
    27:31:void <init>() -> <init>
    34:38:ch.qos.logback.core.joran.spi.ConfigurationWatchList buildClone() -> buildClone
    42:45:void clear() -> clear
    53:56:void setMainURL(java.net.URL) -> setMainURL
    59:64:void addAsFileToWatch(java.net.URL) -> addAsFileToWatch
    67:68:void addToWatchList(java.net.URL) -> addToWatchList
    71:71:java.net.URL getMainURL() -> getMainURL
    75:75:java.util.List getCopyOfFileWatchList() -> getCopyOfFileWatchList
    79:87:boolean changeDetected() -> changeDetected
    93:98:java.io.File convertToFile(java.net.URL) -> convertToFile
ch.qos.logback.core.joran.spi.ConsoleTarget -> ch.qos.logback.core.joran.spi.ConsoleTarget:
    ch.qos.logback.core.joran.spi.ConsoleTarget SystemOut -> SystemOut
    ch.qos.logback.core.joran.spi.ConsoleTarget SystemErr -> SystemErr
    java.lang.String name -> name
    java.io.OutputStream stream -> stream
    ch.qos.logback.core.joran.spi.ConsoleTarget[] $VALUES -> $VALUES
    27:27:ch.qos.logback.core.joran.spi.ConsoleTarget[] values() -> values
    27:27:ch.qos.logback.core.joran.spi.ConsoleTarget valueOf(java.lang.String) -> valueOf
    85:88:void <init>(java.lang.String,int,java.lang.String,java.io.OutputStream) -> <init>
    95:95:java.io.OutputStream getStream() -> getStream
    100:100:java.lang.String toString() -> toString
    27:51:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.spi.ConsoleTarget$1 -> ch.qos.logback.core.joran.spi.ConsoleTarget$1:
    29:29:void <init>() -> <init>
    32:33:void write(int) -> write
    37:38:void write(byte[]) -> write
    42:43:void write(byte[],int,int) -> write
    47:48:void flush() -> flush
ch.qos.logback.core.joran.spi.ConsoleTarget$2 -> ch.qos.logback.core.joran.spi.ConsoleTarget$2:
    51:51:void <init>() -> <init>
    54:55:void write(int) -> write
    59:60:void write(byte[]) -> write
    64:65:void write(byte[],int,int) -> write
    69:70:void flush() -> flush
ch.qos.logback.core.joran.spi.DefaultClass -> ch.qos.logback.core.joran.spi.DefaultClass:
    java.lang.Class value() -> value
ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry -> ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry:
    java.util.Map defaultComponentMap -> defaultComponentMap
    25:27:void <init>() -> <init>
    30:32:void add(java.lang.Class,java.lang.String,java.lang.Class) -> add
    35:43:java.lang.Class findDefaultComponentType(java.lang.Class,java.lang.String) -> findDefaultComponentType
    47:48:java.lang.Class oneShotFind(java.lang.Class,java.lang.String) -> oneShotFind
ch.qos.logback.core.joran.spi.ElementPath -> ch.qos.logback.core.joran.spi.ElementPath:
    java.util.ArrayList partList -> partList
    27:30:void <init>() -> <init>
    27:34:void <init>(java.util.List) -> <init>
    27:55:void <init>(java.lang.String) -> <init>
    58:60:ch.qos.logback.core.joran.spi.ElementPath duplicate() -> duplicate
    66:85:boolean equals(java.lang.Object) -> equals
    89:89:boolean equalityCheck(java.lang.String,java.lang.String) -> equalityCheck
    93:93:java.util.List getCopyOfPartList() -> getCopyOfPartList
    97:98:void push(java.lang.String) -> push
    101:101:java.lang.String get(int) -> get
    105:108:void pop() -> pop
    111:115:java.lang.String peekLast() -> peekLast
    120:120:int size() -> size
    124:128:java.lang.String toStableString() -> toStableString
    133:133:java.lang.String toString() -> toString
ch.qos.logback.core.joran.spi.ElementSelector -> ch.qos.logback.core.joran.spi.ElementSelector:
    31:32:void <init>() -> <init>
    35:36:void <init>(java.util.List) -> <init>
    45:46:void <init>(java.lang.String) -> <init>
    49:60:boolean fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath) -> fullPathMatch
    69:95:int getTailMatchLength(ch.qos.logback.core.joran.spi.ElementPath) -> getTailMatchLength
    99:102:boolean isContainedIn(ch.qos.logback.core.joran.spi.ElementPath) -> isContainedIn
    111:137:int getPrefixMatchLength(ch.qos.logback.core.joran.spi.ElementPath) -> getPrefixMatchLength
    141:141:boolean equalityCheck(java.lang.String,java.lang.String) -> equalityCheck
    146:165:boolean equals(java.lang.Object) -> equals
    170:178:int hashCode() -> hashCode
ch.qos.logback.core.joran.spi.EventPlayer -> ch.qos.logback.core.joran.spi.EventPlayer:
    ch.qos.logback.core.joran.spi.Interpreter interpreter -> interpreter
    java.util.List eventList -> eventList
    int currentIndex -> currentIndex
    30:32:void <init>(ch.qos.logback.core.joran.spi.Interpreter) -> <init>
    44:66:void play(java.util.List) -> play
    69:70:void addEventsDynamically(java.util.List,int) -> addEventsDynamically
ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble -> ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble:
    java.lang.Class hostClass -> hostClass
    java.lang.String propertyName -> propertyName
    31:34:void <init>(java.lang.Class,java.lang.String) -> <init>
    46:50:int hashCode() -> hashCode
    55:72:boolean equals(java.lang.Object) -> equals
ch.qos.logback.core.joran.spi.InterpretationContext -> ch.qos.logback.core.joran.spi.InterpretationContext:
    java.util.Stack objectStack -> objectStack
    java.util.Map objectMap -> objectMap
    java.util.Map propertiesMap -> propertiesMap
    ch.qos.logback.core.joran.spi.Interpreter joranInterpreter -> joranInterpreter
    java.util.List listenerList -> listenerList
    ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry defaultNestedComponentRegistry -> defaultNestedComponentRegistry
    47:56:void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter) -> <init>
    59:59:ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry getDefaultNestedComponentRegistry() -> getDefaultNestedComponentRegistry
    63:63:java.util.Map getCopyOfPropertyMap() -> getCopyOfPropertyMap
    67:68:void setPropertiesMap(java.util.Map) -> setPropertiesMap
    85:85:ch.qos.logback.core.joran.spi.Interpreter getJoranInterpreter() -> getJoranInterpreter
    93:93:boolean isEmpty() -> isEmpty
    97:97:java.lang.Object peekObject() -> peekObject
    101:102:void pushObject(java.lang.Object) -> pushObject
    105:105:java.lang.Object popObject() -> popObject
    113:113:java.util.Map getObjectMap() -> getObjectMap
    121:127:void addSubstitutionProperty(java.lang.String,java.lang.String) -> addSubstitutionProperty
    130:138:void addSubstitutionProperties(java.util.Properties) -> addSubstitutionProperties
    145:149:java.lang.String getProperty(java.lang.String) -> getProperty
    154:157:java.lang.String subst(java.lang.String) -> subst
    161:161:boolean isListenerListEmpty() -> isListenerListEmpty
    165:170:void addInPlayListener(ch.qos.logback.core.joran.event.InPlayListener) -> addInPlayListener
    173:173:boolean removeInPlayListener(ch.qos.logback.core.joran.event.InPlayListener) -> removeInPlayListener
    177:180:void fireInPlay(ch.qos.logback.core.joran.event.SaxEvent) -> fireInPlay
ch.qos.logback.core.joran.spi.Interpreter -> ch.qos.logback.core.joran.spi.Interpreter:
    java.util.List EMPTY_LIST -> EMPTY_LIST
    ch.qos.logback.core.joran.spi.RuleStore ruleStore -> ruleStore
    ch.qos.logback.core.joran.spi.InterpretationContext interpretationContext -> interpretationContext
    java.util.ArrayList implicitActions -> implicitActions
    ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport cai -> cai
    ch.qos.logback.core.joran.spi.ElementPath elementPath -> elementPath
    org.xml.sax.Locator locator -> locator
    ch.qos.logback.core.joran.spi.EventPlayer eventPlayer -> eventPlayer
    java.util.Stack actionListStack -> actionListStack
    ch.qos.logback.core.joran.spi.ElementPath skip -> skip
    92:102:void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.RuleStore,ch.qos.logback.core.joran.spi.ElementPath) -> <init>
    105:105:ch.qos.logback.core.joran.spi.EventPlayer getEventPlayer() -> getEventPlayer
    109:110:void setInterpretationContextPropertiesMap(java.util.Map) -> setInterpretationContextPropertiesMap
    120:120:ch.qos.logback.core.joran.spi.InterpretationContext getInterpretationContext() -> getInterpretationContext
    127:129:void startElement(ch.qos.logback.core.joran.event.StartEvent) -> startElement
    133:152:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    158:159:void pushEmptyActionList() -> pushEmptyActionList
    163:175:void characters(ch.qos.logback.core.joran.event.BodyEvent) -> characters
    178:180:void endElement(ch.qos.logback.core.joran.event.EndEvent) -> endElement
    186:198:void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    201:201:org.xml.sax.Locator getLocator() -> getLocator
    205:206:void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    209:215:java.lang.String getTagName(java.lang.String,java.lang.String) -> getTagName
    219:220:void addImplicitAction(ch.qos.logback.core.joran.action.ImplicitAction) -> addImplicitAction
    228:241:java.util.List lookupImplicitAction(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> lookupImplicitAction
    248:255:java.util.List getApplicableActionList(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes) -> getApplicableActionList
    259:278:void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes) -> callBeginAction
    281:294:void callBodyAction(java.util.List,java.lang.String) -> callBodyAction
    297:319:void callEndAction(java.util.List,java.lang.String) -> callEndAction
    322:322:ch.qos.logback.core.joran.spi.RuleStore getRuleStore() -> getRuleStore
    68:68:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.spi.JoranException -> ch.qos.logback.core.joran.spi.JoranException:
    25:26:void <init>(java.lang.String,java.lang.Throwable) -> <init>
ch.qos.logback.core.joran.spi.NoAutoStart -> ch.qos.logback.core.joran.spi.NoAutoStart:
ch.qos.logback.core.joran.spi.NoAutoStartUtil -> ch.qos.logback.core.joran.spi.NoAutoStartUtil:
    26:31:boolean notMarkedWithNoAutoStart(java.lang.Object) -> notMarkedWithNoAutoStart
ch.qos.logback.core.joran.spi.RuleStore -> ch.qos.logback.core.joran.spi.RuleStore:
    void addRule(ch.qos.logback.core.joran.spi.ElementSelector,java.lang.String) -> addRule
    void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action) -> addRule
    java.util.List matchActions(ch.qos.logback.core.joran.spi.ElementPath) -> matchActions
ch.qos.logback.core.joran.spi.SimpleRuleStore -> ch.qos.logback.core.joran.spi.SimpleRuleStore:
    java.lang.String KLEENE_STAR -> KLEENE_STAR
    java.util.HashMap rules -> rules
    37:44:void <init>(ch.qos.logback.core.Context) -> <init>
    51:61:void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action) -> addRule
    64:74:void addRule(ch.qos.logback.core.joran.spi.ElementSelector,java.lang.String) -> addRule
    86:95:java.util.List matchActions(ch.qos.logback.core.joran.spi.ElementPath) -> matchActions
    100:104:java.util.List fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath) -> fullPathMatch
    109:125:java.util.List suffixMatch(ch.qos.logback.core.joran.spi.ElementPath) -> suffixMatch
    130:130:boolean isSuffixPattern(ch.qos.logback.core.joran.spi.ElementSelector) -> isSuffixPattern
    134:152:java.util.List prefixMatch(ch.qos.logback.core.joran.spi.ElementPath) -> prefixMatch
    157:157:boolean isKleeneStar(java.lang.String) -> isKleeneStar
    162:193:java.util.List middleMatch(ch.qos.logback.core.joran.spi.ElementPath) -> middleMatch
    198:204:java.lang.String toString() -> toString
    34:34:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.util.ConfigurationWatchListUtil -> ch.qos.logback.core.joran.util.ConfigurationWatchListUtil:
    ch.qos.logback.core.joran.util.ConfigurationWatchListUtil origin -> origin
    33:34:void <init>() -> <init>
    38:39:void registerConfigurationWatchList(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.ConfigurationWatchList) -> registerConfigurationWatchList
    41:51:void setMainWatchURL(ch.qos.logback.core.Context,java.net.URL) -> setMainWatchURL
    54:58:java.net.URL getMainWatchURL(ch.qos.logback.core.Context) -> getMainWatchURL
    63:70:void addToWatchList(ch.qos.logback.core.Context,java.net.URL) -> addToWatchList
    86:86:ch.qos.logback.core.joran.spi.ConfigurationWatchList getConfigurationWatchList(ch.qos.logback.core.Context) -> getConfigurationWatchList
    90:98:void addStatus(ch.qos.logback.core.Context,ch.qos.logback.core.status.Status) -> addStatus
    101:102:void addInfo(ch.qos.logback.core.Context,java.lang.String) -> addInfo
    105:106:void addWarn(ch.qos.logback.core.Context,java.lang.String) -> addWarn
    31:31:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.util.PropertySetter -> ch.qos.logback.core.joran.util.PropertySetter:
    java.lang.Object obj -> obj
    java.lang.Class objClass -> objClass
    ch.qos.logback.core.joran.util.beans.BeanDescription beanDescription -> beanDescription
    65:69:void <init>(ch.qos.logback.core.joran.util.beans.BeanDescriptionCache,java.lang.Object) -> <init>
    90:103:void setProperty(java.lang.String,java.lang.String) -> setProperty
    117:135:void setProperty(java.lang.reflect.Method,java.lang.String,java.lang.String) -> setProperty
    138:163:ch.qos.logback.core.util.AggregationType computeAggregationType(java.lang.String) -> computeAggregationType
    168:169:java.lang.reflect.Method findAdderMethod(java.lang.String) -> findAdderMethod
    173:174:java.lang.reflect.Method findSetterMethod(java.lang.String) -> findSetterMethod
    178:185:java.lang.Class getParameterClassForMethod(java.lang.reflect.Method) -> getParameterClassForMethod
    190:197:ch.qos.logback.core.util.AggregationType computeRawAggregationType(java.lang.reflect.Method) -> computeRawAggregationType
    209:226:boolean isUnequivocallyInstantiable(java.lang.Class) -> isUnequivocallyInstantiable
    235:246:void addComplexProperty(java.lang.String,java.lang.Object) -> addComplexProperty
    249:255:void invokeMethodWithSingleParameterOnThisObject(java.lang.reflect.Method,java.lang.Object) -> invokeMethodWithSingleParameterOnThisObject
    259:284:void addBasicProperty(java.lang.String,java.lang.String) -> addBasicProperty
    287:306:void setComplexProperty(java.lang.String,java.lang.Object) -> setComplexProperty
    309:324:boolean isSanityCheckSuccessful(java.lang.String,java.lang.reflect.Method,java.lang.Class[],java.lang.Object) -> isSanityCheckSuccessful
    328:328:java.lang.String capitalizeFirstLetter(java.lang.String) -> capitalizeFirstLetter
    332:332:java.lang.Object getObj() -> getObj
    337:344:java.lang.reflect.Method getRelevantMethod(java.lang.String,ch.qos.logback.core.util.AggregationType) -> getRelevantMethod
    349:352:java.lang.annotation.Annotation getAnnotation(java.lang.String,java.lang.Class,java.lang.reflect.Method) -> getAnnotation
    357:361:java.lang.Class getDefaultClassNameByAnnonation(java.lang.String,java.lang.reflect.Method) -> getDefaultClassNameByAnnonation
    366:375:java.lang.Class getByConcreteType(java.lang.String,java.lang.reflect.Method) -> getByConcreteType
    382:395:java.lang.Class getClassNameViaImplicitRules(java.lang.String,ch.qos.logback.core.util.AggregationType,ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> getClassNameViaImplicitRules
ch.qos.logback.core.joran.util.PropertySetter$1 -> ch.qos.logback.core.joran.util.PropertySetter$1:
    int[] $SwitchMap$ch$qos$logback$core$util$AggregationType -> $SwitchMap$ch$qos$logback$core$util$AggregationType
    144:144:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.util.StringToObjectConverter -> ch.qos.logback.core.joran.util.StringToObjectConverter:
    java.lang.Class[] STING_CLASS_PARAMETER -> STING_CLASS_PARAMETER
    34:46:boolean canBeBuiltFromSimpleString(java.lang.Class) -> canBeBuiltFromSimpleString
    54:82:java.lang.Object convertArg(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.Class) -> convertArg
    86:86:boolean isOfTypeCharset(java.lang.Class) -> isOfTypeCharset
    91:94:java.nio.charset.Charset convertToCharset(ch.qos.logback.core.spi.ContextAware,java.lang.String) -> convertToCharset
    101:105:java.lang.reflect.Method getValueOfMethod(java.lang.Class) -> getValueOfMethod
    110:115:boolean followsTheValueOfConvention(java.lang.Class) -> followsTheValueOfConvention
    120:124:java.lang.Object convertByValueOfMethod(ch.qos.logback.core.spi.ContextAware,java.lang.Class,java.lang.String) -> convertByValueOfMethod
    130:130:java.lang.Object convertToEnum(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.Class) -> convertToEnum
    31:31:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.util.beans.BeanDescription -> ch.qos.logback.core.joran.util.beans.BeanDescription:
    java.lang.Class clazz -> clazz
    java.util.Map propertyNameToGetter -> propertyNameToGetter
    java.util.Map propertyNameToSetter -> propertyNameToSetter
    java.util.Map propertyNameToAdder -> propertyNameToAdder
    36:41:void <init>(java.lang.Class,java.util.Map,java.util.Map,java.util.Map) -> <init>
    60:60:java.lang.reflect.Method getSetter(java.lang.String) -> getSetter
    68:68:java.lang.reflect.Method getAdder(java.lang.String) -> getAdder
ch.qos.logback.core.joran.util.beans.BeanDescriptionCache -> ch.qos.logback.core.joran.util.beans.BeanDescriptionCache:
    java.util.Map classToBeanDescription -> classToBeanDescription
    ch.qos.logback.core.joran.util.beans.BeanDescriptionFactory beanDescriptionFactory -> beanDescriptionFactory
    22:27:void <init>(ch.qos.logback.core.Context) -> <init>
    30:33:ch.qos.logback.core.joran.util.beans.BeanDescriptionFactory getBeanDescriptionFactory() -> getBeanDescriptionFactory
    46:50:ch.qos.logback.core.joran.util.beans.BeanDescription getBeanDescription(java.lang.Class) -> getBeanDescription
ch.qos.logback.core.joran.util.beans.BeanDescriptionFactory -> ch.qos.logback.core.joran.util.beans.BeanDescriptionFactory:
    22:24:void <init>(ch.qos.logback.core.Context) -> <init>
    32:67:ch.qos.logback.core.joran.util.beans.BeanDescription create(java.lang.Class) -> create
ch.qos.logback.core.joran.util.beans.BeanUtil -> ch.qos.logback.core.joran.util.beans.BeanUtil:
    24:33:boolean isAdder(java.lang.reflect.Method) -> isAdder
    42:59:boolean isGetter(java.lang.reflect.Method) -> isGetter
    63:63:int getParameterCount(java.lang.reflect.Method) -> getParameterCount
    72:84:boolean isSetter(java.lang.reflect.Method) -> isSetter
    92:103:java.lang.String getPropertyName(java.lang.reflect.Method) -> getPropertyName
    115:126:java.lang.String toLowerCamelCase(java.lang.String) -> toLowerCamelCase
    130:133:java.lang.String getSubstringIfPrefixMatches(java.lang.String,java.lang.String) -> getSubstringIfPrefixMatches
ch.qos.logback.core.net.AbstractSocketAppender -> ch.qos.logback.core.net.AbstractSocketAppender:
    ch.qos.logback.core.net.ObjectWriterFactory objectWriterFactory -> objectWriterFactory
    ch.qos.logback.core.net.QueueFactory queueFactory -> queueFactory
    java.lang.String remoteHost -> remoteHost
    int port -> port
    java.net.InetAddress address -> address
    ch.qos.logback.core.util.Duration reconnectionDelay -> reconnectionDelay
    int queueSize -> queueSize
    int acceptConnectionTimeout -> acceptConnectionTimeout
    ch.qos.logback.core.util.Duration eventDelayLimit -> eventDelayLimit
    java.util.concurrent.BlockingDeque deque -> deque
    java.lang.String peerId -> peerId
    ch.qos.logback.core.net.SocketConnector connector -> connector
    java.util.concurrent.Future task -> task
    java.net.Socket socket -> socket
    96:97:void <init>() -> <init>
    78:105:void <init>(ch.qos.logback.core.net.QueueFactory,ch.qos.logback.core.net.ObjectWriterFactory) -> <init>
    111:155:void start() -> start
    162:167:void stop() -> stop
    174:185:void append(java.lang.Object) -> append
    189:206:void connectSocketAndDispatchEvents() -> connectSocketAndDispatchEvents
    209:209:boolean socketConnectionCouldBeEstablished() -> socketConnectionCouldBeEstablished
    213:216:ch.qos.logback.core.net.ObjectWriter createObjectWriterForSocket() -> createObjectWriterForSocket
    220:223:ch.qos.logback.core.net.SocketConnector createConnector(java.net.InetAddress,int,int,long) -> createConnector
    228:237:void dispatchEvents(ch.qos.logback.core.net.ObjectWriter) -> dispatchEvents
    241:245:void tryReAddingEventToFrontOfQueue(java.lang.Object) -> tryReAddingEventToFrontOfQueue
    251:258:void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception) -> connectionFailed
    274:274:ch.qos.logback.core.net.SocketConnector newConnector(java.net.InetAddress,int,long,long) -> newConnector
    283:283:javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    void postProcessEvent(java.lang.Object) -> postProcessEvent
    ch.qos.logback.core.spi.PreSerializationTransformer getPST() -> getPST
    305:306:void setRemoteHost(java.lang.String) -> setRemoteHost
    320:321:void setPort(int) -> setPort
    44:44:void access$000(ch.qos.logback.core.net.AbstractSocketAppender) -> access$000
ch.qos.logback.core.net.AbstractSocketAppender$1 -> ch.qos.logback.core.net.AbstractSocketAppender$1:
    ch.qos.logback.core.net.AbstractSocketAppender this$0 -> this$0
    147:147:void <init>(ch.qos.logback.core.net.AbstractSocketAppender) -> <init>
    150:151:void run() -> run
ch.qos.logback.core.net.AutoFlushingObjectWriter -> ch.qos.logback.core.net.AutoFlushingObjectWriter:
    java.io.ObjectOutputStream objectOutputStream -> objectOutputStream
    int resetFrequency -> resetFrequency
    int writeCounter -> writeCounter
    29:41:void <init>(java.io.ObjectOutputStream,int) -> <init>
    45:48:void write(java.lang.Object) -> write
    55:59:void preventMemoryLeak() -> preventMemoryLeak
ch.qos.logback.core.net.DefaultSocketConnector -> ch.qos.logback.core.net.DefaultSocketConnector:
    java.net.InetAddress address -> address
    int port -> port
    ch.qos.logback.core.util.DelayStrategy delayStrategy -> delayStrategy
    ch.qos.logback.core.net.SocketConnector$ExceptionHandler exceptionHandler -> exceptionHandler
    javax.net.SocketFactory socketFactory -> socketFactory
    49:50:void <init>(java.net.InetAddress,int,long,long) -> <init>
    60:64:void <init>(java.net.InetAddress,int,ch.qos.logback.core.util.DelayStrategy) -> <init>
    70:76:java.net.Socket call() -> call
    80:86:java.net.Socket createSocket() -> createSocket
    90:96:void useDefaultsForMissingFields() -> useDefaultsForMissingFields
    102:103:void setExceptionHandler(ch.qos.logback.core.net.SocketConnector$ExceptionHandler) -> setExceptionHandler
    109:110:void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
    31:31:java.lang.Object call() -> call
ch.qos.logback.core.net.DefaultSocketConnector$1 -> ch.qos.logback.core.net.DefaultSocketConnector$1:
ch.qos.logback.core.net.DefaultSocketConnector$ConsoleExceptionHandler -> ch.qos.logback.core.net.DefaultSocketConnector$ConsoleExceptionHandler:
    115:115:void <init>() -> <init>
    118:119:void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception) -> connectionFailed
    115:115:void <init>(ch.qos.logback.core.net.DefaultSocketConnector$1) -> <init>
ch.qos.logback.core.net.ObjectWriter -> ch.qos.logback.core.net.ObjectWriter:
    void write(java.lang.Object) -> write
ch.qos.logback.core.net.ObjectWriterFactory -> ch.qos.logback.core.net.ObjectWriterFactory:
    27:27:void <init>() -> <init>
    37:37:ch.qos.logback.core.net.AutoFlushingObjectWriter newAutoFlushingObjectWriter(java.io.OutputStream) -> newAutoFlushingObjectWriter
ch.qos.logback.core.net.QueueFactory -> ch.qos.logback.core.net.QueueFactory:
    24:24:void <init>() -> <init>
    36:37:java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque(int) -> newLinkedBlockingDeque
ch.qos.logback.core.net.SocketConnector -> ch.qos.logback.core.net.SocketConnector:
    java.net.Socket call() -> call
    void setExceptionHandler(ch.qos.logback.core.net.SocketConnector$ExceptionHandler) -> setExceptionHandler
    void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
ch.qos.logback.core.net.SocketConnector$ExceptionHandler -> ch.qos.logback.core.net.SocketConnector$ExceptionHandler:
    void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception) -> connectionFailed
ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean -> ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean:
    29:29:void <init>() -> <init>
ch.qos.logback.core.net.ssl.KeyStoreFactoryBean -> ch.qos.logback.core.net.ssl.KeyStoreFactoryBean:
    35:35:void <init>() -> <init>
ch.qos.logback.core.net.ssl.SSLComponent -> ch.qos.logback.core.net.ssl.SSLComponent:
ch.qos.logback.core.net.ssl.SSLConfiguration -> ch.qos.logback.core.net.ssl.SSLConfiguration:
    24:24:void <init>() -> <init>
ch.qos.logback.core.net.ssl.SSLContextFactoryBean -> ch.qos.logback.core.net.ssl.SSLContextFactoryBean:
    41:41:void <init>() -> <init>
ch.qos.logback.core.net.ssl.SSLNestedComponentRegistryRules -> ch.qos.logback.core.net.ssl.SSLNestedComponentRegistryRules:
    27:34:void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> addDefaultNestedComponentRegistryRules
ch.qos.logback.core.net.ssl.SSLParametersConfiguration -> ch.qos.logback.core.net.ssl.SSLParametersConfiguration:
    33:33:void <init>() -> <init>
ch.qos.logback.core.net.ssl.SecureRandomFactoryBean -> ch.qos.logback.core.net.ssl.SecureRandomFactoryBean:
    28:28:void <init>() -> <init>
ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean -> ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean:
    29:29:void <init>() -> <init>
ch.qos.logback.core.pattern.CompositeConverter -> ch.qos.logback.core.pattern.CompositeConverter:
    ch.qos.logback.core.pattern.Converter childConverter -> childConverter
    16:16:void <init>() -> <init>
    21:27:java.lang.String convert(java.lang.Object) -> convert
    java.lang.String transform(java.lang.Object,java.lang.String) -> transform
    37:38:void setChildConverter(ch.qos.logback.core.pattern.Converter) -> setChildConverter
    41:51:java.lang.String toString() -> toString
ch.qos.logback.core.pattern.Converter -> ch.qos.logback.core.pattern.Converter:
    ch.qos.logback.core.pattern.Converter next -> next
    22:22:void <init>() -> <init>
    java.lang.String convert(java.lang.Object) -> convert
    42:43:void write(java.lang.StringBuilder,java.lang.Object) -> write
    46:50:void setNext(ch.qos.logback.core.pattern.Converter) -> setNext
    53:53:ch.qos.logback.core.pattern.Converter getNext() -> getNext
ch.qos.logback.core.pattern.ConverterUtil -> ch.qos.logback.core.pattern.ConverterUtil:
    27:41:void startConverters(ch.qos.logback.core.pattern.Converter) -> startConverters
    44:53:ch.qos.logback.core.pattern.Converter findTail(ch.qos.logback.core.pattern.Converter) -> findTail
    57:64:void setContextForConverters(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter) -> setContextForConverters
ch.qos.logback.core.pattern.DynamicConverter -> ch.qos.logback.core.pattern.DynamicConverter:
    ch.qos.logback.core.spi.ContextAwareBase cab -> cab
    java.util.List optionList -> optionList
    boolean started -> started
    24:34:void <init>() -> <init>
    43:44:void start() -> start
    47:48:void stop() -> stop
    51:51:boolean isStarted() -> isStarted
    55:56:void setOptionList(java.util.List) -> setOptionList
    65:68:java.lang.String getFirstOption() -> getFirstOption
    73:73:java.util.List getOptionList() -> getOptionList
    77:78:void setContext(ch.qos.logback.core.Context) -> setContext
    81:81:ch.qos.logback.core.Context getContext() -> getContext
    85:86:void addStatus(ch.qos.logback.core.status.Status) -> addStatus
    101:102:void addWarn(java.lang.String,java.lang.Throwable) -> addWarn
    105:106:void addError(java.lang.String) -> addError
    109:110:void addError(java.lang.String,java.lang.Throwable) -> addError
ch.qos.logback.core.pattern.FormatInfo -> ch.qos.logback.core.pattern.FormatInfo:
    int min -> min
    int max -> max
    boolean leftPad -> leftPad
    boolean leftTruncate -> leftTruncate
    23:29:void <init>() -> <init>
    52:92:ch.qos.logback.core.pattern.FormatInfo valueOf(java.lang.String) -> valueOf
    97:97:boolean isLeftPad() -> isLeftPad
    105:105:int getMax() -> getMax
    113:113:int getMin() -> getMin
    121:121:boolean isLeftTruncate() -> isLeftTruncate
    129:137:boolean equals(java.lang.Object) -> equals
    142:146:int hashCode() -> hashCode
    150:150:java.lang.String toString() -> toString
ch.qos.logback.core.pattern.FormattingConverter -> ch.qos.logback.core.pattern.FormattingConverter:
    ch.qos.logback.core.pattern.FormatInfo formattingInfo -> formattingInfo
    16:16:void <init>() -> <init>
    28:32:void setFormattingInfo(ch.qos.logback.core.pattern.FormatInfo) -> setFormattingInfo
    36:69:void write(java.lang.StringBuilder,java.lang.Object) -> write
ch.qos.logback.core.pattern.IdentityCompositeConverter -> ch.qos.logback.core.pattern.IdentityCompositeConverter:
    16:16:void <init>() -> <init>
    20:20:java.lang.String transform(java.lang.Object,java.lang.String) -> transform
ch.qos.logback.core.pattern.LiteralConverter -> ch.qos.logback.core.pattern.LiteralConverter:
    java.lang.String literal -> literal
    20:22:void <init>(java.lang.String) -> <init>
    25:25:java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.core.pattern.PatternLayoutBase -> ch.qos.logback.core.pattern.PatternLayoutBase:
    ch.qos.logback.core.pattern.Converter head -> head
    java.lang.String pattern -> pattern
    ch.qos.logback.core.pattern.PostCompileProcessor postCompileProcessor -> postCompileProcessor
    java.util.Map instanceConverterMap -> instanceConverterMap
    boolean outputPatternAsHeader -> outputPatternAsHeader
    28:36:void <init>() -> <init>
    java.util.Map getDefaultConverterMap() -> getDefaultConverterMap
    51:70:java.util.Map getEffectiveConverterMap() -> getEffectiveConverterMap
    74:95:void start() -> start
    112:118:java.lang.String writeLoopOnConverters(java.lang.Object) -> writeLoopOnConverters
    122:122:java.lang.String getPattern() -> getPattern
    126:127:void setPattern(java.lang.String) -> setPattern
    130:130:java.lang.String toString() -> toString
    138:138:java.lang.String getPresentationHeaderPrefix() -> getPresentationHeaderPrefix
    146:147:void setOutputPatternAsHeader(boolean) -> setOutputPatternAsHeader
    151:154:java.lang.String getPresentationHeader() -> getPresentationHeader
ch.qos.logback.core.pattern.PatternLayoutEncoderBase -> ch.qos.logback.core.pattern.PatternLayoutEncoderBase:
    java.lang.String pattern -> pattern
    boolean outputPatternAsHeader -> outputPatternAsHeader
    19:24:void <init>() -> <init>
    27:27:java.lang.String getPattern() -> getPattern
    62:62:void setLayout(ch.qos.logback.core.Layout) -> setLayout
ch.qos.logback.core.pattern.PostCompileProcessor -> ch.qos.logback.core.pattern.PostCompileProcessor:
    void process(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter) -> process
ch.qos.logback.core.pattern.ReplacingCompositeConverter -> ch.qos.logback.core.pattern.ReplacingCompositeConverter:
    java.util.regex.Pattern pattern -> pattern
    java.lang.String regex -> regex
    java.lang.String replacement -> replacement
    19:19:void <init>() -> <init>
    26:42:void start() -> start
    46:48:java.lang.String transform(java.lang.Object,java.lang.String) -> transform
ch.qos.logback.core.pattern.SpacePadder -> ch.qos.logback.core.pattern.SpacePadder:
    java.lang.String[] SPACES -> SPACES
    24:34:void leftPad(java.lang.StringBuilder,java.lang.String,int) -> leftPad
    37:47:void rightPad(java.lang.StringBuilder,java.lang.String,int) -> rightPad
    53:63:void spacePad(java.lang.StringBuilder,int) -> spacePad
    18:18:void <clinit>() -> <clinit>
ch.qos.logback.core.pattern.color.BlackCompositeConverter -> ch.qos.logback.core.pattern.color.BlackCompositeConverter:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.BlueCompositeConverter -> ch.qos.logback.core.pattern.color.BlueCompositeConverter:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.BoldBlueCompositeConverter -> ch.qos.logback.core.pattern.color.BoldBlueCompositeConverter:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.BoldCyanCompositeConverter -> ch.qos.logback.core.pattern.color.BoldCyanCompositeConverter:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.BoldGreenCompositeConverter -> ch.qos.logback.core.pattern.color.BoldGreenCompositeConverter:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.BoldMagentaCompositeConverter -> ch.qos.logback.core.pattern.color.BoldMagentaCompositeConverter:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.BoldRedCompositeConverter -> ch.qos.logback.core.pattern.color.BoldRedCompositeConverter:
    24:24:void <init>() -> <init>
    28:28:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.BoldWhiteCompositeConverter -> ch.qos.logback.core.pattern.color.BoldWhiteCompositeConverter:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.BoldYellowCompositeConverter -> ch.qos.logback.core.pattern.color.BoldYellowCompositeConverter:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.CyanCompositeConverter -> ch.qos.logback.core.pattern.color.CyanCompositeConverter:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.ForegroundCompositeConverterBase -> ch.qos.logback.core.pattern.color.ForegroundCompositeConverterBase:
    25:25:void <init>() -> <init>
    31:37:java.lang.String transform(java.lang.Object,java.lang.String) -> transform
    java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.GrayCompositeConverter -> ch.qos.logback.core.pattern.color.GrayCompositeConverter:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.GreenCompositeConverter -> ch.qos.logback.core.pattern.color.GreenCompositeConverter:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.MagentaCompositeConverter -> ch.qos.logback.core.pattern.color.MagentaCompositeConverter:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.RedCompositeConverter -> ch.qos.logback.core.pattern.color.RedCompositeConverter:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.WhiteCompositeConverter -> ch.qos.logback.core.pattern.color.WhiteCompositeConverter:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.color.YellowCompositeConverter -> ch.qos.logback.core.pattern.color.YellowCompositeConverter:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> getForegroundColorCode
ch.qos.logback.core.pattern.parser.Compiler -> ch.qos.logback.core.pattern.parser.Compiler:
    ch.qos.logback.core.pattern.Converter head -> head
    ch.qos.logback.core.pattern.Converter tail -> tail
    ch.qos.logback.core.pattern.parser.Node top -> top
    java.util.Map converterMap -> converterMap
    33:36:void <init>(ch.qos.logback.core.pattern.parser.Node,java.util.Map) -> <init>
    39:78:ch.qos.logback.core.pattern.Converter compile() -> compile
    82:88:void addToList(ch.qos.logback.core.pattern.Converter) -> addToList
    99:111:ch.qos.logback.core.pattern.DynamicConverter createConverter(ch.qos.logback.core.pattern.parser.SimpleKeywordNode) -> createConverter
    124:136:ch.qos.logback.core.pattern.CompositeConverter createCompositeConverter(ch.qos.logback.core.pattern.parser.CompositeNode) -> createCompositeConverter
ch.qos.logback.core.pattern.parser.CompositeNode -> ch.qos.logback.core.pattern.parser.CompositeNode:
    ch.qos.logback.core.pattern.parser.Node childNode -> childNode
    20:22:void <init>(java.lang.String) -> <init>
    25:25:ch.qos.logback.core.pattern.parser.Node getChildNode() -> getChildNode
    29:30:void setChildNode(ch.qos.logback.core.pattern.parser.Node) -> setChildNode
    33:41:boolean equals(java.lang.Object) -> equals
    46:46:int hashCode() -> hashCode
    50:57:java.lang.String toString() -> toString
ch.qos.logback.core.pattern.parser.FormattingNode -> ch.qos.logback.core.pattern.parser.FormattingNode:
    ch.qos.logback.core.pattern.FormatInfo formatInfo -> formatInfo
    27:28:void <init>(int,java.lang.Object) -> <init>
    31:31:ch.qos.logback.core.pattern.FormatInfo getFormatInfo() -> getFormatInfo
    35:36:void setFormatInfo(ch.qos.logback.core.pattern.FormatInfo) -> setFormatInfo
    39:48:boolean equals(java.lang.Object) -> equals
    53:55:int hashCode() -> hashCode
ch.qos.logback.core.pattern.parser.Node -> ch.qos.logback.core.pattern.parser.Node:
    int type -> type
    java.lang.Object value -> value
    ch.qos.logback.core.pattern.parser.Node next -> next
    29:32:void <init>(int,java.lang.Object) -> <init>
    45:45:java.lang.Object getValue() -> getValue
    53:54:void setNext(ch.qos.logback.core.pattern.parser.Node) -> setNext
    57:65:boolean equals(java.lang.Object) -> equals
    70:72:int hashCode() -> hashCode
    76:79:java.lang.String printNext() -> printNext
    84:95:java.lang.String toString() -> toString
ch.qos.logback.core.pattern.parser.OptionTokenizer -> ch.qos.logback.core.pattern.parser.OptionTokenizer:
    ch.qos.logback.core.pattern.util.IEscapeUtil escapeUtil -> escapeUtil
    ch.qos.logback.core.pattern.parser.TokenStream tokenStream -> tokenStream
    java.lang.String pattern -> pattern
    int patternLength -> patternLength
    char quoteChar -> quoteChar
    int state -> state
    47:48:void <init>(ch.qos.logback.core.pattern.parser.TokenStream) -> <init>
    44:55:void <init>(ch.qos.logback.core.pattern.parser.TokenStream,ch.qos.logback.core.pattern.util.IEscapeUtil) -> <init>
    58:131:void tokenize(char,java.util.List) -> tokenize
    134:136:void emitOptionToken(java.util.List,java.util.List) -> emitOptionToken
    139:143:void escape(java.lang.String,java.lang.StringBuffer) -> escape
ch.qos.logback.core.pattern.parser.Parser -> ch.qos.logback.core.pattern.parser.Parser:
    java.util.Map DEFAULT_COMPOSITE_CONVERTER_MAP -> DEFAULT_COMPOSITE_CONVERTER_MAP
    java.util.List tokenList -> tokenList
    int pointer -> pointer
    62:63:void <init>(java.lang.String) -> <init>
    55:72:void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil) -> <init>
    84:87:ch.qos.logback.core.pattern.Converter compile(ch.qos.logback.core.pattern.parser.Node,java.util.Map) -> compile
    91:91:ch.qos.logback.core.pattern.parser.Node parse() -> parse
    96:104:ch.qos.logback.core.pattern.parser.Node E() -> E
    110:115:ch.qos.logback.core.pattern.parser.Node Eopt() -> Eopt
    121:146:ch.qos.logback.core.pattern.parser.Node T() -> T
    153:165:ch.qos.logback.core.pattern.parser.FormattingNode C() -> C
    171:181:ch.qos.logback.core.pattern.parser.FormattingNode SINGLE() -> SINGLE
    185:204:ch.qos.logback.core.pattern.parser.FormattingNode COMPOSITE(java.lang.String) -> COMPOSITE
    208:211:ch.qos.logback.core.pattern.parser.Token getNextToken() -> getNextToken
    215:218:ch.qos.logback.core.pattern.parser.Token getCurentToken() -> getCurentToken
    222:223:void advanceTokenPointer() -> advanceTokenPointer
    226:229:void expectNotNull(ch.qos.logback.core.pattern.parser.Token,java.lang.String) -> expectNotNull
    47:52:void <clinit>() -> <clinit>
ch.qos.logback.core.pattern.parser.SimpleKeywordNode -> ch.qos.logback.core.pattern.parser.SimpleKeywordNode:
    java.util.List optionList -> optionList
    23:24:void <init>(java.lang.Object) -> <init>
    27:28:void <init>(int,java.lang.Object) -> <init>
    31:31:java.util.List getOptions() -> getOptions
    35:36:void setOptions(java.util.List) -> setOptions
    39:48:boolean equals(java.lang.Object) -> equals
    53:53:int hashCode() -> hashCode
    57:64:java.lang.String toString() -> toString
ch.qos.logback.core.pattern.parser.Token -> ch.qos.logback.core.pattern.parser.Token:
    ch.qos.logback.core.pattern.parser.Token EOF_TOKEN -> EOF_TOKEN
    ch.qos.logback.core.pattern.parser.Token RIGHT_PARENTHESIS_TOKEN -> RIGHT_PARENTHESIS_TOKEN
    ch.qos.logback.core.pattern.parser.Token BARE_COMPOSITE_KEYWORD_TOKEN -> BARE_COMPOSITE_KEYWORD_TOKEN
    ch.qos.logback.core.pattern.parser.Token PERCENT_TOKEN -> PERCENT_TOKEN
    int type -> type
    java.lang.Object value -> value
    43:44:void <init>(int) -> <init>
    46:49:void <init>(int,java.lang.Object) -> <init>
    52:52:int getType() -> getType
    56:56:java.lang.Object getValue() -> getValue
    60:91:java.lang.String toString() -> toString
    97:99:int hashCode() -> hashCode
    103:115:boolean equals(java.lang.Object) -> equals
    34:37:void <clinit>() -> <clinit>
ch.qos.logback.core.pattern.parser.TokenStream -> ch.qos.logback.core.pattern.parser.TokenStream:
    java.lang.String pattern -> pattern
    int patternLength -> patternLength
    ch.qos.logback.core.pattern.util.IEscapeUtil escapeUtil -> escapeUtil
    ch.qos.logback.core.pattern.util.IEscapeUtil optionEscapeUtil -> optionEscapeUtil
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState state -> state
    int pointer -> pointer
    57:74:void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil) -> <init>
    77:122:java.util.List tokenize() -> tokenize
    126:141:void handleRightParenthesisState(char,java.util.List,java.lang.StringBuffer) -> handleRightParenthesisState
    144:146:void processOption(char,java.util.List,java.lang.StringBuffer) -> processOption
    149:160:void handleFormatModifierState(char,java.util.List,java.lang.StringBuffer) -> handleFormatModifierState
    163:182:void handleLiteralState(char,java.util.List,java.lang.StringBuffer) -> handleLiteralState
    186:213:void handleKeywordState(char,java.util.List,java.lang.StringBuffer) -> handleKeywordState
    216:220:void escape(java.lang.String,java.lang.StringBuffer) -> escape
    230:234:void addValuedToken(int,java.lang.StringBuffer,java.util.List) -> addValuedToken
ch.qos.logback.core.pattern.parser.TokenStream$1 -> ch.qos.logback.core.pattern.parser.TokenStream$1:
    int[] $SwitchMap$ch$qos$logback$core$pattern$parser$TokenStream$TokenizerState -> $SwitchMap$ch$qos$logback$core$pattern$parser$TokenStream$TokenizerState
    84:84:void <clinit>() -> <clinit>
ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState -> ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState:
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState LITERAL_STATE -> LITERAL_STATE
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState FORMAT_MODIFIER_STATE -> FORMAT_MODIFIER_STATE
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState KEYWORD_STATE -> KEYWORD_STATE
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState OPTION_STATE -> OPTION_STATE
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState RIGHT_PARENTHESIS_STATE -> RIGHT_PARENTHESIS_STATE
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState[] $VALUES -> $VALUES
    49:49:ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState[] values() -> values
    49:49:ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState valueOf(java.lang.String) -> valueOf
    49:49:void <init>(java.lang.String,int) -> <init>
    49:50:void <clinit>() -> <clinit>
ch.qos.logback.core.pattern.util.AsIsEscapeUtil -> ch.qos.logback.core.pattern.util.AsIsEscapeUtil:
    19:19:void <init>() -> <init>
    30:33:void escape(java.lang.String,java.lang.StringBuffer,char,int) -> escape
ch.qos.logback.core.pattern.util.IEscapeUtil -> ch.qos.logback.core.pattern.util.IEscapeUtil:
    void escape(java.lang.String,java.lang.StringBuffer,char,int) -> escape
ch.qos.logback.core.pattern.util.RegularEscapeUtil -> ch.qos.logback.core.pattern.util.RegularEscapeUtil:
    21:21:void <init>() -> <init>
    24:48:void escape(java.lang.String,java.lang.StringBuffer,char,int) -> escape
    51:55:java.lang.String formatEscapeCharsForListing(java.lang.String) -> formatEscapeCharsForListing
    60:88:java.lang.String basicEscape(java.lang.String) -> basicEscape
ch.qos.logback.core.pattern.util.RestrictedEscapeUtil -> ch.qos.logback.core.pattern.util.RestrictedEscapeUtil:
    21:21:void <init>() -> <init>
    24:33:void escape(java.lang.String,java.lang.StringBuffer,char,int) -> escape
ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran -> ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran:
    java.util.List eventList -> eventList
    java.lang.String key -> key
    java.util.Map parentPropertyMap -> parentPropertyMap
    35:40:void <init>(java.util.List,java.lang.String,java.util.Map) -> <init>
    43:43:java.util.List removeSiftElement(java.util.List) -> removeSiftElement
    ch.qos.logback.core.sift.SiftingJoranConfiguratorBase getSiftingJoranConfigurator(java.lang.String) -> getSiftingJoranConfigurator
    49:52:ch.qos.logback.core.Appender buildAppender(ch.qos.logback.core.Context,java.lang.String) -> buildAppender
ch.qos.logback.core.sift.AbstractDiscriminator -> ch.qos.logback.core.sift.AbstractDiscriminator:
    boolean started -> started
    29:30:void start() -> start
    33:34:void stop() -> stop
    37:37:boolean isStarted() -> isStarted
ch.qos.logback.core.sift.AppenderFactory -> ch.qos.logback.core.sift.AppenderFactory:
    ch.qos.logback.core.Appender buildAppender(ch.qos.logback.core.Context,java.lang.String) -> buildAppender
ch.qos.logback.core.sift.AppenderTracker -> ch.qos.logback.core.sift.AppenderTracker:
    int nopaWarningCount -> nopaWarningCount
    ch.qos.logback.core.Context context -> context
    ch.qos.logback.core.sift.AppenderFactory appenderFactory -> appenderFactory
    ch.qos.logback.core.spi.ContextAwareImpl contextAware -> contextAware
    34:45:void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.sift.AppenderFactory) -> <init>
    49:50:void processPriorToRemoval(ch.qos.logback.core.Appender) -> processPriorToRemoval
    54:64:ch.qos.logback.core.Appender buildComponent(java.lang.String) -> buildComponent
    68:75:ch.qos.logback.core.helpers.NOPAppender buildNOPAppender(java.lang.String) -> buildNOPAppender
    80:80:boolean isComponentStale(ch.qos.logback.core.Appender) -> isComponentStale
    32:32:boolean isComponentStale(java.lang.Object) -> isComponentStale
    32:32:java.lang.Object buildComponent(java.lang.String) -> buildComponent
    32:32:void processPriorToRemoval(java.lang.Object) -> processPriorToRemoval
ch.qos.logback.core.sift.Discriminator -> ch.qos.logback.core.sift.Discriminator:
    java.lang.String getDiscriminatingValue(java.lang.Object) -> getDiscriminatingValue
    java.lang.String getKey() -> getKey
ch.qos.logback.core.sift.SiftingAppenderBase -> ch.qos.logback.core.sift.SiftingAppenderBase:
    ch.qos.logback.core.sift.AppenderTracker appenderTracker -> appenderTracker
    ch.qos.logback.core.sift.AppenderFactory appenderFactory -> appenderFactory
    ch.qos.logback.core.util.Duration timeout -> timeout
    int maxAppenderCount -> maxAppenderCount
    ch.qos.logback.core.sift.Discriminator discriminator -> discriminator
    30:35:void <init>() -> <init>
    60:61:void setAppenderFactory(ch.qos.logback.core.sift.AppenderFactory) -> setAppenderFactory
    65:85:void start() -> start
    89:92:void stop() -> stop
    long getTimestamp(java.lang.Object) -> getTimestamp
    98:111:void append(java.lang.Object) -> append
    boolean eventMarksEndOfLife(java.lang.Object) -> eventMarksEndOfLife
    137:140:java.lang.String getDiscriminatorKey() -> getDiscriminatorKey
ch.qos.logback.core.sift.SiftingJoranConfiguratorBase -> ch.qos.logback.core.sift.SiftingJoranConfiguratorBase:
    java.lang.String key -> key
    java.lang.String value -> value
    java.util.Map parentPropertyMap -> parentPropertyMap
    int errorEmmissionCount -> errorEmmissionCount
    36:64:void <init>(java.lang.String,java.lang.String,java.util.Map) -> <init>
    46:53:void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter) -> addImplicitRules
    57:60:void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> addInstanceRules
    ch.qos.logback.core.Appender getAppender() -> getAppender
    67:79:void oneAndOnlyOneCheck(java.util.Map) -> oneAndOnlyOneCheck
    82:83:void doConfigure(java.util.List) -> doConfigure
    87:87:java.lang.String toString() -> toString
ch.qos.logback.core.spi.AbstractComponentTracker -> ch.qos.logback.core.spi.AbstractComponentTracker:
    int maxComponents -> maxComponents
    long timeout -> timeout
    java.util.LinkedHashMap liveMap -> liveMap
    java.util.LinkedHashMap lingerersMap -> lingerersMap
    long lastCheck -> lastCheck
    ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator byExcedent -> byExcedent
    ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator byTimeout -> byTimeout
    ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator byLingering -> byLingering
    31:264:void <init>() -> <init>
    void processPriorToRemoval(java.lang.Object) -> processPriorToRemoval
    java.lang.Object buildComponent(java.lang.String) -> buildComponent
    boolean isComponentStale(java.lang.Object) -> isComponentStale
    87:91:ch.qos.logback.core.spi.AbstractComponentTracker$Entry getFromEitherMap(java.lang.String) -> getFromEitherMap
    122:131:java.lang.Object getOrCreate(java.lang.String,long) -> getOrCreate
    140:144:void endOfLife(java.lang.String) -> endOfLife
    153:158:void removeStaleComponents(long) -> removeStaleComponents
    161:162:void removeExcedentComponents() -> removeExcedentComponents
    165:166:void removeStaleComponentsFromMainMap(long) -> removeStaleComponentsFromMainMap
    169:170:void removeStaleComponentsFromLingerersMap(long) -> removeStaleComponentsFromLingerersMap
    173:185:void genericStaleComponentRemover(java.util.LinkedHashMap,long,ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator) -> genericStaleComponentRemover
    205:209:boolean isTooSoonForRemovalIteration(long) -> isTooSoonForRemovalIteration
    215:219:boolean isEntryStale(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> isEntryStale
    223:223:boolean isEntryDoneLingering(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> isEntryDoneLingering
    233:239:java.util.Collection allComponents() -> allComponents
    247:248:void setTimeout(long) -> setTimeout
    255:256:void setMaxComponents(int) -> setMaxComponents
    31:31:boolean access$000(ch.qos.logback.core.spi.AbstractComponentTracker,ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> access$000
    31:31:boolean access$100(ch.qos.logback.core.spi.AbstractComponentTracker,ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> access$100
ch.qos.logback.core.spi.AbstractComponentTracker$1 -> ch.qos.logback.core.spi.AbstractComponentTracker$1:
    ch.qos.logback.core.spi.AbstractComponentTracker this$0 -> this$0
    187:187:void <init>(ch.qos.logback.core.spi.AbstractComponentTracker) -> <init>
    189:189:boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> isSlatedForRemoval
ch.qos.logback.core.spi.AbstractComponentTracker$2 -> ch.qos.logback.core.spi.AbstractComponentTracker$2:
    ch.qos.logback.core.spi.AbstractComponentTracker this$0 -> this$0
    193:193:void <init>(ch.qos.logback.core.spi.AbstractComponentTracker) -> <init>
    195:195:boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> isSlatedForRemoval
ch.qos.logback.core.spi.AbstractComponentTracker$3 -> ch.qos.logback.core.spi.AbstractComponentTracker$3:
    ch.qos.logback.core.spi.AbstractComponentTracker this$0 -> this$0
    198:198:void <init>(ch.qos.logback.core.spi.AbstractComponentTracker) -> <init>
    200:200:boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> isSlatedForRemoval
ch.qos.logback.core.spi.AbstractComponentTracker$Entry -> ch.qos.logback.core.spi.AbstractComponentTracker$Entry:
    java.lang.String key -> key
    java.lang.Object component -> component
    long timestamp -> timestamp
    269:273:void <init>(java.lang.String,java.lang.Object,long) -> <init>
    276:277:void setTimestamp(long) -> setTimestamp
    281:281:int hashCode() -> hashCode
    286:304:boolean equals(java.lang.Object) -> equals
    309:309:java.lang.String toString() -> toString
ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator -> ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator:
    boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> isSlatedForRemoval
ch.qos.logback.core.spi.AppenderAttachable -> ch.qos.logback.core.spi.AppenderAttachable:
    void addAppender(ch.qos.logback.core.Appender) -> addAppender
ch.qos.logback.core.spi.AppenderAttachableImpl -> ch.qos.logback.core.spi.AppenderAttachableImpl:
    ch.qos.logback.core.util.COWArrayList appenderList -> appenderList
    long START -> START
    27:29:void <init>() -> <init>
    37:41:void addAppender(ch.qos.logback.core.Appender) -> addAppender
    47:54:int appendLoopOnAppenders(java.lang.Object) -> appendLoopOnAppenders
    106:110:void detachAndStopAllAppenders() -> detachAndStopAllAppenders
    112:112:void <clinit>() -> <clinit>
ch.qos.logback.core.spi.ContextAware -> ch.qos.logback.core.spi.ContextAware:
    void setContext(ch.qos.logback.core.Context) -> setContext
    void addError(java.lang.String) -> addError
    void addError(java.lang.String,java.lang.Throwable) -> addError
ch.qos.logback.core.spi.ContextAwareBase -> ch.qos.logback.core.spi.ContextAwareBase:
    int noContextWarning -> noContextWarning
    ch.qos.logback.core.Context context -> context
    java.lang.Object declaredOrigin -> declaredOrigin
    30:36:void <init>() -> <init>
    30:40:void <init>(ch.qos.logback.core.spi.ContextAware) -> <init>
    43:48:void setContext(ch.qos.logback.core.Context) -> setContext
    51:51:ch.qos.logback.core.Context getContext() -> getContext
    68:68:java.lang.Object getDeclaredOrigin() -> getDeclaredOrigin
    72:82:void addStatus(ch.qos.logback.core.status.Status) -> addStatus
    85:86:void addInfo(java.lang.String) -> addInfo
    93:94:void addWarn(java.lang.String) -> addWarn
    97:98:void addWarn(java.lang.String,java.lang.Throwable) -> addWarn
    101:102:void addError(java.lang.String) -> addError
    105:106:void addError(java.lang.String,java.lang.Throwable) -> addError
ch.qos.logback.core.spi.ContextAwareImpl -> ch.qos.logback.core.spi.ContextAwareImpl:
    int noContextWarning -> noContextWarning
    ch.qos.logback.core.Context context -> context
    java.lang.Object origin -> origin
    31:39:void <init>(ch.qos.logback.core.Context,java.lang.Object) -> <init>
    42:42:java.lang.Object getOrigin() -> getOrigin
    46:51:void setContext(ch.qos.logback.core.Context) -> setContext
    65:75:void addStatus(ch.qos.logback.core.status.Status) -> addStatus
    90:91:void addWarn(java.lang.String,java.lang.Throwable) -> addWarn
    94:95:void addError(java.lang.String) -> addError
    98:99:void addError(java.lang.String,java.lang.Throwable) -> addError
ch.qos.logback.core.spi.DeferredProcessingAware -> ch.qos.logback.core.spi.DeferredProcessingAware:
    void prepareForDeferredProcessing() -> prepareForDeferredProcessing
ch.qos.logback.core.spi.FilterAttachableImpl -> ch.qos.logback.core.spi.FilterAttachableImpl:
    ch.qos.logback.core.util.COWArrayList filterList -> filterList
    27:29:void <init>() -> <init>
    53:64:ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object) -> getFilterChainDecision
ch.qos.logback.core.spi.FilterReply -> ch.qos.logback.core.spi.FilterReply:
    ch.qos.logback.core.spi.FilterReply DENY -> DENY
    ch.qos.logback.core.spi.FilterReply NEUTRAL -> NEUTRAL
    ch.qos.logback.core.spi.FilterReply ACCEPT -> ACCEPT
    ch.qos.logback.core.spi.FilterReply[] $VALUES -> $VALUES
    29:29:ch.qos.logback.core.spi.FilterReply[] values() -> values
    29:29:ch.qos.logback.core.spi.FilterReply valueOf(java.lang.String) -> valueOf
    29:29:void <init>(java.lang.String,int) -> <init>
    29:30:void <clinit>() -> <clinit>
ch.qos.logback.core.spi.LifeCycle -> ch.qos.logback.core.spi.LifeCycle:
    void start() -> start
    void stop() -> stop
    boolean isStarted() -> isStarted
ch.qos.logback.core.spi.LogbackLock -> ch.qos.logback.core.spi.LogbackLock:
    22:22:void <init>() -> <init>
ch.qos.logback.core.spi.PreSerializationTransformer -> ch.qos.logback.core.spi.PreSerializationTransformer:
    java.io.Serializable transform(java.lang.Object) -> transform
ch.qos.logback.core.spi.PropertyContainer -> ch.qos.logback.core.spi.PropertyContainer:
    java.lang.String getProperty(java.lang.String) -> getProperty
ch.qos.logback.core.spi.PropertyDefiner -> ch.qos.logback.core.spi.PropertyDefiner:
    java.lang.String getPropertyValue() -> getPropertyValue
ch.qos.logback.core.spi.ScanException -> ch.qos.logback.core.spi.ScanException:
    java.lang.Throwable cause -> cause
    23:24:void <init>(java.lang.String) -> <init>
    27:29:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    32:32:java.lang.Throwable getCause() -> getCause
ch.qos.logback.core.status.ErrorStatus -> ch.qos.logback.core.status.ErrorStatus:
    19:20:void <init>(java.lang.String,java.lang.Object) -> <init>
    23:24:void <init>(java.lang.String,java.lang.Object,java.lang.Throwable) -> <init>
ch.qos.logback.core.status.InfoStatus -> ch.qos.logback.core.status.InfoStatus:
    18:19:void <init>(java.lang.String,java.lang.Object) -> <init>
ch.qos.logback.core.status.OnConsoleStatusListener -> ch.qos.logback.core.status.OnConsoleStatusListener:
    23:23:void <init>() -> <init>
    28:28:java.io.PrintStream getPrintStream() -> getPrintStream
ch.qos.logback.core.status.OnPrintStreamStatusListenerBase -> ch.qos.logback.core.status.OnPrintStreamStatusListenerBase:
    boolean isStarted -> isStarted
    long retrospectiveThresold -> retrospectiveThresold
    java.lang.String prefix -> prefix
    27:32:void <init>() -> <init>
    java.io.PrintStream getPrintStream() -> getPrintStream
    47:53:void print(ch.qos.logback.core.status.Status) -> print
    56:59:void addStatusEvent(ch.qos.logback.core.status.Status) -> addStatusEvent
    65:76:void retrospectivePrint() -> retrospectivePrint
    79:80:boolean isElapsedTimeLongerThanThreshold(long,long) -> isElapsedTimeLongerThanThreshold
    88:92:void start() -> start
    111:112:void stop() -> stop
    115:115:boolean isStarted() -> isStarted
ch.qos.logback.core.status.Status -> ch.qos.logback.core.status.Status:
    int getLevel() -> getLevel
    int getEffectiveLevel() -> getEffectiveLevel
    java.lang.String getMessage() -> getMessage
    java.lang.Throwable getThrowable() -> getThrowable
    java.lang.Long getDate() -> getDate
    boolean hasChildren() -> hasChildren
    java.util.Iterator iterator() -> iterator
ch.qos.logback.core.status.StatusBase -> ch.qos.logback.core.status.StatusBase:
    java.util.List EMPTY_LIST -> EMPTY_LIST
    int level -> level
    java.lang.String message -> message
    java.lang.Object origin -> origin
    java.util.List childrenList -> childrenList
    java.lang.Throwable throwable -> throwable
    long date -> date
    32:33:void <init>(int,java.lang.String,java.lang.Object) -> <init>
    35:41:void <init>(int,java.lang.String,java.lang.Object,java.lang.Throwable) -> <init>
    44:51:void add(ch.qos.logback.core.status.Status) -> add
    54:54:boolean hasChildren() -> hasChildren
    58:61:java.util.Iterator iterator() -> iterator
    74:74:int getLevel() -> getLevel
    82:94:int getEffectiveLevel() -> getEffectiveLevel
    98:98:java.lang.String getMessage() -> getMessage
    106:106:java.lang.Throwable getThrowable() -> getThrowable
    110:110:java.lang.Long getDate() -> getDate
    117:143:java.lang.String toString() -> toString
    148:152:int hashCode() -> hashCode
    157:171:boolean equals(java.lang.Object) -> equals
    22:22:void <clinit>() -> <clinit>
ch.qos.logback.core.status.StatusListener -> ch.qos.logback.core.status.StatusListener:
    void addStatusEvent(ch.qos.logback.core.status.Status) -> addStatusEvent
ch.qos.logback.core.status.StatusManager -> ch.qos.logback.core.status.StatusManager:
    void add(ch.qos.logback.core.status.Status) -> add
    java.util.List getCopyOfStatusList() -> getCopyOfStatusList
    boolean add(ch.qos.logback.core.status.StatusListener) -> add
    void remove(ch.qos.logback.core.status.StatusListener) -> remove
    java.util.List getCopyOfStatusListenerList() -> getCopyOfStatusListenerList
ch.qos.logback.core.status.StatusUtil -> ch.qos.logback.core.status.StatusUtil:
    ch.qos.logback.core.status.StatusManager sm -> sm
    33:35:void <init>(ch.qos.logback.core.Context) -> <init>
    47:54:boolean contextHasStatusListener(ch.qos.logback.core.Context) -> contextHasStatusListener
    58:63:java.util.List filterStatusListByTimeThreshold(java.util.List,long) -> filterStatusListByTimeThreshold
    67:70:void addStatus(ch.qos.logback.core.status.Status) -> addStatus
    81:82:void addError(java.lang.Object,java.lang.String,java.lang.Throwable) -> addError
    85:85:boolean hasXMLParsingErrors(long) -> hasXMLParsingErrors
    89:89:boolean noXMLParsingErrorsOccurred(long) -> noXMLParsingErrorsOccurred
    93:99:int getHighestLevel(long) -> getHighestLevel
    111:124:boolean containsMatch(long,int,java.lang.String) -> containsMatch
ch.qos.logback.core.status.WarnStatus -> ch.qos.logback.core.status.WarnStatus:
    19:20:void <init>(java.lang.String,java.lang.Object) -> <init>
    23:24:void <init>(java.lang.String,java.lang.Object,java.lang.Throwable) -> <init>
ch.qos.logback.core.subst.Node -> ch.qos.logback.core.subst.Node:
    ch.qos.logback.core.subst.Node$Type type -> type
    java.lang.Object payload -> payload
    java.lang.Object defaultPart -> defaultPart
    ch.qos.logback.core.subst.Node next -> next
    27:30:void <init>(ch.qos.logback.core.subst.Node$Type,java.lang.Object) -> <init>
    39:47:void append(ch.qos.logback.core.subst.Node) -> append
    53:69:java.lang.String toString() -> toString
    83:89:void recursive(ch.qos.logback.core.subst.Node,java.lang.StringBuilder) -> recursive
    97:113:boolean equals(java.lang.Object) -> equals
    118:122:int hashCode() -> hashCode
ch.qos.logback.core.subst.Node$1 -> ch.qos.logback.core.subst.Node$1:
    int[] $SwitchMap$ch$qos$logback$core$subst$Node$Type -> $SwitchMap$ch$qos$logback$core$subst$Node$Type
    53:53:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Node$Type -> ch.qos.logback.core.subst.Node$Type:
    ch.qos.logback.core.subst.Node$Type LITERAL -> LITERAL
    ch.qos.logback.core.subst.Node$Type VARIABLE -> VARIABLE
    ch.qos.logback.core.subst.Node$Type[] $VALUES -> $VALUES
    18:18:ch.qos.logback.core.subst.Node$Type[] values() -> values
    18:18:ch.qos.logback.core.subst.Node$Type valueOf(java.lang.String) -> valueOf
    18:18:void <init>(java.lang.String,int) -> <init>
    18:19:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.NodeToStringTransformer -> ch.qos.logback.core.subst.NodeToStringTransformer:
    ch.qos.logback.core.subst.Node node -> node
    ch.qos.logback.core.spi.PropertyContainer propertyContainer0 -> propertyContainer0
    ch.qos.logback.core.spi.PropertyContainer propertyContainer1 -> propertyContainer1
    35:39:void <init>(ch.qos.logback.core.subst.Node,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer) -> <init>
    46:48:java.lang.String substituteVariable(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer) -> substituteVariable
    52:55:ch.qos.logback.core.subst.Node tokenizeAndParseString(java.lang.String) -> tokenizeAndParseString
    59:61:java.lang.String transform() -> transform
    65:77:void compileNode(ch.qos.logback.core.subst.Node,java.lang.StringBuilder,java.util.Stack) -> compileNode
    82:114:void handleVariable(ch.qos.logback.core.subst.Node,java.lang.StringBuilder,java.util.Stack) -> handleVariable
    117:136:java.lang.String lookupKey(java.lang.String) -> lookupKey
    140:141:void handleLiteral(ch.qos.logback.core.subst.Node,java.lang.StringBuilder) -> handleLiteral
    144:145:java.lang.String variableNodeValue(ch.qos.logback.core.subst.Node) -> variableNodeValue
    149:158:java.lang.String constructRecursionErrorMessage(java.util.Stack) -> constructRecursionErrorMessage
    167:172:boolean haveVisitedNodeAlready(ch.qos.logback.core.subst.Node,java.util.Stack) -> haveVisitedNodeAlready
    176:183:boolean equalNodes(ch.qos.logback.core.subst.Node,ch.qos.logback.core.subst.Node) -> equalNodes
ch.qos.logback.core.subst.NodeToStringTransformer$1 -> ch.qos.logback.core.subst.NodeToStringTransformer$1:
    int[] $SwitchMap$ch$qos$logback$core$subst$Node$Type -> $SwitchMap$ch$qos$logback$core$subst$Node$Type
    67:67:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Parser -> ch.qos.logback.core.subst.Parser:
    java.util.List tokenList -> tokenList
    int pointer -> pointer
    38:42:void <init>(java.util.List) -> <init>
    45:47:ch.qos.logback.core.subst.Node parse() -> parse
    51:59:ch.qos.logback.core.subst.Node E() -> E
    64:68:ch.qos.logback.core.subst.Node Eopt() -> Eopt
    74:98:ch.qos.logback.core.subst.Node T() -> T
    103:103:ch.qos.logback.core.subst.Node makeNewLiteralNode(java.lang.String) -> makeNewLiteralNode
    108:116:ch.qos.logback.core.subst.Node V() -> V
    121:130:ch.qos.logback.core.subst.Node C() -> C
    134:134:boolean isDefaultToken(ch.qos.logback.core.subst.Token) -> isDefaultToken
    138:139:void advanceTokenPointer() -> advanceTokenPointer
    142:145:void expectNotNull(ch.qos.logback.core.subst.Token,java.lang.String) -> expectNotNull
    148:152:void expectCurlyRight(ch.qos.logback.core.subst.Token) -> expectCurlyRight
    155:158:ch.qos.logback.core.subst.Token peekAtCurentToken() -> peekAtCurentToken
ch.qos.logback.core.subst.Parser$1 -> ch.qos.logback.core.subst.Parser$1:
    int[] $SwitchMap$ch$qos$logback$core$subst$Token$Type -> $SwitchMap$ch$qos$logback$core$subst$Token$Type
    76:76:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Token -> ch.qos.logback.core.subst.Token:
    ch.qos.logback.core.subst.Token START_TOKEN -> START_TOKEN
    ch.qos.logback.core.subst.Token CURLY_LEFT_TOKEN -> CURLY_LEFT_TOKEN
    ch.qos.logback.core.subst.Token CURLY_RIGHT_TOKEN -> CURLY_RIGHT_TOKEN
    ch.qos.logback.core.subst.Token DEFAULT_SEP_TOKEN -> DEFAULT_SEP_TOKEN
    ch.qos.logback.core.subst.Token$Type type -> type
    java.lang.String payload -> payload
    30:33:void <init>(ch.qos.logback.core.subst.Token$Type,java.lang.String) -> <init>
    37:49:boolean equals(java.lang.Object) -> equals
    54:56:int hashCode() -> hashCode
    61:66:java.lang.String toString() -> toString
    18:21:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Token$Type -> ch.qos.logback.core.subst.Token$Type:
    ch.qos.logback.core.subst.Token$Type LITERAL -> LITERAL
    ch.qos.logback.core.subst.Token$Type START -> START
    ch.qos.logback.core.subst.Token$Type CURLY_LEFT -> CURLY_LEFT
    ch.qos.logback.core.subst.Token$Type CURLY_RIGHT -> CURLY_RIGHT
    ch.qos.logback.core.subst.Token$Type DEFAULT -> DEFAULT
    ch.qos.logback.core.subst.Token$Type[] $VALUES -> $VALUES
    23:23:ch.qos.logback.core.subst.Token$Type[] values() -> values
    23:23:ch.qos.logback.core.subst.Token$Type valueOf(java.lang.String) -> valueOf
    23:23:void <init>(java.lang.String,int) -> <init>
    23:24:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Tokenizer -> ch.qos.logback.core.subst.Tokenizer:
    java.lang.String pattern -> pattern
    int patternLength -> patternLength
    ch.qos.logback.core.subst.Tokenizer$TokenizerState state -> state
    int pointer -> pointer
    31:37:void <init>(java.lang.String) -> <init>
    40:75:java.util.List tokenize() -> tokenize
    79:95:void handleDefaultValueState(char,java.util.List,java.lang.StringBuilder) -> handleDefaultValueState
    98:104:void handleStartState(char,java.util.List,java.lang.StringBuilder) -> handleStartState
    107:127:void handleLiteralState(char,java.util.List,java.lang.StringBuilder) -> handleLiteralState
    130:133:void addLiteralToken(java.util.List,java.lang.StringBuilder) -> addLiteralToken
ch.qos.logback.core.subst.Tokenizer$1 -> ch.qos.logback.core.subst.Tokenizer$1:
    int[] $SwitchMap$ch$qos$logback$core$subst$Tokenizer$TokenizerState -> $SwitchMap$ch$qos$logback$core$subst$Tokenizer$TokenizerState
    47:47:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Tokenizer$TokenizerState -> ch.qos.logback.core.subst.Tokenizer$TokenizerState:
    ch.qos.logback.core.subst.Tokenizer$TokenizerState LITERAL_STATE -> LITERAL_STATE
    ch.qos.logback.core.subst.Tokenizer$TokenizerState START_STATE -> START_STATE
    ch.qos.logback.core.subst.Tokenizer$TokenizerState DEFAULT_VAL_STATE -> DEFAULT_VAL_STATE
    ch.qos.logback.core.subst.Tokenizer$TokenizerState[] $VALUES -> $VALUES
    24:24:ch.qos.logback.core.subst.Tokenizer$TokenizerState[] values() -> values
    24:24:ch.qos.logback.core.subst.Tokenizer$TokenizerState valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:25:void <clinit>() -> <clinit>
ch.qos.logback.core.util.AggregationType -> ch.qos.logback.core.util.AggregationType:
    ch.qos.logback.core.util.AggregationType NOT_FOUND -> NOT_FOUND
    ch.qos.logback.core.util.AggregationType AS_BASIC_PROPERTY -> AS_BASIC_PROPERTY
    ch.qos.logback.core.util.AggregationType AS_COMPLEX_PROPERTY -> AS_COMPLEX_PROPERTY
    ch.qos.logback.core.util.AggregationType AS_BASIC_PROPERTY_COLLECTION -> AS_BASIC_PROPERTY_COLLECTION
    ch.qos.logback.core.util.AggregationType AS_COMPLEX_PROPERTY_COLLECTION -> AS_COMPLEX_PROPERTY_COLLECTION
    ch.qos.logback.core.util.AggregationType[] $VALUES -> $VALUES
    27:27:ch.qos.logback.core.util.AggregationType[] values() -> values
    27:27:ch.qos.logback.core.util.AggregationType valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    27:34:void <clinit>() -> <clinit>
ch.qos.logback.core.util.COWArrayList -> ch.qos.logback.core.util.COWArrayList:
    java.util.concurrent.atomic.AtomicBoolean fresh -> fresh
    java.util.concurrent.CopyOnWriteArrayList underlyingList -> underlyingList
    java.lang.Object[] ourCopy -> ourCopy
    java.lang.Object[] modelArray -> modelArray
    45:52:void <init>(java.lang.Object[]) -> <init>
    56:56:int size() -> size
    61:61:boolean isEmpty() -> isEmpty
    66:66:boolean contains(java.lang.Object) -> contains
    71:71:java.util.Iterator iterator() -> iterator
    75:78:void refreshCopyIfNecessary() -> refreshCopyIfNecessary
    81:81:boolean isFresh() -> isFresh
    85:87:void refreshCopy() -> refreshCopy
    91:92:java.lang.Object[] toArray() -> toArray
    98:99:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    110:111:java.lang.Object[] asTypedArray() -> asTypedArray
    115:116:void markAsStale() -> markAsStale
    119:121:void addIfAbsent(java.lang.Object) -> addIfAbsent
    125:127:boolean add(java.lang.Object) -> add
    132:134:boolean remove(java.lang.Object) -> remove
    139:139:boolean containsAll(java.util.Collection) -> containsAll
    144:146:boolean addAll(java.util.Collection) -> addAll
    151:153:boolean addAll(int,java.util.Collection) -> addAll
    158:160:boolean removeAll(java.util.Collection) -> removeAll
    165:167:boolean retainAll(java.util.Collection) -> retainAll
    172:174:void clear() -> clear
    178:179:java.lang.Object get(int) -> get
    184:186:java.lang.Object set(int,java.lang.Object) -> set
    191:193:void add(int,java.lang.Object) -> add
    197:199:java.lang.Object remove(int) -> remove
    204:204:int indexOf(java.lang.Object) -> indexOf
    209:209:int lastIndexOf(java.lang.Object) -> lastIndexOf
    214:214:java.util.ListIterator listIterator() -> listIterator
    219:219:java.util.ListIterator listIterator(int) -> listIterator
    224:224:java.util.List subList(int,int) -> subList
ch.qos.logback.core.util.CachingDateFormatter -> ch.qos.logback.core.util.CachingDateFormatter:
    long lastTimestamp -> lastTimestamp
    java.lang.String cachedStr -> cachedStr
    java.text.SimpleDateFormat sdf -> sdf
    28:34:void <init>(java.lang.String) -> <init>
    45:51:java.lang.String format(long) -> format
    55:56:void setTimeZone(java.util.TimeZone) -> setTimeZone
ch.qos.logback.core.util.CloseUtil -> ch.qos.logback.core.util.CloseUtil:
    47:54:void closeQuietly(java.net.Socket) -> closeQuietly
ch.qos.logback.core.util.ContextUtil -> ch.qos.logback.core.util.ContextUtil:
    36:38:void <init>(ch.qos.logback.core.Context) -> <init>
    42:45:java.lang.String getLocalHostName() -> getLocalHostName
    50:60:java.lang.String getLocalAddressAsString() -> getLocalAddressAsString
    64:64:boolean acceptableAddress(java.net.InetAddress) -> acceptableAddress
    72:81:java.lang.String safelyGetLocalHostName() -> safelyGetLocalHostName
    85:94:void addProperties(java.util.Properties) -> addProperties
    114:115:void addGroovyPackages(java.util.List) -> addGroovyPackages
    118:121:void addFrameworkPackage(java.util.List,java.lang.String) -> addFrameworkPackage
ch.qos.logback.core.util.DelayStrategy -> ch.qos.logback.core.util.DelayStrategy:
    long nextDelay() -> nextDelay
ch.qos.logback.core.util.Duration -> ch.qos.logback.core.util.Duration:
    java.util.regex.Pattern DURATION_PATTERN -> DURATION_PATTERN
    long millis -> millis
    51:53:void <init>(long) -> <init>
    56:56:ch.qos.logback.core.util.Duration buildByMilliseconds(double) -> buildByMilliseconds
    60:60:ch.qos.logback.core.util.Duration buildBySeconds(double) -> buildBySeconds
    64:64:ch.qos.logback.core.util.Duration buildByMinutes(double) -> buildByMinutes
    68:68:ch.qos.logback.core.util.Duration buildByHours(double) -> buildByHours
    72:72:ch.qos.logback.core.util.Duration buildByDays(double) -> buildByDays
    80:80:long getMilliseconds() -> getMilliseconds
    84:105:ch.qos.logback.core.util.Duration valueOf(java.lang.String) -> valueOf
    111:118:java.lang.String toString() -> toString
    42:42:void <clinit>() -> <clinit>
ch.qos.logback.core.util.DynamicClassLoadingException -> ch.qos.logback.core.util.DynamicClassLoadingException:
    21:22:void <init>(java.lang.String,java.lang.Throwable) -> <init>
ch.qos.logback.core.util.EnvUtil -> ch.qos.logback.core.util.EnvUtil:
    22:22:void <init>() -> <init>
    56:61:boolean isJaninoAvailable() -> isJaninoAvailable
    66:67:boolean isWindows() -> isWindows
ch.qos.logback.core.util.ExecutorServiceUtil -> ch.qos.logback.core.util.ExecutorServiceUtil:
    java.util.concurrent.ThreadFactory THREAD_FACTORY -> THREAD_FACTORY
    52:52:java.util.concurrent.ScheduledExecutorService newScheduledExecutorService() -> newScheduledExecutorService
    71:72:void shutdown(java.util.concurrent.ExecutorService) -> shutdown
    36:36:void <clinit>() -> <clinit>
ch.qos.logback.core.util.ExecutorServiceUtil$1 -> ch.qos.logback.core.util.ExecutorServiceUtil$1:
    java.util.concurrent.ThreadFactory defaultFactory -> defaultFactory
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    36:39:void <init>() -> <init>
    42:47:java.lang.Thread newThread(java.lang.Runnable) -> newThread
ch.qos.logback.core.util.FixedDelay -> ch.qos.logback.core.util.FixedDelay:
    long subsequentDelay -> subsequentDelay
    long nextDelay -> nextDelay
    34:37:void <init>(long,long) -> <init>
    53:55:long nextDelay() -> nextDelay
ch.qos.logback.core.util.IncompatibleClassException -> ch.qos.logback.core.util.IncompatibleClassException:
    java.lang.Class requestedClass -> requestedClass
    java.lang.Class obtainedClass -> obtainedClass
    24:27:void <init>(java.lang.Class,java.lang.Class) -> <init>
ch.qos.logback.core.util.Loader -> ch.qos.logback.core.util.Loader:
    boolean ignoreTCL -> ignoreTCL
    boolean HAS_GET_CLASS_LOADER_PERMISSION -> HAS_GET_CLASS_LOADER_PERMISSION
    31:31:void <init>() -> <init>
    71:77:java.util.Set getResources(java.lang.String,java.lang.ClassLoader) -> getResources
    88:90:java.net.URL getResource(java.lang.String,java.lang.ClassLoader) -> getResource
    102:102:java.net.URL getResourceBySelfClassLoader(java.lang.String) -> getResourceBySelfClassLoader
    115:115:java.lang.ClassLoader getTCL() -> getTCL
    119:120:java.lang.Class loadClass(java.lang.String,ch.qos.logback.core.Context) -> loadClass
    131:134:java.lang.ClassLoader getClassLoaderOfObject(java.lang.Object) -> getClassLoaderOfObject
    162:166:java.lang.ClassLoader getClassLoaderOfClass(java.lang.Class) -> getClassLoaderOfClass
    178:187:java.lang.Class loadClass(java.lang.String) -> loadClass
    34:57:void <clinit>() -> <clinit>
ch.qos.logback.core.util.Loader$1 -> ch.qos.logback.core.util.Loader$1:
    45:45:void <init>() -> <init>
    48:53:java.lang.Boolean run() -> run
    45:45:java.lang.Object run() -> run
ch.qos.logback.core.util.OptionHelper -> ch.qos.logback.core.util.OptionHelper:
    33:34:java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,ch.qos.logback.core.Context) -> instantiateByClassName
    39:40:java.lang.Object instantiateByClassNameAndParameter(java.lang.String,java.lang.Class,ch.qos.logback.core.Context,java.lang.Class,java.lang.Object) -> instantiateByClassNameAndParameter
    45:45:java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.ClassLoader) -> instantiateByClassName
    51:69:java.lang.Object instantiateByClassNameAndParameter(java.lang.String,java.lang.Class,java.lang.ClassLoader,java.lang.Class,java.lang.Object) -> instantiateByClassNameAndParameter
    112:114:java.lang.String substVars(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer) -> substVars
    148:150:java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> getSystemProperty
    162:164:java.lang.String getEnv(java.lang.String) -> getEnv
    177:179:java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    184:189:void setSystemProperties(ch.qos.logback.core.spi.ContextAware,java.util.Properties) -> setSystemProperties
    193:197:void setSystemProperty(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.String) -> setSystemProperty
    222:232:java.lang.String[] extractDefaultReplacement(java.lang.String) -> extractDefaultReplacement
    243:257:boolean toBoolean(java.lang.String,boolean) -> toBoolean
    261:261:boolean isEmpty(java.lang.String) -> isEmpty
ch.qos.logback.core.util.PropertySetterException -> ch.qos.logback.core.util.PropertySetterException:
    27:28:void <init>(java.lang.String) -> <init>
    31:32:void <init>(java.lang.Throwable) -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
ch.qos.logback.core.util.StatusListenerConfigHelper -> ch.qos.logback.core.util.StatusListenerConfigHelper:
    26:30:void installIfAsked(ch.qos.logback.core.Context) -> installIfAsked
    33:40:void addStatusListener(ch.qos.logback.core.Context,java.lang.String) -> addStatusListener
    43:52:void initAndAddListener(ch.qos.logback.core.Context,ch.qos.logback.core.status.StatusListener) -> initAndAddListener
    56:60:ch.qos.logback.core.status.StatusListener createListenerPerClassName(ch.qos.logback.core.Context,java.lang.String) -> createListenerPerClassName
    72:77:void addOnConsoleListenerInstance(ch.qos.logback.core.Context,ch.qos.logback.core.status.OnConsoleStatusListener) -> addOnConsoleListenerInstance
ch.qos.logback.core.util.StatusPrinter -> ch.qos.logback.core.util.StatusPrinter:
    java.io.PrintStream ps -> ps
    ch.qos.logback.core.util.CachingDateFormatter cachingDateFormat -> cachingDateFormat
    44:45:void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context) -> printInCaseOfErrorsOrWarnings
    54:67:void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context,long) -> printInCaseOfErrorsOrWarnings
    122:126:void print(ch.qos.logback.core.status.StatusManager,long) -> print
    135:140:void buildStrFromStatusList(java.lang.StringBuilder,java.util.List) -> buildStrFromStatusList
    146:160:void appendThrowable(java.lang.StringBuilder,java.lang.Throwable) -> appendThrowable
    164:186:void buildStr(java.lang.StringBuilder,java.lang.String,ch.qos.logback.core.status.Status) -> buildStr
    29:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JacksonAnnotationsInside -> com.fasterxml.jackson.annotation.JacksonAnnotationsInside:
com.fasterxml.jackson.annotation.JacksonInject -> com.fasterxml.jackson.annotation.JacksonInject:
    java.lang.String value() -> value
    com.fasterxml.jackson.annotation.OptBoolean useInput() -> useInput
com.fasterxml.jackson.annotation.JacksonInject$Value -> com.fasterxml.jackson.annotation.JacksonInject$Value:
    com.fasterxml.jackson.annotation.JacksonInject$Value EMPTY -> EMPTY
    java.lang.Object _id -> _id
    java.lang.Boolean _useInput -> _useInput
    72:75:void <init>(java.lang.Object,java.lang.Boolean) -> <init>
    93:99:com.fasterxml.jackson.annotation.JacksonInject$Value construct(java.lang.Object,java.lang.Boolean) -> construct
    103:106:com.fasterxml.jackson.annotation.JacksonInject$Value from(com.fasterxml.jackson.annotation.JacksonInject) -> from
    110:110:com.fasterxml.jackson.annotation.JacksonInject$Value forId(java.lang.Object) -> forId
    120:127:com.fasterxml.jackson.annotation.JacksonInject$Value withId(java.lang.Object) -> withId
    147:147:java.lang.Object getId() -> getId
    151:151:boolean hasId() -> hasId
    166:166:java.lang.String toString() -> toString
    172:179:int hashCode() -> hashCode
    184:195:boolean equals(java.lang.Object) -> equals
    205:205:boolean _empty(java.lang.Object,java.lang.Boolean) -> _empty
    62:62:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAlias -> com.fasterxml.jackson.annotation.JsonAlias:
    java.lang.String[] value() -> value
com.fasterxml.jackson.annotation.JsonAnyGetter -> com.fasterxml.jackson.annotation.JsonAnyGetter:
    boolean enabled() -> enabled
com.fasterxml.jackson.annotation.JsonAnySetter -> com.fasterxml.jackson.annotation.JsonAnySetter:
    boolean enabled() -> enabled
com.fasterxml.jackson.annotation.JsonAutoDetect -> com.fasterxml.jackson.annotation.JsonAutoDetect:
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getterVisibility() -> getterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility isGetterVisibility() -> isGetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility setterVisibility() -> setterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility creatorVisibility() -> creatorVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility fieldVisibility() -> fieldVisibility
com.fasterxml.jackson.annotation.JsonAutoDetect$1 -> com.fasterxml.jackson.annotation.JsonAutoDetect$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonAutoDetect$Visibility -> $SwitchMap$com$fasterxml$jackson$annotation$JsonAutoDetect$Visibility
    int[] $SwitchMap$com$fasterxml$jackson$annotation$PropertyAccessor -> $SwitchMap$com$fasterxml$jackson$annotation$PropertyAccessor
    75:206:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAutoDetect$Value -> com.fasterxml.jackson.annotation.JsonAutoDetect$Value:
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT_FIELD_VISIBILITY -> DEFAULT_FIELD_VISIBILITY
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value NO_OVERRIDES -> NO_OVERRIDES
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _fieldVisibility -> _fieldVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _getterVisibility -> _getterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _isGetterVisibility -> _isGetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _setterVisibility -> _setterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _creatorVisibility -> _creatorVisibility
    172:178:void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> <init>
    308:308:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getFieldVisibility() -> getFieldVisibility
    309:309:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getGetterVisibility() -> getGetterVisibility
    310:310:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getIsGetterVisibility() -> getIsGetterVisibility
    311:311:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getSetterVisibility() -> getSetterVisibility
    312:312:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getCreatorVisibility() -> getCreatorVisibility
    323:323:java.lang.String toString() -> toString
    331:331:int hashCode() -> hashCode
    341:343:boolean equals(java.lang.Object) -> equals
    370:370:boolean _equals(com.fasterxml.jackson.annotation.JsonAutoDetect$Value,com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> _equals
    141:160:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility -> com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility:
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility ANY -> ANY
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NON_PRIVATE -> NON_PRIVATE
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC -> PROTECTED_AND_PUBLIC
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PUBLIC_ONLY -> PUBLIC_ONLY
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NONE -> NONE
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] $VALUES -> $VALUES
    38:38:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] values() -> values
    38:38:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility valueOf(java.lang.String) -> valueOf
    38:38:void <init>(java.lang.String,int) -> <init>
    75:90:boolean isVisible(java.lang.reflect.Member) -> isVisible
    38:72:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonBackReference -> com.fasterxml.jackson.annotation.JsonBackReference:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonCreator -> com.fasterxml.jackson.annotation.JsonCreator:
    com.fasterxml.jackson.annotation.JsonCreator$Mode mode() -> mode
com.fasterxml.jackson.annotation.JsonCreator$Mode -> com.fasterxml.jackson.annotation.JsonCreator$Mode:
    com.fasterxml.jackson.annotation.JsonCreator$Mode DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.JsonCreator$Mode DELEGATING -> DELEGATING
    com.fasterxml.jackson.annotation.JsonCreator$Mode PROPERTIES -> PROPERTIES
    com.fasterxml.jackson.annotation.JsonCreator$Mode DISABLED -> DISABLED
    com.fasterxml.jackson.annotation.JsonCreator$Mode[] $VALUES -> $VALUES
    67:67:com.fasterxml.jackson.annotation.JsonCreator$Mode[] values() -> values
    67:67:com.fasterxml.jackson.annotation.JsonCreator$Mode valueOf(java.lang.String) -> valueOf
    67:67:void <init>(java.lang.String,int) -> <init>
    67:97:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonEnumDefaultValue -> com.fasterxml.jackson.annotation.JsonEnumDefaultValue:
com.fasterxml.jackson.annotation.JsonFilter -> com.fasterxml.jackson.annotation.JsonFilter:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonFormat -> com.fasterxml.jackson.annotation.JsonFormat:
    java.lang.String pattern() -> pattern
    com.fasterxml.jackson.annotation.JsonFormat$Shape shape() -> shape
    java.lang.String locale() -> locale
    java.lang.String timezone() -> timezone
    com.fasterxml.jackson.annotation.OptBoolean lenient() -> lenient
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] with() -> with
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] without() -> without
com.fasterxml.jackson.annotation.JsonFormat$Feature -> com.fasterxml.jackson.annotation.JsonFormat$Feature:
    com.fasterxml.jackson.annotation.JsonFormat$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY -> ACCEPT_SINGLE_VALUE_AS_ARRAY
    com.fasterxml.jackson.annotation.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_PROPERTIES -> ACCEPT_CASE_INSENSITIVE_PROPERTIES
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS -> WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_DATES_WITH_ZONE_ID -> WRITE_DATES_WITH_ZONE_ID
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED -> WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_SORTED_MAP_ENTRIES -> WRITE_SORTED_MAP_ENTRIES
    com.fasterxml.jackson.annotation.JsonFormat$Feature ADJUST_DATES_TO_CONTEXT_TIME_ZONE -> ADJUST_DATES_TO_CONTEXT_TIME_ZONE
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] $VALUES -> $VALUES
    237:237:com.fasterxml.jackson.annotation.JsonFormat$Feature[] values() -> values
    237:237:com.fasterxml.jackson.annotation.JsonFormat$Feature valueOf(java.lang.String) -> valueOf
    237:237:void <init>(java.lang.String,int) -> <init>
    237:295:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Features -> com.fasterxml.jackson.annotation.JsonFormat$Features:
    int _enabled -> _enabled
    int _disabled -> _disabled
    com.fasterxml.jackson.annotation.JsonFormat$Features EMPTY -> EMPTY
    310:313:void <init>(int,int) -> <init>
    316:316:com.fasterxml.jackson.annotation.JsonFormat$Features empty() -> empty
    320:320:com.fasterxml.jackson.annotation.JsonFormat$Features construct(com.fasterxml.jackson.annotation.JsonFormat) -> construct
    325:333:com.fasterxml.jackson.annotation.JsonFormat$Features construct(com.fasterxml.jackson.annotation.JsonFormat$Feature[],com.fasterxml.jackson.annotation.JsonFormat$Feature[]) -> construct
    338:358:com.fasterxml.jackson.annotation.JsonFormat$Features withOverrides(com.fasterxml.jackson.annotation.JsonFormat$Features) -> withOverrides
    378:385:java.lang.Boolean get(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> get
    390:393:java.lang.String toString() -> toString
    398:398:int hashCode() -> hashCode
    403:407:boolean equals(java.lang.Object) -> equals
    308:308:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Shape -> com.fasterxml.jackson.annotation.JsonFormat$Shape:
    com.fasterxml.jackson.annotation.JsonFormat$Shape ANY -> ANY
    com.fasterxml.jackson.annotation.JsonFormat$Shape NATURAL -> NATURAL
    com.fasterxml.jackson.annotation.JsonFormat$Shape SCALAR -> SCALAR
    com.fasterxml.jackson.annotation.JsonFormat$Shape ARRAY -> ARRAY
    com.fasterxml.jackson.annotation.JsonFormat$Shape OBJECT -> OBJECT
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER -> NUMBER
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER_FLOAT -> NUMBER_FLOAT
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER_INT -> NUMBER_INT
    com.fasterxml.jackson.annotation.JsonFormat$Shape STRING -> STRING
    com.fasterxml.jackson.annotation.JsonFormat$Shape BOOLEAN -> BOOLEAN
    com.fasterxml.jackson.annotation.JsonFormat$Shape[] $VALUES -> $VALUES
    148:148:com.fasterxml.jackson.annotation.JsonFormat$Shape[] values() -> values
    148:148:com.fasterxml.jackson.annotation.JsonFormat$Shape valueOf(java.lang.String) -> valueOf
    148:148:void <init>(java.lang.String,int) -> <init>
    216:216:boolean isNumeric() -> isNumeric
    148:212:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Value -> com.fasterxml.jackson.annotation.JsonFormat$Value:
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY -> EMPTY
    java.lang.String _pattern -> _pattern
    com.fasterxml.jackson.annotation.JsonFormat$Shape _shape -> _shape
    java.util.Locale _locale -> _locale
    java.lang.String _timezoneStr -> _timezoneStr
    java.lang.Boolean _lenient -> _lenient
    com.fasterxml.jackson.annotation.JsonFormat$Features _features -> _features
    java.util.TimeZone _timezone -> _timezone
    443:444:void <init>() -> <init>
    447:449:void <init>(com.fasterxml.jackson.annotation.JsonFormat) -> <init>
    457:463:void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Features,java.lang.Boolean) -> <init>
    485:493:void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat$Features,java.lang.Boolean) -> <init>
    513:513:com.fasterxml.jackson.annotation.JsonFormat$Value empty() -> empty
    529:529:com.fasterxml.jackson.annotation.JsonFormat$Value merge(com.fasterxml.jackson.annotation.JsonFormat$Value,com.fasterxml.jackson.annotation.JsonFormat$Value) -> merge
    558:597:com.fasterxml.jackson.annotation.JsonFormat$Value withOverrides(com.fasterxml.jackson.annotation.JsonFormat$Value) -> withOverrides
    693:693:java.lang.String getPattern() -> getPattern
    694:694:com.fasterxml.jackson.annotation.JsonFormat$Shape getShape() -> getShape
    695:695:java.util.Locale getLocale() -> getLocale
    701:701:java.lang.Boolean getLenient() -> getLenient
    725:733:java.util.TimeZone getTimeZone() -> getTimeZone
    739:739:boolean hasShape() -> hasShape
    745:745:boolean hasPattern() -> hasPattern
    751:751:boolean hasLocale() -> hasLocale
    757:757:boolean hasTimeZone() -> hasTimeZone
    781:781:java.lang.Boolean getFeature(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> getFeature
    795:795:java.lang.String toString() -> toString
    801:813:int hashCode() -> hashCode
    818:827:boolean equals(java.lang.Object) -> equals
    836:842:boolean _equal(java.lang.Object,java.lang.Object) -> _equal
    421:421:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonGetter -> com.fasterxml.jackson.annotation.JsonGetter:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonIdentityInfo -> com.fasterxml.jackson.annotation.JsonIdentityInfo:
    java.lang.String property() -> property
    java.lang.Class generator() -> generator
    java.lang.Class resolver() -> resolver
    java.lang.Class scope() -> scope
com.fasterxml.jackson.annotation.JsonIdentityReference -> com.fasterxml.jackson.annotation.JsonIdentityReference:
    boolean alwaysAsId() -> alwaysAsId
com.fasterxml.jackson.annotation.JsonIgnore -> com.fasterxml.jackson.annotation.JsonIgnore:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonIgnoreProperties -> com.fasterxml.jackson.annotation.JsonIgnoreProperties:
    java.lang.String[] value() -> value
    boolean ignoreUnknown() -> ignoreUnknown
    boolean allowGetters() -> allowGetters
    boolean allowSetters() -> allowSetters
com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value -> com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value:
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value EMPTY -> EMPTY
    java.util.Set _ignored -> _ignored
    boolean _ignoreUnknown -> _ignoreUnknown
    boolean _allowGetters -> _allowGetters
    boolean _allowSetters -> _allowSetters
    boolean _merge -> _merge
    126:136:void <init>(java.util.Set,boolean,boolean,boolean,boolean) -> <init>
    139:142:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value from(com.fasterxml.jackson.annotation.JsonIgnoreProperties) -> from
    160:163:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value construct(java.util.Set,boolean,boolean,boolean,boolean) -> construct
    183:183:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value empty() -> empty
    197:197:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value merge(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value,com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> merge
    238:257:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withOverrides(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> withOverrides
    334:337:java.util.Set findIgnoredForSerialization() -> findIgnoredForSerialization
    348:351:java.util.Set findIgnoredForDeserialization() -> findIgnoredForDeserialization
    355:355:boolean getIgnoreUnknown() -> getIgnoreUnknown
    372:372:java.lang.String toString() -> toString
    378:378:int hashCode() -> hashCode
    388:390:boolean equals(java.lang.Object) -> equals
    396:396:boolean _equals(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value,com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> _equals
    406:413:java.util.Set _asSet(java.lang.String[]) -> _asSet
    418:426:java.util.Set _merge(java.util.Set,java.util.Set) -> _merge
    432:438:boolean _empty(java.util.Set,boolean,boolean,boolean,boolean) -> _empty
    109:109:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonIgnoreType -> com.fasterxml.jackson.annotation.JsonIgnoreType:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonInclude -> com.fasterxml.jackson.annotation.JsonInclude:
    com.fasterxml.jackson.annotation.JsonInclude$Include value() -> value
    com.fasterxml.jackson.annotation.JsonInclude$Include content() -> content
    java.lang.Class valueFilter() -> valueFilter
    java.lang.Class contentFilter() -> contentFilter
com.fasterxml.jackson.annotation.JsonInclude$Include -> com.fasterxml.jackson.annotation.JsonInclude$Include:
    com.fasterxml.jackson.annotation.JsonInclude$Include ALWAYS -> ALWAYS
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_NULL -> NON_NULL
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_ABSENT -> NON_ABSENT
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_EMPTY -> NON_EMPTY
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_DEFAULT -> NON_DEFAULT
    com.fasterxml.jackson.annotation.JsonInclude$Include CUSTOM -> CUSTOM
    com.fasterxml.jackson.annotation.JsonInclude$Include USE_DEFAULTS -> USE_DEFAULTS
    com.fasterxml.jackson.annotation.JsonInclude$Include[] $VALUES -> $VALUES
    103:103:com.fasterxml.jackson.annotation.JsonInclude$Include[] values() -> values
    103:103:com.fasterxml.jackson.annotation.JsonInclude$Include valueOf(java.lang.String) -> valueOf
    103:103:void <init>(java.lang.String,int) -> <init>
    103:224:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonInclude$Value -> com.fasterxml.jackson.annotation.JsonInclude$Value:
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY -> EMPTY
    com.fasterxml.jackson.annotation.JsonInclude$Include _valueInclusion -> _valueInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Include _contentInclusion -> _contentInclusion
    java.lang.Class _valueFilter -> _valueFilter
    java.lang.Class _contentFilter -> _contentFilter
    269:274:void <init>(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include,java.lang.Class,java.lang.Class) -> <init>
    277:277:com.fasterxml.jackson.annotation.JsonInclude$Value empty() -> empty
    293:293:com.fasterxml.jackson.annotation.JsonInclude$Value merge(com.fasterxml.jackson.annotation.JsonInclude$Value,com.fasterxml.jackson.annotation.JsonInclude$Value) -> merge
    302:308:com.fasterxml.jackson.annotation.JsonInclude$Value mergeAll(com.fasterxml.jackson.annotation.JsonInclude$Value[]) -> mergeAll
    330:352:com.fasterxml.jackson.annotation.JsonInclude$Value withOverrides(com.fasterxml.jackson.annotation.JsonInclude$Value) -> withOverrides
    359:363:com.fasterxml.jackson.annotation.JsonInclude$Value construct(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include) -> construct
    374:387:com.fasterxml.jackson.annotation.JsonInclude$Value construct(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include,java.lang.Class,java.lang.Class) -> construct
    395:412:com.fasterxml.jackson.annotation.JsonInclude$Value from(com.fasterxml.jackson.annotation.JsonInclude) -> from
    416:416:com.fasterxml.jackson.annotation.JsonInclude$Value withValueInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> withValueInclusion
    457:463:com.fasterxml.jackson.annotation.JsonInclude$Value withContentFilter(java.lang.Class) -> withContentFilter
    467:467:com.fasterxml.jackson.annotation.JsonInclude$Value withContentInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> withContentInclusion
    477:477:com.fasterxml.jackson.annotation.JsonInclude$Include getValueInclusion() -> getValueInclusion
    481:481:com.fasterxml.jackson.annotation.JsonInclude$Include getContentInclusion() -> getContentInclusion
    485:485:java.lang.Class getValueFilter() -> getValueFilter
    489:489:java.lang.Class getContentFilter() -> getContentFilter
    494:505:java.lang.String toString() -> toString
    510:510:int hashCode() -> hashCode
    516:521:boolean equals(java.lang.Object) -> equals
    247:247:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonManagedReference -> com.fasterxml.jackson.annotation.JsonManagedReference:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonMerge -> com.fasterxml.jackson.annotation.JsonMerge:
    com.fasterxml.jackson.annotation.OptBoolean value() -> value
com.fasterxml.jackson.annotation.JsonProperty -> com.fasterxml.jackson.annotation.JsonProperty:
    java.lang.String value() -> value
    boolean required() -> required
    int index() -> index
    java.lang.String defaultValue() -> defaultValue
    com.fasterxml.jackson.annotation.JsonProperty$Access access() -> access
com.fasterxml.jackson.annotation.JsonProperty$Access -> com.fasterxml.jackson.annotation.JsonProperty$Access:
    com.fasterxml.jackson.annotation.JsonProperty$Access AUTO -> AUTO
    com.fasterxml.jackson.annotation.JsonProperty$Access READ_ONLY -> READ_ONLY
    com.fasterxml.jackson.annotation.JsonProperty$Access WRITE_ONLY -> WRITE_ONLY
    com.fasterxml.jackson.annotation.JsonProperty$Access READ_WRITE -> READ_WRITE
    com.fasterxml.jackson.annotation.JsonProperty$Access[] $VALUES -> $VALUES
    141:141:com.fasterxml.jackson.annotation.JsonProperty$Access[] values() -> values
    141:141:com.fasterxml.jackson.annotation.JsonProperty$Access valueOf(java.lang.String) -> valueOf
    141:141:void <init>(java.lang.String,int) -> <init>
    141:169:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonPropertyDescription -> com.fasterxml.jackson.annotation.JsonPropertyDescription:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonPropertyOrder -> com.fasterxml.jackson.annotation.JsonPropertyOrder:
    java.lang.String[] value() -> value
    boolean alphabetic() -> alphabetic
com.fasterxml.jackson.annotation.JsonRawValue -> com.fasterxml.jackson.annotation.JsonRawValue:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonRootName -> com.fasterxml.jackson.annotation.JsonRootName:
    java.lang.String value() -> value
    java.lang.String namespace() -> namespace
com.fasterxml.jackson.annotation.JsonSetter -> com.fasterxml.jackson.annotation.JsonSetter:
    java.lang.String value() -> value
    com.fasterxml.jackson.annotation.Nulls nulls() -> nulls
    com.fasterxml.jackson.annotation.Nulls contentNulls() -> contentNulls
com.fasterxml.jackson.annotation.JsonSetter$Value -> com.fasterxml.jackson.annotation.JsonSetter$Value:
    com.fasterxml.jackson.annotation.Nulls _nulls -> _nulls
    com.fasterxml.jackson.annotation.Nulls _contentNulls -> _contentNulls
    com.fasterxml.jackson.annotation.JsonSetter$Value EMPTY -> EMPTY
    77:80:void <init>(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> <init>
    96:99:com.fasterxml.jackson.annotation.JsonSetter$Value from(com.fasterxml.jackson.annotation.JsonSetter) -> from
    110:119:com.fasterxml.jackson.annotation.JsonSetter$Value construct(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> construct
    130:130:com.fasterxml.jackson.annotation.JsonSetter$Value empty() -> empty
    227:227:com.fasterxml.jackson.annotation.Nulls nonDefaultValueNulls() -> nonDefaultValueNulls
    235:235:com.fasterxml.jackson.annotation.Nulls nonDefaultContentNulls() -> nonDefaultContentNulls
    246:246:java.lang.String toString() -> toString
    252:252:int hashCode() -> hashCode
    257:264:boolean equals(java.lang.Object) -> equals
    274:274:boolean _empty(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> _empty
    75:75:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonSubTypes -> com.fasterxml.jackson.annotation.JsonSubTypes:
    com.fasterxml.jackson.annotation.JsonSubTypes$Type[] value() -> value
com.fasterxml.jackson.annotation.JsonSubTypes$Type -> com.fasterxml.jackson.annotation.JsonSubTypes$Type:
    java.lang.Class value() -> value
    java.lang.String name() -> name
com.fasterxml.jackson.annotation.JsonTypeId -> com.fasterxml.jackson.annotation.JsonTypeId:
com.fasterxml.jackson.annotation.JsonTypeInfo -> com.fasterxml.jackson.annotation.JsonTypeInfo:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id use() -> use
    com.fasterxml.jackson.annotation.JsonTypeInfo$As include() -> include
    java.lang.String property() -> property
    java.lang.Class defaultImpl() -> defaultImpl
    boolean visible() -> visible
com.fasterxml.jackson.annotation.JsonTypeInfo$As -> com.fasterxml.jackson.annotation.JsonTypeInfo$As:
    com.fasterxml.jackson.annotation.JsonTypeInfo$As PROPERTY -> PROPERTY
    com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_OBJECT -> WRAPPER_OBJECT
    com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_ARRAY -> WRAPPER_ARRAY
    com.fasterxml.jackson.annotation.JsonTypeInfo$As EXTERNAL_PROPERTY -> EXTERNAL_PROPERTY
    com.fasterxml.jackson.annotation.JsonTypeInfo$As EXISTING_PROPERTY -> EXISTING_PROPERTY
    com.fasterxml.jackson.annotation.JsonTypeInfo$As[] $VALUES -> $VALUES
    141:141:com.fasterxml.jackson.annotation.JsonTypeInfo$As[] values() -> values
    141:141:com.fasterxml.jackson.annotation.JsonTypeInfo$As valueOf(java.lang.String) -> valueOf
    141:141:void <init>(java.lang.String,int) -> <init>
    141:199:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonTypeInfo$Id -> com.fasterxml.jackson.annotation.JsonTypeInfo$Id:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id NONE -> NONE
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id CLASS -> CLASS
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id MINIMAL_CLASS -> MINIMAL_CLASS
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id NAME -> NAME
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id CUSTOM -> CUSTOM
    java.lang.String _defaultPropertyName -> _defaultPropertyName
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] $VALUES -> $VALUES
    75:75:com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] values() -> values
    75:75:com.fasterxml.jackson.annotation.JsonTypeInfo$Id valueOf(java.lang.String) -> valueOf
    129:131:void <init>(java.lang.String,int,java.lang.String) -> <init>
    133:133:java.lang.String getDefaultPropertyName() -> getDefaultPropertyName
    75:124:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonTypeInfo$None -> com.fasterxml.jackson.annotation.JsonTypeInfo$None:
    314:314:void <init>() -> <init>
com.fasterxml.jackson.annotation.JsonTypeName -> com.fasterxml.jackson.annotation.JsonTypeName:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonUnwrapped -> com.fasterxml.jackson.annotation.JsonUnwrapped:
    boolean enabled() -> enabled
    java.lang.String prefix() -> prefix
    java.lang.String suffix() -> suffix
com.fasterxml.jackson.annotation.JsonValue -> com.fasterxml.jackson.annotation.JsonValue:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonView -> com.fasterxml.jackson.annotation.JsonView:
    java.lang.Class[] value() -> value
com.fasterxml.jackson.annotation.Nulls -> com.fasterxml.jackson.annotation.Nulls:
    com.fasterxml.jackson.annotation.Nulls SET -> SET
    com.fasterxml.jackson.annotation.Nulls SKIP -> SKIP
    com.fasterxml.jackson.annotation.Nulls FAIL -> FAIL
    com.fasterxml.jackson.annotation.Nulls AS_EMPTY -> AS_EMPTY
    com.fasterxml.jackson.annotation.Nulls DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.Nulls[] $VALUES -> $VALUES
    9:9:com.fasterxml.jackson.annotation.Nulls[] values() -> values
    9:9:com.fasterxml.jackson.annotation.Nulls valueOf(java.lang.String) -> valueOf
    9:9:void <init>(java.lang.String,int) -> <init>
    9:42:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.ObjectIdGenerator -> com.fasterxml.jackson.annotation.ObjectIdGenerator:
    12:128:void <init>() -> <init>
    java.lang.Class getScope() -> getScope
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    49:49:boolean maySerializeAsObject() -> maySerializeAsObject
    64:64:boolean isValidReferencePropertyName(java.lang.String,java.lang.Object) -> isValidReferencePropertyName
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey -> com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey:
    java.lang.Class type -> type
    java.lang.Class scope -> scope
    java.lang.Object key -> key
    int hashCode -> hashCode
    150:163:void <init>(java.lang.Class,java.lang.Class,java.lang.Object) -> <init>
    166:166:int hashCode() -> hashCode
    171:175:boolean equals(java.lang.Object) -> equals
    180:180:java.lang.String toString() -> toString
com.fasterxml.jackson.annotation.ObjectIdGenerators -> com.fasterxml.jackson.annotation.ObjectIdGenerators:
com.fasterxml.jackson.annotation.ObjectIdGenerators$Base -> com.fasterxml.jackson.annotation.ObjectIdGenerators$Base:
    java.lang.Class _scope -> _scope
    31:33:void <init>(java.lang.Class) -> <init>
    37:37:java.lang.Class getScope() -> getScope
    42:42:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
com.fasterxml.jackson.annotation.ObjectIdGenerators$None -> com.fasterxml.jackson.annotation.ObjectIdGenerators$None:
    61:61:void <init>() -> <init>
com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator -> com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator:
    75:75:void <init>(java.lang.Class) -> <init>
    72:72:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
com.fasterxml.jackson.annotation.ObjectIdResolver -> com.fasterxml.jackson.annotation.ObjectIdResolver:
    void bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey,java.lang.Object) -> bindItem
    java.lang.Object resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> resolveId
    com.fasterxml.jackson.annotation.ObjectIdResolver newForDeserialization(java.lang.Object) -> newForDeserialization
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver) -> canUseFor
com.fasterxml.jackson.annotation.OptBoolean -> com.fasterxml.jackson.annotation.OptBoolean:
    com.fasterxml.jackson.annotation.OptBoolean TRUE -> TRUE
    com.fasterxml.jackson.annotation.OptBoolean FALSE -> FALSE
    com.fasterxml.jackson.annotation.OptBoolean DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.OptBoolean[] $VALUES -> $VALUES
    17:17:com.fasterxml.jackson.annotation.OptBoolean[] values() -> values
    17:17:com.fasterxml.jackson.annotation.OptBoolean valueOf(java.lang.String) -> valueOf
    17:17:void <init>(java.lang.String,int) -> <init>
    40:41:java.lang.Boolean asBoolean() -> asBoolean
    56:59:boolean equals(java.lang.Boolean,java.lang.Boolean) -> equals
    17:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.PropertyAccessor -> com.fasterxml.jackson.annotation.PropertyAccessor:
    com.fasterxml.jackson.annotation.PropertyAccessor GETTER -> GETTER
    com.fasterxml.jackson.annotation.PropertyAccessor SETTER -> SETTER
    com.fasterxml.jackson.annotation.PropertyAccessor CREATOR -> CREATOR
    com.fasterxml.jackson.annotation.PropertyAccessor FIELD -> FIELD
    com.fasterxml.jackson.annotation.PropertyAccessor IS_GETTER -> IS_GETTER
    com.fasterxml.jackson.annotation.PropertyAccessor NONE -> NONE
    com.fasterxml.jackson.annotation.PropertyAccessor ALL -> ALL
    com.fasterxml.jackson.annotation.PropertyAccessor[] $VALUES -> $VALUES
    13:13:com.fasterxml.jackson.annotation.PropertyAccessor[] values() -> values
    13:13:com.fasterxml.jackson.annotation.PropertyAccessor valueOf(java.lang.String) -> valueOf
    66:66:void <init>(java.lang.String,int) -> <init>
    13:63:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.SimpleObjectIdResolver -> com.fasterxml.jackson.annotation.SimpleObjectIdResolver:
    java.util.Map _items -> _items
    16:16:void <init>() -> <init>
    21:28:void bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey,java.lang.Object) -> bindItem
    32:32:java.lang.Object resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> resolveId
    37:37:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver) -> canUseFor
    44:44:com.fasterxml.jackson.annotation.ObjectIdResolver newForDeserialization(java.lang.Object) -> newForDeserialization
com.fasterxml.jackson.core.Base64Variant -> com.fasterxml.jackson.core.Base64Variant:
    int[] _asciiToBase64 -> _asciiToBase64
    char[] _base64ToAsciiC -> _base64ToAsciiC
    byte[] _base64ToAsciiB -> _base64ToAsciiB
    java.lang.String _name -> _name
    boolean _usesPadding -> _usesPadding
    char _paddingChar -> _paddingChar
    int _maxLineLength -> _maxLineLength
    55:139:void <init>(java.lang.String,java.lang.String,boolean,char,int) -> <init>
    148:149:void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,int) -> <init>
    55:169:void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,int) -> <init>
    193:193:boolean usesPadding() -> usesPadding
    194:194:boolean usesPaddingChar(char) -> usesPaddingChar
    195:195:boolean usesPaddingChar(int) -> usesPaddingChar
    196:196:char getPaddingChar() -> getPaddingChar
    199:199:int getMaxLineLength() -> getMaxLineLength
    212:213:int decodeBase64Char(char) -> decodeBase64Char
    218:218:int decodeBase64Char(int) -> decodeBase64Char
    251:255:int encodeBase64Chunk(int,char[],int) -> encodeBase64Chunk
    260:264:void encodeBase64Chunk(java.lang.StringBuilder,int) -> encodeBase64Chunk
    276:287:int encodeBase64Partial(int,int,char[],int) -> encodeBase64Partial
    292:303:void encodeBase64Partial(java.lang.StringBuilder,int,int) -> encodeBase64Partial
    317:321:int encodeBase64Chunk(int,byte[],int) -> encodeBase64Chunk
    334:346:int encodeBase64Partial(int,int,byte[],int) -> encodeBase64Partial
    365:365:java.lang.String encode(byte[]) -> encode
    378:422:java.lang.String encode(byte[],boolean) -> encode
    438:440:byte[] decode(java.lang.String) -> decode
    458:543:void decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder) -> decode
    552:552:java.lang.String toString() -> toString
    557:557:boolean equals(java.lang.Object) -> equals
    562:562:int hashCode() -> hashCode
    579:592:void _reportInvalidBase64(char,int,java.lang.String) -> _reportInvalidBase64
    596:596:void _reportBase64EOF() -> _reportBase64EOF
com.fasterxml.jackson.core.Base64Variants -> com.fasterxml.jackson.core.Base64Variants:
    com.fasterxml.jackson.core.Base64Variant MIME -> MIME
    com.fasterxml.jackson.core.Base64Variant MIME_NO_LINEFEEDS -> MIME_NO_LINEFEEDS
    com.fasterxml.jackson.core.Base64Variant PEM -> PEM
    com.fasterxml.jackson.core.Base64Variant MODIFIED_FOR_URL -> MODIFIED_FOR_URL
    84:84:com.fasterxml.jackson.core.Base64Variant getDefaultVariant() -> getDefaultVariant
    34:75:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.FormatSchema -> com.fasterxml.jackson.core.FormatSchema:
    java.lang.String getSchemaType() -> getSchemaType
com.fasterxml.jackson.core.JsonEncoding -> com.fasterxml.jackson.core.JsonEncoding:
    com.fasterxml.jackson.core.JsonEncoding UTF8 -> UTF8
    com.fasterxml.jackson.core.JsonEncoding UTF16_BE -> UTF16_BE
    com.fasterxml.jackson.core.JsonEncoding UTF16_LE -> UTF16_LE
    com.fasterxml.jackson.core.JsonEncoding UTF32_BE -> UTF32_BE
    com.fasterxml.jackson.core.JsonEncoding UTF32_LE -> UTF32_LE
    java.lang.String _javaName -> _javaName
    boolean _bigEndian -> _bigEndian
    int _bits -> _bits
    com.fasterxml.jackson.core.JsonEncoding[] $VALUES -> $VALUES
    18:18:com.fasterxml.jackson.core.JsonEncoding[] values() -> values
    18:18:com.fasterxml.jackson.core.JsonEncoding valueOf(java.lang.String) -> valueOf
    33:37:void <init>(java.lang.String,int,java.lang.String,boolean,int) -> <init>
    44:44:java.lang.String getJavaName() -> getJavaName
    54:54:boolean isBigEndian() -> isBigEndian
    56:56:int bits() -> bits
    18:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonFactory -> com.fasterxml.jackson.core.JsonFactory:
    int DEFAULT_FACTORY_FEATURE_FLAGS -> DEFAULT_FACTORY_FEATURE_FLAGS
    int DEFAULT_PARSER_FEATURE_FLAGS -> DEFAULT_PARSER_FEATURE_FLAGS
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> DEFAULT_GENERATOR_FEATURE_FLAGS
    com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols -> _rootCharSymbols
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer -> _byteSymbolCanonicalizer
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    int _factoryFeatures -> _factoryFeatures
    int _parserFeatures -> _parserFeatures
    int _generatorFeatures -> _generatorFeatures
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> _characterEscapes
    com.fasterxml.jackson.core.io.InputDecorator _inputDecorator -> _inputDecorator
    com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator -> _outputDecorator
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> _rootValueSeparator
    278:278:void <init>() -> <init>
    191:280:void <init>(com.fasterxml.jackson.core.ObjectCodec) -> <init>
    373:373:boolean requiresPropertyOrdering() -> requiresPropertyOrdering
    401:401:boolean canUseCharArrays() -> canUseCharArrays
    475:478:java.lang.String getFormatName() -> getFormatName
    488:491:com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasFormat
    517:517:com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasJSONFormat
    581:581:com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    589:590:com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    598:599:com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    731:732:com.fasterxml.jackson.core.JsonFactory setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    735:735:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    819:820:com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> createParser
    839:840:com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> createParser
    850:857:com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> createParser
    871:879:com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> createParser
    889:899:com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> createParser
    936:937:com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) -> createParser
    1136:1142:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    1173:1174:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> createGenerator
    1315:1315:com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    1332:1332:com.fasterxml.jackson.core.JsonParser _createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    1344:1344:com.fasterxml.jackson.core.JsonParser _createParser(char[],int,int,com.fasterxml.jackson.core.io.IOContext,boolean) -> _createParser
    1362:1362:com.fasterxml.jackson.core.JsonParser _createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    1375:1380:com.fasterxml.jackson.core.JsonParser _createParser(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    1403:1412:com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> _createGenerator
    1426:1435:com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> _createUTF8Generator
    1441:1445:java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext) -> _createWriter
    1458:1464:java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    1471:1477:java.io.Reader _decorate(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    1484:1490:java.io.DataInput _decorate(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    1497:1503:java.io.OutputStream _decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    1510:1516:java.io.Writer _decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    1537:1540:com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler() -> _getBufferRecycler
    1548:1548:com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean) -> _createContext
    1604:1607:void _requireJSONFactory(java.lang.String) -> _requireJSONFactory
    1612:1612:boolean _isJSONFactory() -> _isJSONFactory
    164:178:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonFactory$Feature -> com.fasterxml.jackson.core.JsonFactory$Feature:
    com.fasterxml.jackson.core.JsonFactory$Feature INTERN_FIELD_NAMES -> INTERN_FIELD_NAMES
    com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES -> CANONICALIZE_FIELD_NAMES
    com.fasterxml.jackson.core.JsonFactory$Feature FAIL_ON_SYMBOL_HASH_OVERFLOW -> FAIL_ON_SYMBOL_HASH_OVERFLOW
    com.fasterxml.jackson.core.JsonFactory$Feature USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING -> USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING
    boolean _defaultState -> _defaultState
    com.fasterxml.jackson.core.JsonFactory$Feature[] $VALUES -> $VALUES
    59:59:com.fasterxml.jackson.core.JsonFactory$Feature[] values() -> values
    59:59:com.fasterxml.jackson.core.JsonFactory$Feature valueOf(java.lang.String) -> valueOf
    135:139:int collectDefaults() -> collectDefaults
    142:142:void <init>(java.lang.String,int,boolean) -> <init>
    144:144:boolean enabledByDefault() -> enabledByDefault
    145:145:boolean enabledIn(int) -> enabledIn
    146:146:int getMask() -> getMask
    59:121:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonGenerationException -> com.fasterxml.jackson.core.JsonGenerationException:
    com.fasterxml.jackson.core.JsonGenerator _processor -> _processor
    48:50:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    72:72:com.fasterxml.jackson.core.JsonGenerator getProcessor() -> getProcessor
    13:13:java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.JsonGenerator -> com.fasterxml.jackson.core.JsonGenerator:
    com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter -> _cfgPrettyPrinter
    269:269:void <init>() -> <init>
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    int getFeatureMask() -> getFeatureMask
    com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> setFeatureMask
    373:375:com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> overrideStdFeatures
    404:404:com.fasterxml.jackson.core.JsonGenerator overrideFormatFeatures(int,int) -> overrideFormatFeatures
    434:434:void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    464:465:com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> setPrettyPrinter
    475:475:com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter() -> getPrettyPrinter
    508:508:com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    536:536:com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    550:550:com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    627:631:void setCurrentValue(java.lang.Object) -> setCurrentValue
    663:663:boolean canWriteObjectId() -> canWriteObjectId
    679:679:boolean canWriteTypeId() -> canWriteTypeId
    691:691:boolean canWriteBinaryNatively() -> canWriteBinaryNatively
    701:701:boolean canOmitFields() -> canOmitFields
    void writeStartArray() -> writeStartArray
    750:751:void writeStartArray(int) -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    790:792:void writeStartObject(java.lang.Object) -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    841:842:void writeFieldId(long) -> writeFieldId
    863:872:void writeArray(int[],int,int) -> writeArray
    887:896:void writeArray(long[],int,int) -> writeArray
    911:920:void writeArray(double[],int,int) -> writeArray
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    1095:1096:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    1120:1121:void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> writeRawValue
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    1153:1154:void writeBinary(byte[],int,int) -> writeBinary
    1163:1164:void writeBinary(byte[]) -> writeBinary
    1181:1181:int writeBinary(java.io.InputStream,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    1225:1225:void writeNumber(short) -> writeNumber
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    1349:1357:void writeEmbeddedObject(java.lang.Object) -> writeEmbeddedObject
    1380:1380:void writeObjectId(java.lang.Object) -> writeObjectId
    1393:1393:void writeObjectRef(java.lang.Object) -> writeObjectRef
    1408:1408:void writeTypeId(java.lang.Object) -> writeTypeId
    1427:1481:com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    1489:1520:com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    void writeObject(java.lang.Object) -> writeObject
    1569:1571:void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    1711:1713:void writeObjectFieldStart(java.lang.String) -> writeObjectFieldStart
    1725:1727:void writeObjectField(java.lang.String,java.lang.Object) -> writeObjectField
    1738:1738:void writeOmittedField(java.lang.String) -> writeOmittedField
    1758:1828:void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    1862:1892:void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    void flush() -> flush
    void close() -> close
    1961:1961:void _reportError(java.lang.String) -> _reportError
    1964:1964:void _throwInternal() -> _throwInternal
    1967:1967:void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    1975:1980:void _verifyOffsets(int,int,int) -> _verifyOffsets
    1995:2048:void _writeSimpleObject(java.lang.Object) -> _writeSimpleObject
com.fasterxml.jackson.core.JsonGenerator$1 -> com.fasterxml.jackson.core.JsonGenerator$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion -> $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion
    1447:1447:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonGenerator$Feature -> com.fasterxml.jackson.core.JsonGenerator$Feature:
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET -> AUTO_CLOSE_TARGET
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT -> AUTO_CLOSE_JSON_CONTENT
    com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM -> FLUSH_PASSED_TO_STREAM
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_FIELD_NAMES -> QUOTE_FIELD_NAMES
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS -> QUOTE_NON_NUMERIC_NUMBERS
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS -> WRITE_NUMBERS_AS_STRINGS
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_BIGDECIMAL_AS_PLAIN -> WRITE_BIGDECIMAL_AS_PLAIN
    com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII -> ESCAPE_NON_ASCII
    com.fasterxml.jackson.core.JsonGenerator$Feature STRICT_DUPLICATE_DETECTION -> STRICT_DUPLICATE_DETECTION
    com.fasterxml.jackson.core.JsonGenerator$Feature IGNORE_UNKNOWN -> IGNORE_UNKNOWN
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.core.JsonGenerator$Feature[] $VALUES -> $VALUES
    35:35:com.fasterxml.jackson.core.JsonGenerator$Feature[] values() -> values
    35:35:com.fasterxml.jackson.core.JsonGenerator$Feature valueOf(java.lang.String) -> valueOf
    226:232:int collectDefaults() -> collectDefaults
    235:238:void <init>(java.lang.String,int,boolean) -> <init>
    240:240:boolean enabledByDefault() -> enabledByDefault
    245:245:boolean enabledIn(int) -> enabledIn
    247:247:int getMask() -> getMask
    35:214:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonLocation -> com.fasterxml.jackson.core.JsonLocation:
    com.fasterxml.jackson.core.JsonLocation NA -> NA
    long _totalBytes -> _totalBytes
    long _totalChars -> _totalChars
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    java.lang.Object _sourceRef -> _sourceRef
    58:59:void <init>(java.lang.Object,long,int,int) -> <init>
    63:69:void <init>(java.lang.Object,long,long,int,int) -> <init>
    103:103:long getByteOffset() -> getByteOffset
    128:133:int hashCode() -> hashCode
    139:148:boolean equals(java.lang.Object) -> equals
    158:166:java.lang.String toString() -> toString
    171:214:java.lang.StringBuilder _appendSourceDesc(java.lang.StringBuilder) -> _appendSourceDesc
    218:219:int _append(java.lang.StringBuilder,java.lang.String) -> _append
    36:36:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonParseException -> com.fasterxml.jackson.core.JsonParseException:
    com.fasterxml.jackson.core.JsonParser _processor -> _processor
    com.fasterxml.jackson.core.util.RequestPayload _requestPayload -> _requestPayload
    49:51:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    57:59:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable) -> <init>
    99:100:com.fasterxml.jackson.core.JsonParseException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> withRequestPayload
    105:105:com.fasterxml.jackson.core.JsonParser getProcessor() -> getProcessor
    137:141:java.lang.String getMessage() -> getMessage
    15:15:java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.JsonParser -> com.fasterxml.jackson.core.JsonParser:
    int _features -> _features
    com.fasterxml.jackson.core.util.RequestPayload _requestPayload -> _requestPayload
    346:346:void <init>() -> <init>
    347:347:void <init>(int) -> <init>
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    407:411:void setCurrentValue(java.lang.Object) -> setCurrentValue
    461:461:void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    502:502:boolean requiresCustomCodec() -> requiresCustomCodec
    void close() -> close
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    685:685:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    707:708:com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> setFeatureMask
    727:728:com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> overrideStdFeatures
    757:757:com.fasterxml.jackson.core.JsonParser overrideFormatFeatures(int,int) -> overrideFormatFeatures
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    825:825:java.lang.String nextFieldName() -> nextFieldName
    840:840:java.lang.String nextTextValue() -> nextTextValue
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    948:948:com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    int getCurrentTokenId() -> getCurrentTokenId
    boolean hasCurrentToken() -> hasCurrentToken
    boolean hasTokenId(int) -> hasTokenId
    boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    1040:1040:boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    1048:1048:boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    1061:1061:boolean isNaN() -> isNaN
    void clearCurrentToken() -> clearCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.lang.Number getNumberValue() -> getNumberValue
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    1262:1269:byte getByteValue() -> getByteValue
    1287:1291:short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    1410:1410:java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    1448:1448:byte[] getBinaryValue() -> getBinaryValue
    1481:1482:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    1503:1503:int getValueAsInt() -> getValueAsInt
    1517:1517:int getValueAsInt(int) -> getValueAsInt
    1531:1531:long getValueAsLong() -> getValueAsLong
    1546:1546:long getValueAsLong(long) -> getValueAsLong
    1621:1621:java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    1655:1655:boolean canReadObjectId() -> canReadObjectId
    1669:1669:boolean canReadTypeId() -> canReadTypeId
    1684:1684:java.lang.Object getObjectId() -> getObjectId
    1699:1699:java.lang.Object getTypeId() -> getTypeId
    1729:1729:java.lang.Object readValueAs(java.lang.Class) -> readValueAs
    1782:1782:com.fasterxml.jackson.core.TreeNode readValueAsTree() -> readValueAsTree
    1786:1790:com.fasterxml.jackson.core.ObjectCodec _codec() -> _codec
    1804:1804:com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String) -> _constructError
    1815:1815:void _reportUnsupportedOperation() -> _reportUnsupportedOperation
com.fasterxml.jackson.core.JsonParser$Feature -> com.fasterxml.jackson.core.JsonParser$Feature:
    com.fasterxml.jackson.core.JsonParser$Feature AUTO_CLOSE_SOURCE -> AUTO_CLOSE_SOURCE
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_COMMENTS -> ALLOW_COMMENTS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_YAML_COMMENTS -> ALLOW_YAML_COMMENTS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES -> ALLOW_UNQUOTED_FIELD_NAMES
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_SINGLE_QUOTES -> ALLOW_SINGLE_QUOTES
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_CONTROL_CHARS -> ALLOW_UNQUOTED_CONTROL_CHARS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS -> ALLOW_NUMERIC_LEADING_ZEROS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS -> ALLOW_NON_NUMERIC_NUMBERS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_MISSING_VALUES -> ALLOW_MISSING_VALUES
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_TRAILING_COMMA -> ALLOW_TRAILING_COMMA
    com.fasterxml.jackson.core.JsonParser$Feature STRICT_DUPLICATE_DETECTION -> STRICT_DUPLICATE_DETECTION
    com.fasterxml.jackson.core.JsonParser$Feature IGNORE_UNDEFINED -> IGNORE_UNDEFINED
    com.fasterxml.jackson.core.JsonParser$Feature INCLUDE_SOURCE_IN_LOCATION -> INCLUDE_SOURCE_IN_LOCATION
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.core.JsonParser$Feature[] $VALUES -> $VALUES
    45:45:com.fasterxml.jackson.core.JsonParser$Feature[] values() -> values
    45:45:com.fasterxml.jackson.core.JsonParser$Feature valueOf(java.lang.String) -> valueOf
    296:302:int collectDefaults() -> collectDefaults
    305:308:void <init>(java.lang.String,int,boolean) -> <init>
    310:310:boolean enabledByDefault() -> enabledByDefault
    315:315:boolean enabledIn(int) -> enabledIn
    317:317:int getMask() -> getMask
    45:279:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonParser$NumberType -> com.fasterxml.jackson.core.JsonParser$NumberType:
    com.fasterxml.jackson.core.JsonParser$NumberType INT -> INT
    com.fasterxml.jackson.core.JsonParser$NumberType LONG -> LONG
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER -> BIG_INTEGER
    com.fasterxml.jackson.core.JsonParser$NumberType FLOAT -> FLOAT
    com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE -> DOUBLE
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL -> BIG_DECIMAL
    com.fasterxml.jackson.core.JsonParser$NumberType[] $VALUES -> $VALUES
    38:38:com.fasterxml.jackson.core.JsonParser$NumberType[] values() -> values
    38:38:com.fasterxml.jackson.core.JsonParser$NumberType valueOf(java.lang.String) -> valueOf
    38:38:void <init>(java.lang.String,int) -> <init>
    38:39:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonProcessingException -> com.fasterxml.jackson.core.JsonProcessingException:
    com.fasterxml.jackson.core.JsonLocation _location -> _location
    25:30:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    33:34:void <init>(java.lang.String) -> <init>
    37:38:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    41:42:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    54:54:com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    72:72:java.lang.String getOriginalMessage() -> getOriginalMessage
    88:88:java.lang.Object getProcessor() -> getProcessor
    101:101:java.lang.String getMessageSuffix() -> getMessageSuffix
    113:133:java.lang.String getMessage() -> getMessage
    136:136:java.lang.String toString() -> toString
com.fasterxml.jackson.core.JsonStreamContext -> com.fasterxml.jackson.core.JsonStreamContext:
    int _type -> _type
    int _index -> _index
    45:45:void <init>() -> <init>
    53:56:void <init>(com.fasterxml.jackson.core.JsonStreamContext) -> <init>
    61:64:void <init>(int,int) -> <init>
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
    82:82:boolean inArray() -> inArray
    89:89:boolean inRoot() -> inRoot
    95:95:boolean inObject() -> inObject
    118:123:java.lang.String typeDesc() -> typeDesc
    129:129:int getEntryCount() -> getEntryCount
    134:134:int getCurrentIndex() -> getCurrentIndex
    java.lang.String getCurrentName() -> getCurrentName
    198:198:java.lang.Object getCurrentValue() -> getCurrentValue
    208:208:void setCurrentValue(java.lang.Object) -> setCurrentValue
    250:250:com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    261:285:java.lang.String toString() -> toString
com.fasterxml.jackson.core.JsonToken -> com.fasterxml.jackson.core.JsonToken:
    com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    com.fasterxml.jackson.core.JsonToken START_OBJECT -> START_OBJECT
    com.fasterxml.jackson.core.JsonToken END_OBJECT -> END_OBJECT
    com.fasterxml.jackson.core.JsonToken START_ARRAY -> START_ARRAY
    com.fasterxml.jackson.core.JsonToken END_ARRAY -> END_ARRAY
    com.fasterxml.jackson.core.JsonToken FIELD_NAME -> FIELD_NAME
    com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT -> VALUE_EMBEDDED_OBJECT
    com.fasterxml.jackson.core.JsonToken VALUE_STRING -> VALUE_STRING
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    com.fasterxml.jackson.core.JsonToken VALUE_TRUE -> VALUE_TRUE
    com.fasterxml.jackson.core.JsonToken VALUE_FALSE -> VALUE_FALSE
    com.fasterxml.jackson.core.JsonToken VALUE_NULL -> VALUE_NULL
    java.lang.String _serialized -> _serialized
    char[] _serializedChars -> _serializedChars
    byte[] _serializedBytes -> _serializedBytes
    int _id -> _id
    boolean _isStructStart -> _isStructStart
    boolean _isStructEnd -> _isStructEnd
    boolean _isNumber -> _isNumber
    boolean _isBoolean -> _isBoolean
    boolean _isScalar -> _isScalar
    com.fasterxml.jackson.core.JsonToken[] $VALUES -> $VALUES
    12:12:com.fasterxml.jackson.core.JsonToken[] values() -> values
    12:12:com.fasterxml.jackson.core.JsonToken valueOf(java.lang.String) -> valueOf
    141:167:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    169:169:int id() -> id
    171:171:java.lang.String asString() -> asString
    172:172:char[] asCharArray() -> asCharArray
    175:175:boolean isNumeric() -> isNumeric
    185:185:boolean isStructStart() -> isStructStart
    195:195:boolean isStructEnd() -> isStructEnd
    202:202:boolean isScalarValue() -> isScalarValue
    12:117:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.ObjectCodec -> com.fasterxml.jackson.core.ObjectCodec:
    27:27:void <init>() -> <init>
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    172:172:com.fasterxml.jackson.core.JsonFactory getJsonFactory() -> getJsonFactory
    180:180:com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
com.fasterxml.jackson.core.PrettyPrinter -> com.fasterxml.jackson.core.PrettyPrinter:
    com.fasterxml.jackson.core.util.Separators DEFAULT_SEPARATORS -> DEFAULT_SEPARATORS
    com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    31:38:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.SerializableString -> com.fasterxml.jackson.core.SerializableString:
    java.lang.String getValue() -> getValue
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
    int appendQuotedUTF8(byte[],int) -> appendQuotedUTF8
com.fasterxml.jackson.core.TreeCodec -> com.fasterxml.jackson.core.TreeCodec:
    11:11:void <init>() -> <init>
com.fasterxml.jackson.core.TreeNode -> com.fasterxml.jackson.core.TreeNode:
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
com.fasterxml.jackson.core.Version -> com.fasterxml.jackson.core.Version:
    com.fasterxml.jackson.core.Version UNKNOWN_VERSION -> UNKNOWN_VERSION
    int _majorVersion -> _majorVersion
    int _minorVersion -> _minorVersion
    int _patchLevel -> _patchLevel
    java.lang.String _groupId -> _groupId
    java.lang.String _artifactId -> _artifactId
    java.lang.String _snapshotInfo -> _snapshotInfo
    52:59:void <init>(int,int,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    65:65:com.fasterxml.jackson.core.Version unknownVersion() -> unknownVersion
    72:72:boolean isSnapshot() -> isSnapshot
    92:99:java.lang.String toString() -> toString
    103:103:int hashCode() -> hashCode
    109:113:boolean equals(java.lang.Object) -> equals
    124:139:int compareTo(com.fasterxml.jackson.core.Version) -> compareTo
    16:16:int compareTo(java.lang.Object) -> compareTo
    21:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.base.GeneratorBase -> com.fasterxml.jackson.core.base.GeneratorBase:
    int DERIVED_FEATURES_MASK -> DERIVED_FEATURES_MASK
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    int _features -> _features
    boolean _cfgNumbersAsStrings -> _cfgNumbersAsStrings
    com.fasterxml.jackson.core.json.JsonWriteContext _writeContext -> _writeContext
    boolean _closed -> _closed
    104:111:void <init>(int,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    138:139:void setCurrentValue(java.lang.Object) -> setCurrentValue
    148:148:boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    149:149:int getFeatureMask() -> getFeatureMask
    174:185:com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    191:196:com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> setFeatureMask
    201:208:com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> overrideStdFeatures
    222:242:void _checkStdFeatureChanges(int,int) -> _checkStdFeatureChanges
    270:270:com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    286:291:void writeStartObject(java.lang.Object) -> writeStartObject
    300:301:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    315:316:void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    319:321:void writeRawValue(java.lang.String) -> writeRawValue
    334:336:void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> writeRawValue
    341:342:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    371:386:void writeObject(java.lang.Object) -> writeObject
    408:408:void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    450:460:java.lang.String _asString(java.math.BigDecimal) -> _asString
    475:480:int _decodeSurrogate(int,int) -> _decodeSurrogate
    31:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.base.ParserBase -> com.fasterxml.jackson.core.base.ParserBase:
    com.fasterxml.jackson.core.io.IOContext _ioContext -> _ioContext
    boolean _closed -> _closed
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    long _currInputProcessed -> _currInputProcessed
    int _currInputRow -> _currInputRow
    int _currInputRowStart -> _currInputRowStart
    long _tokenInputTotal -> _tokenInputTotal
    int _tokenInputRow -> _tokenInputRow
    int _tokenInputCol -> _tokenInputCol
    com.fasterxml.jackson.core.json.JsonReadContext _parsingContext -> _parsingContext
    com.fasterxml.jackson.core.JsonToken _nextToken -> _nextToken
    com.fasterxml.jackson.core.util.TextBuffer _textBuffer -> _textBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    boolean _nameCopied -> _nameCopied
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteArrayBuilder -> _byteArrayBuilder
    byte[] _binaryValue -> _binaryValue
    int _numTypesValid -> _numTypesValid
    int _numberInt -> _numberInt
    long _numberLong -> _numberLong
    double _numberDouble -> _numberDouble
    java.math.BigInteger _numberBigInt -> _numberBigInt
    java.math.BigDecimal _numberBigDecimal -> _numberBigDecimal
    boolean _numberNegative -> _numberNegative
    int _intLength -> _intLength
    int _fractLength -> _fractLength
    int _expLength -> _expLength
    77:238:void <init>(com.fasterxml.jackson.core.io.IOContext,int) -> <init>
    249:250:void setCurrentValue(java.lang.Object) -> setCurrentValue
    281:286:com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> setFeatureMask
    291:298:com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> overrideStdFeatures
    312:323:void _checkStdFeatureChanges(int,int) -> _checkStdFeatureChanges
    337:343:java.lang.String getCurrentName() -> getCurrentName
    363:375:void close() -> close
    378:378:com.fasterxml.jackson.core.json.JsonReadContext getParsingContext() -> getParsingContext
    387:387:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    399:400:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    413:415:boolean hasTextCharacters() -> hasTextCharacters
    422:430:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    439:439:long getTokenCharacterOffset() -> getTokenCharacterOffset
    440:440:int getTokenLineNr() -> getTokenLineNr
    443:444:int getTokenColumnNr() -> getTokenColumnNr
    void _closeInput() -> _closeInput
    468:474:void _releaseBuffers() -> _releaseBuffers
    483:491:void _handleEOF() -> _handleEOF
    497:498:int _eofAsNextChar() -> _eofAsNextChar
    509:514:com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() -> _getByteArrayBuilder
    527:530:com.fasterxml.jackson.core.JsonToken reset(boolean,int,int,int) -> reset
    535:540:com.fasterxml.jackson.core.JsonToken resetInt(boolean,int) -> resetInt
    545:550:com.fasterxml.jackson.core.JsonToken resetFloat(boolean,int,int,int) -> resetFloat
    555:558:com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double) -> resetAsNaN
    563:570:boolean isNaN() -> isNaN
    582:609:java.lang.Number getNumberValue() -> getNumberValue
    615:637:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    643:651:int getIntValue() -> getIntValue
    657:665:long getLongValue() -> getLongValue
    671:679:java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    685:694:float getFloatValue() -> getFloatValue
    700:708:double getDoubleValue() -> getDoubleValue
    714:722:java.math.BigDecimal getDecimalValue() -> getDecimalValue
    743:782:void _parseNumericValue(int) -> _parseNumericValue
    790:803:int _parseIntValue() -> _parseIntValue
    816:828:void _parseSlowFloat(int) -> _parseSlowFloat
    832:854:void _parseSlowInt(int) -> _parseSlowInt
    865:894:void convertNumberToInt() -> convertNumberToInt
    898:922:void convertNumberToLong() -> convertNumberToLong
    926:939:void convertNumberToBigInteger() -> convertNumberToBigInteger
    949:961:void convertNumberToDouble() -> convertNumberToDouble
    971:986:void convertNumberToBigDecimal() -> convertNumberToBigDecimal
    995:999:void _reportMismatchedEndMarker(int,char) -> _reportMismatchedEndMarker
    1013:1013:char _decodeEscaped() -> _decodeEscaped
    1019:1034:int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int) -> _decodeBase64Escape
    1039:1054:int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int) -> _decodeBase64Escape
    1058:1058:java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int) -> reportInvalidBase64Char
    1067:1081:java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String) -> reportInvalidBase64Char
    1097:1100:java.lang.Object _getSourceReference() -> _getSourceReference
    1105:1108:int[] growArrayBy(int[],int) -> growArrayBy
    1127:1127:void _finishString() -> _finishString
    22:22:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
com.fasterxml.jackson.core.base.ParserMinimalBase -> com.fasterxml.jackson.core.base.ParserMinimalBase:
    byte[] NO_BYTES -> NO_BYTES
    int[] NO_INTS -> NO_INTS
    java.math.BigInteger BI_MIN_INT -> BI_MIN_INT
    java.math.BigInteger BI_MAX_INT -> BI_MAX_INT
    java.math.BigInteger BI_MIN_LONG -> BI_MIN_LONG
    java.math.BigInteger BI_MAX_LONG -> BI_MAX_LONG
    java.math.BigDecimal BD_MIN_LONG -> BD_MIN_LONG
    java.math.BigDecimal BD_MAX_LONG -> BD_MAX_LONG
    java.math.BigDecimal BD_MIN_INT -> BD_MIN_INT
    java.math.BigDecimal BD_MAX_INT -> BD_MAX_INT
    com.fasterxml.jackson.core.JsonToken _currToken -> _currToken
    com.fasterxml.jackson.core.JsonToken _lastClearedToken -> _lastClearedToken
    160:160:void <init>(int) -> <init>
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    186:186:com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    192:192:com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    194:195:int getCurrentTokenId() -> getCurrentTokenId
    198:198:boolean hasCurrentToken() -> hasCurrentToken
    200:204:boolean hasTokenId(int) -> hasTokenId
    208:208:boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    211:211:boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    212:212:boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    218:222:com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    228:259:com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    void _handleEOF() -> _handleEOF
    java.lang.String getCurrentName() -> getCurrentName
    287:291:void clearCurrentToken() -> clearCurrentToken
    java.lang.String getText() -> getText
    363:367:int getValueAsInt() -> getValueAsInt
    373:398:int getValueAsInt(int) -> getValueAsInt
    404:408:long getValueAsLong() -> getValueAsLong
    414:438:long getValueAsLong(long) -> getValueAsLong
    473:479:java.lang.String getValueAsString() -> getValueAsString
    484:493:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    509:513:void _decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    528:528:boolean _hasTextualNull(java.lang.String) -> _hasTextualNull
    537:542:void reportUnexpectedNumberChar(int,java.lang.String) -> reportUnexpectedNumberChar
    545:546:void reportInvalidNumber(java.lang.String) -> reportInvalidNumber
    549:551:void reportOverflowInt() -> reportOverflowInt
    554:556:void reportOverflowLong() -> reportOverflowLong
    560:568:void _reportUnexpectedChar(int,java.lang.String) -> _reportUnexpectedChar
    571:572:void _reportInvalidEOF() -> _reportInvalidEOF
    579:588:void _reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken) -> _reportInvalidEOFInValue
    594:594:void _reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> _reportInvalidEOF
    614:615:void _reportMissingRootWS(int) -> _reportMissingRootWS
    618:621:void _throwInvalidSpace(int) -> _throwInvalidSpace
    630:635:void _throwUnquotedSpace(int,java.lang.String) -> _throwUnquotedSpace
    639:647:char _handleUnrecognizedCharacterEscape(char) -> _handleUnrecognizedCharacterEscape
    658:665:java.lang.String _getCharDesc(int) -> _getCharDesc
    669:669:void _reportError(java.lang.String) -> _reportError
    674:674:void _reportError(java.lang.String,java.lang.Object) -> _reportError
    679:679:void _reportError(java.lang.String,java.lang.Object,java.lang.Object) -> _reportError
    683:683:void _wrapError(java.lang.String,java.lang.Throwable) -> _wrapError
    687:688:void _throwInternal() -> _throwInternal
    691:691:com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String,java.lang.Throwable) -> _constructError
    62:107:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.filter.FilteringParserDelegate -> com.fasterxml.jackson.core.filter.FilteringParserDelegate:
    com.fasterxml.jackson.core.filter.TokenFilter rootFilter -> rootFilter
    boolean _allowMultipleMatches -> _allowMultipleMatches
    boolean _includePath -> _includePath
    boolean _includeImmediateParent -> _includeImmediateParent
    com.fasterxml.jackson.core.JsonToken _currToken -> _currToken
    com.fasterxml.jackson.core.JsonToken _lastClearedToken -> _lastClearedToken
    com.fasterxml.jackson.core.filter.TokenFilterContext _headContext -> _headContext
    com.fasterxml.jackson.core.filter.TokenFilterContext _exposedContext -> _exposedContext
    com.fasterxml.jackson.core.filter.TokenFilter _itemFilter -> _itemFilter
    int _matchCount -> _matchCount
    117:124:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.filter.TokenFilter,boolean,boolean) -> <init>
    148:148:com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    149:149:com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    152:153:int getCurrentTokenId() -> getCurrentTokenId
    160:160:boolean hasCurrentToken() -> hasCurrentToken
    162:166:boolean hasTokenId(int) -> hasTokenId
    170:170:boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    173:173:boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    174:174:boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    176:176:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    180:180:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    186:191:java.lang.String getCurrentName() -> getCurrentName
    202:206:void clearCurrentToken() -> clearCurrentToken
    237:455:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    468:615:com.fasterxml.jackson.core.JsonToken _nextToken2() -> _nextToken2
    626:744:com.fasterxml.jackson.core.JsonToken _nextTokenWithBuffering(com.fasterxml.jackson.core.filter.TokenFilterContext) -> _nextTokenWithBuffering
    756:779:com.fasterxml.jackson.core.JsonToken _nextBuffered(com.fasterxml.jackson.core.filter.TokenFilterContext) -> _nextBuffered
    785:789:boolean _verifyAllowedMatches() -> _verifyAllowedMatches
    795:799:com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    810:830:com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    839:839:java.lang.String getText() -> getText
    840:840:boolean hasTextCharacters() -> hasTextCharacters
    841:841:char[] getTextCharacters() -> getTextCharacters
    842:842:int getTextLength() -> getTextLength
    843:843:int getTextOffset() -> getTextOffset
    852:852:java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    858:858:byte getByteValue() -> getByteValue
    861:861:short getShortValue() -> getShortValue
    864:864:java.math.BigDecimal getDecimalValue() -> getDecimalValue
    867:867:double getDoubleValue() -> getDoubleValue
    870:870:float getFloatValue() -> getFloatValue
    873:873:int getIntValue() -> getIntValue
    876:876:long getLongValue() -> getLongValue
    879:879:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    882:882:java.lang.Number getNumberValue() -> getNumberValue
    890:890:int getValueAsInt() -> getValueAsInt
    891:891:int getValueAsInt(int) -> getValueAsInt
    892:892:long getValueAsLong() -> getValueAsLong
    893:893:long getValueAsLong(long) -> getValueAsLong
    898:898:java.lang.String getValueAsString() -> getValueAsString
    899:899:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    907:907:java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    908:908:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    909:909:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    910:910:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    919:922:com.fasterxml.jackson.core.JsonStreamContext _filterContext() -> _filterContext
com.fasterxml.jackson.core.filter.TokenFilter -> com.fasterxml.jackson.core.filter.TokenFilter:
    com.fasterxml.jackson.core.filter.TokenFilter INCLUDE_ALL -> INCLUDE_ALL
    34:34:void <init>() -> <init>
    66:66:com.fasterxml.jackson.core.filter.TokenFilter filterStartObject() -> filterStartObject
    93:93:com.fasterxml.jackson.core.filter.TokenFilter filterStartArray() -> filterStartArray
    110:110:void filterFinishArray() -> filterFinishArray
    141:141:com.fasterxml.jackson.core.filter.TokenFilter includeProperty(java.lang.String) -> includeProperty
    167:167:com.fasterxml.jackson.core.filter.TokenFilter includeElement(int) -> includeElement
    193:193:com.fasterxml.jackson.core.filter.TokenFilter includeRootValue(int) -> includeRootValue
    210:210:boolean includeValue(com.fasterxml.jackson.core.JsonParser) -> includeValue
    343:346:java.lang.String toString() -> toString
    361:361:boolean _includeScalar() -> _includeScalar
    30:30:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.filter.TokenFilterContext -> com.fasterxml.jackson.core.filter.TokenFilterContext:
    com.fasterxml.jackson.core.filter.TokenFilterContext _parent -> _parent
    com.fasterxml.jackson.core.filter.TokenFilterContext _child -> _child
    java.lang.String _currentName -> _currentName
    com.fasterxml.jackson.core.filter.TokenFilter _filter -> _filter
    boolean _startHandled -> _startHandled
    boolean _needToHandleName -> _needToHandleName
    71:78:void <init>(int,com.fasterxml.jackson.core.filter.TokenFilterContext,com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> <init>
    83:89:com.fasterxml.jackson.core.filter.TokenFilterContext reset(int,com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> reset
    100:100:com.fasterxml.jackson.core.filter.TokenFilterContext createRootContext(com.fasterxml.jackson.core.filter.TokenFilter) -> createRootContext
    104:109:com.fasterxml.jackson.core.filter.TokenFilterContext createChildArrayContext(com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> createChildArrayContext
    113:118:com.fasterxml.jackson.core.filter.TokenFilterContext createChildObjectContext(com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> createChildObjectContext
    128:130:com.fasterxml.jackson.core.filter.TokenFilter setFieldName(java.lang.String) -> setFieldName
    139:147:com.fasterxml.jackson.core.filter.TokenFilter checkValue(com.fasterxml.jackson.core.filter.TokenFilter) -> checkValue
    271:271:java.lang.Object getCurrentValue() -> getCurrentValue
    274:274:void setCurrentValue(java.lang.Object) -> setCurrentValue
    276:276:com.fasterxml.jackson.core.filter.TokenFilterContext getParent() -> getParent
    277:277:java.lang.String getCurrentName() -> getCurrentName
    281:281:com.fasterxml.jackson.core.filter.TokenFilter getFilter() -> getFilter
    282:282:boolean isStartHandled() -> isStartHandled
    285:298:com.fasterxml.jackson.core.JsonToken nextTokenToRead() -> nextTokenToRead
    302:314:com.fasterxml.jackson.core.filter.TokenFilterContext findChildOf(com.fasterxml.jackson.core.filter.TokenFilterContext) -> findChildOf
    320:342:void appendDesc(java.lang.StringBuilder) -> appendDesc
    351:353:java.lang.String toString() -> toString
    13:13:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.format.InputAccessor -> com.fasterxml.jackson.core.format.InputAccessor:
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
com.fasterxml.jackson.core.format.InputAccessor$Std -> com.fasterxml.jackson.core.format.InputAccessor$Std:
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _bufferedStart -> _bufferedStart
    int _bufferedEnd -> _bufferedEnd
    int _ptr -> _ptr
    93:99:void <init>(byte[],int,int) -> <init>
    104:119:boolean hasMoreBytes() -> hasMoreBytes
    126:131:byte nextByte() -> nextByte
    136:137:void reset() -> reset
com.fasterxml.jackson.core.format.MatchStrength -> com.fasterxml.jackson.core.format.MatchStrength:
    com.fasterxml.jackson.core.format.MatchStrength NO_MATCH -> NO_MATCH
    com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE -> INCONCLUSIVE
    com.fasterxml.jackson.core.format.MatchStrength WEAK_MATCH -> WEAK_MATCH
    com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH -> SOLID_MATCH
    com.fasterxml.jackson.core.format.MatchStrength FULL_MATCH -> FULL_MATCH
    com.fasterxml.jackson.core.format.MatchStrength[] $VALUES -> $VALUES
    10:10:com.fasterxml.jackson.core.format.MatchStrength[] values() -> values
    10:10:com.fasterxml.jackson.core.format.MatchStrength valueOf(java.lang.String) -> valueOf
    10:10:void <init>(java.lang.String,int) -> <init>
    10:60:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.CharTypes -> com.fasterxml.jackson.core.io.CharTypes:
    char[] HC -> HC
    byte[] HB -> HB
    int[] sInputCodes -> sInputCodes
    int[] sInputCodesUTF8 -> sInputCodesUTF8
    int[] sInputCodesJsNames -> sInputCodesJsNames
    int[] sInputCodesUtf8JsNames -> sInputCodesUtf8JsNames
    int[] sInputCodesComment -> sInputCodesComment
    int[] sInputCodesWS -> sInputCodesWS
    int[] sOutputEscapes128 -> sOutputEscapes128
    int[] sHexValues -> sHexValues
    195:195:int[] getInputCodeLatin1() -> getInputCodeLatin1
    196:196:int[] getInputCodeUtf8() -> getInputCodeUtf8
    198:198:int[] getInputCodeLatin1JsNames() -> getInputCodeLatin1JsNames
    199:199:int[] getInputCodeUtf8JsNames() -> getInputCodeUtf8JsNames
    201:201:int[] getInputCodeComment() -> getInputCodeComment
    211:211:int[] get7BitOutputEscapes() -> get7BitOutputEscapes
    215:215:int charToHex(int) -> charToHex
    220:249:void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    252:252:char[] copyHexChars() -> copyHexChars
    256:256:byte[] copyHexBytes() -> copyHexBytes
    7:193:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.CharacterEscapes -> com.fasterxml.jackson.core.io.CharacterEscapes:
    int[] getEscapeCodesForAscii() -> getEscapeCodesForAscii
    com.fasterxml.jackson.core.SerializableString getEscapeSequence(int) -> getEscapeSequence
com.fasterxml.jackson.core.io.IOContext -> com.fasterxml.jackson.core.io.IOContext:
    java.lang.Object _sourceRef -> _sourceRef
    com.fasterxml.jackson.core.JsonEncoding _encoding -> _encoding
    boolean _managedResource -> _managedResource
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    byte[] _readIOBuffer -> _readIOBuffer
    byte[] _writeEncodingBuffer -> _writeEncodingBuffer
    byte[] _base64Buffer -> _base64Buffer
    char[] _tokenCBuffer -> _tokenCBuffer
    char[] _concatCBuffer -> _concatCBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    102:106:void <init>(com.fasterxml.jackson.core.util.BufferRecycler,java.lang.Object,boolean) -> <init>
    109:110:void setEncoding(com.fasterxml.jackson.core.JsonEncoding) -> setEncoding
    126:126:java.lang.Object getSourceReference() -> getSourceReference
    127:127:com.fasterxml.jackson.core.JsonEncoding getEncoding() -> getEncoding
    128:128:boolean isResourceManaged() -> isResourceManaged
    137:137:com.fasterxml.jackson.core.util.TextBuffer constructTextBuffer() -> constructTextBuffer
    146:147:byte[] allocReadIOBuffer() -> allocReadIOBuffer
    159:160:byte[] allocWriteEncodingBuffer() -> allocWriteEncodingBuffer
    175:176:byte[] allocBase64Buffer() -> allocBase64Buffer
    188:189:char[] allocTokenBuffer() -> allocTokenBuffer
    196:197:char[] allocTokenBuffer(int) -> allocTokenBuffer
    201:202:char[] allocConcatBuffer() -> allocConcatBuffer
    206:207:char[] allocNameCopyBuffer(int) -> allocNameCopyBuffer
    215:223:void releaseReadIOBuffer(byte[]) -> releaseReadIOBuffer
    226:234:void releaseWriteEncodingBuffer(byte[]) -> releaseWriteEncodingBuffer
    237:242:void releaseBase64Buffer(byte[]) -> releaseBase64Buffer
    245:250:void releaseTokenBuffer(char[]) -> releaseTokenBuffer
    253:259:void releaseConcatBuffer(char[]) -> releaseConcatBuffer
    262:268:void releaseNameCopyBuffer(char[]) -> releaseNameCopyBuffer
    277:278:void _verifyAlloc(java.lang.Object) -> _verifyAlloc
    282:283:void _verifyRelease(byte[],byte[]) -> _verifyRelease
    287:288:void _verifyRelease(char[],char[]) -> _verifyRelease
    292:292:java.lang.IllegalArgumentException wrongBuf() -> wrongBuf
com.fasterxml.jackson.core.io.InputDecorator -> com.fasterxml.jackson.core.io.InputDecorator:
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream) -> decorate
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,byte[],int,int) -> decorate
    73:73:java.io.DataInput decorate(com.fasterxml.jackson.core.io.IOContext,java.io.DataInput) -> decorate
    java.io.Reader decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Reader) -> decorate
com.fasterxml.jackson.core.io.JsonEOFException -> com.fasterxml.jackson.core.io.JsonEOFException:
    com.fasterxml.jackson.core.JsonToken _token -> _token
    26:28:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> <init>
com.fasterxml.jackson.core.io.JsonStringEncoder -> com.fasterxml.jackson.core.io.JsonStringEncoder:
    char[] HC -> HC
    byte[] HB -> HB
    com.fasterxml.jackson.core.util.TextBuffer _text -> _text
    com.fasterxml.jackson.core.util.ByteArrayBuilder _bytes -> _bytes
    char[] _qbuf -> _qbuf
    56:61:void <init>() -> <init>
    86:137:char[] quoteAsString(java.lang.String) -> quoteAsString
    185:272:byte[] quoteAsUTF8(java.lang.String) -> quoteAsUTF8
    282:363:byte[] encodeAsUTF8(java.lang.String) -> encodeAsUTF8
    373:377:int _appendNumeric(int,char[]) -> _appendNumeric
    381:382:int _appendNamed(int,char[]) -> _appendNamed
    387:405:int _appendByte(int,int,com.fasterxml.jackson.core.util.ByteArrayBuilder,int) -> _appendByte
    410:413:int _convert(int,int) -> _convert
    417:417:void _illegal(int) -> _illegal
    20:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.MergedStream -> com.fasterxml.jackson.core.io.MergedStream:
    com.fasterxml.jackson.core.io.IOContext _ctxt -> _ctxt
    java.io.InputStream _in -> _in
    byte[] _b -> _b
    int _ptr -> _ptr
    int _end -> _end
    25:31:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int) -> <init>
    35:38:int available() -> available
    42:44:void close() -> close
    47:48:void mark(int) -> mark
    52:52:boolean markSupported() -> markSupported
    56:63:int read() -> read
    67:67:int read(byte[]) -> read
    72:84:int read(byte[],int,int) -> read
    89:90:void reset() -> reset
    94:109:long skip(long) -> skip
    113:120:void _free() -> _free
com.fasterxml.jackson.core.io.NumberInput -> com.fasterxml.jackson.core.io.NumberInput:
    java.lang.String MIN_LONG_STR_NO_SIGN -> MIN_LONG_STR_NO_SIGN
    java.lang.String MAX_LONG_STR -> MAX_LONG_STR
    30:55:int parseInt(char[],int,int) -> parseInt
    68:112:int parseInt(java.lang.String) -> parseInt
    118:120:long parseLong(char[],int,int) -> parseLong
    128:133:long parseLong(java.lang.String) -> parseLong
    148:159:boolean inLongRange(char[],int,int,boolean) -> inLongRange
    171:184:boolean inLongRange(java.lang.String,boolean) -> inLongRange
    189:222:int parseAsInt(java.lang.String,int) -> parseAsInt
    227:260:long parseAsLong(java.lang.String,long) -> parseAsLong
    282:285:double parseDouble(java.lang.String) -> parseDouble
    289:290:java.math.BigDecimal parseBigDecimal(java.lang.String) -> parseBigDecimal
    295:295:java.math.BigDecimal parseBigDecimal(char[]) -> parseBigDecimal
    299:300:java.math.BigDecimal parseBigDecimal(char[],int,int) -> parseBigDecimal
    305:305:java.lang.NumberFormatException _badBD(java.lang.String) -> _badBD
    18:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.NumberOutput -> com.fasterxml.jackson.core.io.NumberOutput:
    int MILLION -> MILLION
    int BILLION -> BILLION
    long BILLION_L -> BILLION_L
    long MIN_INT_AS_LONG -> MIN_INT_AS_LONG
    long MAX_INT_AS_LONG -> MAX_INT_AS_LONG
    java.lang.String SMALLEST_INT -> SMALLEST_INT
    java.lang.String SMALLEST_LONG -> SMALLEST_LONG
    int[] TRIPLET_TO_CHARS -> TRIPLET_TO_CHARS
    java.lang.String[] sSmallIntStrs -> sSmallIntStrs
    java.lang.String[] sSmallIntStrs2 -> sSmallIntStrs2
    58:106:int outputInt(int,char[],int) -> outputInt
    111:151:int outputInt(int,byte[],int) -> outputInt
    160:189:int outputLong(long,char[],int) -> outputLong
    194:223:int outputLong(long,byte[],int) -> outputLong
    238:247:java.lang.String toString(int) -> toString
    251:254:java.lang.String toString(long) -> toString
    258:258:java.lang.String toString(double) -> toString
    265:265:java.lang.String toString(float) -> toString
    276:301:int _outputUptoBillion(int,char[],int) -> _outputUptoBillion
    306:326:int _outputFullBillion(int,char[],int) -> _outputFullBillion
    331:356:int _outputUptoBillion(int,byte[],int) -> _outputUptoBillion
    361:381:int _outputFullBillion(int,byte[],int) -> _outputFullBillion
    386:399:int _outputUptoMillion(char[],int,int,int) -> _outputUptoMillion
    404:417:int _outputUptoMillion(byte[],int,int,int) -> _outputUptoMillion
    422:430:int _leading3(int,char[],int) -> _leading3
    435:443:int _leading3(int,byte[],int) -> _leading3
    448:452:int _full3(int,char[],int) -> _full3
    457:461:int _full3(int,byte[],int) -> _full3
    468:470:int _outputSmallestL(char[],int) -> _outputSmallestL
    475:479:int _outputSmallestL(byte[],int) -> _outputSmallestL
    484:486:int _outputSmallestI(char[],int) -> _outputSmallestI
    491:495:int _outputSmallestI(byte[],int) -> _outputSmallestI
    5:43:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.OutputDecorator -> com.fasterxml.jackson.core.io.OutputDecorator:
    java.io.OutputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream) -> decorate
    java.io.Writer decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer) -> decorate
com.fasterxml.jackson.core.io.SegmentedStringWriter -> com.fasterxml.jackson.core.io.SegmentedStringWriter:
    com.fasterxml.jackson.core.util.TextBuffer _buffer -> _buffer
    21:23:void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    33:34:java.io.Writer append(char) -> append
    39:41:java.io.Writer append(java.lang.CharSequence) -> append
    46:48:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    51:51:void close() -> close
    52:52:void flush() -> flush
    55:55:void write(char[]) -> write
    58:58:void write(char[],int,int) -> write
    61:61:void write(int) -> write
    64:64:void write(java.lang.String) -> write
    67:67:void write(java.lang.String,int,int) -> write
    83:85:java.lang.String getAndClear() -> getAndClear
    16:16:java.lang.Appendable append(char) -> append
    16:16:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    16:16:java.lang.Appendable append(java.lang.CharSequence) -> append
com.fasterxml.jackson.core.io.SerializedString -> com.fasterxml.jackson.core.io.SerializedString:
    java.lang.String _value -> _value
    byte[] _quotedUTF8Ref -> _quotedUTF8Ref
    byte[] _unquotedUTF8Ref -> _unquotedUTF8Ref
    char[] _quotedChars -> _quotedChars
    50:55:void <init>(java.lang.String) -> <init>
    90:90:java.lang.String getValue() -> getValue
    100:105:char[] asQuotedChars() -> asQuotedChars
    114:119:byte[] asUnquotedUTF8() -> asUnquotedUTF8
    128:133:byte[] asQuotedUTF8() -> asQuotedUTF8
    144:154:int appendQuotedUTF8(byte[],int) -> appendQuotedUTF8
    260:260:java.lang.String toString() -> toString
    263:263:int hashCode() -> hashCode
    267:270:boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.core.io.UTF32Reader -> com.fasterxml.jackson.core.io.UTF32Reader:
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _ptr -> _ptr
    int _length -> _length
    boolean _bigEndian -> _bigEndian
    char _surrogate -> _surrogate
    int _charCount -> _charCount
    int _byteCount -> _byteCount
    boolean _managedBuffers -> _managedBuffers
    char[] _tmpBuf -> _tmpBuf
    37:65:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int,boolean) -> <init>
    75:82:void close() -> close
    93:99:int read() -> read
    105:177:int read(char[],int,int) -> read
    187:189:void reportUnexpectedEOF(int,int) -> reportUnexpectedEOF
    193:195:void reportInvalid(int,int,java.lang.String) -> reportInvalid
    205:251:boolean loadMore(int) -> loadMore
    260:265:void freeBuffers() -> freeBuffers
    268:268:void reportBounds(char[],int,int) -> reportBounds
    272:272:void reportStrangeStream() -> reportStrangeStream
com.fasterxml.jackson.core.io.UTF8Writer -> com.fasterxml.jackson.core.io.UTF8Writer:
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.OutputStream _out -> _out
    byte[] _outBuffer -> _outBuffer
    int _outBufferEnd -> _outBufferEnd
    int _outPtr -> _outPtr
    int _surrogate -> _surrogate
    30:41:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream) -> <init>
    47:48:java.io.Writer append(char) -> append
    55:80:void close() -> close
    86:93:void flush() -> flush
    99:100:void write(char[]) -> write
    106:197:void write(char[],int,int) -> write
    203:243:void write(int) -> write
    248:249:void write(java.lang.String) -> write
    254:345:void write(java.lang.String,int,int) -> write
    359:366:int convertSurrogate(int) -> convertSurrogate
    370:370:void illegalSurrogate(int) -> illegalSurrogate
    375:385:java.lang.String illegalSurrogateDesc(int) -> illegalSurrogateDesc
    5:5:java.lang.Appendable append(char) -> append
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper -> com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper:
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _inputBuffer -> _inputBuffer
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    boolean _bufferRecyclable -> _bufferRecyclable
    boolean _bigEndian -> _bigEndian
    int _bytesPerChar -> _bytesPerChar
    77:94:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream) -> <init>
    77:105:void <init>(com.fasterxml.jackson.core.io.IOContext,byte[],int,int) -> <init>
    120:175:com.fasterxml.jackson.core.JsonEncoding detectEncoding() -> detectEncoding
    187:203:int skipUTF8BOM(java.io.DataInput) -> skipUTF8BOM
    215:239:java.io.Reader constructReader() -> constructReader
    246:258:com.fasterxml.jackson.core.JsonParser constructParser(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int) -> constructParser
    279:360:com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasJSONFormat
    366:374:com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,com.fasterxml.jackson.core.format.MatchStrength) -> tryMatch
    379:382:int skipSpace(com.fasterxml.jackson.core.format.InputAccessor) -> skipSpace
    388:396:int skipSpace(com.fasterxml.jackson.core.format.InputAccessor,byte) -> skipSpace
    414:454:boolean handleBOM(int) -> handleBOM
    462:477:boolean checkUTF32(int) -> checkUTF32
    482:492:boolean checkUTF16(int) -> checkUTF16
    502:502:void reportWeirdUCS4(java.lang.String) -> reportWeirdUCS4
    515:530:boolean ensureLoaded(int) -> ensureLoaded
com.fasterxml.jackson.core.json.DupDetector -> com.fasterxml.jackson.core.json.DupDetector:
    java.lang.Object _source -> _source
    java.lang.String _firstName -> _firstName
    java.lang.String _secondName -> _secondName
    java.util.HashSet _seen -> _seen
    36:38:void <init>(java.lang.Object) -> <init>
    41:41:com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonParser) -> rootDetector
    45:45:com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonGenerator) -> rootDetector
    49:49:com.fasterxml.jackson.core.json.DupDetector child() -> child
    53:56:void reset() -> reset
    71:71:java.lang.Object getSource() -> getSource
    76:95:boolean isDup(java.lang.String) -> isDup
com.fasterxml.jackson.core.json.JsonGeneratorImpl -> com.fasterxml.jackson.core.json.JsonGeneratorImpl:
    int[] sOutputEscapes -> sOutputEscapes
    com.fasterxml.jackson.core.io.IOContext _ioContext -> _ioContext
    int[] _outputEscapes -> _outputEscapes
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> _characterEscapes
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> _rootValueSeparator
    boolean _cfgUnqNames -> _cfgUnqNames
    53:110:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    140:144:com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    149:151:void _checkStdFeatureChanges(int,int) -> _checkStdFeatureChanges
    155:156:com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    167:173:com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    187:188:com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    202:204:void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    215:240:void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    244:246:void _reportCantWriteValueExpectName(java.lang.String) -> _reportCantWriteValueExpectName
    31:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.JsonReadContext -> com.fasterxml.jackson.core.json.JsonReadContext:
    com.fasterxml.jackson.core.json.JsonReadContext _parent -> _parent
    com.fasterxml.jackson.core.json.DupDetector _dups -> _dups
    com.fasterxml.jackson.core.json.JsonReadContext _child -> _child
    java.lang.String _currentName -> _currentName
    java.lang.Object _currentValue -> _currentValue
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    57:64:void <init>(com.fasterxml.jackson.core.json.JsonReadContext,com.fasterxml.jackson.core.json.DupDetector,int,int,int) -> <init>
    67:76:void reset(int,int,int) -> reset
    85:86:com.fasterxml.jackson.core.json.JsonReadContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector) -> withDupDetector
    91:91:java.lang.Object getCurrentValue() -> getCurrentValue
    96:97:void setCurrentValue(java.lang.Object) -> setCurrentValue
    110:110:com.fasterxml.jackson.core.json.JsonReadContext createRootContext(com.fasterxml.jackson.core.json.DupDetector) -> createRootContext
    114:121:com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int) -> createChildArrayContext
    125:132:com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int) -> createChildObjectContext
    141:141:java.lang.String getCurrentName() -> getCurrentName
    146:146:com.fasterxml.jackson.core.json.JsonReadContext getParent() -> getParent
    151:152:com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    172:174:com.fasterxml.jackson.core.json.JsonReadContext clearAndGetParent() -> clearAndGetParent
    178:178:com.fasterxml.jackson.core.json.DupDetector getDupDetector() -> getDupDetector
    192:193:boolean expectComma() -> expectComma
    197:199:void setCurrentName(java.lang.String) -> setCurrentName
    202:207:void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String) -> _checkDup
    10:10:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.json.JsonWriteContext -> com.fasterxml.jackson.core.json.JsonWriteContext:
    com.fasterxml.jackson.core.json.JsonWriteContext _parent -> _parent
    com.fasterxml.jackson.core.json.DupDetector _dups -> _dups
    com.fasterxml.jackson.core.json.JsonWriteContext _child -> _child
    java.lang.String _currentName -> _currentName
    java.lang.Object _currentValue -> _currentValue
    boolean _gotName -> _gotName
    70:75:void <init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector) -> <init>
    78:84:com.fasterxml.jackson.core.json.JsonWriteContext reset(int) -> reset
    88:89:com.fasterxml.jackson.core.json.JsonWriteContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector) -> withDupDetector
    94:94:java.lang.Object getCurrentValue() -> getCurrentValue
    99:100:void setCurrentValue(java.lang.Object) -> setCurrentValue
    115:115:com.fasterxml.jackson.core.json.JsonWriteContext createRootContext(com.fasterxml.jackson.core.json.DupDetector) -> createRootContext
    119:124:com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext() -> createChildArrayContext
    128:133:com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext() -> createChildObjectContext
    136:136:com.fasterxml.jackson.core.json.JsonWriteContext getParent() -> getParent
    137:137:java.lang.String getCurrentName() -> getCurrentName
    152:154:com.fasterxml.jackson.core.json.JsonWriteContext clearAndGetParent() -> clearAndGetParent
    158:158:com.fasterxml.jackson.core.json.DupDetector getDupDetector() -> getDupDetector
    167:173:int writeFieldName(java.lang.String) -> writeFieldName
    177:182:void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String) -> _checkDup
    186:205:int writeValue() -> writeValue
    10:10:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.json.ReaderBasedJsonParser -> com.fasterxml.jackson.core.json.ReaderBasedJsonParser:
    int FEAT_MASK_TRAILING_COMMA -> FEAT_MASK_TRAILING_COMMA
    int[] _icLatin1 -> _icLatin1
    java.io.Reader _reader -> _reader
    char[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols -> _symbols
    int _hashSeed -> _hashSeed
    boolean _tokenIncomplete -> _tokenIncomplete
    long _nameStartOffset -> _nameStartOffset
    int _nameStartRow -> _nameStartRow
    int _nameStartCol -> _nameStartCol
    118:127:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean) -> <init>
    136:145:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> <init>
    153:153:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    170:170:char getNextChar(java.lang.String) -> getNextChar
    174:179:char getNextChar(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> getNextChar
    191:197:void _closeInput() -> _closeInput
    207:218:void _releaseBuffers() -> _releaseBuffers
    227:228:void _loadMoreGuaranteed() -> _loadMoreGuaranteed
    232:256:boolean _loadMore() -> _loadMore
    274:282:java.lang.String getText() -> getText
    318:328:java.lang.String getValueAsString() -> getValueAsString
    334:344:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    348:361:java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    368:396:char[] getTextCharacters() -> getTextCharacters
    402:419:int getTextLength() -> getTextLength
    426:442:int getTextOffset() -> getTextOffset
    448:473:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    480:490:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    496:617:int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    637:756:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    761:773:com.fasterxml.jackson.core.JsonToken _nextAfterName() -> _nextAfterName
    872:962:java.lang.String nextFieldName() -> nextFieldName
    1071:1123:com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    1130:1150:java.lang.String nextTextValue() -> nextTextValue
    1258:1301:com.fasterxml.jackson.core.JsonToken _parsePosNumber(int) -> _parsePosNumber
    1307:1365:com.fasterxml.jackson.core.JsonToken _parseFloat(int,int,int,boolean,int) -> _parseFloat
    1370:1413:com.fasterxml.jackson.core.JsonToken _parseNegNumber() -> _parseNegNumber
    1425:1548:com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int) -> _parseNumber2
    1558:1566:char _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    1571:1595:char _verifyNLZ2() -> _verifyNLZ2
    1604:1628:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    1641:1655:void _verifyRootSpace(int) -> _verifyRootSpace
    1667:1686:java.lang.String _parseName() -> _parseName
    1691:1739:java.lang.String _parseName2(int,int,int) -> _parseName2
    1752:1797:java.lang.String _handleOddName(int) -> _handleOddName
    1803:1829:java.lang.String _parseAposName() -> _parseAposName
    1839:1893:com.fasterxml.jackson.core.JsonToken _handleOddValue(int) -> _handleOddValue
    1898:1935:com.fasterxml.jackson.core.JsonToken _handleApos() -> _handleApos
    1940:1978:java.lang.String _handleOddName2(int,int,int[]) -> _handleOddName2
    1989:2017:void _finishString() -> _finishString
    2021:2057:void _finishString2() -> _finishString2
    2066:2104:void _skipString() -> _skipString
    2117:2124:void _skipCR() -> _skipCR
    2128:2177:int _skipColon() -> _skipColon
    2182:2216:int _skipColon2(boolean) -> _skipColon2
    2270:2293:int _skipComma(int) -> _skipComma
    2298:2323:int _skipAfterComma2() -> _skipAfterComma2
    2330:2374:int _skipWSOrEnd() -> _skipWSOrEnd
    2380:2407:int _skipWSOrEnd2() -> _skipWSOrEnd2
    2412:2427:void _skipComment() -> _skipComment
    2432:2458:void _skipCComment() -> _skipCComment
    2462:2466:boolean _skipYAMLComment() -> _skipYAMLComment
    2472:2487:void _skipLine() -> _skipLine
    2492:2540:char _decodeEscaped() -> _decodeEscaped
    2544:2557:void _matchTrue() -> _matchTrue
    2560:2573:void _matchFalse() -> _matchFalse
    2576:2589:void _matchNull() -> _matchNull
    2596:2612:void _matchToken(java.lang.String,int) -> _matchToken
    2616:2633:void _matchToken2(java.lang.String,int) -> _matchToken2
    2637:2641:void _checkMatchEnd(java.lang.String,int,int) -> _checkMatchEnd
    2656:2759:byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    2771:2776:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    2782:2783:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    2791:2795:void _updateLocation() -> _updateLocation
    2800:2804:void _updateNameLocation() -> _updateNameLocation
    2813:2814:void _reportInvalidToken(java.lang.String) -> _reportInvalidToken
    2822:2836:void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
    2845:2861:void _closeScope(int) -> _closeScope
    22:26:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser -> com.fasterxml.jackson.core.json.UTF8DataInputJsonParser:
    int[] _icUTF8 -> _icUTF8
    int[] _icLatin1 -> _icLatin1
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols -> _symbols
    int[] _quadBuffer -> _quadBuffer
    boolean _tokenIncomplete -> _tokenIncomplete
    int _quad1 -> _quad1
    java.io.DataInput _inputData -> _inputData
    int _nextByte -> _nextByte
    74:117:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.DataInput,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,int) -> <init>
    121:121:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    152:152:void _closeInput() -> _closeInput
    163:166:void _releaseBuffers() -> _releaseBuffers
    177:184:java.lang.String getText() -> getText
    218:228:java.lang.String getValueAsString() -> getValueAsString
    234:244:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    250:263:int getValueAsInt() -> getValueAsInt
    269:282:int getValueAsInt(int) -> getValueAsInt
    287:300:java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    307:338:char[] getTextCharacters() -> getTextCharacters
    344:360:int getTextLength() -> getTextLength
    367:383:int getTextOffset() -> getTextOffset
    389:414:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    421:431:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    438:543:int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    559:673:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    678:716:com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    721:731:com.fasterxml.jackson.core.JsonToken _nextAfterName() -> _nextAfterName
    756:844:java.lang.String nextFieldName() -> nextFieldName
    851:870:java.lang.String nextTextValue() -> nextTextValue
    973:1010:com.fasterxml.jackson.core.JsonToken _parsePosNumber(int) -> _parsePosNumber
    1015:1055:com.fasterxml.jackson.core.JsonToken _parseNegNumber() -> _parseNegNumber
    1067:1080:int _handleLeadingZeroes() -> _handleLeadingZeroes
    1086:1152:com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int) -> _parseFloat
    1165:1174:void _verifyRootSpace() -> _verifyRootSpace
    1184:1235:java.lang.String _parseName(int) -> _parseName
    1240:1274:java.lang.String _parseMediumName(int) -> _parseMediumName
    1279:1313:java.lang.String _parseMediumName2(int,int) -> _parseMediumName2
    1318:1368:java.lang.String _parseLongName(int,int,int) -> _parseLongName
    1372:1372:java.lang.String parseName(int,int,int) -> parseName
    1376:1377:java.lang.String parseName(int,int,int,int) -> parseName
    1381:1383:java.lang.String parseName(int,int,int,int,int) -> parseName
    1400:1478:java.lang.String parseEscapedName(int[],int,int,int,int) -> parseEscapedName
    1489:1545:java.lang.String _handleOddName(int) -> _handleOddName
    1556:1645:java.lang.String _parseAposName() -> _parseAposName
    1656:1664:java.lang.String findName(int,int) -> findName
    1669:1678:java.lang.String findName(int,int,int) -> findName
    1683:1692:java.lang.String findName(int,int,int,int) -> findName
    1697:1705:java.lang.String findName(int[],int,int,int) -> findName
    1721:1819:java.lang.String addName(int[],int,int) -> addName
    1831:1849:void _finishString() -> _finishString
    1853:1870:java.lang.String _finishAndReturnString() -> _finishAndReturnString
    1877:1936:void _finishString2(char[],int,int) -> _finishString2
    1945:1988:void _skipString() -> _skipString
    1998:2046:com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    2051:2119:com.fasterxml.jackson.core.JsonToken _handleApos() -> _handleApos
    2129:2146:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    2151:2164:void _matchToken(java.lang.String,int) -> _matchToken
    2168:2172:void _checkMatchEnd(java.lang.String,int,int) -> _checkMatchEnd
    2182:2201:int _skipWS() -> _skipWS
    2213:2240:int _skipWSOrEnd() -> _skipWSOrEnd
    2247:2269:int _skipWSComment(int) -> _skipWSComment
    2275:2323:int _skipColon() -> _skipColon
    2328:2350:int _skipColon2(int,boolean) -> _skipColon2
    2358:2369:void _skipComment() -> _skipComment
    2374:2408:void _skipCComment() -> _skipCComment
    2413:2417:boolean _skipYAMLComment() -> _skipYAMLComment
    2427:2455:void _skipLine() -> _skipLine
    2461:2499:char _decodeEscaped() -> _decodeEscaped
    2504:2545:int _decodeCharForError(int) -> _decodeCharForError
    2556:2560:int _decodeUtf8_2(int) -> _decodeUtf8_2
    2565:2576:int _decodeUtf8_3(int) -> _decodeUtf8_3
    2585:2603:int _decodeUtf8_4(int) -> _decodeUtf8_4
    2608:2612:void _skipUtf8_2() -> _skipUtf8_2
    2620:2628:void _skipUtf8_3() -> _skipUtf8_3
    2632:2644:void _skipUtf8_4() -> _skipUtf8_4
    2654:2655:void _reportInvalidToken(int,java.lang.String) -> _reportInvalidToken
    2660:2675:void _reportInvalidToken(int,java.lang.String,java.lang.String) -> _reportInvalidToken
    2681:2685:void _reportInvalidChar(int) -> _reportInvalidChar
    2690:2691:void _reportInvalidInitial(int) -> _reportInvalidInitial
    2696:2697:void _reportInvalidOther(int) -> _reportInvalidOther
    2701:2704:int[] _growArrayBy(int[],int) -> _growArrayBy
    2720:2804:byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    2815:2815:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    2820:2820:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    2830:2844:void _closeScope(int) -> _closeScope
    2850:2850:int pad(int,int) -> pad
    41:45:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8JsonGenerator -> com.fasterxml.jackson.core.json.UTF8JsonGenerator:
    byte[] HEX_CHARS -> HEX_CHARS
    byte[] NULL_BYTES -> NULL_BYTES
    byte[] TRUE_BYTES -> TRUE_BYTES
    byte[] FALSE_BYTES -> FALSE_BYTES
    java.io.OutputStream _outputStream -> _outputStream
    byte _quoteChar -> _quoteChar
    byte[] _outputBuffer -> _outputBuffer
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    int _outputMaxContiguous -> _outputMaxContiguous
    char[] _charBuffer -> _charBuffer
    int _charBufferLength -> _charBufferLength
    boolean _bufferRecyclable -> _bufferRecyclable
    55:137:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream) -> <init>
    182:227:void writeFieldName(java.lang.String) -> writeFieldName
    232:264:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    267:273:void _writeUnq(com.fasterxml.jackson.core.SerializableString) -> _writeUnq
    284:294:void writeStartArray() -> writeStartArray
    299:311:void writeEndArray() -> writeEndArray
    316:326:void writeStartObject() -> writeStartObject
    331:345:void writeStartObject(java.lang.Object) -> writeStartObject
    350:362:void writeEndObject() -> writeEndObject
    370:406:void _writePPFieldName(java.lang.String) -> _writePPFieldName
    410:434:void _writePPFieldName(com.fasterxml.jackson.core.SerializableString) -> _writePPFieldName
    445:465:void writeString(java.lang.String) -> writeString
    513:532:void writeString(char[],int,int) -> writeString
    537:552:void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    597:605:void writeRaw(java.lang.String) -> writeRaw
    610:649:void writeRaw(java.lang.String,int,int) -> writeRaw
    654:658:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    663:668:void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> writeRawValue
    676:711:void writeRaw(char[],int,int) -> writeRaw
    716:728:void writeRaw(char) -> writeRaw
    736:768:void _writeSegmentedRaw(char[],int,int) -> _writeSegmentedRaw
    782:802:void _writeRawSegment(char[],int,int) -> _writeRawSegment
    815:827:void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    834:860:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    872:882:void writeNumber(short) -> writeNumber
    885:891:void _writeQuotedShort(short) -> _writeQuotedShort
    896:906:void writeNumber(int) -> writeNumber
    910:916:void _writeQuotedInt(int) -> _writeQuotedInt
    921:931:void writeNumber(long) -> writeNumber
    935:941:void _writeQuotedLong(long) -> _writeQuotedLong
    946:954:void writeNumber(java.math.BigInteger) -> writeNumber
    960:969:void writeNumber(double) -> writeNumber
    974:984:void writeNumber(float) -> writeNumber
    990:998:void writeNumber(java.math.BigDecimal) -> writeNumber
    1003:1009:void writeNumber(java.lang.String) -> writeNumber
    1013:1022:void _writeQuotedRaw(java.lang.String) -> _writeQuotedRaw
    1027:1035:void writeBoolean(boolean) -> writeBoolean
    1040:1042:void writeNull() -> writeNull
    1053:1086:void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    1097:1103:void flush() -> flush
    1108:1146:void close() -> close
    1151:1161:void _releaseBuffers() -> _releaseBuffers
    1171:1182:void _writeBytes(byte[]) -> _writeBytes
    1213:1239:void _writeStringSegments(java.lang.String,boolean) -> _writeStringSegments
    1250:1258:void _writeStringSegments(char[],int,int) -> _writeStringSegments
    1263:1271:void _writeStringSegments(java.lang.String,int,int) -> _writeStringSegments
    1293:1321:void _writeStringSegment(char[],int,int) -> _writeStringSegment
    1327:1352:void _writeStringSegment(java.lang.String,int,int) -> _writeStringSegment
    1361:1395:void _writeStringSegment2(char[],int,int) -> _writeStringSegment2
    1399:1433:void _writeStringSegment2(java.lang.String,int,int) -> _writeStringSegment2
    1449:1488:void _writeStringSegmentASCII2(char[],int,int) -> _writeStringSegmentASCII2
    1493:1532:void _writeStringSegmentASCII2(java.lang.String,int,int) -> _writeStringSegmentASCII2
    1548:1600:void _writeCustomStringSegment2(char[],int,int) -> _writeCustomStringSegment2
    1605:1657:void _writeCustomStringSegment2(java.lang.String,int,int) -> _writeCustomStringSegment2
    1662:1669:int _writeCustomEscape(byte[],int,com.fasterxml.jackson.core.SerializableString,int) -> _writeCustomEscape
    1676:1693:int _handleLongCustomEscape(byte[],int,int,byte[],int) -> _handleLongCustomEscape
    1786:1821:void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> _writeBinary
    1828:1880:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> _writeBinary
    1888:1937:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> _writeBinary
    1945:1964:int _readMore(java.io.InputStream,byte[],int,int,int) -> _readMore
    1982:1997:int _outputRawMultiByteChar(int,char[],int,int) -> _outputRawMultiByteChar
    2002:2011:void _outputSurrogates(int,int) -> _outputSurrogates
    2024:2043:int _outputMultiByteChar(int,int) -> _outputMultiByteChar
    2048:2053:void _writeNull() -> _writeNull
    2062:2077:int _writeGenericEscape(int,int) -> _writeGenericEscape
    2082:2087:void _flushBuffer() -> _flushBuffer
    32:36:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8StreamJsonParser -> com.fasterxml.jackson.core.json.UTF8StreamJsonParser:
    int[] _icUTF8 -> _icUTF8
    int[] _icLatin1 -> _icLatin1
    int FEAT_MASK_TRAILING_COMMA -> FEAT_MASK_TRAILING_COMMA
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols -> _symbols
    int[] _quadBuffer -> _quadBuffer
    boolean _tokenIncomplete -> _tokenIncomplete
    int _quad1 -> _quad1
    int _nameStartOffset -> _nameStartOffset
    int _nameStartRow -> _nameStartRow
    int _nameStartCol -> _nameStartCol
    java.io.InputStream _inputStream -> _inputStream
    byte[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    59:145:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.InputStream,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,byte[],int,int,boolean) -> <init>
    149:149:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    189:218:boolean _loadMore() -> _loadMore
    226:232:void _closeInput() -> _closeInput
    243:255:void _releaseBuffers() -> _releaseBuffers
    266:273:java.lang.String getText() -> getText
    309:319:java.lang.String getValueAsString() -> getValueAsString
    326:336:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    343:356:int getValueAsInt() -> getValueAsInt
    363:376:int getValueAsInt(int) -> getValueAsInt
    381:394:java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    401:432:char[] getTextCharacters() -> getTextCharacters
    438:457:int getTextLength() -> getTextLength
    464:480:int getTextOffset() -> getTextOffset
    486:511:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    518:528:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    535:656:int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    676:784:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    789:826:com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    831:843:com.fasterxml.jackson.core.JsonToken _nextAfterName() -> _nextAfterName
    950:1050:java.lang.String nextFieldName() -> nextFieldName
    1213:1233:java.lang.String nextTextValue() -> nextTextValue
    1338:1372:com.fasterxml.jackson.core.JsonToken _parsePosNumber(int) -> _parsePosNumber
    1377:1430:com.fasterxml.jackson.core.JsonToken _parseNegNumber() -> _parseNegNumber
    1442:1468:com.fasterxml.jackson.core.JsonToken _parseNumber2(char[],int,boolean,int) -> _parseNumber2
    1479:1505:int _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    1511:1602:com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int) -> _parseFloat
    1615:1630:void _verifyRootSpace(int) -> _verifyRootSpace
    1640:1697:java.lang.String _parseName(int) -> _parseName
    1702:1737:java.lang.String parseMediumName(int) -> parseMediumName
    1745:1780:java.lang.String parseMediumName2(int,int) -> parseMediumName2
    1785:1842:java.lang.String parseLongName(int,int,int) -> parseLongName
    1852:1861:java.lang.String slowParseName() -> slowParseName
    1865:1865:java.lang.String parseName(int,int,int) -> parseName
    1869:1870:java.lang.String parseName(int,int,int,int) -> parseName
    1874:1876:java.lang.String parseName(int,int,int,int,int) -> parseName
    1891:1972:java.lang.String parseEscapedName(int[],int,int,int,int) -> parseEscapedName
    1984:2045:java.lang.String _handleOddName(int) -> _handleOddName
    2055:2151:java.lang.String _parseAposName() -> _parseAposName
    2162:2170:java.lang.String findName(int,int) -> findName
    2175:2184:java.lang.String findName(int,int,int) -> findName
    2189:2198:java.lang.String findName(int,int,int,int) -> findName
    2203:2211:java.lang.String findName(int[],int,int,int) -> findName
    2227:2325:java.lang.String addName(int[],int,int) -> addName
    2332:2332:int _padLastQuad(int,int) -> _padLastQuad
    2342:2343:void _loadMoreGuaranteed() -> _loadMoreGuaranteed
    2349:2375:void _finishString() -> _finishString
    2383:2408:java.lang.String _finishAndReturnString() -> _finishAndReturnString
    2417:2493:void _finishString2(char[],int) -> _finishString2
    2502:2557:void _skipString() -> _skipString
    2566:2625:com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    2630:2714:com.fasterxml.jackson.core.JsonToken _handleApos() -> _handleApos
    2729:2752:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    2758:2772:void _matchTrue() -> _matchTrue
    2776:2791:void _matchFalse() -> _matchFalse
    2795:2809:void _matchNull() -> _matchNull
    2813:2829:void _matchToken(java.lang.String,int) -> _matchToken
    2833:2850:void _matchToken2(java.lang.String,int) -> _matchToken2
    2854:2858:void _checkMatchEnd(java.lang.String,int,int) -> _checkMatchEnd
    2868:2888:int _skipWS() -> _skipWS
    2893:2918:int _skipWS2() -> _skipWS2
    2925:2969:int _skipWSOrEnd() -> _skipWSOrEnd
    2974:2999:int _skipWSOrEnd2() -> _skipWSOrEnd2
    3004:3054:int _skipColon() -> _skipColon
    3059:3092:int _skipColon2(boolean) -> _skipColon2
    3097:3112:void _skipComment() -> _skipComment
    3117:3158:void _skipCComment() -> _skipCComment
    3162:3166:boolean _skipYAMLComment() -> _skipYAMLComment
    3176:3208:void _skipLine() -> _skipLine
    3213:3261:char _decodeEscaped() -> _decodeEscaped
    3266:3307:int _decodeCharForError(int) -> _decodeCharForError
    3318:3325:int _decodeUtf8_2(int) -> _decodeUtf8_2
    3330:3347:int _decodeUtf8_3(int) -> _decodeUtf8_3
    3352:3363:int _decodeUtf8_3fast(int) -> _decodeUtf8_3fast
    3372:3400:int _decodeUtf8_4(int) -> _decodeUtf8_4
    3405:3412:void _skipUtf8_2() -> _skipUtf8_2
    3419:3434:void _skipUtf8_3() -> _skipUtf8_3
    3438:3459:void _skipUtf8_4(int) -> _skipUtf8_4
    3473:3480:void _skipCR() -> _skipCR
    3484:3487:int nextByte() -> nextByte
    3502:3503:void _reportInvalidToken(java.lang.String) -> _reportInvalidToken
    3511:3527:void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
    3532:3536:void _reportInvalidChar(int) -> _reportInvalidChar
    3539:3540:void _reportInvalidInitial(int) -> _reportInvalidInitial
    3543:3544:void _reportInvalidOther(int) -> _reportInvalidOther
    3549:3551:void _reportInvalidOther(int,int) -> _reportInvalidOther
    3566:3667:byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    3680:3685:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    3693:3694:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    3702:3706:void _updateLocation() -> _updateLocation
    3711:3715:void _updateNameLocation() -> _updateNameLocation
    3724:3729:com.fasterxml.jackson.core.JsonToken _closeScope(int) -> _closeScope
    3733:3738:void _closeArrayScope() -> _closeArrayScope
    3741:3746:void _closeObjectScope() -> _closeObjectScope
    24:30:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator -> com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:
    char[] HEX_CHARS -> HEX_CHARS
    java.io.Writer _writer -> _writer
    char _quoteChar -> _quoteChar
    char[] _outputBuffer -> _outputBuffer
    int _outputHead -> _outputHead
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    char[] _entityBuffer -> _entityBuffer
    com.fasterxml.jackson.core.SerializableString _currentEscape -> _currentEscape
    char[] _charBuffer -> _charBuffer
    38:102:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer) -> <init>
    135:140:void writeFieldName(java.lang.String) -> writeFieldName
    146:151:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    155:180:void _writeFieldName(java.lang.String,boolean) -> _writeFieldName
    184:217:void _writeFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writeFieldName
    228:238:void writeStartArray() -> writeStartArray
    243:255:void writeEndArray() -> writeEndArray
    260:274:void writeStartObject(java.lang.Object) -> writeStartObject
    279:289:void writeStartObject() -> writeStartObject
    294:306:void writeEndObject() -> writeEndObject
    314:333:void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    337:357:void _writePPFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writePPFieldName
    368:383:void writeString(java.lang.String) -> writeString
    428:439:void writeString(char[],int,int) -> writeString
    444:469:void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    493:507:void writeRaw(java.lang.String) -> writeRaw
    531:532:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    538:550:void writeRaw(char[],int,int) -> writeRaw
    555:559:void writeRaw(char) -> writeRaw
    563:584:void writeRawLong(java.lang.String) -> writeRawLong
    596:608:void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    615:641:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    653:663:void writeNumber(short) -> writeNumber
    666:672:void _writeQuotedShort(short) -> _writeQuotedShort
    677:687:void writeNumber(int) -> writeNumber
    690:696:void _writeQuotedInt(int) -> _writeQuotedInt
    701:711:void writeNumber(long) -> writeNumber
    714:720:void _writeQuotedLong(long) -> _writeQuotedLong
    727:735:void writeNumber(java.math.BigInteger) -> writeNumber
    741:750:void writeNumber(double) -> writeNumber
    755:764:void writeNumber(float) -> writeNumber
    770:778:void writeNumber(java.math.BigDecimal) -> writeNumber
    783:789:void writeNumber(java.lang.String) -> writeNumber
    793:802:void _writeQuotedRaw(java.lang.String) -> _writeQuotedRaw
    807:826:void writeBoolean(boolean) -> writeBoolean
    830:832:void writeNull() -> writeNull
    843:873:void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    884:890:void flush() -> flush
    895:934:void close() -> close
    939:949:void _releaseBuffers() -> _releaseBuffers
    964:984:void _writeString(java.lang.String) -> _writeString
    989:1021:void _writeString2(int) -> _writeString2
    1030:1049:void _writeLongString(java.lang.String) -> _writeLongString
    1062:1097:void _writeSegment(int) -> _writeSegment
    1105:1157:void _writeString(char[],int,int) -> _writeString
    1173:1205:void _writeStringASCII(int,int) -> _writeStringASCII
    1210:1246:void _writeSegmentASCII(int,int) -> _writeSegmentASCII
    1252:1301:void _writeStringASCII(char[],int,int,int) -> _writeStringASCII
    1317:1356:void _writeStringCustom(int) -> _writeStringCustom
    1361:1404:void _writeSegmentCustom(int) -> _writeSegmentCustom
    1409:1465:void _writeStringCustom(char[],int,int) -> _writeStringCustom
    1477:1512:void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> _writeBinary
    1519:1571:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> _writeBinary
    1579:1628:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> _writeBinary
    1636:1655:int _readMore(java.io.InputStream,byte[],int,int,int) -> _readMore
    1666:1676:void _writeNull() -> _writeNull
    1692:1770:void _prependOrWriteCharacterEscape(char,int) -> _prependOrWriteCharacterEscape
    1783:1853:int _prependOrWriteCharacterEscape(char[],int,int,char,int) -> _prependOrWriteCharacterEscape
    1863:1911:void _appendCharacterEscape(char,int) -> _appendCharacterEscape
    1915:1927:char[] _allocateEntityBuffer() -> _allocateEntityBuffer
    1942:1948:void _flushBuffer() -> _flushBuffer
    22:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer -> com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer:
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent -> _parent
    java.util.concurrent.atomic.AtomicReference _tableInfo -> _tableInfo
    int _seed -> _seed
    boolean _intern -> _intern
    boolean _failOnDoS -> _failOnDoS
    int[] _hashArea -> _hashArea
    int _hashSize -> _hashSize
    int _secondaryStart -> _secondaryStart
    int _tertiaryStart -> _tertiaryStart
    int _tertiaryShift -> _tertiaryShift
    int _count -> _count
    java.lang.String[] _names -> _names
    int _spilloverEnd -> _spilloverEnd
    int _longNameOffset -> _longNameOffset
    boolean _needRehash -> _needRehash
    boolean _hashShared -> _hashShared
    222:242:void <init>(int,boolean,int,boolean) -> <init>
    249:272:void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,boolean,int,boolean,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo) -> <init>
    287:290:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot() -> createRoot
    296:296:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot(int) -> createRoot
    304:304:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int) -> makeChild
    320:326:void release() -> release
    330:348:void mergeChild(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo) -> mergeChild
    375:375:boolean maybeDirty() -> maybeDirty
    386:392:int primaryCount() -> primaryCount
    400:407:int secondaryCount() -> secondaryCount
    415:422:int tertiaryCount() -> tertiaryCount
    431:431:int spilloverCount() -> spilloverCount
    436:442:int totalCount() -> totalCount
    447:452:java.lang.String toString() -> toString
    465:492:java.lang.String findName(int) -> findName
    497:522:java.lang.String findName(int,int) -> findName
    527:550:java.lang.String findName(int,int,int) -> findName
    559:596:java.lang.String findName(int[],int) -> findName
    604:606:int _calcOffset(int) -> _calcOffset
    621:641:java.lang.String _findSecondary(int,int) -> _findSecondary
    646:664:java.lang.String _findSecondary(int,int,int) -> _findSecondary
    669:688:java.lang.String _findSecondary(int,int,int,int) -> _findSecondary
    693:715:java.lang.String _findSecondary(int,int,int[],int) -> _findSecondary
    720:741:boolean _verifyLongName(int[],int,int) -> _verifyLongName
    746:752:boolean _verifyLongName2(int[],int,int) -> _verifyLongName2
    809:855:java.lang.String addName(java.lang.String,int[],int) -> addName
    860:867:void _verifyNeedForRehash() -> _verifyNeedForRehash
    871:882:void _verifySharing() -> _verifySharing
    890:934:int _findOffsetForAdd(int) -> _findOffsetForAdd
    939:953:int _appendLongName(int[],int) -> _appendLongName
    978:987:int calcHash(int) -> calcHash
    994:1004:int calcHash(int,int) -> calcHash
    1009:1022:int calcHash(int,int,int) -> calcHash
    1027:1053:int calcHash(int[],int) -> calcHash
    1064:1142:void rehash() -> rehash
    1149:1158:void nukeSymbols(boolean) -> nukeSymbols
    1172:1173:int _spilloverStart() -> _spilloverStart
    1179:1182:void _reportTooManyCollisions() -> _reportTooManyCollisions
    1191:1204:int _calcTertiaryShift(int) -> _calcTertiaryShift
    17:17:int access$000(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> access$000
    17:17:int access$100(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> access$100
    17:17:int access$200(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> access$200
    17:17:int[] access$300(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> access$300
    17:17:java.lang.String[] access$400(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> access$400
    17:17:int access$500(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> access$500
    17:17:int access$600(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> access$600
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo -> com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo:
    int size -> size
    int count -> count
    int tertiaryShift -> tertiaryShift
    int[] mainHash -> mainHash
    java.lang.String[] names -> names
    int spilloverEnd -> spilloverEnd
    int longNameOffset -> longNameOffset
    1232:1240:void <init>(int,int,int,int[],java.lang.String[],int,int) -> <init>
    1243:1251:void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    1254:1257:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo createInitial(int) -> createInitial
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer -> com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _parent -> _parent
    java.util.concurrent.atomic.AtomicReference _tableInfo -> _tableInfo
    int _seed -> _seed
    int _flags -> _flags
    boolean _canonicalize -> _canonicalize
    java.lang.String[] _symbols -> _symbols
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets -> _buckets
    int _size -> _size
    int _sizeThreshold -> _sizeThreshold
    int _indexMask -> _indexMask
    int _longestCollisionList -> _longestCollisionList
    boolean _hashShared -> _hashShared
    java.util.BitSet _overflows -> _overflows
    232:246:void <init>(int) -> <init>
    253:274:void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo) -> <init>
    276:276:int _thresholdSize(int) -> _thresholdSize
    293:296:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot() -> createRoot
    300:300:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot(int) -> createRoot
    315:315:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int) -> makeChild
    326:335:void release() -> release
    346:363:void mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo) -> mergeChild
    386:386:boolean maybeDirty() -> maybeDirty
    387:387:int hashSeed() -> hashSeed
    424:463:java.lang.String findSymbol(char[],int,int,int) -> findSymbol
    467:474:java.lang.String _findSymbol2(char[],int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket) -> _findSymbol2
    479:511:java.lang.String _addSymbol(char[],int,int,int,int) -> _addSymbol
    516:538:void _handleSpillOverflow(int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket) -> _handleSpillOverflow
    546:549:int _hashToIndex(int) -> _hashToIndex
    562:567:int calcHash(char[],int,int) -> calcHash
    572:579:int calcHash(java.lang.String) -> calcHash
    593:597:void copyArrays() -> copyArrays
    607:682:void rehash() -> rehash
    688:688:void reportTooManyCollisions(int) -> reportTooManyCollisions
    45:45:int access$000(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> access$000
    45:45:int access$100(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> access$100
    45:45:java.lang.String[] access$200(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> access$200
    45:45:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] access$300(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> access$300
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket -> com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket:
    java.lang.String symbol -> symbol
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket next -> next
    int length -> length
    757:761:void <init>(java.lang.String,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket) -> <init>
    764:773:java.lang.String has(char[],int,int) -> has
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo -> com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo:
    int size -> size
    int longestCollisionList -> longestCollisionList
    java.lang.String[] symbols -> symbols
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] buckets -> buckets
    793:798:void <init>(int,int,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[]) -> <init>
    801:806:void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> <init>
    809:809:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo createInitial(int) -> createInitial
com.fasterxml.jackson.core.type.ResolvedType -> com.fasterxml.jackson.core.type.ResolvedType:
    14:14:void <init>() -> <init>
    59:59:boolean isReferenceType() -> isReferenceType
    com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> getReferencedType
    java.lang.String toCanonical() -> toCanonical
com.fasterxml.jackson.core.type.WritableTypeId -> com.fasterxml.jackson.core.type.WritableTypeId:
    java.lang.Object forValue -> forValue
    java.lang.Class forValueType -> forValueType
    java.lang.Object id -> id
    java.lang.String asProperty -> asProperty
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion include -> include
    com.fasterxml.jackson.core.JsonToken valueShape -> valueShape
    boolean wrapperWritten -> wrapperWritten
    156:156:void <init>() -> <init>
    163:164:void <init>(java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> <init>
    182:186:void <init>(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> <init>
com.fasterxml.jackson.core.type.WritableTypeId$Inclusion -> com.fasterxml.jackson.core.type.WritableTypeId$Inclusion:
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion WRAPPER_ARRAY -> WRAPPER_ARRAY
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion WRAPPER_OBJECT -> WRAPPER_OBJECT
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion METADATA_PROPERTY -> METADATA_PROPERTY
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion PAYLOAD_PROPERTY -> PAYLOAD_PROPERTY
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion PARENT_PROPERTY -> PARENT_PROPERTY
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion[] $VALUES -> $VALUES
    34:34:com.fasterxml.jackson.core.type.WritableTypeId$Inclusion[] values() -> values
    34:34:com.fasterxml.jackson.core.type.WritableTypeId$Inclusion valueOf(java.lang.String) -> valueOf
    34:34:void <init>(java.lang.String,int) -> <init>
    95:95:boolean requiresObjectContext() -> requiresObjectContext
    34:92:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.BufferRecycler -> com.fasterxml.jackson.core.util.BufferRecycler:
    int[] BYTE_BUFFER_LENGTHS -> BYTE_BUFFER_LENGTHS
    int[] CHAR_BUFFER_LENGTHS -> CHAR_BUFFER_LENGTHS
    byte[][] _byteBuffers -> _byteBuffers
    char[][] _charBuffers -> _charBuffers
    62:63:void <init>() -> <init>
    71:74:void <init>(int,int) -> <init>
    86:86:byte[] allocByteBuffer(int) -> allocByteBuffer
    90:100:byte[] allocByteBuffer(int,int) -> allocByteBuffer
    104:105:void releaseByteBuffer(int,byte[]) -> releaseByteBuffer
    114:114:char[] allocCharBuffer(int) -> allocCharBuffer
    118:128:char[] allocCharBuffer(int,int) -> allocCharBuffer
    132:133:void releaseCharBuffer(int,char[]) -> releaseCharBuffer
    142:142:int byteBufferLength(int) -> byteBufferLength
    146:146:int charBufferLength(int) -> charBufferLength
    155:155:byte[] balloc(int) -> balloc
    156:156:char[] calloc(int) -> calloc
    45:46:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.BufferRecyclers -> com.fasterxml.jackson.core.util.BufferRecyclers:
    com.fasterxml.jackson.core.util.ThreadLocalBufferManager _bufferRecyclerTracker -> _bufferRecyclerTracker
    java.lang.ThreadLocal _recyclerRef -> _recyclerRef
    java.lang.ThreadLocal _encoderRef -> _encoderRef
    63:75:com.fasterxml.jackson.core.util.BufferRecycler getBufferRecycler() -> getBufferRecycler
    113:120:com.fasterxml.jackson.core.io.JsonStringEncoder getJsonStringEncoder() -> getJsonStringEncoder
    129:129:byte[] encodeAsUTF8(java.lang.String) -> encodeAsUTF8
    136:136:char[] quoteAsJsonText(java.lang.String) -> quoteAsJsonText
    150:150:byte[] quoteAsJsonUTF8(java.lang.String) -> quoteAsJsonUTF8
    39:109:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.ByteArrayBuilder -> com.fasterxml.jackson.core.util.ByteArrayBuilder:
    byte[] NO_BYTES -> NO_BYTES
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    java.util.LinkedList _pastBlocks -> _pastBlocks
    int _pastLen -> _pastLen
    byte[] _currBlock -> _currBlock
    int _currBlockPtr -> _currBlockPtr
    51:51:void <init>() -> <init>
    52:52:void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    53:53:void <init>(int) -> <init>
    44:58:void <init>(com.fasterxml.jackson.core.util.BufferRecycler,int) -> <init>
    61:67:void reset() -> reset
    82:87:void release() -> release
    90:94:void append(int) -> append
    97:104:void appendTwoBytes(int) -> appendTwoBytes
    107:116:void appendThreeBytes(int) -> appendThreeBytes
    141:163:byte[] toByteArray() -> toByteArray
    177:178:byte[] resetAndGetFirstSegment() -> resetAndGetFirstSegment
    187:188:byte[] finishCurrentSegment() -> finishCurrentSegment
    201:202:byte[] completeAndCoalesce(int) -> completeAndCoalesce
    205:205:byte[] getCurrentSegment() -> getCurrentSegment
    206:206:void setCurrentSegmentLength(int) -> setCurrentSegmentLength
    207:207:int getCurrentSegmentLength() -> getCurrentSegmentLength
    217:218:void write(byte[]) -> write
    224:235:void write(byte[],int,int) -> write
    239:240:void write(int) -> write
    242:242:void close() -> close
    243:243:void flush() -> flush
    253:277:void _allocMore() -> _allocMore
    31:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultIndenter -> com.fasterxml.jackson.core.util.DefaultIndenter:
    java.lang.String SYS_LF -> SYS_LF
    com.fasterxml.jackson.core.util.DefaultIndenter SYSTEM_LINEFEED_INSTANCE -> SYSTEM_LINEFEED_INSTANCE
    char[] indents -> indents
    int charsPerLevel -> charsPerLevel
    java.lang.String eol -> eol
    44:45:void <init>() -> <init>
    52:63:void <init>(java.lang.String,java.lang.String) -> <init>
    82:82:boolean isInline() -> isInline
    87:96:void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    22:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter:
    com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter -> _arrayIndenter
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter -> _objectIndenter
    com.fasterxml.jackson.core.SerializableString _rootSeparator -> _rootSeparator
    boolean _spacesInObjectEntries -> _spacesInObjectEntries
    int _nesting -> _nesting
    com.fasterxml.jackson.core.util.Separators _separators -> _separators
    java.lang.String _objectFieldValueSeparatorWithSpaces -> _objectFieldValueSeparatorWithSpaces
    101:102:void <init>() -> <init>
    52:130:void <init>(com.fasterxml.jackson.core.SerializableString) -> <init>
    133:134:void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter) -> <init>
    52:148:void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter,com.fasterxml.jackson.core.SerializableString) -> <init>
    242:244:com.fasterxml.jackson.core.util.DefaultPrettyPrinter withSeparators(com.fasterxml.jackson.core.util.Separators) -> withSeparators
    255:255:com.fasterxml.jackson.core.util.DefaultPrettyPrinter createInstance() -> createInstance
    267:270:void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    275:279:void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    284:285:void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    299:304:void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    318:320:void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    325:334:void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    339:343:void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    347:348:void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    362:364:void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    369:378:void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
    15:15:java.lang.Object createInstance() -> createInstance
    28:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter:
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter instance -> instance
    406:406:void <init>() -> <init>
    413:414:void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    417:417:boolean isInline() -> isInline
    408:408:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter:
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter:
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter instance -> instance
    389:389:void <init>() -> <init>
    395:395:void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    398:398:boolean isInline() -> isInline
    392:392:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.Instantiatable -> com.fasterxml.jackson.core.util.Instantiatable:
    java.lang.Object createInstance() -> createInstance
com.fasterxml.jackson.core.util.InternCache -> com.fasterxml.jackson.core.util.InternCache:
    com.fasterxml.jackson.core.util.InternCache instance -> instance
    java.lang.Object lock -> lock
    36:38:void <init>() -> <init>
    41:62:java.lang.String intern(java.lang.String) -> intern
    29:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.JsonParserDelegate -> com.fasterxml.jackson.core.util.JsonParserDelegate:
    com.fasterxml.jackson.core.JsonParser delegate -> delegate
    25:27:void <init>(com.fasterxml.jackson.core.JsonParser) -> <init>
    36:37:void setCurrentValue(java.lang.Object) -> setCurrentValue
    46:46:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    60:60:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    66:67:com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> setFeatureMask
    72:73:com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> overrideStdFeatures
    78:79:com.fasterxml.jackson.core.JsonParser overrideFormatFeatures(int,int) -> overrideFormatFeatures
    83:83:void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    94:94:boolean requiresCustomCodec() -> requiresCustomCodec
    102:102:void close() -> close
    111:111:com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    114:114:com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    115:115:int getCurrentTokenId() -> getCurrentTokenId
    116:116:boolean hasCurrentToken() -> hasCurrentToken
    117:117:boolean hasTokenId(int) -> hasTokenId
    118:118:boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    120:120:java.lang.String getCurrentName() -> getCurrentName
    121:121:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    122:122:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    123:123:boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    124:124:boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    125:125:boolean isNaN() -> isNaN
    133:133:void clearCurrentToken() -> clearCurrentToken
    143:143:java.lang.String getText() -> getText
    144:144:boolean hasTextCharacters() -> hasTextCharacters
    145:145:char[] getTextCharacters() -> getTextCharacters
    146:146:int getTextLength() -> getTextLength
    147:147:int getTextOffset() -> getTextOffset
    157:157:java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    163:163:byte getByteValue() -> getByteValue
    166:166:short getShortValue() -> getShortValue
    169:169:java.math.BigDecimal getDecimalValue() -> getDecimalValue
    172:172:double getDoubleValue() -> getDoubleValue
    175:175:float getFloatValue() -> getFloatValue
    178:178:int getIntValue() -> getIntValue
    181:181:long getLongValue() -> getLongValue
    184:184:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    187:187:java.lang.Number getNumberValue() -> getNumberValue
    195:195:int getValueAsInt() -> getValueAsInt
    196:196:int getValueAsInt(int) -> getValueAsInt
    197:197:long getValueAsLong() -> getValueAsLong
    198:198:long getValueAsLong(long) -> getValueAsLong
    203:203:java.lang.String getValueAsString() -> getValueAsString
    204:204:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    212:212:java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    213:213:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    214:214:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    215:215:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    217:217:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    219:219:com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    225:227:com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    236:236:boolean canReadObjectId() -> canReadObjectId
    237:237:boolean canReadTypeId() -> canReadTypeId
    238:238:java.lang.Object getObjectId() -> getObjectId
    239:239:java.lang.Object getTypeId() -> getTypeId
com.fasterxml.jackson.core.util.JsonParserSequence -> com.fasterxml.jackson.core.util.JsonParserSequence:
    com.fasterxml.jackson.core.JsonParser[] _parsers -> _parsers
    boolean _checkForExistingToken -> _checkForExistingToken
    int _nextParserIndex -> _nextParserIndex
    boolean _hasToken -> _hasToken
    68:73:void <init>(boolean,com.fasterxml.jackson.core.JsonParser[]) -> <init>
    87:102:com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(boolean,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser) -> createFlattened
    118:126:void addFlattenedActiveParsers(java.util.List) -> addFlattenedActiveParsers
    137:138:void close() -> close
    143:154:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    165:185:com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    220:224:boolean switchToNext() -> switchToNext
    229:239:com.fasterxml.jackson.core.JsonToken switchAndReturnNext() -> switchAndReturnNext
com.fasterxml.jackson.core.util.MinimalPrettyPrinter -> com.fasterxml.jackson.core.util.MinimalPrettyPrinter:
    java.lang.String _rootValueSeparator -> _rootValueSeparator
    com.fasterxml.jackson.core.util.Separators _separators -> _separators
    44:45:void <init>() -> <init>
    47:50:void <init>(java.lang.String) -> <init>
    73:76:void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    81:82:void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    88:88:void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    100:101:void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    113:114:void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    119:120:void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    125:126:void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    132:132:void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    144:145:void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    150:151:void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
com.fasterxml.jackson.core.util.RequestPayload -> com.fasterxml.jackson.core.util.RequestPayload:
    byte[] _payloadAsBytes -> _payloadAsBytes
    java.lang.CharSequence _payloadAsText -> _payloadAsText
    java.lang.String _charset -> _charset
    58:65:java.lang.String toString() -> toString
com.fasterxml.jackson.core.util.Separators -> com.fasterxml.jackson.core.util.Separators:
    char objectFieldValueSeparator -> objectFieldValueSeparator
    char objectEntrySeparator -> objectEntrySeparator
    char arrayValueSeparator -> arrayValueSeparator
    23:23:com.fasterxml.jackson.core.util.Separators createDefaultInstance() -> createDefaultInstance
    27:28:void <init>() -> <init>
    31:35:void <init>(char,char,char) -> <init>
    53:53:char getObjectFieldValueSeparator() -> getObjectFieldValueSeparator
    57:57:char getObjectEntrySeparator() -> getObjectEntrySeparator
    61:61:char getArrayValueSeparator() -> getArrayValueSeparator
com.fasterxml.jackson.core.util.TextBuffer -> com.fasterxml.jackson.core.util.TextBuffer:
    char[] NO_CHARS -> NO_CHARS
    com.fasterxml.jackson.core.util.BufferRecycler _allocator -> _allocator
    char[] _inputBuffer -> _inputBuffer
    int _inputStart -> _inputStart
    int _inputLen -> _inputLen
    java.util.ArrayList _segments -> _segments
    boolean _hasSegments -> _hasSegments
    int _segmentSize -> _segmentSize
    char[] _currentSegment -> _currentSegment
    int _currentSize -> _currentSize
    java.lang.String _resultString -> _resultString
    char[] _resultArray -> _resultArray
    121:123:void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    136:148:void releaseBuffers() -> releaseBuffers
    156:168:void resetWithEmpty() -> resetWithEmpty
    199:211:void resetWithShared(char[],int,int) -> resetWithShared
    215:230:void resetWithCopy(char[],int,int) -> resetWithCopy
    255:267:void resetWithString(java.lang.String) -> resetWithString
    282:285:char[] buf(int) -> buf
    290:300:void clearSegments() -> clearSegments
    312:322:int size() -> size
    330:330:int getTextOffset() -> getTextOffset
    354:364:char[] getTextBuffer() -> getTextBuffer
    375:409:java.lang.String contentsAsString() -> contentsAsString
    413:417:char[] contentsAsArray() -> contentsAsArray
    427:439:java.math.BigDecimal contentsAsDecimal() -> contentsAsDecimal
    447:447:double contentsAsDouble() -> contentsAsDouble
    459:468:int contentsAsInt(boolean) -> contentsAsInt
    480:489:long contentsAsLong(boolean) -> contentsAsLong
    549:561:void append(char) -> append
    566:597:void append(char[],int,int) -> append
    602:632:void append(java.lang.String,int,int) -> append
    646:657:char[] getCurrentSegment() -> getCurrentSegment
    663:679:char[] emptyAndGetCurrentSegment() -> emptyAndGetCurrentSegment
    682:682:int getCurrentSegmentSize() -> getCurrentSegmentSize
    683:683:void setCurrentLength(int) -> setCurrentLength
    689:698:java.lang.String setCurrentAndReturn(int) -> setCurrentAndReturn
    702:720:char[] finishCurrentSegment() -> finishCurrentSegment
    730:738:char[] expandCurrentSegment() -> expandCurrentSegment
    768:768:java.lang.String toString() -> toString
    782:799:void unshare(int) -> unshare
    808:826:void expand(int) -> expand
    830:861:char[] resultArray() -> resultArray
    864:864:char[] carr(int) -> carr
    29:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.ThreadLocalBufferManager -> com.fasterxml.jackson.core.util.ThreadLocalBufferManager:
    java.lang.Object RELEASE_LOCK -> RELEASE_LOCK
    java.util.Map _trackedRecyclers -> _trackedRecyclers
    java.lang.ref.ReferenceQueue _refQueue -> _refQueue
    20:113:void <init>() -> <init>
    57:57:com.fasterxml.jackson.core.util.ThreadLocalBufferManager instance() -> instance
    82:87:java.lang.ref.SoftReference wrapAndTrack(com.fasterxml.jackson.core.util.BufferRecycler) -> wrapAndTrack
    103:107:void removeSoftRefsClearedByGc() -> removeSoftRefsClearedByGc
com.fasterxml.jackson.core.util.ThreadLocalBufferManager$ThreadLocalBufferManagerHolder -> com.fasterxml.jackson.core.util.ThreadLocalBufferManager$ThreadLocalBufferManagerHolder:
    com.fasterxml.jackson.core.util.ThreadLocalBufferManager manager -> manager
    114:114:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.VersionUtil -> com.fasterxml.jackson.core.util.VersionUtil:
    java.util.regex.Pattern V_SEP -> V_SEP
    163:163:void throwInternal() -> throwInternal
    28:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.AbstractTypeResolver -> com.fasterxml.jackson.databind.AbstractTypeResolver:
    9:9:void <init>() -> <init>
    30:30:com.fasterxml.jackson.databind.JavaType findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeMapping
    64:64:com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> resolveAbstractType
com.fasterxml.jackson.databind.AnnotationIntrospector -> com.fasterxml.jackson.databind.AnnotationIntrospector:
    41:54:void <init>() -> <init>
    106:106:com.fasterxml.jackson.databind.AnnotationIntrospector nopInstance() -> nopInstance
    172:172:boolean isAnnotationBundle(java.lang.annotation.Annotation) -> isAnnotationBundle
    192:192:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findObjectIdInfo
    201:201:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> findObjectReferenceInfo
    221:221:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findRootName
    238:238:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnorals(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnorals
    252:252:java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> isIgnorableType
    261:261:java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated) -> findFilterId
    274:274:java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findNamingStrategy
    332:332:com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> findAutoDetectVisibility
    357:357:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> findTypeResolver
    377:377:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyTypeResolver
    399:399:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyContentTypeResolver
    411:411:java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> findSubtypes
    418:418:java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findTypeName
    425:425:java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isTypeId
    437:437:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findReferenceType
    447:447:com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findUnwrappingNameTransformer
    456:456:boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasIgnoreMarker
    476:480:com.fasterxml.jackson.annotation.JacksonInject$Value findInjectableValue(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValue
    488:488:java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasRequiredMarker
    506:506:java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> findViews
    517:517:com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> findFormat
    531:531:com.fasterxml.jackson.databind.PropertyName findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated) -> findWrapperName
    541:541:java.lang.String findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDefaultValue
    553:553:java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDescription
    566:566:java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIndex
    581:581:java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findImplicitPropertyName
    591:591:java.util.List findPropertyAliases(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAliases
    602:602:com.fasterxml.jackson.annotation.JsonProperty$Access findPropertyAccess(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAccess
    614:614:com.fasterxml.jackson.databind.introspect.AnnotatedMethod resolveSetterConflict(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> resolveSetterConflict
    622:622:java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValueId
    639:639:java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializer
    650:650:java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
    662:662:java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    672:672:java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findNullSerializer
    684:684:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationTyping
    709:709:java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationConverter
    731:731:java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findSerializationContentConverter
    743:743:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusion
    798:798:com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineSerializationType
    836:836:java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    845:845:java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationSortAlphabetically
    855:855:void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> findAndAddVirtualProperties
    878:878:com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForSerialization
    896:901:java.lang.Boolean hasAsValue(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsValue
    918:923:java.lang.Boolean hasAnyGetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnyGetter
    939:939:java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[]) -> findEnumValues
    951:951:java.lang.Enum findDefaultEnumValue(java.lang.Class) -> findDefaultEnumValue
    976:976:boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    984:984:boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    1002:1002:java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    1014:1014:java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    1027:1027:java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    1053:1053:java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializationConverter
    1075:1075:java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findDeserializationContentConverter
    1093:1093:com.fasterxml.jackson.databind.JavaType refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineDeserializationType
    1161:1161:java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findValueInstantiator
    1178:1178:java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilder
    1185:1185:com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilderConfig
    1209:1209:com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForDeserialization
    1224:1224:java.lang.Boolean hasAnySetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnySetter
    1234:1234:com.fasterxml.jackson.annotation.JsonSetter$Value findSetterInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findSetterInfo
    1243:1243:java.lang.Boolean findMergeInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findMergeInfo
    1264:1271:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorAnnotation
    1288:1288:boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    1302:1302:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorBinding
    1336:1336:java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> _findAnnotation
    1353:1353:boolean _hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> _hasAnnotation
    1363:1363:boolean _hasOneOf(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class[]) -> _hasOneOf
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty -> com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty:
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type _type -> _type
    java.lang.String _name -> _name
    79:82:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type,java.lang.String) -> <init>
    84:84:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty managed(java.lang.String) -> managed
    85:85:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty back(java.lang.String) -> back
    88:88:java.lang.String getName() -> getName
    90:90:boolean isManagedReference() -> isManagedReference
    91:91:boolean isBackReference() -> isBackReference
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type -> com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type:
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type MANAGED_REFERENCE -> MANAGED_REFERENCE
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type BACK_REFERENCE -> BACK_REFERENCE
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type[] $VALUES -> $VALUES
    56:56:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type[] values() -> values
    56:56:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type valueOf(java.lang.String) -> valueOf
    56:56:void <init>(java.lang.String,int) -> <init>
    56:72:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.BeanDescription -> com.fasterxml.jackson.databind.BeanDescription:
    com.fasterxml.jackson.databind.JavaType _type -> _type
    36:38:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    50:50:com.fasterxml.jackson.databind.JavaType getType() -> getType
    52:52:java.lang.Class getBeanClass() -> getBeanClass
    58:58:boolean isNonStaticInnerClass() -> isNonStaticInnerClass
    com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> getClassAnnotations
    java.util.List findProperties() -> findProperties
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.List findBackReferences() -> findBackReferences
    java.util.List getConstructors() -> getConstructors
    java.util.List getFactoryMethods() -> getFactoryMethods
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor() -> findJsonValueAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter() -> findAnyGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterAccessor() -> findAnySetterAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> findPropertyInclusion
    com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> findExpectedFormat
    com.fasterxml.jackson.databind.util.Converter findSerializationConverter() -> findSerializationConverter
    com.fasterxml.jackson.databind.util.Converter findDeserializationConverter() -> findDeserializationConverter
    java.util.Map findInjectables() -> findInjectables
    java.lang.Class findPOJOBuilder() -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig() -> findPOJOBuilderConfig
    java.lang.Object instantiateBean(boolean) -> instantiateBean
    java.lang.Class[] findDefaultViews() -> findDefaultViews
com.fasterxml.jackson.databind.BeanProperty -> com.fasterxml.jackson.databind.BeanProperty:
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY_FORMAT -> EMPTY_FORMAT
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> EMPTY_INCLUDE
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
    39:40:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.BeanProperty$Bogus -> com.fasterxml.jackson.databind.BeanProperty$Bogus:
    352:352:void <init>() -> <init>
    356:356:java.lang.String getName() -> getName
    361:361:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    366:366:com.fasterxml.jackson.databind.JavaType getType() -> getType
    376:376:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    401:401:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    412:412:com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    419:419:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
com.fasterxml.jackson.databind.BeanProperty$Std -> com.fasterxml.jackson.databind.BeanProperty$Std:
    com.fasterxml.jackson.databind.PropertyName _name -> _name
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> _wrapperName
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> _metadata
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> _member
    234:240:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    288:297:com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    303:312:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
    322:322:java.lang.String getName() -> getName
    323:323:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    324:324:com.fasterxml.jackson.databind.JavaType getType() -> getType
    325:325:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    327:327:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    328:328:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
com.fasterxml.jackson.databind.DatabindContext -> com.fasterxml.jackson.databind.DatabindContext:
    26:26:void <init>() -> <init>
    com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
    146:149:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> constructType
    158:161:com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    176:200:com.fasterxml.jackson.databind.JavaType resolveSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> resolveSubType
    com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> invalidTypeIdException
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    229:237:com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> objectIdGeneratorInstance
    242:250:com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> objectIdResolverInstance
    264:290:com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> converterInstance
    java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> reportBadDefinition
    312:312:java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String) -> reportBadDefinition
    325:328:java.lang.String _format(java.lang.String,java.lang.Object[]) -> _format
    335:341:java.lang.String _truncate(java.lang.String) -> _truncate
    348:352:java.lang.String _quotedString(java.lang.String) -> _quotedString
    359:362:java.lang.String _colonConcat(java.lang.String,java.lang.String) -> _colonConcat
com.fasterxml.jackson.databind.DeserializationConfig -> com.fasterxml.jackson.databind.DeserializationConfig:
    com.fasterxml.jackson.databind.util.LinkedNode _problemHandlers -> _problemHandlers
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    int _deserFeatures -> _deserFeatures
    int _parserFeatures -> _parserFeatures
    int _parserFeaturesToChange -> _parserFeaturesToChange
    int _formatReadFeatures -> _formatReadFeatures
    int _formatReadFeaturesToChange -> _formatReadFeaturesToChange
    103:111:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    144:152:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,int,int,int,int,int,int) -> <init>
    172:180:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    266:266:com.fasterxml.jackson.databind.DeserializationConfig _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    271:271:com.fasterxml.jackson.databind.DeserializationConfig _withMapperFeatures(int) -> _withMapperFeatures
    624:630:void initialize(com.fasterxml.jackson.core.JsonParser) -> initialize
    641:644:boolean useRootWrapping() -> useRootWrapping
    648:648:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    684:684:int getDeserializationFeatures() -> getDeserializationFeatures
    710:710:com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers() -> getProblemHandlers
    714:714:com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    731:731:com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType) -> introspect
    740:740:com.fasterxml.jackson.databind.BeanDescription introspectForCreation(com.fasterxml.jackson.databind.JavaType) -> introspectForCreation
    748:748:com.fasterxml.jackson.databind.BeanDescription introspectForBuilder(com.fasterxml.jackson.databind.JavaType) -> introspectForBuilder
    767:783:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.JavaType) -> findTypeDeserializer
    24:24:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(int) -> _withMapperFeatures
    24:24:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
com.fasterxml.jackson.databind.DeserializationContext -> com.fasterxml.jackson.databind.DeserializationContext:
    com.fasterxml.jackson.databind.deser.DeserializerCache _cache -> _cache
    com.fasterxml.jackson.databind.deser.DeserializerFactory _factory -> _factory
    com.fasterxml.jackson.databind.DeserializationConfig _config -> _config
    int _featureFlags -> _featureFlags
    java.lang.Class _view -> _view
    com.fasterxml.jackson.core.JsonParser _parser -> _parser
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> _injectableValues
    com.fasterxml.jackson.databind.util.ArrayBuilders _arrayBuilders -> _arrayBuilders
    com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer -> _objectBuffer
    java.text.DateFormat _dateFormat -> _dateFormat
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> _attributes
    com.fasterxml.jackson.databind.util.LinkedNode _currentType -> _currentType
    155:169:void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache) -> <init>
    173:183:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    191:201:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    223:223:com.fasterxml.jackson.databind.DeserializationConfig getConfig() -> getConfig
    226:226:java.lang.Class getActiveView() -> getActiveView
    230:230:boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    235:235:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    240:240:com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    245:245:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    250:250:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    261:261:java.util.Locale getLocale() -> getLocale
    272:272:java.util.TimeZone getTimeZone() -> getTimeZone
    331:331:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    341:341:int getDeserializationFeatures() -> getDeserializationFeatures
    361:361:boolean hasSomeOfFeatures(int) -> hasSomeOfFeatures
    372:372:com.fasterxml.jackson.core.JsonParser getParser() -> getParser
    378:382:java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> findInjectableValue
    394:394:com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
    404:404:com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    444:448:com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findContextualValueDeserializer
    467:467:com.fasterxml.jackson.databind.JsonDeserializer findNonContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType) -> findNonContextualValueDeserializer
    477:489:com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType) -> findRootValueDeserializer
    500:506:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findKeyDeserializer
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver) -> findObjectId
    void checkUnresolvedObjectId() -> checkUnresolvedObjectId
    543:543:com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class) -> constructType
    557:557:java.lang.Class findClass(java.lang.String) -> findClass
    574:580:com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    594:598:void returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer) -> returnObjectBuffer
    606:609:com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> deserializerInstance
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> keyDeserializerInstance
    648:656:com.fasterxml.jackson.databind.JsonDeserializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> handlePrimaryContextualization
    679:687:com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> handleSecondaryContextualization
    709:712:java.util.Date parseDate(java.lang.String) -> parseDate
    723:725:java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    807:822:boolean handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    850:866:java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[]) -> handleWeirdKey
    894:910:java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[]) -> handleWeirdStringValue
    937:953:java.lang.Object handleWeirdNumberValue(java.lang.Class,java.lang.Number,java.lang.String,java.lang.Object[]) -> handleWeirdNumberValue
    960:975:java.lang.Object handleWeirdNativeValue(com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser) -> handleWeirdNativeValue
    1000:1031:java.lang.Object handleMissingInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[]) -> handleMissingInstantiator
    1055:1072:java.lang.Object handleInstantiationProblem(java.lang.Class,java.lang.Object,java.lang.Throwable) -> handleInstantiationProblem
    1092:1092:java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser) -> handleUnexpectedToken
    1114:1139:java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[]) -> handleUnexpectedToken
    1165:1186:com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleUnknownTypeId
    1195:1217:com.fasterxml.jackson.databind.JavaType handleMissingTypeId(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleMissingTypeId
    1225:1229:boolean _isCompatible(java.lang.Class,java.lang.Object) -> _isCompatible
    1254:1255:void reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> reportWrongTokenException
    1272:1273:void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> reportWrongTokenException
    1290:1291:void reportWrongTokenException(java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> reportWrongTokenException
    1300:1302:java.lang.Object reportUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.lang.Object) -> reportUnresolvedObjectId
    1314:1316:java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.BeanProperty,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    1328:1329:java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    1341:1342:java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    1354:1355:java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    1361:1361:java.lang.Object reportTrailingTokens(java.lang.Class,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken) -> reportTrailingTokens
    1426:1429:java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object[]) -> reportBadTypeDefinition
    1441:1446:java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object[]) -> reportBadPropertyDefinition
    1451:1451:java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> reportBadDefinition
    1467:1472:java.lang.Object reportBadMerge(com.fasterxml.jackson.databind.JsonDeserializer) -> reportBadMerge
    1495:1498:com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> wrongTokenException
    1504:1507:com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> wrongTokenException
    1527:1527:com.fasterxml.jackson.databind.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    1548:1548:com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String) -> weirdStringException
    1563:1563:com.fasterxml.jackson.databind.JsonMappingException weirdNumberException(java.lang.Number,java.lang.Class,java.lang.String) -> weirdNumberException
    1581:1581:com.fasterxml.jackson.databind.JsonMappingException weirdNativeValueException(java.lang.Object,java.lang.Class) -> weirdNativeValueException
    1598:1603:com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    1626:1628:com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> invalidTypeIdException
    1636:1638:com.fasterxml.jackson.databind.JsonMappingException missingTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> missingTypeIdException
    1758:1768:java.text.DateFormat getDateFormat() -> getDateFormat
    50:50:com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
com.fasterxml.jackson.databind.DeserializationFeature -> com.fasterxml.jackson.databind.DeserializationFeature:
    com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS -> USE_BIG_DECIMAL_FOR_FLOATS
    com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS -> USE_BIG_INTEGER_FOR_INTS
    com.fasterxml.jackson.databind.DeserializationFeature USE_LONG_FOR_INTS -> USE_LONG_FOR_INTS
    com.fasterxml.jackson.databind.DeserializationFeature USE_JAVA_ARRAY_FOR_JSON_ARRAY -> USE_JAVA_ARRAY_FOR_JSON_ARRAY
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNKNOWN_PROPERTIES -> FAIL_ON_UNKNOWN_PROPERTIES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES -> FAIL_ON_NULL_FOR_PRIMITIVES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NUMBERS_FOR_ENUMS -> FAIL_ON_NUMBERS_FOR_ENUMS
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_INVALID_SUBTYPE -> FAIL_ON_INVALID_SUBTYPE
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_READING_DUP_TREE_KEY -> FAIL_ON_READING_DUP_TREE_KEY
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_IGNORED_PROPERTIES -> FAIL_ON_IGNORED_PROPERTIES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNRESOLVED_OBJECT_IDS -> FAIL_ON_UNRESOLVED_OBJECT_IDS
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_MISSING_CREATOR_PROPERTIES -> FAIL_ON_MISSING_CREATOR_PROPERTIES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_CREATOR_PROPERTIES -> FAIL_ON_NULL_CREATOR_PROPERTIES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY -> FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_TRAILING_TOKENS -> FAIL_ON_TRAILING_TOKENS
    com.fasterxml.jackson.databind.DeserializationFeature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_SINGLE_VALUE_AS_ARRAY -> ACCEPT_SINGLE_VALUE_AS_ARRAY
    com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS -> UNWRAP_SINGLE_VALUE_ARRAYS
    com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_ROOT_VALUE -> UNWRAP_ROOT_VALUE
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT -> ACCEPT_EMPTY_STRING_AS_NULL_OBJECT
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT -> ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_FLOAT_AS_INT -> ACCEPT_FLOAT_AS_INT
    com.fasterxml.jackson.databind.DeserializationFeature READ_ENUMS_USING_TO_STRING -> READ_ENUMS_USING_TO_STRING
    com.fasterxml.jackson.databind.DeserializationFeature READ_UNKNOWN_ENUM_VALUES_AS_NULL -> READ_UNKNOWN_ENUM_VALUES_AS_NULL
    com.fasterxml.jackson.databind.DeserializationFeature READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE -> READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE
    com.fasterxml.jackson.databind.DeserializationFeature READ_DATE_TIMESTAMPS_AS_NANOSECONDS -> READ_DATE_TIMESTAMPS_AS_NANOSECONDS
    com.fasterxml.jackson.databind.DeserializationFeature ADJUST_DATES_TO_CONTEXT_TIME_ZONE -> ADJUST_DATES_TO_CONTEXT_TIME_ZONE
    com.fasterxml.jackson.databind.DeserializationFeature EAGER_DESERIALIZER_FETCH -> EAGER_DESERIALIZER_FETCH
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.databind.DeserializationFeature[] $VALUES -> $VALUES
    20:20:com.fasterxml.jackson.databind.DeserializationFeature[] values() -> values
    20:20:com.fasterxml.jackson.databind.DeserializationFeature valueOf(java.lang.String) -> valueOf
    489:492:void <init>(java.lang.String,int,boolean) -> <init>
    495:495:boolean enabledByDefault() -> enabledByDefault
    498:498:int getMask() -> getMask
    501:501:boolean enabledIn(int) -> enabledIn
    20:482:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.InjectableValues -> com.fasterxml.jackson.databind.InjectableValues:
    java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> findInjectableValue
com.fasterxml.jackson.databind.JavaType -> com.fasterxml.jackson.databind.JavaType:
    java.lang.Class _class -> _class
    int _hash -> _hash
    java.lang.Object _valueHandler -> _valueHandler
    java.lang.Object _typeHandler -> _typeHandler
    boolean _asStatic -> _asStatic
    78:84:void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean) -> <init>
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    141:150:com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> withHandlersFrom
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    227:227:java.lang.Class getRawClass() -> getRawClass
    235:235:boolean hasRawClass(java.lang.Class) -> hasRawClass
    245:245:boolean hasContentType() -> hasContentType
    252:252:boolean isTypeOrSubTypeOf(java.lang.Class) -> isTypeOrSubTypeOf
    259:259:boolean isTypeOrSuperTypeOf(java.lang.Class) -> isTypeOrSuperTypeOf
    264:264:boolean isAbstract() -> isAbstract
    274:281:boolean isConcrete() -> isConcrete
    285:285:boolean isThrowable() -> isThrowable
    288:288:boolean isArrayType() -> isArrayType
    291:291:boolean isEnumType() -> isEnumType
    294:294:boolean isInterface() -> isInterface
    297:297:boolean isPrimitive() -> isPrimitive
    300:300:boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    315:315:boolean isCollectionLikeType() -> isCollectionLikeType
    323:323:boolean isMapLikeType() -> isMapLikeType
    334:334:boolean isJavaLangObject() -> isJavaLangObject
    344:344:boolean useStaticType() -> useStaticType
    353:353:boolean hasGenericTypes() -> hasGenericTypes
    356:356:com.fasterxml.jackson.databind.JavaType getKeyType() -> getKeyType
    359:359:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    362:362:com.fasterxml.jackson.databind.JavaType getReferencedType() -> getReferencedType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.databind.JavaType containedType(int) -> containedType
    403:404:com.fasterxml.jackson.databind.JavaType containedTypeOrUnknown(int) -> containedTypeOrUnknown
    com.fasterxml.jackson.databind.type.TypeBindings getBindings() -> getBindings
    com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class) -> findSuperType
    com.fasterxml.jackson.databind.JavaType getSuperClass() -> getSuperClass
    java.util.List getInterfaces() -> getInterfaces
    457:457:java.lang.Object getValueHandler() -> getValueHandler
    463:463:java.lang.Object getTypeHandler() -> getTypeHandler
    489:489:boolean hasHandlers() -> hasHandlers
    509:511:java.lang.String getGenericSignature() -> getGenericSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    561:561:int hashCode() -> hashCode
    20:20:com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> getReferencedType
com.fasterxml.jackson.databind.JsonDeserializer -> com.fasterxml.jackson.databind.JsonDeserializer:
    46:423:void <init>() -> <init>
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    128:131:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    154:154:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    173:173:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    208:208:java.lang.Class handledType() -> handledType
    224:224:boolean isCachable() -> isCachable
    254:254:java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    281:281:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    306:306:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    334:334:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    355:355:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    365:365:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    389:389:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    402:402:java.lang.Object getNullValue() -> getNullValue
com.fasterxml.jackson.databind.JsonDeserializer$None -> com.fasterxml.jackson.databind.JsonDeserializer$None:
    424:424:void <init>() -> <init>
com.fasterxml.jackson.databind.JsonMappingException -> com.fasterxml.jackson.databind.JsonMappingException:
    java.util.LinkedList _path -> _path
    java.io.Closeable _processor -> _processor
    237:245:void <init>(java.io.Closeable,java.lang.String) -> <init>
    251:256:void <init>(java.io.Closeable,java.lang.String,java.lang.Throwable) -> <init>
    262:264:void <init>(java.io.Closeable,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    270:270:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> from
    277:277:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable) -> from
    284:284:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> from
    291:291:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable) -> from
    298:298:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> from
    305:305:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Throwable) -> from
    336:336:com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException) -> fromUnexpectedIOE
    351:351:com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapWithPath
    363:363:com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int) -> wrapWithPath
    375:394:com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException$Reference) -> wrapWithPath
    426:427:java.lang.StringBuilder getPathReference(java.lang.StringBuilder) -> getPathReference
    436:438:void prependPath(java.lang.Object,java.lang.String) -> prependPath
    451:461:void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference) -> prependPath
    471:471:java.lang.Object getProcessor() -> getProcessor
    475:475:java.lang.String getLocalizedMessage() -> getLocalizedMessage
    484:484:java.lang.String getMessage() -> getMessage
    492:505:java.lang.String _buildMessage() -> _buildMessage
    511:511:java.lang.String toString() -> toString
    522:532:void _appendPathDesc(java.lang.StringBuilder) -> _appendPathDesc
com.fasterxml.jackson.databind.JsonMappingException$Reference -> com.fasterxml.jackson.databind.JsonMappingException$Reference:
    java.lang.Object _from -> _from
    java.lang.String _fieldName -> _fieldName
    int _index -> _index
    java.lang.String _desc -> _desc
    66:81:void <init>() -> <init>
    66:91:void <init>(java.lang.Object,java.lang.String) -> <init>
    66:96:void <init>(java.lang.Object,int) -> <init>
    119:160:java.lang.String getDescription() -> getDescription
    165:165:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.JsonNode -> com.fasterxml.jackson.databind.JsonNode:
    49:49:void <init>() -> <init>
    82:82:int size() -> size
    108:108:boolean isArray() -> isArray
    113:113:boolean isObject() -> isObject
    156:156:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    183:183:java.util.Iterator fieldNames() -> fieldNames
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    261:261:boolean isPojo() -> isPojo
    268:268:boolean isNumber() -> isNumber
    362:362:boolean isBinary() -> isBinary
    413:413:java.lang.String textValue() -> textValue
    426:426:byte[] binaryValue() -> binaryValue
    447:447:java.lang.Number numberValue() -> numberValue
    471:471:int intValue() -> intValue
    483:483:long longValue() -> longValue
    509:509:double doubleValue() -> doubleValue
    518:518:java.math.BigDecimal decimalValue() -> decimalValue
    527:527:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    java.lang.String asText() -> asText
    695:695:boolean has(java.lang.String) -> has
    768:768:java.util.Iterator iterator() -> iterator
    777:777:java.util.Iterator elements() -> elements
    785:785:java.util.Iterator fields() -> fields
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.JsonSerializable -> com.fasterxml.jackson.databind.JsonSerializable:
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.JsonSerializable$Base -> com.fasterxml.jackson.databind.JsonSerializable$Base:
    54:54:void <init>() -> <init>
    61:61:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> isEmpty
com.fasterxml.jackson.databind.JsonSerializer -> com.fasterxml.jackson.databind.JsonSerializer:
    53:292:void <init>() -> <init>
    77:77:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    156:163:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    182:182:java.lang.Class handledType() -> handledType
    211:211:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    219:219:boolean usesObjectId() -> usesObjectId
    229:229:boolean isUnwrappingSerializer() -> isUnwrappingSerializer
com.fasterxml.jackson.databind.JsonSerializer$None -> com.fasterxml.jackson.databind.JsonSerializer$None:
    292:292:void <init>() -> <init>
com.fasterxml.jackson.databind.KeyDeserializer -> com.fasterxml.jackson.databind.KeyDeserializer:
    10:25:void <init>() -> <init>
    java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
com.fasterxml.jackson.databind.KeyDeserializer$None -> com.fasterxml.jackson.databind.KeyDeserializer$None:
    25:25:void <init>() -> <init>
com.fasterxml.jackson.databind.MapperFeature -> com.fasterxml.jackson.databind.MapperFeature:
    com.fasterxml.jackson.databind.MapperFeature USE_ANNOTATIONS -> USE_ANNOTATIONS
    com.fasterxml.jackson.databind.MapperFeature USE_GETTERS_AS_SETTERS -> USE_GETTERS_AS_SETTERS
    com.fasterxml.jackson.databind.MapperFeature PROPAGATE_TRANSIENT_MARKER -> PROPAGATE_TRANSIENT_MARKER
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_CREATORS -> AUTO_DETECT_CREATORS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_FIELDS -> AUTO_DETECT_FIELDS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_GETTERS -> AUTO_DETECT_GETTERS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_IS_GETTERS -> AUTO_DETECT_IS_GETTERS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_SETTERS -> AUTO_DETECT_SETTERS
    com.fasterxml.jackson.databind.MapperFeature REQUIRE_SETTERS_FOR_GETTERS -> REQUIRE_SETTERS_FOR_GETTERS
    com.fasterxml.jackson.databind.MapperFeature ALLOW_FINAL_FIELDS_AS_MUTATORS -> ALLOW_FINAL_FIELDS_AS_MUTATORS
    com.fasterxml.jackson.databind.MapperFeature INFER_PROPERTY_MUTATORS -> INFER_PROPERTY_MUTATORS
    com.fasterxml.jackson.databind.MapperFeature INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES -> INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES
    com.fasterxml.jackson.databind.MapperFeature CAN_OVERRIDE_ACCESS_MODIFIERS -> CAN_OVERRIDE_ACCESS_MODIFIERS
    com.fasterxml.jackson.databind.MapperFeature OVERRIDE_PUBLIC_ACCESS_MODIFIERS -> OVERRIDE_PUBLIC_ACCESS_MODIFIERS
    com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING -> USE_STATIC_TYPING
    com.fasterxml.jackson.databind.MapperFeature USE_BASE_TYPE_AS_DEFAULT_IMPL -> USE_BASE_TYPE_AS_DEFAULT_IMPL
    com.fasterxml.jackson.databind.MapperFeature DEFAULT_VIEW_INCLUSION -> DEFAULT_VIEW_INCLUSION
    com.fasterxml.jackson.databind.MapperFeature SORT_PROPERTIES_ALPHABETICALLY -> SORT_PROPERTIES_ALPHABETICALLY
    com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_PROPERTIES -> ACCEPT_CASE_INSENSITIVE_PROPERTIES
    com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_ENUMS -> ACCEPT_CASE_INSENSITIVE_ENUMS
    com.fasterxml.jackson.databind.MapperFeature USE_WRAPPER_NAME_AS_PROPERTY_NAME -> USE_WRAPPER_NAME_AS_PROPERTY_NAME
    com.fasterxml.jackson.databind.MapperFeature USE_STD_BEAN_NAMING -> USE_STD_BEAN_NAMING
    com.fasterxml.jackson.databind.MapperFeature ALLOW_EXPLICIT_PROPERTY_RENAMING -> ALLOW_EXPLICIT_PROPERTY_RENAMING
    com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS -> ALLOW_COERCION_OF_SCALARS
    com.fasterxml.jackson.databind.MapperFeature IGNORE_DUPLICATE_MODULE_REGISTRATIONS -> IGNORE_DUPLICATE_MODULE_REGISTRATIONS
    com.fasterxml.jackson.databind.MapperFeature IGNORE_MERGE_FOR_UNMERGEABLE -> IGNORE_MERGE_FOR_UNMERGEABLE
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.databind.MapperFeature[] $VALUES -> $VALUES
    17:17:com.fasterxml.jackson.databind.MapperFeature[] values() -> values
    17:17:com.fasterxml.jackson.databind.MapperFeature valueOf(java.lang.String) -> valueOf
    498:501:void <init>(java.lang.String,int,boolean) -> <init>
    504:504:boolean enabledByDefault() -> enabledByDefault
    507:507:int getMask() -> getMask
    17:491:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.MappingJsonFactory -> com.fasterxml.jackson.databind.MappingJsonFactory:
    24:25:void <init>() -> <init>
    29:33:void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    48:48:com.fasterxml.jackson.databind.ObjectMapper getCodec() -> getCodec
    74:74:java.lang.String getFormatName() -> getFormatName
    83:86:com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasFormat
    17:17:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
com.fasterxml.jackson.databind.Module -> com.fasterxml.jackson.databind.Module:
    24:90:void <init>() -> <init>
    java.lang.String getModuleName() -> getModuleName
    com.fasterxml.jackson.core.Version version() -> version
    61:61:java.lang.Object getTypeId() -> getTypeId
    void setupModule(com.fasterxml.jackson.databind.Module$SetupContext) -> setupModule
com.fasterxml.jackson.databind.Module$SetupContext -> com.fasterxml.jackson.databind.Module$SetupContext:
    void addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> addDeserializers
    void addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> addKeyDeserializers
    void addSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addSerializers
    void addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addKeySerializers
    void addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> addAbstractTypeResolver
    void addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> addValueInstantiators
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
    void setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setNamingStrategy
com.fasterxml.jackson.databind.ObjectMapper -> com.fasterxml.jackson.databind.ObjectMapper:
    com.fasterxml.jackson.databind.JavaType JSON_NODE_TYPE -> JSON_NODE_TYPE
    com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR -> DEFAULT_ANNOTATION_INTROSPECTOR
    com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE -> DEFAULT_BASE
    com.fasterxml.jackson.core.JsonFactory _jsonFactory -> _jsonFactory
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> _injectableValues
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides -> _configOverrides
    com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns -> _mixIns
    com.fasterxml.jackson.databind.SerializationConfig _serializationConfig -> _serializationConfig
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider -> _serializerProvider
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> _serializerFactory
    com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig -> _deserializationConfig
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext -> _deserializationContext
    java.util.Set _registeredModuleTypes -> _registeredModuleTypes
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    480:481:void <init>() -> <init>
    489:490:void <init>(com.fasterxml.jackson.core.JsonFactory) -> <init>
    458:582:void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext) -> <init>
    591:591:com.fasterxml.jackson.databind.introspect.ClassIntrospector defaultClassIntrospector() -> defaultClassIntrospector
    646:646:com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig) -> _newReader
    658:658:com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues) -> _newReader
    668:668:com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig) -> _newWriter
    722:915:com.fasterxml.jackson.databind.ObjectMapper registerModule(com.fasterxml.jackson.databind.Module) -> registerModule
    950:953:com.fasterxml.jackson.databind.ObjectMapper registerModules(java.lang.Iterable) -> registerModules
    978:978:java.util.List findModules() -> findModules
    992:997:java.util.List findModules(java.lang.ClassLoader) -> findModules
    1001:1006:java.util.ServiceLoader secureGetServiceLoader(java.lang.Class,java.lang.ClassLoader) -> secureGetServiceLoader
    1028:1028:com.fasterxml.jackson.databind.ObjectMapper findAndRegisterModules() -> findAndRegisterModules
    1046:1046:com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig() -> getSerializationConfig
    1059:1059:com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    1176:1177:com.fasterxml.jackson.databind.ObjectMapper addMixIn(java.lang.Class,java.lang.Class) -> addMixIn
    1290:1290:com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    1345:1347:com.fasterxml.jackson.databind.ObjectMapper setPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setPropertyNamingStrategy
    1616:1617:void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    1663:1663:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    1707:1707:com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    1846:1846:com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    1853:1853:com.fasterxml.jackson.core.JsonFactory getJsonFactory() -> getJsonFactory
    1941:1941:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    1949:1953:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.MapperFeature,boolean) -> configure
    1995:1997:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.SerializationFeature,boolean) -> configure
    2005:2006:com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature) -> enable
    2049:2049:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    2122:2123:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    2276:2276:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    2376:2390:com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    2551:2551:com.fasterxml.jackson.databind.JsonNode readTree(java.lang.String) -> readTree
    2639:2660:void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    2702:2702:com.fasterxml.jackson.databind.node.ObjectNode createObjectNode() -> createObjectNode
    2714:2714:com.fasterxml.jackson.databind.node.ArrayNode createArrayNode() -> createArrayNode
    2725:2725:com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    2745:2762:java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    2790:2804:com.fasterxml.jackson.databind.JsonNode valueToTree(java.lang.Object) -> valueToTree
    3004:3004:java.lang.Object readValue(java.lang.String,java.lang.Class) -> readValue
    3135:3135:java.lang.Object readValue(java.io.DataInput,java.lang.Class) -> readValue
    3217:3225:java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    3241:3251:byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    3266:3266:com.fasterxml.jackson.databind.ObjectWriter writer() -> writer
    3469:3469:com.fasterxml.jackson.databind.ObjectReader reader() -> reader
    3529:3529:com.fasterxml.jackson.databind.ObjectReader readerFor(java.lang.Class) -> readerFor
    3888:3888:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig) -> _serializerProvider
    3898:3911:void _configAndWriteValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    3920:3931:void _configAndWriteCloseable(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig) -> _configAndWriteCloseable
    3940:3951:void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig) -> _writeCloseableValue
    3971:3992:java.lang.Object _readValue(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> _readValue
    3998:4021:java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> _readMapAndClose
    4032:4064:com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser) -> _readTreeAndClose
    4072:4103:java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> _unwrapAndDeserialize
    4113:4113:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig) -> createDeserializationContext
    4133:4149:com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> _initForReading
    4164:4169:void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _verifyNoTrailingTokens
    4185:4196:com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _findRootDeserializer
    286:297:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectMapper$1 -> com.fasterxml.jackson.databind.ObjectMapper$1:
    com.fasterxml.jackson.databind.ObjectMapper this$0 -> this$0
    752:752:void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    813:815:void addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> addDeserializers
    819:821:void addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> addKeyDeserializers
    825:827:void addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    833:834:void addSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addSerializers
    838:839:void addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addKeySerializers
    843:844:void addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    850:852:void addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> addAbstractTypeResolver
    863:865:void addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> addValueInstantiators
    892:893:void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    902:903:void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
    912:913:void setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setNamingStrategy
com.fasterxml.jackson.databind.ObjectMapper$2 -> com.fasterxml.jackson.databind.ObjectMapper$2:
    java.lang.ClassLoader val$classLoader -> val$classLoader
    java.lang.Class val$clazz -> val$clazz
    1006:1006:void <init>(java.lang.ClassLoader,java.lang.Class) -> <init>
    1009:1009:java.util.ServiceLoader run() -> run
    1006:1006:java.lang.Object run() -> run
com.fasterxml.jackson.databind.ObjectReader -> com.fasterxml.jackson.databind.ObjectReader:
    com.fasterxml.jackson.databind.JavaType JSON_NODE_TYPE -> JSON_NODE_TYPE
    com.fasterxml.jackson.databind.DeserializationConfig _config -> _config
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _context -> _context
    com.fasterxml.jackson.core.JsonFactory _parserFactory -> _parserFactory
    boolean _unwrapRoot -> _unwrapRoot
    com.fasterxml.jackson.core.filter.TokenFilter _filter -> _filter
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    com.fasterxml.jackson.databind.JsonDeserializer _rootDeserializer -> _rootDeserializer
    java.lang.Object _valueToUpdate -> _valueToUpdate
    com.fasterxml.jackson.core.FormatSchema _schema -> _schema
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> _injectableValues
    com.fasterxml.jackson.databind.deser.DataFormatReaders _dataFormatReaders -> _dataFormatReaders
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    168:169:void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    178:192:void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    201:216:void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders) -> <init>
    318:318:com.fasterxml.jackson.databind.ObjectReader _new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders) -> _new
    344:362:com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser) -> _initForReading
    568:571:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.InjectableValues) -> with
    674:683:com.fasterxml.jackson.databind.ObjectReader forType(com.fasterxml.jackson.databind.JavaType) -> forType
    697:697:com.fasterxml.jackson.databind.ObjectReader forType(java.lang.Class) -> forType
    755:773:com.fasterxml.jackson.databind.ObjectReader withValueToUpdate(java.lang.Object) -> withValueToUpdate
    925:925:com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    965:965:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser) -> readValue
    982:982:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    1144:1145:com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    1162:1162:com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    1231:1234:java.lang.Object readValue(byte[]) -> readValue
    1292:1295:java.lang.Object readValue(com.fasterxml.jackson.databind.JsonNode) -> readValue
    1530:1534:java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    1540:1540:void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    1558:1587:java.lang.Object _bind(com.fasterxml.jackson.core.JsonParser,java.lang.Object) -> _bind
    1592:1622:java.lang.Object _bindAndClose(com.fasterxml.jackson.core.JsonParser) -> _bindAndClose
    1636:1662:com.fasterxml.jackson.databind.JsonNode _bindAsTree(com.fasterxml.jackson.core.JsonParser) -> _bindAsTree
    1679:1717:java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> _unwrapAndDeserialize
    1726:1726:com.fasterxml.jackson.core.JsonParser _considerFilter(com.fasterxml.jackson.core.JsonParser,boolean) -> _considerFilter
    1737:1747:void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _verifyNoTrailingTokens
    1758:1763:java.lang.Object _detectBindAndClose(byte[],int,int) -> _detectBindAndClose
    1820:1820:void _reportUnkownFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders,com.fasterxml.jackson.databind.deser.DataFormatReaders$Match) -> _reportUnkownFormat
    1849:1849:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser) -> createDeserializationContext
    1863:1863:void _reportUndetectableSource(java.lang.Object) -> _reportUndetectableSource
    1879:1900:com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> _findRootDeserializer
    1909:1919:com.fasterxml.jackson.databind.JsonDeserializer _findTreeDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> _findTreeDeserializer
    1929:1947:com.fasterxml.jackson.databind.JsonDeserializer _prefetchRootDeserializer(com.fasterxml.jackson.databind.JavaType) -> _prefetchRootDeserializer
    49:49:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectWriter -> com.fasterxml.jackson.databind.ObjectWriter:
    com.fasterxml.jackson.core.PrettyPrinter NULL_PRETTY_PRINTER -> NULL_PRETTY_PRINTER
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider -> _serializerProvider
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> _serializerFactory
    com.fasterxml.jackson.core.JsonFactory _generatorFactory -> _generatorFactory
    com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings _generatorSettings -> _generatorSettings
    com.fasterxml.jackson.databind.ObjectWriter$Prefetch _prefetch -> _prefetch
    120:128:void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig) -> <init>
    991:999:java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    1086:1086:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider() -> _serializerProvider
    1114:1126:void _configAndWriteValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    1135:1146:void _writeCloseable(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _writeCloseable
    1158:1160:void _configureGenerator(com.fasterxml.jackson.core.JsonGenerator) -> _configureGenerator
    42:42:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings -> com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings:
    com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings empty -> empty
    com.fasterxml.jackson.core.PrettyPrinter prettyPrinter -> prettyPrinter
    com.fasterxml.jackson.core.FormatSchema schema -> schema
    com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes -> characterEscapes
    com.fasterxml.jackson.core.SerializableString rootValueSeparator -> rootValueSeparator
    1210:1215:void <init>(com.fasterxml.jackson.core.PrettyPrinter,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.core.io.CharacterEscapes,com.fasterxml.jackson.core.SerializableString) -> <init>
    1272:1292:void initialize(com.fasterxml.jackson.core.JsonGenerator) -> initialize
    1180:1180:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectWriter$Prefetch -> com.fasterxml.jackson.databind.ObjectWriter$Prefetch:
    com.fasterxml.jackson.databind.ObjectWriter$Prefetch empty -> empty
    com.fasterxml.jackson.databind.JavaType rootType -> rootType
    com.fasterxml.jackson.databind.JsonSerializer valueSerializer -> valueSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer -> typeSerializer
    1332:1336:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    1389:1398:void serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) -> serialize
    1307:1307:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyMetadata -> com.fasterxml.jackson.databind.PropertyMetadata:
    com.fasterxml.jackson.databind.PropertyMetadata STD_REQUIRED -> STD_REQUIRED
    com.fasterxml.jackson.databind.PropertyMetadata STD_OPTIONAL -> STD_OPTIONAL
    com.fasterxml.jackson.databind.PropertyMetadata STD_REQUIRED_OR_OPTIONAL -> STD_REQUIRED_OR_OPTIONAL
    java.lang.Boolean _required -> _required
    java.lang.String _description -> _description
    java.lang.Integer _index -> _index
    java.lang.String _defaultValue -> _defaultValue
    com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo _mergeInfo -> _mergeInfo
    com.fasterxml.jackson.annotation.Nulls _valueNulls -> _valueNulls
    com.fasterxml.jackson.annotation.Nulls _contentNulls -> _contentNulls
    122:130:void <init>(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String,com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> <init>
    137:144:com.fasterxml.jackson.databind.PropertyMetadata construct(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String) -> construct
    175:175:com.fasterxml.jackson.databind.PropertyMetadata withDescription(java.lang.String) -> withDescription
    183:183:com.fasterxml.jackson.databind.PropertyMetadata withMergeInfo(com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo) -> withMergeInfo
    192:192:com.fasterxml.jackson.databind.PropertyMetadata withNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> withNulls
    247:247:boolean isRequired() -> isRequired
    264:264:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo getMergeInfo() -> getMergeInfo
    269:269:com.fasterxml.jackson.annotation.Nulls getValueNulls() -> getValueNulls
    274:274:com.fasterxml.jackson.annotation.Nulls getContentNulls() -> getContentNulls
    19:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo -> com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo:
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getter -> getter
    boolean fromDefaults -> fromDefaults
    46:49:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean) -> <init>
    52:52:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForDefaults(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> createForDefaults
    56:56:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForTypeOverride(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> createForTypeOverride
    60:60:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForPropertyOverride(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> createForPropertyOverride
com.fasterxml.jackson.databind.PropertyName -> com.fasterxml.jackson.databind.PropertyName:
    com.fasterxml.jackson.databind.PropertyName USE_DEFAULT -> USE_DEFAULT
    com.fasterxml.jackson.databind.PropertyName NO_NAME -> NO_NAME
    java.lang.String _simpleName -> _simpleName
    java.lang.String _namespace -> _namespace
    com.fasterxml.jackson.core.SerializableString _encodedSimple -> _encodedSimple
    61:62:void <init>(java.lang.String) -> <init>
    65:68:void <init>(java.lang.String,java.lang.String) -> <init>
    92:95:com.fasterxml.jackson.databind.PropertyName construct(java.lang.String) -> construct
    100:106:com.fasterxml.jackson.databind.PropertyName construct(java.lang.String,java.lang.String) -> construct
    111:118:com.fasterxml.jackson.databind.PropertyName internSimpleName() -> internSimpleName
    127:133:com.fasterxml.jackson.databind.PropertyName withSimpleName(java.lang.String) -> withSimpleName
    158:158:java.lang.String getSimpleName() -> getSimpleName
    168:177:com.fasterxml.jackson.core.SerializableString simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig) -> simpleAsEncoded
    185:185:boolean hasSimpleName() -> hasSimpleName
    193:193:boolean hasSimpleName(java.lang.String) -> hasSimpleName
    197:197:boolean hasNamespace() -> hasNamespace
    209:209:boolean isEmpty() -> isEmpty
    221:240:boolean equals(java.lang.Object) -> equals
    245:248:int hashCode() -> hashCode
    253:256:java.lang.String toString() -> toString
    29:36:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy:
    com.fasterxml.jackson.databind.PropertyNamingStrategy SNAKE_CASE -> SNAKE_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CAMEL_CASE -> LOWER_CAMEL_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CASE -> LOWER_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy KEBAB_CASE -> KEBAB_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES -> CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
    com.fasterxml.jackson.databind.PropertyNamingStrategy PASCAL_CASE_TO_CAMEL_CASE -> PASCAL_CASE_TO_CAMEL_CASE
    30:427:void <init>() -> <init>
    101:101:java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> nameForField
    122:122:java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    142:142:java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    160:160:java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    40:416:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategy$KebabCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$KebabCaseStrategy:
    360:360:void <init>() -> <init>
    365:396:java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseStrategy:
    345:345:void <init>() -> <init>
    349:349:java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase -> com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase:
    169:169:void <init>() -> <init>
    174:174:java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> nameForField
    180:180:java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    186:186:java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    193:193:java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy:
    257:257:void <init>() -> <init>
    262:290:java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$UpperCamelCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$UpperCamelCaseStrategy:
    309:309:void <init>() -> <init>
    322:333:java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.RuntimeJsonMappingException -> com.fasterxml.jackson.databind.RuntimeJsonMappingException:
    11:12:void <init>(com.fasterxml.jackson.databind.JsonMappingException) -> <init>
com.fasterxml.jackson.databind.SerializationConfig -> com.fasterxml.jackson.databind.SerializationConfig:
    com.fasterxml.jackson.core.PrettyPrinter DEFAULT_PRETTY_PRINTER -> DEFAULT_PRETTY_PRINTER
    com.fasterxml.jackson.databind.ser.FilterProvider _filterProvider -> _filterProvider
    com.fasterxml.jackson.core.PrettyPrinter _defaultPrettyPrinter -> _defaultPrettyPrinter
    int _serFeatures -> _serFeatures
    int _generatorFeatures -> _generatorFeatures
    int _generatorFeaturesToChange -> _generatorFeaturesToChange
    int _formatWriteFeatures -> _formatWriteFeatures
    int _formatWriteFeaturesToChange -> _formatWriteFeaturesToChange
    114:122:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    167:175:void <init>(com.fasterxml.jackson.databind.SerializationConfig,int,int,int,int,int,int) -> <init>
    179:187:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    278:278:com.fasterxml.jackson.databind.SerializationConfig _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    283:283:com.fasterxml.jackson.databind.SerializationConfig _withMapperFeatures(int) -> _withMapperFeatures
    348:349:com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.SerializationFeature) -> with
    393:394:com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature) -> without
    628:632:com.fasterxml.jackson.core.PrettyPrinter constructDefaultPrettyPrinter() -> constructDefaultPrettyPrinter
    650:676:void initialize(com.fasterxml.jackson.core.JsonGenerator) -> initialize
    710:710:boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    749:749:com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider() -> getFilterProvider
    778:778:com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType) -> introspect
    29:29:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(int) -> _withMapperFeatures
    29:29:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    37:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.SerializationFeature -> com.fasterxml.jackson.databind.SerializationFeature:
    com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE -> WRAP_ROOT_VALUE
    com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT -> INDENT_OUTPUT
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS -> FAIL_ON_EMPTY_BEANS
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_SELF_REFERENCES -> FAIL_ON_SELF_REFERENCES
    com.fasterxml.jackson.databind.SerializationFeature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS -> FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS
    com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE -> CLOSE_CLOSEABLE
    com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE -> FLUSH_AFTER_WRITE_VALUE
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS -> WRITE_DATES_AS_TIMESTAMPS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS -> WRITE_DATE_KEYS_AS_TIMESTAMPS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_WITH_ZONE_ID -> WRITE_DATES_WITH_ZONE_ID
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DURATIONS_AS_TIMESTAMPS -> WRITE_DURATIONS_AS_TIMESTAMPS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS -> WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING -> WRITE_ENUMS_USING_TO_STRING
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_INDEX -> WRITE_ENUMS_USING_INDEX
    com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES -> WRITE_NULL_MAP_VALUES
    com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS -> WRITE_EMPTY_JSON_ARRAYS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED -> WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED
    com.fasterxml.jackson.databind.SerializationFeature WRITE_BIGDECIMAL_AS_PLAIN -> WRITE_BIGDECIMAL_AS_PLAIN
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS -> WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS
    com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS -> ORDER_MAP_ENTRIES_BY_KEYS
    com.fasterxml.jackson.databind.SerializationFeature EAGER_SERIALIZER_FETCH -> EAGER_SERIALIZER_FETCH
    com.fasterxml.jackson.databind.SerializationFeature USE_EQUALITY_FOR_OBJECT_ID -> USE_EQUALITY_FOR_OBJECT_ID
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.databind.SerializationFeature[] $VALUES -> $VALUES
    16:16:com.fasterxml.jackson.databind.SerializationFeature[] values() -> values
    16:16:com.fasterxml.jackson.databind.SerializationFeature valueOf(java.lang.String) -> valueOf
    428:431:void <init>(java.lang.String,int,boolean) -> <init>
    434:434:boolean enabledByDefault() -> enabledByDefault
    438:438:int getMask() -> getMask
    441:441:boolean enabledIn(int) -> enabledIn
    16:422:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.SerializerProvider -> com.fasterxml.jackson.databind.SerializerProvider:
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER -> DEFAULT_NULL_KEY_SERIALIZER
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER -> DEFAULT_UNKNOWN_SERIALIZER
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    java.lang.Class _serializationView -> _serializationView
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> _serializerFactory
    com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache -> _serializerCache
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> _attributes
    com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer -> _unknownTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> _keySerializer
    com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer -> _nullValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer -> _nullKeySerializer
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers -> _knownSerializers
    java.text.DateFormat _dateFormat -> _dateFormat
    boolean _stdNullValueSerializer -> _stdNullValueSerializer
    131:205:void <init>() -> <init>
    131:234:void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    325:325:com.fasterxml.jackson.databind.SerializationConfig getConfig() -> getConfig
    329:329:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    334:334:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    338:338:java.lang.Class getActiveView() -> getActiveView
    348:348:boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    353:353:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    358:358:com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    376:376:java.util.Locale getLocale() -> getLocale
    387:387:java.util.TimeZone getTimeZone() -> getTimeZone
    398:398:java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    404:405:com.fasterxml.jackson.databind.SerializerProvider setAttribute(java.lang.Object,java.lang.Object) -> setAttribute
    423:423:boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    444:444:com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider() -> getFilterProvider
    455:455:com.fasterxml.jackson.core.JsonGenerator getGenerator() -> getGenerator
    com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> findObjectId
    501:524:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findValueSerializer
    543:561:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findValueSerializer
    574:590:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class) -> findValueSerializer
    604:617:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType) -> findValueSerializer
    636:651:com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findPrimaryPropertySerializer
    662:679:com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findPrimaryPropertySerializer
    702:723:com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty) -> findTypedValueSerializer
    747:767:com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.BeanProperty) -> findTypedValueSerializer
    794:796:com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findKeySerializer
    805:805:com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findKeySerializer
    825:825:com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer() -> getDefaultNullValueSerializer
    849:849:com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findNullKeySerializer
    865:865:com.fasterxml.jackson.databind.JsonSerializer findNullValueSerializer(com.fasterxml.jackson.databind.BeanProperty) -> findNullValueSerializer
    882:886:com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> getUnknownTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> serializerInstance
    java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> includeFilterInstance
    boolean includeFilterSuppressNulls(java.lang.Object) -> includeFilterSuppressNulls
    974:979:com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> handlePrimaryContextualization
    1002:1007:com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> handleSecondaryContextualization
    1025:1035:void defaultSerializeValue(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeValue
    1087:1092:void defaultSerializeDateValue(java.util.Date,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateValue
    1101:1106:void defaultSerializeDateKey(long,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateKey
    1115:1120:void defaultSerializeDateKey(java.util.Date,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateKey
    1124:1129:void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeNull
    1145:1145:void reportMappingProblem(java.lang.String,java.lang.Object[]) -> reportMappingProblem
    1157:1163:java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object[]) -> reportBadTypeDefinition
    1175:1186:java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object[]) -> reportBadPropertyDefinition
    1191:1191:java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> reportBadDefinition
    1209:1211:java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String,java.lang.Throwable) -> reportBadDefinition
    1222:1223:void reportMappingProblem(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> reportMappingProblem
    1229:1231:com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> invalidTypeIdException
    1251:1251:com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String,java.lang.Object[]) -> mappingException
    1277:1287:void _reportIncompatibleRootType(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> _reportIncompatibleRootType
    1333:1349:com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class) -> _createAndCacheUntypedSerializer
    1357:1369:com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType) -> _createAndCacheUntypedSerializer
    1387:1390:com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType) -> _createUntypedSerializer
    1402:1405:com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> _handleContextualResolvable
    1412:1415:com.fasterxml.jackson.databind.JsonSerializer _handleResolvable(com.fasterxml.jackson.databind.JsonSerializer) -> _handleResolvable
    1426:1443:java.text.DateFormat _dateFormat() -> _dateFormat
    47:47:com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
    57:69:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.JacksonStdImpl -> com.fasterxml.jackson.databind.annotation.JacksonStdImpl:
com.fasterxml.jackson.databind.annotation.JsonAppend -> com.fasterxml.jackson.databind.annotation.JsonAppend:
    com.fasterxml.jackson.databind.annotation.JsonAppend$Attr[] attrs() -> attrs
    com.fasterxml.jackson.databind.annotation.JsonAppend$Prop[] props() -> props
    boolean prepend() -> prepend
com.fasterxml.jackson.databind.annotation.JsonAppend$Attr -> com.fasterxml.jackson.databind.annotation.JsonAppend$Attr:
    java.lang.String value() -> value
    java.lang.String propName() -> propName
    java.lang.String propNamespace() -> propNamespace
    com.fasterxml.jackson.annotation.JsonInclude$Include include() -> include
    boolean required() -> required
com.fasterxml.jackson.databind.annotation.JsonAppend$Prop -> com.fasterxml.jackson.databind.annotation.JsonAppend$Prop:
    java.lang.Class value() -> value
    java.lang.String name() -> name
    java.lang.String namespace() -> namespace
    com.fasterxml.jackson.annotation.JsonInclude$Include include() -> include
    boolean required() -> required
    java.lang.Class type() -> type
com.fasterxml.jackson.databind.annotation.JsonDeserialize -> com.fasterxml.jackson.databind.annotation.JsonDeserialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class builder() -> builder
    java.lang.Class converter() -> converter
    java.lang.Class contentConverter() -> contentConverter
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
com.fasterxml.jackson.databind.annotation.JsonNaming -> com.fasterxml.jackson.databind.annotation.JsonNaming:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder -> com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder:
    java.lang.String buildMethodName() -> buildMethodName
    java.lang.String withPrefix() -> withPrefix
com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value -> com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value:
    java.lang.String buildMethodName -> buildMethodName
    java.lang.String withPrefix -> withPrefix
    87:88:void <init>(com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder) -> <init>
    91:94:void <init>(java.lang.String,java.lang.String) -> <init>
com.fasterxml.jackson.databind.annotation.JsonSerialize -> com.fasterxml.jackson.databind.annotation.JsonSerialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class nullsUsing() -> nullsUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing typing() -> typing
    java.lang.Class converter() -> converter
    java.lang.Class contentConverter() -> contentConverter
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion include() -> include
com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion -> com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion:
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion ALWAYS -> ALWAYS
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_NULL -> NON_NULL
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_DEFAULT -> NON_DEFAULT
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_EMPTY -> NON_EMPTY
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion DEFAULT_INCLUSION -> DEFAULT_INCLUSION
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] $VALUES -> $VALUES
    188:188:com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] values() -> values
    188:188:com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion valueOf(java.lang.String) -> valueOf
    189:189:void <init>(java.lang.String,int) -> <init>
    188:238:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing -> com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing:
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing DYNAMIC -> DYNAMIC
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing STATIC -> STATIC
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing DEFAULT_TYPING -> DEFAULT_TYPING
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing[] $VALUES -> $VALUES
    247:247:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing[] values() -> values
    247:247:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing valueOf(java.lang.String) -> valueOf
    247:247:void <init>(java.lang.String,int) -> <init>
    247:267:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver -> com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonTypeResolver -> com.fasterxml.jackson.databind.annotation.JsonTypeResolver:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonValueInstantiator -> com.fasterxml.jackson.databind.annotation.JsonValueInstantiator:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.NoClass -> com.fasterxml.jackson.databind.annotation.NoClass:
    17:17:void <init>() -> <init>
com.fasterxml.jackson.databind.cfg.BaseSettings -> com.fasterxml.jackson.databind.cfg.BaseSettings:
    java.util.TimeZone DEFAULT_TIMEZONE -> DEFAULT_TIMEZONE
    com.fasterxml.jackson.databind.introspect.ClassIntrospector _classIntrospector -> _classIntrospector
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.PropertyNamingStrategy _propertyNamingStrategy -> _propertyNamingStrategy
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _typeResolverBuilder -> _typeResolverBuilder
    java.text.DateFormat _dateFormat -> _dateFormat
    com.fasterxml.jackson.databind.cfg.HandlerInstantiator _handlerInstantiator -> _handlerInstantiator
    java.util.Locale _locale -> _locale
    java.util.TimeZone _timeZone -> _timeZone
    com.fasterxml.jackson.core.Base64Variant _defaultBase64 -> _defaultBase64
    137:148:void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.PropertyNamingStrategy,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder,java.text.DateFormat,com.fasterxml.jackson.databind.cfg.HandlerInstantiator,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.core.Base64Variant) -> <init>
    177:180:com.fasterxml.jackson.databind.cfg.BaseSettings withClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> withClassIntrospector
    213:216:com.fasterxml.jackson.databind.cfg.BaseSettings withPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> withPropertyNamingStrategy
    312:312:com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    316:316:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    320:320:com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    324:324:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    328:328:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getTypeResolverBuilder() -> getTypeResolverBuilder
    332:332:java.text.DateFormat getDateFormat() -> getDateFormat
    336:336:com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    340:340:java.util.Locale getLocale() -> getLocale
    344:345:java.util.TimeZone getTimeZone() -> getTimeZone
    360:360:com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
    29:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ConfigFeature -> com.fasterxml.jackson.databind.cfg.ConfigFeature:
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
com.fasterxml.jackson.databind.cfg.ConfigOverride -> com.fasterxml.jackson.databind.cfg.ConfigOverride:
    com.fasterxml.jackson.annotation.JsonFormat$Value _format -> _format
    com.fasterxml.jackson.annotation.JsonInclude$Value _include -> _include
    com.fasterxml.jackson.annotation.JsonInclude$Value _includeAsProperty -> _includeAsProperty
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value _ignorals -> _ignorals
    com.fasterxml.jackson.annotation.JsonSetter$Value _setterInfo -> _setterInfo
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value _visibility -> _visibility
    java.lang.Boolean _isIgnoredType -> _isIgnoredType
    java.lang.Boolean _mergeable -> _mergeable
    76:76:void <init>() -> <init>
    94:94:com.fasterxml.jackson.databind.cfg.ConfigOverride empty() -> empty
    97:97:com.fasterxml.jackson.annotation.JsonFormat$Value getFormat() -> getFormat
    98:98:com.fasterxml.jackson.annotation.JsonInclude$Value getInclude() -> getInclude
    103:103:com.fasterxml.jackson.annotation.JsonInclude$Value getIncludeAsProperty() -> getIncludeAsProperty
    105:105:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getIgnorals() -> getIgnorals
    108:108:java.lang.Boolean getIsIgnoredType() -> getIsIgnoredType
    114:114:com.fasterxml.jackson.annotation.JsonSetter$Value getSetterInfo() -> getSetterInfo
    119:119:com.fasterxml.jackson.annotation.JsonAutoDetect$Value getVisibility() -> getVisibility
    124:124:java.lang.Boolean getMergeable() -> getMergeable
com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty -> com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty:
    com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty INSTANCE -> INSTANCE
    135:135:void <init>() -> <init>
    133:133:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ConfigOverrides -> com.fasterxml.jackson.databind.cfg.ConfigOverrides:
    java.util.Map _overrides -> _overrides
    com.fasterxml.jackson.annotation.JsonInclude$Value _defaultInclusion -> _defaultInclusion
    com.fasterxml.jackson.annotation.JsonSetter$Value _defaultSetterInfo -> _defaultSetterInfo
    com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    java.lang.Boolean _defaultMergeable -> _defaultMergeable
    53:60:void <init>() -> <init>
    66:72:void <init>(java.util.Map,com.fasterxml.jackson.annotation.JsonInclude$Value,com.fasterxml.jackson.annotation.JsonSetter$Value,com.fasterxml.jackson.databind.introspect.VisibilityChecker,java.lang.Boolean) -> <init>
    96:99:com.fasterxml.jackson.databind.cfg.ConfigOverride findOverride(java.lang.Class) -> findOverride
    121:121:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion() -> getDefaultInclusion
    125:125:com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> getDefaultSetterInfo
    129:129:java.lang.Boolean getDefaultMergeable() -> getDefaultMergeable
    136:136:com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibility() -> getDefaultVisibility
com.fasterxml.jackson.databind.cfg.ContextAttributes -> com.fasterxml.jackson.databind.cfg.ContextAttributes:
    21:62:void <init>() -> <init>
    24:24:com.fasterxml.jackson.databind.cfg.ContextAttributes getEmpty() -> getEmpty
    java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    com.fasterxml.jackson.databind.cfg.ContextAttributes withPerCallAttribute(java.lang.Object,java.lang.Object) -> withPerCallAttribute
com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl -> com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl:
    com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl EMPTY -> EMPTY
    java.lang.Object NULL_SURROGATE -> NULL_SURROGATE
    java.util.Map _shared -> _shared
    java.util.Map _nonShared -> _nonShared
    92:95:void <init>(java.util.Map) -> <init>
    97:100:void <init>(java.util.Map,java.util.Map) -> <init>
    103:103:com.fasterxml.jackson.databind.cfg.ContextAttributes getEmpty() -> getEmpty
    160:169:java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    176:193:com.fasterxml.jackson.databind.cfg.ContextAttributes withPerCallAttribute(java.lang.Object,java.lang.Object) -> withPerCallAttribute
    208:213:com.fasterxml.jackson.databind.cfg.ContextAttributes nonSharedInstance(java.lang.Object,java.lang.Object) -> nonSharedInstance
    67:69:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig -> com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig:
    com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS -> NO_DESERIALIZERS
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    com.fasterxml.jackson.databind.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS -> NO_ABSTRACT_TYPE_RESOLVERS
    com.fasterxml.jackson.databind.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS -> NO_VALUE_INSTANTIATORS
    com.fasterxml.jackson.databind.deser.KeyDeserializers[] DEFAULT_KEY_DESERIALIZERS -> DEFAULT_KEY_DESERIALIZERS
    com.fasterxml.jackson.databind.deser.Deserializers[] _additionalDeserializers -> _additionalDeserializers
    com.fasterxml.jackson.databind.deser.KeyDeserializers[] _additionalKeyDeserializers -> _additionalKeyDeserializers
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] _modifiers -> _modifiers
    com.fasterxml.jackson.databind.AbstractTypeResolver[] _abstractTypeResolvers -> _abstractTypeResolvers
    com.fasterxml.jackson.databind.deser.ValueInstantiators[] _valueInstantiators -> _valueInstantiators
    71:72:void <init>() -> <init>
    83:91:void <init>(com.fasterxml.jackson.databind.deser.Deserializers[],com.fasterxml.jackson.databind.deser.KeyDeserializers[],com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[],com.fasterxml.jackson.databind.AbstractTypeResolver[],com.fasterxml.jackson.databind.deser.ValueInstantiators[]) -> <init>
    101:105:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    117:121:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    133:137:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    150:154:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    170:174:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    180:180:boolean hasKeyDeserializers() -> hasKeyDeserializers
    182:182:boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    184:184:boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    186:186:boolean hasValueInstantiators() -> hasValueInstantiators
    189:189:java.lang.Iterable deserializers() -> deserializers
    193:193:java.lang.Iterable keyDeserializers() -> keyDeserializers
    197:197:java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    201:201:java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    205:205:java.lang.Iterable valueInstantiators() -> valueInstantiators
    17:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.HandlerInstantiator -> com.fasterxml.jackson.databind.cfg.HandlerInstantiator:
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> deserializerInstance
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> serializerInstance
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    115:115:com.fasterxml.jackson.databind.deser.ValueInstantiator valueInstantiatorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
    126:126:com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> objectIdGeneratorInstance
    130:130:com.fasterxml.jackson.annotation.ObjectIdResolver resolverIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> resolverIdGeneratorInstance
    141:141:com.fasterxml.jackson.databind.PropertyNamingStrategy namingStrategyInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> namingStrategyInstance
    151:151:com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> converterInstance
    162:162:com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter virtualPropertyWriterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> virtualPropertyWriterInstance
    180:180:java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> includeFilterInstance
com.fasterxml.jackson.databind.cfg.MapperConfig -> com.fasterxml.jackson.databind.cfg.MapperConfig:
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> EMPTY_INCLUDE
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY_FORMAT -> EMPTY_FORMAT
    int _mapperFeatures -> _mapperFeatures
    com.fasterxml.jackson.databind.cfg.BaseSettings _base -> _base
    69:72:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,int) -> <init>
    75:78:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,int) -> <init>
    81:84:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    98:104:int collectFeatureDefaults(java.lang.Class) -> collectFeatureDefaults
    141:141:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    161:161:boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    176:176:boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    184:184:boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    216:216:com.fasterxml.jackson.core.SerializableString compileString(java.lang.String) -> compileString
    226:226:com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    236:239:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    243:243:com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    247:247:com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    263:263:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getDefaultTyper(com.fasterxml.jackson.databind.JavaType) -> getDefaultTyper
    269:269:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    281:281:com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class) -> constructType
    297:297:com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    311:311:com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class) -> introspectClassAnnotations
    319:319:com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> introspectClassAnnotations
    com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class) -> getConfigOverride
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class) -> getDefaultPropertyInclusion
    403:407:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class,com.fasterxml.jackson.annotation.JsonInclude$Value) -> getDefaultPropertyInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class) -> getDefaultInclusion
    440:444:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class,com.fasterxml.jackson.annotation.JsonInclude$Value) -> getDefaultInclusion
    com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultVisibilityChecker
    com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> getDefaultSetterInfo
    java.lang.Boolean getDefaultMergeable() -> getDefaultMergeable
    553:553:java.text.DateFormat getDateFormat() -> getDateFormat
    560:560:java.util.Locale getLocale() -> getLocale
    567:567:java.util.TimeZone getTimeZone() -> getTimeZone
    582:582:com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
    617:624:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    634:641:com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    45:50:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.MapperConfigBase -> com.fasterxml.jackson.databind.cfg.MapperConfigBase:
    com.fasterxml.jackson.databind.cfg.ConfigOverride EMPTY_OVERRIDE -> EMPTY_OVERRIDE
    int DEFAULT_MAPPER_FEATURES -> DEFAULT_MAPPER_FEATURES
    int AUTO_DETECT_MASK -> AUTO_DETECT_MASK
    com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns -> _mixIns
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    com.fasterxml.jackson.databind.PropertyName _rootName -> _rootName
    java.lang.Class _view -> _view
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> _attributes
    com.fasterxml.jackson.databind.util.RootNameLookup _rootNames -> _rootNames
    com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides -> _configOverrides
    125:134:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    176:184:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    188:196:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,int) -> <init>
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(int) -> _withMapperFeatures
    292:299:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
    310:317:com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    457:457:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> with
    567:567:com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    582:582:com.fasterxml.jackson.databind.PropertyName getFullRootName() -> getFullRootName
    587:587:java.lang.Class getActiveView() -> getActiveView
    592:592:com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes() -> getAttributes
    603:604:com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class) -> getConfigOverride
    614:614:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion() -> getDefaultPropertyInclusion
    619:624:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class) -> getDefaultPropertyInclusion
    630:635:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class) -> getDefaultInclusion
    640:647:com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    652:661:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class) -> getDefaultPropertyIgnorals
    668:672:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultPropertyIgnorals
    678:698:com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    704:713:com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultVisibilityChecker
    718:718:com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> getDefaultSetterInfo
    723:723:java.lang.Boolean getDefaultMergeable() -> getDefaultMergeable
    729:736:java.lang.Boolean getDefaultMergeable(java.lang.Class) -> getDefaultMergeable
    747:750:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType) -> findRootName
    755:758:com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class) -> findRootName
    773:773:java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    30:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig -> com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig:
    com.fasterxml.jackson.databind.ser.Serializers[] NO_SERIALIZERS -> NO_SERIALIZERS
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers -> _additionalSerializers
    com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers -> _additionalKeySerializers
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers -> _modifiers
    42:43:void <init>() -> <init>
    48:54:void <init>(com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.BeanSerializerModifier[]) -> <init>
    58:62:com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    67:71:com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    76:80:com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    84:84:boolean hasKeySerializers() -> hasKeySerializers
    85:85:boolean hasSerializerModifiers() -> hasSerializerModifiers
    86:86:java.lang.Iterable serializers() -> serializers
    87:87:java.lang.Iterable keySerializers() -> keySerializers
    88:88:java.lang.Iterable serializerModifiers() -> serializerModifiers
    19:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.AbstractDeserializer -> com.fasterxml.jackson.databind.deser.AbstractDeserializer:
    com.fasterxml.jackson.databind.JavaType _baseType -> _baseType
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    java.util.Map _backRefProperties -> _backRefProperties
    java.util.Map _properties -> _properties
    boolean _acceptString -> _acceptString
    boolean _acceptBoolean -> _acceptBoolean
    boolean _acceptInt -> _acceptInt
    boolean _acceptDouble -> _acceptDouble
    64:74:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,java.util.Map,java.util.Map) -> <init>
    83:92:void <init>(com.fasterxml.jackson.databind.BeanDescription) -> <init>
    99:109:void <init>(com.fasterxml.jackson.databind.deser.AbstractDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.util.Map) -> <init>
    118:118:com.fasterxml.jackson.databind.deser.AbstractDeserializer constructForNonPOJO(com.fasterxml.jackson.databind.BeanDescription) -> constructForNonPOJO
    125:173:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    184:184:java.lang.Class handledType() -> handledType
    188:188:boolean isCachable() -> isCachable
    197:197:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    207:207:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    216:216:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    232:254:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    264:265:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    283:310:java.lang.Object _deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeIfNatural
    319:327:java.lang.Object _deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromObjectId
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory -> com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:
    java.lang.Class CLASS_OBJECT -> CLASS_OBJECT
    java.lang.Class CLASS_STRING -> CLASS_STRING
    java.lang.Class CLASS_CHAR_SEQUENCE -> CLASS_CHAR_SEQUENCE
    java.lang.Class CLASS_ITERABLE -> CLASS_ITERABLE
    java.lang.Class CLASS_MAP_ENTRY -> CLASS_MAP_ENTRY
    com.fasterxml.jackson.databind.PropertyName UNWRAPPED_CREATOR_PARAM_NAME -> UNWRAPPED_CREATOR_PARAM_NAME
    java.util.HashMap _mapFallbacks -> _mapFallbacks
    java.util.HashMap _collectionFallbacks -> _collectionFallbacks
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig _factoryConfig -> _factoryConfig
    114:116:void <init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> <init>
    com.fasterxml.jackson.databind.deser.DeserializerFactory withConfig(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> withConfig
    143:143:com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    152:152:com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    161:161:com.fasterxml.jackson.databind.deser.DeserializerFactory withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    170:170:com.fasterxml.jackson.databind.deser.DeserializerFactory withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    179:179:com.fasterxml.jackson.databind.deser.DeserializerFactory withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    193:205:com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> mapAbstractType
    215:224:com.fasterxml.jackson.databind.JavaType _mapAbstractType2(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> _mapAbstractType2
    243:282:com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> findValueInstantiator
    289:306:com.fasterxml.jackson.databind.deser.ValueInstantiator _findStdValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findStdValueInstantiator
    317:342:com.fasterxml.jackson.databind.deser.ValueInstantiator _constructDefaultValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> _constructDefaultValueInstantiator
    348:373:java.util.Map _findCreatorsFromProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> _findCreatorsFromProperties
    380:409:com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiatorInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> _valueInstantiatorInstance
    428:602:void _addDeserializerConstructors(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.Map) -> _addDeserializerConstructors
    617:654:void _addExplicitDelegatingCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> _addExplicitDelegatingCreator
    666:694:void _addExplicitPropertyCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> _addExplicitPropertyCreator
    707:752:void _addExplicitAnyCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> _addExplicitAnyCreator
    758:773:boolean _checkIfCreatorPropertyBased(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> _checkIfCreatorPropertyBased
    781:828:void _checkImplicitlyNamedConstructors(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.List) -> _checkImplicitlyNamedConstructors
    836:976:void _addDeserializerFactoryMethods(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.Map) -> _addDeserializerFactoryMethods
    982:1018:boolean _handleSingleArgumentCreator(com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,boolean) -> _handleSingleArgumentCreator
    1027:1030:void _reportUnwrappedCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> _reportUnwrappedCreatorProperty
    1043:1083:com.fasterxml.jackson.databind.deser.SettableBeanProperty constructCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.PropertyName,int,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.annotation.JacksonInject$Value) -> constructCreatorProperty
    1088:1101:com.fasterxml.jackson.databind.PropertyName _findParamName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.AnnotationIntrospector) -> _findParamName
    1115:1147:com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription) -> createArrayDeserializer
    1161:1237:com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionDeserializer
    1242:1247:com.fasterxml.jackson.databind.type.CollectionType _mapAbstractCollectionType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig) -> _mapAbstractCollectionType
    1256:1277:com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionLikeDeserializer
    1291:1388:com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription) -> createMapDeserializer
    1397:1428:com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createMapLikeDeserializer
    1445:1484:com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createEnumDeserializer
    1493:1500:com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createTreeDeserializer
    1508:1545:com.fasterxml.jackson.databind.JsonDeserializer createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription) -> createReferenceDeserializer
    1559:1591:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeDeserializer
    1604:1604:com.fasterxml.jackson.databind.JsonDeserializer findOptionalStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findOptionalStdDeserializer
    1618:1645:com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> createKeyDeserializer
    1652:1696:com.fasterxml.jackson.databind.KeyDeserializer _createEnumKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _createEnumKeyDeserializer
    1722:1731:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyTypeDeserializer
    1749:1759:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyContentTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyContentTypeDeserializer
    1773:1831:com.fasterxml.jackson.databind.JsonDeserializer findDefaultDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findDefaultDeserializer
    1835:1836:com.fasterxml.jackson.databind.JavaType _findRemappedType(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> _findRemappedType
    1849:1855:com.fasterxml.jackson.databind.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomTreeNodeDeserializer
    1863:1870:com.fasterxml.jackson.databind.JsonDeserializer _findCustomReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomReferenceDeserializer
    1878:1884:com.fasterxml.jackson.databind.JsonDeserializer _findCustomBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomBeanDeserializer
    1892:1899:com.fasterxml.jackson.databind.JsonDeserializer _findCustomArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomArrayDeserializer
    1907:1914:com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomCollectionDeserializer
    1922:1929:com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    1936:1942:com.fasterxml.jackson.databind.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomEnumDeserializer
    1951:1958:com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomMapDeserializer
    1967:1974:com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomMapLikeDeserializer
    1995:2002:com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializerFromAnnotation
    2014:2021:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializerFromAnnotation
    2031:2038:com.fasterxml.jackson.databind.JsonDeserializer findContentDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializerFromAnnotation
    2054:2098:com.fasterxml.jackson.databind.JavaType resolveMemberAndTypeAnnotations(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> resolveMemberAndTypeAnnotations
    2104:2114:com.fasterxml.jackson.databind.util.EnumResolver constructEnumResolver(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> constructEnumResolver
    2122:2127:boolean _hasCreatorAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> _hasCreatorAnnotation
    44:94:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$1 -> com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonCreator$Mode -> $SwitchMap$com$fasterxml$jackson$annotation$JsonCreator$Mode
    458:458:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializer -> com.fasterxml.jackson.databind.deser.BeanDeserializer:
    java.lang.Exception _nullFromCreator -> _nullFromCreator
    com.fasterxml.jackson.databind.util.NameTransformer _currentlyTransforming -> _currentlyTransforming
    64:66:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean) -> <init>
    73:74:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase) -> <init>
    81:82:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    85:86:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    89:90:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set) -> <init>
    93:94:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    101:112:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    117:117:com.fasterxml.jackson.databind.deser.BeanDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    122:122:com.fasterxml.jackson.databind.deser.BeanDeserializer withIgnorableProperties(java.util.Set) -> withIgnorableProperties
    127:127:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    132:133:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    149:161:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    168:198:java.lang.Object _deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> _deserializeOther
    215:260:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    277:297:java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> vanillaDeserialize
    313:378:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    394:506:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    517:520:com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring handleUnresolvedReference(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> handleUnresolvedReference
    528:532:java.lang.Object _deserializeWithErrorWrapping(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _deserializeWithErrorWrapping
    550:562:java.lang.Object deserializeFromNull(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromNull
    575:596:java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class) -> deserializeWithView
    613:674:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithUnwrapped
    682:732:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithUnwrapped
    743:832:java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    845:858:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithExternalTypeId
    865:910:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    917:996:java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
    1007:1010:java.lang.Exception _creatorReturnedNullException() -> _creatorReturnedNullException
    17:17:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> withIgnorableProperties
    17:17:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
com.fasterxml.jackson.databind.deser.BeanDeserializer$1 -> com.fasterxml.jackson.databind.deser.BeanDeserializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> $SwitchMap$com$fasterxml$jackson$core$JsonToken
    169:169:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring -> com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring:
    com.fasterxml.jackson.databind.DeserializationContext _context -> _context
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _prop -> _prop
    java.lang.Object _bean -> _bean
    1025:1028:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    1031:1032:void setBean(java.lang.Object) -> setBean
    1037:1043:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.BeanDeserializerBase -> com.fasterxml.jackson.databind.deser.BeanDeserializerBase:
    com.fasterxml.jackson.databind.PropertyName TEMP_PROPERTY_NAME -> TEMP_PROPERTY_NAME
    com.fasterxml.jackson.databind.JavaType _beanType -> _beanType
    com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape -> _serializationShape
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _arrayDelegateDeserializer -> _arrayDelegateDeserializer
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    boolean _nonStandardCreation -> _nonStandardCreation
    boolean _vanillaProcessing -> _vanillaProcessing
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties -> _beanProperties
    com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables -> _injectables
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter -> _anySetter
    java.util.Set _ignorableProps -> _ignorableProps
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    boolean _needViewProcesing -> _needViewProcesing
    java.util.Map _backRefs -> _backRefs
    java.util.HashMap _subDeserializers -> _subDeserializers
    com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler -> _unwrappedPropertyHandler
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler _externalTypeIdHandler -> _externalTypeIdHandler
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    201:233:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,boolean) -> <init>
    236:237:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase) -> <init>
    241:263:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean) -> <init>
    267:301:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    305:338:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    342:366:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set) -> <init>
    373:394:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> withIgnorableProperties
    410:410:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    437:588:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    596:618:void _replaceProperty(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _replaceProperty
    625:644:com.fasterxml.jackson.databind.JsonDeserializer _findDelegateDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> _findDelegateDeserializer
    661:673:com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> findConvertingDeserializer
    687:770:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    781:802:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveManagedReferenceProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolveManagedReferenceProperty
    812:818:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolvedObjectIdProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolvedObjectIdProperty
    829:843:com.fasterxml.jackson.databind.util.NameTransformer _findPropertyUnwrapper(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _findPropertyUnwrapper
    856:881:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveInnerClassValuedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolveInnerClassValuedProperty
    889:921:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveMergeAndNullSettings(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata) -> _resolveMergeAndNullSettings
    939:939:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    946:948:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    959:959:boolean isCachable() -> isCachable
    966:966:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    971:971:java.lang.Class handledType() -> handledType
    981:981:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    1001:1005:java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    1015:1015:com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    1050:1050:com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(com.fasterxml.jackson.databind.PropertyName) -> findProperty
    1062:1067:com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(java.lang.String) -> findProperty
    1097:1100:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    1105:1105:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    1151:1178:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    1193:1211:java.lang.Object _handleTypedObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object) -> _handleTypedObjectId
    1227:1244:java.lang.Object _convertObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.JsonDeserializer) -> _convertObjectId
    1257:1257:java.lang.Object deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithObjectId
    1266:1275:java.lang.Object deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObjectId
    1281:1297:java.lang.Object deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObjectUsingNonDefault
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    1308:1348:java.lang.Object deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromNumber
    1357:1373:java.lang.Object deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromString
    1382:1404:java.lang.Object deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromDouble
    1414:1426:java.lang.Object deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromBoolean
    1432:1461:java.lang.Object deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromArray
    1469:1496:java.lang.Object deserializeFromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromEmbedded
    1503:1507:com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer() -> _delegateDeserializer
    1519:1522:void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> injectValues
    1535:1545:java.lang.Object handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> handleUnknownProperties
    1556:1569:void handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownVanilla
    1580:1590:void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    1602:1606:void handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleIgnoredProperty
    1625:1648:java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> handlePolymorphic
    1662:1686:com.fasterxml.jackson.databind.JsonDeserializer _findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> _findSubclassDeserializer
    1711:1711:void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> wrapAndThrow
    1721:1735:java.lang.Throwable throwOrReturnThrowable(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> throwOrReturnThrowable
    1741:1754:java.lang.Object wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> wrapInstantiationProblem
    34:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder -> com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder:
    com.fasterxml.jackson.databind.DeserializationConfig _config -> _config
    com.fasterxml.jackson.databind.DeserializationContext _context -> _context
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    java.util.Map _properties -> _properties
    java.util.List _injectables -> _injectables
    java.util.HashMap _backRefProperties -> _backRefProperties
    java.util.HashSet _ignorableProps -> _ignorableProps
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter -> _anySetter
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> _buildMethod
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value _builderConfig -> _builderConfig
    54:120:void <init>(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.DeserializationContext) -> <init>
    167:168:void addOrReplaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean) -> addOrReplaceProperty
    177:181:void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addProperty
    190:207:void addBackReferenceProperty(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addBackReferenceProperty
    213:222:void addInjectable(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object) -> addInjectable
    230:234:void addIgnorable(java.lang.String) -> addIgnorable
    248:249:void addCreatorProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addCreatorProperty
    253:257:void setAnySetter(com.fasterxml.jackson.databind.deser.SettableAnyProperty) -> setAnySetter
    260:261:void setIgnoreUnknownProperties(boolean) -> setIgnoreUnknownProperties
    264:265:void setValueInstantiator(com.fasterxml.jackson.databind.deser.ValueInstantiator) -> setValueInstantiator
    268:269:void setObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> setObjectIdReader
    272:274:void setPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value) -> setPOJOBuilder
    295:295:com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(com.fasterxml.jackson.databind.PropertyName) -> findProperty
    307:307:com.fasterxml.jackson.databind.deser.SettableAnyProperty getAnySetter() -> getAnySetter
    311:311:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    315:315:java.util.List getInjectables() -> getInjectables
    319:319:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    323:323:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getBuildMethod() -> getBuildMethod
    334:334:boolean hasIgnorable(java.lang.String) -> hasIgnorable
    349:379:com.fasterxml.jackson.databind.JsonDeserializer build() -> build
    392:392:com.fasterxml.jackson.databind.deser.AbstractDeserializer buildAbstract() -> buildAbstract
    403:452:com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBased(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> buildBuilderBased
    477:501:void _fixAccess(java.util.Collection) -> _fixAccess
    505:522:java.util.Map _collectAliases(java.util.Collection) -> _collectAliases
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory -> com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:
    java.lang.Class[] INIT_CAUSE_PARAMS -> INIT_CAUSE_PARAMS
    com.fasterxml.jackson.databind.deser.BeanDeserializerFactory instance -> instance
    54:55:void <init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> <init>
    65:75:com.fasterxml.jackson.databind.deser.DeserializerFactory withConfig(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> withConfig
    94:137:com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createBeanDeserializer
    146:148:com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class) -> createBuilderBasedDeserializer
    161:170:com.fasterxml.jackson.databind.JsonDeserializer findStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findStdDeserializer
    178:184:com.fasterxml.jackson.databind.JavaType materializeAbstractType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> materializeAbstractType
    214:254:com.fasterxml.jackson.databind.JsonDeserializer buildBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildBeanDeserializer
    272:320:com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildBuilderBasedDeserializer
    327:358:void addObjectIdReader(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addObjectIdReader
    365:418:com.fasterxml.jackson.databind.JsonDeserializer buildThrowableDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildThrowableDeserializer
    435:435:com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> constructBeanDeserializerBuilder
    449:593:void addBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addBeanProps
    599:599:boolean _isSetterlessType(java.lang.Class) -> _isSetterlessType
    615:636:java.util.List filterBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,java.util.List,java.util.Set) -> filterBeanProps
    650:674:void addBackReferenceProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addBackReferenceProperties
    692:701:void addInjectables(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addInjectables
    721:767:com.fasterxml.jackson.databind.deser.SettableAnyProperty constructAnySetter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> constructAnySetter
    784:820:com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSettableProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> constructSettableProperty
    831:844:com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSetterlessProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> constructSetterlessProperty
    863:877:boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    887:907:boolean isIgnorableType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class,java.util.Map) -> isIgnorableType
    917:918:void _validateSubType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> _validateSubType
    38:50:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializerModifier -> com.fasterxml.jackson.databind.deser.BeanDeserializerModifier:
    50:50:void <init>() -> <init>
    64:64:java.util.List updateProperties(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> updateProperties
    77:77:com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder updateBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> updateBuilder
    90:90:com.fasterxml.jackson.databind.JsonDeserializer modifyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyDeserializer
    104:104:com.fasterxml.jackson.databind.JsonDeserializer modifyEnumDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyEnumDeserializer
    112:112:com.fasterxml.jackson.databind.JsonDeserializer modifyReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyReferenceDeserializer
    134:134:com.fasterxml.jackson.databind.JsonDeserializer modifyArrayDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyArrayDeserializer
    142:142:com.fasterxml.jackson.databind.JsonDeserializer modifyCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyCollectionDeserializer
    150:150:com.fasterxml.jackson.databind.JsonDeserializer modifyCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyCollectionLikeDeserializer
    158:158:com.fasterxml.jackson.databind.JsonDeserializer modifyMapDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyMapDeserializer
    166:166:com.fasterxml.jackson.databind.JsonDeserializer modifyMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyMapLikeDeserializer
    180:180:com.fasterxml.jackson.databind.KeyDeserializer modifyKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer) -> modifyKeyDeserializer
com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer -> com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer:
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> _buildMethod
    com.fasterxml.jackson.databind.JavaType _targetType -> _targetType
    53:62:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,boolean) -> <init>
    96:99:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    102:105:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    108:111:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,java.util.Set) -> <init>
    114:117:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    126:126:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    131:131:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    136:136:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> withIgnorableProperties
    141:141:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    146:147:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    159:159:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    172:178:java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> finishBuild
    190:219:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    233:242:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    261:277:java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> vanillaDeserialize
    288:322:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    341:425:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    432:473:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _deserialize
    486:506:java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class) -> deserializeWithView
    523:573:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithUnwrapped
    581:642:java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    649:679:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> deserializeWithUnwrapped
    692:695:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithExternalTypeId
    702:748:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    756:757:java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
com.fasterxml.jackson.databind.deser.ContextualDeserializer -> com.fasterxml.jackson.databind.deser.ContextualDeserializer:
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer -> com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer:
    com.fasterxml.jackson.databind.KeyDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.CreatorProperty -> com.fasterxml.jackson.databind.deser.CreatorProperty:
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter _annotated -> _annotated
    java.lang.Object _injectableValueId -> _injectableValueId
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _fallbackSetter -> _fallbackSetter
    int _creatorIndex -> _creatorIndex
    boolean _ignorable -> _ignorable
    95:100:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,java.lang.Object,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    106:112:void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    116:122:void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    126:126:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    131:134:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    139:139:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    144:147:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    156:157:void setFallbackSetter(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> setFallbackSetter
    161:162:void markAsIgnorable() -> markAsIgnorable
    166:166:boolean isIgnorable() -> isIgnorable
    213:213:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    216:216:int getCreatorIndex() -> getCreatorIndex
    229:231:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    237:238:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    244:246:void set(java.lang.Object,java.lang.Object) -> set
    251:252:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    257:257:java.lang.Object getInjectableValueId() -> getInjectableValueId
    261:261:java.lang.String toString() -> toString
    265:268:void _verifySetter() -> _verifySetter
    273:281:void _reportMissingSetter(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _reportMissingSetter
com.fasterxml.jackson.databind.deser.DataFormatReaders -> com.fasterxml.jackson.databind.deser.DataFormatReaders:
    com.fasterxml.jackson.databind.ObjectReader[] _readers -> _readers
    com.fasterxml.jackson.core.format.MatchStrength _optimalMatch -> _optimalMatch
    com.fasterxml.jackson.core.format.MatchStrength _minimalMatch -> _minimalMatch
    int _maxInputLookahead -> _maxInputLookahead
    76:81:void <init>(com.fasterxml.jackson.databind.ObjectReader[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int) -> <init>
    133:138:com.fasterxml.jackson.databind.deser.DataFormatReaders withType(com.fasterxml.jackson.databind.JavaType) -> withType
    183:183:com.fasterxml.jackson.databind.deser.DataFormatReaders$Match findFormat(byte[],int,int) -> findFormat
    195:206:java.lang.String toString() -> toString
    217:239:com.fasterxml.jackson.databind.deser.DataFormatReaders$Match _findFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader) -> _findFormat
com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader -> com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader:
    com.fasterxml.jackson.databind.deser.DataFormatReaders this$0 -> this$0
    259:261:void <init>(com.fasterxml.jackson.databind.deser.DataFormatReaders,byte[],int,int) -> <init>
    265:265:com.fasterxml.jackson.databind.deser.DataFormatReaders$Match createMatcher(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.format.MatchStrength) -> createMatcher
com.fasterxml.jackson.databind.deser.DataFormatReaders$Match -> com.fasterxml.jackson.databind.deser.DataFormatReaders$Match:
    java.io.InputStream _originalStream -> _originalStream
    byte[] _bufferedData -> _bufferedData
    int _bufferedStart -> _bufferedStart
    int _bufferedLength -> _bufferedLength
    com.fasterxml.jackson.databind.ObjectReader _match -> _match
    com.fasterxml.jackson.core.format.MatchStrength _matchStrength -> _matchStrength
    305:312:void <init>(java.io.InputStream,byte[],int,int,com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.format.MatchStrength) -> <init>
    324:324:boolean hasMatch() -> hasMatch
    337:337:com.fasterxml.jackson.databind.ObjectReader getReader() -> getReader
    363:370:com.fasterxml.jackson.core.JsonParser createParserWithMatch() -> createParserWithMatch
    381:384:java.io.InputStream getDataStream() -> getDataStream
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext -> com.fasterxml.jackson.databind.deser.DefaultDeserializationContext:
    java.util.LinkedHashMap _objectIds -> _objectIds
    java.util.List _objectIdResolvers -> _objectIdResolvers
    44:45:void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache) -> <init>
    49:50:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    54:55:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    88:125:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver) -> findObjectId
    141:141:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId createReadableObjectId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> createReadableObjectId
    147:176:void checkUnresolvedObjectId() -> checkUnresolvedObjectId
    190:190:boolean tryToResolveUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId) -> tryToResolveUnresolvedObjectId
    204:237:com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> deserializerInstance
    244:278:com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> keyDeserializerInstance
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext with(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> with
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> createInstance
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl -> com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl:
    318:319:void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    323:324:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    329:330:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    341:341:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> createInstance
    346:346:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext with(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> with
com.fasterxml.jackson.databind.deser.DeserializationProblemHandler -> com.fasterxml.jackson.databind.deser.DeserializationProblemHandler:
    java.lang.Object NOT_HANDLED -> NOT_HANDLED
    33:33:void <init>() -> <init>
    74:74:boolean handleUnknownProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    106:106:java.lang.Object handleWeirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String,java.lang.String) -> handleWeirdKey
    140:140:java.lang.Object handleWeirdStringValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String,java.lang.String) -> handleWeirdStringValue
    173:173:java.lang.Object handleWeirdNumberValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Number,java.lang.String) -> handleWeirdNumberValue
    201:201:java.lang.Object handleWeirdNativeValue(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser) -> handleWeirdNativeValue
    236:236:java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> handleUnexpectedToken
    270:270:java.lang.Object handleInstantiationProblem(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Object,java.lang.Throwable) -> handleInstantiationProblem
    306:306:java.lang.Object handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> handleMissingInstantiator
    344:344:com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleUnknownTypeId
    380:380:com.fasterxml.jackson.databind.JavaType handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleMissingTypeId
    398:398:java.lang.Object handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> handleMissingInstantiator
    41:41:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.DeserializerCache -> com.fasterxml.jackson.databind.deser.DeserializerCache:
    java.util.concurrent.ConcurrentHashMap _cachedDeserializers -> _cachedDeserializers
    java.util.HashMap _incompleteDeserializers -> _incompleteDeserializers
    42:59:void <init>() -> <init>
    139:151:com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> findValueDeserializer
    166:174:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> findKeyDeserializer
    204:210:com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType) -> _findCachedDeserializer
    228:251:com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createAndCacheValueDeserializer
    264:299:com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createAndCache2
    318:357:com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createDeserializer
    365:411:com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> _createDeserializer2
    423:429:com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializerFromAnnotation
    442:447:com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonDeserializer) -> findConvertingDeserializer
    454:458:com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findConverter
    480:529:com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> modifyTypeByAnnotation
    545:561:boolean _hasCustomHandlers(com.fasterxml.jackson.databind.JavaType) -> _hasCustomHandlers
    566:576:java.lang.Class _verifyAsClass(java.lang.Object,java.lang.String,java.lang.Class) -> _verifyAsClass
    589:593:com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _handleUnknownValueDeserializer
    599:599:com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _handleUnknownKeyDeserializer
com.fasterxml.jackson.databind.deser.DeserializerFactory -> com.fasterxml.jackson.databind.deser.DeserializerFactory:
    com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS -> NO_DESERIALIZERS
    41:41:void <init>() -> <init>
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    com.fasterxml.jackson.databind.deser.DeserializerFactory withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> mapAbstractType
    com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class) -> createBuilderBasedDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription) -> createReferenceDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createTreeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription) -> createArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription) -> createMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createMapLikeDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> createKeyDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeDeserializer
    43:43:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.Deserializers -> com.fasterxml.jackson.databind.deser.Deserializers:
    com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findTreeNodeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findReferenceDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapLikeDeserializer
com.fasterxml.jackson.databind.deser.KeyDeserializers -> com.fasterxml.jackson.databind.deser.KeyDeserializers:
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findKeyDeserializer
com.fasterxml.jackson.databind.deser.NullValueProvider -> com.fasterxml.jackson.databind.deser.NullValueProvider:
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
com.fasterxml.jackson.databind.deser.ResolvableDeserializer -> com.fasterxml.jackson.databind.deser.ResolvableDeserializer:
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
com.fasterxml.jackson.databind.deser.SettableAnyProperty -> com.fasterxml.jackson.databind.deser.SettableAnyProperty:
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _setter -> _setter
    boolean _setterIsField -> _setterIsField
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> _keyDeserializer
    61:69:void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    79:79:com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    84:86:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    111:111:com.fasterxml.jackson.databind.BeanProperty getProperty() -> getProperty
    113:113:boolean hasValueDeserializer() -> hasValueDeserializer
    115:115:com.fasterxml.jackson.databind.JavaType getType() -> getType
    132:143:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> deserializeAndSet
    147:154:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    162:181:void set(java.lang.Object,java.lang.Object,java.lang.Object) -> set
    197:214:void _throwAsIOE(java.lang.Exception,java.lang.Object,java.lang.Object) -> _throwAsIOE
    217:217:java.lang.String getClassName() -> getClassName
    219:219:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring -> com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring:
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _parent -> _parent
    java.lang.Object _pojo -> _pojo
    java.lang.String _propName -> _propName
    229:233:void <init>(com.fasterxml.jackson.databind.deser.SettableAnyProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object,java.lang.String) -> <init>
    239:244:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.SettableBeanProperty -> com.fasterxml.jackson.databind.deser.SettableBeanProperty:
    com.fasterxml.jackson.databind.JsonDeserializer MISSING_VALUE_DESERIALIZER -> MISSING_VALUE_DESERIALIZER
    com.fasterxml.jackson.databind.PropertyName _propName -> _propName
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> _wrapperName
    com.fasterxml.jackson.databind.util.Annotations _contextAnnotations -> _contextAnnotations
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> _nullProvider
    java.lang.String _managedReferenceName -> _managedReferenceName
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo _objectIdInfo -> _objectIdInfo
    com.fasterxml.jackson.databind.util.ViewMatcher _viewMatcher -> _viewMatcher
    int _propertyIndex -> _propertyIndex
    136:138:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations) -> <init>
    125:167:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    125:192:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    125:210:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    125:239:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    125:257:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    287:289:com.fasterxml.jackson.databind.deser.SettableBeanProperty withSimpleName(java.lang.String) -> withSimpleName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    298:299:void setManagedReferenceName(java.lang.String) -> setManagedReferenceName
    302:303:void setObjectIdInfo(com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> setObjectIdInfo
    306:311:void setViews(java.lang.Class[]) -> setViews
    317:321:void assignIndex(int) -> assignIndex
    332:332:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    337:337:void markAsIgnorable() -> markAsIgnorable
    342:342:boolean isIgnorable() -> isIgnorable
    352:352:java.lang.String getName() -> getName
    357:357:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    361:361:com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    398:398:java.lang.Class getDeclaringClass() -> getDeclaringClass
    401:401:java.lang.String getManagedReferenceName() -> getManagedReferenceName
    403:403:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    406:406:boolean hasValueDeserializer() -> hasValueDeserializer
    409:409:boolean hasValueTypeDeserializer() -> hasValueTypeDeserializer
    412:416:com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer() -> getValueDeserializer
    419:419:com.fasterxml.jackson.databind.jsontype.TypeDeserializer getValueTypeDeserializer() -> getValueTypeDeserializer
    427:427:boolean visibleInView(java.lang.Class) -> visibleInView
    430:430:boolean hasViews() -> hasViews
    449:449:int getCreatorIndex() -> getCreatorIndex
    458:458:java.lang.Object getInjectableValueId() -> getInjectableValueId
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    523:534:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    545:567:java.lang.Object deserializeWith(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWith
    582:600:void _throwAsIOE(com.fasterxml.jackson.core.JsonParser,java.lang.Exception,java.lang.Object) -> _throwAsIOE
    607:611:java.io.IOException _throwAsIOE(com.fasterxml.jackson.core.JsonParser,java.lang.Exception) -> _throwAsIOE
    622:623:void _throwAsIOE(java.lang.Exception,java.lang.Object) -> _throwAsIOE
    625:625:java.lang.String toString() -> toString
    36:36:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating -> com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty delegate -> delegate
    649:651:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    660:663:com.fasterxml.jackson.databind.deser.SettableBeanProperty _with(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _with
    668:668:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    673:673:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    678:678:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    683:684:void assignIndex(int) -> assignIndex
    688:689:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    698:698:java.lang.Class getDeclaringClass() -> getDeclaringClass
    701:701:java.lang.String getManagedReferenceName() -> getManagedReferenceName
    704:704:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    707:707:boolean hasValueDeserializer() -> hasValueDeserializer
    710:710:boolean hasValueTypeDeserializer() -> hasValueTypeDeserializer
    713:713:com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer() -> getValueDeserializer
    716:716:com.fasterxml.jackson.databind.jsontype.TypeDeserializer getValueTypeDeserializer() -> getValueTypeDeserializer
    719:719:boolean visibleInView(java.lang.Class) -> visibleInView
    722:722:boolean hasViews() -> hasViews
    728:728:int getCreatorIndex() -> getCreatorIndex
    731:731:java.lang.Object getInjectableValueId() -> getInjectableValueId
    735:735:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    762:763:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    769:769:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    774:775:void set(java.lang.Object,java.lang.Object) -> set
    779:779:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference -> com.fasterxml.jackson.databind.deser.UnresolvedForwardReference:
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId _roid -> _roid
    java.util.List _unresolvedIds -> _unresolvedIds
    28:30:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.databind.deser.impl.ReadableObjectId) -> <init>
    36:38:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    65:65:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId getRoid() -> getRoid
    69:69:java.lang.Object getUnresolvedId() -> getUnresolvedId
    73:74:void addUnresolvedId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation) -> addUnresolvedId
    83:98:java.lang.String getMessage() -> getMessage
com.fasterxml.jackson.databind.deser.UnresolvedId -> com.fasterxml.jackson.databind.deser.UnresolvedId:
    java.lang.Object _id -> _id
    com.fasterxml.jackson.core.JsonLocation _location -> _location
    java.lang.Class _type -> _type
    16:20:void <init>(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation) -> <init>
    35:35:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.ValueInstantiator -> com.fasterxml.jackson.databind.deser.ValueInstantiator:
    31:399:void <init>() -> <init>
    50:50:java.lang.Class getValueClass() -> getValueClass
    58:62:java.lang.String getValueTypeDesc() -> getValueTypeDesc
    71:71:boolean canInstantiate() -> canInstantiate
    82:82:boolean canCreateFromString() -> canCreateFromString
    88:88:boolean canCreateFromInt() -> canCreateFromInt
    94:94:boolean canCreateFromLong() -> canCreateFromLong
    100:100:boolean canCreateFromDouble() -> canCreateFromDouble
    106:106:boolean canCreateFromBoolean() -> canCreateFromBoolean
    113:113:boolean canCreateUsingDefault() -> canCreateUsingDefault
    120:120:boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    129:129:boolean canCreateUsingArrayDelegate() -> canCreateUsingArrayDelegate
    136:136:boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    149:149:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    159:159:com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getDelegateType
    170:170:com.fasterxml.jackson.databind.JavaType getArrayDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getArrayDelegateType
    189:189:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    203:203:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    229:229:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer) -> createFromObjectWith
    237:237:java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingDelegate
    246:246:java.lang.Object createUsingArrayDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingArrayDelegate
    258:258:java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> createFromString
    262:262:java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> createFromInt
    268:268:java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> createFromLong
    274:274:java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> createFromDouble
    280:280:java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> createFromBoolean
    301:301:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    311:311:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    321:321:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getArrayDelegateCreator() -> getArrayDelegateCreator
    338:338:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getIncompleteParameter() -> getIncompleteParameter
    356:371:java.lang.Object _createFromStringFallbacks(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _createFromStringFallbacks
com.fasterxml.jackson.databind.deser.ValueInstantiator$Base -> com.fasterxml.jackson.databind.deser.ValueInstantiator$Base:
    java.lang.Class _valueType -> _valueType
    403:405:void <init>(java.lang.Class) -> <init>
    407:409:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    413:413:java.lang.String getValueTypeDesc() -> getValueTypeDesc
    418:418:java.lang.Class getValueClass() -> getValueClass
com.fasterxml.jackson.databind.deser.ValueInstantiators -> com.fasterxml.jackson.databind.deser.ValueInstantiators:
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.deser.ValueInstantiators$Base -> com.fasterxml.jackson.databind.deser.ValueInstantiators$Base:
    44:44:com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer -> com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer:
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate -> _delegate
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties -> _orderedProperties
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> _buildMethod
    com.fasterxml.jackson.databind.JavaType _targetType -> _targetType
    55:60:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    69:69:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    74:74:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    80:80:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> withIgnorableProperties
    86:86:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    92:92:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    104:104:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    117:119:java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> finishBuild
    128:169:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    177:177:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    184:184:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    203:247:java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeNonVanilla
    263:332:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    345:345:java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromNonArray
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer -> com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer:
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate -> _delegate
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties -> _orderedProperties
    47:50:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> <init>
    59:59:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    64:64:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    70:70:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> withIgnorableProperties
    76:76:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    82:82:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    96:139:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    147:193:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    201:201:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    217:264:java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeNonVanilla
    279:353:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    365:365:java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromNonArray
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap -> com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap:
    boolean _caseInsensitive -> _caseInsensitive
    int _hashMask -> _hashMask
    int _size -> _size
    int _spillCount -> _spillCount
    java.lang.Object[] _hashArea -> _hashArea
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propsInOrder -> _propsInOrder
    java.util.Map _aliasDefs -> _aliasDefs
    java.util.Map _aliasMapping -> _aliasMapping
    84:90:void <init>(boolean,java.util.Collection,java.util.Map) -> <init>
    98:112:void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty,int,int) -> <init>
    120:154:void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,int) -> <init>
    166:174:void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,boolean) -> <init>
    184:187:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withCaseInsensitivity(boolean) -> withCaseInsensitivity
    192:233:void init(java.util.Collection) -> init
    237:248:int findSize(int) -> findSize
    256:256:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap construct(java.util.Collection,boolean,java.util.Map) -> construct
    275:286:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withProperty
    292:299:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap assignIndexes() -> assignIndexes
    308:327:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap renameAll(com.fasterxml.jackson.databind.util.NameTransformer) -> renameAll
    345:363:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withoutProperties(java.util.Collection) -> withoutProperties
    389:402:void replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> replace
    410:435:void remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> remove
    443:443:int size() -> size
    449:449:boolean isCaseInsensitive() -> isCaseInsensitive
    456:456:boolean hasAliases() -> hasAliases
    464:464:java.util.Iterator iterator() -> iterator
    468:475:java.util.List _properties() -> _properties
    487:487:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getPropertiesInInsertionOrder() -> getPropertiesInInsertionOrder
    493:493:java.lang.String getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> getPropertyName
    520:537:com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String) -> find
    542:563:com.fasterxml.jackson.databind.deser.SettableBeanProperty _find2(java.lang.String,int,java.lang.Object) -> _find2
    568:582:com.fasterxml.jackson.databind.deser.SettableBeanProperty _findWithAlias(java.lang.String) -> _findWithAlias
    588:603:com.fasterxml.jackson.databind.deser.SettableBeanProperty _find2ViaAlias(java.lang.String,int,java.lang.Object) -> _find2ViaAlias
    645:666:java.lang.String toString() -> toString
    677:691:com.fasterxml.jackson.databind.deser.SettableBeanProperty _rename(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.util.NameTransformer) -> _rename
    750:755:int _findFromOrdered(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _findFromOrdered
    769:769:int _hashCode(java.lang.String) -> _hashCode
    775:792:java.util.Map _buildAliasMapping(java.util.Map) -> _buildAliasMapping
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate -> com.fasterxml.jackson.databind.deser.impl.CreatorCandidate:
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> _intr
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _creator -> _creator
    int _paramCount -> _paramCount
    com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param[] _params -> _params
    18:23:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param[],int) -> <init>
    28:35:com.fasterxml.jackson.databind.deser.impl.CreatorCandidate construct(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition[]) -> construct
    38:38:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams creator() -> creator
    39:39:int paramCount() -> paramCount
    40:40:com.fasterxml.jackson.annotation.JacksonInject$Value injection(int) -> injection
    41:41:com.fasterxml.jackson.databind.introspect.AnnotatedParameter parameter(int) -> parameter
    42:42:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition propertyDef(int) -> propertyDef
    45:49:com.fasterxml.jackson.databind.PropertyName paramName(int) -> paramName
    53:59:com.fasterxml.jackson.databind.PropertyName explicitParamName(int) -> explicitParamName
    63:67:com.fasterxml.jackson.databind.PropertyName findImplicitParamName(int) -> findImplicitParamName
    77:86:int findOnlyParamWithoutInjection() -> findOnlyParamWithoutInjection
    91:91:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param -> com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param:
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter annotated -> annotated
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition propDef -> propDef
    com.fasterxml.jackson.annotation.JacksonInject$Value injection -> injection
    101:105:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.annotation.JacksonInject$Value) -> <init>
com.fasterxml.jackson.databind.deser.impl.CreatorCollector -> com.fasterxml.jackson.databind.deser.impl.CreatorCollector:
    java.lang.String[] TYPE_DESCS -> TYPE_DESCS
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    boolean _canFixAccess -> _canFixAccess
    boolean _forceAccess -> _forceAccess
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams[] _creators -> _creators
    int _explicitCreators -> _explicitCreators
    boolean _hasNonDefaultCreator -> _hasNonDefaultCreator
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _delegateArgs -> _delegateArgs
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _arrayDelegateArgs -> _arrayDelegateArgs
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propertyBasedArgs -> _propertyBasedArgs
    51:82:void <init>(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.cfg.MapperConfig) -> <init>
    87:111:com.fasterxml.jackson.databind.deser.ValueInstantiator constructValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext) -> constructValueInstantiator
    131:132:void setDefaultCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> setDefaultCreator
    135:136:void addStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addStringCreator
    139:140:void addIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addIntCreator
    143:144:void addLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addLongCreator
    147:148:void addDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addDoubleCreator
    151:152:void addBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addBooleanCreator
    158:167:void addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],int) -> addDelegatingCreator
    172:193:void addPropertyCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> addPropertyCreator
    205:205:boolean hasDefaultCreator() -> hasDefaultCreator
    212:212:boolean hasDelegatingCreator() -> hasDelegatingCreator
    219:219:boolean hasPropertyBasedCreator() -> hasPropertyBasedCreator
    232:266:com.fasterxml.jackson.databind.JavaType _computeDelegateType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> _computeDelegateType
    270:274:com.fasterxml.jackson.databind.introspect.AnnotatedMember _fixAccess(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _fixAccess
    282:338:boolean verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean) -> verifyNonDup
    347:347:boolean _isEnumValueOf(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> _isEnumValueOf
    32:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor -> com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor:
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _base -> _base
    int _type -> _type
    379:382:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int) -> <init>
    386:398:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams tryToOptimize(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> tryToOptimize
    402:410:java.lang.Object _construct() -> _construct
    415:415:int getParameterCount() -> getParameterCount
    420:420:java.lang.Class getRawParameterType(int) -> getRawParameterType
    425:425:com.fasterxml.jackson.databind.JavaType getParameterType(int) -> getParameterType
    436:436:java.lang.Object call() -> call
    441:441:java.lang.Object call(java.lang.Object[]) -> call
    446:446:java.lang.Object call1(java.lang.Object) -> call1
    451:451:java.lang.Class getDeclaringClass() -> getDeclaringClass
    456:456:java.lang.reflect.Member getMember() -> getMember
    462:462:void setValue(java.lang.Object,java.lang.Object) -> setValue
    468:468:java.lang.Object getValue(java.lang.Object) -> getValue
    473:473:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    478:478:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    488:488:java.lang.String getName() -> getName
    493:493:com.fasterxml.jackson.databind.JavaType getType() -> getType
    498:498:java.lang.Class getRawType() -> getRawType
    503:503:boolean equals(java.lang.Object) -> equals
    508:508:int hashCode() -> hashCode
    513:513:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer -> com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer:
    java.lang.Error _cause -> _cause
    21:23:void <init>(java.lang.NoClassDefFoundError) -> <init>
    27:27:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler -> com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler:
    com.fasterxml.jackson.databind.JavaType _beanType -> _beanType
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty[] _properties -> _properties
    java.util.Map _nameToPropertyIndex -> _nameToPropertyIndex
    java.lang.String[] _typeIds -> _typeIds
    com.fasterxml.jackson.databind.util.TokenBuffer[] _tokens -> _tokens
    40:46:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty[],java.util.Map,java.lang.String[],com.fasterxml.jackson.databind.util.TokenBuffer[]) -> <init>
    49:56:void <init>(com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler) -> <init>
    62:62:com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder builder(com.fasterxml.jackson.databind.JavaType) -> builder
    70:70:com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler start() -> start
    85:101:boolean handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object) -> handleTypePropertyValue
    109:123:boolean _handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object,java.lang.String,int) -> _handleTypePropertyValue
    138:194:boolean handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object) -> handlePropertyValue
    205:248:java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> complete
    260:319:java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator) -> complete
    326:341:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String) -> _deserialize
    351:368:void _deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String) -> _deserializeAndSet
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder -> com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder:
    com.fasterxml.jackson.databind.JavaType _beanType -> _beanType
    java.util.List _properties -> _properties
    java.util.Map _nameToPropertyIndex -> _nameToPropertyIndex
    380:385:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    389:393:void addExternal(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> addExternal
    396:409:void _addPropertyIndex(java.lang.String,java.lang.Integer) -> _addPropertyIndex
    420:431:com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler build(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> build
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty -> com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _property -> _property
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer -> _typeDeserializer
    java.lang.String _typePropertyName -> _typePropertyName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _typeProperty -> _typeProperty
    448:452:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    458:459:void linkTypeProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> linkTypeProperty
    462:462:boolean hasTypePropertyName(java.lang.String) -> hasTypePropertyName
    466:466:boolean hasDefaultType() -> hasDefaultType
    475:479:java.lang.String getDefaultTypeId() -> getDefaultTypeId
    482:482:java.lang.String getTypePropertyName() -> getTypePropertyName
    485:485:com.fasterxml.jackson.databind.deser.SettableBeanProperty getProperty() -> getProperty
    492:492:com.fasterxml.jackson.databind.deser.SettableBeanProperty getTypeProperty() -> getTypeProperty
com.fasterxml.jackson.databind.deser.impl.FailingDeserializer -> com.fasterxml.jackson.databind.deser.impl.FailingDeserializer:
    java.lang.String _message -> _message
    23:25:void <init>(java.lang.String) -> <init>
    29:30:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.impl.FieldProperty -> com.fasterxml.jackson.databind.deser.impl.FieldProperty:
    com.fasterxml.jackson.databind.introspect.AnnotatedField _annotated -> _annotated
    java.lang.reflect.Field _field -> _field
    boolean _skipNulls -> _skipNulls
    46:50:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedField) -> <init>
    54:58:void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    61:65:void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    84:84:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    89:92:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    97:97:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    102:104:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    117:117:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    130:152:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    159:181:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    188:193:void set(java.lang.Object,java.lang.Object) -> set
    199:204:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.InnerClassProperty -> com.fasterxml.jackson.databind.deser.impl.InnerClassProperty:
    java.lang.reflect.Constructor _creator -> _creator
    39:41:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.reflect.Constructor) -> <init>
    59:62:com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    75:93:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    99:99:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers -> com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers:
    java.lang.Class CLASS_AS_ARRAYS_LIST -> CLASS_AS_ARRAYS_LIST
    java.lang.Class CLASS_SINGLETON_SET -> CLASS_SINGLETON_SET
    java.lang.Class CLASS_SINGLETON_LIST -> CLASS_SINGLETON_LIST
    java.lang.Class CLASS_SINGLETON_MAP -> CLASS_SINGLETON_MAP
    java.lang.Class CLASS_UNMODIFIABLE_SET -> CLASS_UNMODIFIABLE_SET
    java.lang.Class CLASS_UNMODIFIABLE_LIST -> CLASS_UNMODIFIABLE_LIST
    java.lang.Class CLASS_UNMODIFIABLE_MAP -> CLASS_UNMODIFIABLE_MAP
    66:79:com.fasterxml.jackson.databind.JsonDeserializer findForCollection(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> findForCollection
    89:96:com.fasterxml.jackson.databind.JsonDeserializer findForMap(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> findForMap
    102:102:com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter converter(int,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> converter
    35:57:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$1 -> com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$1:
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter -> com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter:
    com.fasterxml.jackson.databind.JavaType _inputType -> _inputType
    int _kind -> _kind
    116:119:void <init>(int,com.fasterxml.jackson.databind.JavaType) -> <init>
    123:158:java.lang.Object convert(java.lang.Object) -> convert
    164:164:com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getInputType
    170:170:com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getOutputType
    174:178:void _checkSingleton(int) -> _checkSingleton
    110:110:void <init>(int,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$1) -> <init>
com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty -> com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty:
    java.lang.String _referenceName -> _referenceName
    boolean _isContainer -> _isContainer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _backProperty -> _backProperty
    35:39:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean) -> <init>
    43:43:com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    49:51:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    62:63:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    68:68:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    73:74:void set(java.lang.Object,java.lang.Object) -> set
    82:105:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty -> com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty:
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> _accessor
    41:43:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> <init>
    55:55:com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty construct(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> construct
    60:60:com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    73:87:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    93:112:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    119:122:void set(java.lang.Object,java.lang.Object) -> set
    128:131:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.MethodProperty -> com.fasterxml.jackson.databind.deser.impl.MethodProperty:
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _setter -> _setter
    boolean _skipNulls -> _skipNulls
    42:46:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    50:54:void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    57:61:void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    75:75:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    80:83:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    88:88:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    93:95:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    108:108:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    121:143:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    150:172:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    180:185:void set(java.lang.Object,java.lang.Object) -> set
    191:196:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider -> com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider:
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> _deserializer
    19:21:void <init>(com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    31:31:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider -> com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider:
    com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider SKIPPER -> SKIPPER
    com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider NULLER -> NULLER
    java.lang.Object _nullValue -> _nullValue
    com.fasterxml.jackson.databind.util.AccessPattern _access -> _access
    25:29:void <init>(java.lang.Object) -> <init>
    38:38:com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider skipper() -> skipper
    42:42:com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider nuller() -> nuller
    46:49:com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider forValue(java.lang.Object) -> forValue
    58:58:boolean isSkipper(com.fasterxml.jackson.databind.deser.NullValueProvider) -> isSkipper
    77:77:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    17:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.NullsFailProvider -> com.fasterxml.jackson.databind.deser.impl.NullsFailProvider:
    com.fasterxml.jackson.databind.PropertyName _name -> _name
    com.fasterxml.jackson.databind.JavaType _type -> _type
    20:23:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType) -> <init>
    26:26:com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForProperty(com.fasterxml.jackson.databind.BeanProperty) -> constructForProperty
    30:30:com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForRootValue(com.fasterxml.jackson.databind.JavaType) -> constructForRootValue
    42:42:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader -> com.fasterxml.jackson.databind.deser.impl.ObjectIdReader:
    com.fasterxml.jackson.databind.JavaType _idType -> _idType
    com.fasterxml.jackson.databind.PropertyName propertyName -> propertyName
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> generator
    com.fasterxml.jackson.annotation.ObjectIdResolver resolver -> resolver
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> _deserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty idProperty -> idProperty
    50:57:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver) -> <init>
    68:68:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver) -> construct
    78:78:com.fasterxml.jackson.databind.JsonDeserializer getDeserializer() -> getDeserializer
    82:82:com.fasterxml.jackson.databind.JavaType getIdType() -> getIdType
    97:97:boolean maySerializeAsObject() -> maySerializeAsObject
    112:112:boolean isValidReferencePropertyName(java.lang.String,com.fasterxml.jackson.core.JsonParser) -> isValidReferencePropertyName
    122:122:java.lang.Object readObjectReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> readObjectReference
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty -> com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _forward -> _forward
    23:26:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> <init>
    31:34:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    38:41:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    45:45:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    50:53:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    58:58:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    63:66:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    75:75:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    80:80:int getCreatorIndex() -> getCreatorIndex
    85:86:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    92:99:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    105:106:void set(java.lang.Object,java.lang.Object) -> set
    110:110:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring -> com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring:
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty _parent -> _parent
    java.lang.Object _pojo -> _pojo
    120:123:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object) -> <init>
    128:133:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty -> com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty:
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    27:30:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    35:37:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    40:42:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    46:46:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    51:54:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    59:59:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    69:69:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    81:82:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    94:105:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    110:111:void set(java.lang.Object,java.lang.Object) -> set
    116:121:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator -> com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator:
    int _propertyCount -> _propertyCount
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    java.util.HashMap _propertyLookup -> _propertyLookup
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _allProperties -> _allProperties
    58:93:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],boolean,boolean) -> <init>
    106:115:com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> construct
    132:141:com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],boolean) -> construct
    165:165:com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(java.lang.String) -> findCreatorProperty
    190:190:com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> startBuilding
    195:207:java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer) -> build
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator$CaseInsensitiveMap -> com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator$CaseInsensitiveMap:
    222:222:void <init>() -> <init>
    228:228:com.fasterxml.jackson.databind.deser.SettableBeanProperty get(java.lang.Object) -> get
    233:234:com.fasterxml.jackson.databind.deser.SettableBeanProperty put(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> put
    222:222:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    222:222:java.lang.Object get(java.lang.Object) -> get
com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator -> com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator:
    13:14:void <init>(java.lang.Class) -> <init>
    18:18:java.lang.Object generateId(java.lang.Object) -> generateId
    23:23:com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    28:28:com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    33:37:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
com.fasterxml.jackson.databind.deser.impl.PropertyValue -> com.fasterxml.jackson.databind.deser.impl.PropertyValue:
    com.fasterxml.jackson.databind.deser.impl.PropertyValue next -> next
    java.lang.Object value -> value
    24:27:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object) -> <init>
    void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any -> com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any:
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _property -> _property
    java.lang.String _propertyName -> _propertyName
    82:85:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String) -> <init>
    91:92:void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map -> com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map:
    java.lang.Object _key -> _key
    106:108:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,java.lang.Object) -> <init>
    115:116:void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular -> com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _property -> _property
    54:56:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    62:63:void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer -> com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer:
    com.fasterxml.jackson.core.JsonParser _parser -> _parser
    com.fasterxml.jackson.databind.DeserializationContext _context -> _context
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    java.lang.Object[] _creatorParameters -> _creatorParameters
    int _paramsNeeded -> _paramsNeeded
    int _paramsSeen -> _paramsSeen
    java.util.BitSet _paramsSeenBig -> _paramsSeenBig
    com.fasterxml.jackson.databind.deser.impl.PropertyValue _buffered -> _buffered
    java.lang.Object _idValue -> _idValue
    87:98:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    152:180:java.lang.Object[] getParameters(com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> getParameters
    186:203:java.lang.Object _findMissing(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _findMissing
    220:224:boolean readIdProperty(java.lang.String) -> readIdProperty
    232:246:java.lang.Object handleIdValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> handleIdValue
    249:249:com.fasterxml.jackson.databind.deser.impl.PropertyValue buffered() -> buffered
    263:283:boolean assignParameter(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object) -> assignParameter
    287:288:void bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object) -> bufferProperty
    291:292:void bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object) -> bufferAnyProperty
    295:296:void bufferMapProperty(java.lang.Object,java.lang.Object) -> bufferMapProperty
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId -> com.fasterxml.jackson.databind.deser.impl.ReadableObjectId:
    java.lang.Object _item -> _item
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey _key -> _key
    java.util.LinkedList _referringProperties -> _referringProperties
    com.fasterxml.jackson.annotation.ObjectIdResolver _resolver -> _resolver
    32:34:void <init>(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> <init>
    37:38:void setResolver(com.fasterxml.jackson.annotation.ObjectIdResolver) -> setResolver
    41:41:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey getKey() -> getKey
    45:49:void appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring) -> appendReferring
    57:67:void bindItem(java.lang.Object) -> bindItem
    70:70:java.lang.Object resolve() -> resolve
    74:74:boolean hasReferringProperties() -> hasReferringProperties
    78:81:java.util.Iterator referringProperties() -> referringProperties
    101:101:boolean tryToResolveUnresolved(com.fasterxml.jackson.databind.DeserializationContext) -> tryToResolveUnresolved
    119:119:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring -> com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring:
    com.fasterxml.jackson.databind.deser.UnresolvedForwardReference _reference -> _reference
    java.lang.Class _beanType -> _beanType
    132:135:void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class) -> <init>
    137:140:void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,com.fasterxml.jackson.databind.JavaType) -> <init>
    142:142:com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    143:143:java.lang.Class getBeanType() -> getBeanType
    void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
    147:147:boolean hasId(java.lang.Object) -> hasId
com.fasterxml.jackson.databind.deser.impl.SetterlessProperty -> com.fasterxml.jackson.databind.deser.impl.SetterlessProperty:
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _getter -> _getter
    39:42:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    46:49:void <init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    52:55:void <init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    59:59:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    64:67:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    72:72:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    77:79:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    92:92:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    104:134:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    140:141:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    146:146:void set(java.lang.Object,java.lang.Object) -> set
    152:153:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer -> com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer:
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer -> _typeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> _deserializer
    30:33:void <init>(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    37:37:java.lang.Class handledType() -> handledType
    42:42:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    52:52:java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    57:57:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    62:62:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    68:68:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    76:76:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    86:86:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler -> com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler:
    java.util.List _properties -> _properties
    22:24:void <init>() -> <init>
    25:27:void <init>(java.util.List) -> <init>
    30:31:void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addProperty
    35:50:com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler renameAll(com.fasterxml.jackson.databind.util.NameTransformer) -> renameAll
    58:64:java.lang.Object processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> processUnwrapped
com.fasterxml.jackson.databind.deser.impl.ValueInjector -> com.fasterxml.jackson.databind.deser.impl.ValueInjector:
    java.lang.Object _valueId -> _valueId
    27:29:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object) -> <init>
    45:45:java.lang.Object findValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> findValue
    51:52:void inject(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> inject
com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer -> com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer:
    33:34:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    45:47:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    66:66:com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    85:85:java.util.Collection createDefaultInstance(com.fasterxml.jackson.databind.DeserializationContext) -> createDefaultInstance
    92:100:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> deserialize
    106:106:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    18:18:com.fasterxml.jackson.databind.deser.std.CollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    18:18:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer -> com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer:
    13:13:void <init>() -> <init>
    17:17:java.util.concurrent.atomic.AtomicBoolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    9:9:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer -> com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer:
    26:27:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    37:37:com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
    42:42:java.util.concurrent.atomic.AtomicReference getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    47:47:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    52:52:java.util.concurrent.atomic.AtomicReference referenceValue(java.lang.Object) -> referenceValue
    57:57:java.lang.Object getReferenced(java.util.concurrent.atomic.AtomicReference) -> getReferenced
    62:63:java.util.concurrent.atomic.AtomicReference updateReference(java.util.concurrent.atomic.AtomicReference,java.lang.Object) -> updateReference
    69:69:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    9:9:java.lang.Object getReferenced(java.lang.Object) -> getReferenced
    9:9:java.lang.Object updateReference(java.lang.Object,java.lang.Object) -> updateReference
    9:9:java.lang.Object referenceValue(java.lang.Object) -> referenceValue
    9:9:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    9:9:com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer -> com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer:
    java.lang.Boolean _supportsUpdates -> _supportsUpdates
    174:176:void <init>(java.lang.Class,java.lang.Boolean) -> <init>
    184:184:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    192:192:boolean isCachable() -> isCachable
    196:196:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    225:230:void _handleDuplicateField(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode) -> _handleDuplicateField
    245:287:com.fasterxml.jackson.databind.node.ObjectNode deserializeObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> deserializeObject
    299:341:com.fasterxml.jackson.databind.node.ObjectNode deserializeObjectAtName(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> deserializeObjectAtName
    354:423:com.fasterxml.jackson.databind.JsonNode updateObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ObjectNode) -> updateObject
    429:463:com.fasterxml.jackson.databind.node.ArrayNode deserializeArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> deserializeArray
    475:509:com.fasterxml.jackson.databind.JsonNode updateArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ArrayNode) -> updateArray
    515:550:com.fasterxml.jackson.databind.JsonNode deserializeAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> deserializeAny
    557:575:com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> _fromInt
    581:596:com.fasterxml.jackson.databind.JsonNode _fromFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> _fromFloat
    602:619:com.fasterxml.jackson.databind.JsonNode _fromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> _fromEmbedded
com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer -> com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer:
    14:14:void <init>() -> <init>
    18:19:java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    25:28:java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.nio.ByteBuffer) -> deserialize
    10:10:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    10:10:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer -> com.fasterxml.jackson.databind.deser.std.CollectionDeserializer:
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    73:74:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    86:91:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    117:117:com.fasterxml.jackson.databind.deser.std.CollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    127:127:boolean isCachable() -> isCachable
    149:202:com.fasterxml.jackson.databind.deser.std.CollectionDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    213:213:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    218:218:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    232:245:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    255:255:java.util.Collection createDefaultInstance(com.fasterxml.jackson.databind.DeserializationContext) -> createDefaultInstance
    264:305:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> deserialize
    314:314:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    328:357:java.util.Collection handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> handleNonArray
    365:402:java.util.Collection _deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> _deserializeWithObjectId
    27:27:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    27:27:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    27:27:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring -> com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring:
    com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator _parent -> _parent
    java.util.List next -> next
    470:477:void <init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class) -> <init>
    481:482:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator -> com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator:
    java.lang.Class _elementType -> _elementType
    java.util.Collection _result -> _result
    java.util.List _accumulator -> _accumulator
    416:421:void <init>(java.lang.Class,java.util.Collection) -> <init>
    425:431:void add(java.lang.Object) -> add
    435:437:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> handleUnresolvedReference
    442:458:void resolveForwardReference(java.lang.Object,java.lang.Object) -> resolveForwardReference
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase -> com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase:
    com.fasterxml.jackson.databind.JavaType _containerType -> _containerType
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> _nullProvider
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    boolean _skipNullValues -> _skipNullValues
    52:57:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    60:61:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    67:68:void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase) -> <init>
    75:80:void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    89:89:com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    93:93:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    98:104:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    134:134:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    141:141:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    146:155:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    171:181:java.lang.Object wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
com.fasterxml.jackson.databind.deser.std.DateDeserializers -> com.fasterxml.jackson.databind.deser.std.DateDeserializers:
    java.util.HashSet _classNames -> _classNames
    42:60:com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> find
    26:38:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer:
    java.lang.reflect.Constructor _defaultCtor -> _defaultCtor
    217:219:void <init>() -> <init>
    223:225:void <init>(java.lang.Class) -> <init>
    228:230:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    234:234:com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    240:256:java.util.Calendar deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    205:205:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    205:205:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    205:205:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer:
    java.text.DateFormat _customFormat -> _customFormat
    java.lang.String _formatString -> _formatString
    85:88:void <init>(java.lang.Class) -> <init>
    92:95:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    104:172:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    179:195:java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDate
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer:
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer instance -> instance
    273:273:void <init>() -> <init>
    275:276:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    280:280:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    285:285:java.util.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    268:268:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    268:268:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    268:268:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    271:271:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer:
    296:296:void <init>() -> <init>
    298:299:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    303:303:com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    308:309:java.sql.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    293:293:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    293:293:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    293:293:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer:
    322:322:void <init>() -> <init>
    324:325:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    329:329:com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    335:336:java.sql.Timestamp deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    320:320:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    320:320:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    320:320:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.EnumDeserializer -> com.fasterxml.jackson.databind.deser.std.EnumDeserializer:
    java.lang.Object[] _enumsByIndex -> _enumsByIndex
    java.lang.Enum _enumDefaultValue -> _enumDefaultValue
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByName -> _lookupByName
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByToString -> _lookupByToString
    java.lang.Boolean _caseInsensitive -> _caseInsensitive
    57:62:void <init>(com.fasterxml.jackson.databind.util.EnumResolver,java.lang.Boolean) -> <init>
    69:74:void <init>(com.fasterxml.jackson.databind.deser.std.EnumDeserializer,java.lang.Boolean) -> <init>
    105:109:com.fasterxml.jackson.databind.JsonDeserializer deserializerForCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> deserializerForCreator
    125:129:com.fasterxml.jackson.databind.JsonDeserializer deserializerForNoArgsCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> deserializerForNoArgsCreator
    136:139:com.fasterxml.jackson.databind.deser.std.EnumDeserializer withResolved(java.lang.Boolean) -> withResolved
    146:151:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    165:165:boolean isCachable() -> isCachable
    170:206:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    218:258:java.lang.Object _deserializeAltString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.CompactStringObjectMap,java.lang.String) -> _deserializeAltString
    264:267:java.lang.Object _deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeOther
    271:271:java.lang.Class _enumClass() -> _enumClass
    276:287:com.fasterxml.jackson.databind.util.CompactStringObjectMap _getToStringLookup(com.fasterxml.jackson.databind.DeserializationContext) -> _getToStringLookup
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer -> com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer:
    java.lang.Class _enumClass -> _enumClass
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> _keyDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    77:83:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    92:101:void <init>(com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    114:118:com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> withResolved
    132:161:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    173:188:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    198:198:boolean isCachable() -> isCachable
    211:211:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    217:217:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    230:248:java.util.EnumMap deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    257:312:java.util.EnumMap deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumMap) -> deserialize
    321:321:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    325:336:java.util.EnumMap constructMap(com.fasterxml.jackson.databind.DeserializationContext) -> constructMap
    342:413:java.util.EnumMap _deserializeUsingProperties(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingProperties
    24:24:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    24:24:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer -> com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer:
    com.fasterxml.jackson.databind.JavaType _enumType -> _enumType
    java.lang.Class _enumClass -> _enumClass
    com.fasterxml.jackson.databind.JsonDeserializer _enumDeserializer -> _enumDeserializer
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    49:58:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    66:71:void <init>(com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Boolean) -> <init>
    81:84:com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Boolean) -> withResolved
    94:97:boolean isCachable() -> isCachable
    102:102:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    109:117:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    129:134:java.util.EnumSet deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    142:145:java.util.EnumSet deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> deserialize
    155:175:java.util.EnumSet _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> _deserialize
    183:183:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    189:189:java.util.EnumSet constructSet() -> constructSet
    197:216:java.util.EnumSet handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> handleNonArray
    18:18:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    18:18:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer -> com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer:
    com.fasterxml.jackson.databind.JavaType _inputType -> _inputType
    boolean _hasArgs -> _hasArgs
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _factory -> _factory
    com.fasterxml.jackson.databind.JsonDeserializer _deser -> _deser
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _creatorProps -> _creatorProps
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propCreator -> _propCreator
    49:57:void <init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> <init>
    64:71:void <init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    75:83:void <init>(com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    90:94:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    99:99:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    105:142:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    148:151:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    158:174:java.lang.Object deserializeEnumUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator) -> deserializeEnumUsingPropertyBased
    183:185:java.lang.Object _deserializeWithErrorWrapping(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _deserializeWithErrorWrapping
    192:192:java.lang.Object wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> wrapAndThrow
    197:209:java.lang.Throwable throwOrReturnThrowable(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> throwOrReturnThrowable
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer -> com.fasterxml.jackson.databind.deser.std.FromStringDeserializer:
    57:57:java.lang.Class[] types() -> types
    81:82:void <init>(java.lang.Class) -> <init>
    90:120:com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std findDeserializer(java.lang.Class) -> findDeserializer
    134:177:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    184:187:java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
    191:191:java.lang.Object _deserializeFromEmptyString() -> _deserializeFromEmptyString
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std -> com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std:
    int _kind -> _kind
    227:229:void <init>(java.lang.Class,int) -> <init>
    234:304:java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    310:320:java.lang.Object _deserializeFromEmptyString() -> _deserializeFromEmptyString
    325:331:int _firstHyphenOrUnderscore(java.lang.String) -> _firstHyphenOrUnderscore
com.fasterxml.jackson.databind.deser.std.JdkDeserializers -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers:
    java.util.HashSet _classNames -> _classNames
    30:49:com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> find
    15:26:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator -> com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator:
    22:23:void <init>() -> <init>
    26:26:boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    30:32:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    42:42:com.fasterxml.jackson.databind.deser.CreatorProperty creatorProp(java.lang.String,com.fasterxml.jackson.databind.JavaType,int) -> creatorProp
    48:48:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    53:53:long _long(java.lang.Object) -> _long
    57:57:int _int(java.lang.Object) -> _int
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer -> com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer:
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance -> instance
    29:30:void <init>() -> <init>
    37:44:com.fasterxml.jackson.databind.JsonDeserializer getDeserializer(java.lang.Class) -> getDeserializer
    55:55:com.fasterxml.jackson.databind.JsonNode getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    66:73:com.fasterxml.jackson.databind.JsonNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    15:15:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    15:15:boolean isCachable() -> isCachable
    15:15:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    15:15:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    15:15:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    23:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer -> com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer:
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance -> _instance
    133:133:void <init>() -> <init>
    135:135:com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance() -> getInstance
    140:143:com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    155:158:com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ArrayNode) -> deserialize
    126:126:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    126:126:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    131:131:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer -> com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer:
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance -> _instance
    89:89:void <init>() -> <init>
    91:91:com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance() -> getInstance
    96:107:com.fasterxml.jackson.databind.node.ObjectNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    119:122:com.fasterxml.jackson.databind.node.ObjectNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ObjectNode) -> deserialize
    82:82:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    82:82:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    87:87:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.MapDeserializer -> com.fasterxml.jackson.databind.deser.std.MapDeserializer:
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> _keyDeserializer
    boolean _standardStringKey -> _standardStringKey
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    boolean _hasDefaultCreator -> _hasDefaultCreator
    java.util.Set _ignorableProperties -> _ignorableProperties
    99:108:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    136:147:void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set) -> <init>
    160:165:com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set) -> withResolved
    176:184:boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer) -> _isStdKeyDeser
    194:196:void setIgnorableProperties(java.util.Set) -> setIgnorableProperties
    208:236:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    246:287:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    299:299:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    304:304:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    330:330:boolean isCachable() -> isCachable
    340:368:java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    378:391:java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> deserialize
    400:400:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    410:410:java.lang.Class getMapClass() -> getMapClass
    412:412:com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    423:480:void _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndBind
    490:543:void _readAndBindStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndBindStringKeyMap
    548:614:java.util.Map _deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingCreator
    630:684:void _readAndUpdate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndUpdate
    696:747:void _readAndUpdateStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndUpdateStringKeyMap
    760:766:void handleUnresolvedReference(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> handleUnresolvedReference
    29:29:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    29:29:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring -> com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring:
    com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator _parent -> _parent
    java.util.Map next -> next
    java.lang.Object key -> key
    829:838:void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object) -> <init>
    842:843:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator -> com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator:
    java.lang.Class _valueType -> _valueType
    java.util.Map _result -> _result
    java.util.List _accumulator -> _accumulator
    774:779:void <init>(java.lang.Class,java.util.Map) -> <init>
    783:789:void put(java.lang.Object,java.lang.Object) -> put
    793:795:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Object) -> handleUnresolvedReference
    800:816:void resolveForwardReference(java.lang.Object,java.lang.Object) -> resolveForwardReference
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer -> com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer:
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> _keyDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    58:65:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    83:87:void <init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    98:102:com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
    120:140:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    156:156:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    170:223:java.util.Map$Entry deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    230:230:java.util.Map$Entry deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map$Entry) -> deserialize
    239:239:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer -> com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer:
    com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer instance -> instance
    22:22:void <init>() -> <init>
    32:32:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    40:51:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    60:66:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    20:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers:
    java.util.HashSet _classNames -> _classNames
    45:109:com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> find
    24:42:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$1 -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType
    889:889:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer instance -> instance
    929:929:void <init>() -> <init>
    933:933:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    940:961:java.math.BigDecimal deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    922:922:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    927:927:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer instance -> instance
    876:876:void <init>() -> <init>
    880:880:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    887:918:java.math.BigInteger deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    869:869:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    874:874:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer wrapperInstance -> wrapperInstance
    186:187:void <init>(java.lang.Class,java.lang.Boolean) -> <init>
    192:199:java.lang.Boolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    209:216:java.lang.Boolean deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    222:262:java.lang.Boolean _parseBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBoolean
    175:175:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    175:175:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    175:175:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    181:182:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer wrapperInstance -> wrapperInstance
    277:278:void <init>(java.lang.Class,java.lang.Byte) -> <init>
    283:286:java.lang.Byte deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    291:334:java.lang.Byte _parseByte(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseByte
    266:266:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    266:266:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    272:273:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer wrapperInstance -> wrapperInstance
    416:417:void <init>(java.lang.Class,java.lang.Character) -> <init>
    423:448:java.lang.Character deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    405:405:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    405:405:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    411:412:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer wrapperInstance -> wrapperInstance
    679:680:void <init>(java.lang.Class,java.lang.Double) -> <init>
    684:684:java.lang.Double deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    693:693:java.lang.Double deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    698:741:java.lang.Double _parseDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDouble
    669:669:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    669:669:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    669:669:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    675:676:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer wrapperInstance -> wrapperInstance
    607:608:void <init>(java.lang.Class,java.lang.Float) -> <init>
    613:613:java.lang.Float deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    620:665:java.lang.Float _parseFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseFloat
    597:597:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    597:597:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    603:604:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer wrapperInstance -> wrapperInstance
    462:463:void <init>(java.lang.Class,java.lang.Integer) -> <init>
    467:467:boolean isCachable() -> isCachable
    471:474:java.lang.Integer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    483:486:java.lang.Integer deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    491:531:java.lang.Integer _parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseInteger
    452:452:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    452:452:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    452:452:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    458:459:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer wrapperInstance -> wrapperInstance
    545:546:void <init>(java.lang.Class,java.lang.Long) -> <init>
    550:550:boolean isCachable() -> isCachable
    554:557:java.lang.Long deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    562:593:java.lang.Long _parseLong(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseLong
    535:535:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    535:535:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    541:542:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer instance -> instance
    763:764:void <init>() -> <init>
    769:833:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    847:854:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    760:760:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer:
    java.lang.Object _nullValue -> _nullValue
    java.lang.Object _emptyValue -> _emptyValue
    boolean _primitive -> _primitive
    132:136:void <init>(java.lang.Class,java.lang.Object,java.lang.Object) -> <init>
    155:160:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    165:165:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer wrapperInstance -> wrapperInstance
    349:350:void <init>(java.lang.Class,java.lang.Short) -> <init>
    356:356:java.lang.Short deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    361:401:java.lang.Short _parseShort(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseShort
    338:338:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    338:338:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    344:345:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer -> com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer:
    java.lang.Object[] NO_OBJECTS -> NO_OBJECTS
    boolean _untyped -> _untyped
    java.lang.Class _elementClass -> _elementClass
    com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer -> _elementDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer -> _elementTypeDeserializer
    64:69:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    75:81:void <init>(com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    100:105:com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    114:114:boolean isCachable() -> isCachable
    121:137:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    148:148:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    154:154:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    160:160:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    174:217:java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    227:227:java.lang.Object[] deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    234:284:java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> deserialize
    297:303:java.lang.Byte[] deserializeFromBase64(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromBase64
    310:355:java.lang.Object[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleNonArray
    21:21:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    28:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers:
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    java.lang.Object _emptyValue -> _emptyValue
    com.fasterxml.jackson.databind.deser.NullValueProvider _nuller -> _nuller
    54:57:void <init>(java.lang.Class) -> <init>
    64:67:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    72:97:com.fasterxml.jackson.databind.JsonDeserializer forType(java.lang.Class) -> forType
    104:121:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    java.lang.Object _constructEmpty() -> _constructEmpty
    155:155:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    161:161:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    166:170:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    179:179:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    185:193:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    228:240:java.lang.Object handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleNonArray
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser:
    369:369:void <init>() -> <init>
    371:372:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    377:377:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    382:382:boolean[] _constructEmpty() -> _constructEmpty
    389:423:boolean[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    429:429:boolean[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    434:438:boolean[] _concat(boolean[],boolean[]) -> _concat
    363:363:java.lang.Object _constructEmpty() -> _constructEmpty
    363:363:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    363:363:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    363:363:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser:
    452:452:void <init>() -> <init>
    454:455:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    460:460:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    465:465:byte[] _constructEmpty() -> _constructEmpty
    471:533:byte[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    541:558:byte[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    563:567:byte[] _concat(byte[],byte[]) -> _concat
    446:446:java.lang.Object _constructEmpty() -> _constructEmpty
    446:446:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    446:446:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    446:446:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser:
    260:260:void <init>() -> <init>
    269:269:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    274:274:char[] _constructEmpty() -> _constructEmpty
    284:337:char[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    344:344:char[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    349:353:char[] _concat(char[],char[]) -> _concat
    254:254:java.lang.Object _constructEmpty() -> _constructEmpty
    254:254:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    254:254:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    254:254:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser:
    878:878:void <init>() -> <init>
    880:881:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    886:886:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    891:891:double[] _constructEmpty() -> _constructEmpty
    897:923:double[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    929:929:double[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    934:938:double[] _concat(double[],double[]) -> _concat
    872:872:java.lang.Object _constructEmpty() -> _constructEmpty
    872:872:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    872:872:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    872:872:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser:
    807:807:void <init>() -> <init>
    809:810:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    815:815:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    820:820:float[] _constructEmpty() -> _constructEmpty
    826:853:float[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    859:859:float[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    864:868:float[] _concat(float[],float[]) -> _concat
    801:801:java.lang.Object _constructEmpty() -> _constructEmpty
    801:801:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    801:801:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    801:801:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser:
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser instance -> instance
    653:653:void <init>() -> <init>
    655:656:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    661:661:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    666:666:int[] _constructEmpty() -> _constructEmpty
    672:704:int[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    710:710:int[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    715:719:int[] _concat(int[],int[]) -> _concat
    645:645:java.lang.Object _constructEmpty() -> _constructEmpty
    645:645:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    645:645:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    645:645:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    651:651:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser:
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser instance -> instance
    731:731:void <init>() -> <init>
    733:734:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    739:739:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    744:744:long[] _constructEmpty() -> _constructEmpty
    750:782:long[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    788:788:long[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    793:797:long[] _concat(long[],long[]) -> _concat
    723:723:java.lang.Object _constructEmpty() -> _constructEmpty
    723:723:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    723:723:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    723:723:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    729:729:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser:
    577:577:void <init>() -> <init>
    579:580:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    585:585:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    590:590:short[] _constructEmpty() -> _constructEmpty
    596:626:short[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    632:632:short[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    637:641:short[] _concat(short[],short[]) -> _concat
    571:571:java.lang.Object _constructEmpty() -> _constructEmpty
    571:571:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    571:571:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    571:571:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer -> com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer:
    com.fasterxml.jackson.databind.JavaType _fullType -> _fullType
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    49:54:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    67:81:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    101:101:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    125:125:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object referenceValue(java.lang.Object) -> referenceValue
    java.lang.Object updateReference(java.lang.Object,java.lang.Object) -> updateReference
    java.lang.Object getReferenced(java.lang.Object) -> getReferenced
    156:156:com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    165:165:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    179:187:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    195:214:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    221:240:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer -> com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer:
    16:16:void <init>() -> <init>
    21:72:java.lang.StackTraceElement deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    94:94:java.lang.StackTraceElement constructValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> constructValue
    11:11:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer -> com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer:
    com.fasterxml.jackson.databind.util.Converter _converter -> _converter
    com.fasterxml.jackson.databind.JavaType _delegateType -> _delegateType
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    65:69:void <init>(com.fasterxml.jackson.databind.util.Converter) -> <init>
    75:79:void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    99:100:com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> withDelegate
    115:118:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    125:135:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    152:152:java.lang.Class handledType() -> handledType
    157:157:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    169:173:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    191:195:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    203:206:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    222:222:java.lang.Object _handleIncompatibleUpdateValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _handleIncompatibleUpdateValue
    246:246:java.lang.Object convertValue(java.lang.Object) -> convertValue
com.fasterxml.jackson.databind.deser.std.StdDeserializer -> com.fasterxml.jackson.databind.deser.std.StdDeserializer:
    int F_MASK_INT_COERCIONS -> F_MASK_INT_COERCIONS
    int F_MASK_ACCEPT_ARRAYS -> F_MASK_ACCEPT_ARRAYS
    java.lang.Class _valueClass -> _valueClass
    61:63:void <init>(java.lang.Class) -> <init>
    65:68:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    76:78:void <init>(com.fasterxml.jackson.databind.deser.std.StdDeserializer) -> <init>
    87:87:java.lang.Class handledType() -> handledType
    106:106:com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    115:115:boolean isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> isDefaultDeserializer
    119:119:boolean isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer) -> isDefaultKeyDeserializer
    136:136:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    149:187:boolean _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBooleanPrimitive
    197:200:boolean _parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBooleanFromInt
    206:213:byte _parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBytePrimitive
    219:226:short _parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseShortPrimitive
    232:262:int _parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseIntPrimitive
    271:285:int _parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseIntPrimitive
    292:320:long _parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseLongPrimitive
    329:334:long _parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseLongPrimitive
    341:367:float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseFloatPrimitive
    376:396:float _parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseFloatPrimitive
    402:428:double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDoublePrimitive
    437:459:double _parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseDoublePrimitive
    465:485:java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDate
    493:508:java.util.Date _parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDateFromArray
    519:524:java.util.Date _parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDate
    536:539:double parseDouble(java.lang.String) -> parseDouble
    550:569:java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseString
    582:599:java.lang.Object _deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromEmpty
    610:610:boolean _hasTextualNull(java.lang.String) -> _hasTextualNull
    617:617:boolean _isEmptyOrTextualNull(java.lang.String) -> _isEmptyOrTextualNull
    621:621:boolean _isNegInf(java.lang.String) -> _isNegInf
    625:625:boolean _isPosInf(java.lang.String) -> _isPosInf
    628:628:boolean _isNaN(java.lang.String) -> _isNaN
    656:675:java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromArray
    711:714:void _failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _failDoubleToIntCoercion
    729:736:java.lang.Object _coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _coerceIntegral
    747:750:java.lang.Object _coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> _coerceNullToken
    763:773:java.lang.Object _coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> _coerceTextualNull
    786:796:java.lang.Object _coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> _coerceEmptyString
    802:807:void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext) -> _verifyNullForPrimitive
    816:827:void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _verifyNullForPrimitiveCoercion
    833:837:void _verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _verifyNullForScalarCoercion
    842:847:void _verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _verifyStringForScalarCoercion
    852:860:void _verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser) -> _verifyNumberForScalarCoercion
    865:868:void _reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String) -> _reportFailedNullCoerce
    883:897:java.lang.String _coercedTypeDesc() -> _coercedTypeDesc
    919:919:com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findDeserializer
    928:941:boolean _isIntNumber(java.lang.String) -> _isIntNumber
    964:979:com.fasterxml.jackson.databind.JsonDeserializer findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer) -> findConvertingContentDeserializer
    1000:1004:com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> findFormatOverrides
    1020:1024:java.lang.Boolean findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Feature) -> findFormatFeature
    1038:1042:com.fasterxml.jackson.databind.deser.NullValueProvider findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata) -> findValueNullProvider
    1057:1065:com.fasterxml.jackson.databind.deser.NullValueProvider findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer) -> findContentNullProvider
    1071:1074:com.fasterxml.jackson.annotation.Nulls findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> findContentNullStyle
    1082:1121:com.fasterxml.jackson.databind.deser.NullValueProvider _findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer) -> _findNullProvider
    1148:1159:void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    1164:1169:void handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleMissingEndArrayForSingle
    1173:1177:void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _verifyEndArrayForSingle
    1189:1189:boolean _neitherNull(java.lang.Object,java.lang.Object) -> _neitherNull
    1198:1198:boolean _byteOverflow(int) -> _byteOverflow
    1205:1205:boolean _shortOverflow(int) -> _shortOverflow
    1212:1212:boolean _intOverflow(long) -> _intOverflow
    1219:1222:java.lang.Number _nonNullNumber(java.lang.Number) -> _nonNullNumber
    43:48:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer:
    int _kind -> _kind
    java.lang.Class _keyClass -> _keyClass
    com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser -> _deser
    61:62:void <init>(int,java.lang.Class) -> <init>
    64:68:void <init>(int,java.lang.Class,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer) -> <init>
    75:117:com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer forType(java.lang.Class) -> forType
    124:139:java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
    146:236:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
    247:247:int _parseInt(java.lang.String) -> _parseInt
    251:251:long _parseLong(java.lang.String) -> _parseLong
    255:255:double _parseDouble(java.lang.String) -> _parseDouble
    260:260:java.lang.Object _weirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception) -> _weirdKey
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD:
    java.lang.Class _keyClass -> _keyClass
    com.fasterxml.jackson.databind.JsonDeserializer _delegate -> _delegate
    316:319:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    326:341:java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD:
    com.fasterxml.jackson.databind.util.EnumResolver _byNameResolver -> _byNameResolver
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _factory -> _factory
    com.fasterxml.jackson.databind.util.EnumResolver _byToStringResolver -> _byToStringResolver
    java.lang.Enum _enumDefaultValue -> _enumDefaultValue
    368:372:void <init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    377:397:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
    402:409:com.fasterxml.jackson.databind.util.EnumResolver _getToStringResolver(com.fasterxml.jackson.databind.DeserializationContext) -> _getToStringResolver
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer:
    java.lang.reflect.Constructor _ctor -> _ctor
    424:426:void <init>(java.lang.reflect.Constructor) -> <init>
    431:431:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer:
    java.lang.reflect.Method _factoryMethod -> _factoryMethod
    446:448:void <init>(java.lang.reflect.Method) -> <init>
    453:453:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD:
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sString -> sString
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sObject -> sObject
    276:276:void <init>(java.lang.Class) -> <init>
    280:286:com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class) -> forType
    291:291:java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
    273:274:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers:
    28:28:void <init>() -> <init>
    34:34:com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver) -> constructEnumKeyDeserializer
    39:39:com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> constructEnumKeyDeserializer
    45:45:com.fasterxml.jackson.databind.KeyDeserializer constructDelegatingKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> constructDelegatingKeyDeserializer
    54:74:com.fasterxml.jackson.databind.KeyDeserializer findStringBasedKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findStringBasedKeyDeserializer
    87:92:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findKeyDeserializer
com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer -> com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer:
    18:18:void <init>(java.lang.Class) -> <init>
    22:22:void <init>(com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer) -> <init>
    26:26:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    36:38:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    47:47:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    60:60:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator -> com.fasterxml.jackson.databind.deser.std.StdValueInstantiator:
    java.lang.String _valueTypeDesc -> _valueTypeDesc
    java.lang.Class _valueClass -> _valueClass
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _defaultCreator -> _defaultCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _withArgsCreator -> _withArgsCreator
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _constructorArguments -> _constructorArguments
    com.fasterxml.jackson.databind.JavaType _delegateType -> _delegateType
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _delegateArguments -> _delegateArguments
    com.fasterxml.jackson.databind.JavaType _arrayDelegateType -> _arrayDelegateType
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _arrayDelegateCreator -> _arrayDelegateCreator
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _arrayDelegateArguments -> _arrayDelegateArguments
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromStringCreator -> _fromStringCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromIntCreator -> _fromIntCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromLongCreator -> _fromLongCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromDoubleCreator -> _fromDoubleCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBooleanCreator -> _fromBooleanCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter _incompleteParameter -> _incompleteParameter
    87:90:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> <init>
    130:136:void configureFromObjectSettings(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> configureFromObjectSettings
    143:146:void configureFromArraySettings(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> configureFromArraySettings
    149:150:void configureFromStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromStringCreator
    153:154:void configureFromIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromIntCreator
    157:158:void configureFromLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromLongCreator
    161:162:void configureFromDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromDoubleCreator
    165:166:void configureFromBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromBooleanCreator
    180:180:java.lang.String getValueTypeDesc() -> getValueTypeDesc
    185:185:java.lang.Class getValueClass() -> getValueClass
    190:190:boolean canCreateFromString() -> canCreateFromString
    195:195:boolean canCreateFromInt() -> canCreateFromInt
    200:200:boolean canCreateFromLong() -> canCreateFromLong
    205:205:boolean canCreateFromDouble() -> canCreateFromDouble
    210:210:boolean canCreateFromBoolean() -> canCreateFromBoolean
    215:215:boolean canCreateUsingDefault() -> canCreateUsingDefault
    220:220:boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    225:225:boolean canCreateUsingArrayDelegate() -> canCreateUsingArrayDelegate
    230:230:boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    235:235:boolean canInstantiate() -> canInstantiate
    244:244:com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getDelegateType
    249:249:com.fasterxml.jackson.databind.JavaType getArrayDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getArrayDelegateType
    254:254:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    266:272:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    279:285:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    293:298:java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingDelegate
    304:310:java.lang.Object createUsingArrayDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingArrayDelegate
    322:328:java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> createFromString
    337:356:java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> createFromInt
    362:369:java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> createFromLong
    377:384:java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> createFromDouble
    392:399:java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> createFromBoolean
    412:412:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    417:417:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getArrayDelegateCreator() -> getArrayDelegateCreator
    422:422:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    432:432:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getIncompleteParameter() -> getIncompleteParameter
    481:484:com.fasterxml.jackson.databind.JsonMappingException wrapAsJsonMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable) -> wrapAsJsonMappingException
    495:503:com.fasterxml.jackson.databind.JsonMappingException rewrapCtorProblem(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable) -> rewrapCtorProblem
    518:540:java.lang.Object _createUsingDelegate(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _createUsingDelegate
com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer -> com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer:
    java.lang.String[] NO_STRINGS -> NO_STRINGS
    com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer instance -> instance
    com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer -> _elementDeserializer
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> _nullProvider
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    boolean _skipNullValues -> _skipNullValues
    65:66:void <init>() -> <init>
    71:76:void <init>(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    80:80:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    86:86:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    91:91:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    102:124:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    131:171:java.lang.String[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    180:231:java.lang.String[] _deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String[]) -> _deserializeCustom
    236:236:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    244:292:java.lang.String[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String[]) -> deserialize
    298:314:java.lang.String[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleNonArray
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    31:33:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer -> com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer:
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    60:61:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    69:73:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    79:83:com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    91:91:boolean isCachable() -> isCachable
    104:132:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    144:145:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    150:150:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    164:169:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    178:210:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> deserialize
    223:242:java.util.Collection deserializeUsingCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection,com.fasterxml.jackson.databind.JsonDeserializer) -> deserializeUsingCustom
    249:249:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    262:284:java.util.Collection handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> handleNonArray
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.StringDeserializer -> com.fasterxml.jackson.databind.deser.std.StringDeserializer:
    com.fasterxml.jackson.databind.deser.std.StringDeserializer instance -> instance
    20:20:void <init>() -> <init>
    24:24:boolean isCachable() -> isCachable
    28:28:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    34:63:java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    71:71:java.lang.String deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    10:10:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    10:10:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    18:18:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer -> com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer:
    30:33:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializer) -> <init>
    39:40:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    44:51:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    64:159:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer -> com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer:
    27:27:void <init>() -> <init>
    31:31:com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    35:35:com.fasterxml.jackson.databind.util.TokenBuffer createBufferInstance(com.fasterxml.jackson.core.JsonParser) -> createBufferInstance
    23:23:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer -> com.fasterxml.jackson.databind.deser.std.UUIDDeserializer:
    int[] HEX_DIGITS -> HEX_DIGITS
    27:27:void <init>() -> <init>
    34:63:java.util.UUID _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    69:73:java.util.UUID _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
    79:79:java.util.UUID _badFormat(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _badFormat
    84:84:int intFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> intFromChars
    91:91:int shortFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> shortFromChars
    96:108:int byteFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> byteFromChars
    114:114:int _badChar(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext,char) -> _badChar
    121:126:java.util.UUID _fromBytes(byte[],com.fasterxml.jackson.databind.DeserializationContext) -> _fromBytes
    130:134:long _long(byte[],int) -> _long
    138:138:int _int(byte[],int) -> _int
    13:13:java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
    13:13:java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    17:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer -> com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer:
    java.lang.Object[] NO_OBJECTS -> NO_OBJECTS
    com.fasterxml.jackson.databind.JsonDeserializer _mapDeserializer -> _mapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _listDeserializer -> _listDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _stringDeserializer -> _stringDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _numberDeserializer -> _numberDeserializer
    com.fasterxml.jackson.databind.JavaType _listType -> _listType
    com.fasterxml.jackson.databind.JavaType _mapType -> _mapType
    boolean _nonMerging -> _nonMerging
    81:82:void <init>() -> <init>
    85:89:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> <init>
    112:120:void <init>(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,boolean) -> <init>
    137:173:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    180:180:com.fasterxml.jackson.databind.JsonDeserializer _findCustomDeser(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _findCustomDeser
    184:184:com.fasterxml.jackson.databind.JsonDeserializer _clearIfStdImpl(com.fasterxml.jackson.databind.JsonDeserializer) -> _clearIfStdImpl
    196:208:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    227:227:boolean isCachable() -> isCachable
    233:233:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    239:299:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    306:354:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    362:426:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    441:475:java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArray
    483:486:java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> mapArray
    496:545:java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapObject
    554:568:java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArrayToArray
    574:598:java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> mapObject
    39:39:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla -> com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla:
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla std -> std
    boolean _nonMerging -> _nonMerging
    621:621:void <init>() -> <init>
    624:626:void <init>(boolean) -> <init>
    629:632:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla instance(boolean) -> instance
    639:639:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    645:702:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    708:740:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    748:806:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    811:842:java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArray
    849:860:java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArrayToArray
    869:897:java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapObject
    614:614:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.exc.IgnoredPropertyException -> com.fasterxml.jackson.databind.exc.IgnoredPropertyException:
    28:29:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    57:68:com.fasterxml.jackson.databind.exc.IgnoredPropertyException from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection) -> from
com.fasterxml.jackson.databind.exc.InvalidDefinitionException -> com.fasterxml.jackson.databind.exc.InvalidDefinitionException:
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition _property -> _property
    30:34:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    38:42:void <init>(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    46:50:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    54:58:void <init>(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    62:62:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> from
    67:67:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> from
    72:72:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> from
    77:77:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> from
com.fasterxml.jackson.databind.exc.InvalidFormatException -> com.fasterxml.jackson.databind.exc.InvalidFormatException:
    java.lang.Object _value -> _value
    60:62:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class) -> <init>
    67:67:com.fasterxml.jackson.databind.exc.InvalidFormatException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class) -> from
com.fasterxml.jackson.databind.exc.InvalidNullException -> com.fasterxml.jackson.databind.exc.InvalidNullException:
    com.fasterxml.jackson.databind.PropertyName _propertyName -> _propertyName
    33:35:void <init>(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.PropertyName) -> <init>
    40:46:com.fasterxml.jackson.databind.exc.InvalidNullException from(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType) -> from
com.fasterxml.jackson.databind.exc.InvalidTypeIdException -> com.fasterxml.jackson.databind.exc.InvalidTypeIdException:
    com.fasterxml.jackson.databind.JavaType _baseType -> _baseType
    java.lang.String _typeId -> _typeId
    36:39:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> <init>
    43:43:com.fasterxml.jackson.databind.exc.InvalidTypeIdException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> from
com.fasterxml.jackson.databind.exc.MismatchedInputException -> com.fasterxml.jackson.databind.exc.MismatchedInputException:
    java.lang.Class _targetType -> _targetType
    35:36:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    39:40:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    43:45:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Class) -> <init>
    48:50:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    59:59:com.fasterxml.jackson.databind.exc.MismatchedInputException from(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> from
    63:63:com.fasterxml.jackson.databind.exc.MismatchedInputException from(com.fasterxml.jackson.core.JsonParser,java.lang.Class,java.lang.String) -> from
    67:68:com.fasterxml.jackson.databind.exc.MismatchedInputException setTargetType(com.fasterxml.jackson.databind.JavaType) -> setTargetType
com.fasterxml.jackson.databind.exc.PropertyBindingException -> com.fasterxml.jackson.databind.exc.PropertyBindingException:
    java.lang.Class _referringClass -> _referringClass
    java.lang.String _propertyName -> _propertyName
    java.util.Collection _propertyIds -> _propertyIds
    java.lang.String _propertiesAsString -> _propertiesAsString
    52:56:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    84:112:java.lang.String getMessageSuffix() -> getMessageSuffix
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException -> com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:
    24:25:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    53:64:com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection) -> from
com.fasterxml.jackson.databind.ext.Java7Support -> com.fasterxml.jackson.databind.ext.Java7Support:
    com.fasterxml.jackson.databind.ext.Java7Support IMPL -> IMPL
    17:17:void <init>() -> <init>
    35:35:com.fasterxml.jackson.databind.ext.Java7Support instance() -> instance
    java.lang.Boolean findTransient(com.fasterxml.jackson.databind.introspect.Annotated) -> findTransient
    java.lang.Boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    com.fasterxml.jackson.databind.PropertyName findConstructorName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> findConstructorName
    com.fasterxml.jackson.databind.JsonDeserializer getDeserializerForJavaNioFilePath(java.lang.Class) -> getDeserializerForJavaNioFilePath
    com.fasterxml.jackson.databind.JsonSerializer getSerializerForJavaNioFilePath(java.lang.Class) -> getSerializerForJavaNioFilePath
    22:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.Java7SupportImpl -> com.fasterxml.jackson.databind.ext.Java7SupportImpl:
    java.lang.Class _bogus -> _bogus
    22:27:void <init>() -> <init>
    36:39:com.fasterxml.jackson.databind.JsonDeserializer getDeserializerForJavaNioFilePath(java.lang.Class) -> getDeserializerForJavaNioFilePath
    44:47:com.fasterxml.jackson.databind.JsonSerializer getSerializerForJavaNioFilePath(java.lang.Class) -> getSerializerForJavaNioFilePath
    52:56:java.lang.Boolean findTransient(com.fasterxml.jackson.databind.introspect.Annotated) -> findTransient
    61:67:java.lang.Boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    73:84:com.fasterxml.jackson.databind.PropertyName findConstructorName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> findConstructorName
com.fasterxml.jackson.databind.ext.NioPathDeserializer -> com.fasterxml.jackson.databind.ext.NioPathDeserializer:
    21:21:void <init>() -> <init>
    25:38:java.nio.file.Path deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    17:17:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.ext.NioPathSerializer -> com.fasterxml.jackson.databind.ext.NioPathSerializer:
    22:22:void <init>() -> <init>
    27:28:void serialize(java.nio.file.Path,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    37:41:void serializeWithType(java.nio.file.Path,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    18:18:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory -> com.fasterxml.jackson.databind.ext.OptionalHandlerFactory:
    java.lang.Class CLASS_DOM_NODE -> CLASS_DOM_NODE
    java.lang.Class CLASS_DOM_DOCUMENT -> CLASS_DOM_DOCUMENT
    com.fasterxml.jackson.databind.ext.Java7Support _jdk7Helper -> _jdk7Helper
    com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance -> instance
    78:78:void <init>() -> <init>
    89:112:com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    119:145:com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findDeserializer
    157:161:java.lang.Object instantiate(java.lang.String) -> instantiate
    174:182:boolean hasSuperClassStartingWith(java.lang.Class,java.lang.String) -> hasSuperClassStartingWith
    50:76:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.Annotated -> com.fasterxml.jackson.databind.introspect.Annotated:
    17:17:void <init>() -> <init>
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.Class getRawType() -> getRawType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.introspect.AnnotatedClass -> com.fasterxml.jackson.databind.introspect.AnnotatedClass:
    com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators NO_CREATORS -> NO_CREATORS
    com.fasterxml.jackson.databind.JavaType _type -> _type
    java.lang.Class _class -> _class
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> _bindings
    java.util.List _superTypes -> _superTypes
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    java.lang.Class _primaryMixIn -> _primaryMixIn
    com.fasterxml.jackson.databind.util.Annotations _classAnnotations -> _classAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators _creators -> _creators
    com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods -> _memberMethods
    java.util.List _fields -> _fields
    java.lang.Boolean _nonStaticInnerClass -> _nonStaticInnerClass
    133:143:void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.List,java.lang.Class,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    151:161:void <init>(java.lang.Class) -> <init>
    212:212:com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    222:222:java.lang.Class getAnnotated() -> getAnnotated
    228:228:java.lang.String getName() -> getName
    232:232:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    237:237:boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    242:242:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    247:247:java.lang.Class getRawType() -> getRawType
    264:264:com.fasterxml.jackson.databind.JavaType getType() -> getType
    274:274:com.fasterxml.jackson.databind.util.Annotations getAnnotations() -> getAnnotations
    278:278:boolean hasAnnotations() -> hasAnnotations
    282:282:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor getDefaultConstructor() -> getDefaultConstructor
    286:286:java.util.List getConstructors() -> getConstructors
    293:293:java.util.List getFactoryMethods() -> getFactoryMethods
    305:305:java.lang.Iterable memberMethods() -> memberMethods
    313:313:com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    321:321:java.lang.Iterable fields() -> fields
    329:333:boolean isNonStaticInnerClass() -> isNonStaticInnerClass
    343:354:java.util.List _fields() -> _fields
    358:372:com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _methods() -> _methods
    376:386:com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators _creators() -> _creators
    397:397:java.lang.String toString() -> toString
    402:402:int hashCode() -> hashCode
    407:411:boolean equals(java.lang.Object) -> equals
    16:16:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    20:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators -> com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators:
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor defaultConstructor -> defaultConstructor
    java.util.List constructors -> constructors
    java.util.List creatorMethods -> creatorMethods
    441:445:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,java.util.List,java.util.List) -> <init>
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver -> com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver:
    com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS -> NO_ANNOTATIONS
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> _intr
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> _bindings
    com.fasterxml.jackson.databind.JavaType _type -> _type
    java.lang.Class _class -> _class
    java.lang.Class _primaryMixin -> _primaryMixin
    36:45:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    47:61:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    66:69:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolve(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> resolve
    73:73:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> resolveWithoutSuperTypes
    88:91:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> resolveWithoutSuperTypes
    95:95:boolean skippableArray(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> skippableArray
    104:104:com.fasterxml.jackson.databind.introspect.AnnotatedClass createPrimordial(java.lang.Class) -> createPrimordial
    112:112:com.fasterxml.jackson.databind.introspect.AnnotatedClass createArrayType(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> createArrayType
    116:117:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveFully() -> resolveFully
    124:125:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes() -> resolveWithoutSuperTypes
    144:177:com.fasterxml.jackson.databind.util.Annotations resolveClassAnnotations(java.util.List) -> resolveClassAnnotations
    183:196:com.fasterxml.jackson.databind.introspect.AnnotationCollector _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.Class,java.lang.Class) -> _addClassMixIns
    202:213:com.fasterxml.jackson.databind.introspect.AnnotationCollector _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> _addAnnotationsIfNotPresent
    219:231:com.fasterxml.jackson.databind.introspect.AnnotationCollector _addFromBundleIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> _addFromBundleIfNotPresent
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor -> com.fasterxml.jackson.databind.introspect.AnnotatedConstructor:
    java.lang.reflect.Constructor _constructor -> _constructor
    32:37:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    52:52:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    62:62:java.lang.reflect.Constructor getAnnotated() -> getAnnotated
    68:68:java.lang.String getName() -> getName
    72:72:com.fasterxml.jackson.databind.JavaType getType() -> getType
    77:77:java.lang.Class getRawType() -> getRawType
    88:88:int getParameterCount() -> getParameterCount
    94:95:java.lang.Class getRawParameterType(int) -> getRawParameterType
    100:104:com.fasterxml.jackson.databind.JavaType getParameterType(int) -> getParameterType
    119:119:java.lang.Object call() -> call
    124:124:java.lang.Object call(java.lang.Object[]) -> call
    129:129:java.lang.Object call1(java.lang.Object) -> call1
    139:139:java.lang.Class getDeclaringClass() -> getDeclaringClass
    142:142:java.lang.reflect.Member getMember() -> getMember
    148:148:void setValue(java.lang.Object,java.lang.Object) -> setValue
    156:156:java.lang.Object getValue(java.lang.Object) -> getValue
    168:168:java.lang.String toString() -> toString
    173:173:int hashCode() -> hashCode
    178:179:boolean equals(java.lang.Object) -> equals
    8:8:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    8:8:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector -> com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector:
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext -> _typeContext
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor -> _defaultConstructor
    37:39:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext) -> <init>
    46:46:com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators collectCreators(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> collectCreators
    56:81:com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators collect(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> collect
    92:174:java.util.List _findPotentialConstructors(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _findPotentialConstructors
    179:233:java.util.List _findPotentialFactories(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _findPotentialFactories
    239:243:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor constructDefaultConstructor(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> constructDefaultConstructor
    252:302:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor constructNonDefaultConstructor(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> constructNonDefaultConstructor
    308:317:com.fasterxml.jackson.databind.introspect.AnnotatedMethod constructFactoryCreator(java.lang.reflect.Method,java.lang.reflect.Method) -> constructFactoryCreator
    323:333:com.fasterxml.jackson.databind.introspect.AnnotationMap[] collectAnnotations(java.lang.annotation.Annotation[][],java.lang.annotation.Annotation[][]) -> collectAnnotations
    339:343:com.fasterxml.jackson.databind.introspect.AnnotationMap collectAnnotations(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> collectAnnotations
    347:351:com.fasterxml.jackson.databind.introspect.AnnotationMap collectAnnotations(java.lang.reflect.AnnotatedElement,java.lang.reflect.AnnotatedElement) -> collectAnnotations
    356:356:boolean isIncludableConstructor(java.lang.reflect.Constructor) -> isIncludableConstructor
com.fasterxml.jackson.databind.introspect.AnnotatedField -> com.fasterxml.jackson.databind.introspect.AnnotatedField:
    java.lang.reflect.Field _field -> _field
    39:41:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> <init>
    45:45:com.fasterxml.jackson.databind.introspect.AnnotatedField withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    65:65:java.lang.reflect.Field getAnnotated() -> getAnnotated
    68:68:int getModifiers() -> getModifiers
    71:71:java.lang.String getName() -> getName
    75:75:java.lang.Class getRawType() -> getRawType
    86:86:com.fasterxml.jackson.databind.JavaType getType() -> getType
    96:96:java.lang.Class getDeclaringClass() -> getDeclaringClass
    99:99:java.lang.reflect.Member getMember() -> getMember
    105:110:void setValue(java.lang.Object,java.lang.Object) -> setValue
    116:118:java.lang.Object getValue(java.lang.Object) -> getValue
    134:134:boolean isTransient() -> isTransient
    138:138:int hashCode() -> hashCode
    143:144:boolean equals(java.lang.Object) -> equals
    150:150:java.lang.String toString() -> toString
    12:12:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    12:12:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector -> com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector:
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    26:29:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    36:36:java.util.List collectFields(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType) -> collectFields
    41:49:java.util.List collect(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType) -> collect
    58:90:java.util.Map _findFields(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.Map) -> _findFields
    101:116:void _addFieldMixIns(java.lang.Class,java.lang.Class,java.util.Map) -> _addFieldMixIns
    121:130:boolean _isIncludableField(java.lang.reflect.Field) -> _isIncludableField
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder -> com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder:
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext typeContext -> typeContext
    java.lang.reflect.Field field -> field
    com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations -> annotations
    139:143:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Field) -> <init>
    146:146:com.fasterxml.jackson.databind.introspect.AnnotatedField build() -> build
com.fasterxml.jackson.databind.introspect.AnnotatedMember -> com.fasterxml.jackson.databind.introspect.AnnotatedMember:
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext -> _typeContext
    com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations -> _annotations
    36:39:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> <init>
    46:49:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> <init>
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    67:67:java.lang.String getFullName() -> getFullName
    85:88:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    93:96:boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    101:104:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    121:121:com.fasterxml.jackson.databind.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    137:141:void fixAccess(boolean) -> fixAccess
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
com.fasterxml.jackson.databind.introspect.AnnotatedMethod -> com.fasterxml.jackson.databind.introspect.AnnotatedMethod:
    java.lang.reflect.Method _method -> _method
    java.lang.Class[] _paramClasses -> _paramClasses
    37:42:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    57:57:com.fasterxml.jackson.databind.introspect.AnnotatedMethod withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    62:62:java.lang.reflect.Method getAnnotated() -> getAnnotated
    68:68:java.lang.String getName() -> getName
    77:77:com.fasterxml.jackson.databind.JavaType getType() -> getType
    87:87:java.lang.Class getRawType() -> getRawType
    104:104:java.lang.Object call() -> call
    109:109:java.lang.Object call(java.lang.Object[]) -> call
    114:114:java.lang.Object call1(java.lang.Object) -> call1
    122:122:java.lang.Object callOnWith(java.lang.Object,java.lang.Object[]) -> callOnWith
    133:133:int getParameterCount() -> getParameterCount
    139:140:java.lang.Class getRawParameterType(int) -> getRawParameterType
    145:149:com.fasterxml.jackson.databind.JavaType getParameterType(int) -> getParameterType
    163:163:java.lang.Class getDeclaringClass() -> getDeclaringClass
    166:166:java.lang.reflect.Method getMember() -> getMember
    172:177:void setValue(java.lang.Object,java.lang.Object) -> setValue
    183:185:java.lang.Object getValue(java.lang.Object) -> getValue
    198:198:java.lang.String getFullName() -> getFullName
    203:206:java.lang.Class[] getRawParameterTypes() -> getRawParameterTypes
    215:215:java.lang.Class getRawReturnType() -> getRawReturnType
    226:227:boolean hasReturnType() -> hasReturnType
    238:238:java.lang.String toString() -> toString
    243:243:int hashCode() -> hashCode
    248:249:boolean equals(java.lang.Object) -> equals
    8:8:java.lang.reflect.Member getMember() -> getMember
    8:8:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    8:8:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector -> com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector:
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    22:24:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    32:32:com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap collectMethods(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType,java.util.List,java.lang.Class) -> collectMethods
    39:96:com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap collect(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.List,java.lang.Class) -> collect
    103:143:void _addMemberMethods(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class) -> _addMemberMethods
    148:168:void _addMethodMixIns(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class) -> _addMethodMixIns
    172:181:boolean _isIncludableMemberMethod(java.lang.reflect.Method) -> _isIncludableMemberMethod
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder -> com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder:
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext typeContext -> typeContext
    java.lang.reflect.Method method -> method
    com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations -> annotations
    192:196:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationCollector) -> <init>
    199:204:com.fasterxml.jackson.databind.introspect.AnnotatedMethod build() -> build
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap -> com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap:
    java.util.Map _methods -> _methods
    16:16:void <init>() -> <init>
    21:23:void <init>(java.util.Map) -> <init>
    31:34:com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[]) -> find
    54:57:java.util.Iterator iterator() -> iterator
com.fasterxml.jackson.databind.introspect.AnnotatedParameter -> com.fasterxml.jackson.databind.introspect.AnnotatedParameter:
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _owner -> _owner
    com.fasterxml.jackson.databind.JavaType _type -> _type
    int _index -> _index
    45:49:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap,int) -> <init>
    53:56:com.fasterxml.jackson.databind.introspect.AnnotatedParameter withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    70:70:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    84:84:java.lang.String getName() -> getName
    88:88:java.lang.Class getRawType() -> getRawType
    93:93:com.fasterxml.jackson.databind.JavaType getType() -> getType
    110:110:java.lang.Class getDeclaringClass() -> getDeclaringClass
    118:118:java.lang.reflect.Member getMember() -> getMember
    124:124:void setValue(java.lang.Object,java.lang.Object) -> setValue
    131:131:java.lang.Object getValue(java.lang.Object) -> getValue
    149:149:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getOwner() -> getOwner
    156:156:int getIndex() -> getIndex
    166:166:int hashCode() -> hashCode
    171:176:boolean equals(java.lang.Object) -> equals
    181:181:java.lang.String toString() -> toString
    15:15:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
com.fasterxml.jackson.databind.introspect.AnnotatedWithParams -> com.fasterxml.jackson.databind.introspect.AnnotatedWithParams:
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] _paramAnnotations -> _paramAnnotations
    31:33:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    39:41:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    65:66:com.fasterxml.jackson.databind.introspect.AnnotatedParameter replaceParameterAnnotations(int,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> replaceParameterAnnotations
    77:82:com.fasterxml.jackson.databind.introspect.AnnotationMap getParameterAnnotations(int) -> getParameterAnnotations
    86:86:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getParameter(int) -> getParameter
    int getParameterCount() -> getParameterCount
    java.lang.Class getRawParameterType(int) -> getRawParameterType
    com.fasterxml.jackson.databind.JavaType getParameterType(int) -> getParameterType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
com.fasterxml.jackson.databind.introspect.AnnotationCollector -> com.fasterxml.jackson.databind.introspect.AnnotationCollector:
    com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS -> NO_ANNOTATIONS
    java.lang.Object _data -> _data
    25:27:void <init>(java.lang.Object) -> <init>
    29:29:com.fasterxml.jackson.databind.util.Annotations emptyAnnotations() -> emptyAnnotations
    32:32:com.fasterxml.jackson.databind.introspect.AnnotationCollector emptyCollector() -> emptyCollector
    com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    18:18:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector:
    com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector instance -> instance
    66:66:void <init>(java.lang.Object) -> <init>
    70:70:com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    75:75:com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    79:79:boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    83:83:com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    64:64:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector:
    java.util.HashMap _annotations -> _annotations
    133:137:void <init>(java.lang.Object,java.lang.Class,java.lang.annotation.Annotation,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    141:147:com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    152:156:com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    161:161:boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    166:167:com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations:
    188:188:void <init>() -> <init>
    192:192:java.lang.annotation.Annotation get(java.lang.Class) -> get
    197:197:boolean has(java.lang.Class) -> has
    202:202:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    207:207:int size() -> size
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation:
    java.lang.Class _type -> _type
    java.lang.annotation.Annotation _value -> _value
    219:222:void <init>(java.lang.Class,java.lang.annotation.Annotation) -> <init>
    227:230:java.lang.annotation.Annotation get(java.lang.Class) -> get
    235:235:boolean has(java.lang.Class) -> has
    240:245:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    250:250:int size() -> size
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector:
    java.lang.Class _type -> _type
    java.lang.annotation.Annotation _value -> _value
    94:97:void <init>(java.lang.Object,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    101:101:com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    106:106:com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    111:111:boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    116:122:com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations:
    java.lang.Class _type1 -> _type1
    java.lang.Class _type2 -> _type2
    java.lang.annotation.Annotation _value1 -> _value1
    java.lang.annotation.Annotation _value2 -> _value2
    263:268:void <init>(java.lang.Class,java.lang.annotation.Annotation,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    273:279:java.lang.annotation.Annotation get(java.lang.Class) -> get
    284:284:boolean has(java.lang.Class) -> has
    289:294:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    299:299:int size() -> size
com.fasterxml.jackson.databind.introspect.AnnotationMap -> com.fasterxml.jackson.databind.introspect.AnnotationMap:
    java.util.HashMap _annotations -> _annotations
    18:18:void <init>() -> <init>
    21:23:com.fasterxml.jackson.databind.introspect.AnnotationMap of(java.lang.Class,java.lang.annotation.Annotation) -> of
    26:28:void <init>(java.util.HashMap) -> <init>
    40:43:java.lang.annotation.Annotation get(java.lang.Class) -> get
    49:52:boolean has(java.lang.Class) -> has
    63:70:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    91:106:com.fasterxml.jackson.databind.introspect.AnnotationMap merge(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> merge
    111:111:int size() -> size
    134:134:boolean add(java.lang.annotation.Annotation) -> add
    139:142:java.lang.String toString() -> toString
    152:156:boolean _add(java.lang.annotation.Annotation) -> _add
com.fasterxml.jackson.databind.introspect.BasicBeanDescription -> com.fasterxml.jackson.databind.introspect.BasicBeanDescription:
    java.lang.Class[] NO_VIEWS -> NO_VIEWS
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector _propCollector -> _propCollector
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _classInfo -> _classInfo
    java.lang.Class[] _defaultViews -> _defaultViews
    boolean _defaultViewsResolved -> _defaultViewsResolved
    java.util.List _properties -> _properties
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo _objectIdInfo -> _objectIdInfo
    96:106:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> <init>
    115:126:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> <init>
    130:132:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> <init>
    139:139:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> forDeserialization
    147:147:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> forSerialization
    158:158:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forOtherUse(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forOtherUse
    163:166:java.util.List _properties() -> _properties
    184:192:boolean removeProperty(java.lang.String) -> removeProperty
    198:202:boolean addProperty(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> addProperty
    209:209:boolean hasProperty(com.fasterxml.jackson.databind.PropertyName) -> hasProperty
    217:222:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition findProperty(com.fasterxml.jackson.databind.PropertyName) -> findProperty
    232:232:com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    235:235:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    239:239:java.util.List findProperties() -> findProperties
    251:251:com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor() -> findJsonValueAccessor
    257:262:java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    267:267:boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    272:272:com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> getClassAnnotations
    292:292:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    298:328:com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterAccessor() -> findAnySetterAccessor
    333:336:java.util.Map findInjectables() -> findInjectables
    341:341:java.util.List getConstructors() -> getConstructors
    346:362:java.lang.Object instantiateBean(boolean) -> instantiateBean
    374:374:com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    388:406:com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> findExpectedFormat
    412:424:java.lang.Class[] findDefaultViews() -> findDefaultViews
    436:439:com.fasterxml.jackson.databind.util.Converter findSerializationConverter() -> findSerializationConverter
    450:456:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> findPropertyInclusion
    468:479:com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter() -> findAnyGetter
    485:504:java.util.List findBackReferences() -> findBackReferences
    532:548:java.util.List getFactoryMethods() -> getFactoryMethods
    554:568:java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    575:588:java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    595:623:boolean isFactoryMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isFactoryMethod
    650:650:java.lang.Class findPOJOBuilder() -> findPOJOBuilder
    657:657:com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig() -> findPOJOBuilderConfig
    664:667:com.fasterxml.jackson.databind.util.Converter findDeserializationConverter() -> findDeserializationConverter
    723:748:com.fasterxml.jackson.databind.util.Converter _createConverter(java.lang.Object) -> _createConverter
    31:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector -> com.fasterxml.jackson.databind.introspect.BasicClassIntrospector:
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription STRING_DESC -> STRING_DESC
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription BOOLEAN_DESC -> BOOLEAN_DESC
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription INT_DESC -> INT_DESC
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription LONG_DESC -> LONG_DESC
    com.fasterxml.jackson.databind.util.LRUMap _cachedFCA -> _cachedFCA
    65:68:void <init>() -> <init>
    86:98:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
    106:118:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    127:131:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    138:150:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    157:166:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
    191:191:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean,java.lang.String) -> collectProperties
    199:203:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectPropertiesWithBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean) -> collectPropertiesWithBuilder
    213:213:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.String) -> constructPropertyCollector
    222:238:com.fasterxml.jackson.databind.introspect.BasicBeanDescription _findStdTypeDesc(com.fasterxml.jackson.databind.JavaType) -> _findStdTypeDesc
    248:265:boolean _isStdJDKCollection(com.fasterxml.jackson.databind.JavaType) -> _isStdJDKCollection
    270:274:com.fasterxml.jackson.databind.introspect.BasicBeanDescription _findStdJdkCollectionDesc(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> _findStdJdkCollectionDesc
    282:282:com.fasterxml.jackson.databind.introspect.AnnotatedClass _resolveAnnotatedClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> _resolveAnnotatedClass
    16:16:com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
    16:16:com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    16:16:com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    16:16:com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    16:16:com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
    32:49:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition -> com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition:
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> EMPTY_INCLUDE
    20:20:void <init>() -> <init>
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    67:67:boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> hasName
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    108:108:boolean isExplicitlyNamed() -> isExplicitlyNamed
    com.fasterxml.jackson.databind.JavaType getPrimaryType() -> getPrimaryType
    java.lang.Class getRawPrimaryType() -> getRawPrimaryType
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    152:152:boolean couldDeserialize() -> couldDeserialize
    153:153:boolean couldSerialize() -> couldSerialize
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    178:178:java.util.Iterator getConstructorParameters() -> getConstructorParameters
    188:192:com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor() -> getAccessor
    201:208:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMutator() -> getMutator
    215:219:com.fasterxml.jackson.databind.introspect.AnnotatedMember getNonConstructorMutator() -> getNonConstructorMutator
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
    245:245:java.lang.Class[] findViews() -> findViews
    251:251:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType() -> findReferenceType
    257:258:java.lang.String findReferenceName() -> findReferenceName
    266:266:boolean isTypeId() -> isTypeId
    273:273:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo() -> findObjectIdInfo
    com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> findInclusion
    23:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.ClassIntrospector -> com.fasterxml.jackson.databind.introspect.ClassIntrospector:
    48:48:void <init>() -> <init>
    com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
    com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver -> com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver:
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
com.fasterxml.jackson.databind.introspect.CollectorBase -> com.fasterxml.jackson.databind.introspect.CollectorBase:
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS -> NO_ANNOTATION_MAPS
    java.lang.annotation.Annotation[] NO_ANNOTATIONS -> NO_ANNOTATIONS
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> _intr
    18:20:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector) -> <init>
    25:33:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(java.lang.annotation.Annotation[]) -> collectAnnotations
    37:44:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> collectAnnotations
    48:65:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> collectFromBundle
    73:82:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> collectDefaultAnnotations
    87:102:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> collectDefaultFromBundle
    106:106:boolean _ignorableAnnotation(java.lang.annotation.Annotation) -> _ignorableAnnotation
    110:110:com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap() -> _emptyAnnotationMap
    114:121:com.fasterxml.jackson.databind.introspect.AnnotationMap[] _emptyAnnotationMaps(int) -> _emptyAnnotationMaps
    13:14:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase -> com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase:
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> _metadata
    com.fasterxml.jackson.annotation.JsonFormat$Value _propertyFormat -> _propertyFormat
    java.util.List _aliases -> _aliases
    44:46:void <init>(com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    48:51:void <init>(com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase) -> <init>
    54:54:boolean isRequired() -> isRequired
    57:57:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    83:101:com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    107:121:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
    127:138:java.util.List findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig) -> findAliases
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector -> com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector:
    java.lang.Class[] ANNOTATIONS_TO_INFER_SER -> ANNOTATIONS_TO_INFER_SER
    java.lang.Class[] ANNOTATIONS_TO_INFER_DESER -> ANNOTATIONS_TO_INFER_DESER
    com.fasterxml.jackson.databind.ext.Java7Support _java7Helper -> _java7Helper
    com.fasterxml.jackson.databind.util.LRUMap _annotationsInside -> _annotationsInside
    boolean _cfgConstructorPropertiesImpliesCreator -> _cfgConstructorPropertiesImpliesCreator
    82:106:void <init>() -> <init>
    158:164:boolean isAnnotationBundle(java.lang.annotation.Annotation) -> isAnnotationBundle
    206:234:java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[]) -> findEnumValues
    248:248:java.lang.Enum findDefaultEnumValue(java.lang.Class) -> findDefaultEnumValue
    260:268:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findRootName
    274:278:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnorals(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnorals
    283:284:java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> isIgnorableType
    289:297:java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated) -> findFilterId
    303:304:java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findNamingStrategy
    323:324:com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> findAutoDetectVisibility
    335:336:java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findImplicitPropertyName
    341:354:java.util.List findPropertyAliases(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAliases
    359:359:boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasIgnoreMarker
    365:369:java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasRequiredMarker
    374:378:com.fasterxml.jackson.annotation.JsonProperty$Access findPropertyAccess(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAccess
    383:384:java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDescription
    389:396:java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIndex
    401:407:java.lang.String findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDefaultValue
    412:413:com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> findFormat
    419:427:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findReferenceType
    433:441:com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findUnwrappingNameTransformer
    446:467:com.fasterxml.jackson.annotation.JacksonInject$Value findInjectableValue(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValue
    473:474:java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValueId
    480:481:java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> findViews
    488:509:com.fasterxml.jackson.databind.introspect.AnnotatedMethod resolveSetterConflict(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> resolveSetterConflict
    522:522:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> findTypeResolver
    533:537:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyTypeResolver
    547:550:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyContentTypeResolver
    556:563:java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> findSubtypes
    569:570:java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findTypeName
    575:575:java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isTypeId
    586:592:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findObjectIdInfo
    597:604:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> findObjectReferenceInfo
    616:635:java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializer
    641:649:java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
    655:663:java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    669:677:java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findNullSerializer
    683:690:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusion
    695:710:com.fasterxml.jackson.annotation.JsonInclude$Value _refinePropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude$Value) -> _refinePropertyInclusion
    716:717:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationTyping
    722:723:java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationConverter
    728:729:java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findSerializationContentConverter
    742:853:com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineSerializationType
    882:883:java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    888:888:java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationSortAlphabetically
    892:898:java.lang.Boolean _findSortAlpha(com.fasterxml.jackson.databind.introspect.Annotated) -> _findSortAlpha
    904:937:void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> findAndAddVirtualProperties
    942:959:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend$Attr,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> _constructVirtualProperty
    966:988:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend$Prop,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> _constructVirtualProperty
    1000:1017:com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForSerialization
    1022:1026:java.lang.Boolean hasAsValue(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsValue
    1031:1035:java.lang.Boolean hasAnyGetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnyGetter
    1042:1042:boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    1048:1050:boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    1062:1070:java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    1076:1083:java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    1089:1097:java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    1103:1104:java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializationConverter
    1110:1111:java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findDeserializationContentConverter
    1124:1178:com.fasterxml.jackson.databind.JavaType refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineDeserializationType
    1208:1210:java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findValueInstantiator
    1216:1217:java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilder
    1223:1224:com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilderConfig
    1238:1256:com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForDeserialization
    1261:1262:java.lang.Boolean hasAnySetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnySetter
    1267:1267:com.fasterxml.jackson.annotation.JsonSetter$Value findSetterInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findSetterInfo
    1272:1273:java.lang.Boolean findMergeInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findMergeInfo
    1289:1305:boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    1311:1312:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorBinding
    1317:1335:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorAnnotation
    1346:1356:boolean _isIgnorable(com.fasterxml.jackson.databind.introspect.Annotated) -> _isIgnorable
    1360:1363:java.lang.Class _classIfExplicit(java.lang.Class) -> _classIfExplicit
    1367:1368:java.lang.Class _classIfExplicit(java.lang.Class,java.lang.Class) -> _classIfExplicit
    1372:1378:com.fasterxml.jackson.databind.PropertyName _propertyName(java.lang.String,java.lang.String) -> _propertyName
    1383:1396:com.fasterxml.jackson.databind.PropertyName _findConstructorName(com.fasterxml.jackson.databind.introspect.Annotated) -> _findConstructorName
    1409:1459:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> _findTypeResolver
    1467:1467:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder() -> _constructStdTypeResolverBuilder
    1475:1475:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructNoTypeResolverBuilder() -> _constructNoTypeResolverBuilder
    1480:1486:boolean _primitiveAndWrapper(java.lang.Class,java.lang.Class) -> _primitiveAndWrapper
    1491:1497:boolean _primitiveAndWrapper(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _primitiveAndWrapper
    37:71:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector$1 -> com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector$1:
    int[] $SwitchMap$com$fasterxml$jackson$databind$annotation$JsonSerialize$Inclusion -> $SwitchMap$com$fasterxml$jackson$databind$annotation$JsonSerialize$Inclusion
    697:697:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.MemberKey -> com.fasterxml.jackson.databind.introspect.MemberKey:
    java.lang.Class[] NO_CLASSES -> NO_CLASSES
    java.lang.String _name -> _name
    java.lang.Class[] _argTypes -> _argTypes
    20:21:void <init>(java.lang.reflect.Method) -> <init>
    25:26:void <init>(java.lang.reflect.Constructor) -> <init>
    29:32:void <init>(java.lang.String,java.lang.Class[]) -> <init>
    35:35:java.lang.String getName() -> getName
    39:39:int argCount() -> argCount
    44:44:java.lang.String toString() -> toString
    49:49:int hashCode() -> hashCode
    55:94:boolean equals(java.lang.Object) -> equals
    13:13:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector -> com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector:
    com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector instance -> instance
    12:12:void <init>() -> <init>
    23:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1 -> com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1:
    23:23:void <init>() -> <init>
com.fasterxml.jackson.databind.introspect.ObjectIdInfo -> com.fasterxml.jackson.databind.introspect.ObjectIdInfo:
    com.fasterxml.jackson.databind.PropertyName _propertyName -> _propertyName
    java.lang.Class _generator -> _generator
    java.lang.Class _resolver -> _resolver
    java.lang.Class _scope -> _scope
    boolean _alwaysAsId -> _alwaysAsId
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo EMPTY -> EMPTY
    31:32:void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,java.lang.Class) -> <init>
    43:52:void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean,java.lang.Class) -> <init>
    55:55:com.fasterxml.jackson.databind.introspect.ObjectIdInfo empty() -> empty
    59:62:com.fasterxml.jackson.databind.introspect.ObjectIdInfo withAlwaysAsId(boolean) -> withAlwaysAsId
    65:65:com.fasterxml.jackson.databind.PropertyName getPropertyName() -> getPropertyName
    66:66:java.lang.Class getScope() -> getScope
    67:67:java.lang.Class getGeneratorType() -> getGeneratorType
    68:68:java.lang.Class getResolverType() -> getResolverType
    69:69:boolean getAlwaysAsId() -> getAlwaysAsId
    73:73:java.lang.String toString() -> toString
    26:26:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector -> com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector:
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    boolean _forSerialization -> _forSerialization
    boolean _stdBeanNaming -> _stdBeanNaming
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _classDef -> _classDef
    com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    boolean _useAnnotations -> _useAnnotations
    java.lang.String _mutatorPrefix -> _mutatorPrefix
    boolean _collected -> _collected
    java.util.LinkedHashMap _properties -> _properties
    java.util.LinkedList _creatorProperties -> _creatorProperties
    java.util.LinkedList _anyGetters -> _anyGetters
    java.util.LinkedList _anySetters -> _anySetters
    java.util.LinkedList _anySetterField -> _anySetterField
    java.util.LinkedList _jsonValueAccessors -> _jsonValueAccessors
    java.util.HashSet _ignoredPropertyNames -> _ignoredPropertyNames
    java.util.LinkedHashMap _injectables -> _injectables
    128:144:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.String) -> <init>
    153:153:com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
    157:157:com.fasterxml.jackson.databind.JavaType getType() -> getType
    161:161:com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassDef() -> getClassDef
    170:171:java.util.List getProperties() -> getProperties
    175:178:java.util.Map getInjectables() -> getInjectables
    195:208:com.fasterxml.jackson.databind.introspect.AnnotatedMember getJsonValueAccessor() -> getJsonValueAccessor
    213:223:com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnyGetter() -> getAnyGetter
    228:238:com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnySetterField() -> getAnySetterField
    243:253:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getAnySetterMethod() -> getAnySetterMethod
    261:261:java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    270:274:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    286:289:java.util.Map getPropertyMap() -> getPropertyMap
    305:358:void collectAll() -> collectAll
    371:449:void _addFields(java.util.Map) -> _addFields
    457:476:void _addCreators(java.util.Map) -> _addCreators
    485:517:void _addCreatorParam(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> _addCreatorParam
    524:547:void _addMethods(java.util.Map) -> _addMethods
    553:613:void _addGetterMethod(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector) -> _addGetterMethod
    620:650:void _addSetterMethod(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector) -> _addSetterMethod
    654:667:void _addInjectables(java.util.Map) -> _addInjectables
    671:687:void _doAddInjectable(com.fasterxml.jackson.annotation.JacksonInject$Value,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _doAddInjectable
    690:690:com.fasterxml.jackson.databind.PropertyName _propNameFromSimple(java.lang.String) -> _propNameFromSimple
    705:729:void _removeUnwantedProperties(java.util.Map) -> _removeUnwantedProperties
    738:749:void _removeUnwantedAccessor(java.util.Map) -> _removeUnwantedAccessor
    758:764:void _collectIgnorals(java.lang.String) -> _collectIgnorals
    775:833:void _renameProperties(java.util.Map) -> _renameProperties
    838:885:void _renameUsing(java.util.Map,com.fasterxml.jackson.databind.PropertyNamingStrategy) -> _renameUsing
    891:928:void _renameWithWrappers(java.util.Map) -> _renameWithWrappers
    942:1020:void _sortProperties(java.util.Map) -> _sortProperties
    1029:1032:void reportProblem(java.lang.String,java.lang.Object[]) -> reportProblem
    1037:1044:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder _property(java.util.Map,com.fasterxml.jackson.databind.PropertyName) -> _property
    1051:1057:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder _property(java.util.Map,java.lang.String) -> _property
    1062:1093:com.fasterxml.jackson.databind.PropertyNamingStrategy _findNamingStrategy() -> _findNamingStrategy
    1099:1108:void _updateCreatorProperty(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,java.util.List) -> _updateCreatorProperty
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder:
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty NOT_REFEFERENCE_PROP -> NOT_REFEFERENCE_PROP
    boolean _forSerialization -> _forSerialization
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.PropertyName _name -> _name
    com.fasterxml.jackson.databind.PropertyName _internalName -> _internalName
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _fields -> _fields
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _ctorParameters -> _ctorParameters
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _getters -> _getters
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _setters -> _setters
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> _metadata
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty _referenceInfo -> _referenceInfo
    75:76:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean,com.fasterxml.jackson.databind.PropertyName) -> <init>
    80:86:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName) -> <init>
    90:100:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,com.fasterxml.jackson.databind.PropertyName) -> <init>
    110:110:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    116:117:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder withSimpleName(java.lang.String) -> withSimpleName
    132:142:int compareTo(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> compareTo
    153:153:java.lang.String getName() -> getName
    158:158:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    163:163:boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> hasName
    167:167:java.lang.String getInternalName() -> getInternalName
    176:177:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    191:191:boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    204:204:boolean isExplicitlyNamed() -> isExplicitlyNamed
    219:234:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    244:314:com.fasterxml.jackson.databind.PropertyMetadata _getSetterInfo(com.fasterxml.jackson.databind.PropertyMetadata) -> _getSetterInfo
    324:353:com.fasterxml.jackson.databind.JavaType getPrimaryType() -> getPrimaryType
    358:358:java.lang.Class getRawPrimaryType() -> getRawPrimaryType
    368:368:boolean hasGetter() -> hasGetter
    371:371:boolean hasSetter() -> hasSetter
    374:374:boolean hasField() -> hasField
    377:377:boolean hasConstructorParameter() -> hasConstructorParameter
    381:381:boolean couldDeserialize() -> couldDeserialize
    386:386:boolean couldSerialize() -> couldSerialize
    393:437:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    444:503:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    509:531:com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    537:555:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    560:563:java.util.Iterator getConstructorParameters() -> getConstructorParameters
    568:576:com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
    581:590:int _getterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _getterPriority
    595:600:int _setterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _setterPriority
    611:611:java.lang.Class[] findViews() -> findViews
    623:637:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType() -> findReferenceType
    642:648:boolean isTypeId() -> isTypeId
    652:652:java.lang.Boolean _findRequired() -> _findRequired
    661:661:java.lang.String _findDescription() -> _findDescription
    670:670:java.lang.Integer _findIndex() -> _findIndex
    679:679:java.lang.String _findDefaultValue() -> _findDefaultValue
    689:689:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo() -> findObjectIdInfo
    703:710:com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> findInclusion
    714:714:com.fasterxml.jackson.annotation.JsonProperty$Access findAccess() -> findAccess
    729:730:void addField(com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addField
    733:734:void addCtor(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addCtor
    737:738:void addGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addGetter
    741:742:void addSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addSetter
    750:754:void addAll(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> addAll
    758:764:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked merge(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> merge
    779:783:void removeIgnored() -> removeIgnored
    795:828:com.fasterxml.jackson.annotation.JsonProperty$Access removeNonVisible(boolean) -> removeNonVisible
    837:838:void removeConstructors() -> removeConstructors
    847:851:void trimByVisibility() -> trimByVisibility
    856:876:void mergeAnnotations(boolean) -> mergeAnnotations
    881:887:com.fasterxml.jackson.databind.introspect.AnnotationMap _mergeAnnotations(int,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked[]) -> _mergeAnnotations
    900:904:com.fasterxml.jackson.databind.introspect.AnnotationMap _getAllAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _getAllAnnotations
    918:922:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _applyAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> _applyAnnotations
    927:930:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeIgnored(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _removeIgnored
    935:938:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeNonVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _removeNonVisible
    943:946:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _trimByVisibility(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _trimByVisibility
    957:962:boolean _anyExplicits(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyExplicits
    967:972:boolean _anyExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyExplicitNames
    976:976:boolean anyVisible() -> anyVisible
    985:990:boolean _anyVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyVisible
    994:994:boolean anyIgnorals() -> anyIgnorals
    1003:1008:boolean _anyIgnorals(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyIgnorals
    1019:1027:java.util.Set findExplicitNames() -> findExplicitNames
    1040:1045:java.util.Collection explode(java.util.Collection) -> explode
    1053:1089:void _explode(java.util.Collection,java.util.Map,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _explode
    1094:1109:java.util.Set _findExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,java.util.Set) -> _findExplicitNames
    1116:1124:java.lang.String toString() -> toString
    1139:1157:java.lang.Object fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember) -> fromMemberAnnotations
    1162:1219:java.lang.Object fromMemberAnnotationsExcept(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember,java.lang.Object) -> fromMemberAnnotationsExcept
    19:19:int compareTo(java.lang.Object) -> compareTo
    29:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    611:611:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    614:614:java.lang.Class[] withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    611:611:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonProperty$Access -> $SwitchMap$com$fasterxml$jackson$annotation$JsonProperty$Access
    799:799:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    630:630:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    633:633:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    630:630:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    642:642:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    645:645:java.lang.Boolean withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    642:642:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    652:652:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    655:655:java.lang.Boolean withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    652:652:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    661:661:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    664:664:java.lang.String withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    661:661:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    670:670:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    673:673:java.lang.Integer withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    670:670:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    679:679:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    682:682:java.lang.String withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    679:679:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$8 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$8:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    689:689:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    692:696:com.fasterxml.jackson.databind.introspect.ObjectIdInfo withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    689:689:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    714:714:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    717:717:com.fasterxml.jackson.annotation.JsonProperty$Access withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    714:714:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked:
    java.lang.Object value -> value
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked next -> next
    com.fasterxml.jackson.databind.PropertyName name -> name
    boolean isNameExplicit -> isNameExplicit
    boolean isVisible -> isVisible
    boolean isMarkedIgnored -> isMarkedIgnored
    1280:1300:void <init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> <init>
    1303:1306:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNext() -> withoutNext
    1310:1313:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withValue(java.lang.Object) -> withValue
    1317:1320:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> withNext
    1324:1333:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored() -> withoutIgnored
    1337:1338:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNonVisible() -> withoutNonVisible
    1346:1349:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked append(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> append
    1353:1371:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked trimByVisibility() -> trimByVisibility
    1376:1381:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$MemberIterator -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$MemberIterator:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked next -> next
    1240:1242:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> <init>
    1246:1246:boolean hasNext() -> hasNext
    1251:1254:com.fasterxml.jackson.databind.introspect.AnnotatedMember next() -> next
    1259:1259:void remove() -> remove
    1235:1235:java.lang.Object next() -> next
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember:
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver -> com.fasterxml.jackson.databind.introspect.SimpleMixInResolver:
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _overrides -> _overrides
    java.util.Map _localMixIns -> _localMixIns
    35:37:void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    74:78:void addLocalDefinition(java.lang.Class,java.lang.Class) -> addLocalDefinition
    92:96:java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
com.fasterxml.jackson.databind.introspect.TypeResolutionContext -> com.fasterxml.jackson.databind.introspect.TypeResolutionContext:
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic -> com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic:
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> _bindings
    24:27:void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings) -> <init>
    31:31:com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember -> com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember:
    java.lang.Class _declaringClass -> _declaringClass
    com.fasterxml.jackson.databind.JavaType _type -> _type
    java.lang.String _name -> _name
    37:41:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    45:45:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    55:55:java.lang.reflect.Field getAnnotated() -> getAnnotated
    61:61:java.lang.String getName() -> getName
    65:65:java.lang.Class getRawType() -> getRawType
    70:70:com.fasterxml.jackson.databind.JavaType getType() -> getType
    80:80:java.lang.Class getDeclaringClass() -> getDeclaringClass
    83:83:java.lang.reflect.Member getMember() -> getMember
    87:87:void setValue(java.lang.Object,java.lang.Object) -> setValue
    92:92:java.lang.Object getValue(java.lang.Object) -> getValue
    105:105:int hashCode() -> hashCode
    110:115:boolean equals(java.lang.Object) -> equals
    121:121:java.lang.String toString() -> toString
    14:14:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.VisibilityChecker -> com.fasterxml.jackson.databind.introspect.VisibilityChecker:
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> withOverrides
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isSetterVisible
    boolean isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> isFieldVisible
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std -> com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std:
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _getterMinLevel -> _getterMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _isGetterMinLevel -> _isGetterMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _setterMinLevel -> _setterMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _creatorMinLevel -> _creatorMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _fieldMinLevel -> _fieldMinLevel
    178:178:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std defaultInstance() -> defaultInstance
    201:207:void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> <init>
    249:257:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std _with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> _with
    263:273:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
    279:289:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> withOverrides
    293:296:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _defaultOrOverride(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> _defaultOrOverride
    333:335:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    340:342:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    347:349:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    354:356:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    361:363:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    374:374:boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    379:379:boolean isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isCreatorVisible
    384:384:boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    389:389:boolean isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> isFieldVisible
    394:394:boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    399:399:boolean isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGetterVisible
    404:404:boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    409:409:boolean isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isIsGetterVisible
    414:414:boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    419:419:boolean isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isSetterVisible
    430:430:java.lang.String toString() -> toString
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> withOverrides
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
    164:164:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.NamedType -> com.fasterxml.jackson.databind.jsontype.NamedType:
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.String _name -> _name
    16:16:void <init>(java.lang.Class) -> <init>
    18:22:void <init>(java.lang.Class,java.lang.String) -> <init>
    24:24:java.lang.Class getType() -> getType
    25:25:java.lang.String getName() -> getName
    26:26:void setName(java.lang.String) -> setName
    28:28:boolean hasName() -> hasName
    35:38:boolean equals(java.lang.Object) -> equals
    42:42:int hashCode() -> hashCode
    46:46:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsontype.SubtypeResolver -> com.fasterxml.jackson.databind.jsontype.SubtypeResolver:
    15:15:void <init>() -> <init>
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    58:58:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByClass
    76:76:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByClass
    94:94:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByTypeId
    112:112:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByTypeId
    130:130:java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypes
    142:142:java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector) -> collectAndResolveSubtypes
com.fasterxml.jackson.databind.jsontype.TypeDeserializer -> com.fasterxml.jackson.databind.jsontype.TypeDeserializer:
    24:174:void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    137:137:java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> deserializeIfNatural
    144:176:java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> deserializeIfNatural
com.fasterxml.jackson.databind.jsontype.TypeDeserializer$1 -> com.fasterxml.jackson.databind.jsontype.TypeDeserializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> $SwitchMap$com$fasterxml$jackson$core$JsonToken
    148:148:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.TypeIdResolver -> com.fasterxml.jackson.databind.jsontype.TypeIdResolver:
    void init(com.fasterxml.jackson.databind.JavaType) -> init
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    java.lang.String idFromBaseType() -> idFromBaseType
    com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder -> com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder:
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeSerializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
com.fasterxml.jackson.databind.jsontype.TypeSerializer -> com.fasterxml.jackson.databind.jsontype.TypeSerializer:
    25:101:void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    80:103:com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> typeId
    108:110:com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> typeId
    115:117:com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonToken) -> typeId
    com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
com.fasterxml.jackson.databind.jsontype.TypeSerializer$1 -> com.fasterxml.jackson.databind.jsontype.TypeSerializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As -> $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As
    81:81:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer:
    32:33:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    36:37:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    42:42:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    46:46:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    53:53:java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    61:61:java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    66:66:java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    71:71:java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    89:126:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    131:153:java.lang.String _locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _locateTypeId
    160:160:boolean _usesExternalId() -> _usesExternalId
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer:
    15:16:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    20:20:com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    24:24:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    12:12:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer:
    18:19:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    23:23:com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    28:28:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    12:12:com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    12:12:com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    12:12:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer:
    28:29:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    33:34:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    38:41:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    45:45:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    50:50:boolean _usesExternalId() -> _usesExternalId
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    29:31:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    35:35:com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    39:39:java.lang.String getPropertyName() -> getPropertyName
    42:42:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    24:24:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer:
    com.fasterxml.jackson.annotation.JsonTypeInfo$As _inclusion -> _inclusion
    43:45:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> <init>
    48:50:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    54:54:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    58:58:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    69:105:java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    112:130:java.lang.Object _deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer) -> _deserializeTypedForId
    139:178:java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer) -> _deserializeTypedUsingDefaultImpl
    190:193:java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    22:24:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    28:28:com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    33:33:java.lang.String getPropertyName() -> getPropertyName
    36:36:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    15:15:com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    15:15:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer:
    32:33:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    36:37:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    41:41:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    45:45:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    52:52:java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    57:57:java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    62:62:java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    67:67:java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    85:127:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer:
    23:24:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    28:28:com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    32:32:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    20:20:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver:
    22:23:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    34:34:java.lang.String idFromValue(java.lang.Object) -> idFromValue
    39:39:java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    44:44:com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    49:57:com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,com.fasterxml.jackson.databind.DatabindContext) -> _typeFromId
    69:114:java.lang.String _idFrom(java.lang.Object,java.lang.Class,com.fasterxml.jackson.databind.type.TypeFactory) -> _idFrom
    119:119:java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver:
    java.lang.String _basePackageName -> _basePackageName
    java.lang.String _basePackagePrefix -> _basePackagePrefix
    27:37:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    45:50:java.lang.String idFromValue(java.lang.Object) -> idFromValue
    56:67:com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,com.fasterxml.jackson.databind.DatabindContext) -> _typeFromId
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver -> com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver:
    java.util.LinkedHashSet _registeredSubtypes -> _registeredSubtypes
    24:24:void <init>() -> <init>
    34:40:void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    72:107:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByClass
    114:131:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByClass
    144:178:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByTypeId
    185:202:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByTypeId
    219:247:void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap) -> _collectAndResolve
    257:279:void _collectAndResolveByTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map) -> _collectAndResolveByTypeId
    288:304:java.util.Collection _combineNamedAndUnnamed(java.lang.Class,java.util.Set,java.util.Map) -> _combineNamedAndUnnamed
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder -> com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id _idType -> _idType
    com.fasterxml.jackson.annotation.JsonTypeInfo$As _includeAs -> _includeAs
    java.lang.String _typeProperty -> _typeProperty
    boolean _typeIdVisible -> _typeIdVisible
    java.lang.Class _defaultImpl -> _defaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver -> _customIdResolver
    29:47:void <init>() -> <init>
    60:60:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder noTypeInfoBuilder() -> noTypeInfoBuilder
    67:74:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
    81:101:com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeSerializer
    114:141:com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeDeserializer
    146:185:com.fasterxml.jackson.databind.JavaType defineDefaultImpl(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> defineDefaultImpl
    196:200:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    210:214:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    219:220:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    225:226:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
    235:235:java.lang.Class getDefaultImpl() -> getDefaultImpl
    255:268:com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean) -> idResolver
    15:15:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
    15:15:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    15:15:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    15:15:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    15:15:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1 -> com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As -> $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id -> $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id
    88:257:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator -> com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator:
    java.util.Set DEFAULT_NO_DESER_CLASS_NAMES -> DEFAULT_NO_DESER_CLASS_NAMES
    java.util.Set _cfgIllegalClassNames -> _cfgIllegalClassNames
    com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance -> instance
    77:81:void <init>() -> <init>
    83:83:com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance() -> instance
    90:130:void validateSubType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> validateSubType
    32:79:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase -> com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase:
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver -> _idResolver
    com.fasterxml.jackson.databind.JavaType _baseType -> _baseType
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.JavaType _defaultImpl -> _defaultImpl
    java.lang.String _typePropertyName -> _typePropertyName
    boolean _typeIdVisible -> _typeIdVisible
    java.util.Map _deserializers -> _deserializers
    com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer -> _defaultImplDeserializer
    74:83:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    86:95:void <init>(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    109:109:java.lang.String baseTypeName() -> baseTypeName
    112:112:java.lang.String getPropertyName() -> getPropertyName
    115:115:com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    119:119:java.lang.Class getDefaultImpl() -> getDefaultImpl
    126:126:com.fasterxml.jackson.databind.JavaType baseType() -> baseType
    132:137:java.lang.String toString() -> toString
    149:198:com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _findDeserializer
    207:224:com.fasterxml.jackson.databind.JsonDeserializer _findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> _findDefaultImplDeserializer
    249:262:java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _deserializeWithNativeTypeId
    281:291:com.fasterxml.jackson.databind.JavaType _handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _handleUnknownTypeId
    300:300:com.fasterxml.jackson.databind.JavaType _handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _handleMissingTypeId
com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase -> com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase:
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.JavaType _baseType -> _baseType
    37:40:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    44:44:void init(com.fasterxml.jackson.databind.JavaType) -> init
    53:53:java.lang.String idFromBaseType() -> idFromBaseType
    60:60:com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    70:70:java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver:
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    java.util.Map _typeToId -> _typeToId
    java.util.Map _idToType -> _idToType
    29:33:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Map,java.util.Map) -> <init>
    39:75:com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean) -> construct
    83:83:java.lang.String idFromValue(java.lang.Object) -> idFromValue
    88:111:java.lang.String idFromClass(java.lang.Class) -> idFromClass
    119:122:java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    127:127:com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    136:136:com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String) -> _typeFromId
    141:141:java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
    146:146:java.lang.String toString() -> toString
    161:163:java.lang.String _defaultTypeId(java.lang.Class) -> _defaultTypeId
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase -> com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase:
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver -> _idResolver
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    21:24:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    36:36:java.lang.String getPropertyName() -> getPropertyName
    45:46:com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    53:53:com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    62:73:void _generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId) -> _generateTypeId
    82:86:java.lang.String idFromValue(java.lang.Object) -> idFromValue
    90:94:java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    104:104:void handleMissingId(java.lang.Object) -> handleMissingId
com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver -> com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver:
    java.util.HashMap _mappings -> _mappings
    74:80:com.fasterxml.jackson.databind.JavaType findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeMapping
    94:94:com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> resolveAbstractType
com.fasterxml.jackson.databind.module.SimpleDeserializers -> com.fasterxml.jackson.databind.module.SimpleDeserializers:
    java.util.HashMap _classMappings -> _classMappings
    boolean _hasEnumDeserializer -> _hasEnumDeserializer
    25:40:void <init>() -> <init>
    51:60:void addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> addDeserializer
    88:88:com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findArrayDeserializer
    96:96:com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
    106:106:com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionDeserializer
    116:116:com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionLikeDeserializer
    124:133:com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findEnumDeserializer
    141:144:com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findTreeNodeDeserializer
    154:154:com.fasterxml.jackson.databind.JsonDeserializer findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findReferenceDeserializer
    165:165:com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapDeserializer
    176:176:com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapLikeDeserializer
    180:183:com.fasterxml.jackson.databind.JsonDeserializer _find(com.fasterxml.jackson.databind.JavaType) -> _find
com.fasterxml.jackson.databind.module.SimpleKeyDeserializers -> com.fasterxml.jackson.databind.module.SimpleKeyDeserializers:
    java.util.HashMap _classMappings -> _classMappings
    56:59:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findKeyDeserializer
com.fasterxml.jackson.databind.module.SimpleModule -> com.fasterxml.jackson.databind.module.SimpleModule:
    java.lang.String _name -> _name
    com.fasterxml.jackson.core.Version _version -> _version
    com.fasterxml.jackson.databind.module.SimpleSerializers _serializers -> _serializers
    com.fasterxml.jackson.databind.module.SimpleDeserializers _deserializers -> _deserializers
    com.fasterxml.jackson.databind.module.SimpleSerializers _keySerializers -> _keySerializers
    com.fasterxml.jackson.databind.module.SimpleKeyDeserializers _keyDeserializers -> _keyDeserializers
    com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver _abstractTypes -> _abstractTypes
    com.fasterxml.jackson.databind.module.SimpleValueInstantiators _valueInstantiators -> _valueInstantiators
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier _deserializerModifier -> _deserializerModifier
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier _serializerModifier -> _serializerModifier
    java.util.HashMap _mixins -> _mixins
    java.util.LinkedHashSet _subtypes -> _subtypes
    com.fasterxml.jackson.databind.PropertyNamingStrategy _namingStrategy -> _namingStrategy
    48:112:void <init>() -> <init>
    48:143:void <init>(java.lang.String,com.fasterxml.jackson.core.Version) -> <init>
    185:188:java.lang.Object getTypeId() -> getTypeId
    279:284:com.fasterxml.jackson.databind.module.SimpleModule addSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    296:302:com.fasterxml.jackson.databind.module.SimpleModule addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    331:337:com.fasterxml.jackson.databind.module.SimpleModule addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> addDeserializer
    479:479:java.lang.String getModuleName() -> getModuleName
    492:527:void setupModule(com.fasterxml.jackson.databind.Module$SetupContext) -> setupModule
    530:530:com.fasterxml.jackson.core.Version version() -> version
    543:547:void _checkNotNull(java.lang.Object,java.lang.String) -> _checkNotNull
com.fasterxml.jackson.databind.module.SimpleSerializers -> com.fasterxml.jackson.databind.module.SimpleSerializers:
    java.util.HashMap _classMappings -> _classMappings
    java.util.HashMap _interfaceMappings -> _interfaceMappings
    boolean _hasEnumSerializer -> _hasEnumSerializer
    37:57:void <init>() -> <init>
    78:85:void addSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    89:90:void addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    111:165:com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    172:172:com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    179:179:com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    186:186:com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    194:194:com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    202:202:com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
    213:224:com.fasterxml.jackson.databind.JsonSerializer _findInterfaceMapping(java.lang.Class,com.fasterxml.jackson.databind.type.ClassKey) -> _findInterfaceMapping
    229:245:void _addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> _addSerializer
com.fasterxml.jackson.databind.module.SimpleValueInstantiators -> com.fasterxml.jackson.databind.module.SimpleValueInstantiators:
    java.util.HashMap _classMappings -> _classMappings
    45:46:com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.node.ArrayNode -> com.fasterxml.jackson.databind.node.ArrayNode:
    java.util.List _children -> _children
    30:32:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    76:76:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> isEmpty
    87:87:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    92:92:boolean isArray() -> isArray
    95:95:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    99:99:int size() -> size
    104:104:java.util.Iterator elements() -> elements
    109:112:com.fasterxml.jackson.databind.JsonNode get(int) -> get
    116:116:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    159:168:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    174:180:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    191:197:com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    274:278:com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode) -> add
    822:827:boolean equals(java.lang.Object) -> equals
    839:839:int hashCode() -> hashCode
    845:854:java.lang.String toString() -> toString
    864:865:com.fasterxml.jackson.databind.node.ArrayNode _add(com.fasterxml.jackson.databind.JsonNode) -> _add
com.fasterxml.jackson.databind.node.BaseJsonNode -> com.fasterxml.jackson.databind.node.BaseJsonNode:
    22:22:void <init>() -> <init>
    76:76:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.node.BigIntegerNode -> com.fasterxml.jackson.databind.node.BigIntegerNode:
    java.math.BigInteger MIN_INTEGER -> MIN_INTEGER
    java.math.BigInteger MAX_INTEGER -> MAX_INTEGER
    java.math.BigInteger MIN_LONG -> MIN_LONG
    java.math.BigInteger MAX_LONG -> MAX_LONG
    java.math.BigInteger _value -> _value
    29:29:void <init>(java.math.BigInteger) -> <init>
    31:31:com.fasterxml.jackson.databind.node.BigIntegerNode valueOf(java.math.BigInteger) -> valueOf
    40:40:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    43:43:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    60:60:java.lang.Number numberValue() -> numberValue
    67:67:int intValue() -> intValue
    70:70:long longValue() -> longValue
    73:73:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    79:79:double doubleValue() -> doubleValue
    82:82:java.math.BigDecimal decimalValue() -> decimalValue
    92:92:java.lang.String asText() -> asText
    104:105:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    110:115:boolean equals(java.lang.Object) -> equals
    120:120:int hashCode() -> hashCode
    16:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.BinaryNode -> com.fasterxml.jackson.databind.node.BinaryNode:
    com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE -> EMPTY_BINARY_NODE
    byte[] _data -> _data
    22:24:void <init>(byte[]) -> <init>
    38:44:com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[]) -> valueOf
    61:61:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    70:70:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    79:79:byte[] binaryValue() -> binaryValue
    87:87:java.lang.String asText() -> asText
    94:96:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    101:106:boolean equals(java.lang.Object) -> equals
    111:111:int hashCode() -> hashCode
    121:121:java.lang.String toString() -> toString
    17:17:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.BooleanNode -> com.fasterxml.jackson.databind.node.BooleanNode:
    com.fasterxml.jackson.databind.node.BooleanNode TRUE -> TRUE
    com.fasterxml.jackson.databind.node.BooleanNode FALSE -> FALSE
    boolean _value -> _value
    28:28:void <init>(boolean) -> <init>
    30:30:com.fasterxml.jackson.databind.node.BooleanNode getTrue() -> getTrue
    31:31:com.fasterxml.jackson.databind.node.BooleanNode getFalse() -> getFalse
    37:37:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    41:41:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    51:51:java.lang.String asText() -> asText
    79:80:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    84:84:int hashCode() -> hashCode
    94:99:boolean equals(java.lang.Object) -> equals
    19:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.ContainerNode -> com.fasterxml.jackson.databind.node.ContainerNode:
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    25:27:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    36:36:java.lang.String asText() -> asText
    int size() -> size
    80:80:com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> objectNode
    83:83:com.fasterxml.jackson.databind.node.NullNode nullNode() -> nullNode
    124:124:com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String) -> textNode
com.fasterxml.jackson.databind.node.DecimalNode -> com.fasterxml.jackson.databind.node.DecimalNode:
    com.fasterxml.jackson.databind.node.DecimalNode ZERO -> ZERO
    java.math.BigDecimal MIN_INTEGER -> MIN_INTEGER
    java.math.BigDecimal MAX_INTEGER -> MAX_INTEGER
    java.math.BigDecimal MIN_LONG -> MIN_LONG
    java.math.BigDecimal MAX_LONG -> MAX_LONG
    java.math.BigDecimal _value -> _value
    32:32:void <init>(java.math.BigDecimal) -> <init>
    34:34:com.fasterxml.jackson.databind.node.DecimalNode valueOf(java.math.BigDecimal) -> valueOf
    42:42:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    45:45:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    67:67:java.lang.Number numberValue() -> numberValue
    73:73:int intValue() -> intValue
    76:76:long longValue() -> longValue
    80:80:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    86:86:double doubleValue() -> doubleValue
    89:89:java.math.BigDecimal decimalValue() -> decimalValue
    93:93:java.lang.String asText() -> asText
    110:111:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    116:121:boolean equals(java.lang.Object) -> equals
    125:125:int hashCode() -> hashCode
    17:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.DoubleNode -> com.fasterxml.jackson.databind.node.DoubleNode:
    double _value -> _value
    27:27:void <init>(double) -> <init>
    29:29:com.fasterxml.jackson.databind.node.DoubleNode valueOf(double) -> valueOf
    37:37:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    40:40:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    63:63:java.lang.Number numberValue() -> numberValue
    70:70:int intValue() -> intValue
    73:73:long longValue() -> longValue
    79:79:double doubleValue() -> doubleValue
    82:82:java.math.BigDecimal decimalValue() -> decimalValue
    86:86:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    91:91:java.lang.String asText() -> asText
    97:97:boolean isNaN() -> isNaN
    102:103:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    108:116:boolean equals(java.lang.Object) -> equals
    123:124:int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.FloatNode -> com.fasterxml.jackson.databind.node.FloatNode:
    float _value -> _value
    27:27:void <init>(float) -> <init>
    29:29:com.fasterxml.jackson.databind.node.FloatNode valueOf(float) -> valueOf
    37:37:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    40:40:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    64:64:java.lang.Number numberValue() -> numberValue
    71:71:int intValue() -> intValue
    74:74:long longValue() -> longValue
    80:80:double doubleValue() -> doubleValue
    83:83:java.math.BigDecimal decimalValue() -> decimalValue
    87:87:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    92:92:java.lang.String asText() -> asText
    98:98:boolean isNaN() -> isNaN
    103:104:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    109:117:boolean equals(java.lang.Object) -> equals
    122:122:int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.IntNode -> com.fasterxml.jackson.databind.node.IntNode:
    com.fasterxml.jackson.databind.node.IntNode[] CANONICALS -> CANONICALS
    int _value -> _value
    43:43:void <init>(int) -> <init>
    46:47:com.fasterxml.jackson.databind.node.IntNode valueOf(int) -> valueOf
    56:56:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    59:59:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    78:78:java.lang.Number numberValue() -> numberValue
    85:85:int intValue() -> intValue
    88:88:long longValue() -> longValue
    94:94:double doubleValue() -> doubleValue
    98:98:java.math.BigDecimal decimalValue() -> decimalValue
    101:101:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    105:105:java.lang.String asText() -> asText
    117:118:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    123:128:boolean equals(java.lang.Object) -> equals
    132:132:int hashCode() -> hashCode
    25:30:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.JsonNodeFactory -> com.fasterxml.jackson.databind.node.JsonNodeFactory:
    boolean _cfgBigDecimalExact -> _cfgBigDecimalExact
    com.fasterxml.jackson.databind.node.JsonNodeFactory decimalsNormalized -> decimalsNormalized
    com.fasterxml.jackson.databind.node.JsonNodeFactory decimalsAsIs -> decimalsAsIs
    com.fasterxml.jackson.databind.node.JsonNodeFactory instance -> instance
    62:64:void <init>(boolean) -> <init>
    74:75:void <init>() -> <init>
    101:101:com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean) -> booleanNode
    109:109:com.fasterxml.jackson.databind.node.NullNode nullNode() -> nullNode
    158:158:com.fasterxml.jackson.databind.node.NumericNode numberNode(int) -> numberNode
    177:177:com.fasterxml.jackson.databind.node.NumericNode numberNode(long) -> numberNode
    199:202:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger) -> numberNode
    210:210:com.fasterxml.jackson.databind.node.NumericNode numberNode(float) -> numberNode
    228:228:com.fasterxml.jackson.databind.node.NumericNode numberNode(double) -> numberNode
    254:274:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal) -> numberNode
    289:289:com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String) -> textNode
    297:297:com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[]) -> binaryNode
    319:319:com.fasterxml.jackson.databind.node.ArrayNode arrayNode() -> arrayNode
    333:333:com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> objectNode
    342:342:com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object) -> pojoNode
    346:346:com.fasterxml.jackson.databind.node.ValueNode rawValueNode(com.fasterxml.jackson.databind.util.RawValue) -> rawValueNode
    24:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.JsonNodeType -> com.fasterxml.jackson.databind.node.JsonNodeType:
    com.fasterxml.jackson.databind.node.JsonNodeType ARRAY -> ARRAY
    com.fasterxml.jackson.databind.node.JsonNodeType BINARY -> BINARY
    com.fasterxml.jackson.databind.node.JsonNodeType BOOLEAN -> BOOLEAN
    com.fasterxml.jackson.databind.node.JsonNodeType MISSING -> MISSING
    com.fasterxml.jackson.databind.node.JsonNodeType NULL -> NULL
    com.fasterxml.jackson.databind.node.JsonNodeType NUMBER -> NUMBER
    com.fasterxml.jackson.databind.node.JsonNodeType OBJECT -> OBJECT
    com.fasterxml.jackson.databind.node.JsonNodeType POJO -> POJO
    com.fasterxml.jackson.databind.node.JsonNodeType STRING -> STRING
    com.fasterxml.jackson.databind.node.JsonNodeType[] $VALUES -> $VALUES
    17:17:com.fasterxml.jackson.databind.node.JsonNodeType[] values() -> values
    17:17:com.fasterxml.jackson.databind.node.JsonNodeType valueOf(java.lang.String) -> valueOf
    17:17:void <init>(java.lang.String,int) -> <init>
    17:27:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.LongNode -> com.fasterxml.jackson.databind.node.LongNode:
    long _value -> _value
    26:26:void <init>(long) -> <init>
    28:28:com.fasterxml.jackson.databind.node.LongNode valueOf(long) -> valueOf
    36:36:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    39:39:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    55:55:java.lang.Number numberValue() -> numberValue
    62:62:int intValue() -> intValue
    65:65:long longValue() -> longValue
    71:71:double doubleValue() -> doubleValue
    74:74:java.math.BigDecimal decimalValue() -> decimalValue
    77:77:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    81:81:java.lang.String asText() -> asText
    93:94:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    99:104:boolean equals(java.lang.Object) -> equals
    109:109:int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.NodeCursor -> com.fasterxml.jackson.databind.node.NodeCursor:
    com.fasterxml.jackson.databind.node.NodeCursor _parent -> _parent
    java.lang.String _currentName -> _currentName
    java.lang.Object _currentValue -> _currentValue
    33:37:void <init>(int,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    47:47:com.fasterxml.jackson.databind.node.NodeCursor getParent() -> getParent
    51:51:java.lang.String getCurrentName() -> getCurrentName
    63:63:java.lang.Object getCurrentValue() -> getCurrentValue
    68:69:void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken endToken() -> endToken
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    89:97:com.fasterxml.jackson.databind.node.NodeCursor iterateChildren() -> iterateChildren
    12:12:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor -> com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor:
    java.util.Iterator _contents -> _contents
    com.fasterxml.jackson.databind.JsonNode _currentNode -> _currentNode
    159:161:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    166:171:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    177:177:com.fasterxml.jackson.core.JsonToken endToken() -> endToken
    180:180:com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    184:184:boolean currentHasChildren() -> currentHasChildren
    151:151:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor -> com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor:
    java.util.Iterator _contents -> _contents
    java.util.Map$Entry _current -> _current
    boolean _needEntry -> _needEntry
    201:204:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    210:222:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    236:236:com.fasterxml.jackson.core.JsonToken endToken() -> endToken
    240:240:com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    245:245:boolean currentHasChildren() -> currentHasChildren
    191:191:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$RootCursor -> com.fasterxml.jackson.databind.node.NodeCursor$RootCursor:
    com.fasterxml.jackson.databind.JsonNode _node -> _node
    boolean _done -> _done
    116:121:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    130:135:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    141:141:com.fasterxml.jackson.core.JsonToken endToken() -> endToken
    143:143:com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    145:145:boolean currentHasChildren() -> currentHasChildren
    111:111:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NullNode -> com.fasterxml.jackson.databind.node.NullNode:
    com.fasterxml.jackson.databind.node.NullNode instance -> instance
    24:24:void <init>() -> <init>
    26:26:com.fasterxml.jackson.databind.node.NullNode getInstance() -> getInstance
    30:30:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    33:33:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    36:36:java.lang.String asText() -> asText
    51:52:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    56:56:boolean equals(java.lang.Object) -> equals
    61:61:int hashCode() -> hashCode
    18:18:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.NumericNode -> com.fasterxml.jackson.databind.node.NumericNode:
    14:14:void <init>() -> <init>
    19:19:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    90:90:boolean isNaN() -> isNaN
com.fasterxml.jackson.databind.node.ObjectNode -> com.fasterxml.jackson.databind.node.ObjectNode:
    java.util.Map _children -> _children
    26:28:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    67:67:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> isEmpty
    78:78:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    83:83:boolean isObject() -> isObject
    86:86:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    90:90:int size() -> size
    95:95:java.util.Iterator elements() -> elements
    103:103:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    108:108:java.util.Iterator fieldNames() -> fieldNames
    132:132:java.util.Iterator fields() -> fields
    201:210:com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    293:314:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    322:341:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    367:371:com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> set
    426:429:com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> replace
    497:497:com.fasterxml.jackson.databind.JsonNode remove(java.lang.String) -> remove
    620:622:com.fasterxml.jackson.databind.node.ObjectNode putObject(java.lang.String) -> putObject
    790:790:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.String) -> put
    833:838:boolean equals(java.lang.Object) -> equals
    846:846:boolean _childrenEqual(com.fasterxml.jackson.databind.node.ObjectNode) -> _childrenEqual
    852:852:int hashCode() -> hashCode
    858:871:java.lang.String toString() -> toString
    882:883:com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> _put
com.fasterxml.jackson.databind.node.POJONode -> com.fasterxml.jackson.databind.node.POJONode:
    java.lang.Object _value -> _value
    20:20:void <init>(java.lang.Object) -> <init>
    30:30:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    33:33:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    43:46:byte[] binaryValue() -> binaryValue
    56:56:java.lang.String asText() -> asText
    107:116:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    127:127:java.lang.Object getPojo() -> getPojo
    138:143:boolean equals(java.lang.Object) -> equals
    151:154:boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode) -> _pojoEquals
    158:158:int hashCode() -> hashCode
    164:170:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.node.TextNode -> com.fasterxml.jackson.databind.node.TextNode:
    com.fasterxml.jackson.databind.node.TextNode EMPTY_STRING_NODE -> EMPTY_STRING_NODE
    java.lang.String _value -> _value
    23:23:void <init>(java.lang.String) -> <init>
    36:42:com.fasterxml.jackson.databind.node.TextNode valueOf(java.lang.String) -> valueOf
    47:47:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    50:50:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    54:54:java.lang.String textValue() -> textValue
    65:76:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    81:81:byte[] binaryValue() -> binaryValue
    92:92:java.lang.String asText() -> asText
    140:145:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    156:161:boolean equals(java.lang.Object) -> equals
    165:165:int hashCode() -> hashCode
    173:177:java.lang.String toString() -> toString
    182:185:void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    19:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.TreeTraversingParser -> com.fasterxml.jackson.databind.node.TreeTraversingParser:
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor -> _nodeCursor
    com.fasterxml.jackson.core.JsonToken _nextToken -> _nextToken
    boolean _startContainer -> _startContainer
    boolean _closed -> _closed
    69:80:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    89:89:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    106:111:void close() -> close
    122:159:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    168:175:com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    191:191:java.lang.String getCurrentName() -> getCurrentName
    204:204:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    209:209:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    214:214:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    226:245:java.lang.String getText() -> getText
    251:251:char[] getTextCharacters() -> getTextCharacters
    256:256:int getTextLength() -> getTextLength
    261:261:int getTextOffset() -> getTextOffset
    267:267:boolean hasTextCharacters() -> hasTextCharacters
    280:281:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    287:287:java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    292:292:java.math.BigDecimal getDecimalValue() -> getDecimalValue
    297:297:double getDoubleValue() -> getDoubleValue
    302:302:float getFloatValue() -> getFloatValue
    307:307:long getLongValue() -> getLongValue
    312:312:int getIntValue() -> getIntValue
    317:317:java.lang.Number getNumberValue() -> getNumberValue
    323:334:java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    339:345:boolean isNaN() -> isNaN
    359:375:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    383:388:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    398:401:com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    407:412:com.fasterxml.jackson.databind.JsonNode currentNumericNode() -> currentNumericNode
    417:418:void _handleEOF() -> _handleEOF
com.fasterxml.jackson.databind.node.TreeTraversingParser$1 -> com.fasterxml.jackson.databind.node.TreeTraversingParser$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> $SwitchMap$com$fasterxml$jackson$core$JsonToken
    230:230:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.ValueNode -> com.fasterxml.jackson.databind.node.ValueNode:
    20:20:void <init>() -> <init>
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    44:48:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    57:57:java.lang.String toString() -> toString
    78:78:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    84:84:boolean has(java.lang.String) -> has
    97:97:com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
com.fasterxml.jackson.databind.ser.AnyGetterWriter -> com.fasterxml.jackson.databind.ser.AnyGetterWriter:
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> _accessor
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    com.fasterxml.jackson.databind.ser.std.MapSerializer _mapSerializer -> _mapSerializer
    31:38:void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    44:46:void fixAccess(com.fasterxml.jackson.databind.SerializationConfig) -> fixAccess
    51:66:void getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> getAndSerialize
    75:92:void getAndFilter(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter) -> getAndFilter
    99:106:void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
com.fasterxml.jackson.databind.ser.BasicSerializerFactory -> com.fasterxml.jackson.databind.ser.BasicSerializerFactory:
    java.util.HashMap _concrete -> _concrete
    java.util.HashMap _concreteLazy -> _concreteLazy
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig -> _factoryConfig
    135:137:void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> <init>
    com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> withConfig
    168:168:com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    177:177:com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    186:186:com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    208:250:com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> createKeySerializer
    262:280:com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> createTypeSerializer
    java.lang.Iterable customSerializers() -> customSerializers
    305:317:com.fasterxml.jackson.databind.JsonSerializer findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByLookup
    340:356:com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializerByAnnotations
    371:427:com.fasterxml.jackson.databind.JsonSerializer findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByPrimaryType
    439:439:com.fasterxml.jackson.databind.JsonSerializer findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findOptionalStdSerializer
    453:470:com.fasterxml.jackson.databind.JsonSerializer findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByAddonType
    485:491:com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializerFromAnnotation
    504:509:com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer) -> findConvertingSerializer
    516:520:com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> findConverter
    536:625:com.fasterxml.jackson.databind.JsonSerializer buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> buildContainerSerializer
    639:702:com.fasterxml.jackson.databind.JsonSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildCollectionSerializer
    713:713:boolean isIndexedList(java.lang.Class) -> isIndexedList
    718:718:com.fasterxml.jackson.databind.ser.ContainerSerializer buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildIndexedListSerializer
    723:723:com.fasterxml.jackson.databind.ser.ContainerSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildCollectionSerializer
    727:727:com.fasterxml.jackson.databind.JsonSerializer buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType) -> buildEnumSetSerializer
    748:790:com.fasterxml.jackson.databind.JsonSerializer buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildMapSerializer
    804:853:com.fasterxml.jackson.databind.ser.std.MapSerializer _checkMapContentInclusion(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.std.MapSerializer) -> _checkMapContentInclusion
    866:920:com.fasterxml.jackson.databind.JsonSerializer buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> buildMapEntrySerializer
    936:961:com.fasterxml.jackson.annotation.JsonInclude$Value _findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _findInclusionWithContent
    984:1017:com.fasterxml.jackson.databind.JsonSerializer buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildArraySerializer
    1034:1052:com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findReferenceSerializer
    1060:1107:com.fasterxml.jackson.databind.JsonSerializer buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildAtomicReferenceSerializer
    1124:1124:com.fasterxml.jackson.databind.JsonSerializer buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType) -> buildIteratorSerializer
    1135:1135:com.fasterxml.jackson.databind.JsonSerializer buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType) -> buildIterableSerializer
    1147:1163:com.fasterxml.jackson.databind.JsonSerializer buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildEnumSerializer
    1181:1186:com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> _findKeySerializer
    1198:1203:com.fasterxml.jackson.databind.JsonSerializer _findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> _findContentSerializer
    1211:1211:java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findFilterId
    1228:1236:boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> usesStaticTyping
    62:110:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1 -> com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include
    413:823:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanPropertyFilter -> com.fasterxml.jackson.databind.ser.BeanPropertyFilter:
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> serializeAsField
com.fasterxml.jackson.databind.ser.BeanPropertyWriter -> com.fasterxml.jackson.databind.ser.BeanPropertyWriter:
    java.lang.Object MARKER_FOR_EMPTY -> MARKER_FOR_EMPTY
    com.fasterxml.jackson.core.io.SerializedString _name -> _name
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> _wrapperName
    com.fasterxml.jackson.databind.JavaType _declaredType -> _declaredType
    com.fasterxml.jackson.databind.JavaType _cfgSerializationType -> _cfgSerializationType
    com.fasterxml.jackson.databind.JavaType _nonTrivialBaseType -> _nonTrivialBaseType
    com.fasterxml.jackson.databind.util.Annotations _contextAnnotations -> _contextAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> _member
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    java.lang.reflect.Field _field -> _field
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    com.fasterxml.jackson.databind.JsonSerializer _nullSerializer -> _nullSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> _typeSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    boolean _suppressNulls -> _suppressNulls
    java.lang.Object _suppressableValue -> _suppressableValue
    java.lang.Class[] _includeInViews -> _includeInViews
    java.util.HashMap _internalSettings -> _internalSettings
    216:248:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object,java.lang.Class[]) -> <init>
    270:290:void <init>() -> <init>
    296:297:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    303:334:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName) -> <init>
    337:359:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString) -> <init>
    362:366:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    375:375:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _new(com.fasterxml.jackson.databind.PropertyName) -> _new
    385:386:void assignTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> assignTypeSerializer
    393:399:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    406:412:void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    419:419:com.fasterxml.jackson.databind.ser.BeanPropertyWriter unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingWriter
    428:429:void setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType) -> setNonTrivialBaseType
    439:440:void fixAccess(com.fasterxml.jackson.databind.SerializationConfig) -> fixAccess
    476:476:java.lang.String getName() -> getName
    482:482:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    487:487:com.fasterxml.jackson.databind.JavaType getType() -> getType
    510:510:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    575:575:boolean hasSerializer() -> hasSerializer
    579:579:boolean hasNullSerializer() -> hasNullSerializer
    586:586:com.fasterxml.jackson.databind.jsontype.TypeSerializer getTypeSerializer() -> getTypeSerializer
    604:604:boolean willSuppressNulls() -> willSuppressNulls
    614:618:boolean wouldConflictWithName(com.fasterxml.jackson.databind.PropertyName) -> wouldConflictWithName
    627:627:com.fasterxml.jackson.databind.JavaType getSerializationType() -> getSerializationType
    669:669:java.lang.Class[] getViews() -> getViews
    687:731:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    743:746:void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsOmittedField
    759:805:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    818:823:void serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsPlaceholder
    892:903:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    915:915:java.lang.Object get(java.lang.Object) -> get
    936:947:boolean _handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> _handleSelfReference
    952:971:java.lang.String toString() -> toString
    48:48:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializer -> com.fasterxml.jackson.databind.ser.BeanSerializer:
    45:46:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    64:65:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    68:69:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set) -> <init>
    83:83:com.fasterxml.jackson.databind.ser.BeanSerializer createDummy(com.fasterxml.jackson.databind.JavaType) -> createDummy
    88:88:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    93:93:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    98:98:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    103:103:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.util.Set) -> withIgnorals
    121:128:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    146:158:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    167:167:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder -> com.fasterxml.jackson.databind.ser.BeanSerializerBuilder:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPERTIES -> NO_PROPERTIES
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    java.util.List _properties -> _properties
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties -> _filteredProperties
    com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter -> _anyGetter
    java.lang.Object _filterId -> _filterId
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId -> _typeId
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter -> _objectIdWriter
    40:78:void <init>(com.fasterxml.jackson.databind.BeanDescription) -> <init>
    101:102:void setConfig(com.fasterxml.jackson.databind.SerializationConfig) -> setConfig
    105:106:void setProperties(java.util.List) -> setProperties
    114:122:void setFilteredProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> setFilteredProperties
    125:126:void setAnyGetter(com.fasterxml.jackson.databind.ser.AnyGetterWriter) -> setAnyGetter
    129:130:void setFilterId(java.lang.Object) -> setFilterId
    134:138:void setTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> setTypeId
    141:142:void setObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> setObjectIdWriter
    154:154:com.fasterxml.jackson.databind.BeanDescription getBeanDescription() -> getBeanDescription
    156:156:java.util.List getProperties() -> getProperties
    163:163:com.fasterxml.jackson.databind.ser.AnyGetterWriter getAnyGetter() -> getAnyGetter
    165:165:java.lang.Object getFilterId() -> getFilterId
    167:167:com.fasterxml.jackson.databind.introspect.AnnotatedMember getTypeId() -> getTypeId
    169:169:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter getObjectIdWriter() -> getObjectIdWriter
    187:216:com.fasterxml.jackson.databind.JsonSerializer build() -> build
    226:226:com.fasterxml.jackson.databind.ser.BeanSerializer createDummy() -> createDummy
    19:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializerFactory -> com.fasterxml.jackson.databind.ser.BeanSerializerFactory:
    com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance -> instance
    77:78:void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> <init>
    89:103:com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> withConfig
    108:108:java.lang.Iterable customSerializers() -> customSerializers
    134:179:com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> createSerializer
    186:253:com.fasterxml.jackson.databind.JsonSerializer _createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> _createSerializer2
    272:279:com.fasterxml.jackson.databind.JsonSerializer findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findBeanSerializer
    296:308:com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyTypeSerializer
    325:338:com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyContentTypeSerializer
    359:449:com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription) -> constructBeanSerializer
    456:496:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> constructObjectIdHandler
    508:508:com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> constructFilteredBeanWriter
    514:514:com.fasterxml.jackson.databind.ser.PropertyBuilder constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> constructPropertyBuilder
    518:518:com.fasterxml.jackson.databind.ser.BeanSerializerBuilder constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription) -> constructBeanSerializerBuilder
    537:537:boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    548:588:java.util.List findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> findBeanProperties
    608:621:java.util.List filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> filterBeanProperties
    636:659:void processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> processViews
    670:705:void removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> removeIgnorableTypes
    713:722:void removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> removeSetterlessGetters
    734:750:java.util.List removeOverlappingTypeIds(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,java.util.List) -> removeOverlappingTypeIds
    768:791:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _constructWriter
    64:64:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializerModifier -> com.fasterxml.jackson.databind.ser.BeanSerializerModifier:
    36:36:void <init>() -> <init>
    49:49:java.util.List changeProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> changeProperties
    64:64:java.util.List orderProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> orderProperties
    78:78:com.fasterxml.jackson.databind.ser.BeanSerializerBuilder updateBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> updateBuilder
    95:95:com.fasterxml.jackson.databind.JsonSerializer modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifySerializer
    123:123:com.fasterxml.jackson.databind.JsonSerializer modifyArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyArraySerializer
    131:131:com.fasterxml.jackson.databind.JsonSerializer modifyCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyCollectionSerializer
    139:139:com.fasterxml.jackson.databind.JsonSerializer modifyCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyCollectionLikeSerializer
    147:147:com.fasterxml.jackson.databind.JsonSerializer modifyMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyMapSerializer
    155:155:com.fasterxml.jackson.databind.JsonSerializer modifyMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyMapLikeSerializer
    163:163:com.fasterxml.jackson.databind.JsonSerializer modifyEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyEnumSerializer
    185:185:com.fasterxml.jackson.databind.JsonSerializer modifyKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyKeySerializer
com.fasterxml.jackson.databind.ser.ContainerSerializer -> com.fasterxml.jackson.databind.ser.ContainerSerializer:
    25:26:void <init>(java.lang.Class) -> <init>
    32:33:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    42:43:void <init>(java.lang.Class,boolean) -> <init>
    46:47:void <init>(com.fasterxml.jackson.databind.ser.ContainerSerializer) -> <init>
    60:61:com.fasterxml.jackson.databind.ser.ContainerSerializer withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> withValueTypeSerializer
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
com.fasterxml.jackson.databind.ser.ContextualSerializer -> com.fasterxml.jackson.databind.ser.ContextualSerializer:
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider -> com.fasterxml.jackson.databind.ser.DefaultSerializerProvider:
    java.util.Map _seenObjectIds -> _seenObjectIds
    java.util.ArrayList _objectIdGenerators -> _objectIdGenerators
    com.fasterxml.jackson.core.JsonGenerator _generator -> _generator
    66:66:void <init>() -> <init>
    70:71:void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
    107:139:com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> serializerInstance
    146:155:java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> includeFilterInstance
    161:173:boolean includeFilterSuppressNulls(java.lang.Object) -> includeFilterSuppressNulls
    186:214:com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> findObjectId
    229:232:java.util.Map _createObjectIdMap() -> _createObjectIdMap
    284:284:com.fasterxml.jackson.core.JsonGenerator getGenerator() -> getGenerator
    301:320:void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> serializeValue
    335:357:void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> serializeValue
    374:401:void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> serializeValue
    413:459:void serializePolymorphic(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializePolymorphic
    466:473:void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.PropertyName) -> _serialize
    480:484:void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer) -> _serialize
    493:499:void _serializeNull(com.fasterxml.jackson.core.JsonGenerator) -> _serializeNull
    502:509:java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception) -> _wrapAsIOE
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl -> com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl:
    609:609:void <init>() -> <init>
    614:615:void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    628:628:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
    606:606:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
com.fasterxml.jackson.databind.ser.FilterProvider -> com.fasterxml.jackson.databind.ser.FilterProvider:
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
    52:56:com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(java.lang.Object,java.lang.Object) -> findPropertyFilter
com.fasterxml.jackson.databind.ser.PropertyBuilder -> com.fasterxml.jackson.databind.ser.PropertyBuilder:
    java.lang.Object NO_DEFAULT_MARKER -> NO_DEFAULT_MARKER
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.lang.Object _defaultBean -> _defaultBean
    com.fasterxml.jackson.annotation.JsonInclude$Value _defaultInclusion -> _defaultInclusion
    boolean _useRealPropertyDefaults -> _useRealPropertyDefaults
    53:74:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> <init>
    100:243:com.fasterxml.jackson.databind.ser.BeanPropertyWriter buildWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean) -> buildWriter
    261:299:com.fasterxml.jackson.databind.JavaType findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType) -> findSerializationType
    310:328:java.lang.Object getDefaultBean() -> getDefaultBean
    377:383:java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwWrapped
    18:18:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.PropertyBuilder$1 -> com.fasterxml.jackson.databind.ser.PropertyBuilder$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include
    156:156:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.PropertyFilter -> com.fasterxml.jackson.databind.ser.PropertyFilter:
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsField
com.fasterxml.jackson.databind.ser.PropertyWriter -> com.fasterxml.jackson.databind.ser.PropertyWriter:
    27:28:void <init>(com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    31:32:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    35:36:void <init>(com.fasterxml.jackson.databind.ser.PropertyWriter) -> <init>
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsOmittedField
com.fasterxml.jackson.databind.ser.ResolvableSerializer -> com.fasterxml.jackson.databind.ser.ResolvableSerializer:
    void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
com.fasterxml.jackson.databind.ser.SerializerCache -> com.fasterxml.jackson.databind.ser.SerializerCache:
    java.util.HashMap _sharedMap -> _sharedMap
    java.util.concurrent.atomic.AtomicReference _readOnlyMap -> _readOnlyMap
    33:42:void <init>() -> <init>
    50:54:com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap() -> getReadOnlyLookupMap
    60:65:com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _makeReadOnlyLookupMap() -> _makeReadOnlyLookupMap
    84:86:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    91:93:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> untypedValueSerializer
    98:100:com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> typedValueSerializer
    105:107:com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    123:129:void addTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> addTypedSerializer
    133:139:void addTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addTypedSerializer
    164:177:void addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> addAndResolveNonTypedSerializer
    190:200:void addAndResolveNonTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> addAndResolveNonTypedSerializer
com.fasterxml.jackson.databind.ser.SerializerFactory -> com.fasterxml.jackson.databind.ser.SerializerFactory:
    11:11:void <init>() -> <init>
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> createSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> createTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> createKeySerializer
com.fasterxml.jackson.databind.ser.Serializers -> com.fasterxml.jackson.databind.ser.Serializers:
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findReferenceSerializer
    com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
com.fasterxml.jackson.databind.ser.Serializers$Base -> com.fasterxml.jackson.databind.ser.Serializers$Base:
    101:101:void <init>() -> <init>
    107:107:com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    116:116:com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findReferenceSerializer
    124:124:com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    132:132:com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    140:140:com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    149:149:com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    158:158:com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter -> com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter:
    45:46:void <init>() -> <init>
    57:61:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude$Value,java.lang.Class[]) -> <init>
    81:85:boolean _suppressNulls(com.fasterxml.jackson.annotation.JsonInclude$Value) -> _suppressNulls
    89:98:java.lang.Object _suppressableValue(com.fasterxml.jackson.annotation.JsonInclude$Value) -> _suppressableValue
    java.lang.Object value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> value
    com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter withConfig(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> withConfig
    151:190:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    200:240:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter -> com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter:
    java.lang.String _attrName -> _attrName
    35:36:void <init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType) -> <init>
    42:48:void <init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude$Value) -> <init>
    55:55:com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter construct(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType) -> construct
    71:71:com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter withConfig(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> withConfig
    82:82:java.lang.Object value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> value
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer -> com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer:
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer -> _defaultSerializer
    64:66:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase) -> <init>
    69:71:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set) -> <init>
    75:77:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    90:90:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    95:95:boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    101:101:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    106:106:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    111:111:com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer withIgnorals(java.util.Set) -> withIgnorals
    117:117:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    135:144:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    155:169:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    179:184:boolean hasSingleElement(com.fasterxml.jackson.databind.SerializerProvider) -> hasSingleElement
    191:220:void serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsArray
    229:229:java.lang.String toString() -> toString
    46:46:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.util.Set) -> withIgnorals
com.fasterxml.jackson.databind.ser.impl.FailingSerializer -> com.fasterxml.jackson.databind.ser.impl.FailingSerializer:
    java.lang.String _msg -> _msg
    28:30:void <init>(java.lang.String) -> <init>
    35:36:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter -> com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter:
    19:22:com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructViewBased(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> constructViewBased
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView -> com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class[] _views -> _views
    109:112:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> <init>
    116:116:com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    121:122:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    126:127:void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    133:138:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    144:149:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    162:171:boolean _inView(java.lang.Class) -> _inView
    98:98:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView -> com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class _view -> _view
    43:46:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class) -> <init>
    50:50:com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    55:56:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    60:61:void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    67:73:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    79:85:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    31:31:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer -> com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer:
    27:28:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    33:34:void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    40:40:com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    51:51:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.List) -> isEmpty
    56:56:boolean hasSingleElement(java.util.List) -> hasSingleElement
    61:61:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    69:81:void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    87:125:void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    131:151:void serializeContentsUsing(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    156:188:void serializeTypedContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeTypedContents
    18:18:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    18:18:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    18:18:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    18:18:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer -> com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer:
    com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer instance -> instance
    37:38:void <init>() -> <init>
    42:43:void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer,java.lang.Boolean) -> <init>
    47:47:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    67:79:void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    86:90:void serializeWithType(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    95:109:void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int) -> serializeContents
    22:22:void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    22:22:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    22:22:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    28:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.IteratorSerializer -> com.fasterxml.jackson.databind.ser.impl.IteratorSerializer:
    19:20:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    25:26:void <init>(com.fasterxml.jackson.databind.ser.impl.IteratorSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    30:30:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Iterator) -> isEmpty
    36:36:boolean hasSingleElement(java.util.Iterator) -> hasSingleElement
    41:41:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    48:48:com.fasterxml.jackson.databind.ser.impl.IteratorSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    66:69:void serialize(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    75:94:void serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    99:124:void _serializeDynamicContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> _serializeDynamicContents
    13:13:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    13:13:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    13:13:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    13:13:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    13:13:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer -> com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer:
    java.lang.Object MARKER_FOR_EMPTY -> MARKER_FOR_EMPTY
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    boolean _valueTypeIsStatic -> _valueTypeIsStatic
    com.fasterxml.jackson.databind.JavaType _entryType -> _entryType
    com.fasterxml.jackson.databind.JavaType _keyType -> _keyType
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> _keySerializer
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers -> _dynamicValueSerializers
    java.lang.Object _suppressableValue -> _suppressableValue
    boolean _suppressNulls -> _suppressNulls
    111:121:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    138:150:void <init>(com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object,boolean) -> <init>
    154:154:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    164:164:com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object,boolean) -> withResolved
    173:177:com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    185:275:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    286:286:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    296:296:boolean hasSingleElement(java.util.Map$Entry) -> hasSingleElement
    302:326:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Map$Entry) -> isEmpty
    339:342:void serialize(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    349:354:void serializeWithType(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    360:414:void serializeDynamic(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeDynamic
    425:429:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    435:439:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    24:24:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    24:24:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    24:24:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    24:24:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    33:33:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer$1 -> com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include
    230:230:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter -> com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter:
    com.fasterxml.jackson.databind.JavaType idType -> idType
    com.fasterxml.jackson.core.SerializableString propertyName -> propertyName
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> generator
    com.fasterxml.jackson.databind.JsonSerializer serializer -> serializer
    boolean alwaysAsId -> alwaysAsId
    52:58:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.SerializableString,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> <init>
    70:72:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean) -> construct
    76:76:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> withSerializer
    83:86:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withAlwaysAsId(boolean) -> withAlwaysAsId
com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator -> com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _property -> _property
    18:19:void <init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    23:25:void <init>(java.lang.Class,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    33:45:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    51:55:java.lang.Object generateId(java.lang.Object) -> generateId
    62:62:com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    68:68:com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    73:77:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap:
    boolean _resetWhenFull -> _resetWhenFull
    35:37:void <init>(boolean) -> <init>
    39:41:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    64:65:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddPrimarySerializer
    72:73:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddPrimarySerializer
    90:91:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddSecondarySerializer
    98:99:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddSecondarySerializer
    144:145:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddKeySerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
    179:179:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties() -> emptyForProperties
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double:
    java.lang.Class _type1 -> _type1
    java.lang.Class _type2 -> _type2
    com.fasterxml.jackson.databind.JsonSerializer _serializer1 -> _serializer1
    com.fasterxml.jackson.databind.JsonSerializer _serializer2 -> _serializer2
    300:305:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    310:316:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    322:326:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty:
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_PROPERTIES -> FOR_PROPERTIES
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_ROOT_VALUES -> FOR_ROOT_VALUES
    245:246:void <init>(boolean) -> <init>
    250:250:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    255:255:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
    239:242:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi:
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer[] _entries -> _entries
    345:347:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer[]) -> <init>
    352:358:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    364:375:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult:
    com.fasterxml.jackson.databind.JsonSerializer serializer -> serializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map -> map
    206:209:void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap) -> <init>
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single:
    java.lang.Class _type -> _type
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    271:274:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    279:282:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    287:287:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer:
    java.lang.Class type -> type
    com.fasterxml.jackson.databind.JsonSerializer serializer -> serializer
    220:223:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap -> com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap:
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] _buckets -> _buckets
    int _size -> _size
    int _mask -> _mask
    27:38:void <init>(java.util.Map) -> <init>
    43:48:int findSize(int) -> findSize
    55:55:com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap from(java.util.HashMap) -> from
    68:80:com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> typedValueSerializer
    85:97:com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    102:114:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> untypedValueSerializer
    119:131:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket -> com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket:
    com.fasterxml.jackson.databind.JsonSerializer value -> value
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket next -> next
    java.lang.Class _class -> _class
    com.fasterxml.jackson.databind.JavaType _type -> _type
    boolean _isTyped -> _isTyped
    151:157:void <init>(com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket,com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    160:160:boolean matchesTyped(java.lang.Class) -> matchesTyped
    164:164:boolean matchesUntyped(java.lang.Class) -> matchesUntyped
    168:168:boolean matchesTyped(com.fasterxml.jackson.databind.JavaType) -> matchesTyped
    172:172:boolean matchesUntyped(com.fasterxml.jackson.databind.JavaType) -> matchesUntyped
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter -> com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter:
    88:88:com.fasterxml.jackson.databind.ser.PropertyFilter from(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> from
    132:132:boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> include
    142:142:boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter) -> include
    167:172:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> serializeAsField
    207:212:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsField
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$1 -> com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$1:
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter val$src -> val$src
    88:88:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> <init>
    93:94:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsField
com.fasterxml.jackson.databind.ser.impl.StringArraySerializer -> com.fasterxml.jackson.databind.ser.impl.StringArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    com.fasterxml.jackson.databind.ser.impl.StringArraySerializer instance -> instance
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> _elementSerializer
    49:51:void <init>() -> <init>
    56:58:void <init>(com.fasterxml.jackson.databind.ser.impl.StringArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    62:62:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    71:71:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    89:122:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    143:143:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String[]) -> isEmpty
    148:148:boolean hasSingleElement(java.lang.String[]) -> hasSingleElement
    161:173:void serialize(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    179:195:void serializeContents(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    200:208:void serializeContentsSlow(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsSlow
    22:22:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    22:22:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    22:22:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    22:22:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    32:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer -> com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer:
    com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer instance -> instance
    36:37:void <init>() -> <init>
    42:43:void <init>(com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer,java.lang.Boolean) -> <init>
    47:47:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    70:83:void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    90:95:void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    101:115:void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    22:22:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    22:22:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    27:27:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer -> com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer:
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> _typeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    25:28:void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    32:33:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    41:42:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    45:45:java.lang.Class handledType() -> handledType
    58:65:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer -> com.fasterxml.jackson.databind.ser.impl.UnknownSerializer:
    18:19:void <init>() -> <init>
    25:26:void <init>(java.lang.Class) -> <init>
    32:38:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    44:50:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    54:54:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    71:74:void failForEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> failForEmpty
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter -> com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter:
    com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer -> _nameTransformer
    43:45:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    49:51:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString) -> <init>
    56:62:com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    72:72:com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter _new(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString) -> _new
    90:131:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    137:148:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    209:222:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    24:24:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer -> com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer:
    com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer -> _nameTransformer
    36:38:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    42:44:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> <init>
    48:50:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    53:55:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,java.util.Set) -> <init>
    66:66:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    71:71:boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    76:76:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    81:81:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    86:86:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.util.Set) -> withIgnorals
    95:95:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    112:122:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    128:142:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    151:151:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.ser.impl.WritableObjectId -> com.fasterxml.jackson.databind.ser.impl.WritableObjectId:
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> generator
    java.lang.Object id -> id
    boolean idWritten -> idWritten
    26:30:void <init>(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> <init>
    34:43:boolean writeAsId(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> writeAsId
    50:53:java.lang.Object generateId(java.lang.Object) -> generateId
    62:76:void writeAsField(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> writeAsField
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase -> com.fasterxml.jackson.databind.ser.std.ArraySerializerBase:
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    36:39:void <init>(java.lang.Class) -> <init>
    68:71:void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    94:106:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    115:126:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    134:139:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    148:151:boolean _shouldUnwrapSingle(com.fasterxml.jackson.databind.SerializerProvider) -> _shouldUnwrapSingle
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase -> com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase:
    com.fasterxml.jackson.databind.JavaType _elementType -> _elementType
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    boolean _staticTyping -> _staticTyping
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> _elementSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    79:88:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    115:123:void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    168:210:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    241:251:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    258:263:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    305:310:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    316:320:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer -> com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer:
    24:25:void <init>(com.fasterxml.jackson.databind.type.ReferenceType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    32:34:void <init>(com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer,java.lang.Object,boolean) -> <init>
    41:41:com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer) -> withResolved
    49:49:com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    62:62:boolean _isValuePresent(java.util.concurrent.atomic.AtomicReference) -> _isValuePresent
    67:67:java.lang.Object _getReferenced(java.util.concurrent.atomic.AtomicReference) -> _getReferenced
    72:72:java.lang.Object _getReferencedIfPresent(java.util.concurrent.atomic.AtomicReference) -> _getReferencedIfPresent
    10:10:java.lang.Object _getReferencedIfPresent(java.lang.Object) -> _getReferencedIfPresent
    10:10:java.lang.Object _getReferenced(java.lang.Object) -> _getReferenced
    10:10:boolean _isValuePresent(java.lang.Object) -> _isValuePresent
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase -> com.fasterxml.jackson.databind.ser.std.BeanSerializerBase:
    com.fasterxml.jackson.databind.PropertyName NAME_FOR_OBJECT_REF -> NAME_FOR_OBJECT_REF
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPS -> NO_PROPS
    com.fasterxml.jackson.databind.JavaType _beanType -> _beanType
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props -> _props
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps -> _filteredProps
    com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter -> _anyGetterWriter
    java.lang.Object _propertyFilterId -> _propertyFilterId
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId -> _typeId
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter -> _objectIdWriter
    com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape -> _serializationShape
    112:130:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    135:145:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    150:151:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> <init>
    159:169:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    179:208:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set) -> <init>
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.util.Set) -> withIgnorals
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    268:269:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    274:285:com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] rename(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    302:376:void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
    389:404:com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> findConvertingSerializer
    413:556:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    578:578:boolean usesObjectId() -> usesObjectId
    592:607:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    612:636:void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean) -> _serializeWithObjectId
    641:654:void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _serializeWithObjectId
    660:671:void _serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId) -> _serializeObjectId
    678:686:com.fasterxml.jackson.core.type.WritableTypeId _typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> _typeIdDef
    709:740:void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFields
    755:788:void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFieldsFiltered
    41:43:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase$1 -> com.fasterxml.jackson.databind.ser.std.BeanSerializerBase$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape
    427:427:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.BooleanSerializer -> com.fasterxml.jackson.databind.ser.std.BooleanSerializer:
    boolean _forPrimitive -> _forPrimitive
    42:44:void <init>(boolean) -> <init>
    50:58:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    63:64:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    70:71:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber -> com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber:
    boolean _forPrimitive -> _forPrimitive
    102:104:void <init>(boolean) -> <init>
    108:109:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    119:120:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    133:141:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer -> com.fasterxml.jackson.databind.ser.std.ByteArraySerializer:
    36:37:void <init>() -> <init>
    41:41:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,byte[]) -> isEmpty
    48:50:void serialize(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    58:70:void serializeWithType(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    30:30:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    30:30:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    30:30:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer -> com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer:
    16:16:void <init>() -> <init>
    22:35:void serialize(java.nio.ByteBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    13:13:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.CalendarSerializer -> com.fasterxml.jackson.databind.ser.std.CalendarSerializer:
    com.fasterxml.jackson.databind.ser.std.CalendarSerializer instance -> instance
    23:23:void <init>() -> <init>
    26:27:void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    31:31:com.fasterxml.jackson.databind.ser.std.CalendarSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    36:36:long _timestamp(java.util.Calendar) -> _timestamp
    42:47:void serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    16:16:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    16:16:com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    21:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ClassSerializer -> com.fasterxml.jackson.databind.ser.std.ClassSerializer:
    22:22:void <init>() -> <init>
    27:28:void serialize(java.lang.Class,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.CollectionSerializer -> com.fasterxml.jackson.databind.ser.std.CollectionSerializer:
    41:42:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    57:58:void <init>(com.fasterxml.jackson.databind.ser.std.CollectionSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    62:62:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    69:69:com.fasterxml.jackson.databind.ser.std.CollectionSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    80:80:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection) -> isEmpty
    85:85:boolean hasSingleElement(java.util.Collection) -> hasSingleElement
    97:109:void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    114:155:void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    160:182:void serializeContentsUsing(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    25:25:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    25:25:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    25:25:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    25:25:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    25:25:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.DateSerializer -> com.fasterxml.jackson.databind.ser.std.DateSerializer:
    com.fasterxml.jackson.databind.ser.std.DateSerializer instance -> instance
    27:28:void <init>() -> <init>
    31:32:void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    36:36:com.fasterxml.jackson.databind.ser.std.DateSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    41:41:long _timestamp(java.util.Date) -> _timestamp
    47:52:void serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    15:15:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    15:15:com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    24:24:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase -> com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase:
    java.lang.Boolean _useTimestamp -> _useTimestamp
    java.text.DateFormat _customFormat -> _customFormat
    java.util.concurrent.atomic.AtomicReference _reusedCustomFormat -> _reusedCustomFormat
    53:57:void <init>(java.lang.Class,java.lang.Boolean,java.text.DateFormat) -> <init>
    com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    65:133:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    147:147:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    182:192:boolean _asTimestamp(com.fasterxml.jackson.databind.SerializerProvider) -> _asTimestamp
    211:229:void _serializeAsString(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> _serializeAsString
com.fasterxml.jackson.databind.ser.std.EnumSerializer -> com.fasterxml.jackson.databind.ser.std.EnumSerializer:
    com.fasterxml.jackson.databind.util.EnumValues _values -> _values
    java.lang.Boolean _serializeAsIndex -> _serializeAsIndex
    58:61:void <init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean) -> <init>
    77:79:com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat$Value) -> construct
    91:101:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    123:133:void serialize(java.lang.Enum,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    197:200:boolean _serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider) -> _serializeAsIndex
    211:228:java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Value,boolean,java.lang.Boolean) -> _isShapeWrittenUsingIndex
    27:27:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.EnumSetSerializer -> com.fasterxml.jackson.databind.ser.std.EnumSetSerializer:
    18:19:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    24:25:void <init>(com.fasterxml.jackson.databind.ser.std.EnumSetSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    30:30:com.fasterxml.jackson.databind.ser.std.EnumSetSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    37:37:com.fasterxml.jackson.databind.ser.std.EnumSetSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    42:42:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.EnumSet) -> isEmpty
    47:47:boolean hasSingleElement(java.util.EnumSet) -> hasSingleElement
    54:66:void serialize(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    73:87:void serializeContents(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    10:10:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    10:10:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    10:10:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    10:10:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    10:10:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    10:10:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.FileSerializer -> com.fasterxml.jackson.databind.ser.std.FileSerializer:
    22:22:void <init>() -> <init>
    26:27:void serialize(java.io.File,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer -> com.fasterxml.jackson.databind.ser.std.InetAddressSerializer:
    boolean _asNumeric -> _asNumeric
    36:37:void <init>() -> <init>
    43:45:void <init>(boolean) -> <init>
    51:63:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    71:86:void serialize(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    93:97:void serializeWithType(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    25:25:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    25:25:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer -> com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer:
    19:19:void <init>() -> <init>
    24:39:void serialize(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    46:50:void serializeWithType(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    15:15:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    15:15:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.IterableSerializer -> com.fasterxml.jackson.databind.ser.std.IterableSerializer:
    19:20:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    25:26:void <init>(com.fasterxml.jackson.databind.ser.std.IterableSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    30:30:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    37:37:com.fasterxml.jackson.databind.ser.std.IterableSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    43:43:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Iterable) -> isEmpty
    49:58:boolean hasSingleElement(java.lang.Iterable) -> hasSingleElement
    65:76:void serialize(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    82:113:void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    12:12:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    12:12:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    12:12:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    12:12:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    12:12:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer -> com.fasterxml.jackson.databind.ser.std.JsonValueSerializer:
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> _accessor
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    boolean _forceTypeInformation -> _forceTypeInformation
    78:83:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    89:94:void <init>(com.fasterxml.jackson.databind.ser.std.JsonValueSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> <init>
    98:98:java.lang.Class _notNullClass(java.lang.Class) -> _notNullClass
    104:108:com.fasterxml.jackson.databind.ser.std.JsonValueSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> withResolved
    126:153:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    166:185:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    192:224:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    308:318:boolean isNaturalTypeWithStdHandling(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> isNaturalTypeWithStdHandling
    329:329:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter -> com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter:
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> _typeSerializer
    java.lang.Object _forObject -> _forObject
    349:352:void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object) -> <init>
    356:356:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    361:361:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    366:366:java.lang.String getPropertyName() -> getPropertyName
    380:381:com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    388:388:com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
com.fasterxml.jackson.databind.ser.std.MapProperty -> com.fasterxml.jackson.databind.ser.std.MapProperty:
    com.fasterxml.jackson.databind.BeanProperty BOGUS_PROP -> BOGUS_PROP
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> _typeSerializer
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    java.lang.Object _key -> _key
    java.lang.Object _value -> _value
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> _keySerializer
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    37:40:void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    51:55:void reset(java.lang.Object,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> reset
    66:69:java.lang.String getName() -> getName
    88:88:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    105:111:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    117:120:void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsOmittedField
    163:163:com.fasterxml.jackson.databind.JavaType getType() -> getType
    173:173:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.MapSerializer -> com.fasterxml.jackson.databind.ser.std.MapSerializer:
    com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE -> UNSPECIFIED_TYPE
    java.lang.Object MARKER_FOR_EMPTY -> MARKER_FOR_EMPTY
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    boolean _valueTypeIsStatic -> _valueTypeIsStatic
    com.fasterxml.jackson.databind.JavaType _keyType -> _keyType
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> _keySerializer
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers -> _dynamicValueSerializers
    java.util.Set _ignoredEntries -> _ignoredEntries
    java.lang.Object _filterId -> _filterId
    java.lang.Object _suppressableValue -> _suppressableValue
    boolean _suppressNulls -> _suppressNulls
    boolean _sortKeys -> _sortKeys
    168:183:void <init>(java.util.Set,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    190:205:void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set) -> <init>
    213:227:void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean) -> <init>
    231:245:void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean) -> <init>
    249:253:com.fasterxml.jackson.databind.ser.std.MapSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    263:268:com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,boolean) -> withResolved
    273:277:com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object) -> withFilterId
    287:291:com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    304:324:com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object) -> construct
    331:332:void _ensureOverride(java.lang.String) -> _ensureOverride
    394:514:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    525:525:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    536:588:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Map) -> isEmpty
    593:593:boolean hasSingleElement(java.util.Map) -> hasSingleElement
    626:643:void serialize(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    651:670:void serializeWithType(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    687:723:void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFields
    733:783:void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> serializeOptionalFields
    794:822:void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeFieldsUsing
    835:884:void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object) -> serializeFilteredFields
    893:938:void serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> serializeTypedFields
    953:1002:void serializeFilteredAnyProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,java.util.Map,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object) -> serializeFilteredAnyProperties
    1043:1048:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    1054:1058:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    1065:1084:java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> _orderEntries
    1100:1100:boolean _hasNullKey(java.util.Map) -> _hasNullKey
    1106:1134:void _writeNullKeyedEntry(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> _writeNullKeyedEntry
    1139:1148:com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> _findSerializer
    33:33:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    33:33:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    33:33:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    33:33:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    33:33:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    40:45:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.MapSerializer$1 -> com.fasterxml.jackson.databind.ser.std.MapSerializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include
    472:472:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NullSerializer -> com.fasterxml.jackson.databind.ser.std.NullSerializer:
    com.fasterxml.jackson.databind.ser.std.NullSerializer instance -> instance
    26:26:void <init>() -> <init>
    30:31:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    44:45:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    24:24:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializer instance -> instance
    boolean _isInt -> _isInt
    38:41:void <init>(java.lang.Class) -> <init>
    47:55:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    62:81:void serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    21:21:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    30:30:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializer$1 -> com.fasterxml.jackson.databind.ser.std.NumberSerializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape
    49:49:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers -> com.fasterxml.jackson.databind.ser.std.NumberSerializers:
    26:41:void addAll(java.util.Map) -> addAll
com.fasterxml.jackson.databind.ser.std.NumberSerializers$1 -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape
    87:87:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base:
    com.fasterxml.jackson.core.JsonParser$NumberType _numberType -> _numberType
    java.lang.String _schemaType -> _schemaType
    boolean _isInt -> _isInt
    57:63:void <init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser$NumberType,java.lang.String) -> <init>
    85:93:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer:
    208:209:void <init>(java.lang.Class) -> <init>
    214:215:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    223:224:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    205:205:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer instance -> instance
    188:189:void <init>() -> <init>
    194:195:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    183:183:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    185:185:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance -> instance
    160:161:void <init>() -> <init>
    166:167:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    155:155:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    157:157:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer:
    131:132:void <init>(java.lang.Class) -> <init>
    137:138:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    146:147:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    128:128:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer:
    173:174:void <init>(java.lang.Class) -> <init>
    179:180:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    170:170:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer instance -> instance
    108:109:void <init>() -> <init>
    114:115:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    103:103:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    105:105:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer -> com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer:
    boolean _staticTyping -> _staticTyping
    com.fasterxml.jackson.databind.JavaType _elementType -> _elementType
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> _elementSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    64:70:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    87:93:void <init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    97:97:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    103:103:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    108:112:com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    126:162:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    183:183:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object[]) -> isEmpty
    188:188:boolean hasSingleElement(java.lang.Object[]) -> hasSingleElement
    200:212:void serialize(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    217:254:void serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    259:280:void serializeContentsUsing(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    284:306:void serializeTypedContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeTypedContents
    336:341:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    347:352:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    22:22:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    22:22:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    22:22:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    22:22:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.RawSerializer -> com.fasterxml.jackson.databind.ser.std.RawSerializer:
    26:27:void <init>(java.lang.Class) -> <init>
    31:32:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    39:43:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer -> com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer:
    java.lang.Object MARKER_FOR_EMPTY -> MARKER_FOR_EMPTY
    com.fasterxml.jackson.databind.JavaType _referredType -> _referredType
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    com.fasterxml.jackson.databind.util.NameTransformer _unwrapper -> _unwrapper
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    java.lang.Object _suppressableValue -> _suppressableValue
    boolean _suppressNulls -> _suppressNulls
    100:109:void <init>(com.fasterxml.jackson.databind.type.ReferenceType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    117:126:void <init>(com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer,java.lang.Object,boolean) -> <init>
    130:139:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer) -> withResolved
    com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    boolean _isValuePresent(java.lang.Object) -> _isValuePresent
    java.lang.Object _getReferenced(java.lang.Object) -> _getReferenced
    java.lang.Object _getReferencedIfPresent(java.lang.Object) -> _getReferencedIfPresent
    195:274:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    281:307:boolean _useStatic(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> _useStatic
    320:341:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    346:346:boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    366:382:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    389:412:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    447:465:com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class) -> _findCachedSerializer
    476:476:com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> _findSerializer
    35:35:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer$1 -> com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include
    231:231:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.SerializableSerializer -> com.fasterxml.jackson.databind.ser.std.SerializableSerializer:
    com.fasterxml.jackson.databind.ser.std.SerializableSerializer instance -> instance
    27:27:void <init>() -> <init>
    31:34:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializable) -> isEmpty
    39:40:void serialize(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    45:46:void serializeWithType(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    20:20:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    20:20:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    20:20:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.SqlDateSerializer -> com.fasterxml.jackson.databind.ser.std.SqlDateSerializer:
    23:24:void <init>() -> <init>
    27:28:void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    32:32:com.fasterxml.jackson.databind.ser.std.SqlDateSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    37:37:long _timestamp(java.sql.Date) -> _timestamp
    44:57:void serialize(java.sql.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    16:16:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    16:16:com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer -> com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer:
    17:17:void <init>() -> <init>
    22:23:void serialize(java.sql.Time,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    12:12:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase -> com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase:
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    35:37:void <init>(java.lang.Class) -> <init>
    44:46:void <init>(com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    66:97:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    103:103:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection) -> isEmpty
    void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    20:20:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    20:20:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.StdArraySerializers -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers:
    java.util.HashMap _arraySerializers -> _arraySerializers
    46:46:com.fasterxml.jackson.databind.JsonSerializer findStandardImpl(java.lang.Class) -> findStandardImpl
    25:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    94:94:void <init>() -> <init>
    98:99:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    103:103:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    112:112:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    128:128:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,boolean[]) -> isEmpty
    133:133:boolean hasSingleElement(boolean[]) -> hasSingleElement
    139:148:void serialize(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    154:157:void serializeContents(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    86:86:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    86:86:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    86:86:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    86:86:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    92:92:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer:
    264:264:void <init>() -> <init>
    268:268:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,char[]) -> isEmpty
    276:284:void serialize(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    292:304:void serializeWithType(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    309:312:void _writeArrayContents(com.fasterxml.jackson.core.JsonGenerator,char[]) -> _writeArrayContents
    261:261:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    261:261:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    261:261:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    576:576:void <init>() -> <init>
    583:584:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    588:588:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    597:597:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    613:613:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,double[]) -> isEmpty
    618:618:boolean hasSingleElement(double[]) -> hasSingleElement
    624:632:void serialize(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    637:640:void serializeContents(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    569:569:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    569:569:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    569:569:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    569:569:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    574:574:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    501:502:void <init>() -> <init>
    505:506:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    510:510:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    526:526:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,float[]) -> isEmpty
    531:531:boolean hasSingleElement(float[]) -> hasSingleElement
    537:546:void serialize(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    552:555:void serializeContents(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    493:493:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    493:493:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    493:493:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    493:493:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    498:498:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    338:338:void <init>() -> <init>
    345:346:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    350:350:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    359:359:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    375:375:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,int[]) -> isEmpty
    380:380:boolean hasSingleElement(int[]) -> hasSingleElement
    386:394:void serialize(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    400:403:void serializeContents(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    331:331:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    331:331:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    331:331:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    331:331:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    336:336:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    424:424:void <init>() -> <init>
    427:428:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    432:432:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    448:448:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,long[]) -> isEmpty
    453:453:boolean hasSingleElement(long[]) -> hasSingleElement
    459:467:void serialize(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    473:476:void serializeContents(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    417:417:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    417:417:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    417:417:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    417:417:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    422:422:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    182:182:void <init>() -> <init>
    185:186:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    190:190:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    206:206:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,short[]) -> isEmpty
    211:211:boolean hasSingleElement(short[]) -> hasSingleElement
    217:226:void serialize(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    233:236:void serializeContents(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    175:175:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    175:175:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    175:175:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    175:175:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    180:180:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer:
    63:64:void <init>(java.lang.Class) -> <init>
    68:69:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    76:76:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer -> com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer:
    com.fasterxml.jackson.databind.util.Converter _converter -> _converter
    com.fasterxml.jackson.databind.JavaType _delegateType -> _delegateType
    com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer -> _delegateSerializer
    74:78:void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    87:88:com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> withDelegate
    100:104:void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
    110:130:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    157:169:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    178:184:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    189:196:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    256:256:java.lang.Object convertValue(java.lang.Object) -> convertValue
    271:271:com.fasterxml.jackson.databind.JsonSerializer _findSerializer(java.lang.Object,com.fasterxml.jackson.databind.SerializerProvider) -> _findSerializer
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers:
    27:64:java.util.Collection all() -> all
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer:
    76:76:void <init>() -> <init>
    80:81:void serialize(java.util.concurrent.atomic.AtomicBoolean,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    73:73:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer:
    97:97:void <init>() -> <init>
    101:102:void serialize(java.util.concurrent.atomic.AtomicInteger,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    94:94:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer:
    119:119:void <init>() -> <init>
    123:124:void serialize(java.util.concurrent.atomic.AtomicLong,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    116:116:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializer -> com.fasterxml.jackson.databind.ser.std.StdKeySerializer:
    18:18:void <init>() -> <init>
    23:24:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializers -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers:
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER -> DEFAULT_KEY_SERIALIZER
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER -> DEFAULT_STRING_SERIALIZER
    38:78:com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,boolean) -> getStdKeySerializer
    91:107:com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class) -> getFallbackKeySerializer
    18:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default:
    int _typeId -> _typeId
    145:147:void <init>(int,java.lang.Class) -> <init>
    151:192:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic:
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    205:207:void <init>() -> <init>
    219:226:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    237:250:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer:
    com.fasterxml.jackson.databind.util.EnumValues _values -> _values
    277:279:void <init>(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues) -> <init>
    284:284:com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer construct(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues) -> construct
    291:301:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer:
    259:259:void <init>() -> <init>
    263:264:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdScalarSerializer -> com.fasterxml.jackson.databind.ser.std.StdScalarSerializer:
    20:21:void <init>(java.lang.Class) -> <init>
    29:30:void <init>(java.lang.Class,boolean) -> <init>
    44:48:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.StdSerializer -> com.fasterxml.jackson.databind.ser.std.StdSerializer:
    java.lang.Object KEY_CONTENT_CONVERTER_LOCK -> KEY_CONTENT_CONVERTER_LOCK
    java.lang.Class _handledType -> _handledType
    58:60:void <init>(java.lang.Class) -> <init>
    63:65:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    72:74:void <init>(java.lang.Class,boolean) -> <init>
    80:82:void <init>(com.fasterxml.jackson.databind.ser.std.StdSerializer) -> <init>
    91:91:java.lang.Class handledType() -> handledType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    301:316:void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    323:338:void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
    364:383:com.fasterxml.jackson.databind.JsonSerializer findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> findContextualConvertingSerializer
    394:410:com.fasterxml.jackson.databind.JsonSerializer findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> findConvertingContentSerializer
    423:430:com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object) -> findPropertyFilter
    445:449:com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> findFormatOverrides
    464:468:java.lang.Boolean findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Feature) -> findFormatFeature
    493:504:com.fasterxml.jackson.databind.JsonSerializer findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAnnotatedContentSerializer
    520:520:boolean isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> isDefaultSerializer
    527:527:boolean _neitherNull(java.lang.Object,java.lang.Object) -> _neitherNull
    534:534:boolean _nonEmpty(java.util.Collection) -> _nonEmpty
    44:44:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StringSerializer -> com.fasterxml.jackson.databind.ser.std.StringSerializer:
    31:31:void <init>() -> <init>
    35:36:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    41:42:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    49:50:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer -> com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer:
    14:14:void <init>() -> <init>
    18:19:void serialize(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    26:30:void serializeWithType(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    11:11:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    11:11:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.ToStringSerializer -> com.fasterxml.jackson.databind.ser.std.ToStringSerializer:
    com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance -> instance
    39:39:void <init>() -> <init>
    47:48:void <init>(java.lang.Class) -> <init>
    52:52:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    59:60:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    78:82:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    29:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer -> com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer:
    28:28:void <init>() -> <init>
    34:35:void serialize(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    53:57:void serializeWithType(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    23:23:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    23:23:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.UUIDSerializer -> com.fasterxml.jackson.databind.ser.std.UUIDSerializer:
    char[] HEX_CHARS -> HEX_CHARS
    23:23:void <init>() -> <init>
    29:33:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.UUID) -> isEmpty
    41:73:void serialize(java.util.UUID,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    77:79:void _appendInt(int,char[],int) -> _appendInt
    83:88:void _appendShort(int,char[],int) -> _appendShort
    92:99:byte[] _asBytes(java.util.UUID) -> _asBytes
    104:108:void _appendInt(int,byte[],int) -> _appendInt
    17:17:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    17:17:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    21:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.ArrayType -> com.fasterxml.jackson.databind.type.ArrayType:
    com.fasterxml.jackson.databind.JavaType _componentType -> _componentType
    java.lang.Object _emptyArray -> _emptyArray
    33:38:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> <init>
    41:41:com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings) -> construct
    47:48:com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Object,java.lang.Object) -> construct
    53:54:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    61:64:com.fasterxml.jackson.databind.type.ArrayType withTypeHandler(java.lang.Object) -> withTypeHandler
    70:73:com.fasterxml.jackson.databind.type.ArrayType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    79:82:com.fasterxml.jackson.databind.type.ArrayType withValueHandler(java.lang.Object) -> withValueHandler
    87:90:com.fasterxml.jackson.databind.type.ArrayType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    96:99:com.fasterxml.jackson.databind.type.ArrayType withStaticTyping() -> withStaticTyping
    124:124:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    138:138:boolean isArrayType() -> isArrayType
    146:146:boolean isAbstract() -> isAbstract
    154:154:boolean isConcrete() -> isConcrete
    159:159:boolean hasGenericTypes() -> hasGenericTypes
    169:169:boolean isContainerType() -> isContainerType
    172:172:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    186:186:boolean hasHandlers() -> hasHandlers
    191:192:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    210:210:java.lang.String toString() -> toString
    216:221:boolean equals(java.lang.Object) -> equals
    12:12:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    12:12:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    12:12:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    12:12:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    12:12:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
com.fasterxml.jackson.databind.type.ClassKey -> com.fasterxml.jackson.databind.type.ClassKey:
    java.lang.String _className -> _className
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    36:40:void <init>() -> <init>
    43:47:void <init>(java.lang.Class) -> <init>
    51:54:void reset(java.lang.Class) -> reset
    66:66:int compareTo(com.fasterxml.jackson.databind.type.ClassKey) -> compareTo
    78:90:boolean equals(java.lang.Object) -> equals
    93:93:int hashCode() -> hashCode
    95:95:java.lang.String toString() -> toString
    19:19:int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.databind.type.ClassStack -> com.fasterxml.jackson.databind.type.ClassStack:
    com.fasterxml.jackson.databind.type.ClassStack _parent -> _parent
    java.lang.Class _current -> _current
    java.util.ArrayList _selfRefs -> _selfRefs
    21:22:void <init>(java.lang.Class) -> <init>
    24:27:void <init>(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class) -> <init>
    33:33:com.fasterxml.jackson.databind.type.ClassStack child(java.lang.Class) -> child
    42:46:void addSelfReference(com.fasterxml.jackson.databind.type.ResolvedRecursiveType) -> addSelfReference
    55:60:void resolveSelfReferences(com.fasterxml.jackson.databind.JavaType) -> resolveSelfReferences
    64:70:com.fasterxml.jackson.databind.type.ClassStack find(java.lang.Class) -> find
    75:84:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.CollectionLikeType -> com.fasterxml.jackson.databind.type.CollectionLikeType:
    com.fasterxml.jackson.databind.JavaType _elementType -> _elementType
    34:37:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    102:105:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    111:111:com.fasterxml.jackson.databind.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    118:118:com.fasterxml.jackson.databind.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    125:125:com.fasterxml.jackson.databind.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    131:131:com.fasterxml.jackson.databind.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    138:146:com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> withHandlersFrom
    151:154:com.fasterxml.jackson.databind.type.CollectionLikeType withStaticTyping() -> withStaticTyping
    162:162:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    174:174:boolean isContainerType() -> isContainerType
    177:177:boolean isCollectionLikeType() -> isCollectionLikeType
    180:180:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    194:194:boolean hasHandlers() -> hasHandlers
    204:208:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    213:220:java.lang.String buildCanonicalName() -> buildCanonicalName
    236:236:boolean isTrueCollectionType() -> isTrueCollectionType
    248:253:boolean equals(java.lang.Object) -> equals
    259:259:java.lang.String toString() -> toString
    15:15:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    15:15:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    15:15:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    15:15:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    15:15:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
com.fasterxml.jackson.databind.type.CollectionType -> com.fasterxml.jackson.databind.type.CollectionType:
    25:26:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    40:40:com.fasterxml.jackson.databind.type.CollectionType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType) -> construct
    73:76:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    82:82:com.fasterxml.jackson.databind.type.CollectionType withTypeHandler(java.lang.Object) -> withTypeHandler
    89:89:com.fasterxml.jackson.databind.type.CollectionType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    96:96:com.fasterxml.jackson.databind.type.CollectionType withValueHandler(java.lang.Object) -> withValueHandler
    102:102:com.fasterxml.jackson.databind.type.CollectionType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    109:112:com.fasterxml.jackson.databind.type.CollectionType withStaticTyping() -> withStaticTyping
    120:120:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    134:134:java.lang.String toString() -> toString
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withStaticTyping() -> withStaticTyping
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    10:10:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    10:10:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    10:10:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    10:10:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    10:10:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
com.fasterxml.jackson.databind.type.MapLikeType -> com.fasterxml.jackson.databind.type.MapLikeType:
    com.fasterxml.jackson.databind.JavaType _keyType -> _keyType
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    39:43:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    102:105:com.fasterxml.jackson.databind.type.MapLikeType withKeyType(com.fasterxml.jackson.databind.JavaType) -> withKeyType
    112:115:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    122:122:com.fasterxml.jackson.databind.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    129:129:com.fasterxml.jackson.databind.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    136:136:com.fasterxml.jackson.databind.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    143:143:com.fasterxml.jackson.databind.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    150:168:com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> withHandlersFrom
    173:176:com.fasterxml.jackson.databind.type.MapLikeType withStaticTyping() -> withStaticTyping
    184:184:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    190:199:java.lang.String buildCanonicalName() -> buildCanonicalName
    210:210:boolean isContainerType() -> isContainerType
    215:215:boolean isMapLikeType() -> isMapLikeType
    220:220:com.fasterxml.jackson.databind.JavaType getKeyType() -> getKeyType
    225:225:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    240:240:boolean hasHandlers() -> hasHandlers
    251:256:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    272:272:com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    283:283:boolean isTrueMapType() -> isTrueMapType
    294:294:java.lang.String toString() -> toString
    300:305:boolean equals(java.lang.Object) -> equals
    16:16:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    16:16:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    16:16:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    16:16:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    16:16:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
com.fasterxml.jackson.databind.type.MapType -> com.fasterxml.jackson.databind.type.MapType:
    23:25:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    40:40:com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> construct
    70:70:com.fasterxml.jackson.databind.type.MapType withTypeHandler(java.lang.Object) -> withTypeHandler
    77:77:com.fasterxml.jackson.databind.type.MapType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    84:84:com.fasterxml.jackson.databind.type.MapType withValueHandler(java.lang.Object) -> withValueHandler
    90:90:com.fasterxml.jackson.databind.type.MapType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    97:100:com.fasterxml.jackson.databind.type.MapType withStaticTyping() -> withStaticTyping
    107:110:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    116:119:com.fasterxml.jackson.databind.type.MapType withKeyType(com.fasterxml.jackson.databind.JavaType) -> withKeyType
    126:126:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    147:147:com.fasterxml.jackson.databind.type.MapType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    161:161:java.lang.String toString() -> toString
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withStaticTyping() -> withStaticTyping
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withKeyType(com.fasterxml.jackson.databind.JavaType) -> withKeyType
    10:10:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    10:10:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    10:10:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    10:10:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    10:10:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
com.fasterxml.jackson.databind.type.PlaceholderForType -> com.fasterxml.jackson.databind.type.PlaceholderForType:
    int _ordinal -> _ordinal
    com.fasterxml.jackson.databind.JavaType _actualType -> _actualType
    25:29:void <init>(int) -> <init>
    31:31:com.fasterxml.jackson.databind.JavaType actualType() -> actualType
    32:32:void actualType(com.fasterxml.jackson.databind.JavaType) -> actualType
    37:37:java.lang.String buildCanonicalName() -> buildCanonicalName
    42:42:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    47:48:java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    53:53:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    58:58:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    63:63:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    68:68:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    73:73:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    78:78:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    83:83:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    94:94:boolean isContainerType() -> isContainerType
    99:99:java.lang.String toString() -> toString
    104:104:boolean equals(java.lang.Object) -> equals
    108:108:java.lang.Object _unsupported() -> _unsupported
com.fasterxml.jackson.databind.type.ReferenceType -> com.fasterxml.jackson.databind.type.ReferenceType:
    com.fasterxml.jackson.databind.JavaType _referencedType -> _referencedType
    com.fasterxml.jackson.databind.JavaType _anchorType -> _anchorType
    34:38:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    82:82:com.fasterxml.jackson.databind.type.ReferenceType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType) -> construct
    95:98:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    105:108:com.fasterxml.jackson.databind.type.ReferenceType withTypeHandler(java.lang.Object) -> withTypeHandler
    115:118:com.fasterxml.jackson.databind.type.ReferenceType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    125:128:com.fasterxml.jackson.databind.type.ReferenceType withValueHandler(java.lang.Object) -> withValueHandler
    135:139:com.fasterxml.jackson.databind.type.ReferenceType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    146:149:com.fasterxml.jackson.databind.type.ReferenceType withStaticTyping() -> withStaticTyping
    157:157:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    165:169:java.lang.String buildCanonicalName() -> buildCanonicalName
    196:196:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    201:201:com.fasterxml.jackson.databind.JavaType getReferencedType() -> getReferencedType
    206:206:boolean hasContentType() -> hasContentType
    211:211:boolean isReferenceType() -> isReferenceType
    222:226:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    256:256:java.lang.String toString() -> toString
    269:278:boolean equals(java.lang.Object) -> equals
    13:13:com.fasterxml.jackson.databind.type.SimpleType withStaticTyping() -> withStaticTyping
    13:13:com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    13:13:com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object) -> withValueHandler
    13:13:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    13:13:com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object) -> withTypeHandler
    13:13:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    13:13:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    13:13:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    13:13:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    13:13:com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> getReferencedType
com.fasterxml.jackson.databind.type.ResolvedRecursiveType -> com.fasterxml.jackson.databind.type.ResolvedRecursiveType:
    com.fasterxml.jackson.databind.JavaType _referencedType -> _referencedType
    17:18:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> <init>
    23:27:void setReference(com.fasterxml.jackson.databind.JavaType) -> setReference
    31:34:com.fasterxml.jackson.databind.JavaType getSuperClass() -> getSuperClass
    37:37:com.fasterxml.jackson.databind.JavaType getSelfReferencedType() -> getSelfReferencedType
    41:41:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    51:51:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    56:56:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    61:61:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    66:66:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    71:71:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    76:76:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    88:88:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    93:93:boolean isContainerType() -> isContainerType
    98:107:java.lang.String toString() -> toString
    112:130:boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.type.SimpleType -> com.fasterxml.jackson.databind.type.SimpleType:
    33:34:void <init>(java.lang.Class) -> <init>
    38:39:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> <init>
    55:57:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean) -> <init>
    68:70:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean) -> <init>
    82:82:com.fasterxml.jackson.databind.type.SimpleType constructUnsafe(java.lang.Class) -> constructUnsafe
    171:171:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    176:179:com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object) -> withTypeHandler
    185:185:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    190:193:com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object) -> withValueHandler
    199:199:com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    204:204:com.fasterxml.jackson.databind.type.SimpleType withStaticTyping() -> withStaticTyping
    212:212:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    218:233:java.lang.String buildCanonicalName() -> buildCanonicalName
    243:243:boolean isContainerType() -> isContainerType
    246:246:boolean hasContentType() -> hasContentType
    256:267:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    304:306:java.lang.String toString() -> toString
    312:324:boolean equals(java.lang.Object) -> equals
    13:13:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    13:13:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    13:13:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    13:13:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
com.fasterxml.jackson.databind.type.TypeBase -> com.fasterxml.jackson.databind.type.TypeBase:
    com.fasterxml.jackson.databind.type.TypeBindings NO_BINDINGS -> NO_BINDINGS
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> NO_TYPES
    com.fasterxml.jackson.databind.JavaType _superClass -> _superClass
    com.fasterxml.jackson.databind.JavaType[] _superInterfaces -> _superInterfaces
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> _bindings
    java.lang.String _canonicalName -> _canonicalName
    47:51:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean) -> <init>
    68:72:java.lang.String toCanonical() -> toCanonical
    76:76:java.lang.String buildCanonicalName() -> buildCanonicalName
    87:87:com.fasterxml.jackson.databind.type.TypeBindings getBindings() -> getBindings
    92:92:int containedTypeCount() -> containedTypeCount
    97:97:com.fasterxml.jackson.databind.JavaType containedType(int) -> containedType
    108:108:com.fasterxml.jackson.databind.JavaType getSuperClass() -> getSuperClass
    113:122:java.util.List getInterfaces() -> getInterfaces
    128:147:com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class) -> findSuperType
    171:175:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    181:182:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    197:238:java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean) -> _classSignature
    19:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeBindings -> com.fasterxml.jackson.databind.type.TypeBindings:
    java.lang.String[] NO_STRINGS -> NO_STRINGS
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> NO_TYPES
    com.fasterxml.jackson.databind.type.TypeBindings EMPTY -> EMPTY
    java.lang.String[] _names -> _names
    com.fasterxml.jackson.databind.JavaType[] _types -> _types
    java.lang.String[] _unboundVariables -> _unboundVariables
    int _hashCode -> _hashCode
    53:65:void <init>(java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.String[]) -> <init>
    68:68:com.fasterxml.jackson.databind.type.TypeBindings emptyBindings() -> emptyBindings
    85:87:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,java.util.List) -> create
    92:117:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> create
    123:129:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> create
    136:142:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> create
    153:162:com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> createIfNeeded
    173:191:com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> createIfNeeded
    201:205:com.fasterxml.jackson.databind.type.TypeBindings withUnboundVariable(java.lang.String) -> withUnboundVariable
    219:242:com.fasterxml.jackson.databind.JavaType findBoundType(java.lang.String) -> findBoundType
    246:246:boolean isEmpty() -> isEmpty
    253:253:int size() -> size
    266:269:com.fasterxml.jackson.databind.JavaType getBoundType(int) -> getBoundType
    277:280:java.util.List getTypeParameters() -> getTypeParameters
    287:294:boolean hasUnbound(java.lang.String) -> hasUnbound
    306:306:java.lang.Object asKey(java.lang.Class) -> asKey
    317:331:java.lang.String toString() -> toString
    334:334:int hashCode() -> hashCode
    338:353:boolean equals(java.lang.Object) -> equals
    363:363:com.fasterxml.jackson.databind.JavaType[] typeParameterArray() -> typeParameterArray
    17:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeBindings$AsKey -> com.fasterxml.jackson.databind.type.TypeBindings$AsKey:
    java.lang.Class _raw -> _raw
    com.fasterxml.jackson.databind.JavaType[] _params -> _params
    int _hash -> _hash
    439:443:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType[],int) -> <init>
    446:446:int hashCode() -> hashCode
    450:468:boolean equals(java.lang.Object) -> equals
    473:473:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash -> com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash:
    java.lang.reflect.TypeVariable[] VARS_ABSTRACT_LIST -> VARS_ABSTRACT_LIST
    java.lang.reflect.TypeVariable[] VARS_COLLECTION -> VARS_COLLECTION
    java.lang.reflect.TypeVariable[] VARS_ITERABLE -> VARS_ITERABLE
    java.lang.reflect.TypeVariable[] VARS_LIST -> VARS_LIST
    java.lang.reflect.TypeVariable[] VARS_ARRAY_LIST -> VARS_ARRAY_LIST
    java.lang.reflect.TypeVariable[] VARS_MAP -> VARS_MAP
    java.lang.reflect.TypeVariable[] VARS_HASH_MAP -> VARS_HASH_MAP
    java.lang.reflect.TypeVariable[] VARS_LINKED_HASH_MAP -> VARS_LINKED_HASH_MAP
    396:411:java.lang.reflect.TypeVariable[] paramsFor1(java.lang.Class) -> paramsFor1
    416:425:java.lang.reflect.TypeVariable[] paramsFor2(java.lang.Class) -> paramsFor2
    384:392:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeFactory -> com.fasterxml.jackson.databind.type.TypeFactory:
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> NO_TYPES
    com.fasterxml.jackson.databind.type.TypeFactory instance -> instance
    com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS -> EMPTY_BINDINGS
    java.lang.Class CLS_STRING -> CLS_STRING
    java.lang.Class CLS_OBJECT -> CLS_OBJECT
    java.lang.Class CLS_COMPARABLE -> CLS_COMPARABLE
    java.lang.Class CLS_CLASS -> CLS_CLASS
    java.lang.Class CLS_ENUM -> CLS_ENUM
    java.lang.Class CLS_BOOL -> CLS_BOOL
    java.lang.Class CLS_INT -> CLS_INT
    java.lang.Class CLS_LONG -> CLS_LONG
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL -> CORE_TYPE_BOOL
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT -> CORE_TYPE_INT
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG -> CORE_TYPE_LONG
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING -> CORE_TYPE_STRING
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT -> CORE_TYPE_OBJECT
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_COMPARABLE -> CORE_TYPE_COMPARABLE
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_ENUM -> CORE_TYPE_ENUM
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_CLASS -> CORE_TYPE_CLASS
    com.fasterxml.jackson.databind.util.LRUMap _typeCache -> _typeCache
    com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers -> _modifiers
    com.fasterxml.jackson.databind.type.TypeParser _parser -> _parser
    java.lang.ClassLoader _classLoader -> _classLoader
    145:146:void <init>() -> <init>
    151:159:void <init>(com.fasterxml.jackson.databind.util.LRUMap) -> <init>
    211:211:com.fasterxml.jackson.databind.type.TypeFactory defaultInstance() -> defaultInstance
    228:228:java.lang.ClassLoader getClassLoader() -> getClassLoader
    243:243:com.fasterxml.jackson.databind.JavaType unknownType() -> unknownType
    274:301:java.lang.Class findClass(java.lang.String) -> findClass
    306:306:java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader) -> classForName
    310:310:java.lang.Class classForName(java.lang.String) -> classForName
    315:324:java.lang.Class _findPrimitive(java.lang.String) -> _findPrimitive
    343:409:com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    414:446:com.fasterxml.jackson.databind.type.TypeBindings _bindingsForSubtype(com.fasterxml.jackson.databind.JavaType,int,java.lang.Class) -> _bindingsForSubtype
    452:477:java.lang.String _resolveTypePlaceholders(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> _resolveTypePlaceholders
    483:502:boolean _verifyAndResolvePlaceholders(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> _verifyAndResolvePlaceholders
    518:534:com.fasterxml.jackson.databind.JavaType constructGeneralizedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructGeneralizedType
    549:549:com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String) -> constructFromCanonical
    563:567:com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> findTypeParameters
    623:623:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> constructType
    627:627:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> constructType
    726:726:com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class) -> constructCollectionType
    739:752:com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> constructCollectionType
    790:796:com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapType
    806:825:com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> constructMapType
    904:904:com.fasterxml.jackson.databind.JavaType uncheckedSimpleType(java.lang.Class) -> uncheckedSimpleType
    1078:1095:com.fasterxml.jackson.databind.JavaType _mapType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _mapType
    1101:1111:com.fasterxml.jackson.databind.JavaType _collectionType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _collectionType
    1117:1127:com.fasterxml.jackson.databind.JavaType _referenceType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _referenceType
    1141:1147:com.fasterxml.jackson.databind.JavaType _constructSimple(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _constructSimple
    1160:1160:com.fasterxml.jackson.databind.JavaType _newSimpleType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _newSimpleType
    1169:1169:com.fasterxml.jackson.databind.JavaType _unknownType() -> _unknownType
    1180:1188:com.fasterxml.jackson.databind.JavaType _findWellKnownSimple(java.lang.Class) -> _findWellKnownSimple
    1207:1249:com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromAny
    1259:1337:com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromClass
    1342:1346:com.fasterxml.jackson.databind.JavaType _resolveSuperClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _resolveSuperClass
    1351:1361:com.fasterxml.jackson.databind.JavaType[] _resolveSuperInterfaces(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _resolveSuperInterfaces
    1372:1391:com.fasterxml.jackson.databind.JavaType _fromWellKnownClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _fromWellKnownClass
    1399:1407:com.fasterxml.jackson.databind.JavaType _fromWellKnownInterface(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _fromWellKnownInterface
    1418:1448:com.fasterxml.jackson.databind.JavaType _fromParamType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromParamType
    1453:1454:com.fasterxml.jackson.databind.JavaType _fromArrayType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.GenericArrayType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromArrayType
    1460:1474:com.fasterxml.jackson.databind.JavaType _fromVariable(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.TypeVariable,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromVariable
    1484:1484:com.fasterxml.jackson.databind.JavaType _fromWildcard(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.WildcardType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromWildcard
    39:110:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeModifier -> com.fasterxml.jackson.databind.type.TypeModifier:
    com.fasterxml.jackson.databind.JavaType modifyType(com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.type.TypeFactory) -> modifyType
com.fasterxml.jackson.databind.type.TypeParser -> com.fasterxml.jackson.databind.type.TypeParser:
    com.fasterxml.jackson.databind.type.TypeFactory _factory -> _factory
    19:21:void <init>(com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    32:38:com.fasterxml.jackson.databind.JavaType parse(java.lang.String) -> parse
    44:60:com.fasterxml.jackson.databind.JavaType parseType(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> parseType
    66:76:java.util.List parseTypes(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> parseTypes
    82:85:java.lang.Class findClass(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> findClass
    91:91:java.lang.IllegalArgumentException _problem(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer,java.lang.String) -> _problem
com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer -> com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer:
    java.lang.String _input -> _input
    int _index -> _index
    java.lang.String _pushbackToken -> _pushbackToken
    104:106:void <init>(java.lang.String) -> <init>
    110:110:boolean hasMoreTokens() -> hasMoreTokens
    116:124:java.lang.String nextToken() -> nextToken
    128:130:void pushBack(java.lang.String) -> pushBack
    132:132:java.lang.String getAllInput() -> getAllInput
    134:134:java.lang.String getRemainingInput() -> getRemainingInput
com.fasterxml.jackson.databind.util.AccessPattern -> com.fasterxml.jackson.databind.util.AccessPattern:
    com.fasterxml.jackson.databind.util.AccessPattern ALWAYS_NULL -> ALWAYS_NULL
    com.fasterxml.jackson.databind.util.AccessPattern CONSTANT -> CONSTANT
    com.fasterxml.jackson.databind.util.AccessPattern DYNAMIC -> DYNAMIC
    com.fasterxml.jackson.databind.util.AccessPattern[] $VALUES -> $VALUES
    9:9:com.fasterxml.jackson.databind.util.AccessPattern[] values() -> values
    9:9:com.fasterxml.jackson.databind.util.AccessPattern valueOf(java.lang.String) -> valueOf
    9:9:void <init>(java.lang.String,int) -> <init>
    9:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.Annotations -> com.fasterxml.jackson.databind.util.Annotations:
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    boolean has(java.lang.Class) -> has
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    int size() -> size
com.fasterxml.jackson.databind.util.ArrayBuilders -> com.fasterxml.jackson.databind.util.ArrayBuilders:
    com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder _booleanBuilder -> _booleanBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder _byteBuilder -> _byteBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder _shortBuilder -> _shortBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder _intBuilder -> _intBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder _longBuilder -> _longBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder _floatBuilder -> _floatBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder _doubleBuilder -> _doubleBuilder
    17:29:void <init>() -> <init>
    33:36:com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder getBooleanBuilder() -> getBooleanBuilder
    41:44:com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder getByteBuilder() -> getByteBuilder
    48:51:com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder getShortBuilder() -> getShortBuilder
    55:58:com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder getIntBuilder() -> getIntBuilder
    62:65:com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder getLongBuilder() -> getLongBuilder
    70:73:com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder getFloatBuilder() -> getFloatBuilder
    77:80:com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder getDoubleBuilder() -> getDoubleBuilder
    159:161:java.lang.Object getArrayComparator(java.lang.Object) -> getArrayComparator
    209:237:java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object) -> insertInListNoDup
com.fasterxml.jackson.databind.util.ArrayBuilders$1 -> com.fasterxml.jackson.databind.util.ArrayBuilders$1:
    java.lang.Class val$defaultValueType -> val$defaultValueType
    int val$length -> val$length
    java.lang.Object val$defaultValue -> val$defaultValue
    161:161:void <init>(java.lang.Class,int,java.lang.Object) -> <init>
    164:180:boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder:
    92:92:void <init>() -> <init>
    94:94:boolean[] _constructArray(int) -> _constructArray
    89:89:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder:
    100:100:void <init>() -> <init>
    102:102:byte[] _constructArray(int) -> _constructArray
    97:97:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder:
    136:136:void <init>() -> <init>
    138:138:double[] _constructArray(int) -> _constructArray
    133:133:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder:
    129:129:void <init>() -> <init>
    131:131:float[] _constructArray(int) -> _constructArray
    126:126:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder:
    114:114:void <init>() -> <init>
    116:116:int[] _constructArray(int) -> _constructArray
    111:111:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder:
    121:121:void <init>() -> <init>
    123:123:long[] _constructArray(int) -> _constructArray
    118:118:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder:
    107:107:void <init>() -> <init>
    109:109:short[] _constructArray(int) -> _constructArray
    104:104:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayIterator -> com.fasterxml.jackson.databind.util.ArrayIterator:
    java.lang.Object[] _a -> _a
    int _index -> _index
    16:19:void <init>(java.lang.Object[]) -> <init>
    22:22:boolean hasNext() -> hasNext
    26:29:java.lang.Object next() -> next
    32:32:void remove() -> remove
    33:33:java.util.Iterator iterator() -> iterator
com.fasterxml.jackson.databind.util.BeanUtil -> com.fasterxml.jackson.databind.util.BeanUtil:
    27:32:java.lang.String okNameForGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean) -> okNameForGetter
    41:63:java.lang.String okNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> okNameForRegularGetter
    72:80:java.lang.String okNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> okNameForIsGetter
    102:108:java.lang.String okNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> okNameForMutator
    134:158:java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType) -> getDefaultValue
    177:197:boolean isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isCglibGetCallbacks
    216:217:boolean isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGroovyMetaClassGetter
    235:259:java.lang.String legacyManglePropertyName(java.lang.String,int) -> legacyManglePropertyName
    267:288:java.lang.String stdManglePropertyName(java.lang.String,int) -> stdManglePropertyName
com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream -> com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream:
    java.nio.ByteBuffer _b -> _b
    14:14:void <init>(java.nio.ByteBuffer) -> <init>
    16:16:int available() -> available
    19:19:int read() -> read
    23:26:int read(byte[],int,int) -> read
com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream -> com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream:
    java.nio.ByteBuffer _b -> _b
    13:13:void <init>(java.nio.ByteBuffer) -> <init>
    15:15:void write(int) -> write
    16:16:void write(byte[],int,int) -> write
com.fasterxml.jackson.databind.util.ClassUtil -> com.fasterxml.jackson.databind.util.ClassUtil:
    java.lang.Class CLS_OBJECT -> CLS_OBJECT
    java.lang.annotation.Annotation[] NO_ANNOTATIONS -> NO_ANNOTATIONS
    com.fasterxml.jackson.databind.util.ClassUtil$Ctor[] NO_CTORS -> NO_CTORS
    java.util.Iterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    35:35:java.util.Iterator emptyIterator() -> emptyIterator
    60:65:java.util.List findSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean) -> findSuperTypes
    72:77:java.util.List findRawSuperTypes(java.lang.Class,java.lang.Class,boolean) -> findRawSuperTypes
    89:101:java.util.List findSuperClasses(java.lang.Class,java.lang.Class,boolean) -> findSuperClasses
    118:133:void _addSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.Collection,boolean) -> _addSuperTypes
    136:147:void _addRawSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean) -> _addRawSuperTypes
    162:176:java.lang.String canBeABeanType(java.lang.Class) -> canBeABeanType
    187:205:java.lang.String isLocalType(java.lang.Class,boolean) -> isLocalType
    216:223:java.lang.Class getOuterClass(java.lang.Class) -> getOuterClass
    241:248:boolean isProxyType(java.lang.Class) -> isProxyType
    257:258:boolean isConcrete(java.lang.Class) -> isConcrete
    276:276:boolean isBogusClass(java.lang.Class) -> isBogusClass
    281:281:boolean isNonStaticInnerClass(java.lang.Class) -> isNonStaticInnerClass
    289:289:boolean isObjectOrPrimitive(java.lang.Class) -> isObjectOrPrimitive
    298:298:boolean hasClass(java.lang.Object,java.lang.Class) -> hasClass
    307:312:void verifyMustOverride(java.lang.Class,java.lang.Object,java.lang.String) -> verifyMustOverride
    356:359:java.lang.Throwable throwIfError(java.lang.Throwable) -> throwIfError
    369:372:java.lang.Throwable throwIfRTE(java.lang.Throwable) -> throwIfRTE
    382:385:java.lang.Throwable throwIfIOE(java.lang.Throwable) -> throwIfIOE
    400:403:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    414:414:java.lang.Throwable throwRootCauseIfIOE(java.lang.Throwable) -> throwRootCauseIfIOE
    422:423:void throwAsIAE(java.lang.Throwable) -> throwAsIAE
    432:434:void throwAsIAE(java.lang.Throwable,java.lang.String) -> throwAsIAE
    442:447:java.lang.Object throwAsMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException) -> throwAsMappingException
    457:458:void unwrapAndThrowAsIAE(java.lang.Throwable) -> unwrapAndThrowAsIAE
    467:468:void unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String) -> unwrapAndThrowAsIAE
    485:493:void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception) -> closeOnFailAndThrowAsIOE
    509:526:void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception) -> closeOnFailAndThrowAsIOE
    551:559:java.lang.Object createInstance(java.lang.Class,boolean) -> createInstance
    567:582:java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean) -> findConstructor
    595:598:java.lang.Class classOf(java.lang.Object) -> classOf
    605:608:java.lang.Class rawClass(com.fasterxml.jackson.databind.JavaType) -> rawClass
    615:615:java.lang.Object nonNull(java.lang.Object,java.lang.Object) -> nonNull
    622:625:java.lang.String nullOrToString(java.lang.Object) -> nullOrToString
    632:635:java.lang.String nonNullString(java.lang.String) -> nonNullString
    645:648:java.lang.String quotedOr(java.lang.Object,java.lang.String) -> quotedOr
    680:683:java.lang.String classNameOf(java.lang.Object) -> classNameOf
    693:709:java.lang.String nameOf(java.lang.Class) -> nameOf
    719:722:java.lang.String nameOf(com.fasterxml.jackson.databind.util.Named) -> nameOf
    731:734:java.lang.String backticked(java.lang.String) -> backticked
    749:773:java.lang.Object defaultValue(java.lang.Class) -> defaultValue
    782:806:java.lang.Class wrapperType(java.lang.Class) -> wrapperType
    817:845:java.lang.Class primitiveType(java.lang.Class) -> primitiveType
    881:901:void checkAndFixAccess(java.lang.reflect.Member,boolean) -> checkAndFixAccess
    918:922:java.lang.Class findEnumType(java.util.EnumSet) -> findEnumType
    933:937:java.lang.Class findEnumType(java.util.EnumMap) -> findEnumType
    950:954:java.lang.Class findEnumType(java.lang.Enum) -> findEnumType
    967:970:java.lang.Class findEnumType(java.lang.Class) -> findEnumType
    986:1000:java.lang.Enum findFirstAnnotatedEnumValue(java.lang.Class,java.lang.Class) -> findFirstAnnotatedEnumValue
    1020:1020:boolean isJacksonStdImpl(java.lang.Object) -> isJacksonStdImpl
    1024:1024:boolean isJacksonStdImpl(java.lang.Class) -> isJacksonStdImpl
    1040:1041:java.lang.String getPackageName(java.lang.Class) -> getPackageName
    1048:1048:boolean hasEnclosingMethod(java.lang.Class) -> hasEnclosingMethod
    1055:1055:java.lang.reflect.Field[] getDeclaredFields(java.lang.Class) -> getDeclaredFields
    1062:1062:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    1069:1072:java.lang.annotation.Annotation[] findClassAnnotations(java.lang.Class) -> findClassAnnotations
    1085:1101:java.lang.reflect.Method[] getClassMethods(java.lang.Class) -> getClassMethods
    1111:1120:com.fasterxml.jackson.databind.util.ClassUtil$Ctor[] getConstructors(java.lang.Class) -> getConstructors
    1137:1137:java.lang.reflect.Type getGenericSuperclass(java.lang.Class) -> getGenericSuperclass
    1144:1144:java.lang.reflect.Type[] getGenericInterfaces(java.lang.Class) -> getGenericInterfaces
    1152:1152:java.lang.Class getEnclosingClass(java.lang.Class) -> getEnclosingClass
    1156:1156:java.lang.Class[] _interfaces(java.lang.Class) -> _interfaces
    17:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ClassUtil$Ctor -> com.fasterxml.jackson.databind.util.ClassUtil$Ctor:
    java.lang.reflect.Constructor _ctor -> _ctor
    java.lang.annotation.Annotation[][] _paramAnnotations -> _paramAnnotations
    int _paramCount -> _paramCount
    1260:1264:void <init>(java.lang.reflect.Constructor) -> <init>
    1267:1267:java.lang.reflect.Constructor getConstructor() -> getConstructor
    1271:1276:int getParamCount() -> getParamCount
    1280:1280:java.lang.Class getDeclaringClass() -> getDeclaringClass
    1293:1298:java.lang.annotation.Annotation[][] getParameterAnnotations() -> getParameterAnnotations
com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator -> com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator:
    com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator instance -> instance
    java.lang.reflect.Field enumSetTypeField -> enumSetTypeField
    java.lang.reflect.Field enumMapTypeField -> enumMapTypeField
    1176:1181:void <init>() -> <init>
    1186:1189:java.lang.Class enumTypeFor(java.util.EnumSet) -> enumTypeFor
    1195:1198:java.lang.Class enumTypeFor(java.util.EnumMap) -> enumTypeFor
    1204:1206:java.lang.Object get(java.lang.Object,java.lang.reflect.Field) -> get
    1212:1236:java.lang.reflect.Field locateField(java.lang.Class,java.lang.String,java.lang.Class) -> locateField
    1171:1171:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.CompactStringObjectMap -> com.fasterxml.jackson.databind.util.CompactStringObjectMap:
    com.fasterxml.jackson.databind.util.CompactStringObjectMap EMPTY -> EMPTY
    int _hashMask -> _hashMask
    int _spillCount -> _spillCount
    java.lang.Object[] _hashArea -> _hashArea
    33:37:void <init>(int,int,java.lang.Object[]) -> <init>
    41:75:com.fasterxml.jackson.databind.util.CompactStringObjectMap construct(java.util.Map) -> construct
    80:91:int findSize(int) -> findSize
    95:101:java.lang.Object find(java.lang.String) -> find
    106:124:java.lang.Object _find2(java.lang.String,int,java.lang.Object) -> _find2
    131:140:java.lang.Object findCaseInsensitive(java.lang.String) -> findCaseInsensitive
    144:152:java.util.List keys() -> keys
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ConstantValueInstantiator -> com.fasterxml.jackson.databind.util.ConstantValueInstantiator:
    java.lang.Object _value -> _value
    19:21:void <init>(java.lang.Object) -> <init>
    25:25:java.lang.Class getValueClass() -> getValueClass
    29:29:boolean canInstantiate() -> canInstantiate
    32:32:boolean canCreateUsingDefault() -> canCreateUsingDefault
    36:36:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
com.fasterxml.jackson.databind.util.Converter -> com.fasterxml.jackson.databind.util.Converter:
    java.lang.Object convert(java.lang.Object) -> convert
    com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getInputType
    com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getOutputType
com.fasterxml.jackson.databind.util.Converter$None -> com.fasterxml.jackson.databind.util.Converter$None:
    65:65:void <init>() -> <init>
com.fasterxml.jackson.databind.util.EnumResolver -> com.fasterxml.jackson.databind.util.EnumResolver:
    java.lang.Class _enumClass -> _enumClass
    java.lang.Enum[] _enums -> _enums
    java.util.HashMap _enumsById -> _enumsById
    java.lang.Enum _defaultValue -> _defaultValue
    25:30:void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum) -> <init>
    38:54:com.fasterxml.jackson.databind.util.EnumResolver constructFor(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> constructFor
    74:82:com.fasterxml.jackson.databind.util.EnumResolver constructUsingToString(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> constructUsingToString
    92:107:com.fasterxml.jackson.databind.util.EnumResolver constructUsingMethod(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.AnnotationIntrospector) -> constructUsingMethod
    120:121:com.fasterxml.jackson.databind.util.EnumResolver constructUnsafe(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> constructUnsafe
    135:136:com.fasterxml.jackson.databind.util.EnumResolver constructUnsafeUsingToString(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> constructUnsafeUsingToString
    151:152:com.fasterxml.jackson.databind.util.EnumResolver constructUnsafeUsingMethod(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.AnnotationIntrospector) -> constructUnsafeUsingMethod
    156:156:com.fasterxml.jackson.databind.util.CompactStringObjectMap constructLookup() -> constructLookup
    159:159:java.lang.Enum findEnum(java.lang.String) -> findEnum
    169:169:java.lang.Enum getDefaultValue() -> getDefaultValue
    173:173:java.lang.Enum[] getRawEnums() -> getRawEnums
    188:188:java.util.Collection getEnumIds() -> getEnumIds
    191:191:java.lang.Class getEnumClass() -> getEnumClass
com.fasterxml.jackson.databind.util.EnumValues -> com.fasterxml.jackson.databind.util.EnumValues:
    java.lang.Class _enumClass -> _enumClass
    java.lang.Enum[] _values -> _values
    com.fasterxml.jackson.core.SerializableString[] _textual -> _textual
    26:30:void <init>(java.lang.Class,com.fasterxml.jackson.core.SerializableString[]) -> <init>
    46:61:com.fasterxml.jackson.databind.util.EnumValues constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> constructFromName
    79:79:com.fasterxml.jackson.core.SerializableString serializedValueFor(java.lang.Enum) -> serializedValueFor
    115:115:java.lang.Class getEnumClass() -> getEnumClass
com.fasterxml.jackson.databind.util.LRUMap -> com.fasterxml.jackson.databind.util.LRUMap:
    int _maxEntries -> _maxEntries
    java.util.concurrent.ConcurrentHashMap _map -> _map
    33:37:void <init>(int,int) -> <init>
    40:48:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    57:64:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    68:68:java.lang.Object get(java.lang.Object) -> get
    70:70:void clear() -> clear
com.fasterxml.jackson.databind.util.LinkedNode -> com.fasterxml.jackson.databind.util.LinkedNode:
    java.lang.Object value -> value
    com.fasterxml.jackson.databind.util.LinkedNode next -> next
    15:18:void <init>(java.lang.Object,com.fasterxml.jackson.databind.util.LinkedNode) -> <init>
    22:26:void linkNext(com.fasterxml.jackson.databind.util.LinkedNode) -> linkNext
    28:28:com.fasterxml.jackson.databind.util.LinkedNode next() -> next
    30:30:java.lang.Object value() -> value
com.fasterxml.jackson.databind.util.NameTransformer -> com.fasterxml.jackson.databind.util.NameTransformer:
    com.fasterxml.jackson.databind.util.NameTransformer NOP -> NOP
    33:33:void <init>() -> <init>
    41:92:com.fasterxml.jackson.databind.util.NameTransformer simpleTransformer(java.lang.String,java.lang.String) -> simpleTransformer
    101:101:com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer) -> chainedTransformer
    java.lang.String transform(java.lang.String) -> transform
    14:14:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.NameTransformer$1 -> com.fasterxml.jackson.databind.util.NameTransformer$1:
    java.lang.String val$prefix -> val$prefix
    java.lang.String val$suffix -> val$suffix
    46:46:void <init>(java.lang.String,java.lang.String) -> <init>
    48:48:java.lang.String transform(java.lang.String) -> transform
    60:60:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$2 -> com.fasterxml.jackson.databind.util.NameTransformer$2:
    java.lang.String val$prefix -> val$prefix
    63:63:void <init>(java.lang.String) -> <init>
    65:65:java.lang.String transform(java.lang.String) -> transform
    74:74:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$3 -> com.fasterxml.jackson.databind.util.NameTransformer$3:
    java.lang.String val$suffix -> val$suffix
    78:78:void <init>(java.lang.String) -> <init>
    80:80:java.lang.String transform(java.lang.String) -> transform
    89:89:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$Chained -> com.fasterxml.jackson.databind.util.NameTransformer$Chained:
    com.fasterxml.jackson.databind.util.NameTransformer _t1 -> _t1
    com.fasterxml.jackson.databind.util.NameTransformer _t2 -> _t2
    123:126:void <init>(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    130:130:java.lang.String transform(java.lang.String) -> transform
    143:143:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer -> com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer:
    16:16:void <init>() -> <init>
    24:24:java.lang.String transform(java.lang.String) -> transform
com.fasterxml.jackson.databind.util.Named -> com.fasterxml.jackson.databind.util.Named:
    java.lang.String getName() -> getName
com.fasterxml.jackson.databind.util.ObjectBuffer -> com.fasterxml.jackson.databind.util.ObjectBuffer:
    com.fasterxml.jackson.databind.util.LinkedNode _head -> _head
    com.fasterxml.jackson.databind.util.LinkedNode _tail -> _tail
    int _size -> _size
    java.lang.Object[] _freeBuffer -> _freeBuffer
    54:54:void <init>() -> <init>
    68:72:java.lang.Object[] resetAndStart() -> resetAndStart
    80:85:java.lang.Object[] resetAndStart(java.lang.Object[],int) -> resetAndStart
    104:119:java.lang.Object[] appendCompletedChunk(java.lang.Object[]) -> appendCompletedChunk
    134:138:java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int) -> completeAndClearBuffer
    151:156:java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class) -> completeAndClearBuffer
    161:172:void completeAndClearBuffer(java.lang.Object[],int,java.util.List) -> completeAndClearBuffer
    181:181:int initialCapacity() -> initialCapacity
    188:188:int bufferedSize() -> bufferedSize
    199:205:void _reset() -> _reset
    210:225:void _copyTo(java.lang.Object,int,java.lang.Object[],int) -> _copyTo
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder -> com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder:
    java.lang.Object _freeBuffer -> _freeBuffer
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferHead -> _bufferHead
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail -> _bufferTail
    int _bufferedEntryCount -> _bufferedEntryCount
    45:45:void <init>() -> <init>
    53:53:int bufferedSize() -> bufferedSize
    57:58:java.lang.Object resetAndStart() -> resetAndStart
    67:82:java.lang.Object appendCompletedChunk(java.lang.Object,int) -> appendCompletedChunk
    87:102:java.lang.Object completeAndClearBuffer(java.lang.Object,int) -> completeAndClearBuffer
    java.lang.Object _constructArray(int) -> _constructArray
    122:128:void _reset() -> _reset
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node -> com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node:
    java.lang.Object _data -> _data
    int _dataLength -> _dataLength
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next -> _next
    158:161:void <init>(java.lang.Object,int) -> <init>
    163:163:java.lang.Object getData() -> getData
    167:169:int copyData(java.lang.Object,int) -> copyData
    172:172:com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node next() -> next
    176:180:void linkNext(com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node) -> linkNext
com.fasterxml.jackson.databind.util.RawValue -> com.fasterxml.jackson.databind.util.RawValue:
    java.lang.Object _value -> _value
    29:31:void <init>(java.lang.String) -> <init>
    63:68:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    74:82:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    86:92:void serialize(com.fasterxml.jackson.core.JsonGenerator) -> serialize
    96:101:void _serialize(com.fasterxml.jackson.core.JsonGenerator) -> _serialize
    105:112:boolean equals(java.lang.Object) -> equals
    117:117:int hashCode() -> hashCode
    122:122:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.RootNameLookup -> com.fasterxml.jackson.databind.util.RootNameLookup:
    com.fasterxml.jackson.databind.util.LRUMap _rootNames -> _rootNames
    21:23:void <init>() -> <init>
    26:26:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig) -> findRootName
    31:46:com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig) -> findRootName
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition -> com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition:
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> _member
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> _metadata
    com.fasterxml.jackson.databind.PropertyName _fullName -> _fullName
    com.fasterxml.jackson.annotation.JsonInclude$Value _inclusion -> _inclusion
    60:66:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Value) -> <init>
    83:83:com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName) -> construct
    95:98:com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Include) -> construct
    108:108:com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Value) -> construct
    165:165:java.lang.String getName() -> getName
    168:168:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    172:172:boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> hasName
    180:183:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    188:188:boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    189:189:boolean isExplicitlyNamed() -> isExplicitlyNamed
    197:197:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    202:205:com.fasterxml.jackson.databind.JavaType getPrimaryType() -> getPrimaryType
    210:213:java.lang.Class getRawPrimaryType() -> getRawPrimaryType
    218:218:com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> findInclusion
    231:231:boolean hasSetter() -> hasSetter
    234:234:boolean hasField() -> hasField
    237:237:boolean hasConstructorParameter() -> hasConstructorParameter
    241:245:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    250:254:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    259:259:com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    264:264:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    269:273:java.util.Iterator getConstructorParameters() -> getConstructorParameters
    277:277:com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
com.fasterxml.jackson.databind.util.StdDateFormat -> com.fasterxml.jackson.databind.util.StdDateFormat:
    java.util.regex.Pattern PATTERN_PLAIN -> PATTERN_PLAIN
    java.util.regex.Pattern PATTERN_ISO8601 -> PATTERN_ISO8601
    java.lang.String[] ALL_FORMATS -> ALL_FORMATS
    java.util.TimeZone DEFAULT_TIMEZONE -> DEFAULT_TIMEZONE
    java.util.Locale DEFAULT_LOCALE -> DEFAULT_LOCALE
    java.text.DateFormat DATE_FORMAT_RFC1123 -> DATE_FORMAT_RFC1123
    java.text.DateFormat DATE_FORMAT_ISO8601 -> DATE_FORMAT_ISO8601
    com.fasterxml.jackson.databind.util.StdDateFormat instance -> instance
    java.util.Calendar CALENDAR -> CALENDAR
    java.util.TimeZone _timezone -> _timezone
    java.util.Locale _locale -> _locale
    java.lang.Boolean _lenient -> _lenient
    java.util.Calendar _calendar -> _calendar
    java.text.DateFormat _formatRFC1123 -> _formatRFC1123
    boolean _tzSerializedWithColon -> _tzSerializedWithColon
    151:161:void <init>() -> <init>
    151:182:void <init>(java.util.TimeZone,java.util.Locale,java.lang.Boolean,boolean) -> <init>
    193:199:com.fasterxml.jackson.databind.util.StdDateFormat withTimeZone(java.util.TimeZone) -> withTimeZone
    209:212:com.fasterxml.jackson.databind.util.StdDateFormat withLocale(java.util.Locale) -> withLocale
    223:226:com.fasterxml.jackson.databind.util.StdDateFormat withLenient(java.lang.Boolean) -> withLenient
    253:253:com.fasterxml.jackson.databind.util.StdDateFormat clone() -> clone
    293:293:java.util.TimeZone getTimeZone() -> getTimeZone
    302:306:void setTimeZone(java.util.TimeZone) -> setTimeZone
    315:321:void setLenient(boolean) -> setLenient
    326:326:boolean isLenient() -> isLenient
    356:372:java.util.Date parse(java.lang.String) -> parse
    382:386:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    391:411:java.util.Date _parseDate(java.lang.String,java.text.ParsePosition) -> _parseDate
    424:429:java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    435:473:void _format(java.util.TimeZone,java.util.Locale,java.util.Date,java.lang.StringBuffer) -> _format
    476:484:void pad2(java.lang.StringBuffer,int) -> pad2
    487:495:void pad3(java.lang.StringBuffer,int) -> pad3
    498:506:void pad4(java.lang.StringBuffer,int) -> pad4
    516:516:java.lang.String toString() -> toString
    521:531:java.lang.String toPattern() -> toPattern
    536:536:boolean equals(java.lang.Object) -> equals
    541:541:int hashCode() -> hashCode
    556:564:boolean looksLikeISO8601(java.lang.String) -> looksLikeISO8601
    571:577:java.util.Date _parseDateFromLong(java.lang.String,java.text.ParsePosition) -> _parseDateFromLong
    584:586:java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition) -> parseAsISO8601
    595:694:java.util.Date _parseAsISO8601(java.lang.String,java.text.ParsePosition) -> _parseAsISO8601
    703:703:int _parse4D(java.lang.String,int) -> _parse4D
    710:710:int _parse2D(java.lang.String,int) -> _parse2D
    716:720:java.util.Date parseAsRFC1123(java.lang.String,java.text.ParsePosition) -> parseAsRFC1123
    732:744:java.text.DateFormat _cloneFormat(java.text.DateFormat,java.lang.String,java.util.TimeZone,java.util.Locale,java.lang.Boolean) -> _cloneFormat
    748:749:void _clearFormats() -> _clearFormats
    752:760:java.util.Calendar _getCalendar(java.util.TimeZone) -> _getCalendar
    764:767:boolean _equals(java.lang.Object,java.lang.Object) -> _equals
    20:20:java.lang.Object clone() -> clone
    31:117:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer -> com.fasterxml.jackson.databind.util.TokenBuffer:
    int DEFAULT_GENERATOR_FEATURES -> DEFAULT_GENERATOR_FEATURES
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.JsonStreamContext _parentContext -> _parentContext
    int _generatorFeatures -> _generatorFeatures
    boolean _closed -> _closed
    boolean _hasNativeTypeIds -> _hasNativeTypeIds
    boolean _hasNativeObjectIds -> _hasNativeObjectIds
    boolean _mayHaveNativeIds -> _mayHaveNativeIds
    boolean _forceBigDecimal -> _forceBigDecimal
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first -> _first
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last -> _last
    int _appendAt -> _appendAt
    java.lang.Object _typeId -> _typeId
    java.lang.Object _objectId -> _objectId
    boolean _hasNativeId -> _hasNativeId
    com.fasterxml.jackson.core.json.JsonWriteContext _writeContext -> _writeContext
    126:161:void <init>(com.fasterxml.jackson.core.ObjectCodec,boolean) -> <init>
    167:168:void <init>(com.fasterxml.jackson.core.JsonParser) -> <init>
    126:187:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> <init>
    200:202:com.fasterxml.jackson.databind.util.TokenBuffer asCopyOfValue(com.fasterxml.jackson.core.JsonParser) -> asCopyOfValue
    222:223:com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean) -> forceUseOfBigDecimal
    242:242:com.fasterxml.jackson.core.JsonParser asParser() -> asParser
    256:258:com.fasterxml.jackson.core.JsonParser asParserOnFirstToken() -> asParserOnFirstToken
    276:276:com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.ObjectCodec) -> asParser
    285:287:com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.JsonParser) -> asParser
    298:298:com.fasterxml.jackson.core.JsonToken firstToken() -> firstToken
    318:330:com.fasterxml.jackson.databind.util.TokenBuffer append(com.fasterxml.jackson.databind.util.TokenBuffer) -> append
    345:471:void serialize(com.fasterxml.jackson.core.JsonGenerator) -> serialize
    480:499:com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    507:552:java.lang.String toString() -> toString
    557:565:void _appendNativeIds(java.lang.StringBuilder) -> _appendNativeIds
    581:582:com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    594:594:int getFeatureMask() -> getFeatureMask
    600:601:com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> setFeatureMask
    606:608:com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> overrideStdFeatures
    627:627:com.fasterxml.jackson.core.json.JsonWriteContext getOutputContext() -> getOutputContext
    640:640:boolean canWriteBinaryNatively() -> canWriteBinaryNatively
    650:650:void flush() -> flush
    654:655:void close() -> close
    669:672:void writeStartArray() -> writeStartArray
    677:683:void writeEndArray() -> writeEndArray
    688:691:void writeStartObject() -> writeStartObject
    696:703:void writeStartObject(java.lang.Object) -> writeStartObject
    708:714:void writeEndObject() -> writeEndObject
    719:721:void writeFieldName(java.lang.String) -> writeFieldName
    726:728:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    738:743:void writeString(java.lang.String) -> writeString
    747:748:void writeString(char[],int,int) -> writeString
    752:757:void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    775:776:void writeRaw(java.lang.String) -> writeRaw
    785:786:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    790:791:void writeRaw(char[],int,int) -> writeRaw
    795:796:void writeRaw(char) -> writeRaw
    800:801:void writeRawValue(java.lang.String) -> writeRawValue
    824:825:void writeNumber(short) -> writeNumber
    829:830:void writeNumber(int) -> writeNumber
    834:835:void writeNumber(long) -> writeNumber
    839:840:void writeNumber(double) -> writeNumber
    844:845:void writeNumber(float) -> writeNumber
    849:854:void writeNumber(java.math.BigDecimal) -> writeNumber
    858:863:void writeNumber(java.math.BigInteger) -> writeNumber
    870:871:void writeNumber(java.lang.String) -> writeNumber
    875:876:void writeBoolean(boolean) -> writeBoolean
    880:881:void writeNull() -> writeNull
    892:910:void writeObject(java.lang.Object) -> writeObject
    943:946:void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    956:956:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    967:967:boolean canWriteTypeId() -> canWriteTypeId
    972:972:boolean canWriteObjectId() -> canWriteObjectId
    977:979:void writeTypeId(java.lang.Object) -> writeTypeId
    983:985:void writeObjectId(java.lang.Object) -> writeObjectId
    989:990:void writeEmbeddedObject(java.lang.Object) -> writeEmbeddedObject
    1001:1075:void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    1080:1114:void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    1119:1125:void _checkNativeIds(com.fasterxml.jackson.core.JsonParser) -> _checkNativeIds
    1135:1144:void _append(com.fasterxml.jackson.core.JsonToken) -> _append
    1148:1157:void _append(com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> _append
    1167:1177:void _appendValue(com.fasterxml.jackson.core.JsonToken) -> _appendValue
    1187:1197:void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> _appendValue
    1217:1217:void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    26:26:com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    32:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer$1 -> com.fasterxml.jackson.databind.util.TokenBuffer$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> $SwitchMap$com$fasterxml$jackson$core$JsonToken
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType
    373:1028:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer$Parser -> com.fasterxml.jackson.databind.util.TokenBuffer$Parser:
    com.fasterxml.jackson.core.ObjectCodec _codec -> _codec
    boolean _hasNativeTypeIds -> _hasNativeTypeIds
    boolean _hasNativeObjectIds -> _hasNativeObjectIds
    boolean _hasNativeIds -> _hasNativeIds
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _segment -> _segment
    int _segmentPtr -> _segmentPtr
    com.fasterxml.jackson.databind.util.TokenBufferReadContext _parsingContext -> _parsingContext
    boolean _closed -> _closed
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    com.fasterxml.jackson.core.JsonLocation _location -> _location
    1275:1302:void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,com.fasterxml.jackson.core.JsonStreamContext) -> <init>
    1305:1306:void setLocation(com.fasterxml.jackson.core.JsonLocation) -> setLocation
    1309:1309:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    1346:1349:void close() -> close
    1361:1386:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    1393:1406:java.lang.String nextFieldName() -> nextFieldName
    1419:1419:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    1422:1422:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    1426:1426:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    1432:1436:java.lang.String getCurrentName() -> getCurrentName
    1466:1482:java.lang.String getText() -> getText
    1488:1489:char[] getTextCharacters() -> getTextCharacters
    1494:1495:int getTextLength() -> getTextLength
    1499:1499:int getTextOffset() -> getTextOffset
    1504:1504:boolean hasTextCharacters() -> hasTextCharacters
    1516:1527:boolean isNaN() -> isNaN
    1533:1541:java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    1547:1560:java.math.BigDecimal getDecimalValue() -> getDecimalValue
    1565:1565:double getDoubleValue() -> getDoubleValue
    1570:1570:float getFloatValue() -> getFloatValue
    1576:1581:int getIntValue() -> getIntValue
    1586:1591:long getLongValue() -> getLongValue
    1597:1605:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    1610:1628:java.lang.Number getNumberValue() -> getNumberValue
    1633:1633:boolean _smallerThanInt(java.lang.Number) -> _smallerThanInt
    1637:1637:boolean _smallerThanLong(java.lang.Number) -> _smallerThanLong
    1644:1674:int _convertNumberToInt(java.lang.Number) -> _convertNumberToInt
    1679:1701:long _convertNumberToLong(java.lang.Number) -> _convertNumberToLong
    1713:1716:java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    1724:1746:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    1752:1757:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    1768:1768:boolean canReadObjectId() -> canReadObjectId
    1773:1773:boolean canReadTypeId() -> canReadTypeId
    1778:1778:java.lang.Object getTypeId() -> getTypeId
    1783:1783:java.lang.Object getObjectId() -> getObjectId
    1793:1793:java.lang.Object _currentObject() -> _currentObject
    1798:1801:void _checkIsNumber() -> _checkIsNumber
    1805:1806:void _handleEOF() -> _handleEOF
com.fasterxml.jackson.databind.util.TokenBuffer$Segment -> com.fasterxml.jackson.databind.util.TokenBuffer$Segment:
    com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX -> TOKEN_TYPES_BY_INDEX
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next -> _next
    long _tokenTypes -> _tokenTypes
    java.lang.Object[] _tokens -> _tokens
    java.util.TreeMap _nativeIds -> _nativeIds
    1848:1855:void <init>() -> <init>
    1861:1866:com.fasterxml.jackson.core.JsonToken type(int) -> type
    1880:1880:java.lang.Object get(int) -> get
    1883:1883:com.fasterxml.jackson.databind.util.TokenBuffer$Segment next() -> next
    1890:1890:boolean hasIds() -> hasIds
    1897:1903:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken) -> append
    1909:1915:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object) -> append
    1920:1926:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> append
    1932:1938:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object) -> append
    1992:1997:void set(int,com.fasterxml.jackson.core.JsonToken) -> set
    2002:2008:void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object) -> set
    2012:2018:void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> set
    2023:2030:void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object) -> set
    2034:2043:void assignNativeIds(int,java.lang.Object,java.lang.Object) -> assignNativeIds
    2049:2049:java.lang.Object findObjectId(int) -> findObjectId
    2056:2056:java.lang.Object findTypeId(int) -> findTypeId
    2059:2059:int _typeIdIndex(int) -> _typeIdIndex
    2060:2060:int _objectIdIndex(int) -> _objectIdIndex
    1816:1816:java.lang.Object access$000(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,int) -> access$000
    1816:1816:java.lang.Object access$100(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,int) -> access$100
    1827:1831:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBufferReadContext -> com.fasterxml.jackson.databind.util.TokenBufferReadContext:
    com.fasterxml.jackson.core.JsonStreamContext _parent -> _parent
    com.fasterxml.jackson.core.JsonLocation _startLocation -> _startLocation
    java.lang.String _currentName -> _currentName
    java.lang.Object _currentValue -> _currentValue
    47:52:void <init>(com.fasterxml.jackson.core.JsonStreamContext,com.fasterxml.jackson.core.JsonLocation) -> <init>
    59:62:void <init>() -> <init>
    65:68:void <init>(com.fasterxml.jackson.databind.util.TokenBufferReadContext,int,int) -> <init>
    72:72:java.lang.Object getCurrentValue() -> getCurrentValue
    77:78:void setCurrentValue(java.lang.Object) -> setCurrentValue
    88:91:com.fasterxml.jackson.databind.util.TokenBufferReadContext createRootContext(com.fasterxml.jackson.core.JsonStreamContext) -> createRootContext
    95:95:com.fasterxml.jackson.databind.util.TokenBufferReadContext createChildArrayContext() -> createChildArrayContext
    99:99:com.fasterxml.jackson.databind.util.TokenBufferReadContext createChildObjectContext() -> createChildObjectContext
    110:116:com.fasterxml.jackson.databind.util.TokenBufferReadContext parentOrCopy() -> parentOrCopy
    125:125:java.lang.String getCurrentName() -> getCurrentName
    130:130:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
    133:134:void setCurrentName(java.lang.String) -> setCurrentName
com.fasterxml.jackson.databind.util.TypeKey -> com.fasterxml.jackson.databind.util.TypeKey:
    int _hashCode -> _hashCode
    java.lang.Class _class -> _class
    com.fasterxml.jackson.databind.JavaType _type -> _type
    boolean _isTyped -> _isTyped
    25:25:void <init>() -> <init>
    34:39:void <init>(java.lang.Class,boolean) -> <init>
    41:46:void <init>(com.fasterxml.jackson.databind.JavaType,boolean) -> <init>
    49:49:int untypedHash(java.lang.Class) -> untypedHash
    53:53:int typedHash(java.lang.Class) -> typedHash
    57:57:int untypedHash(com.fasterxml.jackson.databind.JavaType) -> untypedHash
    61:61:int typedHash(com.fasterxml.jackson.databind.JavaType) -> typedHash
    93:93:boolean isTyped() -> isTyped
    97:97:java.lang.Class getRawType() -> getRawType
    101:101:com.fasterxml.jackson.databind.JavaType getType() -> getType
    104:104:int hashCode() -> hashCode
    107:110:java.lang.String toString() -> toString
    116:128:boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.util.ViewMatcher -> com.fasterxml.jackson.databind.util.ViewMatcher:
    com.fasterxml.jackson.databind.util.ViewMatcher EMPTY -> EMPTY
    7:47:void <init>() -> <init>
    13:13:boolean isVisibleForView(java.lang.Class) -> isVisibleForView
    17:26:com.fasterxml.jackson.databind.util.ViewMatcher construct(java.lang.Class[]) -> construct
    11:11:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ViewMatcher$Multi -> com.fasterxml.jackson.databind.util.ViewMatcher$Multi:
    java.lang.Class[] _views -> _views
    54:54:void <init>(java.lang.Class[]) -> <init>
    59:65:boolean isVisibleForView(java.lang.Class) -> isVisibleForView
com.fasterxml.jackson.databind.util.ViewMatcher$Single -> com.fasterxml.jackson.databind.util.ViewMatcher$Single:
    java.lang.Class _view -> _view
    40:40:void <init>(java.lang.Class) -> <init>
    43:43:boolean isVisibleForView(java.lang.Class) -> isVisibleForView
dagger.internal.DoubleCheck -> dagger.internal.DoubleCheck:
    java.lang.Object UNINITIALIZED -> UNINITIALIZED
    javax.inject.Provider provider -> provider
    java.lang.Object instance -> instance
    boolean $assertionsDisabled -> $assertionsDisabled
    32:37:void <init>(javax.inject.Provider) -> <init>
    42:55:java.lang.Object get() -> get
    64:73:java.lang.Object reentrantCheck(java.lang.Object,java.lang.Object) -> reentrantCheck
    80:86:javax.inject.Provider provider(javax.inject.Provider) -> provider
    28:29:void <clinit>() -> <clinit>
dagger.internal.Factory -> dagger.internal.Factory:
dagger.internal.MemoizedSentinel -> dagger.internal.MemoizedSentinel:
    20:20:void <init>() -> <init>
dagger.internal.Preconditions -> dagger.internal.Preconditions:
    32:35:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    47:50:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
io.crnk.core.boot.CrnkBoot -> io.crnk.core.boot.CrnkBoot:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> objectMapper
    boolean configured -> configured
    io.crnk.legacy.locator.JsonServiceLocator serviceLocator -> serviceLocator
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl requestDispatcher -> requestDispatcher
    io.crnk.core.engine.properties.PropertiesProvider propertiesProvider -> propertiesProvider
    io.crnk.core.module.discovery.ServiceDiscoveryFactory serviceDiscoveryFactory -> serviceDiscoveryFactory
    io.crnk.core.module.discovery.ServiceDiscovery serviceDiscovery -> serviceDiscovery
    io.crnk.core.engine.internal.document.mapper.DocumentMapper documentMapper -> documentMapper
    java.util.List registeredModules -> registeredModules
    java.lang.Long defaultPageLimit -> defaultPageLimit
    java.lang.Long maxPageLimit -> maxPageLimit
    java.lang.Boolean allowUnknownAttributes -> allowUnknownAttributes
    java.lang.Boolean allowUnknownParameters -> allowUnknownParameters
    io.crnk.core.engine.query.QueryAdapterBuilder queryAdapterBuilder -> queryAdapterBuilder
    io.crnk.core.engine.internal.CoreModule coreModule -> coreModule
    java.util.Map serverInfo -> serverInfo
    java.lang.String webPathPrefix -> webPathPrefix
    io.crnk.core.engine.internal.dispatcher.ControllerRegistry controllerRegistry -> controllerRegistry
    83:123:void <init>() -> <init>
    128:128:java.lang.String buildServiceUrl(java.lang.String,java.lang.String) -> buildServiceUrl
    161:164:void addModule(io.crnk.core.module.Module) -> addModule
    176:179:void checkNotConfiguredYet() -> checkNotConfiguredYet
    185:199:void boot() -> boot
    202:209:void setupServiceDiscovery() -> setupServiceDiscovery
    212:230:void bootDiscovery() -> bootDiscovery
    233:252:void logInfo() -> logInfo
    255:255:java.util.List toSimpleNames(java.util.List) -> toSimpleNames
    259:262:void setupRepositories(io.crnk.core.engine.registry.ResourceRegistryPart) -> setupRepositories
    265:283:io.crnk.core.engine.registry.ResourceRegistryPart setupResourceRegistry() -> setupResourceRegistry
    287:295:void setupObjectMapper() -> setupObjectMapper
    302:303:io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl createRequestDispatcher(io.crnk.core.engine.internal.exception.ExceptionMapperRegistry) -> createRequestDispatcher
    307:307:io.crnk.core.engine.query.QueryAdapterBuilder createQueryAdapterBuilder() -> createQueryAdapterBuilder
    311:313:io.crnk.core.engine.internal.document.mapper.DocumentMapper createDocumentMapper() -> createDocumentMapper
    318:337:io.crnk.core.engine.internal.dispatcher.ControllerRegistry createControllerRegistry() -> createControllerRegistry
    341:341:io.crnk.core.engine.internal.document.mapper.DocumentMapper getDocumentMapper() -> getDocumentMapper
    351:399:void setupComponents() -> setupComponents
    402:406:java.util.List getInstancesByType(java.lang.Class) -> getInstancesByType
    410:414:void setupInstance(java.lang.Object) -> setupInstance
    417:432:void addModules() -> addModules
    435:441:void setupServiceUrlProvider() -> setupServiceUrlProvider
    444:445:io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl getRequestDispatcher() -> getRequestDispatcher
    497:510:java.lang.String getWebPathPrefix() -> getWebPathPrefix
    518:522:void setServiceDiscovery(io.crnk.core.module.discovery.ServiceDiscovery) -> setServiceDiscovery
    563:563:io.crnk.core.module.ModuleRegistry getModuleRegistry() -> getModuleRegistry
    580:620:void setupQuerySpecUrlMapper() -> setupQuerySpecUrlMapper
    623:647:void setupPagingBehavior() -> setupPagingBehavior
    662:664:void setQuerySpecDeserializerUnchecked(io.crnk.core.queryspec.QuerySpecDeserializer) -> setQuerySpecDeserializerUnchecked
    255:255:java.lang.String lambda$toSimpleNames$0(java.lang.Object) -> lambda$toSimpleNames$0
    83:83:io.crnk.core.engine.internal.dispatcher.ControllerRegistry access$002(io.crnk.core.boot.CrnkBoot,io.crnk.core.engine.internal.dispatcher.ControllerRegistry) -> access$002
    83:83:io.crnk.core.engine.query.QueryAdapterBuilder access$102(io.crnk.core.boot.CrnkBoot,io.crnk.core.engine.query.QueryAdapterBuilder) -> access$102
    83:83:io.crnk.core.engine.query.QueryAdapterBuilder access$100(io.crnk.core.boot.CrnkBoot) -> access$100
    83:83:io.crnk.core.module.ModuleRegistry access$200(io.crnk.core.boot.CrnkBoot) -> access$200
    85:85:void <clinit>() -> <clinit>
io.crnk.core.boot.CrnkBoot$1 -> io.crnk.core.boot.CrnkBoot$1:
    io.crnk.core.boot.CrnkBoot this$0 -> this$0
    352:352:void <init>(io.crnk.core.boot.CrnkBoot,java.lang.String) -> <init>
    356:362:void setupModule(io.crnk.core.module.Module$ModuleContext) -> setupModule
io.crnk.core.engine.dispatcher.RepositoryRequestSpec -> io.crnk.core.engine.dispatcher.RepositoryRequestSpec:
    io.crnk.core.engine.http.HttpMethod getMethod() -> getMethod
    io.crnk.core.engine.query.QueryAdapter getQueryAdapter() -> getQueryAdapter
    io.crnk.core.queryspec.QuerySpec getQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> getQuerySpec
    io.crnk.legacy.queryParams.QueryParams getQueryParams() -> getQueryParams
    io.crnk.core.engine.information.resource.ResourceField getRelationshipField() -> getRelationshipField
    io.crnk.core.queryspec.QuerySpec getResponseQuerySpec() -> getResponseQuerySpec
    io.crnk.core.engine.information.resource.ResourceInformation getResponseResourceInformation() -> getResponseResourceInformation
    java.lang.Object getEntity() -> getEntity
    java.io.Serializable getId() -> getId
    java.lang.Iterable getIds() -> getIds
io.crnk.core.engine.dispatcher.RequestDispatcher -> io.crnk.core.engine.dispatcher.RequestDispatcher:
    java.util.Optional process(io.crnk.core.engine.http.HttpRequestContextBase) -> process
    void dispatchAction(java.lang.String,java.lang.String,java.util.Map) -> dispatchAction
io.crnk.core.engine.dispatcher.Response -> io.crnk.core.engine.dispatcher.Response:
    java.lang.Integer httpStatus -> httpStatus
    io.crnk.core.engine.document.Document document -> document
    19:22:void <init>(io.crnk.core.engine.document.Document,java.lang.Integer) -> <init>
    25:25:java.lang.Integer getHttpStatus() -> getHttpStatus
    33:33:io.crnk.core.engine.document.Document getDocument() -> getDocument
    42:42:int hashCode() -> hashCode
    47:51:boolean equals(java.lang.Object) -> equals
    55:69:io.crnk.core.engine.http.HttpResponse toHttpResponse(com.fasterxml.jackson.databind.ObjectMapper) -> toHttpResponse
io.crnk.core.engine.document.Document -> io.crnk.core.engine.document.Document:
    io.crnk.core.utils.Nullable data -> data
    java.util.List included -> included
    com.fasterxml.jackson.databind.node.ObjectNode links -> links
    com.fasterxml.jackson.databind.node.ObjectNode meta -> meta
    java.util.List errors -> errors
    com.fasterxml.jackson.databind.node.ObjectNode jsonapi -> jsonapi
    24:29:void <init>() -> <init>
    47:47:io.crnk.core.utils.Nullable getData() -> getData
    51:53:void setData(io.crnk.core.utils.Nullable) -> setData
    57:57:com.fasterxml.jackson.databind.node.ObjectNode getLinks() -> getLinks
    62:63:void setLinks(com.fasterxml.jackson.databind.node.ObjectNode) -> setLinks
    66:66:java.util.List getIncluded() -> getIncluded
    70:71:void setIncluded(java.util.List) -> setIncluded
    80:81:void setMeta(com.fasterxml.jackson.databind.node.ObjectNode) -> setMeta
    84:84:java.util.List getErrors() -> getErrors
    88:89:void setErrors(java.util.List) -> setErrors
    93:93:boolean isMultiple() -> isMultiple
    98:98:io.crnk.core.utils.Nullable getSingleData() -> getSingleData
    103:103:int hashCode() -> hashCode
    108:114:boolean equals(java.lang.Object) -> equals
    119:129:io.crnk.core.utils.Nullable getCollectionData() -> getCollectionData
    137:138:void setJsonapi(com.fasterxml.jackson.databind.node.ObjectNode) -> setJsonapi
io.crnk.core.engine.document.ErrorData -> io.crnk.core.engine.document.ErrorData:
    java.lang.String id -> id
    java.lang.String aboutLink -> aboutLink
    java.lang.String status -> status
    java.lang.String code -> code
    java.lang.String title -> title
    java.lang.String detail -> detail
    java.lang.String sourcePointer -> sourcePointer
    java.lang.String sourceParameter -> sourceParameter
    java.util.Map meta -> meta
    68:78:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> <init>
    80:90:void <init>(io.crnk.core.engine.document.ErrorDataBuilder) -> <init>
    93:93:io.crnk.core.engine.document.ErrorDataBuilder builder() -> builder
    97:97:java.lang.String getId() -> getId
    101:101:java.lang.String getAboutLink() -> getAboutLink
    105:105:java.lang.String getStatus() -> getStatus
    109:109:java.lang.String getCode() -> getCode
    113:113:java.lang.String getTitle() -> getTitle
    117:117:java.lang.String getDetail() -> getDetail
    121:121:java.lang.String getSourcePointer() -> getSourcePointer
    125:125:java.lang.String getSourceParameter() -> getSourceParameter
    129:129:java.util.Map getMeta() -> getMeta
    134:149:boolean equals(java.lang.Object) -> equals
    154:154:int hashCode() -> hashCode
    159:159:java.lang.String toString() -> toString
io.crnk.core.engine.document.ErrorDataBuilder -> io.crnk.core.engine.document.ErrorDataBuilder:
    java.lang.String id -> id
    java.lang.String aboutLink -> aboutLink
    java.lang.String status -> status
    java.lang.String code -> code
    java.lang.String title -> title
    java.lang.String detail -> detail
    java.lang.String sourcePointer -> sourcePointer
    java.lang.String sourceParameter -> sourceParameter
    java.util.Map meta -> meta
    6:6:void <init>() -> <init>
    44:45:io.crnk.core.engine.document.ErrorDataBuilder setStatus(java.lang.String) -> setStatus
    55:56:io.crnk.core.engine.document.ErrorDataBuilder setCode(java.lang.String) -> setCode
    67:68:io.crnk.core.engine.document.ErrorDataBuilder setTitle(java.lang.String) -> setTitle
    78:79:io.crnk.core.engine.document.ErrorDataBuilder setDetail(java.lang.String) -> setDetail
    105:106:io.crnk.core.engine.document.ErrorDataBuilder setSourceParameter(java.lang.String) -> setSourceParameter
    129:129:io.crnk.core.engine.document.ErrorData build() -> build
    133:133:java.lang.String getId() -> getId
    137:137:java.lang.String getAboutLink() -> getAboutLink
    141:141:java.lang.String getStatus() -> getStatus
    145:145:java.lang.String getCode() -> getCode
    149:149:java.lang.String getTitle() -> getTitle
    153:153:java.lang.String getDetail() -> getDetail
    157:157:java.lang.String getSourcePointer() -> getSourcePointer
    161:161:java.lang.String getSourceParameter() -> getSourceParameter
    165:165:java.util.Map getMeta() -> getMeta
io.crnk.core.engine.document.Relationship -> io.crnk.core.engine.document.Relationship:
    io.crnk.core.utils.Nullable data -> data
    com.fasterxml.jackson.databind.node.ObjectNode links -> links
    com.fasterxml.jackson.databind.node.ObjectNode meta -> meta
    24:36:void <init>() -> <init>
    53:54:void setMeta(com.fasterxml.jackson.databind.node.ObjectNode) -> setMeta
    57:57:io.crnk.core.utils.Nullable getData() -> getData
    61:79:void setData(io.crnk.core.utils.Nullable) -> setData
    83:83:com.fasterxml.jackson.databind.node.ObjectNode getLinks() -> getLinks
    88:89:void setLinks(com.fasterxml.jackson.databind.node.ObjectNode) -> setLinks
    98:105:io.crnk.core.utils.Nullable getCollectionData() -> getCollectionData
    110:110:int hashCode() -> hashCode
    115:120:boolean equals(java.lang.Object) -> equals
io.crnk.core.engine.document.Resource -> io.crnk.core.engine.document.Resource:
    java.util.Map attributes -> attributes
    java.util.Map relationships -> relationships
    com.fasterxml.jackson.databind.node.ObjectNode links -> links
    com.fasterxml.jackson.databind.node.ObjectNode meta -> meta
    19:24:void <init>() -> <init>
    35:35:com.fasterxml.jackson.databind.node.ObjectNode getLinks() -> getLinks
    40:41:void setLinks(com.fasterxml.jackson.databind.node.ObjectNode) -> setLinks
    45:45:com.fasterxml.jackson.databind.node.ObjectNode getMeta() -> getMeta
    50:51:void setMeta(com.fasterxml.jackson.databind.node.ObjectNode) -> setMeta
    54:54:java.util.Map getAttributes() -> getAttributes
    58:59:void setAttributes(java.util.Map) -> setAttributes
    62:62:java.util.Map getRelationships() -> getRelationships
    75:75:int hashCode() -> hashCode
    80:86:boolean equals(java.lang.Object) -> equals
    90:90:io.crnk.core.engine.document.ResourceIdentifier toIdentifier() -> toIdentifier
io.crnk.core.engine.document.ResourceIdentifier -> io.crnk.core.engine.document.ResourceIdentifier:
    java.lang.String id -> id
    java.lang.String type -> type
    13:14:void <init>() -> <init>
    16:22:void <init>(java.lang.String,java.lang.String) -> <init>
    25:25:java.lang.String getId() -> getId
    29:30:void setId(java.lang.String) -> setId
    33:33:java.lang.String getType() -> getType
    37:38:void setType(java.lang.String) -> setType
    42:42:int hashCode() -> hashCode
    47:51:boolean equals(java.lang.Object) -> equals
    56:60:int compareTo(io.crnk.core.engine.document.ResourceIdentifier) -> compareTo
    65:65:java.lang.String toString() -> toString
    7:7:int compareTo(java.lang.Object) -> compareTo
io.crnk.core.engine.error.ErrorResponse -> io.crnk.core.engine.error.ErrorResponse:
    java.util.Collection data -> data
    int httpStatus -> httpStatus
    22:25:void <init>(java.util.Collection,int) -> <init>
    28:28:io.crnk.core.engine.error.ErrorResponseBuilder builder() -> builder
    32:35:java.util.Collection getErrors() -> getErrors
    39:39:int getHttpStatus() -> getHttpStatus
    49:57:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    66:73:io.crnk.core.engine.dispatcher.Response toResponse() -> toResponse
io.crnk.core.engine.error.ErrorResponseBuilder -> io.crnk.core.engine.error.ErrorResponseBuilder:
    java.util.Collection data -> data
    int status -> status
    9:9:void <init>() -> <init>
    19:22:io.crnk.core.engine.error.ErrorResponseBuilder setSingleErrorData(io.crnk.core.engine.document.ErrorData) -> setSingleErrorData
    26:27:io.crnk.core.engine.error.ErrorResponseBuilder setStatus(int) -> setStatus
    31:31:io.crnk.core.engine.error.ErrorResponse build() -> build
io.crnk.core.engine.error.ExceptionMapper -> io.crnk.core.engine.error.ExceptionMapper:
    io.crnk.core.engine.error.ErrorResponse toErrorResponse(java.lang.Throwable) -> toErrorResponse
    java.lang.Throwable fromErrorResponse(io.crnk.core.engine.error.ErrorResponse) -> fromErrorResponse
    boolean accepts(io.crnk.core.engine.error.ErrorResponse) -> accepts
io.crnk.core.engine.error.ExceptionMapper -> io.crnk.core.engine.error.ExceptionMapper:
    io.crnk.core.engine.error.ErrorResponse toErrorResponse(java.lang.Throwable) -> toErrorResponse
io.crnk.core.engine.filter.DocumentFilter -> io.crnk.core.engine.filter.DocumentFilter:
    io.crnk.core.engine.dispatcher.Response filter(io.crnk.core.engine.filter.DocumentFilterContext,io.crnk.core.engine.filter.DocumentFilterChain) -> filter
io.crnk.core.engine.filter.DocumentFilterChain -> io.crnk.core.engine.filter.DocumentFilterChain:
    io.crnk.core.engine.dispatcher.Response doFilter(io.crnk.core.engine.filter.DocumentFilterContext) -> doFilter
io.crnk.core.engine.filter.DocumentFilterContext -> io.crnk.core.engine.filter.DocumentFilterContext:
    io.crnk.core.engine.document.Document getRequestBody() -> getRequestBody
    io.crnk.core.engine.internal.dispatcher.path.JsonPath getJsonPath() -> getJsonPath
    io.crnk.core.engine.query.QueryAdapter getQueryAdapter() -> getQueryAdapter
io.crnk.core.engine.filter.FilterBehavior -> io.crnk.core.engine.filter.FilterBehavior:
    io.crnk.core.engine.filter.FilterBehavior NONE -> NONE
    io.crnk.core.engine.filter.FilterBehavior IGNORED -> IGNORED
    io.crnk.core.engine.filter.FilterBehavior FORBIDDEN -> FORBIDDEN
    io.crnk.core.engine.filter.FilterBehavior[] $VALUES -> $VALUES
    3:3:io.crnk.core.engine.filter.FilterBehavior[] values() -> values
    3:3:io.crnk.core.engine.filter.FilterBehavior valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    24:24:io.crnk.core.engine.filter.FilterBehavior merge(io.crnk.core.engine.filter.FilterBehavior) -> merge
    3:18:void <clinit>() -> <clinit>
io.crnk.core.engine.filter.RepositoryBulkRequestFilterChain -> io.crnk.core.engine.filter.RepositoryBulkRequestFilterChain:
io.crnk.core.engine.filter.RepositoryFilter -> io.crnk.core.engine.filter.RepositoryFilter:
    io.crnk.core.repository.response.JsonApiResponse filterRequest(io.crnk.core.engine.filter.RepositoryFilterContext,io.crnk.core.engine.filter.RepositoryRequestFilterChain) -> filterRequest
    java.util.Map filterBulkRequest(io.crnk.core.engine.filter.RepositoryFilterContext,io.crnk.core.engine.filter.RepositoryBulkRequestFilterChain) -> filterBulkRequest
    java.lang.Iterable filterResult(io.crnk.core.engine.filter.RepositoryFilterContext,io.crnk.core.engine.filter.RepositoryResultFilterChain) -> filterResult
    io.crnk.core.resource.meta.MetaInformation filterMeta(io.crnk.core.engine.filter.RepositoryFilterContext,java.lang.Iterable,io.crnk.core.engine.filter.RepositoryMetaFilterChain) -> filterMeta
    io.crnk.core.resource.links.LinksInformation filterLinks(io.crnk.core.engine.filter.RepositoryFilterContext,java.lang.Iterable,io.crnk.core.engine.filter.RepositoryLinksFilterChain) -> filterLinks
io.crnk.core.engine.filter.RepositoryFilterContext -> io.crnk.core.engine.filter.RepositoryFilterContext:
    io.crnk.core.engine.dispatcher.RepositoryRequestSpec getRequest() -> getRequest
io.crnk.core.engine.filter.RepositoryLinksFilterChain -> io.crnk.core.engine.filter.RepositoryLinksFilterChain:
io.crnk.core.engine.filter.RepositoryMetaFilterChain -> io.crnk.core.engine.filter.RepositoryMetaFilterChain:
io.crnk.core.engine.filter.RepositoryRequestFilterChain -> io.crnk.core.engine.filter.RepositoryRequestFilterChain:
io.crnk.core.engine.filter.RepositoryResultFilterChain -> io.crnk.core.engine.filter.RepositoryResultFilterChain:
io.crnk.core.engine.filter.ResourceFilter -> io.crnk.core.engine.filter.ResourceFilter:
    io.crnk.core.engine.filter.FilterBehavior filterResource(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.http.HttpMethod) -> filterResource
    io.crnk.core.engine.filter.FilterBehavior filterField(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod) -> filterField
io.crnk.core.engine.filter.ResourceFilterDirectory -> io.crnk.core.engine.filter.ResourceFilterDirectory:
    io.crnk.core.engine.filter.FilterBehavior get(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext) -> get
    io.crnk.core.engine.filter.FilterBehavior get(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext) -> get
    boolean canAccess(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext,boolean) -> canAccess
io.crnk.core.engine.filter.ResourceModificationFilter -> io.crnk.core.engine.filter.ResourceModificationFilter:
    java.lang.Object modifyAttribute(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,java.lang.String,java.lang.Object) -> modifyAttribute
    io.crnk.core.engine.document.ResourceIdentifier modifyOneRelationship(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.ResourceIdentifier) -> modifyOneRelationship
    java.util.List modifyManyRelationship(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.filter.ResourceRelationshipModificationType,java.util.List) -> modifyManyRelationship
io.crnk.core.engine.filter.ResourceRelationshipModificationType -> io.crnk.core.engine.filter.ResourceRelationshipModificationType:
    io.crnk.core.engine.filter.ResourceRelationshipModificationType ADD -> ADD
    io.crnk.core.engine.filter.ResourceRelationshipModificationType REMOVE -> REMOVE
    io.crnk.core.engine.filter.ResourceRelationshipModificationType SET -> SET
    io.crnk.core.engine.filter.ResourceRelationshipModificationType[] $VALUES -> $VALUES
    3:3:io.crnk.core.engine.filter.ResourceRelationshipModificationType[] values() -> values
    3:3:io.crnk.core.engine.filter.ResourceRelationshipModificationType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
io.crnk.core.engine.http.HttpMethod -> io.crnk.core.engine.http.HttpMethod:
    io.crnk.core.engine.http.HttpMethod GET -> GET
    io.crnk.core.engine.http.HttpMethod POST -> POST
    io.crnk.core.engine.http.HttpMethod DELETE -> DELETE
    io.crnk.core.engine.http.HttpMethod PATCH -> PATCH
    io.crnk.core.engine.http.HttpMethod[] $VALUES -> $VALUES
    7:7:io.crnk.core.engine.http.HttpMethod[] values() -> values
    7:7:io.crnk.core.engine.http.HttpMethod valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:11:void <clinit>() -> <clinit>
io.crnk.core.engine.http.HttpRequestContext -> io.crnk.core.engine.http.HttpRequestContext:
    boolean accepts(java.lang.String) -> accepts
    boolean acceptsAny() -> acceptsAny
    io.crnk.core.engine.query.QueryContext getQueryContext() -> getQueryContext
io.crnk.core.engine.http.HttpRequestContextAware -> io.crnk.core.engine.http.HttpRequestContextAware:
    void setHttpRequestContextProvider(io.crnk.core.engine.http.HttpRequestContextProvider) -> setHttpRequestContextProvider
io.crnk.core.engine.http.HttpRequestContextBase -> io.crnk.core.engine.http.HttpRequestContextBase:
    java.lang.String getRequestHeader(java.lang.String) -> getRequestHeader
    java.util.Map getRequestParameters() -> getRequestParameters
    java.lang.String getPath() -> getPath
    java.lang.String getBaseUrl() -> getBaseUrl
    byte[] getRequestBody() -> getRequestBody
    java.lang.String getMethod() -> getMethod
    io.crnk.core.engine.http.HttpResponse getResponse() -> getResponse
    void setResponse(io.crnk.core.engine.http.HttpResponse) -> setResponse
io.crnk.core.engine.http.HttpRequestContextProvider -> io.crnk.core.engine.http.HttpRequestContextProvider:
    io.crnk.core.utils.Supplier resultFactory -> resultFactory
    io.crnk.core.engine.url.ServiceUrlProvider serviceUrlProvider -> serviceUrlProvider
    12:25:void <init>(io.crnk.core.utils.Supplier) -> <init>
    31:31:io.crnk.core.engine.http.HttpRequestContext getRequestContext() -> getRequestContext
    39:39:io.crnk.core.engine.result.Result getRequestContextResult() -> getRequestContextResult
    44:45:void onRequestStarted(io.crnk.core.engine.http.HttpRequestContext) -> onRequestStarted
    49:49:boolean hasThreadRequestContext() -> hasThreadRequestContext
    56:57:void onRequestFinished() -> onRequestFinished
    60:60:io.crnk.core.engine.url.ServiceUrlProvider getServiceUrlProvider() -> getServiceUrlProvider
    64:65:void setServiceUrlProvider(io.crnk.core.engine.url.ServiceUrlProvider) -> setServiceUrlProvider
    68:69:io.crnk.core.engine.result.Result attach(io.crnk.core.engine.result.Result) -> attach
io.crnk.core.engine.http.HttpRequestContextProvider$1 -> io.crnk.core.engine.http.HttpRequestContextProvider$1:
    io.crnk.core.engine.http.HttpRequestContextProvider this$0 -> this$0
    12:12:void <init>(io.crnk.core.engine.http.HttpRequestContextProvider) -> <init>
    15:19:java.lang.String getUrl() -> getUrl
io.crnk.core.engine.http.HttpRequestProcessor -> io.crnk.core.engine.http.HttpRequestProcessor:
    10:10:boolean supportsAsync() -> supportsAsync
    14:14:boolean accepts(io.crnk.core.engine.http.HttpRequestContext) -> accepts
    19:23:void process(io.crnk.core.engine.http.HttpRequestContext) -> process
    26:26:io.crnk.core.engine.result.Result processAsync(io.crnk.core.engine.http.HttpRequestContext) -> processAsync
io.crnk.core.engine.http.HttpResponse -> io.crnk.core.engine.http.HttpResponse:
    java.util.Map headers -> headers
    int statusCode -> statusCode
    byte[] body -> body
    7:9:void <init>() -> <init>
    17:18:void setHeader(java.lang.String,java.lang.String) -> setHeader
    21:21:java.util.Map getHeaders() -> getHeaders
    29:29:int getStatusCode() -> getStatusCode
    33:34:void setStatusCode(int) -> setStatusCode
    37:37:byte[] getBody() -> getBody
    45:46:void setBody(java.lang.String) -> setBody
    53:54:void setContentType(java.lang.String) -> setContentType
    62:62:java.lang.String toString() -> toString
io.crnk.core.engine.information.InformationBuilder -> io.crnk.core.engine.information.InformationBuilder:
    io.crnk.core.engine.information.InformationBuilder$Field createResourceField() -> createResourceField
io.crnk.core.engine.information.InformationBuilder$Field -> io.crnk.core.engine.information.InformationBuilder$Field:
    io.crnk.core.engine.information.resource.ResourceField build() -> build
    io.crnk.core.engine.information.InformationBuilder$Field relationshipRepositoryBehavior(io.crnk.core.resource.annotations.RelationshipRepositoryBehavior) -> relationshipRepositoryBehavior
    io.crnk.core.engine.information.InformationBuilder$Field jsonName(java.lang.String) -> jsonName
    io.crnk.core.engine.information.InformationBuilder$Field underlyingName(java.lang.String) -> underlyingName
    io.crnk.core.engine.information.InformationBuilder$Field type(java.lang.Class) -> type
    io.crnk.core.engine.information.InformationBuilder$Field genericType(java.lang.reflect.Type) -> genericType
    io.crnk.core.engine.information.InformationBuilder$Field serializeType(io.crnk.core.resource.annotations.SerializeType) -> serializeType
    io.crnk.core.engine.information.InformationBuilder$Field oppositeResourceType(java.lang.String) -> oppositeResourceType
    io.crnk.core.engine.information.InformationBuilder$Field lookupIncludeBehavior(io.crnk.core.resource.annotations.LookupIncludeBehavior) -> lookupIncludeBehavior
    io.crnk.core.engine.information.InformationBuilder$Field fieldType(io.crnk.core.engine.information.resource.ResourceFieldType) -> fieldType
    io.crnk.core.engine.information.InformationBuilder$Field oppositeName(java.lang.String) -> oppositeName
    io.crnk.core.engine.information.InformationBuilder$Field access(io.crnk.core.engine.information.resource.ResourceFieldAccess) -> access
    io.crnk.core.engine.information.InformationBuilder$Field idName(java.lang.String) -> idName
    io.crnk.core.engine.information.InformationBuilder$Field idType(java.lang.Class) -> idType
    io.crnk.core.engine.information.InformationBuilder$Field patchStrategy(io.crnk.core.resource.annotations.PatchStrategy) -> patchStrategy
io.crnk.core.engine.information.InformationBuilder$RelationshipRepository -> io.crnk.core.engine.information.InformationBuilder$RelationshipRepository:
    io.crnk.core.engine.information.repository.RelationshipRepositoryInformation build() -> build
io.crnk.core.engine.information.InformationBuilder$Resource -> io.crnk.core.engine.information.InformationBuilder$Resource:
    void from(io.crnk.core.engine.information.resource.ResourceInformation) -> from
    io.crnk.core.engine.information.resource.ResourceInformation build() -> build
io.crnk.core.engine.information.InformationBuilder$ResourceRepository -> io.crnk.core.engine.information.InformationBuilder$ResourceRepository:
    void from(io.crnk.core.engine.information.repository.ResourceRepositoryInformation) -> from
    void setResourceInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> setResourceInformation
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation build() -> build
io.crnk.core.engine.information.bean.BeanAttributeInformation -> io.crnk.core.engine.information.bean.BeanAttributeInformation:
    java.lang.String name -> name
    java.lang.reflect.Field field -> field
    java.lang.reflect.Method getter -> getter
    java.lang.reflect.Method setter -> setter
    io.crnk.core.engine.information.bean.BeanInformation beanInformation -> beanInformation
    java.lang.String jsonName -> jsonName
    java.util.Map annotations -> annotations
    28:75:void <init>(io.crnk.core.engine.information.bean.BeanInformation) -> <init>
    37:37:java.lang.reflect.Field getField() -> getField
    41:41:java.lang.reflect.Method getGetter() -> getGetter
    45:45:java.lang.reflect.Method getSetter() -> getSetter
    49:50:void setSetter(java.lang.reflect.Method) -> setSetter
    53:54:void setName(java.lang.String) -> setName
    57:57:java.lang.String getName() -> getName
    61:62:void setGetter(java.lang.reflect.Method) -> setGetter
    65:66:void setField(java.lang.reflect.Field) -> setField
    69:72:java.lang.Class getImplementationClass() -> getImplementationClass
    78:116:java.util.Optional getAnnotation(java.lang.Class) -> getAnnotation
    125:133:java.lang.Object getValue(java.lang.Object) -> getValue
    139:149:void setValue(java.lang.Object,java.lang.Object) -> setValue
    152:160:java.lang.String getJsonName() -> getJsonName
    164:167:java.lang.reflect.Type getImplementationType() -> getImplementationType
io.crnk.core.engine.information.bean.BeanInformation -> io.crnk.core.engine.information.bean.BeanInformation:
    java.lang.Class implementationClass -> implementationClass
    java.util.Map attributeMap -> attributeMap
    java.util.Map jsonAttributeMap -> jsonAttributeMap
    java.util.List attributeNames -> attributeNames
    io.crnk.core.engine.information.bean.BeanInformation superType -> superType
    java.util.List implementedInterfaces -> implementedInterfaces
    java.util.concurrent.ConcurrentHashMap cache -> cache
    19:91:void <init>(java.lang.Class) -> <init>
    94:94:io.crnk.core.engine.information.bean.BeanInformation getSuperType() -> getSuperType
    98:98:java.util.List getImplementedInterfaces() -> getImplementedInterfaces
    102:102:io.crnk.core.engine.information.bean.BeanAttributeInformation getAttribute(java.lang.String) -> getAttribute
    106:106:io.crnk.core.engine.information.bean.BeanAttributeInformation getAttributeByJsonName(java.lang.String) -> getAttributeByJsonName
    111:111:java.util.List getAttributeNames() -> getAttributeNames
    115:115:java.lang.Class getImplementationClass() -> getImplementationClass
    121:126:io.crnk.core.engine.information.bean.BeanInformation get(java.lang.Class) -> get
    118:118:void <clinit>() -> <clinit>
io.crnk.core.engine.information.contributor.ResourceFieldContributor -> io.crnk.core.engine.information.contributor.ResourceFieldContributor:
    java.util.List getResourceFields(io.crnk.core.engine.information.contributor.ResourceFieldContributorContext) -> getResourceFields
io.crnk.core.engine.information.contributor.ResourceFieldContributorContext -> io.crnk.core.engine.information.contributor.ResourceFieldContributorContext:
io.crnk.core.engine.information.repository.RelationshipRepositoryInformation -> io.crnk.core.engine.information.repository.RelationshipRepositoryInformation:
    io.crnk.core.repository.RelationshipMatcher getMatcher() -> getMatcher
io.crnk.core.engine.information.repository.RepositoryInformation -> io.crnk.core.engine.information.repository.RepositoryInformation:
    io.crnk.core.engine.information.repository.RepositoryMethodAccess getAccess() -> getAccess
io.crnk.core.engine.information.repository.RepositoryInformationProvider -> io.crnk.core.engine.information.repository.RepositoryInformationProvider:
    boolean accept(java.lang.Object) -> accept
    io.crnk.core.engine.information.repository.RepositoryInformation build(java.lang.Object,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> build
io.crnk.core.engine.information.repository.RepositoryInformationProviderContext -> io.crnk.core.engine.information.repository.RepositoryInformationProviderContext:
    io.crnk.core.engine.information.resource.ResourceInformationProvider getResourceInformationBuilder() -> getResourceInformationBuilder
io.crnk.core.engine.information.repository.RepositoryMethodAccess -> io.crnk.core.engine.information.repository.RepositoryMethodAccess:
    io.crnk.core.engine.information.repository.RepositoryMethodAccess ALL -> ALL
    boolean postable -> postable
    boolean patchable -> patchable
    boolean readable -> readable
    boolean deletable -> deletable
    18:23:void <init>(boolean,boolean,boolean,boolean) -> <init>
    55:61:int hashCode() -> hashCode
    66:73:boolean equals(java.lang.Object) -> equals
    8:8:void <clinit>() -> <clinit>
io.crnk.core.engine.information.repository.ResourceRepositoryInformation -> io.crnk.core.engine.information.repository.ResourceRepositoryInformation:
    java.util.Optional getResourceInformation() -> getResourceInformation
    io.crnk.core.engine.information.resource.ResourceInformation getResource() -> getResource
    java.util.Map getActions() -> getActions
    boolean isExposed() -> isExposed
io.crnk.core.engine.information.resource.AnyResourceFieldAccessor -> io.crnk.core.engine.information.resource.AnyResourceFieldAccessor:
    void setValue(java.lang.Object,java.lang.String,java.lang.Object) -> setValue
io.crnk.core.engine.information.resource.ResourceField -> io.crnk.core.engine.information.resource.ResourceField:
    io.crnk.core.engine.information.resource.ResourceFieldType getResourceFieldType() -> getResourceFieldType
    io.crnk.core.resource.annotations.LookupIncludeBehavior getLookupIncludeAutomatically() -> getLookupIncludeAutomatically
    java.lang.String getOppositeName() -> getOppositeName
    java.lang.String getOppositeResourceType() -> getOppositeResourceType
    java.lang.String getJsonName() -> getJsonName
    java.lang.String getUnderlyingName() -> getUnderlyingName
    java.lang.Class getType() -> getType
    java.lang.reflect.Type getGenericType() -> getGenericType
    io.crnk.core.resource.annotations.SerializeType getSerializeType() -> getSerializeType
    java.lang.Class getElementType() -> getElementType
    io.crnk.core.engine.information.resource.ResourceInformation getParentResourceInformation() -> getParentResourceInformation
    void setResourceInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> setResourceInformation
    boolean isCollection() -> isCollection
    io.crnk.core.engine.information.resource.ResourceFieldAccessor getAccessor() -> getAccessor
    boolean hasIdField() -> hasIdField
    java.lang.String getIdName() -> getIdName
    java.lang.Class getIdType() -> getIdType
    io.crnk.core.engine.information.resource.ResourceFieldAccessor getIdAccessor() -> getIdAccessor
    io.crnk.core.engine.information.resource.ResourceFieldAccess getAccess() -> getAccess
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior getRelationshipRepositoryBehavior() -> getRelationshipRepositoryBehavior
    io.crnk.core.resource.annotations.PatchStrategy getPatchStrategy() -> getPatchStrategy
io.crnk.core.engine.information.resource.ResourceFieldAccess -> io.crnk.core.engine.information.resource.ResourceFieldAccess:
    boolean readable -> readable
    boolean postable -> postable
    boolean patchable -> patchable
    boolean sortable -> sortable
    boolean filterable -> filterable
    boolean deletable -> deletable
    33:40:void <init>(boolean,boolean,boolean,boolean,boolean,boolean) -> <init>
    46:46:boolean isReadable() -> isReadable
    53:53:boolean isPostable() -> isPostable
    60:60:boolean isPatchable() -> isPatchable
    67:67:boolean isDeletable() -> isDeletable
    96:103:int hashCode() -> hashCode
    108:115:boolean equals(java.lang.Object) -> equals
    120:128:boolean allows(io.crnk.core.engine.http.HttpMethod) -> allows
io.crnk.core.engine.information.resource.ResourceFieldAccessor -> io.crnk.core.engine.information.resource.ResourceFieldAccessor:
    java.lang.Object getValue(java.lang.Object) -> getValue
    void setValue(java.lang.Object,java.lang.Object) -> setValue
io.crnk.core.engine.information.resource.ResourceFieldInformationProvider -> io.crnk.core.engine.information.resource.ResourceFieldInformationProvider:
    void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> init
    java.util.Optional isIgnored(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isIgnored
    java.util.Optional getJsonName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getJsonName
    java.util.Optional isPostable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isPostable
    java.util.Optional isDeletable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isDeletable
    java.util.Optional isPatchable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isPatchable
    java.util.Optional isReadable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isReadable
    java.util.Optional isSortable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isSortable
    java.util.Optional isFilterable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isFilterable
    java.util.Optional getFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getFieldType
    java.util.Optional getOppositeName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getOppositeName
    java.util.Optional useFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> useFieldType
    java.util.Optional getLookupIncludeBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getLookupIncludeBehavior
    java.util.Optional getSerializeType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getSerializeType
    java.util.Optional getRelationshipRepositoryBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getRelationshipRepositoryBehavior
    java.util.Optional getPatchStrategy(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getPatchStrategy
io.crnk.core.engine.information.resource.ResourceFieldInformationProviderBase -> io.crnk.core.engine.information.resource.ResourceFieldInformationProviderBase:
    io.crnk.core.engine.information.resource.ResourceInformationProviderContext context -> context
    11:11:void <init>() -> <init>
    17:18:void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> init
    22:22:java.util.Optional isIgnored(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isIgnored
    27:27:java.util.Optional getJsonName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getJsonName
    32:32:java.util.Optional isPostable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isPostable
    37:37:java.util.Optional isDeletable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isDeletable
    42:42:java.util.Optional isPatchable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isPatchable
    47:47:java.util.Optional isReadable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isReadable
    52:52:java.util.Optional isSortable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isSortable
    57:57:java.util.Optional isFilterable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isFilterable
    62:62:java.util.Optional getFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getFieldType
    67:67:java.util.Optional getOppositeName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getOppositeName
    72:72:java.util.Optional useFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> useFieldType
    77:77:java.util.Optional getLookupIncludeBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getLookupIncludeBehavior
    82:82:java.util.Optional getSerializeType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getSerializeType
    87:87:java.util.Optional getRelationshipRepositoryBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getRelationshipRepositoryBehavior
    92:92:java.util.Optional getPatchStrategy(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getPatchStrategy
io.crnk.core.engine.information.resource.ResourceFieldType -> io.crnk.core.engine.information.resource.ResourceFieldType:
    io.crnk.core.engine.information.resource.ResourceFieldType ID -> ID
    io.crnk.core.engine.information.resource.ResourceFieldType ATTRIBUTE -> ATTRIBUTE
    io.crnk.core.engine.information.resource.ResourceFieldType RELATIONSHIP -> RELATIONSHIP
    io.crnk.core.engine.information.resource.ResourceFieldType META_INFORMATION -> META_INFORMATION
    io.crnk.core.engine.information.resource.ResourceFieldType LINKS_INFORMATION -> LINKS_INFORMATION
    io.crnk.core.engine.information.resource.ResourceFieldType[] $VALUES -> $VALUES
    6:6:io.crnk.core.engine.information.resource.ResourceFieldType[] values() -> values
    6:6:io.crnk.core.engine.information.resource.ResourceFieldType valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    26:32:java.util.List filter(java.util.List) -> filter
    6:7:void <clinit>() -> <clinit>
io.crnk.core.engine.information.resource.ResourceInformation -> io.crnk.core.engine.information.resource.ResourceInformation:
    java.lang.Class implementationClass -> implementationClass
    java.lang.reflect.Type implementationType -> implementationType
    io.crnk.core.engine.information.resource.ResourceField parentField -> parentField
    io.crnk.core.engine.information.resource.ResourceField idField -> idField
    java.util.List attributeFields -> attributeFields
    java.util.List relationshipFields -> relationshipFields
    io.crnk.core.engine.information.resource.ResourceField metaField -> metaField
    io.crnk.core.engine.information.resource.ResourceField linksField -> linksField
    java.lang.String resourceType -> resourceType
    java.lang.String resourcePath -> resourcePath
    io.crnk.core.engine.information.resource.ResourceInstanceBuilder instanceBuilder -> instanceBuilder
    io.crnk.core.engine.parser.TypeParser parser -> parser
    java.lang.String superResourceType -> superResourceType
    java.util.Map fieldByJsonName -> fieldByJsonName
    java.util.Map fieldByUnderlyingName -> fieldByUnderlyingName
    java.util.Map fieldAccessors -> fieldAccessors
    java.util.List fields -> fields
    io.crnk.core.engine.information.resource.AnyResourceFieldAccessor anyFieldAccessor -> anyFieldAccessor
    io.crnk.core.engine.information.resource.ResourceValidator validator -> validator
    java.lang.Class pagingSpecType -> pagingSpecType
    io.crnk.core.engine.parser.StringMapper idStringMapper -> idStringMapper
    io.crnk.core.engine.information.resource.ResourceFieldAccessor nestedIdAccessor -> nestedIdAccessor
    141:142:void <init>(io.crnk.core.engine.parser.TypeParser,java.lang.reflect.Type,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.Class) -> <init>
    102:173:void <init>(io.crnk.core.engine.parser.TypeParser,java.lang.reflect.Type,java.lang.String,java.lang.String,java.lang.String,io.crnk.core.engine.information.resource.ResourceInstanceBuilder,java.util.List,java.lang.Class) -> <init>
    176:255:void setupNesting() -> setupNesting
    259:260:void setValidator(io.crnk.core.engine.information.resource.ResourceValidator) -> setValidator
    264:264:io.crnk.core.engine.information.resource.ResourceValidator getValidator() -> getValidator
    269:270:void setIdStringMapper(io.crnk.core.engine.parser.StringMapper) -> setIdStringMapper
    273:273:io.crnk.core.engine.parser.StringMapper getIdStringMapper() -> getIdStringMapper
    277:277:io.crnk.core.engine.information.resource.AnyResourceFieldAccessor getAnyFieldAccessor() -> getAnyFieldAccessor
    281:315:void initAny() -> initAny
    324:324:boolean absentAnySetter(java.lang.reflect.Method,java.lang.reflect.Method) -> absentAnySetter
    329:366:void initFields() -> initFields
    370:372:void setFields(java.util.List) -> setFields
    383:395:io.crnk.core.engine.information.resource.ResourceField getMetaField(java.lang.Class,java.util.Collection) -> getMetaField
    399:411:io.crnk.core.engine.information.resource.ResourceField getLinksField(java.lang.Class,java.util.Collection) -> getLinksField
    415:415:java.lang.String getResourceType() -> getResourceType
    419:422:java.lang.String getResourcePath() -> getResourcePath
    426:426:java.lang.String getSuperResourceType() -> getSuperResourceType
    430:430:io.crnk.core.engine.information.resource.ResourceInstanceBuilder getInstanceBuilder() -> getInstanceBuilder
    434:434:java.lang.reflect.Type getImplementationType() -> getImplementationType
    438:438:java.lang.Class getImplementationClass() -> getImplementationClass
    445:445:java.lang.Class getResourceClass() -> getResourceClass
    449:449:io.crnk.core.engine.information.resource.ResourceField getIdField() -> getIdField
    453:453:java.util.List getAttributeFields() -> getAttributeFields
    457:457:java.util.List getRelationshipFields() -> getRelationshipFields
    461:461:io.crnk.core.engine.information.resource.ResourceField findFieldByName(java.lang.String) -> findFieldByName
    465:465:io.crnk.core.engine.information.resource.ResourceField findFieldByUnderlyingName(java.lang.String) -> findFieldByUnderlyingName
    469:471:io.crnk.core.engine.information.resource.ResourceField findRelationshipFieldByName(java.lang.String) -> findRelationshipFieldByName
    475:477:io.crnk.core.engine.information.resource.ResourceField findAttributeFieldByName(java.lang.String) -> findAttributeFieldByName
    481:481:io.crnk.core.engine.information.resource.ResourceField getMetaField() -> getMetaField
    485:485:io.crnk.core.engine.information.resource.ResourceField getLinksField() -> getLinksField
    490:499:boolean equals(java.lang.Object) -> equals
    504:504:int hashCode() -> hashCode
    514:517:java.lang.String toIdString(java.lang.Object) -> toIdString
    525:543:io.crnk.core.engine.document.ResourceIdentifier toResourceIdentifier(java.lang.Object) -> toResourceIdentifier
    555:555:java.io.Serializable parseIdString(java.lang.String) -> parseIdString
    562:562:java.lang.Object getId(java.lang.Object) -> getId
    571:574:void verify(java.lang.Object,io.crnk.core.engine.document.Document) -> verify
    577:577:java.util.List getFields() -> getFields
    581:581:java.lang.Class getPagingSpecType() -> getPagingSpecType
    591:591:boolean isNested() -> isNested
    598:599:io.crnk.core.engine.information.resource.ResourceField getParentField() -> getParentField
    603:604:io.crnk.core.engine.information.resource.ResourceFieldAccessor getNestedIdAccessor() -> getNestedIdAccessor
    41:41:io.crnk.core.engine.parser.TypeParser access$000(io.crnk.core.engine.information.resource.ResourceInformation) -> access$000
    41:41:io.crnk.core.engine.information.resource.ResourceField access$100(io.crnk.core.engine.information.resource.ResourceInformation) -> access$100
io.crnk.core.engine.information.resource.ResourceInformation$1 -> io.crnk.core.engine.information.resource.ResourceInformation$1:
    io.crnk.core.engine.information.resource.ResourceInformation this$0 -> this$0
    116:116:void <init>(io.crnk.core.engine.information.resource.ResourceInformation) -> <init>
    119:119:java.lang.String toString(java.lang.Object) -> toString
    124:125:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.information.resource.ResourceInformation$2 -> io.crnk.core.engine.information.resource.ResourceInformation$2:
    io.crnk.core.engine.information.bean.BeanAttributeInformation val$finalParentAttribute -> val$finalParentAttribute
    io.crnk.core.engine.information.resource.ResourceInformation this$0 -> this$0
    208:208:void <init>(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.bean.BeanAttributeInformation) -> <init>
    212:217:java.lang.Object getValue(java.lang.Object) -> getValue
    222:222:void setValue(java.lang.Object,java.lang.Object) -> setValue
io.crnk.core.engine.information.resource.ResourceInformation$3 -> io.crnk.core.engine.information.resource.ResourceInformation$3:
    io.crnk.core.engine.information.bean.BeanAttributeInformation val$finalIdAttribute -> val$finalIdAttribute
    io.crnk.core.engine.information.resource.ResourceInformation this$0 -> this$0
    238:238:void <init>(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.bean.BeanAttributeInformation) -> <init>
    242:246:java.lang.Object getValue(java.lang.Object) -> getValue
    251:251:void setValue(java.lang.Object,java.lang.Object) -> setValue
io.crnk.core.engine.information.resource.ResourceInformation$4 -> io.crnk.core.engine.information.resource.ResourceInformation$4:
    java.lang.reflect.Method val$jsonAnyGetter -> val$jsonAnyGetter
    java.lang.reflect.Method val$jsonAnySetter -> val$jsonAnySetter
    io.crnk.core.engine.information.resource.ResourceInformation this$0 -> this$0
    291:291:void <init>(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    306:312:void setValue(java.lang.Object,java.lang.String,java.lang.Object) -> setValue
io.crnk.core.engine.information.resource.ResourceInformationProvider -> io.crnk.core.engine.information.resource.ResourceInformationProvider:
    boolean accept(java.lang.Class) -> accept
    io.crnk.core.engine.information.resource.ResourceInformation build(java.lang.Class) -> build
    void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> init
    java.lang.String getResourceType(java.lang.Class) -> getResourceType
io.crnk.core.engine.information.resource.ResourceInformationProviderContext -> io.crnk.core.engine.information.resource.ResourceInformationProviderContext:
    java.lang.String getResourceType(java.lang.Class) -> getResourceType
    boolean accept(java.lang.Class) -> accept
    io.crnk.core.engine.parser.TypeParser getTypeParser() -> getTypeParser
    io.crnk.core.engine.information.InformationBuilder getInformationBuilder() -> getInformationBuilder
    com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> getObjectMapper
io.crnk.core.engine.information.resource.ResourceInformationProviderModule -> io.crnk.core.engine.information.resource.ResourceInformationProviderModule:
    16:17:void <init>() -> <init>
    21:32:void setupModule(io.crnk.core.module.Module$ModuleContext) -> setupModule
io.crnk.core.engine.information.resource.ResourceInstanceBuilder -> io.crnk.core.engine.information.resource.ResourceInstanceBuilder:
    java.lang.Object buildResource(io.crnk.core.engine.document.Resource) -> buildResource
io.crnk.core.engine.information.resource.ResourceValidator -> io.crnk.core.engine.information.resource.ResourceValidator:
    void validate(java.lang.Object,io.crnk.core.engine.document.Document) -> validate
io.crnk.core.engine.internal.CoreModule -> io.crnk.core.engine.internal.CoreModule:
    io.crnk.core.engine.information.repository.RepositoryInformationProvider defaultRepositoryInformationProvider -> defaultRepositoryInformationProvider
    9:13:void <init>() -> <init>
    18:18:java.lang.String getModuleName() -> getModuleName
    23:28:void setupModule(io.crnk.core.module.Module$ModuleContext) -> setupModule
io.crnk.core.engine.internal.dispatcher.ControllerRegistry -> io.crnk.core.engine.internal.dispatcher.ControllerRegistry:
    org.slf4j.Logger LOGGER -> LOGGER
    java.util.List controllers -> controllers
    23:29:void <init>(java.util.Collection) -> <init>
    48:54:io.crnk.core.engine.internal.dispatcher.controller.Controller getController(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> getController
    21:21:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.dispatcher.controller.BaseController -> io.crnk.core.engine.internal.dispatcher.controller.BaseController:
    org.slf4j.Logger logger -> logger
    io.crnk.core.engine.internal.dispatcher.controller.ControllerContext context -> context
    34:36:void <init>() -> <init>
    42:43:void init(io.crnk.core.engine.internal.dispatcher.controller.ControllerContext) -> init
    58:60:io.crnk.core.engine.dispatcher.Response handle(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handle
    66:74:void verifyTypes(io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.registry.RegistryEntry) -> verifyTypes
    77:84:io.crnk.core.engine.registry.RegistryEntry getRegistryEntry(java.lang.String) -> getRegistryEntry
    88:98:void validateCreatedResponse(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.repository.response.JsonApiResponse) -> validateCreatedResponse
io.crnk.core.engine.internal.dispatcher.controller.CollectionGetController -> io.crnk.core.engine.internal.dispatcher.controller.CollectionGetController:
    19:19:void <init>() -> <init>
    26:28:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> isAcceptable
    33:49:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handleAsync
    55:59:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> toResponse
    49:49:io.crnk.core.engine.result.Result lambda$handleAsync$0(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> lambda$handleAsync$0
io.crnk.core.engine.internal.dispatcher.controller.Controller -> io.crnk.core.engine.internal.dispatcher.controller.Controller:
    void init(io.crnk.core.engine.internal.dispatcher.controller.ControllerContext) -> init
    boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> isAcceptable
    io.crnk.core.engine.dispatcher.Response handle(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handle
    io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handleAsync
io.crnk.core.engine.internal.dispatcher.controller.ControllerContext -> io.crnk.core.engine.internal.dispatcher.controller.ControllerContext:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    io.crnk.core.utils.Supplier documentMapper -> documentMapper
    24:27:void <init>(io.crnk.core.module.ModuleRegistry,io.crnk.core.utils.Supplier) -> <init>
    30:30:io.crnk.core.engine.filter.ResourceFilterDirectory getResourceFilterDirectory() -> getResourceFilterDirectory
    34:34:io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> getResourceRegistry
    38:38:io.crnk.core.engine.properties.PropertiesProvider getPropertiesProvider() -> getPropertiesProvider
    42:42:io.crnk.core.engine.parser.TypeParser getTypeParser() -> getTypeParser
    46:46:com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> getObjectMapper
    50:50:io.crnk.core.engine.internal.document.mapper.DocumentMapper getDocumentMapper() -> getDocumentMapper
    54:54:java.util.List getModificationFilters() -> getModificationFilters
    58:58:io.crnk.core.engine.result.ResultFactory getResultFactory() -> getResultFactory
io.crnk.core.engine.internal.dispatcher.controller.FieldResourceGetController -> io.crnk.core.engine.internal.dispatcher.controller.FieldResourceGetController:
    20:20:void <init>() -> <init>
    24:26:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> isAcceptable
    31:51:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handleAsync
    57:60:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> toResponse
    51:51:io.crnk.core.engine.result.Result lambda$handleAsync$0(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> lambda$handleAsync$0
io.crnk.core.engine.internal.dispatcher.controller.FieldResourcePost -> io.crnk.core.engine.internal.dispatcher.controller.FieldResourcePost:
    34:34:void <init>() -> <init>
    38:38:io.crnk.core.engine.http.HttpMethod getHttpMethod() -> getHttpMethod
    43:46:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> isAcceptable
    52:94:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handleAsync
    100:100:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> toResponse
    104:136:io.crnk.core.engine.result.Result attachToParent(io.crnk.core.repository.response.JsonApiResponse,io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.Document,io.crnk.core.engine.query.QueryAdapter) -> attachToParent
    136:136:io.crnk.core.engine.document.Document lambda$attachToParent$5(io.crnk.core.engine.document.Document,io.crnk.core.repository.response.JsonApiResponse) -> lambda$attachToParent$5
    93:93:io.crnk.core.engine.result.Result lambda$handleAsync$4(io.crnk.core.engine.result.Result) -> lambda$handleAsync$4
    92:92:io.crnk.core.engine.result.Result lambda$handleAsync$3(io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document,io.crnk.core.repository.response.JsonApiResponse) -> lambda$handleAsync$3
    84:84:io.crnk.core.engine.result.Result lambda$handleAsync$2(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> lambda$handleAsync$2
    82:82:io.crnk.core.engine.result.Result lambda$handleAsync$1(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.information.resource.ResourceInformation,java.util.List) -> lambda$handleAsync$1
    82:82:void lambda$handleAsync$0(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.repository.response.JsonApiResponse) -> lambda$handleAsync$0
io.crnk.core.engine.internal.dispatcher.controller.RelationsDeleteController -> io.crnk.core.engine.internal.dispatcher.controller.RelationsDeleteController:
    18:18:void <init>() -> <init>
    22:22:io.crnk.core.engine.http.HttpMethod method() -> method
    28:28:io.crnk.core.engine.result.Result processToManyRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> processToManyRelationship
    51:51:io.crnk.core.engine.result.Result processToOneRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> processToOneRelationship
    52:61:io.crnk.core.engine.result.Result lambda$processToOneRelationship$1(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> lambda$processToOneRelationship$1
    29:44:io.crnk.core.engine.result.Result lambda$processToManyRelationship$0(java.lang.Iterable,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> lambda$processToManyRelationship$0
io.crnk.core.engine.internal.dispatcher.controller.RelationshipsPatchController -> io.crnk.core.engine.internal.dispatcher.controller.RelationshipsPatchController:
    18:18:void <init>() -> <init>
    22:22:io.crnk.core.engine.http.HttpMethod method() -> method
    29:29:io.crnk.core.engine.result.Result processToManyRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> processToManyRelationship
    54:54:io.crnk.core.engine.result.Result processToOneRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> processToOneRelationship
    56:68:io.crnk.core.engine.result.Result lambda$processToOneRelationship$1(io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> lambda$processToOneRelationship$1
    30:46:io.crnk.core.engine.result.Result lambda$processToManyRelationship$0(java.lang.Iterable,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> lambda$processToManyRelationship$0
io.crnk.core.engine.internal.dispatcher.controller.RelationshipsPostController -> io.crnk.core.engine.internal.dispatcher.controller.RelationshipsPostController:
    18:18:void <init>() -> <init>
    22:22:io.crnk.core.engine.http.HttpMethod method() -> method
    28:28:io.crnk.core.engine.result.Result processToManyRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> processToManyRelationship
    53:53:io.crnk.core.engine.result.Result processToOneRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> processToOneRelationship
    54:66:io.crnk.core.engine.result.Result lambda$processToOneRelationship$1(io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> lambda$processToOneRelationship$1
    29:46:io.crnk.core.engine.result.Result lambda$processToManyRelationship$0(java.lang.Iterable,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> lambda$processToManyRelationship$0
io.crnk.core.engine.internal.dispatcher.controller.RelationshipsResourceGetController -> io.crnk.core.engine.internal.dispatcher.controller.RelationshipsResourceGetController:
    31:31:void <init>() -> <init>
    35:35:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> isAcceptable
    40:69:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handleAsync
    75:92:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document,io.crnk.core.engine.information.resource.ResourceInformation) -> toResponse
    96:106:io.crnk.core.engine.document.ResourceIdentifier toResourceIdentifier(java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation) -> toResourceIdentifier
    81:81:io.crnk.core.engine.document.ResourceIdentifier lambda$toResponse$2(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object) -> lambda$toResponse$2
    69:69:io.crnk.core.engine.dispatcher.Response lambda$handleAsync$1(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.document.Document) -> lambda$handleAsync$1
    69:69:io.crnk.core.engine.result.Result lambda$handleAsync$0(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> lambda$handleAsync$0
io.crnk.core.engine.internal.dispatcher.controller.RelationshipsResourceUpsert -> io.crnk.core.engine.internal.dispatcher.controller.RelationshipsResourceUpsert:
    26:26:void <init>() -> <init>
    io.crnk.core.engine.http.HttpMethod method() -> method
    io.crnk.core.engine.result.Result processToManyRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> processToManyRelationship
    io.crnk.core.engine.result.Result processToOneRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> processToOneRelationship
    65:67:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> isAcceptable
    72:110:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handleAsync
    110:110:java.lang.Object lambda$handleAsync$0(java.lang.Object) -> lambda$handleAsync$0
io.crnk.core.engine.internal.dispatcher.controller.ResourceDeleteController -> io.crnk.core.engine.internal.dispatcher.controller.ResourceDeleteController:
    20:20:void <init>() -> <init>
    24:26:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> isAcceptable
    31:48:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handleAsync
    49:50:io.crnk.core.engine.dispatcher.Response lambda$handleAsync$0(io.crnk.core.engine.dispatcher.Response,java.util.List) -> lambda$handleAsync$0
io.crnk.core.engine.internal.dispatcher.controller.ResourceGetController -> io.crnk.core.engine.internal.dispatcher.controller.ResourceGetController:
    18:18:void <init>() -> <init>
    28:28:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> isAcceptable
    38:48:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handleAsync
    53:56:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> toResponse
    47:47:io.crnk.core.engine.result.Result lambda$handleAsync$0(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> lambda$handleAsync$0
io.crnk.core.engine.internal.dispatcher.controller.ResourceIncludeField -> io.crnk.core.engine.internal.dispatcher.controller.ResourceIncludeField:
    7:7:void <init>() -> <init>
    11:14:void assertRequestDocument(io.crnk.core.engine.document.Document,io.crnk.core.engine.http.HttpMethod,java.lang.String) -> assertRequestDocument
io.crnk.core.engine.internal.dispatcher.controller.ResourcePatchController -> io.crnk.core.engine.internal.dispatcher.controller.ResourcePatchController:
    37:37:void <init>() -> <init>
    41:41:io.crnk.core.engine.http.HttpMethod getHttpMethod() -> getHttpMethod
    46:48:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> isAcceptable
    54:79:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handleAsync
    83:87:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> toResponse
    92:119:io.crnk.core.engine.result.Result applyChanges(io.crnk.core.engine.registry.RegistryEntry,java.lang.Object,io.crnk.core.engine.document.Resource,io.crnk.core.engine.query.QueryAdapter) -> applyChanges
    124:158:void mergeNestedAttribute(io.crnk.core.engine.document.Resource,io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceInformation) -> mergeNestedAttribute
    161:164:void checkNotNull(java.lang.Object,io.crnk.core.engine.internal.dispatcher.path.JsonPath) -> checkNotNull
    168:168:java.util.Map emptyIfNull(java.util.Map) -> emptyIfNull
    173:180:java.lang.String extractAttributesFromResourceAsJson(io.crnk.core.engine.document.Resource) -> extractAttributesFromResourceAsJson
    186:210:void updateValues(java.util.Map,java.util.Map,io.crnk.core.engine.information.resource.ResourceInformation) -> updateValues
    119:119:io.crnk.core.engine.result.Result lambda$applyChanges$7(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> lambda$applyChanges$7
    118:118:void lambda$applyChanges$6(io.crnk.core.repository.response.JsonApiResponse) -> lambda$applyChanges$6
    110:110:io.crnk.core.engine.result.Result lambda$applyChanges$5(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,java.util.List) -> lambda$applyChanges$5
    78:78:io.crnk.core.engine.result.Result lambda$handleAsync$4(io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.document.Resource,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> lambda$handleAsync$4
    70:76:io.crnk.core.engine.result.Result lambda$handleAsync$3(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.document.Document,io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.engine.document.Resource,io.crnk.core.repository.response.JsonApiResponse) -> lambda$handleAsync$3
    76:76:java.lang.Object lambda$handleAsync$2(java.lang.Object,io.crnk.core.engine.document.Resource) -> lambda$handleAsync$2
    75:75:void lambda$handleAsync$1(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.document.Resource) -> lambda$handleAsync$1
    74:74:io.crnk.core.engine.document.Resource lambda$handleAsync$0(io.crnk.core.engine.document.Document) -> lambda$handleAsync$0
    37:37:java.lang.String access$000(io.crnk.core.engine.internal.dispatcher.controller.ResourcePatchController,io.crnk.core.engine.document.Resource) -> access$000
    37:37:java.util.Map access$100(io.crnk.core.engine.internal.dispatcher.controller.ResourcePatchController,java.util.Map) -> access$100
    37:37:void access$200(io.crnk.core.engine.internal.dispatcher.controller.ResourcePatchController,java.util.Map,java.util.Map,io.crnk.core.engine.information.resource.ResourceInformation) -> access$200
io.crnk.core.engine.internal.dispatcher.controller.ResourcePatchController$1 -> io.crnk.core.engine.internal.dispatcher.controller.ResourcePatchController$1:
    io.crnk.core.engine.document.Resource val$existingResource -> val$existingResource
    io.crnk.core.engine.document.Resource val$requestResource -> val$requestResource
    io.crnk.core.engine.information.resource.ResourceInformation val$resourceInformation -> val$resourceInformation
    io.crnk.core.engine.internal.dispatcher.controller.ResourcePatchController this$0 -> this$0
    124:124:void <init>(io.crnk.core.engine.internal.dispatcher.controller.ResourcePatchController,io.crnk.core.engine.document.Resource,io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceInformation) -> <init>
    127:155:java.lang.Object call() -> call
io.crnk.core.engine.internal.dispatcher.controller.ResourcePostController -> io.crnk.core.engine.internal.dispatcher.controller.ResourcePostController:
    22:22:void <init>() -> <init>
    26:26:io.crnk.core.engine.http.HttpMethod getHttpMethod() -> getHttpMethod
    31:31:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> isAcceptable
    37:69:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> handleAsync
    73:75:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> toResponse
    68:68:io.crnk.core.engine.result.Result lambda$handleAsync$2(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> lambda$handleAsync$2
    67:67:void lambda$handleAsync$1(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.repository.response.JsonApiResponse) -> lambda$handleAsync$1
    60:60:java.lang.Object lambda$handleAsync$0(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> lambda$handleAsync$0
io.crnk.core.engine.internal.dispatcher.controller.ResourceUpsert -> io.crnk.core.engine.internal.dispatcher.controller.ResourceUpsert:
    49:49:void <init>() -> <init>
    52:68:io.crnk.core.engine.document.Resource getRequestBody(io.crnk.core.engine.document.Document,io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.http.HttpMethod) -> getRequestBody
    72:73:java.lang.Object newEntity(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.document.Resource) -> newEntity
    77:85:void setId(io.crnk.core.engine.document.Resource,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation) -> setId
    88:94:java.util.Set getLoadedRelationshipNames(io.crnk.core.engine.document.Resource) -> getLoadedRelationshipNames
    98:110:void setLinks(io.crnk.core.engine.document.Resource,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation) -> setLinks
    113:127:void setMeta(io.crnk.core.engine.document.Resource,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation) -> setMeta
    130:130:java.lang.RuntimeException newBodyException(java.lang.String,java.io.IOException) -> newBodyException
    134:141:void setAttributes(io.crnk.core.engine.document.Resource,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryContext) -> setAttributes
    145:181:void setAttribute(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonNode,io.crnk.core.engine.query.QueryContext) -> setAttribute
    184:184:boolean checkAccess() -> checkAccess
    io.crnk.core.engine.http.HttpMethod getHttpMethod() -> getHttpMethod
    191:201:java.lang.Object buildNewResource(io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.document.Resource,java.lang.String) -> buildNewResource
    207:246:io.crnk.core.engine.result.Result setRelationsAsync(java.lang.Object,io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.document.Resource,io.crnk.core.engine.query.QueryAdapter,boolean) -> setRelationsAsync
    251:304:java.util.Optional setRelationsFieldAsync(java.lang.Object,io.crnk.core.engine.registry.RegistryEntry,java.util.Map$Entry,io.crnk.core.engine.query.QueryAdapter) -> setRelationsFieldAsync
    309:309:boolean decideSetRelationObjectsField(io.crnk.core.engine.information.resource.ResourceField) -> decideSetRelationObjectsField
    315:349:java.util.Optional setRelationFieldAsync(java.lang.Object,io.crnk.core.engine.registry.RegistryEntry,java.lang.String,io.crnk.core.engine.document.Relationship,io.crnk.core.engine.query.QueryAdapter) -> setRelationFieldAsync
    354:359:boolean ignoreImmutableFields() -> ignoreImmutableFields
    363:364:java.io.Serializable parseId(io.crnk.core.engine.document.ResourceIdentifier,java.lang.Class) -> parseId
    372:372:boolean decideSetRelationObjectField(io.crnk.core.engine.registry.RegistryEntry,java.io.Serializable,io.crnk.core.engine.information.resource.ResourceField) -> decideSetRelationObjectField
    377:378:io.crnk.core.engine.result.Result fetchRelated(io.crnk.core.engine.registry.RegistryEntry,java.io.Serializable,io.crnk.core.engine.query.QueryAdapter) -> fetchRelated
    344:344:void lambda$setRelationFieldAsync$1(io.crnk.core.engine.information.resource.ResourceField,java.lang.Object,java.lang.Object) -> lambda$setRelationFieldAsync$1
    297:300:void lambda$setRelationsFieldAsync$0(io.crnk.core.engine.information.resource.ResourceField,java.lang.Object,java.util.List) -> lambda$setRelationsFieldAsync$0
io.crnk.core.engine.internal.dispatcher.path.ActionPath -> io.crnk.core.engine.internal.dispatcher.path.ActionPath:
    java.lang.String actionName -> actionName
    18:20:void <init>(io.crnk.core.engine.registry.RegistryEntry,java.util.List,java.lang.String) -> <init>
    28:28:boolean isCollection() -> isCollection
    33:33:java.lang.String toString() -> toString
io.crnk.core.engine.internal.dispatcher.path.FieldPath -> io.crnk.core.engine.internal.dispatcher.path.FieldPath:
    io.crnk.core.engine.information.resource.ResourceField field -> field
    20:22:void <init>(io.crnk.core.engine.registry.RegistryEntry,java.util.List,io.crnk.core.engine.information.resource.ResourceField) -> <init>
    26:26:boolean isCollection() -> isCollection
    30:30:io.crnk.core.engine.information.resource.ResourceField getField() -> getField
    35:35:java.lang.String toString() -> toString
io.crnk.core.engine.internal.dispatcher.path.JsonPath -> io.crnk.core.engine.internal.dispatcher.path.JsonPath:
    io.crnk.core.engine.registry.RegistryEntry rootEntry -> rootEntry
    java.util.List ids -> ids
    26:29:void <init>(io.crnk.core.engine.registry.RegistryEntry,java.util.List) -> <init>
    32:32:java.util.Collection getIds() -> getIds
    boolean isCollection() -> isCollection
    39:45:boolean equals(java.lang.Object) -> equals
    50:50:int hashCode() -> hashCode
    55:61:java.lang.String toString() -> toString
    65:66:java.io.Serializable getId() -> getId
    70:70:io.crnk.core.engine.registry.RegistryEntry getRootEntry() -> getRootEntry
io.crnk.core.engine.internal.dispatcher.path.PathBuilder -> io.crnk.core.engine.internal.dispatcher.path.PathBuilder:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    io.crnk.core.engine.parser.TypeParser parser -> parser
    39:42:void <init>(io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.parser.TypeParser) -> <init>
    45:52:java.util.List parseIds(java.lang.String,io.crnk.core.engine.information.resource.ResourceInformation) -> parseIds
    56:72:java.util.List parseNestedIds(java.lang.String,java.io.Serializable,io.crnk.core.engine.information.resource.ResourceField) -> parseNestedIds
    76:82:java.lang.String[] splitPath(java.lang.String) -> splitPath
    93:97:io.crnk.core.engine.internal.dispatcher.path.JsonPath build(java.lang.String) -> build
    101:113:io.crnk.core.engine.internal.dispatcher.path.JsonPath parseResourcePath(java.util.LinkedList) -> parseResourcePath
    117:119:io.crnk.core.engine.internal.dispatcher.path.JsonPath parseIdPath(io.crnk.core.engine.registry.RegistryEntry,java.util.LinkedList) -> parseIdPath
    123:179:io.crnk.core.engine.internal.dispatcher.path.JsonPath parseFieldPath(io.crnk.core.engine.registry.RegistryEntry,java.util.List,java.util.LinkedList) -> parseFieldPath
    183:202:io.crnk.core.engine.registry.RegistryEntry getRootEntry(java.util.LinkedList) -> getRootEntry
    207:214:io.crnk.core.engine.registry.RegistryEntry getEntryByPath(java.lang.String) -> getEntryByPath
    31:31:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.dispatcher.path.RelationshipsPath -> io.crnk.core.engine.internal.dispatcher.path.RelationshipsPath:
    io.crnk.core.engine.information.resource.ResourceField relationship -> relationship
    20:22:void <init>(io.crnk.core.engine.registry.RegistryEntry,java.util.List,io.crnk.core.engine.information.resource.ResourceField) -> <init>
    26:26:boolean isCollection() -> isCollection
    30:30:io.crnk.core.engine.information.resource.ResourceField getRelationship() -> getRelationship
    35:35:java.lang.String toString() -> toString
io.crnk.core.engine.internal.dispatcher.path.ResourcePath -> io.crnk.core.engine.internal.dispatcher.path.ResourcePath:
    16:17:void <init>(io.crnk.core.engine.registry.RegistryEntry,java.util.List) -> <init>
    21:21:boolean isCollection() -> isCollection
io.crnk.core.engine.internal.document.mapper.DocumentMapper -> io.crnk.core.engine.internal.document.mapper.DocumentMapper:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.engine.filter.ResourceFilterDirectory resourceFilterDirectory -> resourceFilterDirectory
    com.fasterxml.jackson.databind.node.ObjectNode jsonapi -> jsonapi
    io.crnk.core.engine.properties.PropertiesProvider propertiesProvider -> propertiesProvider
    io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil util -> util
    io.crnk.core.engine.internal.document.mapper.ResourceMapper resourceMapper -> resourceMapper
    io.crnk.core.engine.internal.document.mapper.IncludeLookupSetter includeLookupSetter -> includeLookupSetter
    io.crnk.core.engine.result.ResultFactory resultFactory -> resultFactory
    boolean client -> client
    48:49:void <init>(io.crnk.core.engine.registry.ResourceRegistry,com.fasterxml.jackson.databind.ObjectMapper,io.crnk.core.engine.properties.PropertiesProvider,io.crnk.core.engine.filter.ResourceFilterDirectory,io.crnk.core.engine.result.ResultFactory,java.util.Map) -> <init>
    53:68:void <init>(io.crnk.core.engine.registry.ResourceRegistry,com.fasterxml.jackson.databind.ObjectMapper,io.crnk.core.engine.properties.PropertiesProvider,io.crnk.core.engine.filter.ResourceFilterDirectory,io.crnk.core.engine.result.ResultFactory,java.util.Map,boolean) -> <init>
    72:72:io.crnk.core.engine.internal.document.mapper.IncludeLookupSetter newIncludeLookupSetter(io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.internal.document.mapper.ResourceMapper,io.crnk.core.engine.properties.PropertiesProvider) -> newIncludeLookupSetter
    77:77:io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil newDocumentMapperUtil(io.crnk.core.engine.registry.ResourceRegistry,com.fasterxml.jackson.databind.ObjectMapper,io.crnk.core.engine.properties.PropertiesProvider) -> newDocumentMapperUtil
    81:81:io.crnk.core.engine.internal.document.mapper.ResourceMapper newResourceMapper(io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil,boolean,com.fasterxml.jackson.databind.ObjectMapper) -> newResourceMapper
    87:105:io.crnk.core.engine.result.Result toDocument(io.crnk.core.repository.response.JsonApiResponse,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig) -> toDocument
    112:124:void compact(io.crnk.core.engine.document.Document,io.crnk.core.engine.query.QueryAdapter) -> compact
    127:132:void compact(java.util.List) -> compact
    135:143:void compact(io.crnk.core.engine.document.Resource) -> compact
    148:151:io.crnk.core.engine.result.Result addRelationDataAndInclusions(io.crnk.core.engine.document.Document,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig) -> addRelationDataAndInclusions
    156:168:void addData(io.crnk.core.engine.document.Document,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig) -> addData
    171:179:void addErrors(io.crnk.core.engine.document.Document,java.lang.Iterable) -> addErrors
    104:104:void lambda$toDocument$0(io.crnk.core.engine.document.Document,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> lambda$toDocument$0
    28:28:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil -> io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> objectMapper
    io.crnk.core.engine.internal.utils.SerializerUtil serializerUtil -> serializerUtil
    49:56:void <init>(io.crnk.core.engine.registry.ResourceRegistry,com.fasterxml.jackson.databind.ObjectMapper,io.crnk.core.engine.properties.PropertiesProvider) -> <init>
    60:67:java.util.List getRequestedFields(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,java.util.List,boolean) -> getRequestedFields
    73:96:java.util.List computeRequestedFields(io.crnk.legacy.queryParams.params.IncludedFieldsParams,boolean,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.information.resource.ResourceInformation,java.util.List) -> computeRequestedFields
    100:100:boolean noResourceIncludedFieldsSpecified(io.crnk.legacy.queryParams.params.IncludedFieldsParams) -> noResourceIncludedFieldsSpecified
    105:114:java.util.List toList(java.lang.Object) -> toList
    120:122:java.lang.String getRelationshipLink(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,boolean,io.crnk.core.engine.query.QueryContext) -> getRelationshipLink
    143:145:java.lang.String getIdString(java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation) -> getIdString
    149:163:void setLinks(io.crnk.core.resource.list.LinksContainer,io.crnk.core.resource.links.LinksInformation,io.crnk.core.engine.query.QueryAdapter) -> setLinks
    166:170:void setMeta(io.crnk.core.resource.meta.MetaContainer,io.crnk.core.resource.meta.MetaInformation) -> setMeta
    173:173:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation(java.lang.Class) -> getResourceInformation
    181:181:java.lang.String getSelfUrl(io.crnk.core.engine.query.QueryContext,io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object) -> getSelfUrl
    185:185:io.crnk.core.engine.internal.utils.SerializerUtil getSerializerUtil() -> getSerializerUtil
    40:40:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil$DefaultSelfRelatedLinksInformation -> io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil$DefaultSelfRelatedLinksInformation:
    java.lang.String self -> self
    189:189:void <init>() -> <init>
    209:209:java.lang.String getSelf() -> getSelf
    214:215:void setSelf(java.lang.String) -> setSelf
io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig -> io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig:
    java.util.Set fieldsWithEnforceIdSerialization -> fieldsWithEnforceIdSerialization
    io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig resourceMapping -> resourceMapping
    6:10:void <init>() -> <init>
    13:13:io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig create() -> create
    17:17:java.util.Set getFieldsWithEnforcedIdSerialization() -> getFieldsWithEnforcedIdSerialization
    21:22:io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig setFieldsWithEnforcedIdSerialization(java.util.Set) -> setFieldsWithEnforcedIdSerialization
    26:26:io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig getResourceMapping() -> getResourceMapping
io.crnk.core.engine.internal.document.mapper.IncludeBehavior -> io.crnk.core.engine.internal.document.mapper.IncludeBehavior:
    io.crnk.core.engine.internal.document.mapper.IncludeBehavior PER_TYPE -> PER_TYPE
    io.crnk.core.engine.internal.document.mapper.IncludeBehavior PER_ROOT_PATH -> PER_ROOT_PATH
    io.crnk.core.engine.internal.document.mapper.IncludeBehavior[] $VALUES -> $VALUES
    8:8:io.crnk.core.engine.internal.document.mapper.IncludeBehavior[] values() -> values
    8:8:io.crnk.core.engine.internal.document.mapper.IncludeBehavior valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:9:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.document.mapper.IncludeLookupSetter -> io.crnk.core.engine.internal.document.mapper.IncludeLookupSetter:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    io.crnk.core.engine.result.ResultFactory resultFactory -> resultFactory
    io.crnk.core.engine.internal.document.mapper.ResourceMapper resourceMapper -> resourceMapper
    io.crnk.core.engine.internal.document.mapper.IncludeLookupUtil util -> util
    io.crnk.core.engine.internal.document.mapper.IncludeRelationshipLoader relationshipLoader -> relationshipLoader
    boolean allowPagination -> allowPagination
    45:59:void <init>(io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.internal.document.mapper.ResourceMapper,io.crnk.core.engine.properties.PropertiesProvider,io.crnk.core.engine.result.ResultFactory) -> <init>
    64:83:io.crnk.core.engine.result.Result processInclusions(io.crnk.core.engine.document.Document,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig) -> processInclusions
    95:105:io.crnk.core.engine.result.Result populate(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,java.util.List) -> populate
    111:191:io.crnk.core.engine.result.Result populateField(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,java.util.List) -> populateField
    195:199:void checkNoRecursion(java.util.List) -> checkNoRecursion
    208:243:java.util.Set fetchRelationFromEntity(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.List,io.crnk.core.engine.information.resource.ResourceField,boolean,boolean,boolean) -> fetchRelationFromEntity
    183:187:io.crnk.core.engine.result.Result lambda$populateField$3(boolean,io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.List,java.util.Set) -> lambda$populateField$3
    157:157:java.util.Set lambda$populateField$2(java.util.Set,java.util.Set) -> lambda$populateField$2
    102:102:java.lang.Object lambda$populate$1(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,java.util.List,java.lang.Object) -> lambda$populate$1
    84:89:java.lang.Object lambda$processInclusions$0(io.crnk.core.engine.internal.document.mapper.IncludeRequest,io.crnk.core.engine.document.Document,java.lang.Object) -> lambda$processInclusions$0
    32:32:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.document.mapper.IncludeLookupUtil -> io.crnk.core.engine.internal.document.mapper.IncludeLookupUtil:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    io.crnk.core.engine.internal.document.mapper.IncludeBehavior includeBehavior -> includeBehavior
    36:39:void <init>(io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.internal.document.mapper.IncludeBehavior) -> <init>
    42:47:java.util.List getIds(java.util.Collection,io.crnk.core.engine.information.resource.ResourceInformation) -> getIds
    51:76:io.crnk.core.resource.annotations.LookupIncludeBehavior getGlobalLookupIncludeBehavior(io.crnk.core.engine.properties.PropertiesProvider) -> getGlobalLookupIncludeBehavior
    80:84:io.crnk.core.engine.internal.document.mapper.IncludeBehavior getIncludeBehavior(io.crnk.core.engine.properties.PropertiesProvider) -> getIncludeBehavior
    88:96:java.util.Set getRelationshipFields(java.util.Collection) -> getRelationshipFields
    100:120:void process(java.lang.String,java.util.Set,java.util.Set) -> process
    123:128:io.crnk.core.engine.information.resource.ResourceInformation getSuperInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> getSuperInformation
    132:138:java.util.List filterByType(java.util.Collection,io.crnk.core.engine.information.resource.ResourceInformation) -> filterByType
    142:154:boolean isInstance(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.document.Resource) -> isInstance
    158:166:boolean isInclusionRequested(io.crnk.core.engine.query.QueryAdapter,java.util.List) -> isInclusionRequested
    171:185:boolean isInclusionRequestedForQueryspec(io.crnk.core.engine.query.QueryAdapter,java.util.List) -> isInclusionRequestedForQueryspec
    190:201:boolean isInclusionRequestedForQueryParams(io.crnk.core.engine.query.QueryAdapter,java.util.List) -> isInclusionRequestedForQueryParams
    205:211:boolean contains(io.crnk.legacy.queryParams.params.IncludedRelationsParams,java.lang.String) -> contains
    215:220:boolean contains(io.crnk.core.queryspec.QuerySpec,java.util.List) -> contains
    224:225:boolean startsWith(io.crnk.core.queryspec.IncludeRelationSpec,java.util.List) -> startsWith
    229:237:java.lang.String toPath(java.util.List,int) -> toPath
    241:247:java.util.List toPathList(java.util.List,int) -> toPathList
    257:263:java.util.List filterByLoadedRelationship(java.util.List,io.crnk.core.engine.information.resource.ResourceField) -> filterByLoadedRelationship
    267:271:java.util.Set toIds(java.util.Set) -> toIds
    275:279:java.util.List toIds(java.util.List) -> toIds
    283:290:java.util.Set union(java.util.Collection,java.util.Collection) -> union
    295:302:java.util.List findResourcesWithoutRelationshipToLoad(java.util.List,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.internal.document.mapper.IncludeRequest) -> findResourcesWithoutRelationshipToLoad
    306:311:boolean isLoaded(io.crnk.core.engine.document.Relationship,io.crnk.core.engine.internal.document.mapper.IncludeRequest) -> isLoaded
    315:322:io.crnk.core.engine.document.ResourceIdentifier idToResourceId(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object) -> idToResourceId
io.crnk.core.engine.internal.document.mapper.IncludePopulatedCache -> io.crnk.core.engine.internal.document.mapper.IncludePopulatedCache:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    java.util.HashSet processed -> processed
    18:22:void <init>(io.crnk.core.engine.registry.ResourceRegistry) -> <init>
    25:27:void markProcessed(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField) -> markProcessed
    30:37:java.util.Collection filterProcessed(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> filterProcessed
    41:42:boolean wasProcessed(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField) -> wasProcessed
    46:47:java.lang.String getKey(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField) -> getKey
io.crnk.core.engine.internal.document.mapper.IncludeRelationshipLoader -> io.crnk.core.engine.internal.document.mapper.IncludeRelationshipLoader:
    io.crnk.core.engine.result.ResultFactory resultFactory -> resultFactory
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    io.crnk.core.engine.properties.PropertiesProvider propertiesProvider -> propertiesProvider
    boolean exceptionOnMissingRelatedResource -> exceptionOnMissingRelatedResource
    40:51:void <init>(io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.result.ResultFactory,io.crnk.core.engine.properties.PropertiesProvider) -> <init>
    62:94:io.crnk.core.engine.result.Result lookupRelatedResource(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> lookupRelatedResource
    98:101:java.util.Set mergeList(java.util.Set,java.util.Set) -> mergeList
    107:158:io.crnk.core.engine.result.Result lookupRelatedResourcesWithId(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> lookupRelatedResourcesWithId
    164:183:io.crnk.core.engine.result.Result lookupRelatedResourceWithRelationship(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> lookupRelatedResourceWithRelationship
    184:200:java.util.Set lambda$lookupRelatedResourceWithRelationship$1(java.util.Collection,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.document.mapper.IncludeRequest,io.crnk.core.engine.information.resource.ResourceField,java.util.Map) -> lambda$lookupRelatedResourceWithRelationship$1
    143:154:java.util.Set lambda$lookupRelatedResourcesWithId$0(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Set,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Set,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.repository.response.JsonApiResponse) -> lambda$lookupRelatedResourcesWithId$0
io.crnk.core.engine.internal.document.mapper.IncludeRequest -> io.crnk.core.engine.internal.document.mapper.IncludeRequest:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.engine.internal.document.mapper.IncludePopulatedCache populatedCache -> populatedCache
    java.util.HashSet inclusions -> inclusions
    java.util.List dataList -> dataList
    io.crnk.core.engine.query.QueryAdapter queryAdapter -> queryAdapter
    io.crnk.core.engine.internal.document.mapper.IncludeLookupUtil util -> util
    io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig mappingConfig -> mappingConfig
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    io.crnk.core.engine.internal.document.mapper.ResourceMapper resourceMapper -> resourceMapper
    java.util.Map dataMap -> dataMap
    java.util.Map entityMap -> entityMap
    java.util.Map resourceMap -> resourceMap
    57:80:void <init>(java.lang.Object,io.crnk.core.engine.document.Document,io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.IncludeLookupUtil,io.crnk.core.engine.internal.document.mapper.ResourceMapper) -> <init>
    84:85:boolean isInclusionRequest(java.util.List,io.crnk.core.engine.information.resource.ResourceField) -> isInclusionRequest
    89:89:java.util.List getDataList() -> getDataList
    94:95:void removeDataFromIncluded() -> removeDataFromIncluded
    99:107:java.util.List getIncluded() -> getIncluded
    111:115:boolean isRelationIdSerialized(java.util.List) -> isRelationIdSerialized
    119:119:java.util.Collection filterProcessed(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> filterProcessed
    123:124:void markForInclusion(java.util.Set) -> markForInclusion
    127:139:io.crnk.core.engine.document.Resource merge(java.lang.Object) -> merge
    144:163:void setupRelationId(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField,java.lang.Object) -> setupRelationId
    168:182:java.util.List setupRelation(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField,java.lang.Object) -> setupRelation
    187:187:io.crnk.core.engine.query.QueryAdapter getQueryAdapter() -> getQueryAdapter
    191:191:boolean containsResource(io.crnk.core.engine.document.ResourceIdentifier) -> containsResource
    195:195:io.crnk.core.engine.document.Resource getResource(io.crnk.core.engine.document.ResourceIdentifier) -> getResource
    199:199:java.lang.Object getEntity(io.crnk.core.engine.document.ResourceIdentifier) -> getEntity
    31:31:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.document.mapper.ResourceMapper -> io.crnk.core.engine.internal.document.mapper.ResourceMapper:
    java.lang.String RELATED_FIELD_NAME -> RELATED_FIELD_NAME
    io.crnk.core.engine.filter.ResourceFilterDirectory resourceFilterDirectory -> resourceFilterDirectory
    io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil util -> util
    boolean client -> client
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> objectMapper
    26:42:void <init>(io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil,boolean,com.fasterxml.jackson.databind.ObjectMapper,io.crnk.core.engine.filter.ResourceFilterDirectory) -> <init>
    50:70:io.crnk.core.engine.document.Resource toData(java.lang.Object,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig) -> toData
    75:78:io.crnk.core.resource.meta.MetaInformation getResourceMeta(java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation) -> getResourceMeta
    83:94:io.crnk.core.resource.links.LinksInformation getResourceLinks(java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryContext) -> getResourceLinks
    100:110:void setAttributes(io.crnk.core.engine.document.Resource,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter) -> setAttributes
    113:114:boolean isIgnored(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryContext) -> isIgnored
    118:121:void setAttribute(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField,java.lang.Object) -> setAttribute
    125:133:void setRelationships(io.crnk.core.engine.document.Resource,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig) -> setRelationships
    138:153:void setRelationship(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig) -> setRelationship
io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig -> io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig:
    boolean serializeLinks -> serializeLinks
    3:5:void <init>() -> <init>
    8:8:boolean getSerializeLinks() -> getSerializeLinks
io.crnk.core.engine.internal.exception.CrnkExceptionMapper -> io.crnk.core.engine.internal.exception.CrnkExceptionMapper:
    org.slf4j.Logger LOGGER -> LOGGER
    22:22:void <init>() -> <init>
    29:35:io.crnk.core.engine.error.ErrorResponse toErrorResponse(io.crnk.core.exception.CrnkMappableException) -> toErrorResponse
    40:61:io.crnk.core.exception.CrnkMappableException fromErrorResponse(io.crnk.core.engine.error.ErrorResponse) -> fromErrorResponse
    65:71:java.lang.String getMessage(io.crnk.core.engine.error.ErrorResponse) -> getMessage
    76:77:boolean accepts(io.crnk.core.engine.error.ErrorResponse) -> accepts
    22:22:java.lang.Throwable fromErrorResponse(io.crnk.core.engine.error.ErrorResponse) -> fromErrorResponse
    22:22:io.crnk.core.engine.error.ErrorResponse toErrorResponse(java.lang.Throwable) -> toErrorResponse
    24:24:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.exception.ExceptionMapperLookup -> io.crnk.core.engine.internal.exception.ExceptionMapperLookup:
    java.util.Set getExceptionMappers() -> getExceptionMappers
io.crnk.core.engine.internal.exception.ExceptionMapperRegistry -> io.crnk.core.engine.internal.exception.ExceptionMapperRegistry:
    org.slf4j.Logger LOGGER -> LOGGER
    java.util.Set exceptionMappers -> exceptionMappers
    21:23:void <init>(java.util.Set) -> <init>
    30:42:java.util.Optional findMapperFor(java.lang.Class) -> findMapperFor
    69:80:int getDistanceBetweenExceptions(java.lang.Class,java.lang.Class) -> getDistanceBetweenExceptions
    17:17:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.exception.ExceptionMapperRegistryBuilder -> io.crnk.core.engine.internal.exception.ExceptionMapperRegistryBuilder:
    java.util.Set exceptionMappers -> exceptionMappers
    12:13:void <init>() -> <init>
    16:20:io.crnk.core.engine.internal.exception.ExceptionMapperRegistry build(io.crnk.core.engine.internal.exception.ExceptionMapperLookup) -> build
    24:26:void addDefaultMappers() -> addDefaultMappers
    29:38:void registerExceptionMapper(io.crnk.core.engine.error.ExceptionMapper) -> registerExceptionMapper
    41:42:boolean isProxy(java.lang.Class) -> isProxy
    47:67:java.lang.Class getGenericType(java.lang.Class) -> getGenericType
io.crnk.core.engine.internal.exception.ExceptionMapperType -> io.crnk.core.engine.internal.exception.ExceptionMapperType:
    io.crnk.core.engine.error.ExceptionMapper exceptionMapper -> exceptionMapper
    java.lang.Class exceptionClass -> exceptionClass
    12:16:void <init>(java.lang.Class,io.crnk.core.engine.error.ExceptionMapper) -> <init>
    19:19:java.lang.Class getExceptionClass() -> getExceptionClass
    23:23:io.crnk.core.engine.error.ExceptionMapper getExceptionMapper() -> getExceptionMapper
    28:36:boolean equals(java.lang.Object) -> equals
    41:41:int hashCode() -> hashCode
    46:47:java.lang.String toString() -> toString
io.crnk.core.engine.internal.exception.TimeoutExceptionMapper -> io.crnk.core.engine.internal.exception.TimeoutExceptionMapper:
    org.slf4j.Logger LOGGER -> LOGGER
    11:11:void <init>() -> <init>
    17:19:io.crnk.core.engine.error.ErrorResponse toErrorResponse(java.util.concurrent.TimeoutException) -> toErrorResponse
    24:24:java.util.concurrent.TimeoutException fromErrorResponse(io.crnk.core.engine.error.ErrorResponse) -> fromErrorResponse
    29:30:boolean accepts(io.crnk.core.engine.error.ErrorResponse) -> accepts
    11:11:java.lang.Throwable fromErrorResponse(io.crnk.core.engine.error.ErrorResponse) -> fromErrorResponse
    11:11:io.crnk.core.engine.error.ErrorResponse toErrorResponse(java.lang.Throwable) -> toErrorResponse
    13:13:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.http.DocumentFilterChainImpl -> io.crnk.core.engine.internal.http.DocumentFilterChainImpl:
    io.crnk.core.module.Module$ModuleContext moduleContext -> moduleContext
    int filterIndex -> filterIndex
    io.crnk.core.engine.internal.dispatcher.controller.Controller controller -> controller
    15:22:void <init>(io.crnk.core.module.Module$ModuleContext,io.crnk.core.engine.internal.dispatcher.controller.Controller) -> <init>
    26:32:io.crnk.core.engine.dispatcher.Response doFilter(io.crnk.core.engine.filter.DocumentFilterContext) -> doFilter
io.crnk.core.engine.internal.http.DocumentFilterContextImpl -> io.crnk.core.engine.internal.http.DocumentFilterContextImpl:
    io.crnk.core.engine.internal.dispatcher.path.JsonPath jsonPath -> jsonPath
    io.crnk.core.engine.query.QueryAdapter queryAdapter -> queryAdapter
    io.crnk.core.engine.document.Document requestBody -> requestBody
    java.lang.String method -> method
    18:23:void <init>(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document,java.lang.String) -> <init>
    27:27:io.crnk.core.engine.document.Document getRequestBody() -> getRequestBody
    32:32:io.crnk.core.engine.query.QueryAdapter getQueryAdapter() -> getQueryAdapter
    37:37:io.crnk.core.engine.internal.dispatcher.path.JsonPath getJsonPath() -> getJsonPath
io.crnk.core.engine.internal.http.HttpRequestContextBaseAdapter -> io.crnk.core.engine.internal.http.HttpRequestContextBaseAdapter:
    io.crnk.core.engine.http.HttpRequestContextBase base -> base
    boolean hasResponse -> hasResponse
    java.util.Map requestAttributes -> requestAttributes
    io.crnk.core.engine.query.QueryContext queryContext -> queryContext
    22:30:void <init>(io.crnk.core.engine.http.HttpRequestContextBase) -> <init>
    33:33:boolean hasResponse() -> hasResponse
    38:48:boolean accepts(java.lang.String) -> accepts
    91:92:boolean acceptsAny() -> acceptsAny
    118:118:io.crnk.core.engine.query.QueryContext getQueryContext() -> getQueryContext
    122:130:boolean isCompatible(java.lang.String,java.lang.String) -> isCompatible
    135:135:java.lang.String getRequestHeader(java.lang.String) -> getRequestHeader
    140:140:java.util.Map getRequestParameters() -> getRequestParameters
    145:145:java.lang.String getPath() -> getPath
    150:150:java.lang.String getBaseUrl() -> getBaseUrl
    155:155:byte[] getRequestBody() -> getRequestBody
    171:171:java.lang.String getMethod() -> getMethod
    181:181:io.crnk.core.engine.http.HttpResponse getResponse() -> getResponse
    186:187:void setResponse(io.crnk.core.engine.http.HttpResponse) -> setResponse
io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl -> io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl:
    io.crnk.core.engine.internal.exception.ExceptionMapperRegistry exceptionMapperRegistry -> exceptionMapperRegistry
    org.slf4j.Logger logger -> logger
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    41:51:void <init>(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.internal.exception.ExceptionMapperRegistry) -> <init>
    55:99:java.util.Optional process(io.crnk.core.engine.http.HttpRequestContextBase) -> process
    121:128:void dispatchAction(java.lang.String,java.lang.String,java.util.Map) -> dispatchAction
    83:83:void lambda$process$0(io.crnk.core.engine.internal.http.HttpRequestContextBaseAdapter,io.crnk.core.engine.http.HttpResponse) -> lambda$process$0
    36:36:io.crnk.core.module.ModuleRegistry access$000(io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl) -> access$000
io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl$ActionFilterChain -> io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl$ActionFilterChain:
    int filterIndex -> filterIndex
    io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl this$0 -> this$0
    131:133:void <init>(io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl) -> <init>
    138:144:io.crnk.core.engine.dispatcher.Response doFilter(io.crnk.core.engine.filter.DocumentFilterContext) -> doFilter
io.crnk.core.engine.internal.http.JsonApiRequestProcessor -> io.crnk.core.engine.internal.http.JsonApiRequestProcessor:
    org.slf4j.Logger LOGGER -> LOGGER
    42:43:void <init>(io.crnk.core.module.Module$ModuleContext) -> <init>
    55:73:boolean isJsonApiRequest(io.crnk.core.engine.http.HttpRequestContext,boolean) -> isJsonApiRequest
    79:79:boolean supportsAsync() -> supportsAsync
    84:89:boolean accepts(io.crnk.core.engine.http.HttpRequestContext) -> accepts
    94:124:io.crnk.core.engine.result.Result processAsync(io.crnk.core.engine.http.HttpRequestContext) -> processAsync
    128:138:io.crnk.core.engine.result.Result checkMethod(io.crnk.core.engine.http.HttpRequestContext) -> checkMethod
    145:176:io.crnk.core.engine.result.Result processAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String,java.util.Map,io.crnk.core.engine.document.Document,io.crnk.core.engine.query.QueryContext) -> processAsync
    181:193:io.crnk.core.engine.dispatcher.Response toErrorResponse(java.lang.Throwable) -> toErrorResponse
    197:199:io.crnk.core.engine.filter.DocumentFilterChain getFilterChain(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> getFilterChain
    38:38:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.http.JsonApiRequestProcessorBase -> io.crnk.core.engine.internal.http.JsonApiRequestProcessorBase:
    org.slf4j.Logger logger -> logger
    io.crnk.core.module.Module$ModuleContext moduleContext -> moduleContext
    java.lang.Boolean acceptingPlainJson -> acceptingPlainJson
    31:39:void <init>(io.crnk.core.module.Module$ModuleContext) -> <init>
    42:46:boolean isAcceptingPlainJson() -> isAcceptingPlainJson
    50:53:io.crnk.core.engine.http.HttpResponse getErrorResponse(com.fasterxml.jackson.core.JsonProcessingException) -> getErrorResponse
    57:61:io.crnk.core.engine.http.HttpResponse buildMethodNotAllowedResponse(java.lang.String) -> buildMethodNotAllowedResponse
    65:68:io.crnk.core.engine.http.HttpResponse toHttpResponse(io.crnk.core.engine.dispatcher.Response) -> toHttpResponse
    72:85:io.crnk.core.engine.document.Document getRequestDocument(io.crnk.core.engine.http.HttpRequestContext) -> getRequestDocument
    90:96:io.crnk.core.engine.dispatcher.Response buildBadRequestResponse(java.lang.String,java.lang.String) -> buildBadRequestResponse
    101:104:io.crnk.core.engine.internal.dispatcher.path.JsonPath getJsonPath(io.crnk.core.engine.http.HttpRequestContext) -> getJsonPath
    108:118:io.crnk.core.engine.information.resource.ResourceInformation getRequestedResource(io.crnk.core.engine.internal.dispatcher.path.JsonPath) -> getRequestedResource
io.crnk.core.engine.internal.information.DefaultInformationBuilder -> io.crnk.core.engine.internal.information.DefaultInformationBuilder:
    io.crnk.core.engine.parser.TypeParser typeParser -> typeParser
    41:41:io.crnk.core.engine.information.InformationBuilder$Field createResourceField() -> createResourceField
    61:61:io.crnk.core.engine.information.InformationBuilder$ResourceRepository createResourceRepository() -> createResourceRepository
    71:75:io.crnk.core.engine.information.InformationBuilder$Resource createResource(java.lang.Class,java.lang.String,java.lang.String) -> createResource
    442:444:void <init>(io.crnk.core.engine.parser.TypeParser) -> <init>
    35:35:io.crnk.core.engine.parser.TypeParser access$100(io.crnk.core.engine.internal.information.DefaultInformationBuilder) -> access$100
io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField -> io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField:
    java.lang.String jsonName -> jsonName
    java.lang.String underlyingName -> underlyingName
    java.lang.Class type -> type
    java.lang.reflect.Type genericType -> genericType
    java.lang.String oppositeResourceType -> oppositeResourceType
    io.crnk.core.resource.annotations.LookupIncludeBehavior lookupIncludeBehavior -> lookupIncludeBehavior
    io.crnk.core.engine.information.resource.ResourceFieldType fieldType -> fieldType
    io.crnk.core.resource.annotations.SerializeType serializeType -> serializeType
    java.lang.String oppositeName -> oppositeName
    io.crnk.core.engine.information.resource.ResourceFieldAccessor accessor -> accessor
    java.lang.String idName -> idName
    java.lang.Class idType -> idType
    io.crnk.core.engine.information.resource.ResourceFieldAccessor idAccessor -> idAccessor
    io.crnk.core.engine.information.resource.ResourceFieldAccess access -> access
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior relationshipRepositoryBehavior -> relationshipRepositoryBehavior
    io.crnk.core.resource.annotations.PatchStrategy patchStrategy -> patchStrategy
    io.crnk.core.engine.internal.information.DefaultInformationBuilder this$0 -> this$0
    249:281:void <init>(io.crnk.core.engine.internal.information.DefaultInformationBuilder) -> <init>
    285:305:void from(io.crnk.core.engine.information.resource.ResourceField) -> from
    310:326:io.crnk.core.engine.information.resource.ResourceField build() -> build
    339:340:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField relationshipRepositoryBehavior(io.crnk.core.resource.annotations.RelationshipRepositoryBehavior) -> relationshipRepositoryBehavior
    346:347:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField jsonName(java.lang.String) -> jsonName
    352:353:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField underlyingName(java.lang.String) -> underlyingName
    358:362:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField type(java.lang.Class) -> type
    367:371:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField genericType(java.lang.reflect.Type) -> genericType
    376:377:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField serializeType(io.crnk.core.resource.annotations.SerializeType) -> serializeType
    382:383:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField oppositeResourceType(java.lang.String) -> oppositeResourceType
    388:389:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField lookupIncludeBehavior(io.crnk.core.resource.annotations.LookupIncludeBehavior) -> lookupIncludeBehavior
    394:395:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField fieldType(io.crnk.core.engine.information.resource.ResourceFieldType) -> fieldType
    400:401:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField oppositeName(java.lang.String) -> oppositeName
    418:419:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField idName(java.lang.String) -> idName
    424:425:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField idType(java.lang.Class) -> idType
    430:431:io.crnk.core.engine.information.InformationBuilder$Field patchStrategy(io.crnk.core.resource.annotations.PatchStrategy) -> patchStrategy
    436:437:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField access(io.crnk.core.engine.information.resource.ResourceFieldAccess) -> access
    249:249:io.crnk.core.engine.information.InformationBuilder$Field idType(java.lang.Class) -> idType
    249:249:io.crnk.core.engine.information.InformationBuilder$Field idName(java.lang.String) -> idName
    249:249:io.crnk.core.engine.information.InformationBuilder$Field access(io.crnk.core.engine.information.resource.ResourceFieldAccess) -> access
    249:249:io.crnk.core.engine.information.InformationBuilder$Field oppositeName(java.lang.String) -> oppositeName
    249:249:io.crnk.core.engine.information.InformationBuilder$Field fieldType(io.crnk.core.engine.information.resource.ResourceFieldType) -> fieldType
    249:249:io.crnk.core.engine.information.InformationBuilder$Field lookupIncludeBehavior(io.crnk.core.resource.annotations.LookupIncludeBehavior) -> lookupIncludeBehavior
    249:249:io.crnk.core.engine.information.InformationBuilder$Field oppositeResourceType(java.lang.String) -> oppositeResourceType
    249:249:io.crnk.core.engine.information.InformationBuilder$Field serializeType(io.crnk.core.resource.annotations.SerializeType) -> serializeType
    249:249:io.crnk.core.engine.information.InformationBuilder$Field genericType(java.lang.reflect.Type) -> genericType
    249:249:io.crnk.core.engine.information.InformationBuilder$Field type(java.lang.Class) -> type
    249:249:io.crnk.core.engine.information.InformationBuilder$Field underlyingName(java.lang.String) -> underlyingName
    249:249:io.crnk.core.engine.information.InformationBuilder$Field jsonName(java.lang.String) -> jsonName
    249:249:io.crnk.core.engine.information.InformationBuilder$Field relationshipRepositoryBehavior(io.crnk.core.resource.annotations.RelationshipRepositoryBehavior) -> relationshipRepositoryBehavior
io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResource -> io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResource:
    java.util.List fields -> fields
    java.lang.reflect.Type implementationType -> implementationType
    java.lang.String resourceType -> resourceType
    java.lang.String resourcePath -> resourcePath
    java.lang.String superResourceType -> superResourceType
    io.crnk.core.engine.parser.StringMapper idStringMapper -> idStringMapper
    io.crnk.core.engine.information.resource.ResourceValidator validator -> validator
    java.lang.Class pagingSpecType -> pagingSpecType
    io.crnk.core.engine.internal.information.DefaultInformationBuilder this$0 -> this$0
    135:137:void <init>(io.crnk.core.engine.internal.information.DefaultInformationBuilder) -> <init>
    155:167:void from(io.crnk.core.engine.information.resource.ResourceInformation) -> from
    190:191:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResource resourceClass(java.lang.Class) -> resourceClass
    202:203:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResource resourceType(java.lang.String) -> resourceType
    208:209:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResource resourcePath(java.lang.String) -> resourcePath
    231:245:io.crnk.core.engine.information.resource.ResourceInformation build() -> build
io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResourceRepository -> io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResourceRepository:
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> resourceInformation
    java.util.Map actions -> actions
    io.crnk.core.engine.information.repository.RepositoryMethodAccess access -> access
    boolean exposed -> exposed
    io.crnk.core.engine.internal.information.DefaultInformationBuilder this$0 -> this$0
    94:102:void <init>(io.crnk.core.engine.internal.information.DefaultInformationBuilder) -> <init>
    106:112:void from(io.crnk.core.engine.information.repository.ResourceRepositoryInformation) -> from
    116:117:void setResourceInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> setResourceInformation
    130:130:io.crnk.core.engine.information.repository.ResourceRepositoryInformation build() -> build
io.crnk.core.engine.internal.information.repository.RelationshipRepositoryInformationImpl -> io.crnk.core.engine.internal.information.repository.RelationshipRepositoryInformationImpl:
    io.crnk.core.engine.information.repository.RepositoryMethodAccess access -> access
    io.crnk.core.repository.RelationshipMatcher matcher -> matcher
    15:18:void <init>(io.crnk.core.repository.RelationshipMatcher,io.crnk.core.engine.information.repository.RepositoryMethodAccess) -> <init>
    22:22:io.crnk.core.engine.information.repository.RepositoryMethodAccess getAccess() -> getAccess
    27:27:io.crnk.core.repository.RelationshipMatcher getMatcher() -> getMatcher
io.crnk.core.engine.internal.information.repository.ResourceRepositoryInformationImpl -> io.crnk.core.engine.internal.information.repository.ResourceRepositoryInformationImpl:
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> resourceInformation
    java.lang.String path -> path
    java.util.Map actions -> actions
    io.crnk.core.engine.information.repository.RepositoryMethodAccess access -> access
    boolean exposed -> exposed
    26:32:void <init>(java.lang.String,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map,io.crnk.core.engine.information.repository.RepositoryMethodAccess,boolean) -> <init>
    36:36:java.util.Optional getResourceInformation() -> getResourceInformation
    41:41:io.crnk.core.engine.information.resource.ResourceInformation getResource() -> getResource
    56:56:java.util.Map getActions() -> getActions
    61:61:boolean isExposed() -> isExposed
    66:66:io.crnk.core.engine.information.repository.RepositoryMethodAccess getAccess() -> getAccess
io.crnk.core.engine.internal.information.resource.AnnotatedClassBuilder -> io.crnk.core.engine.internal.information.resource.AnnotatedClassBuilder:
    32:44:com.fasterxml.jackson.databind.introspect.AnnotatedClass build(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> build
    50:54:com.fasterxml.jackson.databind.introspect.AnnotatedClass buildAnnotatedClass(java.lang.reflect.Method,java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> buildAnnotatedClass
    61:62:com.fasterxml.jackson.databind.introspect.AnnotatedClass buildNewAnnotatedClass(java.lang.reflect.Method,java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> buildNewAnnotatedClass
    68:70:com.fasterxml.jackson.databind.introspect.AnnotatedClass buildOldAnnotatedClass(java.lang.reflect.Method,java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> buildOldAnnotatedClass
    21:21:com.fasterxml.jackson.databind.introspect.AnnotatedClass access$000(java.lang.reflect.Method,java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> access$000
io.crnk.core.engine.internal.information.resource.AnnotatedClassBuilder$1 -> io.crnk.core.engine.internal.information.resource.AnnotatedClassBuilder$1:
    java.lang.reflect.Method val$method -> val$method
    java.lang.Class val$declaringClass -> val$declaringClass
    com.fasterxml.jackson.databind.SerializationConfig val$serializationConfig -> val$serializationConfig
    36:36:void <init>(java.lang.reflect.Method,java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> <init>
    39:39:com.fasterxml.jackson.databind.introspect.AnnotatedClass call() -> call
    36:36:java.lang.Object call() -> call
io.crnk.core.engine.internal.information.resource.AnnotatedFieldBuilder -> io.crnk.core.engine.internal.information.resource.AnnotatedFieldBuilder:
    31:32:com.fasterxml.jackson.databind.introspect.AnnotatedField build(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> build
    43:47:com.fasterxml.jackson.databind.introspect.AnnotatedField buildAnnotatedField(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.reflect.Constructor) -> buildAnnotatedField
    20:20:com.fasterxml.jackson.databind.introspect.AnnotatedField access$000(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.reflect.Constructor) -> access$000
io.crnk.core.engine.internal.information.resource.AnnotatedFieldBuilder$1 -> io.crnk.core.engine.internal.information.resource.AnnotatedFieldBuilder$1:
    com.fasterxml.jackson.databind.introspect.AnnotatedClass val$annotatedClass -> val$annotatedClass
    java.lang.reflect.Field val$field -> val$field
    com.fasterxml.jackson.databind.introspect.AnnotationMap val$annotationMap -> val$annotationMap
    java.lang.reflect.Constructor val$constructor -> val$constructor
    32:32:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.reflect.Constructor) -> <init>
    35:35:com.fasterxml.jackson.databind.introspect.AnnotatedField call() -> call
    32:32:java.lang.Object call() -> call
io.crnk.core.engine.internal.information.resource.AnnotatedMethodBuilder -> io.crnk.core.engine.internal.information.resource.AnnotatedMethodBuilder:
    33:35:com.fasterxml.jackson.databind.introspect.AnnotatedMethod build(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> build
    47:50:com.fasterxml.jackson.databind.introspect.AnnotatedMethod buildAnnotatedField(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[],java.lang.reflect.Constructor) -> buildAnnotatedField
    20:20:com.fasterxml.jackson.databind.introspect.AnnotatedMethod access$000(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[],java.lang.reflect.Constructor) -> access$000
io.crnk.core.engine.internal.information.resource.AnnotatedMethodBuilder$1 -> io.crnk.core.engine.internal.information.resource.AnnotatedMethodBuilder$1:
    com.fasterxml.jackson.databind.introspect.AnnotatedClass val$annotatedClass -> val$annotatedClass
    java.lang.reflect.Method val$method -> val$method
    com.fasterxml.jackson.databind.introspect.AnnotationMap val$annotationMap -> val$annotationMap
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] val$paramAnnotations -> val$paramAnnotations
    java.lang.reflect.Constructor val$constructor -> val$constructor
    35:35:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[],java.lang.reflect.Constructor) -> <init>
    38:38:com.fasterxml.jackson.databind.introspect.AnnotatedMethod call() -> call
    35:35:java.lang.Object call() -> call
io.crnk.core.engine.internal.information.resource.DefaultResourceFieldInformationProvider -> io.crnk.core.engine.internal.information.resource.DefaultResourceFieldInformationProvider:
    31:31:void <init>() -> <init>
    36:50:java.util.Optional useFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> useFieldType
    56:75:java.util.Optional getSerializeType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getSerializeType
    80:84:java.util.Optional getRelationshipRepositoryBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getRelationshipRepositoryBehavior
    89:93:java.util.Optional getPatchStrategy(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getPatchStrategy
    98:113:java.util.Optional getLookupIncludeBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getLookupIncludeBehavior
    118:132:java.util.Optional getOppositeName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getOppositeName
    139:139:void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> init
    143:149:java.util.Optional isIgnored(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isIgnored
    154:154:java.util.Optional getJsonName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getJsonName
    159:163:java.util.Optional isPostable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isPostable
    168:172:java.util.Optional isDeletable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isDeletable
    177:181:java.util.Optional isPatchable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isPatchable
    186:190:java.util.Optional isReadable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isReadable
    195:199:java.util.Optional isSortable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isSortable
    204:208:java.util.Optional isFilterable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isFilterable
    213:231:java.util.Optional getFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getFieldType
io.crnk.core.engine.internal.information.resource.DefaultResourceInformationProvider -> io.crnk.core.engine.internal.information.resource.DefaultResourceInformationProvider:
    java.util.List pagingBehaviors -> pagingBehaviors
    47:48:void <init>(io.crnk.core.engine.properties.PropertiesProvider,java.util.List,io.crnk.core.engine.information.resource.ResourceFieldInformationProvider[]) -> <init>
    53:56:void <init>(io.crnk.core.engine.properties.PropertiesProvider,java.util.List,java.util.List) -> <init>
    60:61:boolean accept(java.lang.Class) -> accept
    66:66:io.crnk.core.engine.information.resource.ResourceInformation build(java.lang.Class) -> build
    70:122:io.crnk.core.engine.information.resource.ResourceInformation build(java.lang.Class,boolean) -> build
    127:127:java.lang.String getResourceType(java.lang.Class) -> getResourceType
    136:142:java.lang.String getResourcePath(java.lang.Class,boolean) -> getResourcePath
    146:157:java.lang.String getResourceType(java.lang.Class,boolean) -> getResourceType
    163:163:int getPriority() -> getPriority
    102:102:boolean lambda$build$0(java.lang.Class,io.crnk.core.queryspec.pagingspec.PagingBehavior) -> lambda$build$0
io.crnk.core.engine.internal.information.resource.DefaultResourceInstanceBuilder -> io.crnk.core.engine.internal.information.resource.DefaultResourceInstanceBuilder:
    java.lang.Class resourceClass -> resourceClass
    15:17:void <init>(java.lang.Class) -> <init>
    21:21:java.lang.Object buildResource(io.crnk.core.engine.document.Resource) -> buildResource
io.crnk.core.engine.internal.information.resource.RawResourceFieldAccessor -> io.crnk.core.engine.internal.information.resource.RawResourceFieldAccessor:
    io.crnk.core.engine.information.resource.ResourceFieldType fieldType -> fieldType
    java.lang.String fieldName -> fieldName
    java.lang.Class type -> type
    com.fasterxml.jackson.databind.ObjectReader reader -> reader
    23:30:void <init>(java.lang.String,io.crnk.core.engine.information.resource.ResourceFieldType,java.lang.Class) -> <init>
    34:52:java.lang.Object getValue(java.lang.Object) -> getValue
    58:63:java.lang.Object toObject(com.fasterxml.jackson.databind.JsonNode) -> toObject
    70:70:void setValue(java.lang.Object,java.lang.Object) -> setValue
io.crnk.core.engine.internal.information.resource.RawResourceFieldAccessor$1 -> io.crnk.core.engine.internal.information.resource.RawResourceFieldAccessor$1:
    int[] $SwitchMap$io$crnk$core$engine$information$resource$ResourceFieldType -> $SwitchMap$io$crnk$core$engine$information$resource$ResourceFieldType
    35:35:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.information.resource.ReflectionFieldAccessor -> io.crnk.core.engine.internal.information.resource.ReflectionFieldAccessor:
    java.lang.reflect.Field privateField -> privateField
    java.lang.reflect.Method getter -> getter
    java.lang.reflect.Method setter -> setter
    java.lang.reflect.Field field -> field
    java.lang.Class resourceType -> resourceType
    java.lang.String fieldName -> fieldName
    java.lang.Class fieldType -> fieldType
    28:49:void <init>(java.lang.Class,java.lang.String,java.lang.Class) -> <init>
    57:72:java.lang.Object getValue(java.lang.Object) -> getValue
    77:95:void setValue(java.lang.Object,java.lang.Object) -> setValue
io.crnk.core.engine.internal.information.resource.ResourceFieldImpl -> io.crnk.core.engine.internal.information.resource.ResourceFieldImpl:
    java.lang.String jsonName -> jsonName
    java.lang.String underlyingName -> underlyingName
    java.lang.Class type -> type
    java.lang.reflect.Type genericType -> genericType
    io.crnk.core.resource.annotations.SerializeType serializeType -> serializeType
    java.lang.String oppositeResourceType -> oppositeResourceType
    io.crnk.core.resource.annotations.LookupIncludeBehavior lookupIncludeBehavior -> lookupIncludeBehavior
    io.crnk.core.engine.information.resource.ResourceFieldType resourceFieldType -> resourceFieldType
    java.lang.String oppositeName -> oppositeName
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior relationshipRepositoryBehavior -> relationshipRepositoryBehavior
    io.crnk.core.engine.information.resource.ResourceInformation parentResourceInformation -> parentResourceInformation
    io.crnk.core.engine.information.resource.ResourceFieldAccessor accessor -> accessor
    io.crnk.core.engine.information.resource.ResourceFieldAccess access -> access
    java.lang.String idName -> idName
    io.crnk.core.engine.information.resource.ResourceFieldAccessor idAccessor -> idAccessor
    java.lang.Class idType -> idType
    io.crnk.core.resource.annotations.PatchStrategy patchStrategy -> patchStrategy
    68:84:void <init>(java.lang.String,java.lang.String,io.crnk.core.engine.information.resource.ResourceFieldType,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.lang.String,io.crnk.core.resource.annotations.SerializeType,io.crnk.core.resource.annotations.LookupIncludeBehavior,io.crnk.core.engine.information.resource.ResourceFieldAccess,java.lang.String,java.lang.Class,io.crnk.core.engine.information.resource.ResourceFieldAccessor,io.crnk.core.resource.annotations.RelationshipRepositoryBehavior,io.crnk.core.resource.annotations.PatchStrategy) -> <init>
    97:97:io.crnk.core.engine.information.resource.ResourceFieldType getResourceFieldType() -> getResourceFieldType
    101:101:io.crnk.core.resource.annotations.RelationshipRepositoryBehavior getRelationshipRepositoryBehavior() -> getRelationshipRepositoryBehavior
    112:112:io.crnk.core.resource.annotations.LookupIncludeBehavior getLookupIncludeAutomatically() -> getLookupIncludeAutomatically
    119:119:java.lang.String getOppositeName() -> getOppositeName
    123:123:java.lang.String getJsonName() -> getJsonName
    127:127:java.lang.String getUnderlyingName() -> getUnderlyingName
    131:137:java.lang.String getOppositeResourceType() -> getOppositeResourceType
    141:141:java.lang.Class getType() -> getType
    145:145:java.lang.reflect.Type getGenericType() -> getGenericType
    149:149:io.crnk.core.resource.annotations.SerializeType getSerializeType() -> getSerializeType
    154:161:boolean equals(java.lang.Object) -> equals
    166:166:int hashCode() -> hashCode
    176:176:java.lang.Class getElementType() -> getElementType
    180:180:io.crnk.core.engine.information.resource.ResourceInformation getParentResourceInformation() -> getParentResourceInformation
    185:186:io.crnk.core.engine.information.resource.ResourceFieldAccessor getAccessor() -> getAccessor
    191:192:boolean hasIdField() -> hasIdField
    197:197:java.lang.String getIdName() -> getIdName
    202:203:java.lang.Class getIdType() -> getIdType
    208:209:io.crnk.core.engine.information.resource.ResourceFieldAccessor getIdAccessor() -> getIdAccessor
    213:218:void setIdField(java.lang.String,java.lang.Class,io.crnk.core.engine.information.resource.ResourceFieldAccessor) -> setIdField
    221:224:void assertRelationship() -> assertRelationship
    229:230:void setAccessor(io.crnk.core.engine.information.resource.ResourceFieldAccessor) -> setAccessor
    233:246:void setResourceInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> setResourceInformation
    288:295:java.lang.String toString() -> toString
    299:299:boolean isCollection() -> isCollection
    304:304:io.crnk.core.engine.information.resource.ResourceFieldAccess getAccess() -> getAccess
    309:309:io.crnk.core.resource.annotations.PatchStrategy getPatchStrategy() -> getPatchStrategy
    20:20:java.lang.String access$000(io.crnk.core.engine.internal.information.resource.ResourceFieldImpl) -> access$000
io.crnk.core.engine.internal.information.resource.ResourceFieldImpl$ResourceFieldAccessorWrapper -> io.crnk.core.engine.internal.information.resource.ResourceFieldImpl$ResourceFieldAccessorWrapper:
    io.crnk.core.engine.information.resource.ResourceFieldAccessor wrappedAccessor -> wrappedAccessor
    253:255:void <init>(io.crnk.core.engine.information.resource.ResourceFieldAccessor) -> <init>
    259:259:java.lang.Object getValue(java.lang.Object) -> getValue
    264:265:void setValue(java.lang.Object,java.lang.Object) -> setValue
io.crnk.core.engine.internal.information.resource.ResourceFieldImpl$ResourceIdentifierAccessorAdapter -> io.crnk.core.engine.internal.information.resource.ResourceFieldImpl$ResourceIdentifierAccessorAdapter:
    io.crnk.core.engine.internal.information.resource.ResourceFieldImpl this$0 -> this$0
    270:272:void <init>(io.crnk.core.engine.internal.information.resource.ResourceFieldImpl,io.crnk.core.engine.information.resource.ResourceFieldAccessor) -> <init>
    276:283:void setValue(java.lang.Object,java.lang.Object) -> setValue
io.crnk.core.engine.internal.information.resource.ResourceInformationProviderBase -> io.crnk.core.engine.internal.information.resource.ResourceInformationProviderBase:
    io.crnk.core.engine.information.resource.ResourceInformationProviderContext context -> context
    java.util.List resourceFieldInformationProviders -> resourceFieldInformationProviders
    io.crnk.core.resource.annotations.LookupIncludeBehavior globalLookupIncludeBehavior -> globalLookupIncludeBehavior
    boolean enforceIdName -> enforceIdName
    49:55:void <init>(io.crnk.core.engine.properties.PropertiesProvider,java.util.List) -> <init>
    59:64:void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> init
    67:83:java.util.List getResourceFields(java.lang.Class) -> getResourceFields
    87:97:void verifyRelationIdFields(java.lang.Class,java.util.Set,java.util.List) -> verifyRelationIdFields
    101:152:void buildResourceField(io.crnk.core.engine.information.bean.BeanInformation,io.crnk.core.engine.information.bean.BeanAttributeInformation,io.crnk.core.engine.information.InformationBuilder$Field) -> buildResourceField
    155:162:io.crnk.core.resource.annotations.RelationshipRepositoryBehavior getRelationshipRepositoryBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getRelationshipRepositoryBehavior
    166:166:io.crnk.core.resource.annotations.RelationshipRepositoryBehavior getDefaultRelationshipRepositoryBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getDefaultRelationshipRepositoryBehavior
    170:175:java.lang.String getResourceType(java.lang.reflect.Type,io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> getResourceType
    180:186:boolean useFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> useFieldType
    190:196:io.crnk.core.resource.annotations.SerializeType getSerializeType(io.crnk.core.engine.information.bean.BeanAttributeInformation,io.crnk.core.engine.information.resource.ResourceFieldType) -> getSerializeType
    200:222:io.crnk.core.resource.annotations.LookupIncludeBehavior getLookupIncludeBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getLookupIncludeBehavior
    226:226:io.crnk.core.resource.annotations.LookupIncludeBehavior getDefaultLookupIncludeBehavior() -> getDefaultLookupIncludeBehavior
    230:236:io.crnk.core.engine.information.resource.ResourceFieldAccess getAccess(io.crnk.core.engine.information.bean.BeanAttributeInformation,io.crnk.core.engine.information.resource.ResourceFieldType) -> getAccess
    240:246:boolean isSortable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isSortable
    250:256:boolean isFilterable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isFilterable
    260:269:boolean isPatchable(io.crnk.core.engine.information.bean.BeanAttributeInformation,io.crnk.core.engine.information.resource.ResourceFieldType) -> isPatchable
    273:282:boolean isPostable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isPostable
    286:295:boolean isDeletable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isDeletable
    300:306:boolean isReadable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isReadable
    310:312:boolean isReadOnly(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isReadOnly
    316:322:boolean isIgnored(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isIgnored
    326:338:io.crnk.core.resource.annotations.PatchStrategy getPatchStrategy(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getPatchStrategy
    342:348:io.crnk.core.engine.information.resource.ResourceFieldType getFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getFieldType
    352:362:java.lang.String getJsonName(io.crnk.core.engine.information.bean.BeanAttributeInformation,io.crnk.core.engine.information.resource.ResourceFieldType) -> getJsonName
    366:372:java.lang.String getOppositeName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getOppositeName
io.crnk.core.engine.internal.jackson.DocumentDataDeserializer -> io.crnk.core.engine.internal.jackson.DocumentDataDeserializer:
    19:27:io.crnk.core.utils.Nullable deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    33:33:io.crnk.core.utils.Nullable getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    15:15:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    15:15:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
io.crnk.core.engine.internal.jackson.ErrorDataDeserializer -> io.crnk.core.engine.internal.jackson.ErrorDataDeserializer:
    16:16:void <init>() -> <init>
    20:24:java.util.Map readMeta(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.core.JsonParser) -> readMeta
    28:32:java.lang.String readSourcePointer(com.fasterxml.jackson.databind.JsonNode) -> readSourcePointer
    36:40:java.lang.String readSourceParameter(com.fasterxml.jackson.databind.JsonNode) -> readSourceParameter
    44:48:java.lang.String readAboutLink(com.fasterxml.jackson.databind.JsonNode) -> readAboutLink
    53:63:io.crnk.core.engine.document.ErrorData deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    16:16:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
io.crnk.core.engine.internal.jackson.ErrorDataSerializer -> io.crnk.core.engine.internal.jackson.ErrorDataSerializer:
    15:15:void <init>() -> <init>
    30:33:void writeMeta(io.crnk.core.engine.document.ErrorData,com.fasterxml.jackson.core.JsonGenerator) -> writeMeta
    36:42:void writeSource(io.crnk.core.engine.document.ErrorData,com.fasterxml.jackson.core.JsonGenerator) -> writeSource
    45:52:void writeAboutLink(io.crnk.core.engine.document.ErrorData,com.fasterxml.jackson.core.JsonGenerator) -> writeAboutLink
    58:68:void serialize(io.crnk.core.engine.document.ErrorData,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    72:72:java.lang.Class handledType() -> handledType
    15:15:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
io.crnk.core.engine.internal.jackson.JacksonModule -> io.crnk.core.engine.internal.jackson.JacksonModule:
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> objectMapper
    boolean serializeLinksAsObjects -> serializeLinksAsObjects
    17:20:void <init>(com.fasterxml.jackson.databind.ObjectMapper,boolean) -> <init>
    24:24:java.lang.String getModuleName() -> getModuleName
    29:30:void setupModule(io.crnk.core.module.Module$ModuleContext) -> setupModule
    51:59:com.fasterxml.jackson.databind.module.SimpleModule createJacksonModule(boolean) -> createJacksonModule
io.crnk.core.engine.internal.jackson.JacksonResourceFieldInformationProvider -> io.crnk.core.engine.internal.jackson.JacksonResourceFieldInformationProvider:
    29:29:void <init>() -> <init>
    34:38:java.util.Optional isIgnored(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isIgnored
    43:43:java.util.Optional isPostable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isPostable
    48:48:java.util.Optional isPatchable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isPatchable
    53:53:java.util.Optional isReadable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isReadable
    57:57:java.util.Optional isReadOnly(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> isReadOnly
    61:71:java.util.Optional isAccessible(io.crnk.core.engine.information.bean.BeanAttributeInformation,com.fasterxml.jackson.annotation.JsonProperty$Access) -> isAccessible
    76:96:java.util.Optional getJsonName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> getJsonName
    100:104:com.fasterxml.jackson.databind.introspect.AnnotationMap buildAnnotationMap(java.lang.annotation.Annotation[]) -> buildAnnotationMap
    108:118:java.util.Optional getName(java.lang.reflect.Field) -> getName
    122:140:java.util.Optional getName(java.lang.reflect.Method) -> getName
io.crnk.core.engine.internal.jackson.LinksInformationSerializer -> io.crnk.core.engine.internal.jackson.LinksInformationSerializer:
    16:16:void <init>() -> <init>
    22:42:void serialize(io.crnk.core.resource.links.LinksInformation,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    46:46:java.lang.Class handledType() -> handledType
    16:16:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
io.crnk.core.engine.internal.jackson.NullableSerializer -> io.crnk.core.engine.internal.jackson.NullableSerializer:
    14:22:void serialize(io.crnk.core.utils.Nullable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    26:26:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,io.crnk.core.utils.Nullable) -> isEmpty
    10:10:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    10:10:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
io.crnk.core.engine.internal.jackson.RelationshipDataDeserializer -> io.crnk.core.engine.internal.jackson.RelationshipDataDeserializer:
    19:27:io.crnk.core.utils.Nullable deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    33:33:io.crnk.core.utils.Nullable getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    15:15:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    15:15:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder -> io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder:
    org.slf4j.Logger LOGGER -> LOGGER
    boolean WARN_MISSING_RELATIONSHIP_REPOSITORIES -> WARN_MISSING_RELATIONSHIP_REPOSITORIES
    io.crnk.core.engine.internal.information.DefaultInformationBuilder informationBuilder -> informationBuilder
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultResourceRepository resourceRepository -> resourceRepository
    java.util.Map relationshipRepositoryMap -> relationshipRepositoryMap
    io.crnk.core.engine.information.InformationBuilder$Resource resource -> resource
    63:70:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    121:133:void fromImplementation(java.lang.Object) -> fromImplementation
    137:140:io.crnk.core.engine.registry.RegistryEntryBuilder$ResourceRepository resourceRepository() -> resourceRepository
    145:148:io.crnk.core.engine.information.InformationBuilder$Resource resource() -> resource
    163:171:io.crnk.core.engine.registry.RegistryEntry build() -> build
    176:184:void checkRelationshipNaming(io.crnk.core.engine.information.resource.ResourceInformation) -> checkRelationshipNaming
    188:200:java.util.Map buildRelationshipAdapters(io.crnk.core.engine.information.resource.ResourceInformation) -> buildRelationshipAdapters
    221:239:io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship findMatchedRelationship(io.crnk.core.engine.information.resource.ResourceField) -> findMatchedRelationship
    243:267:io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship findRelationshipMatch(io.crnk.core.engine.information.resource.ResourceField) -> findRelationshipMatch
    271:273:io.crnk.core.engine.information.resource.ResourceInformation buildResource() -> buildResource
    278:304:void contributeFields(io.crnk.core.engine.information.resource.ResourceInformation) -> contributeFields
    326:380:io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship setupImplicitRelationshipRepository(io.crnk.core.engine.information.resource.ResourceField) -> setupImplicitRelationshipRepository
    386:396:java.lang.Object decorateRepository(java.lang.Object) -> decorateRepository
    466:489:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter buildResourceRepositoryAdapter(io.crnk.core.engine.information.resource.ResourceInformation) -> buildResourceRepositoryAdapter
    47:47:io.crnk.core.engine.internal.information.DefaultInformationBuilder access$000(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder) -> access$000
    47:47:io.crnk.core.module.ModuleRegistry access$500(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder) -> access$500
    49:55:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$1 -> io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$1:
    io.crnk.core.engine.information.resource.ResourceInformation val$resourceInformation -> val$resourceInformation
    io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder this$0 -> this$0
    288:288:void <init>(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder,io.crnk.core.engine.information.resource.ResourceInformation) -> <init>
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultRelationshipRepository -> io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultRelationshipRepository:
    io.crnk.core.engine.information.InformationBuilder$RelationshipRepository information -> information
    java.lang.Object instance -> instance
    94:94:io.crnk.core.engine.information.InformationBuilder$RelationshipRepository access$300(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultRelationshipRepository) -> access$300
    94:94:java.lang.Object access$400(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultRelationshipRepository) -> access$400
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultResourceRepository -> io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultResourceRepository:
    java.lang.Object instance -> instance
    io.crnk.core.engine.information.InformationBuilder$ResourceRepository information -> information
    io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder this$0 -> this$0
    79:81:void <init>(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder) -> <init>
    85:85:io.crnk.core.engine.information.InformationBuilder$ResourceRepository information() -> information
    90:91:void instance(java.lang.Object) -> instance
    73:73:java.lang.Object access$600(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultResourceRepository) -> access$600
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship -> io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship:
    io.crnk.core.engine.information.resource.ResourceField relationshipField -> relationshipField
    io.crnk.core.engine.information.repository.RelationshipRepositoryInformation relationshipRepositoryInformation -> relationshipRepositoryInformation
    java.lang.Object relRepository -> relRepository
    io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder this$0 -> this$0
    409:413:void <init>(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,java.lang.Object) -> <init>
    441:459:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter getAdapter() -> getAdapter
    400:400:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter access$100(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship) -> access$100
io.crnk.core.engine.internal.registry.RegistryEntryImpl -> io.crnk.core.engine.internal.registry.RegistryEntryImpl:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.engine.registry.RegistryEntry parentRegistryEntry -> parentRegistryEntry
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter resourceRepositoryAdapter -> resourceRepositoryAdapter
    java.util.Map relationshipRepositoryAdapter -> relationshipRepositoryAdapter
    io.crnk.core.queryspec.pagingspec.PagingBehavior pagingBehavior -> pagingBehavior
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> resourceInformation
    34:58:void <init>(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter,java.util.Map,io.crnk.core.module.ModuleRegistry) -> <init>
    63:63:java.lang.String toString() -> toString
    68:71:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter getResourceRepository() -> getResourceRepository
    88:96:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter getRelationshipRepository(io.crnk.core.engine.information.resource.ResourceField) -> getRelationshipRepository
    101:101:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> getResourceInformation
    106:106:io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> getRepositoryInformation
    111:120:io.crnk.core.engine.registry.RegistryEntry getParentRegistryEntry() -> getParentRegistryEntry
    128:129:void setParentRegistryEntry(io.crnk.core.engine.registry.RegistryEntry) -> setParentRegistryEntry
    139:146:boolean isParent(io.crnk.core.engine.registry.RegistryEntry) -> isParent
    164:169:io.crnk.core.queryspec.pagingspec.PagingBehavior getPagingBehavior() -> getPagingBehavior
    174:175:boolean hasResourceRepository() -> hasResourceRepository
    32:32:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.registry.ResourceRegistryImpl -> io.crnk.core.engine.internal.registry.ResourceRegistryImpl:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    java.util.concurrent.ConcurrentHashMap baseTypeCache -> baseTypeCache
    io.crnk.core.engine.registry.ResourceRegistryPart rootPart -> rootPart
    io.crnk.core.engine.registry.ResourceRegistryPartListener rootListener -> rootListener
    28:45:void <init>(io.crnk.core.engine.registry.ResourceRegistryPart,io.crnk.core.module.ModuleRegistry) -> <init>
    58:64:io.crnk.core.engine.registry.RegistryEntry findEntry(java.lang.Class,boolean) -> findEntry
    75:75:io.crnk.core.engine.registry.RegistryEntry findEntry(java.lang.Class) -> findEntry
    79:87:java.util.Optional getResourceClass(java.lang.Class) -> getResourceClass
    91:91:io.crnk.core.engine.url.ServiceUrlProvider getServiceUrlProvider() -> getServiceUrlProvider
    99:99:io.crnk.core.engine.registry.RegistryEntry getEntryForClass(java.lang.Class) -> getEntryForClass
    104:104:java.util.Optional getResourceClass(java.lang.Object) -> getResourceClass
    108:116:java.lang.String getResourceUrl(io.crnk.core.engine.information.resource.ResourceInformation) -> getResourceUrl
    127:130:java.lang.String getResourceUrl(io.crnk.core.engine.query.QueryContext,io.crnk.core.engine.information.resource.ResourceInformation) -> getResourceUrl
    145:151:java.lang.String getResourceUrl(io.crnk.core.engine.query.QueryContext,java.lang.Object) -> getResourceUrl
    156:172:java.lang.String getResourceUrl(io.crnk.core.engine.query.QueryContext,io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object) -> getResourceUrl
    194:210:io.crnk.core.engine.information.resource.ResourceInformation getBaseResourceInformation(java.lang.String) -> getBaseResourceInformation
    215:215:io.crnk.core.engine.registry.RegistryEntry addEntry(io.crnk.core.engine.registry.RegistryEntry) -> addEntry
    220:220:boolean hasEntry(java.lang.Class) -> hasEntry
    230:230:boolean hasEntry(java.lang.String) -> hasEntry
    235:235:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.String) -> getEntry
    240:240:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.Class) -> getEntry
    250:250:io.crnk.core.engine.registry.RegistryEntry getEntryByPath(java.lang.String) -> getEntryByPath
    255:255:java.util.Collection getResources() -> getResources
    259:266:void setRootPart(io.crnk.core.engine.registry.ResourceRegistryPart) -> setRootPart
    24:24:void access$000(io.crnk.core.engine.internal.registry.ResourceRegistryImpl) -> access$000
io.crnk.core.engine.internal.registry.ResourceRegistryImpl$1 -> io.crnk.core.engine.internal.registry.ResourceRegistryImpl$1:
    io.crnk.core.engine.internal.registry.ResourceRegistryImpl this$0 -> this$0
    32:32:void <init>(io.crnk.core.engine.internal.registry.ResourceRegistryImpl) -> <init>
    35:36:void onChanged(io.crnk.core.engine.registry.ResourceRegistryPartEvent) -> onChanged
io.crnk.core.engine.internal.repository.DefaultRepositoryAdapterFactory -> io.crnk.core.engine.internal.repository.DefaultRepositoryAdapterFactory:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    18:20:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    24:25:boolean accepts(java.lang.Object) -> accepts
    31:31:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter createResourceRepositoryAdapter(io.crnk.core.engine.information.repository.ResourceRepositoryInformation,java.lang.Object) -> createResourceRepositoryAdapter
    36:36:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter createRelationshipRepositoryAdapter(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,java.lang.Object) -> createRelationshipRepositoryAdapter
    41:41:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter) -> decorate
    46:46:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> decorate
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter -> io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter:
    io.crnk.core.engine.result.Result setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> setRelation
    io.crnk.core.engine.result.Result setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> setRelations
    io.crnk.core.engine.result.Result addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> addRelations
    io.crnk.core.engine.result.Result removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> removeRelations
    io.crnk.core.engine.result.Result findOneTarget(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findOneTarget
    io.crnk.core.engine.result.Result findManyTargets(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findManyTargets
    io.crnk.core.engine.result.Result findBulkManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findBulkManyTargets
    io.crnk.core.engine.result.Result findBulkOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findBulkOneTargets
    java.lang.Object getRelationshipRepository() -> getRelationshipRepository
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl -> io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl:
    java.lang.Object relationshipRepository -> relationshipRepository
    io.crnk.core.engine.information.resource.ResourceField field -> field
    39:42:void <init>(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.module.ModuleRegistry,java.lang.Object) -> <init>
    46:64:io.crnk.core.engine.result.Result setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> setRelation
    70:89:io.crnk.core.engine.result.Result setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> setRelations
    95:114:io.crnk.core.engine.result.Result addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> addRelations
    120:140:io.crnk.core.engine.result.Result removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> removeRelations
    145:170:io.crnk.core.engine.result.Result findOneTarget(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findOneTarget
    174:199:io.crnk.core.engine.result.Result findManyTargets(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findManyTargets
    205:233:io.crnk.core.engine.result.Result findBulkManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findBulkManyTargets
    241:271:io.crnk.core.engine.result.Result findBulkOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findBulkOneTargets
    278:291:java.util.Map toResponses(io.crnk.core.engine.internal.utils.MultivaluedMap,boolean,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod) -> toResponses
    295:295:java.lang.Object getRelationshipRepository() -> getRelationshipRepository
    31:31:java.lang.Object access$000(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> access$000
    31:31:java.util.Map access$100(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl,io.crnk.core.engine.internal.utils.MultivaluedMap,boolean,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod) -> access$100
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$1 -> io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$1:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> this$0
    46:46:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    50:59:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$2 -> io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$2:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> this$0
    70:70:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    74:84:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$3 -> io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$3:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> this$0
    95:95:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    99:109:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$4 -> io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$4:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> this$0
    120:120:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    124:135:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$5 -> io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$5:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> this$0
    145:145:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    149:165:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$6 -> io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$6:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> this$0
    174:174:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    178:194:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$7 -> io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$7:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> this$0
    206:206:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    210:220:java.util.Map invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$8 -> io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$8:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> this$0
    243:243:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    247:258:java.util.Map invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.RepositoryAdapterFactory -> io.crnk.core.engine.internal.repository.RepositoryAdapterFactory:
    boolean accepts(java.lang.Object) -> accepts
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter createResourceRepositoryAdapter(io.crnk.core.engine.information.repository.ResourceRepositoryInformation,java.lang.Object) -> createResourceRepositoryAdapter
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter createRelationshipRepositoryAdapter(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,java.lang.Object) -> createRelationshipRepositoryAdapter
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter) -> decorate
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> decorate
io.crnk.core.engine.internal.repository.RepositoryAdapterUtils -> io.crnk.core.engine.internal.repository.RepositoryAdapterUtils:
    23:28:io.crnk.core.resource.links.LinksInformation enrichLinksInformation(io.crnk.core.module.ModuleRegistry,io.crnk.core.resource.links.LinksInformation,java.lang.Object,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> enrichLinksInformation
    33:38:io.crnk.core.resource.links.LinksInformation enrichSelfLinksInformation(io.crnk.core.resource.links.LinksInformation,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> enrichSelfLinksInformation
    45:61:io.crnk.core.resource.links.LinksInformation enrichPageLinksInformation(io.crnk.core.module.ModuleRegistry,io.crnk.core.resource.links.LinksInformation,io.crnk.core.resource.list.ResourceList,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> enrichPageLinksInformation
io.crnk.core.engine.internal.repository.RepositoryRequestSpecImpl -> io.crnk.core.engine.internal.repository.RepositoryRequestSpecImpl:
    io.crnk.core.engine.information.resource.ResourceField relationshipField -> relationshipField
    io.crnk.core.engine.query.QueryAdapter queryAdapter -> queryAdapter
    java.lang.Iterable ids -> ids
    java.lang.Object entity -> entity
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    io.crnk.core.engine.http.HttpMethod method -> method
    io.crnk.core.engine.information.resource.ResourceInformation owningResourceInformation -> owningResourceInformation
    42:45:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    49:54:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forDelete(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,java.io.Serializable) -> forDelete
    60:65:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forSave(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> forSave
    70:75:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forFindIds(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,java.lang.Iterable) -> forFindIds
    80:84:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forFindAll(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter) -> forFindAll
    89:94:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forFindId(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,java.io.Serializable) -> forFindId
    100:107:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forFindTarget(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.query.QueryAdapter,java.util.List,io.crnk.core.engine.information.resource.ResourceField) -> forFindTarget
    112:120:io.crnk.core.engine.internal.repository.RepositoryRequestSpecImpl forRelation(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.http.HttpMethod,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,java.lang.Iterable,io.crnk.core.engine.information.resource.ResourceField) -> forRelation
    125:125:io.crnk.core.engine.http.HttpMethod getMethod() -> getMethod
    130:130:io.crnk.core.engine.query.QueryAdapter getQueryAdapter() -> getQueryAdapter
    135:135:io.crnk.core.engine.information.resource.ResourceField getRelationshipField() -> getRelationshipField
    140:141:io.crnk.core.queryspec.QuerySpec getResponseQuerySpec() -> getResponseQuerySpec
    146:152:io.crnk.core.engine.information.resource.ResourceInformation getResponseResourceInformation() -> getResponseResourceInformation
    162:163:io.crnk.core.queryspec.QuerySpec getQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> getQuerySpec
    168:168:io.crnk.legacy.queryParams.QueryParams getQueryParams() -> getQueryParams
    173:180:java.io.Serializable getId() -> getId
    186:190:java.lang.Iterable getIds() -> getIds
    195:195:java.lang.Object getEntity() -> getEntity
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter -> io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter:
    io.crnk.core.engine.result.Result findOne(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> findOne
    io.crnk.core.engine.result.Result findAll(io.crnk.core.engine.query.QueryAdapter) -> findAll
    io.crnk.core.engine.result.Result findAll(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> findAll
    io.crnk.core.engine.result.Result update(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> update
    io.crnk.core.engine.result.Result create(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> create
    io.crnk.core.engine.result.Result delete(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> delete
    java.lang.Object getResourceRepository() -> getResourceRepository
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> getRepositoryInformation
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl -> io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl:
    java.lang.Object resourceRepository -> resourceRepository
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation repositoryInformation -> repositoryInformation
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> resourceInformation
    boolean return404OnNull -> return404OnNull
    36:42:void <init>(io.crnk.core.engine.information.repository.ResourceRepositoryInformation,io.crnk.core.module.ModuleRegistry,java.lang.Object) -> <init>
    47:47:io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> getRepositoryInformation
    52:76:io.crnk.core.engine.result.Result findOne(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> findOne
    81:101:io.crnk.core.engine.result.Result findAll(io.crnk.core.engine.query.QueryAdapter) -> findAll
    106:127:io.crnk.core.engine.result.Result findAll(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> findAll
    132:132:io.crnk.core.engine.result.Result update(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> update
    137:137:io.crnk.core.engine.result.Result create(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> create
    141:165:io.crnk.core.engine.result.Result save(java.lang.Object,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.http.HttpMethod) -> save
    170:187:io.crnk.core.engine.result.Result delete(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> delete
    191:191:java.lang.Object getResourceRepository() -> getResourceRepository
    25:25:java.lang.Object access$000(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> access$000
    25:25:io.crnk.core.engine.information.resource.ResourceInformation access$100(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> access$100
    25:25:boolean access$200(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> access$200
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$1 -> io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$1:
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl this$0 -> this$0
    52:52:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> <init>
    57:70:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$2 -> io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$2:
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl this$0 -> this$0
    81:81:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> <init>
    86:95:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$3 -> io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$3:
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl this$0 -> this$0
    106:106:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> <init>
    111:121:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$4 -> io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$4:
    io.crnk.core.engine.http.HttpMethod val$method -> val$method
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl this$0 -> this$0
    141:141:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl,io.crnk.core.engine.http.HttpMethod) -> <init>
    146:159:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$5 -> io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$5:
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl this$0 -> this$0
    170:170:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> <init>
    175:182:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter -> io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    50:53:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    57:58:java.lang.Iterable filterResult(java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> filterResult
    62:91:io.crnk.core.repository.response.JsonApiResponse getResponse(java.lang.Object,java.lang.Object,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> getResponse
    95:96:io.crnk.core.resource.meta.MetaInformation getMetaInformation(java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> getMetaInformation
    101:111:io.crnk.core.resource.meta.MetaInformation doGetMetaInformation(java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> doGetMetaInformation
    115:116:io.crnk.core.resource.links.LinksInformation getLinksInformation(java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> getLinksInformation
    120:120:io.crnk.core.engine.filter.RepositoryFilterContext newRepositoryFilterContext(io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> newRepositoryFilterContext
    132:150:io.crnk.core.resource.links.LinksInformation doGetLinksInformation(java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> doGetLinksInformation
    45:45:io.crnk.core.resource.meta.MetaInformation access$000(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> access$000
    45:45:io.crnk.core.resource.links.LinksInformation access$100(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> access$100
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$1 -> io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$1:
    io.crnk.core.engine.dispatcher.RepositoryRequestSpec val$requestSpec -> val$requestSpec
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> this$0
    120:120:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> <init>
    124:124:io.crnk.core.engine.dispatcher.RepositoryRequestSpec getRequest() -> getRequest
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryBulkRequestFilterChainImpl -> io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryBulkRequestFilterChainImpl:
    int filterIndex -> filterIndex
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> this$0
    262:264:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter) -> <init>
    268:274:java.util.Map doFilter(io.crnk.core.engine.filter.RepositoryFilterContext) -> doFilter
    java.util.Map invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryLinksFilterChainImpl -> io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryLinksFilterChainImpl:
    int filterIndex -> filterIndex
    java.lang.Object repository -> repository
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> this$0
    178:184:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,java.lang.Object) -> <init>
    188:194:io.crnk.core.resource.links.LinksInformation doFilter(io.crnk.core.engine.filter.RepositoryFilterContext,java.lang.Iterable) -> doFilter
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryMetaFilterChainImpl -> io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryMetaFilterChainImpl:
    int filterIndex -> filterIndex
    java.lang.Object repository -> repository
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> this$0
    155:161:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,java.lang.Object) -> <init>
    165:171:io.crnk.core.resource.meta.MetaInformation doFilter(io.crnk.core.engine.filter.RepositoryFilterContext,java.lang.Iterable) -> doFilter
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryRequestFilterChainImpl -> io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryRequestFilterChainImpl:
    int filterIndex -> filterIndex
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> this$0
    222:224:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter) -> <init>
    228:237:io.crnk.core.repository.response.JsonApiResponse doFilter(io.crnk.core.engine.filter.RepositoryFilterContext) -> doFilter
    242:257:void checkResourceAccess(io.crnk.core.engine.filter.RepositoryFilterContext) -> checkResourceAccess
    io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> invoke
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryResultFilterChainImpl -> io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryResultFilterChainImpl:
    int filterIndex -> filterIndex
    java.lang.Iterable result -> result
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> this$0
    201:207:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,java.lang.Iterable) -> <init>
    211:217:java.lang.Iterable doFilter(io.crnk.core.engine.filter.RepositoryFilterContext) -> doFilter
io.crnk.core.engine.internal.utils.CastableInformation -> io.crnk.core.engine.internal.utils.CastableInformation:
    java.lang.Object as(java.lang.Class) -> as
io.crnk.core.engine.internal.utils.ClassUtils -> io.crnk.core.engine.internal.utils.ClassUtils:
    java.util.Map primitiveWrapperMap -> primitiveWrapperMap
    java.util.Map wrapperPrimitiveMap -> wrapperPrimitiveMap
    84:101:java.util.List getClassFields(java.lang.Class) -> getClassFields
    113:121:java.util.Optional getAnnotation(java.lang.Class,java.lang.Class) -> getAnnotation
    132:146:java.lang.reflect.Field findClassField(java.lang.Class,java.lang.String) -> findClassField
    150:159:java.lang.reflect.Method findGetter(java.lang.Class,java.lang.String) -> findGetter
    164:169:java.lang.String getGetterFieldName(java.lang.reflect.Method) -> getGetterFieldName
    174:176:boolean isValidBeanGetter(java.lang.reflect.Method) -> isValidBeanGetter
    180:201:int getPropertyGetterPrefixLength(java.lang.reflect.Method) -> getPropertyGetterPrefixLength
    205:205:boolean isBoolean(java.lang.Class) -> isBoolean
    210:226:java.lang.reflect.Method findSetter(java.lang.Class,java.lang.String,java.lang.Class) -> findSetter
    245:254:java.util.List getClassGetters(java.lang.Class) -> getClassGetters
    259:268:void getDeclaredClassGetters(java.lang.Class,java.util.Map,java.util.LinkedList) -> getDeclaredClassGetters
    305:313:java.lang.reflect.Method findMethodWith(java.lang.Class,java.lang.Class) -> findMethodWith
    325:327:java.lang.Object newInstance(java.lang.Class) -> newInstance
    332:332:boolean isGetter(java.lang.reflect.Method) -> isGetter
    336:342:boolean isBooleanGetter(java.lang.reflect.Method) -> isBooleanGetter
    347:357:boolean isNonBooleanGetter(java.lang.reflect.Method) -> isNonBooleanGetter
    373:378:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    389:396:java.lang.reflect.Type getElementType(java.lang.reflect.Type) -> getElementType
    28:52:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.utils.CompareUtils -> io.crnk.core.engine.internal.utils.CompareUtils:
    9:9:boolean isEquals(java.lang.Object,java.lang.Object) -> isEquals
io.crnk.core.engine.internal.utils.Decorator -> io.crnk.core.engine.internal.utils.Decorator:
    18:18:void setDecoratedObject(java.lang.Object) -> setDecoratedObject
io.crnk.core.engine.internal.utils.ExceptionUtil -> io.crnk.core.engine.internal.utils.ExceptionUtil:
    18:22:java.lang.Object wrapCatchedExceptions(java.util.concurrent.Callable) -> wrapCatchedExceptions
    34:37:java.lang.Object wrapCatchedExceptions(java.util.concurrent.Callable,java.lang.String,java.lang.Object[]) -> wrapCatchedExceptions
io.crnk.core.engine.internal.utils.FieldOrderedComparator -> io.crnk.core.engine.internal.utils.FieldOrderedComparator:
    java.util.Map fieldNames -> fieldNames
    boolean alphabetic -> alphabetic
    18:23:void <init>(java.lang.String[],boolean) -> <init>
    26:29:void init(java.lang.String[]) -> init
    33:43:int compare(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceField) -> compare
    13:13:int compare(java.lang.Object,java.lang.Object) -> compare
io.crnk.core.engine.internal.utils.JsonApiUrlBuilder -> io.crnk.core.engine.internal.utils.JsonApiUrlBuilder:
    io.crnk.core.engine.query.QueryContext queryContext -> queryContext
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    29:32:void <init>(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.query.QueryContext) -> <init>
    44:44:java.lang.String buildUrl(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,java.lang.String) -> buildUrl
    48:48:java.lang.String buildUrl(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object,io.crnk.core.queryspec.QuerySpec,java.lang.String) -> buildUrl
    61:92:java.lang.String buildUrlInternal(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object,java.lang.Object,java.lang.String,boolean) -> buildUrlInternal
io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder -> io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder:
    java.lang.StringBuilder builder -> builder
    boolean firstParam -> firstParam
    java.lang.String encoding -> encoding
    io.crnk.core.engine.internal.utils.JsonApiUrlBuilder this$0 -> this$0
    97:106:void <init>(io.crnk.core.engine.internal.utils.JsonApiUrlBuilder,java.lang.String) -> <init>
    110:110:java.lang.String toString() -> toString
    114:121:void addQueryParameters(java.util.Map) -> addQueryParameters
    124:139:void addQueryParameter(java.lang.String,java.lang.String) -> addQueryParameter
    142:149:void addQueryParameter(java.lang.String,java.lang.Object) -> addQueryParameter
    95:95:void access$000(io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder,java.util.Map) -> access$000
    95:95:java.lang.String access$100(io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder) -> access$100
    95:95:java.lang.StringBuilder access$200(io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder) -> access$200
io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder$1 -> io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder$1:
    java.lang.String val$value -> val$value
    io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder this$1 -> this$1
    132:132:void <init>(io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder,java.lang.String) -> <init>
    135:136:java.lang.Object call() -> call
io.crnk.core.engine.internal.utils.MethodCache -> io.crnk.core.engine.internal.utils.MethodCache:
    java.util.Map cache -> cache
    9:11:void <init>() -> <init>
    14:24:java.util.Optional find(java.lang.Class,java.lang.String,java.lang.Class[]) -> find
io.crnk.core.engine.internal.utils.MethodCache$MethodCacheKey -> io.crnk.core.engine.internal.utils.MethodCache$MethodCacheKey:
    java.lang.Class clazz -> clazz
    java.lang.String name -> name
    java.lang.Class[] parameters -> parameters
    36:40:void <init>(java.lang.Class,java.lang.String,java.lang.Class[]) -> <init>
    44:49:int hashCode() -> hashCode
    54:59:boolean equals(java.lang.Object) -> equals
io.crnk.core.engine.internal.utils.MultivaluedMap -> io.crnk.core.engine.internal.utils.MultivaluedMap:
    java.util.Map map -> map
    16:18:void <init>() -> <init>
    31:37:void add(java.lang.Object,java.lang.Object) -> add
    40:40:java.util.List newList() -> newList
    44:47:void addAll(java.lang.Object,java.lang.Iterable) -> addAll
    50:50:boolean isEmpty() -> isEmpty
    54:54:boolean containsKey(java.lang.Object) -> containsKey
    58:58:java.lang.Object getUnique(java.lang.Object) -> getUnique
    62:69:java.lang.Object getUnique(java.lang.Object,boolean) -> getUnique
    73:75:java.util.List getList(java.lang.Object) -> getList
    79:79:java.util.Set keySet() -> keySet
    83:84:void set(java.lang.Object,java.util.List) -> set
io.crnk.core.engine.internal.utils.PreconditionUtil -> io.crnk.core.engine.internal.utils.PreconditionUtil:
    23:24:void assertEquals(java.lang.String,java.lang.Object,java.lang.Object) -> assertEquals
    27:30:void verifyEquals(java.lang.Object,java.lang.Object,java.lang.String,java.lang.Object[]) -> verifyEquals
    33:39:java.lang.String format(java.lang.String,java.lang.Object[],java.lang.Object,java.lang.Object) -> format
    50:50:void fail(java.lang.String,java.lang.Object[]) -> fail
    62:63:void assertNotNull(java.lang.String,java.lang.Object) -> assertNotNull
    74:75:void assertTrue(java.lang.String,boolean) -> assertTrue
    129:133:void verify(boolean,java.lang.String,java.lang.Object[]) -> verify
io.crnk.core.engine.internal.utils.PropertyException -> io.crnk.core.engine.internal.utils.PropertyException:
    java.lang.Class resourceClass -> resourceClass
    java.lang.String field -> field
    14:17:void <init>(java.lang.Throwable,java.lang.Class,java.lang.String) -> <init>
    20:23:void <init>(java.lang.String,java.lang.Class,java.lang.String) -> <init>
io.crnk.core.engine.internal.utils.PropertyUtils -> io.crnk.core.engine.internal.utils.PropertyUtils:
    io.crnk.core.engine.internal.utils.PropertyUtils INSTANCE -> INSTANCE
    27:28:void <init>() -> <init>
    47:52:java.lang.Object getProperty(java.lang.Object,java.lang.String) -> getProperty
    65:65:java.lang.Class getPropertyClass(java.lang.Class,java.lang.String) -> getPropertyClass
    88:106:java.lang.Object getProperty(java.lang.Object,java.util.List) -> getProperty
    163:167:java.lang.RuntimeException handleReflectionException(java.lang.Class,java.lang.String,java.lang.ReflectiveOperationException) -> handleReflectionException
    172:178:java.lang.Object prepareValue(java.lang.Object,java.lang.Class) -> prepareValue
    182:188:void checkParameters(java.lang.Object,java.lang.String) -> checkParameters
    193:208:java.lang.Object getPropertyValue(java.lang.Object,java.lang.String) -> getPropertyValue
    213:218:void checkGetterNotNull(java.lang.reflect.Method,java.lang.Class,java.lang.String) -> checkGetterNotNull
    221:227:java.lang.Class findPropertyClass(java.lang.Class,java.lang.String) -> findPropertyClass
    243:251:java.lang.reflect.Method findGetter(java.lang.Class,java.lang.String) -> findGetter
    255:261:java.lang.reflect.Field findField(java.lang.Class,java.lang.String) -> findField
    265:270:java.lang.reflect.Method getGetter(java.lang.Class,java.lang.String) -> getGetter
    25:25:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.utils.SerializerUtil -> io.crnk.core.engine.internal.utils.SerializerUtil:
    java.lang.String HREF -> HREF
    boolean serializeLinksAsObjects -> serializeLinksAsObjects
    26:28:void <init>(boolean) -> <init>
    31:38:com.fasterxml.jackson.databind.node.ObjectNode serializeLink(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String,java.lang.String) -> serializeLink
    42:49:void serializeLink(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.String) -> serializeLink
    52:56:java.lang.String deserializeLink(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> deserializeLink
    60:64:java.lang.String readStringIfExists(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> readStringIfExists
    69:72:void writeStringIfExists(java.lang.String,java.lang.String,com.fasterxml.jackson.core.JsonGenerator) -> writeStringIfExists
    16:16:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.utils.StringUtils -> io.crnk.core.engine.internal.utils.StringUtils:
    15:33:java.lang.String join(java.lang.String,java.lang.Iterable) -> join
    51:59:boolean isBlank(java.lang.String) -> isBlank
    63:66:java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    85:90:java.lang.String decapitalize(java.lang.String) -> decapitalize
io.crnk.core.engine.internal.utils.UrlUtils -> io.crnk.core.engine.internal.utils.UrlUtils:
    9:12:java.lang.String removeTrailingSlash(java.lang.String) -> removeTrailingSlash
io.crnk.core.engine.internal.utils.WrappedList -> io.crnk.core.engine.internal.utils.WrappedList:
    java.util.List list -> list
    12:14:void <init>(java.util.List) -> <init>
    18:18:int size() -> size
    23:23:boolean isEmpty() -> isEmpty
    28:28:boolean contains(java.lang.Object) -> contains
    33:33:java.util.Iterator iterator() -> iterator
    38:38:java.lang.Object[] toArray() -> toArray
    44:44:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    49:49:boolean add(java.lang.Object) -> add
    54:54:boolean remove(java.lang.Object) -> remove
    59:59:boolean containsAll(java.util.Collection) -> containsAll
    64:64:boolean addAll(java.util.Collection) -> addAll
    69:69:boolean addAll(int,java.util.Collection) -> addAll
    74:74:boolean removeAll(java.util.Collection) -> removeAll
    79:79:boolean retainAll(java.util.Collection) -> retainAll
    84:85:void clear() -> clear
    89:89:java.lang.Object get(int) -> get
    94:94:java.lang.Object set(int,java.lang.Object) -> set
    99:100:void add(int,java.lang.Object) -> add
    104:104:java.lang.Object remove(int) -> remove
    109:109:int indexOf(java.lang.Object) -> indexOf
    114:114:int lastIndexOf(java.lang.Object) -> lastIndexOf
    119:119:java.util.ListIterator listIterator() -> listIterator
    124:124:java.util.ListIterator listIterator(int) -> listIterator
    129:129:java.util.List subList(int,int) -> subList
    134:134:java.lang.String toString() -> toString
    139:139:boolean equals(java.lang.Object) -> equals
    144:144:int hashCode() -> hashCode
io.crnk.core.engine.parser.ConstructorBasedParser -> io.crnk.core.engine.parser.ConstructorBasedParser:
    java.lang.reflect.Constructor constructor -> constructor
    12:14:void <init>(java.lang.reflect.Constructor) -> <init>
    19:19:java.lang.Object parse(java.lang.String) -> parse
    8:8:java.lang.reflect.Constructor access$000(io.crnk.core.engine.parser.ConstructorBasedParser) -> access$000
io.crnk.core.engine.parser.ConstructorBasedParser$1 -> io.crnk.core.engine.parser.ConstructorBasedParser$1:
    java.lang.String val$input -> val$input
    io.crnk.core.engine.parser.ConstructorBasedParser this$0 -> this$0
    19:19:void <init>(io.crnk.core.engine.parser.ConstructorBasedParser,java.lang.String) -> <init>
    22:22:java.lang.Object call() -> call
io.crnk.core.engine.parser.DefaultStringParsers -> io.crnk.core.engine.parser.DefaultStringParsers:
    23:106:java.util.Map get() -> get
    112:115:void addType(java.util.Map,java.util.List,io.crnk.core.engine.parser.StringMapper) -> addType
    118:118:io.crnk.core.engine.parser.ParserException newException(java.lang.Class,java.lang.String) -> newException
    17:17:io.crnk.core.engine.parser.ParserException access$000(java.lang.Class,java.lang.String) -> access$000
io.crnk.core.engine.parser.DefaultStringParsers$1 -> io.crnk.core.engine.parser.DefaultStringParsers$1:
    25:25:void <init>() -> <init>
    29:29:java.lang.Byte parse(java.lang.String) -> parse
    25:25:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.DefaultStringParsers$10 -> io.crnk.core.engine.parser.DefaultStringParsers$10:
    83:83:void <init>() -> <init>
    86:92:java.lang.Boolean parse(java.lang.String) -> parse
    83:83:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.DefaultStringParsers$11 -> io.crnk.core.engine.parser.DefaultStringParsers$11:
    95:95:void <init>() -> <init>
    99:101:java.util.UUID parse(java.lang.String) -> parse
    95:95:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.DefaultStringParsers$2 -> io.crnk.core.engine.parser.DefaultStringParsers$2:
    32:32:void <init>() -> <init>
    35:35:java.lang.Short parse(java.lang.String) -> parse
    32:32:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.DefaultStringParsers$3 -> io.crnk.core.engine.parser.DefaultStringParsers$3:
    38:38:void <init>() -> <init>
    41:41:java.lang.Integer parse(java.lang.String) -> parse
    38:38:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.DefaultStringParsers$4 -> io.crnk.core.engine.parser.DefaultStringParsers$4:
    44:44:void <init>() -> <init>
    47:47:java.lang.Long parse(java.lang.String) -> parse
    44:44:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.DefaultStringParsers$5 -> io.crnk.core.engine.parser.DefaultStringParsers$5:
    50:50:void <init>() -> <init>
    53:53:java.lang.Float parse(java.lang.String) -> parse
    50:50:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.DefaultStringParsers$6 -> io.crnk.core.engine.parser.DefaultStringParsers$6:
    56:56:void <init>() -> <init>
    59:59:java.lang.Double parse(java.lang.String) -> parse
    56:56:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.DefaultStringParsers$7 -> io.crnk.core.engine.parser.DefaultStringParsers$7:
    62:62:void <init>() -> <init>
    65:65:java.math.BigInteger parse(java.lang.String) -> parse
    62:62:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.DefaultStringParsers$8 -> io.crnk.core.engine.parser.DefaultStringParsers$8:
    68:68:void <init>() -> <init>
    71:71:java.math.BigDecimal parse(java.lang.String) -> parse
    68:68:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.DefaultStringParsers$9 -> io.crnk.core.engine.parser.DefaultStringParsers$9:
    74:74:void <init>() -> <init>
    77:80:java.lang.Character parse(java.lang.String) -> parse
    74:74:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.EnumStringMapper -> io.crnk.core.engine.parser.EnumStringMapper:
    java.lang.Class clazz -> clazz
    7:9:void <init>(java.lang.Class) -> <init>
    13:13:java.lang.Object parse(java.lang.String) -> parse
    3:3:java.lang.String toString(java.lang.Object) -> toString
io.crnk.core.engine.parser.JacksonStringMapper -> io.crnk.core.engine.parser.JacksonStringMapper:
    com.fasterxml.jackson.databind.ObjectReader reader -> reader
    com.fasterxml.jackson.databind.ObjectMapper mapper -> mapper
    18:21:void <init>(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Class) -> <init>
    25:29:java.lang.Object parse(java.lang.String) -> parse
    35:45:java.lang.String toString(java.lang.Object) -> toString
io.crnk.core.engine.parser.MethodBasedMapper -> io.crnk.core.engine.parser.MethodBasedMapper:
    java.lang.reflect.Method method -> method
    java.lang.Class clazz -> clazz
    14:17:void <init>(java.lang.reflect.Method,java.lang.Class) -> <init>
    22:22:java.lang.Object parse(java.lang.String) -> parse
    8:8:java.lang.Class access$000(io.crnk.core.engine.parser.MethodBasedMapper) -> access$000
    8:8:java.lang.reflect.Method access$100(io.crnk.core.engine.parser.MethodBasedMapper) -> access$100
io.crnk.core.engine.parser.MethodBasedMapper$1 -> io.crnk.core.engine.parser.MethodBasedMapper$1:
    java.lang.String val$input -> val$input
    io.crnk.core.engine.parser.MethodBasedMapper this$0 -> this$0
    22:22:void <init>(io.crnk.core.engine.parser.MethodBasedMapper,java.lang.String) -> <init>
    25:25:java.lang.Object call() -> call
io.crnk.core.engine.parser.ParserException -> io.crnk.core.engine.parser.ParserException:
    11:12:void <init>(java.lang.String) -> <init>
    15:16:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.crnk.core.engine.parser.StringMapper -> io.crnk.core.engine.parser.StringMapper:
    java.lang.String toString(java.lang.Object) -> toString
io.crnk.core.engine.parser.StringParser -> io.crnk.core.engine.parser.StringParser:
    java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.parser.ToStringStringMapper -> io.crnk.core.engine.parser.ToStringStringMapper:
    3:3:void <init>() -> <init>
    7:7:java.lang.String toString(java.lang.Object) -> toString
io.crnk.core.engine.parser.TypeParser -> io.crnk.core.engine.parser.TypeParser:
    org.slf4j.Logger LOGGER -> LOGGER
    java.util.Map parsers -> parsers
    java.util.Map mappers -> mappers
    io.crnk.core.engine.internal.utils.MethodCache methodCache -> methodCache
    boolean useJackson -> useJackson
    boolean enforceJackson -> enforceJackson
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> objectMapper
    48:63:void <init>() -> <init>
    82:82:boolean isEnum(java.lang.Class) -> isEnum
    128:140:java.lang.Object parse(java.lang.String,java.lang.Class) -> parse
    152:165:java.lang.String toString(java.lang.Object) -> toString
    169:179:io.crnk.core.engine.parser.StringMapper getMapper(java.lang.Class) -> getMapper
    183:193:io.crnk.core.engine.parser.StringParser getParser(java.lang.Class,java.lang.String) -> getParser
    201:213:io.crnk.core.engine.parser.StringMapper setupMapper(java.lang.Class) -> setupMapper
    222:267:io.crnk.core.engine.parser.StringParser setupParser(java.lang.Class,java.lang.String) -> setupParser
    271:278:boolean containsStringConstructor(java.lang.Class) -> containsStringConstructor
    282:283:void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper) -> setObjectMapper
    42:42:void <clinit>() -> <clinit>
io.crnk.core.engine.parser.TypeParser$1 -> io.crnk.core.engine.parser.TypeParser$1:
    io.crnk.core.engine.parser.TypeParser this$0 -> this$0
    213:213:void <init>(io.crnk.core.engine.parser.TypeParser) -> <init>
    216:216:java.lang.Object parse(java.lang.String) -> parse
io.crnk.core.engine.properties.NullPropertiesProvider -> io.crnk.core.engine.properties.NullPropertiesProvider:
    6:6:void <init>() -> <init>
    10:10:java.lang.String getProperty(java.lang.String) -> getProperty
io.crnk.core.engine.properties.PropertiesProvider -> io.crnk.core.engine.properties.PropertiesProvider:
    java.lang.String getProperty(java.lang.String) -> getProperty
io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior -> io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior:
    io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior IGNORE -> IGNORE
    io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior FAIL -> FAIL
    io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior[] $VALUES -> $VALUES
    11:11:io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior[] values() -> values
    11:11:io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    11:23:void <clinit>() -> <clinit>
io.crnk.core.engine.query.QueryAdapter -> io.crnk.core.engine.query.QueryAdapter:
    io.crnk.legacy.queryParams.params.TypedParams getIncludedRelations() -> getIncludedRelations
    io.crnk.legacy.queryParams.params.TypedParams getIncludedFields() -> getIncludedFields
    io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> getResourceInformation
    io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> getResourceRegistry
    io.crnk.core.engine.query.QueryContext getQueryContext() -> getQueryContext
    io.crnk.core.engine.query.QueryAdapter duplicate() -> duplicate
    io.crnk.legacy.queryParams.QueryParams toQueryParams() -> toQueryParams
    io.crnk.core.queryspec.QuerySpec toQuerySpec() -> toQuerySpec
    boolean getCompactMode() -> getCompactMode
    void setPagingSpec(io.crnk.core.queryspec.pagingspec.PagingSpec) -> setPagingSpec
    io.crnk.core.queryspec.pagingspec.PagingSpec getPagingSpec() -> getPagingSpec
    boolean isEmpty() -> isEmpty
io.crnk.core.engine.query.QueryAdapterBuilder -> io.crnk.core.engine.query.QueryAdapterBuilder:
    io.crnk.core.engine.query.QueryAdapter build(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map,io.crnk.core.engine.query.QueryContext) -> build
io.crnk.core.engine.query.QueryContext -> io.crnk.core.engine.query.QueryContext:
    java.lang.String baseUrl -> baseUrl
    java.util.Map attributes -> attributes
    7:11:void <init>() -> <init>
    14:14:java.lang.String getBaseUrl() -> getBaseUrl
    18:19:void setBaseUrl(java.lang.String) -> setBaseUrl
    22:22:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    26:27:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    34:35:void setAttributes(java.util.Map) -> setAttributes
io.crnk.core.engine.registry.DefaultResourceRegistryPart -> io.crnk.core.engine.registry.DefaultResourceRegistryPart:
    org.slf4j.Logger logger -> logger
    java.util.Map resourcesByType -> resourcesByType
    java.util.Map resourcesByPath -> resourcesByPath
    java.util.Map resourcesByImplementationType -> resourcesByImplementationType
    21:33:void <init>() -> <init>
    37:55:io.crnk.core.engine.registry.RegistryEntry addEntry(io.crnk.core.engine.registry.RegistryEntry) -> addEntry
    60:60:boolean hasEntry(java.lang.Class) -> hasEntry
    70:70:boolean hasEntry(java.lang.String) -> hasEntry
    75:75:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.Class) -> getEntry
    89:89:java.util.Set getResources() -> getResources
    101:101:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.String) -> getEntry
    112:112:io.crnk.core.engine.registry.RegistryEntry getEntryByPath(java.lang.String) -> getEntryByPath
    19:19:java.util.Collection getResources() -> getResources
io.crnk.core.engine.registry.HierarchicalResourceRegistryPart -> io.crnk.core.engine.registry.HierarchicalResourceRegistryPart:
    java.util.Map partMap -> partMap
    java.util.List partList -> partList
    io.crnk.core.engine.registry.ResourceRegistryPartListener childListener -> childListener
    13:21:void <init>() -> <init>
    29:35:void putPart(java.lang.String,io.crnk.core.engine.registry.ResourceRegistryPart) -> putPart
    40:45:io.crnk.core.engine.registry.RegistryEntry addEntry(io.crnk.core.engine.registry.RegistryEntry) -> addEntry
    50:55:boolean hasEntry(java.lang.Class) -> hasEntry
    70:75:boolean hasEntry(java.lang.String) -> hasEntry
    80:84:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.String) -> getEntry
    89:93:io.crnk.core.engine.registry.RegistryEntry getEntryByPath(java.lang.String) -> getEntryByPath
    97:104:io.crnk.core.engine.registry.ResourceRegistryPart getPart(java.lang.String) -> getPart
    109:113:java.util.Collection getResources() -> getResources
    118:123:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.Class) -> getEntry
io.crnk.core.engine.registry.HierarchicalResourceRegistryPart$1 -> io.crnk.core.engine.registry.HierarchicalResourceRegistryPart$1:
    io.crnk.core.engine.registry.HierarchicalResourceRegistryPart this$0 -> this$0
    21:21:void <init>(io.crnk.core.engine.registry.HierarchicalResourceRegistryPart) -> <init>
    24:25:void onChanged(io.crnk.core.engine.registry.ResourceRegistryPartEvent) -> onChanged
io.crnk.core.engine.registry.RegistryEntry -> io.crnk.core.engine.registry.RegistryEntry:
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter getResourceRepository() -> getResourceRepository
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter getRelationshipRepository(io.crnk.core.engine.information.resource.ResourceField) -> getRelationshipRepository
    io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> getResourceInformation
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> getRepositoryInformation
    io.crnk.core.engine.registry.RegistryEntry getParentRegistryEntry() -> getParentRegistryEntry
    void setParentRegistryEntry(io.crnk.core.engine.registry.RegistryEntry) -> setParentRegistryEntry
    boolean isParent(io.crnk.core.engine.registry.RegistryEntry) -> isParent
    io.crnk.core.queryspec.pagingspec.PagingBehavior getPagingBehavior() -> getPagingBehavior
    boolean hasResourceRepository() -> hasResourceRepository
io.crnk.core.engine.registry.RegistryEntryBuilder -> io.crnk.core.engine.registry.RegistryEntryBuilder:
    void fromImplementation(java.lang.Object) -> fromImplementation
    io.crnk.core.engine.information.InformationBuilder$Resource resource() -> resource
    io.crnk.core.engine.registry.RegistryEntry build() -> build
io.crnk.core.engine.registry.RegistryEntryBuilder$ResourceRepository -> io.crnk.core.engine.registry.RegistryEntryBuilder$ResourceRepository:
    io.crnk.core.engine.information.InformationBuilder$ResourceRepository information() -> information
    void instance(java.lang.Object) -> instance
io.crnk.core.engine.registry.ResourceRegistry -> io.crnk.core.engine.registry.ResourceRegistry:
    io.crnk.core.engine.registry.RegistryEntry findEntry(java.lang.Class) -> findEntry
    io.crnk.core.engine.url.ServiceUrlProvider getServiceUrlProvider() -> getServiceUrlProvider
    java.lang.String getResourceUrl(io.crnk.core.engine.information.resource.ResourceInformation) -> getResourceUrl
    java.lang.String getResourceUrl(io.crnk.core.engine.query.QueryContext,io.crnk.core.engine.information.resource.ResourceInformation) -> getResourceUrl
    java.lang.String getResourceUrl(io.crnk.core.engine.query.QueryContext,io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object) -> getResourceUrl
    java.lang.String getResourceUrl(io.crnk.core.engine.query.QueryContext,java.lang.Object) -> getResourceUrl
    io.crnk.core.engine.registry.RegistryEntry getEntryForClass(java.lang.Class) -> getEntryForClass
    io.crnk.core.engine.information.resource.ResourceInformation getBaseResourceInformation(java.lang.String) -> getBaseResourceInformation
io.crnk.core.engine.registry.ResourceRegistryAware -> io.crnk.core.engine.registry.ResourceRegistryAware:
    void setResourceRegistry(io.crnk.core.engine.registry.ResourceRegistry) -> setResourceRegistry
io.crnk.core.engine.registry.ResourceRegistryPart -> io.crnk.core.engine.registry.ResourceRegistryPart:
    io.crnk.core.engine.registry.RegistryEntry addEntry(io.crnk.core.engine.registry.RegistryEntry) -> addEntry
    boolean hasEntry(java.lang.Class) -> hasEntry
    boolean hasEntry(java.lang.String) -> hasEntry
    io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.String) -> getEntry
    java.util.Collection getResources() -> getResources
    io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.Class) -> getEntry
    io.crnk.core.engine.registry.RegistryEntry getEntryByPath(java.lang.String) -> getEntryByPath
    void addListener(io.crnk.core.engine.registry.ResourceRegistryPartListener) -> addListener
    void removeListener(io.crnk.core.engine.registry.ResourceRegistryPartListener) -> removeListener
io.crnk.core.engine.registry.ResourceRegistryPartBase -> io.crnk.core.engine.registry.ResourceRegistryPartBase:
    java.util.concurrent.CopyOnWriteArrayList listeners -> listeners
    5:8:void <init>() -> <init>
    12:13:void addListener(io.crnk.core.engine.registry.ResourceRegistryPartListener) -> addListener
    17:18:void removeListener(io.crnk.core.engine.registry.ResourceRegistryPartListener) -> removeListener
    21:25:void notifyChange() -> notifyChange
io.crnk.core.engine.registry.ResourceRegistryPartEvent -> io.crnk.core.engine.registry.ResourceRegistryPartEvent:
    io.crnk.core.engine.registry.ResourceRegistryPart part -> part
    7:8:void <init>() -> <init>
    11:13:io.crnk.core.engine.registry.ResourceRegistryPartEvent create(io.crnk.core.engine.registry.ResourceRegistryPart) -> create
io.crnk.core.engine.registry.ResourceRegistryPartListener -> io.crnk.core.engine.registry.ResourceRegistryPartListener:
    void onChanged(io.crnk.core.engine.registry.ResourceRegistryPartEvent) -> onChanged
io.crnk.core.engine.result.ImmediateResult -> io.crnk.core.engine.result.ImmediateResult:
    java.lang.Object object -> object
    12:14:void <init>(java.lang.Object) -> <init>
    18:18:java.lang.Object get() -> get
    23:23:io.crnk.core.engine.result.Result map(java.util.function.Function) -> map
    28:28:io.crnk.core.engine.result.Result onErrorResume(java.util.function.Function) -> onErrorResume
    38:39:io.crnk.core.engine.result.Result doWork(java.util.function.Consumer) -> doWork
    44:45:io.crnk.core.engine.result.Result zipWith(io.crnk.core.engine.result.Result,java.util.function.BiFunction) -> zipWith
    50:50:io.crnk.core.engine.result.Result merge(java.util.function.Function) -> merge
io.crnk.core.engine.result.ImmediateResultFactory -> io.crnk.core.engine.result.ImmediateResultFactory:
    java.lang.ThreadLocal threadLocal -> threadLocal
    9:11:void <init>() -> <init>
    15:18:io.crnk.core.engine.result.Result just(java.lang.Object) -> just
    23:27:io.crnk.core.engine.result.Result zip(java.util.List) -> zip
    32:32:boolean isAsync() -> isAsync
    36:36:java.lang.Object getThreadContext() -> getThreadContext
    41:41:io.crnk.core.engine.result.Result getContext() -> getContext
    45:46:void setThreadContext(java.lang.Object) -> setThreadContext
    49:50:void clearContext() -> clearContext
    54:54:boolean hasThreadContext() -> hasThreadContext
    59:59:io.crnk.core.engine.result.Result attachContext(io.crnk.core.engine.result.Result,java.lang.Object) -> attachContext
io.crnk.core.engine.result.Result -> io.crnk.core.engine.result.Result:
    java.lang.Object get() -> get
    io.crnk.core.engine.result.Result map(java.util.function.Function) -> map
    io.crnk.core.engine.result.Result onErrorResume(java.util.function.Function) -> onErrorResume
    io.crnk.core.engine.result.Result doWork(java.util.function.Consumer) -> doWork
    io.crnk.core.engine.result.Result zipWith(io.crnk.core.engine.result.Result,java.util.function.BiFunction) -> zipWith
    io.crnk.core.engine.result.Result merge(java.util.function.Function) -> merge
io.crnk.core.engine.result.ResultFactory -> io.crnk.core.engine.result.ResultFactory:
    io.crnk.core.engine.result.Result just(java.lang.Object) -> just
    io.crnk.core.engine.result.Result zip(java.util.List) -> zip
    boolean isAsync() -> isAsync
    java.lang.Object getThreadContext() -> getThreadContext
    io.crnk.core.engine.result.Result getContext() -> getContext
    void setThreadContext(java.lang.Object) -> setThreadContext
    void clearContext() -> clearContext
    boolean hasThreadContext() -> hasThreadContext
    io.crnk.core.engine.result.Result attachContext(io.crnk.core.engine.result.Result,java.lang.Object) -> attachContext
io.crnk.core.engine.security.SecurityProvider -> io.crnk.core.engine.security.SecurityProvider:
io.crnk.core.engine.url.ConstantServiceUrlProvider -> io.crnk.core.engine.url.ConstantServiceUrlProvider:
    java.lang.String result -> result
    6:10:void <init>(java.lang.String) -> <init>
    14:14:java.lang.String getUrl() -> getUrl
io.crnk.core.engine.url.ServiceUrlProvider -> io.crnk.core.engine.url.ServiceUrlProvider:
    java.lang.String getUrl() -> getUrl
io.crnk.core.exception.BadRequestException -> io.crnk.core.exception.BadRequestException:
    11:13:void <init>(java.lang.String) -> <init>
    21:22:void <init>(int,io.crnk.core.engine.document.ErrorData) -> <init>
    25:26:void <init>(int,io.crnk.core.engine.document.ErrorData,java.lang.Throwable) -> <init>
io.crnk.core.exception.CrnkException -> io.crnk.core.exception.CrnkException:
    9:10:void <init>(java.lang.String) -> <init>
    13:14:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.crnk.core.exception.CrnkInitializationException -> io.crnk.core.exception.CrnkInitializationException:
    9:10:void <init>(java.lang.String) -> <init>
    13:14:void <init>(java.lang.String,java.lang.Exception) -> <init>
io.crnk.core.exception.CrnkMappableException -> io.crnk.core.exception.CrnkMappableException:
    io.crnk.core.engine.document.ErrorData errorData -> errorData
    int httpStatus -> httpStatus
    14:15:void <init>(int,io.crnk.core.engine.document.ErrorData) -> <init>
    18:21:void <init>(int,io.crnk.core.engine.document.ErrorData,java.lang.Throwable) -> <init>
    24:24:io.crnk.core.engine.document.ErrorData getErrorData() -> getErrorData
    28:28:int getHttpStatus() -> getHttpStatus
io.crnk.core.exception.ForbiddenException -> io.crnk.core.exception.ForbiddenException:
    13:15:void <init>(java.lang.String) -> <init>
    18:19:void <init>(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.http.HttpMethod) -> <init>
io.crnk.core.exception.InternalServerErrorException -> io.crnk.core.exception.InternalServerErrorException:
    11:16:void <init>(java.lang.String) -> <init>
    19:20:void <init>(int,io.crnk.core.engine.document.ErrorData) -> <init>
    23:24:void <init>(int,io.crnk.core.engine.document.ErrorData,java.lang.Throwable) -> <init>
io.crnk.core.exception.InvalidResourceException -> io.crnk.core.exception.InvalidResourceException:
    6:7:void <init>(java.lang.String) -> <init>
    10:11:void <init>(java.lang.String,java.lang.Exception) -> <init>
io.crnk.core.exception.MethodNotAllowedException -> io.crnk.core.exception.MethodNotAllowedException:
    9:10:void <init>(java.lang.String) -> <init>
    13:17:io.crnk.core.engine.document.ErrorData createErrorData(java.lang.String) -> createErrorData
io.crnk.core.exception.MultipleJsonApiLinksInformationException -> io.crnk.core.exception.MultipleJsonApiLinksInformationException:
    9:10:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.MultipleJsonApiMetaInformationException -> io.crnk.core.exception.MultipleJsonApiMetaInformationException:
    9:10:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.ParametersDeserializationException -> io.crnk.core.exception.ParametersDeserializationException:
    13:14:void <init>(java.lang.String) -> <init>
    17:23:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.crnk.core.exception.RelationshipRepositoryNotFoundException -> io.crnk.core.exception.RelationshipRepositoryNotFoundException:
    10:11:void <init>(java.lang.String,java.lang.String) -> <init>
io.crnk.core.exception.RepositoryAnnotationNotFoundException -> io.crnk.core.exception.RepositoryAnnotationNotFoundException:
    6:7:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.RepositoryMethodException -> io.crnk.core.exception.RepositoryMethodException:
    10:15:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.RepositoryNotFoundException -> io.crnk.core.exception.RepositoryNotFoundException:
    9:10:void <init>(java.lang.Class) -> <init>
    13:14:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.RequestBodyException -> io.crnk.core.exception.RequestBodyException:
    12:18:void <init>(io.crnk.core.engine.http.HttpMethod,java.lang.String,java.lang.String) -> <init>
    21:26:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.crnk.core.exception.RequestBodyNotFoundException -> io.crnk.core.exception.RequestBodyNotFoundException:
    12:17:void <init>(io.crnk.core.engine.http.HttpMethod,java.lang.String) -> <init>
io.crnk.core.exception.ResourceDuplicateIdException -> io.crnk.core.exception.ResourceDuplicateIdException:
    9:10:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.ResourceException -> io.crnk.core.exception.ResourceException:
    14:19:void <init>(java.lang.String) -> <init>
    22:27:void <init>(java.lang.String,java.lang.Exception) -> <init>
io.crnk.core.exception.ResourceFieldNotFoundException -> io.crnk.core.exception.ResourceFieldNotFoundException:
    9:10:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.ResourceIdNotFoundException -> io.crnk.core.exception.ResourceIdNotFoundException:
    9:10:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.ResourceNotFoundException -> io.crnk.core.exception.ResourceNotFoundException:
    12:14:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.UnauthorizedException -> io.crnk.core.exception.UnauthorizedException:
    11:13:void <init>(java.lang.String) -> <init>
io.crnk.core.module.InitializingModule -> io.crnk.core.module.InitializingModule:
    void init() -> init
io.crnk.core.module.Module -> io.crnk.core.module.Module:
    java.lang.String getModuleName() -> getModuleName
    void setupModule(io.crnk.core.module.Module$ModuleContext) -> setupModule
io.crnk.core.module.Module$ModuleContext -> io.crnk.core.module.Module$ModuleContext:
    void setResultFactory(io.crnk.core.engine.result.ResultFactory) -> setResultFactory
    void addExtension(io.crnk.core.module.ModuleExtension) -> addExtension
    void addHttpRequestProcessor(io.crnk.core.engine.http.HttpRequestProcessor) -> addHttpRequestProcessor
    com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> getObjectMapper
    void addRegistryPart(java.lang.String,io.crnk.core.engine.registry.ResourceRegistryPart) -> addRegistryPart
    io.crnk.core.engine.properties.PropertiesProvider getPropertiesProvider() -> getPropertiesProvider
    void addResourceInformationBuilder(io.crnk.core.engine.information.resource.ResourceInformationProvider) -> addResourceInformationBuilder
    void addRepositoryInformationBuilder(io.crnk.core.engine.information.repository.RepositoryInformationProvider) -> addRepositoryInformationBuilder
    void addPagingBehavior(io.crnk.core.queryspec.pagingspec.PagingBehavior) -> addPagingBehavior
    void addResourceLookup(io.crnk.core.module.discovery.ResourceLookup) -> addResourceLookup
    void addJacksonModule(com.fasterxml.jackson.databind.Module) -> addJacksonModule
    void addRepository(java.lang.Object) -> addRepository
    void addExceptionMapperLookup(io.crnk.core.engine.internal.exception.ExceptionMapperLookup) -> addExceptionMapperLookup
    void addFilter(io.crnk.core.engine.filter.DocumentFilter) -> addFilter
    void addRepositoryFilter(io.crnk.core.engine.filter.RepositoryFilter) -> addRepositoryFilter
    void addResourceFilter(io.crnk.core.engine.filter.ResourceFilter) -> addResourceFilter
    void addResourceFieldContributor(io.crnk.core.engine.information.contributor.ResourceFieldContributor) -> addResourceFieldContributor
    void addRepositoryDecoratorFactory(io.crnk.core.repository.decorate.RepositoryDecoratorFactory) -> addRepositoryDecoratorFactory
    io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> getResourceRegistry
    void addSecurityProvider(io.crnk.core.engine.security.SecurityProvider) -> addSecurityProvider
    io.crnk.core.engine.parser.TypeParser getTypeParser() -> getTypeParser
    io.crnk.core.engine.internal.exception.ExceptionMapperRegistry getExceptionMapperRegistry() -> getExceptionMapperRegistry
    io.crnk.core.engine.dispatcher.RequestDispatcher getRequestDispatcher() -> getRequestDispatcher
    io.crnk.core.engine.registry.RegistryEntryBuilder newRegistryEntryBuilder() -> newRegistryEntryBuilder
    void addRegistryEntry(io.crnk.core.engine.registry.RegistryEntry) -> addRegistryEntry
    io.crnk.core.engine.filter.ResourceFilterDirectory getResourceFilterDirectory() -> getResourceFilterDirectory
    void addResourceModificationFilter(io.crnk.core.engine.filter.ResourceModificationFilter) -> addResourceModificationFilter
    io.crnk.core.engine.result.ResultFactory getResultFactory() -> getResultFactory
    java.util.List getDocumentFilters() -> getDocumentFilters
    void addRepositoryAdapterFactory(io.crnk.core.engine.internal.repository.RepositoryAdapterFactory) -> addRepositoryAdapterFactory
    io.crnk.core.module.ModuleRegistry getModuleRegistry() -> getModuleRegistry
io.crnk.core.module.ModuleExtension -> io.crnk.core.module.ModuleExtension:
    java.lang.Class getTargetModule() -> getTargetModule
    boolean isOptional() -> isOptional
io.crnk.core.module.ModuleExtensionAware -> io.crnk.core.module.ModuleExtensionAware:
    void setExtensions(java.util.List) -> setExtensions
io.crnk.core.module.ModuleRegistry -> io.crnk.core.module.ModuleRegistry:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.engine.result.ResultFactory resultFactory -> resultFactory
    java.util.Map serverInfo -> serverInfo
    io.crnk.core.engine.parser.TypeParser typeParser -> typeParser
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> objectMapper
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    io.crnk.core.queryspec.mapper.QuerySpecUrlMapper urlMapper -> urlMapper
    java.util.List modules -> modules
    io.crnk.core.module.SimpleModule aggregatedModule -> aggregatedModule
    io.crnk.core.module.ModuleRegistry$InitializedState initializedState -> initializedState
    io.crnk.core.engine.information.resource.ResourceInformationProvider resourceInformationProvider -> resourceInformationProvider
    io.crnk.core.module.discovery.ServiceDiscovery serviceDiscovery -> serviceDiscovery
    boolean isServer -> isServer
    io.crnk.core.engine.internal.exception.ExceptionMapperRegistry exceptionMapperRegistry -> exceptionMapperRegistry
    io.crnk.core.engine.dispatcher.RequestDispatcher requestDispatcher -> requestDispatcher
    io.crnk.core.engine.http.HttpRequestContextProvider httpRequestContextProvider -> httpRequestContextProvider
    io.crnk.core.engine.properties.PropertiesProvider propertiesProvider -> propertiesProvider
    io.crnk.core.engine.filter.ResourceFilterDirectory filterBehaviorProvider -> filterBehaviorProvider
    io.crnk.core.engine.internal.dispatcher.ControllerRegistry controllerRegistry -> controllerRegistry
    io.crnk.core.engine.query.QueryAdapterBuilder queryAdapterBuilder -> queryAdapterBuilder
    io.crnk.core.engine.internal.utils.MultivaluedMap extensionMap -> extensionMap
    124:125:void <init>() -> <init>
    89:396:void <init>(boolean) -> <init>
    133:133:io.crnk.core.engine.query.QueryAdapterBuilder getQueryAdapterBuilder() -> getQueryAdapterBuilder
    138:139:void setQueryAdapterBuilder(io.crnk.core.engine.query.QueryAdapterBuilder) -> setQueryAdapterBuilder
    143:143:io.crnk.core.engine.internal.dispatcher.ControllerRegistry getControllerRegistry() -> getControllerRegistry
    148:149:void setControllerRegistry(io.crnk.core.engine.internal.dispatcher.ControllerRegistry) -> setControllerRegistry
    152:152:io.crnk.core.engine.internal.information.DefaultInformationBuilder getInformationBuilder() -> getInformationBuilder
    156:156:java.util.List getResourceModificationFilters() -> getResourceModificationFilters
    164:164:java.util.Map getServerInfo() -> getServerInfo
    168:171:io.crnk.core.engine.result.ResultFactory getResultFactory() -> getResultFactory
    175:175:java.util.Collection getRepositories() -> getRepositories
    179:183:void setResultFactory(io.crnk.core.engine.result.ResultFactory) -> setResultFactory
    191:194:void addModule(io.crnk.core.module.Module) -> addModule
    202:203:void addPagingBehavior(io.crnk.core.queryspec.pagingspec.PagingBehavior) -> addPagingBehavior
    206:209:void addAllPagingBehaviors(java.util.List) -> addAllPagingBehaviors
    212:212:java.util.List getPagingBehaviors() -> getPagingBehaviors
    216:216:java.util.List getResourceFieldContributors() -> getResourceFieldContributors
    220:223:io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> getResourceRegistry
    227:228:void setResourceRegistry(io.crnk.core.engine.registry.ResourceRegistry) -> setResourceRegistry
    231:232:void setRequestDispatcher(io.crnk.core.engine.dispatcher.RequestDispatcher) -> setRequestDispatcher
    238:238:java.util.List getJacksonModules() -> getJacksonModules
    247:250:void checkState(io.crnk.core.module.ModuleRegistry$InitializedState,io.crnk.core.module.ModuleRegistry$InitializedState) -> checkState
    259:269:io.crnk.core.engine.information.resource.ResourceInformationProvider getResourceInformationBuilder() -> getResourceInformationBuilder
    279:279:io.crnk.core.engine.information.repository.RepositoryInformationProvider getRepositoryInformationBuilder() -> getRepositoryInformationBuilder
    289:290:io.crnk.core.module.discovery.ResourceLookup getResourceLookup() -> getResourceLookup
    294:295:java.util.List getHttpRequestProcessors() -> getHttpRequestProcessors
    311:311:java.util.List getSecurityProviders() -> getSecurityProviders
    341:342:io.crnk.core.module.discovery.ServiceDiscovery getServiceDiscovery() -> getServiceDiscovery
    346:347:void setServiceDiscovery(io.crnk.core.module.discovery.ServiceDiscovery) -> setServiceDiscovery
    355:355:io.crnk.core.engine.properties.PropertiesProvider getPropertiesProvider() -> getPropertiesProvider
    359:360:void setPropertiesProvider(io.crnk.core.engine.properties.PropertiesProvider) -> setPropertiesProvider
    370:394:void init(com.fasterxml.jackson.databind.ObjectMapper) -> init
    399:405:void initializeModules() -> initializeModules
    408:424:void setExtensions() -> setExtensions
    427:451:void initializeModule(io.crnk.core.module.Module,java.util.HashSet) -> initializeModule
    454:454:io.crnk.core.engine.http.HttpRequestContextProvider getHttpRequestContextProvider() -> getHttpRequestContextProvider
    459:463:void applyRepositoryRegistrations() -> applyRepositoryRegistrations
    466:476:java.util.Set findResourceClasses() -> findResourceClasses
    480:487:void applyResourceRegistrations() -> applyResourceRegistrations
    490:500:void findChildResources(java.util.Set,java.lang.Class) -> findChildResources
    503:541:io.crnk.core.engine.registry.RegistryEntry applyResourceRegistration(java.lang.Class,java.util.Map) -> applyResourceRegistration
    545:547:java.util.List filterDecorators(java.util.List) -> filterDecorators
    551:561:void applyRepositoryRegistration(java.lang.Object) -> applyRepositoryRegistration
    567:567:java.util.List getFilters() -> getFilters
    575:575:java.util.List getRepositoryFilters() -> getRepositoryFilters
    582:582:java.util.List getRepositoryDecoratorFactories() -> getRepositoryDecoratorFactories
    589:589:io.crnk.core.engine.internal.exception.ExceptionMapperLookup getExceptionMapperLookup() -> getExceptionMapperLookup
    593:593:java.util.List getModules() -> getModules
    597:602:java.util.Optional getModule(java.lang.Class) -> getModule
    606:606:io.crnk.core.engine.parser.TypeParser getTypeParser() -> getTypeParser
    610:610:io.crnk.core.module.Module$ModuleContext getContext() -> getContext
    614:616:io.crnk.core.engine.internal.exception.ExceptionMapperRegistry getExceptionMapperRegistry() -> getExceptionMapperRegistry
    620:620:java.util.Map getRegistryParts() -> getRegistryParts
    624:624:java.util.List getRegistryEntries() -> getRegistryEntries
    628:630:void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper) -> setObjectMapper
    633:633:java.util.List getRepositoryAdapterFactories() -> getRepositoryAdapterFactories
    1027:1027:io.crnk.core.queryspec.mapper.QuerySpecUrlMapper getUrlMapper() -> getUrlMapper
    1031:1052:void setUrlMapper(io.crnk.core.queryspec.mapper.QuerySpecUrlMapper) -> setUrlMapper
    1055:1065:io.crnk.core.queryspec.pagingspec.PagingBehavior findPagingBehavior(java.lang.Class) -> findPagingBehavior
    546:546:boolean lambda$filterDecorators$2(java.lang.Object) -> lambda$filterDecorators$2
    470:470:java.lang.Class lambda$findResourceClasses$1(io.crnk.core.engine.registry.RegistryEntry) -> lambda$findResourceClasses$1
    113:113:io.crnk.core.engine.result.ResultFactory lambda$new$0() -> lambda$new$0
    74:74:org.slf4j.Logger access$000() -> access$000
    74:74:io.crnk.core.module.SimpleModule access$100(io.crnk.core.module.ModuleRegistry) -> access$100
    74:74:io.crnk.core.engine.registry.ResourceRegistry access$200(io.crnk.core.module.ModuleRegistry) -> access$200
    74:74:io.crnk.core.engine.internal.utils.MultivaluedMap access$300(io.crnk.core.module.ModuleRegistry) -> access$300
    74:74:com.fasterxml.jackson.databind.ObjectMapper access$400(io.crnk.core.module.ModuleRegistry) -> access$400
    74:74:io.crnk.core.engine.parser.TypeParser access$600(io.crnk.core.module.ModuleRegistry) -> access$600
    74:74:io.crnk.core.engine.dispatcher.RequestDispatcher access$700(io.crnk.core.module.ModuleRegistry) -> access$700
    74:74:io.crnk.core.engine.filter.ResourceFilterDirectory access$800(io.crnk.core.module.ModuleRegistry) -> access$800
    74:74:io.crnk.core.engine.result.ResultFactory access$900(io.crnk.core.module.ModuleRegistry) -> access$900
    74:74:io.crnk.core.engine.properties.PropertiesProvider access$1000(io.crnk.core.module.ModuleRegistry) -> access$1000
    76:76:void <clinit>() -> <clinit>
io.crnk.core.module.ModuleRegistry$1 -> io.crnk.core.module.ModuleRegistry$1:
    io.crnk.core.module.ModuleRegistry this$0 -> this$0
    1034:1034:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    1038:1038:io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> getResourceRegistry
    1043:1043:io.crnk.core.engine.parser.TypeParser getTypeParser() -> getTypeParser
    1048:1048:com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> getObjectMapper
io.crnk.core.module.ModuleRegistry$CombinedExceptionMapperLookup -> io.crnk.core.module.ModuleRegistry$CombinedExceptionMapperLookup:
    java.util.Collection lookups -> lookups
    760:762:void <init>(java.util.List) -> <init>
    767:771:java.util.Set getExceptionMappers() -> getExceptionMappers
io.crnk.core.module.ModuleRegistry$CombinedRepositoryInformationProvider -> io.crnk.core.module.ModuleRegistry$CombinedRepositoryInformationProvider:
    java.util.Collection builders -> builders
    705:707:void <init>(java.util.List) -> <init>
    711:716:boolean accept(java.lang.Object) -> accept
    721:727:io.crnk.core.engine.information.repository.RepositoryInformation build(java.lang.Object,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> build
io.crnk.core.module.ModuleRegistry$CombinedResourceInformationProvider -> io.crnk.core.module.ModuleRegistry$CombinedResourceInformationProvider:
    java.util.Collection builders -> builders
    644:646:void <init>(java.util.List) -> <init>
    650:655:boolean accept(java.lang.Class) -> accept
    660:666:io.crnk.core.engine.information.resource.ResourceInformation build(java.lang.Class) -> build
    671:676:java.lang.String getResourceType(java.lang.Class) -> getResourceType
    691:694:void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> init
io.crnk.core.module.ModuleRegistry$InitializedState -> io.crnk.core.module.ModuleRegistry$InitializedState:
    io.crnk.core.module.ModuleRegistry$InitializedState NOT_INITIALIZED -> NOT_INITIALIZED
    io.crnk.core.module.ModuleRegistry$InitializedState INITIALIZING -> INITIALIZING
    io.crnk.core.module.ModuleRegistry$InitializedState INITIALIZED -> INITIALIZED
    io.crnk.core.module.ModuleRegistry$InitializedState[] $VALUES -> $VALUES
    83:83:io.crnk.core.module.ModuleRegistry$InitializedState[] values() -> values
    83:83:io.crnk.core.module.ModuleRegistry$InitializedState valueOf(java.lang.String) -> valueOf
    83:83:void <init>(java.lang.String,int) -> <init>
    83:86:void <clinit>() -> <clinit>
io.crnk.core.module.ModuleRegistry$ModuleContextImpl -> io.crnk.core.module.ModuleRegistry$ModuleContextImpl:
    io.crnk.core.module.Module module -> module
    io.crnk.core.module.ModuleRegistry this$0 -> this$0
    779:781:void <init>(io.crnk.core.module.ModuleRegistry,io.crnk.core.module.Module) -> <init>
    785:788:void addPagingBehavior(io.crnk.core.queryspec.pagingspec.PagingBehavior) -> addPagingBehavior
    792:795:void addResourceInformationBuilder(io.crnk.core.engine.information.resource.ResourceInformationProvider) -> addResourceInformationBuilder
    799:802:void addRepositoryInformationBuilder(io.crnk.core.engine.information.repository.RepositoryInformationProvider) -> addRepositoryInformationBuilder
    806:809:void addResourceLookup(io.crnk.core.module.discovery.ResourceLookup) -> addResourceLookup
    813:816:void addJacksonModule(com.fasterxml.jackson.databind.Module) -> addJacksonModule
    820:824:io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> getResourceRegistry
    829:832:void addFilter(io.crnk.core.engine.filter.DocumentFilter) -> addFilter
    836:838:void addExceptionMapperLookup(io.crnk.core.engine.internal.exception.ExceptionMapperLookup) -> addExceptionMapperLookup
    862:865:void addSecurityProvider(io.crnk.core.engine.security.SecurityProvider) -> addSecurityProvider
    875:876:void setResultFactory(io.crnk.core.engine.result.ResultFactory) -> setResultFactory
    880:884:void addExtension(io.crnk.core.module.ModuleExtension) -> addExtension
    888:891:void addHttpRequestProcessor(io.crnk.core.engine.http.HttpRequestProcessor) -> addHttpRequestProcessor
    895:896:com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> getObjectMapper
    901:904:void addRegistryPart(java.lang.String,io.crnk.core.engine.registry.ResourceRegistryPart) -> addRegistryPart
    913:916:void addRepositoryFilter(io.crnk.core.engine.filter.RepositoryFilter) -> addRepositoryFilter
    920:923:void addResourceFilter(io.crnk.core.engine.filter.ResourceFilter) -> addResourceFilter
    927:930:void addResourceFieldContributor(io.crnk.core.engine.information.contributor.ResourceFieldContributor) -> addResourceFieldContributor
    934:937:void addRepositoryDecoratorFactory(io.crnk.core.repository.decorate.RepositoryDecoratorFactory) -> addRepositoryDecoratorFactory
    941:944:void addRepository(java.lang.Object) -> addRepository
    953:953:io.crnk.core.engine.parser.TypeParser getTypeParser() -> getTypeParser
    964:965:io.crnk.core.engine.internal.exception.ExceptionMapperRegistry getExceptionMapperRegistry() -> getExceptionMapperRegistry
    970:971:io.crnk.core.engine.dispatcher.RequestDispatcher getRequestDispatcher() -> getRequestDispatcher
    976:976:io.crnk.core.engine.registry.RegistryEntryBuilder newRegistryEntryBuilder() -> newRegistryEntryBuilder
    981:984:void addRegistryEntry(io.crnk.core.engine.registry.RegistryEntry) -> addRegistryEntry
    988:989:io.crnk.core.engine.filter.ResourceFilterDirectory getResourceFilterDirectory() -> getResourceFilterDirectory
    994:996:void addResourceModificationFilter(io.crnk.core.engine.filter.ResourceModificationFilter) -> addResourceModificationFilter
    1000:1000:io.crnk.core.engine.result.ResultFactory getResultFactory() -> getResultFactory
    1005:1005:java.util.List getDocumentFilters() -> getDocumentFilters
    1010:1012:void addRepositoryAdapterFactory(io.crnk.core.engine.internal.repository.RepositoryAdapterFactory) -> addRepositoryAdapterFactory
    1016:1016:io.crnk.core.module.ModuleRegistry getModuleRegistry() -> getModuleRegistry
    1021:1021:io.crnk.core.engine.properties.PropertiesProvider getPropertiesProvider() -> getPropertiesProvider
io.crnk.core.module.SimpleModule -> io.crnk.core.module.SimpleModule:
    java.util.List resourceInformationProviders -> resourceInformationProviders
    java.util.List httpRequestProcessors -> httpRequestProcessors
    java.util.List repositoryInformationProviders -> repositoryInformationProviders
    java.util.List documentFilters -> documentFilters
    java.util.List repositoryFilters -> repositoryFilters
    java.util.List resourceFilters -> resourceFilters
    java.util.List resourceModificationFilters -> resourceModificationFilters
    java.util.List resourceFieldContributors -> resourceFieldContributors
    java.util.List repositoryDecoratorFactories -> repositoryDecoratorFactories
    java.util.List securityProviders -> securityProviders
    java.util.List resourceLookups -> resourceLookups
    java.util.List pagingBehaviors -> pagingBehaviors
    java.util.List jacksonModules -> jacksonModules
    java.util.List repositories -> repositories
    java.util.List exceptionMapperLookups -> exceptionMapperLookups
    java.util.List registryEntries -> registryEntries
    java.util.List extensions -> extensions
    java.util.List repositoryAdapterFactories -> repositoryAdapterFactories
    java.lang.String moduleName -> moduleName
    io.crnk.core.module.Module$ModuleContext context -> context
    java.util.Map registryParts -> registryParts
    35:79:void <init>(java.lang.String) -> <init>
    83:83:java.lang.String getModuleName() -> getModuleName
    88:140:void setupModule(io.crnk.core.module.Module$ModuleContext) -> setupModule
    143:146:void checkInitialized() -> checkInitialized
    154:156:void addResourceInformationProvider(io.crnk.core.engine.information.resource.ResourceInformationProvider) -> addResourceInformationProvider
    164:166:void addRepositoryInformationBuilder(io.crnk.core.engine.information.repository.RepositoryInformationProvider) -> addRepositoryInformationBuilder
    169:171:void addExceptionMapperLookup(io.crnk.core.engine.internal.exception.ExceptionMapperLookup) -> addExceptionMapperLookup
    174:177:void addExceptionMapper(io.crnk.core.engine.error.ExceptionMapper) -> addExceptionMapper
    180:181:java.util.List getResourceInformationProviders() -> getResourceInformationProviders
    185:186:java.util.List getRepositoryInformationProviders() -> getRepositoryInformationProviders
    190:190:java.util.Map getRegistryParts() -> getRegistryParts
    194:196:void addExtension(io.crnk.core.module.ModuleExtension) -> addExtension
    199:201:void addFilter(io.crnk.core.engine.filter.DocumentFilter) -> addFilter
    204:206:void addRepositoryFilter(io.crnk.core.engine.filter.RepositoryFilter) -> addRepositoryFilter
    209:211:void addResourceFilter(io.crnk.core.engine.filter.ResourceFilter) -> addResourceFilter
    214:216:void addResourceFieldContributor(io.crnk.core.engine.information.contributor.ResourceFieldContributor) -> addResourceFieldContributor
    219:220:java.util.List getResourceFieldContributors() -> getResourceFieldContributors
    224:226:void addResourceModificationFilter(io.crnk.core.engine.filter.ResourceModificationFilter) -> addResourceModificationFilter
    229:231:void addRepositoryDecoratorFactory(io.crnk.core.repository.decorate.RepositoryDecoratorFactory) -> addRepositoryDecoratorFactory
    234:235:java.util.List getFilters() -> getFilters
    239:240:java.util.List getRepositoryFilters() -> getRepositoryFilters
    244:245:java.util.List getResourceFilters() -> getResourceFilters
    249:250:java.util.List getResourceModificationFilters() -> getResourceModificationFilters
    254:255:java.util.List getExtensions() -> getExtensions
    259:260:java.util.List getRepositoryDecoratorFactories() -> getRepositoryDecoratorFactories
    264:266:void addSecurityProvider(io.crnk.core.engine.security.SecurityProvider) -> addSecurityProvider
    269:271:void addJacksonModule(com.fasterxml.jackson.databind.Module) -> addJacksonModule
    274:275:java.util.List getJacksonModules() -> getJacksonModules
    284:299:void addPagingBehavior(io.crnk.core.queryspec.pagingspec.PagingBehavior) -> addPagingBehavior
    302:303:java.util.List getPagingBehaviors() -> getPagingBehaviors
    312:314:void addResourceLookup(io.crnk.core.module.discovery.ResourceLookup) -> addResourceLookup
    317:318:java.util.List getResourceLookups() -> getResourceLookups
    322:324:void addRepository(java.lang.Object) -> addRepository
    345:345:java.util.List getRepositories() -> getRepositories
    349:349:java.util.List getExceptionMapperLookups() -> getExceptionMapperLookups
    353:353:java.util.List getSecurityProviders() -> getSecurityProviders
    357:358:void addHttpRequestProcessor(io.crnk.core.engine.http.HttpRequestProcessor) -> addHttpRequestProcessor
    361:361:java.util.List getHttpRequestProcessors() -> getHttpRequestProcessors
    365:366:void addRepositoryAdapterFactory(io.crnk.core.engine.internal.repository.RepositoryAdapterFactory) -> addRepositoryAdapterFactory
    369:369:java.util.List getRepositoryAdapterFactories() -> getRepositoryAdapterFactories
    373:377:void addRegistryPart(java.lang.String,io.crnk.core.engine.registry.ResourceRegistryPart) -> addRegistryPart
    380:380:java.util.List getRegistryEntries() -> getRegistryEntries
    384:385:void addRegistryEntry(io.crnk.core.engine.registry.RegistryEntry) -> addRegistryEntry
    289:289:boolean lambda$addPagingBehavior$0(io.crnk.core.queryspec.pagingspec.PagingBehavior,io.crnk.core.queryspec.pagingspec.PagingBehavior) -> lambda$addPagingBehavior$0
io.crnk.core.module.SimpleModule$CollectionExceptionMapperLookup -> io.crnk.core.module.SimpleModule$CollectionExceptionMapperLookup:
    java.util.Set set -> set
    392:394:void <init>(java.util.Set) -> <init>
    397:398:void <init>(io.crnk.core.engine.error.ExceptionMapper) -> <init>
    402:402:java.util.Set getExceptionMappers() -> getExceptionMappers
io.crnk.core.module.discovery.DefaultServiceDiscoveryFactory -> io.crnk.core.module.discovery.DefaultServiceDiscoveryFactory:
    12:12:void <init>() -> <init>
    16:23:io.crnk.core.module.discovery.ServiceDiscovery getInstance() -> getInstance
io.crnk.core.module.discovery.EmptyServiceDiscovery -> io.crnk.core.module.discovery.EmptyServiceDiscovery:
    7:7:void <init>() -> <init>
    12:12:java.util.List getInstancesByType(java.lang.Class) -> getInstancesByType
io.crnk.core.module.discovery.FallbackServiceDiscoveryFactory -> io.crnk.core.module.discovery.FallbackServiceDiscoveryFactory:
    io.crnk.core.module.discovery.ServiceDiscoveryFactory factory -> factory
    io.crnk.legacy.locator.JsonServiceLocator serviceLocator -> serviceLocator
    io.crnk.core.engine.properties.PropertiesProvider propertiesProvider -> propertiesProvider
    16:20:void <init>(io.crnk.core.module.discovery.ServiceDiscoveryFactory,io.crnk.legacy.locator.JsonServiceLocator,io.crnk.core.engine.properties.PropertiesProvider) -> <init>
    24:32:io.crnk.core.module.discovery.ServiceDiscovery getInstance() -> getInstance
io.crnk.core.module.discovery.MultiResourceLookup -> io.crnk.core.module.discovery.MultiResourceLookup:
    java.util.Collection lookups -> lookups
    18:20:void <init>(java.util.List) -> <init>
    24:28:java.util.Set getResourceClasses() -> getResourceClasses
io.crnk.core.module.discovery.ReflectionsServiceDiscovery -> io.crnk.core.module.discovery.ReflectionsServiceDiscovery:
    org.reflections.Reflections reflections -> reflections
    io.crnk.legacy.locator.JsonServiceLocator locator -> locator
    38:60:void <init>(java.lang.String,io.crnk.legacy.locator.JsonServiceLocator) -> <init>
    67:68:boolean isValid(java.lang.Class) -> isValid
    72:77:boolean hasDefaultConstructor(java.lang.Class) -> hasDefaultConstructor
    82:83:java.util.List getInstancesByType(java.lang.Class) -> getInstancesByType
    93:103:java.util.List getInstances(java.util.Set) -> getInstances
io.crnk.core.module.discovery.ResourceLookup -> io.crnk.core.module.discovery.ResourceLookup:
    java.util.Set getResourceClasses() -> getResourceClasses
io.crnk.core.module.discovery.ServiceDiscovery -> io.crnk.core.module.discovery.ServiceDiscovery:
    java.util.List getInstancesByType(java.lang.Class) -> getInstancesByType
io.crnk.core.module.discovery.ServiceDiscoveryFactory -> io.crnk.core.module.discovery.ServiceDiscoveryFactory:
    io.crnk.core.module.discovery.ServiceDiscovery getInstance() -> getInstance
io.crnk.core.module.internal.DefaultRepositoryInformationProviderContext -> io.crnk.core.module.internal.DefaultRepositoryInformationProviderContext:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    13:15:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    19:19:io.crnk.core.engine.information.resource.ResourceInformationProvider getResourceInformationBuilder() -> getResourceInformationBuilder
io.crnk.core.module.internal.ResourceFilterDirectoryImpl -> io.crnk.core.module.internal.ResourceFilterDirectoryImpl:
    org.slf4j.Logger LOGGER -> LOGGER
    java.util.List filters -> filters
    io.crnk.core.engine.http.HttpRequestContextProvider requestContextProvider -> requestContextProvider
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    38:42:void <init>(java.util.List,io.crnk.core.engine.http.HttpRequestContextProvider,io.crnk.core.engine.registry.ResourceRegistry) -> <init>
    46:64:io.crnk.core.engine.filter.FilterBehavior get(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext) -> get
    69:104:io.crnk.core.engine.filter.FilterBehavior get(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext) -> get
    109:118:java.util.Map getCache(io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext) -> getCache
    128:140:boolean canAccess(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext,boolean) -> canAccess
    28:28:void <clinit>() -> <clinit>
io.crnk.core.queryspec.AbstractPathSpec -> io.crnk.core.queryspec.AbstractPathSpec:
    io.crnk.core.queryspec.PathSpec path -> path
    11:13:void <init>() -> <init>
    19:21:void <init>(io.crnk.core.queryspec.PathSpec) -> <init>
    24:24:io.crnk.core.queryspec.PathSpec getPath() -> getPath
    28:29:void setPath(io.crnk.core.queryspec.PathSpec) -> setPath
    33:33:java.util.List getAttributePath() -> getAttributePath
    38:41:int hashCode() -> hashCode
    46:58:boolean equals(java.lang.Object) -> equals
io.crnk.core.queryspec.DefaultQuerySpecDeserializer -> io.crnk.core.queryspec.DefaultQuerySpecDeserializer:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.queryspec.FilterOperator defaultOperator -> defaultOperator
    java.util.Set supportedOperators -> supportedOperators
    boolean allowUnknownAttributes -> allowUnknownAttributes
    boolean enforceDotPathSeparator -> enforceDotPathSeparator
    boolean ignoreParseExceptions -> ignoreParseExceptions
    boolean allowUnknownParameters -> allowUnknownParameters
    io.crnk.core.queryspec.QuerySpecDeserializerContext context -> context
    38:63:void <init>() -> <init>
    83:84:void setAllowUnknownAttributes(boolean) -> setAllowUnknownAttributes
    104:105:void init(io.crnk.core.queryspec.QuerySpecDeserializerContext) -> init
    108:108:io.crnk.core.queryspec.QuerySpec createQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> createQuerySpec
    113:156:io.crnk.core.queryspec.QuerySpec deserialize(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> deserialize
    160:166:void deserializeIncludes(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> deserializeIncludes
    169:169:java.lang.String[] splitValues(java.lang.String) -> splitValues
    173:179:void deserializeFields(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> deserializeFields
    182:201:void deserializeFilter(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> deserializeFilter
    205:218:java.lang.Class getAttributeType(io.crnk.core.queryspec.QuerySpec,java.util.List) -> getAttributeType
    224:233:java.lang.Class getAttributeType(java.lang.Class,java.lang.String) -> getAttributeType
    237:248:void deserializeSort(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> deserializeSort
    251:254:void deserializeUnknown(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> deserializeUnknown
    257:262:java.util.List parseParameters(java.util.Map,io.crnk.core.engine.information.resource.ResourceInformation) -> parseParameters
    266:302:io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter parseParameter(java.lang.String,java.util.Set,io.crnk.core.engine.information.resource.ResourceInformation) -> parseParameter
    306:315:java.util.List parseParameterNameArguments(java.lang.String,int) -> parseParameterNameArguments
    320:339:void parseFilterParameterName(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.util.List,io.crnk.core.engine.information.resource.ResourceInformation) -> parseFilterParameterName
    346:356:void legacyParseFilterParameterName(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.util.List,io.crnk.core.engine.information.resource.ResourceInformation) -> legacyParseFilterParameterName
    359:366:void parseFilterOperator(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.util.List) -> parseFilterOperator
    369:370:boolean isResourceType(java.lang.String) -> isResourceType
    374:379:io.crnk.core.queryspec.FilterOperator findOperator(java.lang.String) -> findOperator
    383:389:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation(java.lang.String,java.lang.String) -> getResourceInformation
    393:393:java.util.List splitAttributePath(java.lang.String,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> splitAttributePath
    411:412:void setAllowUnknownParameters(boolean) -> setAllowUnknownParameters
    36:36:void <clinit>() -> <clinit>
io.crnk.core.queryspec.DefaultQuerySpecDeserializer$1 -> io.crnk.core.queryspec.DefaultQuerySpecDeserializer$1:
    int[] $SwitchMap$io$crnk$core$resource$RestrictedQueryParamsMembers -> $SwitchMap$io$crnk$core$resource$RestrictedQueryParamsMembers
    125:125:void <clinit>() -> <clinit>
io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter -> io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter:
    java.lang.String pageParameter -> pageParameter
    java.lang.String name -> name
    io.crnk.core.resource.RestrictedQueryParamsMembers paramType -> paramType
    java.lang.String strParamType -> strParamType
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> resourceInformation
    io.crnk.core.queryspec.FilterOperator operator -> operator
    java.util.List attributePath -> attributePath
    java.util.Set values -> values
    io.crnk.core.queryspec.DefaultQuerySpecDeserializer this$0 -> this$0
    418:418:void <init>(io.crnk.core.queryspec.DefaultQuerySpecDeserializer) -> <init>
    449:449:java.lang.String toString() -> toString
    481:481:java.util.Set getValues() -> getValues
    418:418:io.crnk.core.engine.information.resource.ResourceInformation access$000(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> access$000
    418:418:io.crnk.core.resource.RestrictedQueryParamsMembers access$100(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> access$100
    418:418:java.lang.String access$200(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> access$200
    418:418:java.util.Set access$300(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> access$300
    418:418:java.util.List access$400(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> access$400
    418:418:io.crnk.core.queryspec.FilterOperator access$500(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> access$500
    418:418:java.lang.String access$600(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> access$600
    418:418:java.lang.String access$602(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.lang.String) -> access$602
    418:418:io.crnk.core.resource.RestrictedQueryParamsMembers access$102(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,io.crnk.core.resource.RestrictedQueryParamsMembers) -> access$102
    418:418:java.lang.String access$702(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.lang.String) -> access$702
    418:418:java.util.Set access$302(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.util.Set) -> access$302
    418:418:io.crnk.core.engine.information.resource.ResourceInformation access$002(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,io.crnk.core.engine.information.resource.ResourceInformation) -> access$002
    418:418:java.lang.String access$202(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.lang.String) -> access$202
    418:418:io.crnk.core.queryspec.FilterOperator access$502(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,io.crnk.core.queryspec.FilterOperator) -> access$502
    418:418:java.util.List access$402(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.util.List) -> access$402
io.crnk.core.queryspec.DefaultQuerySpecSerializer -> io.crnk.core.queryspec.DefaultQuerySpecSerializer:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    26:31:void <init>(io.crnk.core.engine.registry.ResourceRegistry) -> <init>
    34:35:void put(java.util.Map,java.lang.String,java.lang.String) -> put
    38:38:java.lang.String toKey(java.util.List) -> toKey
    42:42:java.lang.String addResourceType(io.crnk.core.resource.RestrictedQueryParamsMembers,java.lang.String,java.lang.String) -> addResourceType
    46:46:java.lang.String serializeValue(java.lang.Object) -> serializeValue
    51:53:java.util.Map serialize(io.crnk.core.queryspec.QuerySpec) -> serialize
    57:78:void serialize(io.crnk.core.queryspec.QuerySpec,java.util.Map,io.crnk.core.queryspec.QuerySpec) -> serialize
    81:100:void serializeFilters(io.crnk.core.queryspec.QuerySpec,java.lang.String,java.util.Map) -> serializeFilters
    103:118:void serializeSorting(io.crnk.core.queryspec.QuerySpec,java.lang.String,java.util.Map) -> serializeSorting
    121:133:void serializeIncludedFields(io.crnk.core.queryspec.QuerySpec,java.lang.String,java.util.Map) -> serializeIncludedFields
    136:148:void serializeIncludedRelations(io.crnk.core.queryspec.QuerySpec,java.lang.String,java.util.Map) -> serializeIncludedRelations
io.crnk.core.queryspec.Direction -> io.crnk.core.queryspec.Direction:
    io.crnk.core.queryspec.Direction ASC -> ASC
    io.crnk.core.queryspec.Direction DESC -> DESC
    io.crnk.core.queryspec.Direction[] $VALUES -> $VALUES
    3:3:io.crnk.core.queryspec.Direction[] values() -> values
    3:3:io.crnk.core.queryspec.Direction valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:4:void <clinit>() -> <clinit>
io.crnk.core.queryspec.FilterOperator -> io.crnk.core.queryspec.FilterOperator:
    io.crnk.core.queryspec.FilterOperator AND -> AND
    io.crnk.core.queryspec.FilterOperator SELECT -> SELECT
    io.crnk.core.queryspec.FilterOperator LIKE -> LIKE
    io.crnk.core.queryspec.FilterOperator OR -> OR
    io.crnk.core.queryspec.FilterOperator NOT -> NOT
    io.crnk.core.queryspec.FilterOperator EQ -> EQ
    io.crnk.core.queryspec.FilterOperator LT -> LT
    io.crnk.core.queryspec.FilterOperator LE -> LE
    io.crnk.core.queryspec.FilterOperator GT -> GT
    io.crnk.core.queryspec.FilterOperator GE -> GE
    io.crnk.core.queryspec.FilterOperator NEQ -> NEQ
    java.lang.String id -> id
    196:198:void <init>(java.lang.String) -> <init>
    201:201:java.lang.String name() -> name
    206:209:int hashCode() -> hashCode
    214:218:boolean equals(java.lang.Object) -> equals
    223:223:java.lang.String toString() -> toString
    227:227:java.lang.String getName() -> getName
    238:238:boolean matches(java.lang.Object,java.lang.Object) -> matches
    249:249:java.lang.reflect.Type getFilterType(io.crnk.core.queryspec.mapper.QueryParameter,java.lang.reflect.Type) -> getFilterType
    20:186:void <clinit>() -> <clinit>
io.crnk.core.queryspec.FilterOperator$1 -> io.crnk.core.queryspec.FilterOperator$1:
    20:20:void <init>(java.lang.String) -> <init>
    24:24:boolean matches(java.lang.Object,java.lang.Object) -> matches
io.crnk.core.queryspec.FilterOperator$10 -> io.crnk.core.queryspec.FilterOperator$10:
    172:172:void <init>(java.lang.String) -> <init>
    177:179:boolean matches(java.lang.Object,java.lang.Object) -> matches
io.crnk.core.queryspec.FilterOperator$11 -> io.crnk.core.queryspec.FilterOperator$11:
    186:186:void <init>(java.lang.String) -> <init>
    190:190:boolean matches(java.lang.Object,java.lang.Object) -> matches
io.crnk.core.queryspec.FilterOperator$2 -> io.crnk.core.queryspec.FilterOperator$2:
    32:32:void <init>(java.lang.String) -> <init>
    36:36:boolean matches(java.lang.Object,java.lang.Object) -> matches
io.crnk.core.queryspec.FilterOperator$3 -> io.crnk.core.queryspec.FilterOperator$3:
    49:49:void <init>(java.lang.String) -> <init>
    53:53:java.lang.reflect.Type getFilterType(io.crnk.core.queryspec.mapper.QueryParameter,java.lang.reflect.Type) -> getFilterType
    58:81:boolean matches(java.lang.Object,java.lang.Object) -> matches
io.crnk.core.queryspec.FilterOperator$4 -> io.crnk.core.queryspec.FilterOperator$4:
    89:89:void <init>(java.lang.String) -> <init>
    93:93:boolean matches(java.lang.Object,java.lang.Object) -> matches
io.crnk.core.queryspec.FilterOperator$5 -> io.crnk.core.queryspec.FilterOperator$5:
    101:101:void <init>(java.lang.String) -> <init>
    105:105:boolean matches(java.lang.Object,java.lang.Object) -> matches
io.crnk.core.queryspec.FilterOperator$6 -> io.crnk.core.queryspec.FilterOperator$6:
    113:113:void <init>(java.lang.String) -> <init>
    117:120:boolean matches(java.lang.Object,java.lang.Object) -> matches
io.crnk.core.queryspec.FilterOperator$7 -> io.crnk.core.queryspec.FilterOperator$7:
    128:128:void <init>(java.lang.String) -> <init>
    133:135:boolean matches(java.lang.Object,java.lang.Object) -> matches
io.crnk.core.queryspec.FilterOperator$8 -> io.crnk.core.queryspec.FilterOperator$8:
    143:143:void <init>(java.lang.String) -> <init>
    148:150:boolean matches(java.lang.Object,java.lang.Object) -> matches
io.crnk.core.queryspec.FilterOperator$9 -> io.crnk.core.queryspec.FilterOperator$9:
    158:158:void <init>(java.lang.String) -> <init>
    163:165:boolean matches(java.lang.Object,java.lang.Object) -> matches
io.crnk.core.queryspec.FilterSpec -> io.crnk.core.queryspec.FilterSpec:
    io.crnk.core.queryspec.FilterOperator operator -> operator
    java.lang.Object value -> value
    java.util.List expressions -> expressions
    24:25:void <init>() -> <init>
    28:34:void <init>(io.crnk.core.queryspec.FilterSpec) -> <init>
    45:48:void <init>(io.crnk.core.queryspec.FilterOperator,java.util.List) -> <init>
    51:52:void <init>(java.util.List,io.crnk.core.queryspec.FilterOperator,java.lang.Object) -> <init>
    55:60:void <init>(io.crnk.core.queryspec.PathSpec,io.crnk.core.queryspec.FilterOperator,java.lang.Object) -> <init>
    63:67:void <init>(io.crnk.core.queryspec.PathSpec,io.crnk.core.queryspec.FilterOperator,java.lang.Object,java.util.List) -> <init>
    70:70:io.crnk.core.queryspec.FilterSpec and(java.util.Collection) -> and
    74:82:io.crnk.core.queryspec.FilterSpec and(io.crnk.core.queryspec.FilterSpec[]) -> and
    109:120:java.util.List cloneExpressions(java.util.List,boolean) -> cloneExpressions
    124:127:void assertOperator() -> assertOperator
    130:136:void assertNotExpressions() -> assertNotExpressions
    139:139:io.crnk.core.queryspec.FilterOperator getOperator() -> getOperator
    143:144:void setOperator(io.crnk.core.queryspec.FilterOperator) -> setOperator
    147:147:java.lang.Object getValue() -> getValue
    155:155:java.util.List getExpression() -> getExpression
    165:169:io.crnk.core.queryspec.FilterSpec addExpression(io.crnk.core.queryspec.FilterSpec) -> addExpression
    173:173:boolean hasExpressions() -> hasExpressions
    178:178:int hashCode() -> hashCode
    183:190:boolean equals(java.lang.Object) -> equals
    195:210:java.lang.String toString() -> toString
    214:224:void appendExpressions(java.lang.StringBuilder,int) -> appendExpressions
    227:242:void appendNot(java.lang.StringBuilder,int) -> appendNot
    251:254:io.crnk.core.queryspec.FilterSpec normalize() -> normalize
    259:259:io.crnk.core.queryspec.FilterSpec clone() -> clone
    264:264:int compareTo(io.crnk.core.queryspec.FilterSpec) -> compareTo
    14:14:java.lang.Object clone() -> clone
    14:14:int compareTo(java.lang.Object) -> compareTo
io.crnk.core.queryspec.InMemoryEvaluator -> io.crnk.core.queryspec.InMemoryEvaluator:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    39:41:void <init>() -> <init>
    53:63:boolean matchesFilter(java.lang.Object,io.crnk.core.queryspec.FilterSpec) -> matchesFilter
    67:76:boolean matchesPrimitiveOperator(java.lang.Object,io.crnk.core.queryspec.FilterSpec) -> matchesPrimitiveOperator
    81:104:java.lang.Object getProperty(java.lang.Object,java.util.List) -> getProperty
    108:131:java.lang.Object getResourceProperty(java.lang.Object,java.util.List) -> getResourceProperty
    135:141:boolean matchesAny(java.util.Collection,io.crnk.core.queryspec.FilterOperator,java.lang.Object) -> matchesAny
    145:150:boolean matchesOr(java.lang.Object,java.util.List) -> matchesOr
    154:159:boolean matchesAnd(java.lang.Object,java.util.List) -> matchesAnd
    170:200:void eval(java.lang.Iterable,io.crnk.core.queryspec.QuerySpec,io.crnk.core.resource.list.ResourceList) -> eval
    203:206:void applySorting(java.util.List,java.util.List) -> applySorting
    209:220:void applyPaging(java.util.List,io.crnk.core.queryspec.QuerySpec) -> applyPaging
    223:232:void applyFilter(java.util.List,io.crnk.core.queryspec.FilterSpec) -> applyFilter
io.crnk.core.queryspec.InMemoryEvaluator$SortSpecComparator -> io.crnk.core.queryspec.InMemoryEvaluator$SortSpecComparator:
    java.util.List sortSpecs -> sortSpecs
    io.crnk.core.queryspec.InMemoryEvaluator this$0 -> this$0
    238:240:void <init>(io.crnk.core.queryspec.InMemoryEvaluator,java.util.List) -> <init>
    245:257:int compare(java.lang.Object,java.lang.Object) -> compare
    261:271:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
io.crnk.core.queryspec.IncludeFieldSpec -> io.crnk.core.queryspec.IncludeFieldSpec:
    14:15:void <init>(io.crnk.core.queryspec.PathSpec) -> <init>
    18:18:io.crnk.core.queryspec.IncludeFieldSpec clone() -> clone
    5:5:java.lang.Object clone() -> clone
io.crnk.core.queryspec.IncludeRelationSpec -> io.crnk.core.queryspec.IncludeRelationSpec:
    14:15:void <init>(io.crnk.core.queryspec.PathSpec) -> <init>
    19:19:io.crnk.core.queryspec.IncludeRelationSpec clone() -> clone
    5:5:java.lang.Object clone() -> clone
io.crnk.core.queryspec.IncludeSpec -> io.crnk.core.queryspec.IncludeSpec:
    10:14:void <init>(io.crnk.core.queryspec.PathSpec) -> <init>
    18:18:java.lang.String toString() -> toString
io.crnk.core.queryspec.PathSpec -> io.crnk.core.queryspec.PathSpec:
    java.util.List elements -> elements
    18:19:void <init>() -> <init>
    33:38:io.crnk.core.queryspec.PathSpec of(java.util.List) -> of
    42:44:io.crnk.core.queryspec.PathSpec empty() -> empty
    49:49:io.crnk.core.queryspec.PathSpec clone() -> clone
    53:53:io.crnk.core.queryspec.PathSpec of(java.lang.String) -> of
    57:57:java.util.List getElements() -> getElements
    65:65:java.lang.String toString() -> toString
    70:77:boolean equals(java.lang.Object) -> equals
    82:82:int hashCode() -> hashCode
    86:86:boolean isEmpty() -> isEmpty
    98:100:io.crnk.core.queryspec.PathSpec append(java.lang.String) -> append
    13:13:java.lang.Object clone() -> clone
io.crnk.core.queryspec.QuerySpec -> io.crnk.core.queryspec.QuerySpec:
    java.lang.Class resourceClass -> resourceClass
    java.lang.String resourceType -> resourceType
    java.util.List filters -> filters
    java.util.List sort -> sort
    java.util.List includedFields -> includedFields
    java.util.List includedRelations -> includedRelations
    java.util.Map relatedSpecs -> relatedSpecs
    io.crnk.core.queryspec.pagingspec.PagingSpec pagingSpec -> pagingSpec
    30:57:void <init>(java.lang.Class,java.lang.String) -> <init>
    60:61:void <init>(io.crnk.core.engine.information.resource.ResourceInformation) -> <init>
    104:104:java.lang.String getResourceType() -> getResourceType
    108:108:java.lang.Class getResourceClass() -> getResourceClass
    123:126:io.crnk.core.resource.list.DefaultResourceList apply(java.lang.Iterable) -> apply
    142:144:void apply(java.lang.Iterable,io.crnk.core.resource.list.ResourceList) -> apply
    148:156:int hashCode() -> hashCode
    161:173:boolean equals(java.lang.Object) -> equals
    177:178:java.lang.Long getLimit() -> getLimit
    187:188:long getOffset() -> getOffset
    201:201:io.crnk.core.queryspec.pagingspec.PagingSpec getPagingSpec() -> getPagingSpec
    209:215:io.crnk.core.queryspec.pagingspec.PagingSpec getPaging(java.lang.Class) -> getPaging
    219:220:io.crnk.core.queryspec.QuerySpec setPaging(io.crnk.core.queryspec.pagingspec.PagingSpec) -> setPaging
    227:227:io.crnk.core.queryspec.QuerySpec setPagingSpec(io.crnk.core.queryspec.pagingspec.PagingSpec) -> setPagingSpec
    231:231:java.util.List getFilters() -> getFilters
    275:275:java.util.List getSort() -> getSort
    283:283:java.util.List getIncludedFields() -> getIncludedFields
    287:288:void setIncludedFields(java.util.List) -> setIncludedFields
    291:291:java.util.List getIncludedRelations() -> getIncludedRelations
    303:303:java.util.Map getRelatedSpecs() -> getRelatedSpecs
    307:307:java.util.Collection getNestedSpecs() -> getNestedSpecs
    328:329:void addFilter(io.crnk.core.queryspec.FilterSpec) -> addFilter
    332:333:void addSort(io.crnk.core.queryspec.SortSpec) -> addSort
    336:337:void includeField(java.util.List) -> includeField
    340:341:void includeField(io.crnk.core.queryspec.PathSpec) -> includeField
    344:345:void includeRelation(java.util.List) -> includeRelation
    348:349:void includeRelation(io.crnk.core.queryspec.PathSpec) -> includeRelation
    352:355:io.crnk.core.queryspec.QuerySpec getQuerySpec(java.lang.String) -> getQuerySpec
    364:367:io.crnk.core.queryspec.QuerySpec getQuerySpec(java.lang.Class) -> getQuerySpec
    372:376:io.crnk.core.queryspec.QuerySpec getQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> getQuerySpec
    384:384:io.crnk.core.queryspec.QuerySpec getOrCreateQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> getOrCreateQuerySpec
    392:411:io.crnk.core.queryspec.QuerySpec getOrCreateQuerySpec(java.lang.Class,java.lang.String) -> getOrCreateQuerySpec
    415:420:void verifyNotNull(java.lang.Class,java.lang.String) -> verifyNotNull
    435:435:io.crnk.core.queryspec.QuerySpec duplicate() -> duplicate
    439:460:io.crnk.core.queryspec.QuerySpec clone() -> clone
    466:475:java.lang.String toString() -> toString
    24:24:java.lang.Object clone() -> clone
io.crnk.core.queryspec.QuerySpecDeserializer -> io.crnk.core.queryspec.QuerySpecDeserializer:
    void init(io.crnk.core.queryspec.QuerySpecDeserializerContext) -> init
    io.crnk.core.queryspec.QuerySpec deserialize(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> deserialize
io.crnk.core.queryspec.QuerySpecDeserializerContext -> io.crnk.core.queryspec.QuerySpecDeserializerContext:
    io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> getResourceRegistry
    io.crnk.core.engine.parser.TypeParser getTypeParser() -> getTypeParser
    com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> getObjectMapper
io.crnk.core.queryspec.QuerySpecSerializer -> io.crnk.core.queryspec.QuerySpecSerializer:
    java.util.Map serialize(io.crnk.core.queryspec.QuerySpec) -> serialize
io.crnk.core.queryspec.SortSpec -> io.crnk.core.queryspec.SortSpec:
    io.crnk.core.queryspec.Direction direction -> direction
    15:16:void <init>(java.util.List,io.crnk.core.queryspec.Direction) -> <init>
    19:23:void <init>(io.crnk.core.queryspec.PathSpec,io.crnk.core.queryspec.Direction) -> <init>
    34:34:io.crnk.core.queryspec.Direction getDirection() -> getDirection
    43:46:int hashCode() -> hashCode
    51:58:boolean equals(java.lang.Object) -> equals
    63:67:java.lang.String toString() -> toString
    72:72:io.crnk.core.queryspec.SortSpec clone() -> clone
    8:8:java.lang.Object clone() -> clone
io.crnk.core.queryspec.internal.DefaultQueryPathResolver -> io.crnk.core.queryspec.internal.DefaultQueryPathResolver:
    io.crnk.core.queryspec.mapper.QuerySpecUrlContext ctx -> ctx
    boolean allowUnknownAttributes -> allowUnknownAttributes
    boolean mapJsonNames -> mapJsonNames
    29:35:void <init>() -> <init>
    39:40:void init(io.crnk.core.queryspec.mapper.QuerySpecUrlContext) -> init
    44:125:io.crnk.core.queryspec.mapper.QueryPathSpec resolve(io.crnk.core.engine.information.resource.ResourceInformation,java.util.List,io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType,java.lang.String) -> resolve
    135:136:void setAllowUnknownAttributes(boolean) -> setAllowUnknownAttributes
io.crnk.core.queryspec.internal.DefaultQueryPathResolver$SubTypeMap -> io.crnk.core.queryspec.internal.DefaultQueryPathResolver$SubTypeMap:
    io.crnk.core.engine.internal.utils.MultivaluedMap mapping -> mapping
    io.crnk.core.queryspec.internal.DefaultQueryPathResolver this$0 -> this$0
    149:161:void <init>(io.crnk.core.queryspec.internal.DefaultQueryPathResolver,io.crnk.core.engine.registry.ResourceRegistry) -> <init>
    164:166:java.util.List findSubTypes(java.lang.String) -> findSubTypes
    170:181:void findSubTypes(java.util.List,java.lang.String) -> findSubTypes
io.crnk.core.queryspec.internal.JsonFilterSpecMapper -> io.crnk.core.queryspec.internal.JsonFilterSpecMapper:
    io.crnk.core.queryspec.mapper.QuerySpecUrlContext context -> context
    java.util.Set supportedOperators -> supportedOperators
    io.crnk.core.queryspec.mapper.QueryPathResolver pathResolver -> pathResolver
    35:39:void <init>(io.crnk.core.queryspec.mapper.QuerySpecUrlContext,java.util.Set,io.crnk.core.queryspec.mapper.QueryPathResolver) -> <init>
    42:42:java.util.List deserialize(com.fasterxml.jackson.databind.JsonNode,io.crnk.core.engine.information.resource.ResourceInformation) -> deserialize
    46:46:boolean isJson(java.lang.String) -> isJson
    50:50:boolean isNested(java.util.List) -> isNested
    54:54:com.fasterxml.jackson.databind.JsonNode serialize(java.util.List) -> serialize
    58:86:com.fasterxml.jackson.databind.JsonNode serialize(java.util.List,io.crnk.core.queryspec.FilterOperator) -> serialize
    91:91:com.fasterxml.jackson.databind.JsonNode serializeFilter(io.crnk.core.queryspec.FilterSpec) -> serializeFilter
    95:96:com.fasterxml.jackson.databind.JsonNode serializeValue(java.lang.Object) -> serializeValue
    100:124:java.util.List deserialize(com.fasterxml.jackson.databind.JsonNode,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.queryspec.PathSpec) -> deserialize
    129:134:io.crnk.core.queryspec.FilterOperator findOperator(java.lang.String) -> findOperator
    138:152:java.lang.Object deserializeJsonFilterValue(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.queryspec.PathSpec,com.fasterxml.jackson.databind.JsonNode) -> deserializeJsonFilterValue
    157:161:java.util.List deserializeJsonArrayFilter(com.fasterxml.jackson.databind.node.ArrayNode,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.queryspec.PathSpec) -> deserializeJsonArrayFilter
    165:177:io.crnk.core.queryspec.FilterSpec deserializeJsonOperatorFilter(io.crnk.core.queryspec.FilterOperator,com.fasterxml.jackson.databind.JsonNode,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.queryspec.PathSpec) -> deserializeJsonOperatorFilter
    182:185:java.lang.RuntimeException newParseException(com.fasterxml.jackson.databind.JsonNode) -> newParseException
    85:85:void lambda$serialize$1(com.fasterxml.jackson.databind.node.ArrayNode,io.crnk.core.queryspec.FilterSpec) -> lambda$serialize$1
    50:50:boolean lambda$isNested$0(io.crnk.core.queryspec.FilterSpec) -> lambda$isNested$0
io.crnk.core.queryspec.internal.QuerySpecAdapter -> io.crnk.core.queryspec.internal.QuerySpecAdapter:
    io.crnk.core.engine.query.QueryContext queryContext -> queryContext
    io.crnk.core.queryspec.QuerySpec querySpec -> querySpec
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    boolean compactMode -> compactMode
    35:39:void <init>(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.query.QueryContext) -> <init>
    42:42:io.crnk.core.queryspec.QuerySpec getQuerySpec() -> getQuerySpec
    47:54:io.crnk.legacy.queryParams.params.TypedParams getIncludedRelations() -> getIncludedRelations
    58:65:void addRelations(java.util.Map,io.crnk.core.queryspec.QuerySpec) -> addRelations
    68:73:java.lang.String getResourceType(io.crnk.core.queryspec.QuerySpec) -> getResourceType
    78:85:io.crnk.legacy.queryParams.params.TypedParams getIncludedFields() -> getIncludedFields
    89:96:void addFields(java.util.Map,io.crnk.core.queryspec.QuerySpec) -> addFields
    100:100:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> getResourceInformation
    105:105:io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> getResourceRegistry
    110:110:io.crnk.core.engine.query.QueryContext getQueryContext() -> getQueryContext
    135:137:io.crnk.core.engine.query.QueryAdapter duplicate() -> duplicate
    142:143:io.crnk.legacy.queryParams.QueryParams toQueryParams() -> toQueryParams
    148:148:io.crnk.core.queryspec.QuerySpec toQuerySpec() -> toQuerySpec
    153:153:boolean getCompactMode() -> getCompactMode
    158:159:void setPagingSpec(io.crnk.core.queryspec.pagingspec.PagingSpec) -> setPagingSpec
    163:163:io.crnk.core.queryspec.pagingspec.PagingSpec getPagingSpec() -> getPagingSpec
    168:168:boolean isEmpty() -> isEmpty
    172:173:void setCompactMode(boolean) -> setCompactMode
    177:177:java.lang.String toString() -> toString
io.crnk.core.queryspec.internal.QuerySpecAdapterBuilder -> io.crnk.core.queryspec.internal.QuerySpecAdapterBuilder:
    io.crnk.core.queryspec.mapper.QuerySpecUrlMapper querySpecUrlMapper -> querySpecUrlMapper
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    23:26:void <init>(io.crnk.core.queryspec.mapper.QuerySpecUrlMapper,io.crnk.core.module.ModuleRegistry) -> <init>
    31:37:io.crnk.core.engine.query.QueryAdapter build(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map,io.crnk.core.engine.query.QueryContext) -> build
io.crnk.core.queryspec.internal.UrlMapperAdapter -> io.crnk.core.queryspec.internal.UrlMapperAdapter:
    io.crnk.core.queryspec.QuerySpecDeserializer deserializer -> deserializer
    io.crnk.core.queryspec.QuerySpecSerializer serializer -> serializer
    io.crnk.core.queryspec.mapper.QuerySpecUrlContext ctx -> ctx
    25:27:void <init>(io.crnk.core.queryspec.QuerySpecDeserializer) -> <init>
    31:33:void init(io.crnk.core.queryspec.mapper.QuerySpecUrlContext) -> init
    37:40:java.util.Map serialize(io.crnk.core.queryspec.QuerySpec) -> serialize
    45:45:io.crnk.core.queryspec.QuerySpec deserialize(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> deserialize
    58:61:void setAllowUnknownAttributes(boolean) -> setAllowUnknownAttributes
    73:76:void setAllowUnknownParameters(boolean) -> setAllowUnknownParameters
io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper -> io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.queryspec.FilterOperator defaultOperator -> defaultOperator
    java.util.Set supportedOperators -> supportedOperators
    boolean enforceDotPathSeparator -> enforceDotPathSeparator
    boolean ignoreParseExceptions -> ignoreParseExceptions
    boolean allowUnknownParameters -> allowUnknownParameters
    io.crnk.core.queryspec.mapper.QuerySpecUrlContext context -> context
    io.crnk.core.queryspec.mapper.QueryPathResolver pathResolver -> pathResolver
    boolean allowCommaSeparatedValue -> allowCommaSeparatedValue
    io.crnk.core.queryspec.internal.JsonFilterSpecMapper jsonParser -> jsonParser
    com.fasterxml.jackson.databind.ObjectMapper compactMapper -> compactMapper
    52:85:void <init>() -> <init>
    89:93:void init(io.crnk.core.queryspec.mapper.QuerySpecUrlContext) -> init
    116:117:void setAllowUnknownAttributes(boolean) -> setAllowUnknownAttributes
    160:160:io.crnk.core.queryspec.QuerySpec createQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> createQuerySpec
    165:181:void init(io.crnk.core.queryspec.QuerySpecDeserializerContext) -> init
    185:230:io.crnk.core.queryspec.QuerySpec deserialize(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> deserialize
    234:235:void put(java.util.Map,java.lang.String,java.lang.String) -> put
    238:240:java.lang.String toJsonPath(io.crnk.core.engine.information.resource.ResourceInformation,java.util.List) -> toJsonPath
    244:245:java.lang.String addResourceType(io.crnk.core.queryspec.mapper.QueryParameterType,java.lang.String,io.crnk.core.engine.information.resource.ResourceInformation) -> addResourceType
    249:255:java.lang.String serializeValue(java.lang.Object) -> serializeValue
    260:262:java.util.Map serialize(io.crnk.core.queryspec.QuerySpec) -> serialize
    266:301:void serialize(io.crnk.core.queryspec.QuerySpec,java.util.Map,io.crnk.core.queryspec.QuerySpec) -> serialize
    304:351:void serializeFilters(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> serializeFilters
    354:369:void serializeSorting(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> serializeSorting
    373:385:void serializeIncludedFields(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> serializeIncludedFields
    389:401:void serializeIncludedRelations(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> serializeIncludedRelations
    405:415:void deserializeIncludes(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.mapper.QueryParameter) -> deserializeIncludes
    418:418:java.lang.String[] splitValues(java.lang.String) -> splitValues
    422:431:void deserializeFields(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.mapper.QueryParameter) -> deserializeFields
    434:458:void deserializeFilter(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.mapper.QueryParameter) -> deserializeFilter
    462:473:java.util.Optional getJsonQuery(io.crnk.core.queryspec.mapper.QueryPathSpec,io.crnk.core.queryspec.mapper.QueryParameter) -> getJsonQuery
    478:491:java.lang.Object toObjectValue(java.lang.String,io.crnk.core.queryspec.mapper.QueryParameter,java.lang.Class) -> toObjectValue
    498:514:void deserializeSort(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.mapper.QueryParameter) -> deserializeSort
    517:520:void deserializeUnknown(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.mapper.QueryParameter) -> deserializeUnknown
    524:529:java.util.List parseParameters(java.util.Map,io.crnk.core.engine.information.resource.ResourceInformation) -> parseParameters
    534:578:io.crnk.core.queryspec.mapper.QueryParameter parseParameter(java.lang.String,java.util.Set,io.crnk.core.engine.information.resource.ResourceInformation) -> parseParameter
    582:591:java.util.List parseParameterNameArguments(java.lang.String,int) -> parseParameterNameArguments
    597:616:void parseFilterParameterName(io.crnk.core.queryspec.mapper.QueryParameter,java.util.List,io.crnk.core.engine.information.resource.ResourceInformation) -> parseFilterParameterName
    623:634:void legacyParseFilterParameterName(io.crnk.core.queryspec.mapper.QueryParameter,java.util.List,io.crnk.core.engine.information.resource.ResourceInformation) -> legacyParseFilterParameterName
    637:645:void parseFilterOperator(io.crnk.core.queryspec.mapper.QueryParameter,java.util.List) -> parseFilterOperator
    648:649:boolean isResourceType(java.lang.String) -> isResourceType
    653:658:io.crnk.core.queryspec.FilterOperator findOperator(java.lang.String) -> findOperator
    662:668:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation(java.lang.String,java.lang.String) -> getResourceInformation
    672:672:java.util.List splitAttributePath(java.lang.String,io.crnk.core.queryspec.mapper.QueryParameter) -> splitAttributePath
    688:689:void setAllowUnknownParameters(boolean) -> setAllowUnknownParameters
    48:48:void <clinit>() -> <clinit>
io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper$1 -> io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper$1:
    io.crnk.core.queryspec.QuerySpecDeserializerContext val$ctx -> val$ctx
    io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper this$0 -> this$0
    165:165:void <init>(io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper,io.crnk.core.queryspec.QuerySpecDeserializerContext) -> <init>
    168:168:io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> getResourceRegistry
    173:173:io.crnk.core.engine.parser.TypeParser getTypeParser() -> getTypeParser
    178:178:com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> getObjectMapper
io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper$2 -> io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper$2:
    int[] $SwitchMap$io$crnk$core$queryspec$mapper$QueryParameterType -> $SwitchMap$io$crnk$core$queryspec$mapper$QueryParameterType
    197:197:void <clinit>() -> <clinit>
io.crnk.core.queryspec.mapper.QueryParameter -> io.crnk.core.queryspec.mapper.QueryParameter:
    java.lang.String name -> name
    io.crnk.core.queryspec.mapper.QueryParameterType type -> type
    java.lang.String pagingType -> pagingType
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> resourceInformation
    io.crnk.core.queryspec.FilterOperator operator -> operator
    java.util.List attributePath -> attributePath
    java.util.Set values -> values
    io.crnk.core.engine.parser.TypeParser typeParser -> typeParser
    30:32:void <init>(io.crnk.core.engine.parser.TypeParser) -> <init>
    48:48:java.lang.String toString() -> toString
    53:53:java.lang.String getName() -> getName
    57:57:io.crnk.core.queryspec.mapper.QueryParameterType getType() -> getType
    61:61:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> getResourceInformation
    65:65:io.crnk.core.queryspec.FilterOperator getOperator() -> getOperator
    69:69:java.util.List getAttributePath() -> getAttributePath
    73:73:java.util.Set getValues() -> getValues
    77:78:void setName(java.lang.String) -> setName
    81:82:void setType(io.crnk.core.queryspec.mapper.QueryParameterType) -> setType
    85:86:void setValues(java.util.Set) -> setValues
    89:90:void setOperator(io.crnk.core.queryspec.FilterOperator) -> setOperator
    93:94:void setResourceInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> setResourceInformation
    97:97:java.lang.String getPagingType() -> getPagingType
    101:102:void setPagingType(java.lang.String) -> setPagingType
    105:106:void setAttributePath(java.util.List) -> setAttributePath
io.crnk.core.queryspec.mapper.QueryParameterType -> io.crnk.core.queryspec.mapper.QueryParameterType:
    io.crnk.core.queryspec.mapper.QueryParameterType FILTER -> FILTER
    io.crnk.core.queryspec.mapper.QueryParameterType SORT -> SORT
    io.crnk.core.queryspec.mapper.QueryParameterType PAGE -> PAGE
    io.crnk.core.queryspec.mapper.QueryParameterType FIELDS -> FIELDS
    io.crnk.core.queryspec.mapper.QueryParameterType INCLUDE -> INCLUDE
    io.crnk.core.queryspec.mapper.QueryParameterType UNKNOWN -> UNKNOWN
    io.crnk.core.queryspec.mapper.QueryParameterType[] $VALUES -> $VALUES
    3:3:io.crnk.core.queryspec.mapper.QueryParameterType[] values() -> values
    3:3:io.crnk.core.queryspec.mapper.QueryParameterType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:29:void <clinit>() -> <clinit>
io.crnk.core.queryspec.mapper.QueryPathResolver -> io.crnk.core.queryspec.mapper.QueryPathResolver:
    void init(io.crnk.core.queryspec.mapper.QuerySpecUrlContext) -> init
    io.crnk.core.queryspec.mapper.QueryPathSpec resolve(io.crnk.core.engine.information.resource.ResourceInformation,java.util.List,io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType,java.lang.String) -> resolve
    void setAllowUnknownAttributes(boolean) -> setAllowUnknownAttributes
io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType -> io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType:
    io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType JAVA -> JAVA
    io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType JSON -> JSON
    io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType[] $VALUES -> $VALUES
    10:10:io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType[] values() -> values
    10:10:io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType valueOf(java.lang.String) -> valueOf
    10:10:void <init>(java.lang.String,int) -> <init>
    10:12:void <clinit>() -> <clinit>
io.crnk.core.queryspec.mapper.QueryPathSpec -> io.crnk.core.queryspec.mapper.QueryPathSpec:
    java.lang.reflect.Type valueType -> valueType
    java.util.List attributePath -> attributePath
    12:15:void <init>(java.lang.reflect.Type,java.util.List) -> <init>
    18:18:java.lang.reflect.Type getValueType() -> getValueType
    22:22:java.util.List getAttributePath() -> getAttributePath
io.crnk.core.queryspec.mapper.QuerySpecUrlContext -> io.crnk.core.queryspec.mapper.QuerySpecUrlContext:
    io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> getResourceRegistry
    io.crnk.core.engine.parser.TypeParser getTypeParser() -> getTypeParser
    com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> getObjectMapper
io.crnk.core.queryspec.mapper.QuerySpecUrlMapper -> io.crnk.core.queryspec.mapper.QuerySpecUrlMapper:
    void init(io.crnk.core.queryspec.mapper.QuerySpecUrlContext) -> init
    java.util.Map serialize(io.crnk.core.queryspec.QuerySpec) -> serialize
    io.crnk.core.queryspec.QuerySpec deserialize(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> deserialize
io.crnk.core.queryspec.mapper.UnkonwnMappingAware -> io.crnk.core.queryspec.mapper.UnkonwnMappingAware:
    void setAllowUnknownAttributes(boolean) -> setAllowUnknownAttributes
    void setAllowUnknownParameters(boolean) -> setAllowUnknownParameters
io.crnk.core.queryspec.pagingspec.LimitBoundedPagingBehavior -> io.crnk.core.queryspec.pagingspec.LimitBoundedPagingBehavior:
    void setDefaultLimit(java.lang.Long) -> setDefaultLimit
    void setMaxPageLimit(java.lang.Long) -> setMaxPageLimit
io.crnk.core.queryspec.pagingspec.NumberSizePagingSpec -> io.crnk.core.queryspec.pagingspec.NumberSizePagingSpec:
    java.lang.Integer size -> size
    int number -> number
    8:13:void <init>() -> <init>
    8:19:void <init>(int,java.lang.Integer) -> <init>
    32:43:io.crnk.core.queryspec.pagingspec.PagingSpec convert(java.lang.Class) -> convert
    48:48:io.crnk.core.queryspec.pagingspec.NumberSizePagingSpec clone() -> clone
    53:57:int hashCode() -> hashCode
    62:70:boolean equals(java.lang.Object) -> equals
    75:76:java.lang.String toString() -> toString
    6:6:java.lang.Object clone() -> clone
    6:6:io.crnk.core.queryspec.pagingspec.PagingSpec clone() -> clone
io.crnk.core.queryspec.pagingspec.OffsetLimitPagingBehavior -> io.crnk.core.queryspec.pagingspec.OffsetLimitPagingBehavior:
    long defaultOffset -> defaultOffset
    21:25:void <init>() -> <init>
    29:39:java.util.Map serialize(io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec,java.lang.String) -> serialize
    44:63:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec deserialize(java.util.Map) -> deserialize
    68:68:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec createEmptyPagingSpec() -> createEmptyPagingSpec
    73:73:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec createDefaultPagingSpec() -> createDefaultPagingSpec
    81:89:void build(io.crnk.core.resource.links.PagedLinksInformation,io.crnk.core.resource.list.ResourceList,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.queryspec.pagingspec.PagingSpecUrlBuilder) -> build
    93:93:boolean isRequired(io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec) -> isRequired
    100:133:void doEnrichPageLinksInformation(io.crnk.core.resource.links.PagedLinksInformation,java.lang.Long,java.lang.Boolean,io.crnk.core.engine.query.QueryAdapter,boolean,io.crnk.core.queryspec.pagingspec.PagingSpecUrlBuilder) -> doEnrichPageLinksInformation
    15:15:void setMaxPageLimit(java.lang.Long) -> setMaxPageLimit
    15:15:void setDefaultLimit(java.lang.Long) -> setDefaultLimit
    15:15:boolean isRequired(io.crnk.core.queryspec.pagingspec.PagingSpec) -> isRequired
    15:15:io.crnk.core.queryspec.pagingspec.PagingSpec createEmptyPagingSpec() -> createEmptyPagingSpec
    15:15:io.crnk.core.queryspec.pagingspec.PagingSpec deserialize(java.util.Map) -> deserialize
    15:15:java.util.Map serialize(io.crnk.core.queryspec.pagingspec.PagingSpec,java.lang.String) -> serialize
io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec -> io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec:
    java.lang.Long limit -> limit
    java.lang.Long offset -> offset
    8:13:void <init>() -> <init>
    8:18:void <init>(java.lang.Long,java.lang.Long) -> <init>
    21:21:java.lang.Long getLimit() -> getLimit
    25:25:long getOffset() -> getOffset
    29:30:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec setLimit(java.lang.Long) -> setLimit
    34:35:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec setOffset(long) -> setOffset
    40:40:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec clone() -> clone
    45:49:int hashCode() -> hashCode
    54:62:boolean equals(java.lang.Object) -> equals
    67:69:java.lang.String toString() -> toString
    74:91:io.crnk.core.queryspec.pagingspec.PagingSpec convert(java.lang.Class) -> convert
    6:6:java.lang.Object clone() -> clone
    6:6:io.crnk.core.queryspec.pagingspec.PagingSpec clone() -> clone
io.crnk.core.queryspec.pagingspec.PagingBehavior -> io.crnk.core.queryspec.pagingspec.PagingBehavior:
    java.util.Map serialize(io.crnk.core.queryspec.pagingspec.PagingSpec,java.lang.String) -> serialize
    io.crnk.core.queryspec.pagingspec.PagingSpec deserialize(java.util.Map) -> deserialize
    io.crnk.core.queryspec.pagingspec.PagingSpec createEmptyPagingSpec() -> createEmptyPagingSpec
    void build(io.crnk.core.resource.links.PagedLinksInformation,io.crnk.core.resource.list.ResourceList,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.queryspec.pagingspec.PagingSpecUrlBuilder) -> build
    boolean isRequired(io.crnk.core.queryspec.pagingspec.PagingSpec) -> isRequired
    69:70:boolean supports(java.lang.Class) -> supports
io.crnk.core.queryspec.pagingspec.PagingBehaviorBase -> io.crnk.core.queryspec.pagingspec.PagingBehaviorBase:
    java.lang.Long defaultLimit -> defaultLimit
    java.lang.Long maxPageLimit -> maxPageLimit
    11:11:void <init>() -> <init>
    22:23:void setDefaultLimit(java.lang.Long) -> setDefaultLimit
    30:31:void setMaxPageLimit(java.lang.Long) -> setMaxPageLimit
    35:40:java.lang.Long getTotalCount(io.crnk.core.resource.list.ResourceList) -> getTotalCount
    44:49:java.lang.Boolean isNextPageAvailable(io.crnk.core.resource.list.ResourceList) -> isNextPageAvailable
    53:54:boolean hasPageLinks(io.crnk.core.resource.links.PagedLinksInformation) -> hasPageLinks
    58:65:java.lang.Long getValue(java.lang.String,java.util.Set) -> getValue
io.crnk.core.queryspec.pagingspec.PagingSpec -> io.crnk.core.queryspec.pagingspec.PagingSpec:
    10:10:io.crnk.core.queryspec.pagingspec.PagingSpec convert(java.lang.Class) -> convert
    14:14:io.crnk.core.queryspec.pagingspec.PagingSpec clone() -> clone
io.crnk.core.queryspec.pagingspec.PagingSpecUrlBuilder -> io.crnk.core.queryspec.pagingspec.PagingSpecUrlBuilder:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    io.crnk.core.engine.dispatcher.RepositoryRequestSpec requestSpec -> requestSpec
    18:21:void <init>(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> <init>
    24:36:java.lang.String build(io.crnk.core.engine.query.QueryAdapter) -> build
io.crnk.core.queryspec.pagingspec.VoidPagingBehavior -> io.crnk.core.queryspec.pagingspec.VoidPagingBehavior:
    20:20:void <init>() -> <init>
    24:24:java.util.Map serialize(io.crnk.core.queryspec.pagingspec.PagingSpec,java.lang.String) -> serialize
    29:29:io.crnk.core.queryspec.pagingspec.PagingSpec deserialize(java.util.Map) -> deserialize
    34:34:io.crnk.core.queryspec.pagingspec.PagingSpec createEmptyPagingSpec() -> createEmptyPagingSpec
    45:45:void build(io.crnk.core.resource.links.PagedLinksInformation,io.crnk.core.resource.list.ResourceList,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.queryspec.pagingspec.PagingSpecUrlBuilder) -> build
    50:50:boolean isRequired(io.crnk.core.queryspec.pagingspec.PagingSpec) -> isRequired
io.crnk.core.repository.BulkRelationshipRepositoryV2 -> io.crnk.core.repository.BulkRelationshipRepositoryV2:
    io.crnk.core.engine.internal.utils.MultivaluedMap findTargets(java.lang.Iterable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> findTargets
    26:30:java.lang.Object findOneTarget(java.io.Serializable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> findOneTarget
    35:39:io.crnk.core.resource.list.ResourceList findManyTargets(java.io.Serializable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> findManyTargets
io.crnk.core.repository.LinksRepositoryV2 -> io.crnk.core.repository.LinksRepositoryV2:
    io.crnk.core.resource.links.LinksInformation getLinksInformation(java.lang.Iterable,io.crnk.core.queryspec.QuerySpec) -> getLinksInformation
io.crnk.core.repository.MatchedRelationshipRepository -> io.crnk.core.repository.MatchedRelationshipRepository:
    io.crnk.core.repository.RelationshipMatcher getMatcher() -> getMatcher
io.crnk.core.repository.MetaRepositoryV2 -> io.crnk.core.repository.MetaRepositoryV2:
    io.crnk.core.resource.meta.MetaInformation getMetaInformation(java.lang.Iterable,io.crnk.core.queryspec.QuerySpec) -> getMetaInformation
io.crnk.core.repository.RelationshipMatcher -> io.crnk.core.repository.RelationshipMatcher:
    java.util.List rules -> rules
    11:13:void <init>() -> <init>
    16:16:io.crnk.core.repository.RelationshipMatcherRule rule() -> rule
    20:20:boolean matches(io.crnk.core.engine.information.resource.ResourceField) -> matches
    20:20:boolean lambda$matches$0(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.repository.RelationshipMatcherRule) -> lambda$matches$0
io.crnk.core.repository.RelationshipMatcherRule -> io.crnk.core.repository.RelationshipMatcherRule:
    io.crnk.core.repository.RelationshipMatcher matcher -> matcher
    java.lang.String sourceResourceType -> sourceResourceType
    java.lang.Class sourceResourceClass -> sourceResourceClass
    boolean sourceMatchSubTypes -> sourceMatchSubTypes
    java.lang.String sourceField -> sourceField
    java.lang.String targetResourceType -> targetResourceType
    java.lang.Class targetResourceClass -> targetResourceClass
    boolean targetMatchSubTypes -> targetMatchSubTypes
    java.lang.String targetField -> targetField
    31:33:void <init>(io.crnk.core.repository.RelationshipMatcher) -> <init>
    36:37:io.crnk.core.repository.RelationshipMatcherRule source(java.lang.String) -> source
    41:41:io.crnk.core.repository.RelationshipMatcherRule source(java.lang.Class) -> source
    45:47:io.crnk.core.repository.RelationshipMatcherRule source(java.lang.Class,boolean) -> source
    51:52:io.crnk.core.repository.RelationshipMatcherRule field(java.lang.String) -> field
    56:58:io.crnk.core.repository.RelationshipMatcherRule field(io.crnk.core.engine.information.resource.ResourceField) -> field
    62:63:io.crnk.core.repository.RelationshipMatcherRule target(java.lang.String) -> target
    67:67:io.crnk.core.repository.RelationshipMatcherRule target(java.lang.Class) -> target
    71:73:io.crnk.core.repository.RelationshipMatcherRule target(java.lang.Class,boolean) -> target
    83:84:io.crnk.core.repository.RelationshipMatcher add() -> add
    88:95:boolean matches(io.crnk.core.engine.information.resource.ResourceField) -> matches
    100:100:boolean nullOrMatch(java.lang.String,java.lang.String) -> nullOrMatch
    104:104:boolean nullOrMatch(java.lang.Class,java.lang.Class,boolean) -> nullOrMatch
io.crnk.core.repository.RelationshipRepositoryV2 -> io.crnk.core.repository.RelationshipRepositoryV2:
    java.lang.Class getSourceResourceClass() -> getSourceResourceClass
    java.lang.Class getTargetResourceClass() -> getTargetResourceClass
    52:66:io.crnk.core.repository.RelationshipMatcher getMatcher() -> getMatcher
    void setRelation(java.lang.Object,java.io.Serializable,java.lang.String) -> setRelation
    void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> setRelations
    void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> addRelations
    void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> removeRelations
    java.lang.Object findOneTarget(java.io.Serializable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> findOneTarget
    io.crnk.core.resource.list.ResourceList findManyTargets(java.io.Serializable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> findManyTargets
io.crnk.core.repository.Repository -> io.crnk.core.repository.Repository:
io.crnk.core.repository.ResourceRepositoryBase -> io.crnk.core.repository.ResourceRepositoryBase:
    java.lang.Class resourceClass -> resourceClass
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    36:38:void <init>(java.lang.Class) -> <init>
    42:42:java.lang.Class getResourceClass() -> getResourceClass
    54:66:java.lang.Object findOne(java.io.Serializable,io.crnk.core.queryspec.QuerySpec) -> findOne
    79:84:io.crnk.core.resource.list.ResourceList findAll(java.lang.Iterable,io.crnk.core.queryspec.QuerySpec) -> findAll
    95:95:java.lang.Object save(java.lang.Object) -> save
    100:100:java.lang.Object create(java.lang.Object) -> create
    110:110:void delete(java.io.Serializable) -> delete
    115:116:void setResourceRegistry(io.crnk.core.engine.registry.ResourceRegistry) -> setResourceRegistry
io.crnk.core.repository.ResourceRepositoryV2 -> io.crnk.core.repository.ResourceRepositoryV2:
    java.lang.Class getResourceClass() -> getResourceClass
    java.lang.Object findOne(java.io.Serializable,io.crnk.core.queryspec.QuerySpec) -> findOne
    io.crnk.core.resource.list.ResourceList findAll(io.crnk.core.queryspec.QuerySpec) -> findAll
    io.crnk.core.resource.list.ResourceList findAll(java.lang.Iterable,io.crnk.core.queryspec.QuerySpec) -> findAll
    java.lang.Object save(java.lang.Object) -> save
    java.lang.Object create(java.lang.Object) -> create
    void delete(java.io.Serializable) -> delete
io.crnk.core.repository.UntypedRelationshipRepository -> io.crnk.core.repository.UntypedRelationshipRepository:
    java.lang.String getSourceResourceType() -> getSourceResourceType
    java.lang.String getTargetResourceType() -> getTargetResourceType
io.crnk.core.repository.UntypedResourceRepository -> io.crnk.core.repository.UntypedResourceRepository:
io.crnk.core.repository.decorate.RelationshipRepositoryDecorator -> io.crnk.core.repository.decorate.RelationshipRepositoryDecorator:
    void setDecoratedObject(io.crnk.core.repository.RelationshipRepositoryV2) -> setDecoratedObject
    8:8:void setDecoratedObject(java.lang.Object) -> setDecoratedObject
io.crnk.core.repository.decorate.RepositoryDecoratorFactory -> io.crnk.core.repository.decorate.RepositoryDecoratorFactory:
    23:32:java.lang.Object decorateRepository(java.lang.Object) -> decorateRepository
    io.crnk.core.repository.decorate.ResourceRepositoryDecorator decorateRepository(io.crnk.core.repository.ResourceRepositoryV2) -> decorateRepository
    io.crnk.core.repository.decorate.RelationshipRepositoryDecorator decorateRepository(io.crnk.core.repository.RelationshipRepositoryV2) -> decorateRepository
io.crnk.core.repository.decorate.ResourceRepositoryDecorator -> io.crnk.core.repository.decorate.ResourceRepositoryDecorator:
    void setDecoratedObject(io.crnk.core.repository.ResourceRepositoryV2) -> setDecoratedObject
    8:8:void setDecoratedObject(java.lang.Object) -> setDecoratedObject
io.crnk.core.repository.foward.ForwardingDirection -> io.crnk.core.repository.foward.ForwardingDirection:
    io.crnk.core.repository.foward.ForwardingDirection OWNER -> OWNER
    io.crnk.core.repository.foward.ForwardingDirection OPPOSITE -> OPPOSITE
    io.crnk.core.repository.foward.ForwardingDirection[] $VALUES -> $VALUES
    3:3:io.crnk.core.repository.foward.ForwardingDirection[] values() -> values
    3:3:io.crnk.core.repository.foward.ForwardingDirection valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:13:void <clinit>() -> <clinit>
io.crnk.core.repository.foward.ForwardingRelationshipRepository -> io.crnk.core.repository.foward.ForwardingRelationshipRepository:
    io.crnk.core.repository.RelationshipMatcher matcher -> matcher
    io.crnk.core.repository.foward.strategy.ForwardingGetStrategy getStrategy -> getStrategy
    io.crnk.core.repository.foward.strategy.ForwardingSetStrategy setStrategy -> setStrategy
    java.lang.Class sourceClass -> sourceClass
    java.lang.String sourceType -> sourceType
    io.crnk.core.repository.foward.strategy.ForwardingStrategyContext context -> context
    io.crnk.core.engine.http.HttpRequestContextProvider requestContextProvider -> requestContextProvider
    57:58:void <init>() -> <init>
    77:78:void <init>(java.lang.String,io.crnk.core.repository.RelationshipMatcher,io.crnk.core.repository.foward.ForwardingDirection,io.crnk.core.repository.foward.ForwardingDirection) -> <init>
    81:81:io.crnk.core.repository.foward.strategy.ForwardingGetStrategy toGetStrategy(io.crnk.core.repository.foward.ForwardingDirection) -> toGetStrategy
    85:85:io.crnk.core.repository.foward.strategy.ForwardingSetStrategy toSetStrategy(io.crnk.core.repository.foward.ForwardingDirection) -> toSetStrategy
    89:94:void <init>(java.lang.String,io.crnk.core.repository.RelationshipMatcher,io.crnk.core.repository.foward.strategy.ForwardingGetStrategy,io.crnk.core.repository.foward.strategy.ForwardingSetStrategy) -> <init>
    99:105:void setResourceRegistry(io.crnk.core.engine.registry.ResourceRegistry) -> setResourceRegistry
    109:109:io.crnk.core.repository.RelationshipMatcher getMatcher() -> getMatcher
    114:114:java.lang.Class getSourceResourceClass() -> getSourceResourceClass
    119:119:java.lang.Class getTargetResourceClass() -> getTargetResourceClass
    124:126:void setRelation(java.lang.Object,java.io.Serializable,java.lang.String) -> setRelation
    130:132:void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> setRelations
    136:138:void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> addRelations
    142:144:void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> removeRelations
    148:149:io.crnk.core.engine.internal.utils.MultivaluedMap findTargets(java.lang.Iterable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> findTargets
    153:154:io.crnk.core.engine.query.QueryContext getQueryContext() -> getQueryContext
    159:160:void setHttpRequestContextProvider(io.crnk.core.engine.http.HttpRequestContextProvider) -> setHttpRequestContextProvider
io.crnk.core.repository.foward.strategy.ForwardingGetStrategy -> io.crnk.core.repository.foward.strategy.ForwardingGetStrategy:
    io.crnk.core.engine.internal.utils.MultivaluedMap findTargets(java.lang.Iterable,java.lang.String,io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.query.QueryContext) -> findTargets
io.crnk.core.repository.foward.strategy.ForwardingSetStrategy -> io.crnk.core.repository.foward.strategy.ForwardingSetStrategy:
    void setRelation(java.lang.Object,java.io.Serializable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> setRelation
    void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> setRelations
    void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> addRelations
    void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> removeRelations
io.crnk.core.repository.foward.strategy.ForwardingStrategy -> io.crnk.core.repository.foward.strategy.ForwardingStrategy:
    void init(io.crnk.core.repository.foward.strategy.ForwardingStrategyContext) -> init
io.crnk.core.repository.foward.strategy.ForwardingStrategyBase -> io.crnk.core.repository.foward.strategy.ForwardingStrategyBase:
    io.crnk.core.repository.foward.strategy.ForwardingStrategyContext context -> context
    11:11:void <init>() -> <init>
    16:18:void init(io.crnk.core.repository.foward.strategy.ForwardingStrategyContext) -> init
    21:28:java.util.Collection getOrCreateCollection(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField) -> getOrCreateCollection
io.crnk.core.repository.foward.strategy.ForwardingStrategyContext -> io.crnk.core.repository.foward.strategy.ForwardingStrategyContext:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    java.lang.String sourceType -> sourceType
    java.lang.Class sourceClass -> sourceClass
    26:30:void <init>(io.crnk.core.engine.registry.ResourceRegistry,java.lang.String,java.lang.Class) -> <init>
    33:34:io.crnk.core.engine.registry.RegistryEntry getSourceEntry() -> getSourceEntry
    38:38:io.crnk.core.engine.registry.RegistryEntry getTargetEntry(io.crnk.core.engine.information.resource.ResourceField) -> getTargetEntry
    42:42:io.crnk.core.engine.query.QueryAdapter createQueryAdapter(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.query.QueryContext) -> createQueryAdapter
    46:56:io.crnk.core.engine.query.QueryAdapter createSaveQueryAdapter(java.lang.String,io.crnk.core.engine.query.QueryContext) -> createSaveQueryAdapter
    60:62:java.lang.Iterable findAll(io.crnk.core.engine.registry.RegistryEntry,java.lang.Iterable,io.crnk.core.engine.query.QueryContext) -> findAll
    66:68:java.lang.Object findOne(io.crnk.core.engine.registry.RegistryEntry,java.io.Serializable,io.crnk.core.engine.query.QueryContext) -> findOne
    72:75:io.crnk.core.engine.query.QueryAdapter createEmptyQueryAdapter(io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.query.QueryContext) -> createEmptyQueryAdapter
io.crnk.core.repository.foward.strategy.GetFromOppositeStrategy -> io.crnk.core.repository.foward.strategy.GetFromOppositeStrategy:
    40:40:void <init>() -> <init>
    47:106:io.crnk.core.engine.internal.utils.MultivaluedMap findTargets(java.lang.Iterable,java.lang.String,io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.query.QueryContext) -> findTargets
    114:119:void handleTarget(io.crnk.core.engine.internal.utils.MultivaluedMap,java.lang.Object,java.util.Set,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation) -> handleTarget
    124:156:void handleSingleTarget(io.crnk.core.engine.internal.utils.MultivaluedMap,java.lang.Object,java.util.Set,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation) -> handleSingleTarget
    162:201:void handleCollectionTarget(io.crnk.core.engine.internal.utils.MultivaluedMap,java.lang.Object,java.util.Set,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation) -> handleCollectionTarget
io.crnk.core.repository.foward.strategy.GetFromOppositeStrategy$1 -> io.crnk.core.repository.foward.strategy.GetFromOppositeStrategy$1:
    io.crnk.core.repository.foward.strategy.GetFromOppositeStrategy this$0 -> this$0
    90:90:void <init>(io.crnk.core.repository.foward.strategy.GetFromOppositeStrategy) -> <init>
    94:94:java.util.List newList() -> newList
io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy -> io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy:
    22:22:void <init>() -> <init>
    28:74:io.crnk.core.engine.internal.utils.MultivaluedMap findTargets(java.lang.Iterable,java.lang.String,io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.query.QueryContext) -> findTargets
    82:110:io.crnk.core.engine.internal.utils.MultivaluedMap toResult(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,java.util.List,java.util.List) -> toResult
    114:120:void addResult(io.crnk.core.engine.internal.utils.MultivaluedMap,io.crnk.core.engine.information.resource.ResourceField,java.lang.Object,java.lang.Object,java.util.Map) -> addResult
io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy$1 -> io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy$1:
    io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy this$0 -> this$0
    55:55:void <init>(io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy) -> <init>
    59:59:java.util.List newList() -> newList
io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy$2 -> io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy$2:
    io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy this$0 -> this$0
    82:82:void <init>(io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy) -> <init>
    86:86:java.util.List newList() -> newList
io.crnk.core.repository.foward.strategy.SetOppositeStrategy -> io.crnk.core.repository.foward.strategy.SetOppositeStrategy:
    io.crnk.core.repository.foward.strategy.SetOwnerStrategy oppositeSetStrategy -> oppositeSetStrategy
    16:20:void <init>() -> <init>
    24:26:void init(io.crnk.core.repository.foward.strategy.ForwardingStrategyContext) -> init
    30:50:void setRelation(java.lang.Object,java.io.Serializable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> setRelation
    54:54:void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> setRelations
    59:60:void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> addRelations
    64:65:void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> removeRelations
    69:96:void updateRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext,boolean) -> updateRelations
    99:102:io.crnk.core.engine.information.resource.ResourceField getOppositeField(io.crnk.core.engine.information.resource.ResourceField) -> getOppositeField
io.crnk.core.repository.foward.strategy.SetOwnerStrategy -> io.crnk.core.repository.foward.strategy.SetOwnerStrategy:
    12:12:void <init>() -> <init>
    17:29:void setRelation(java.lang.Object,java.io.Serializable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> setRelation
    33:45:void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> setRelations
    49:66:void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> addRelations
    70:87:void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> removeRelations
io.crnk.core.repository.response.JsonApiResponse -> io.crnk.core.repository.response.JsonApiResponse:
    java.lang.Object entity -> entity
    io.crnk.core.resource.meta.MetaInformation metaInformation -> metaInformation
    io.crnk.core.resource.links.LinksInformation linksInformation -> linksInformation
    java.lang.Iterable errors -> errors
    20:21:void <init>() -> <init>
    24:24:java.lang.Object getEntity() -> getEntity
    28:29:io.crnk.core.repository.response.JsonApiResponse setEntity(java.lang.Object) -> setEntity
    33:33:io.crnk.core.resource.meta.MetaInformation getMetaInformation() -> getMetaInformation
    37:38:io.crnk.core.repository.response.JsonApiResponse setMetaInformation(io.crnk.core.resource.meta.MetaInformation) -> setMetaInformation
    42:42:io.crnk.core.resource.links.LinksInformation getLinksInformation() -> getLinksInformation
    46:47:io.crnk.core.repository.response.JsonApiResponse setLinksInformation(io.crnk.core.resource.links.LinksInformation) -> setLinksInformation
    51:51:java.lang.Iterable getErrors() -> getErrors
    61:61:java.lang.String toString() -> toString
io.crnk.core.resource.RestrictedQueryParamsMembers -> io.crnk.core.resource.RestrictedQueryParamsMembers:
    io.crnk.core.resource.RestrictedQueryParamsMembers filter -> filter
    io.crnk.core.resource.RestrictedQueryParamsMembers sort -> sort
    io.crnk.core.resource.RestrictedQueryParamsMembers group -> group
    io.crnk.core.resource.RestrictedQueryParamsMembers page -> page
    io.crnk.core.resource.RestrictedQueryParamsMembers fields -> fields
    io.crnk.core.resource.RestrictedQueryParamsMembers unknown -> unknown
    io.crnk.core.resource.RestrictedQueryParamsMembers include -> include
    io.crnk.core.resource.RestrictedQueryParamsMembers[] $VALUES -> $VALUES
    3:3:io.crnk.core.resource.RestrictedQueryParamsMembers[] values() -> values
    3:3:io.crnk.core.resource.RestrictedQueryParamsMembers valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:29:void <clinit>() -> <clinit>
io.crnk.core.resource.annotations.JsonApiExposed -> io.crnk.core.resource.annotations.JsonApiExposed:
    boolean value() -> value
io.crnk.core.resource.annotations.JsonApiField -> io.crnk.core.resource.annotations.JsonApiField:
    boolean sortable() -> sortable
    boolean filterable() -> filterable
    boolean postable() -> postable
    boolean patchable() -> patchable
    boolean readable() -> readable
    boolean deletable() -> deletable
    io.crnk.core.resource.annotations.PatchStrategy patchStrategy() -> patchStrategy
io.crnk.core.resource.annotations.JsonApiId -> io.crnk.core.resource.annotations.JsonApiId:
io.crnk.core.resource.annotations.JsonApiIncludeByDefault -> io.crnk.core.resource.annotations.JsonApiIncludeByDefault:
io.crnk.core.resource.annotations.JsonApiLinksInformation -> io.crnk.core.resource.annotations.JsonApiLinksInformation:
io.crnk.core.resource.annotations.JsonApiLookupIncludeAutomatically -> io.crnk.core.resource.annotations.JsonApiLookupIncludeAutomatically:
    boolean overwrite() -> overwrite
io.crnk.core.resource.annotations.JsonApiMetaInformation -> io.crnk.core.resource.annotations.JsonApiMetaInformation:
io.crnk.core.resource.annotations.JsonApiRelation -> io.crnk.core.resource.annotations.JsonApiRelation:
    java.lang.String idField() -> idField
    io.crnk.core.resource.annotations.SerializeType serialize() -> serialize
    io.crnk.core.resource.annotations.LookupIncludeBehavior lookUp() -> lookUp
    java.lang.String opposite() -> opposite
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior repositoryBehavior() -> repositoryBehavior
io.crnk.core.resource.annotations.JsonApiRelationId -> io.crnk.core.resource.annotations.JsonApiRelationId:
io.crnk.core.resource.annotations.JsonApiResource -> io.crnk.core.resource.annotations.JsonApiResource:
    java.lang.String type() -> type
    java.lang.String resourcePath() -> resourcePath
    java.lang.Class pagingBehavior() -> pagingBehavior
    java.lang.Class pagingSpec() -> pagingSpec
    java.lang.Class[] subTypes() -> subTypes
io.crnk.core.resource.annotations.JsonApiToMany -> io.crnk.core.resource.annotations.JsonApiToMany:
    boolean lazy() -> lazy
    java.lang.String opposite() -> opposite
io.crnk.core.resource.annotations.JsonApiToOne -> io.crnk.core.resource.annotations.JsonApiToOne:
    boolean lazy() -> lazy
    java.lang.String opposite() -> opposite
io.crnk.core.resource.annotations.LookupIncludeBehavior -> io.crnk.core.resource.annotations.LookupIncludeBehavior:
    io.crnk.core.resource.annotations.LookupIncludeBehavior DEFAULT -> DEFAULT
    io.crnk.core.resource.annotations.LookupIncludeBehavior NONE -> NONE
    io.crnk.core.resource.annotations.LookupIncludeBehavior AUTOMATICALLY_WHEN_NULL -> AUTOMATICALLY_WHEN_NULL
    io.crnk.core.resource.annotations.LookupIncludeBehavior AUTOMATICALLY_ALWAYS -> AUTOMATICALLY_ALWAYS
    io.crnk.core.resource.annotations.LookupIncludeBehavior[] $VALUES -> $VALUES
    9:9:io.crnk.core.resource.annotations.LookupIncludeBehavior[] values() -> values
    9:9:io.crnk.core.resource.annotations.LookupIncludeBehavior valueOf(java.lang.String) -> valueOf
    9:9:void <init>(java.lang.String,int) -> <init>
    9:27:void <clinit>() -> <clinit>
io.crnk.core.resource.annotations.PatchStrategy -> io.crnk.core.resource.annotations.PatchStrategy:
    io.crnk.core.resource.annotations.PatchStrategy DEFAULT -> DEFAULT
    io.crnk.core.resource.annotations.PatchStrategy MERGE -> MERGE
    io.crnk.core.resource.annotations.PatchStrategy SET -> SET
    io.crnk.core.resource.annotations.PatchStrategy[] $VALUES -> $VALUES
    3:3:io.crnk.core.resource.annotations.PatchStrategy[] values() -> values
    3:3:io.crnk.core.resource.annotations.PatchStrategy valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:17:void <clinit>() -> <clinit>
io.crnk.core.resource.annotations.RelationshipRepositoryBehavior -> io.crnk.core.resource.annotations.RelationshipRepositoryBehavior:
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior DEFAULT -> DEFAULT
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior CUSTOM -> CUSTOM
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior FORWARD_OWNER -> FORWARD_OWNER
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior FORWARD_GET_OPPOSITE_SET_OWNER -> FORWARD_GET_OPPOSITE_SET_OWNER
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior FORWARD_OPPOSITE -> FORWARD_OPPOSITE
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior IMPLICIT_FROM_OWNER -> IMPLICIT_FROM_OWNER
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior IMPLICIT_GET_OPPOSITE_MODIFY_OWNER -> IMPLICIT_GET_OPPOSITE_MODIFY_OWNER
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior[] $VALUES -> $VALUES
    10:10:io.crnk.core.resource.annotations.RelationshipRepositoryBehavior[] values() -> values
    10:10:io.crnk.core.resource.annotations.RelationshipRepositoryBehavior valueOf(java.lang.String) -> valueOf
    10:10:void <init>(java.lang.String,int) -> <init>
    10:72:void <clinit>() -> <clinit>
io.crnk.core.resource.annotations.SerializeType -> io.crnk.core.resource.annotations.SerializeType:
    io.crnk.core.resource.annotations.SerializeType LAZY -> LAZY
    io.crnk.core.resource.annotations.SerializeType ONLY_ID -> ONLY_ID
    io.crnk.core.resource.annotations.SerializeType EAGER -> EAGER
    io.crnk.core.resource.annotations.SerializeType[] $VALUES -> $VALUES
    13:13:io.crnk.core.resource.annotations.SerializeType[] values() -> values
    13:13:io.crnk.core.resource.annotations.SerializeType valueOf(java.lang.String) -> valueOf
    13:13:void <init>(java.lang.String,int) -> <init>
    13:27:void <clinit>() -> <clinit>
io.crnk.core.resource.links.DefaultPagedLinksInformation -> io.crnk.core.resource.links.DefaultPagedLinksInformation:
    java.lang.String first -> first
    java.lang.String last -> last
    java.lang.String next -> next
    java.lang.String prev -> prev
    5:5:void <init>() -> <init>
    21:21:java.lang.String getFirst() -> getFirst
    26:27:void setFirst(java.lang.String) -> setFirst
    31:31:java.lang.String getLast() -> getLast
    36:37:void setLast(java.lang.String) -> setLast
    41:41:java.lang.String getNext() -> getNext
    46:47:void setNext(java.lang.String) -> setNext
    51:51:java.lang.String getPrev() -> getPrev
    56:57:void setPrev(java.lang.String) -> setPrev
io.crnk.core.resource.links.LinksInformation -> io.crnk.core.resource.links.LinksInformation:
io.crnk.core.resource.links.PagedLinksInformation -> io.crnk.core.resource.links.PagedLinksInformation:
    java.lang.String getFirst() -> getFirst
    void setFirst(java.lang.String) -> setFirst
    java.lang.String getLast() -> getLast
    void setLast(java.lang.String) -> setLast
    java.lang.String getNext() -> getNext
    void setNext(java.lang.String) -> setNext
    java.lang.String getPrev() -> getPrev
    void setPrev(java.lang.String) -> setPrev
io.crnk.core.resource.links.RelatedLinksInformation -> io.crnk.core.resource.links.RelatedLinksInformation:
io.crnk.core.resource.links.SelfLinksInformation -> io.crnk.core.resource.links.SelfLinksInformation:
    java.lang.String getSelf() -> getSelf
    void setSelf(java.lang.String) -> setSelf
io.crnk.core.resource.list.DefaultResourceList -> io.crnk.core.resource.list.DefaultResourceList:
    io.crnk.core.resource.links.LinksInformation links -> links
    io.crnk.core.resource.meta.MetaInformation meta -> meta
    23:24:void <init>() -> <init>
    27:28:void <init>(io.crnk.core.resource.meta.MetaInformation,io.crnk.core.resource.links.LinksInformation) -> <init>
    31:34:void <init>(java.util.List,io.crnk.core.resource.meta.MetaInformation,io.crnk.core.resource.links.LinksInformation) -> <init>
    52:60:io.crnk.core.resource.meta.MetaInformation getMeta(java.lang.Class) -> getMeta
    66:66:io.crnk.core.resource.links.LinksInformation getLinks() -> getLinks
    70:71:void setLinks(io.crnk.core.resource.links.LinksInformation) -> setLinks
    75:75:io.crnk.core.resource.meta.MetaInformation getMeta() -> getMeta
    79:80:void setMeta(io.crnk.core.resource.meta.MetaInformation) -> setMeta
io.crnk.core.resource.list.LinksContainer -> io.crnk.core.resource.list.LinksContainer:
    com.fasterxml.jackson.databind.node.ObjectNode getLinks() -> getLinks
    void setLinks(com.fasterxml.jackson.databind.node.ObjectNode) -> setLinks
io.crnk.core.resource.list.ResourceList -> io.crnk.core.resource.list.ResourceList:
    io.crnk.core.resource.links.LinksInformation getLinks() -> getLinks
    io.crnk.core.resource.meta.MetaInformation getMeta() -> getMeta
    io.crnk.core.resource.meta.MetaInformation getMeta(java.lang.Class) -> getMeta
io.crnk.core.resource.meta.DefaultPagedMetaInformation -> io.crnk.core.resource.meta.DefaultPagedMetaInformation:
    java.lang.Long totalResourceCount -> totalResourceCount
    5:5:void <init>() -> <init>
    12:12:java.lang.Long getTotalResourceCount() -> getTotalResourceCount
    17:18:void setTotalResourceCount(java.lang.Long) -> setTotalResourceCount
io.crnk.core.resource.meta.HasMoreResourcesMetaInformation -> io.crnk.core.resource.meta.HasMoreResourcesMetaInformation:
    java.lang.Boolean getHasMoreResources() -> getHasMoreResources
    void setHasMoreResources(java.lang.Boolean) -> setHasMoreResources
io.crnk.core.resource.meta.MetaContainer -> io.crnk.core.resource.meta.MetaContainer:
    void setMeta(com.fasterxml.jackson.databind.node.ObjectNode) -> setMeta
io.crnk.core.resource.meta.MetaInformation -> io.crnk.core.resource.meta.MetaInformation:
io.crnk.core.resource.meta.PagedMetaInformation -> io.crnk.core.resource.meta.PagedMetaInformation:
    java.lang.Long getTotalResourceCount() -> getTotalResourceCount
    void setTotalResourceCount(java.lang.Long) -> setTotalResourceCount
io.crnk.core.utils.Nullable -> io.crnk.core.utils.Nullable:
    io.crnk.core.utils.Nullable EMPTY -> EMPTY
    io.crnk.core.utils.Nullable NULL -> NULL
    java.lang.Object value -> value
    boolean present -> present
    18:21:void <init>() -> <init>
    23:26:void <init>(java.lang.Object) -> <init>
    30:30:io.crnk.core.utils.Nullable empty() -> empty
    34:34:io.crnk.core.utils.Nullable of(java.lang.Object) -> of
    42:42:io.crnk.core.utils.Nullable nullValue() -> nullValue
    46:46:boolean isPresent() -> isPresent
    50:53:java.lang.Object get() -> get
    58:62:int hashCode() -> hashCode
    67:71:boolean equals(java.lang.Object) -> equals
    10:12:void <clinit>() -> <clinit>
io.crnk.core.utils.Prioritizable -> io.crnk.core.utils.Prioritizable:
    int getPriority() -> getPriority
    24:50:java.util.List prioritze(java.util.List) -> prioritze
io.crnk.core.utils.Prioritizable$1 -> io.crnk.core.utils.Prioritizable$1:
    java.util.Map val$indexMap -> val$indexMap
    31:31:void <init>(java.util.Map) -> <init>
    34:40:int compare(java.lang.Object,java.lang.Object) -> compare
    44:47:int getPriority(java.lang.Object) -> getPriority
io.crnk.core.utils.Supplier -> io.crnk.core.utils.Supplier:
    java.lang.Object get() -> get
io.crnk.example.vertx.AppComponent -> io.crnk.example.vertx.AppComponent:
    io.crnk.example.vertx.AppServer server() -> server
io.crnk.example.vertx.AppModule -> io.crnk.example.vertx.AppModule:
    12:12:void <init>() -> <init>
    18:18:io.crnk.core.repository.ResourceRepositoryV2 projectRepository() -> projectRepository
io.crnk.example.vertx.AppModule_ProjectRepositoryFactory -> io.crnk.example.vertx.AppModule_ProjectRepositoryFactory:
    io.crnk.example.vertx.AppModule module -> module
    15:17:void <init>(io.crnk.example.vertx.AppModule) -> <init>
    21:21:io.crnk.core.repository.ResourceRepositoryV2 get() -> get
    25:25:io.crnk.core.repository.ResourceRepositoryV2 provideInstance(io.crnk.example.vertx.AppModule) -> provideInstance
    29:29:io.crnk.example.vertx.AppModule_ProjectRepositoryFactory create(io.crnk.example.vertx.AppModule) -> create
    33:34:io.crnk.core.repository.ResourceRepositoryV2 proxyProjectRepository(io.crnk.example.vertx.AppModule) -> proxyProjectRepository
    8:8:java.lang.Object get() -> get
io.crnk.example.vertx.AppServer -> io.crnk.example.vertx.AppServer:
    io.crnk.example.vertx.CrnkVerticle vehicle -> vehicle
    io.vertx.core.Vertx vertx -> vertx
    18:20:void <init>(io.crnk.example.vertx.CrnkVerticle) -> <init>
    23:40:void start() -> start
    50:50:java.lang.String getBaseUrl() -> getBaseUrl
    28:34:void lambda$start$0(io.reactivex.subjects.SingleSubject,io.vertx.core.AsyncResult) -> lambda$start$0
io.crnk.example.vertx.CrnkVerticle -> io.crnk.example.vertx.CrnkVerticle:
    org.slf4j.Logger LOGGER -> LOGGER
    java.util.Set repositories -> repositories
    int port -> port
    21:26:void <init>(java.util.Set) -> <init>
    30:47:void start() -> start
    50:50:int getPort() -> getPort
    43:43:void lambda$start$4(java.lang.Throwable) -> lambda$start$4
    43:43:void lambda$start$3(io.vertx.reactivex.core.http.HttpServerRequest) -> lambda$start$3
    42:42:org.reactivestreams.Publisher lambda$start$2(io.crnk.setup.vertx.CrnkVertxHandler,io.vertx.reactivex.core.http.HttpServerRequest) -> lambda$start$2
    34:39:void lambda$start$1(io.crnk.core.boot.CrnkBoot) -> lambda$start$1
    35:35:void lambda$start$0(io.crnk.core.module.SimpleModule,io.crnk.core.repository.ResourceRepositoryV2) -> lambda$start$0
    17:17:void <clinit>() -> <clinit>
io.crnk.example.vertx.DaggerAppComponent -> io.crnk.example.vertx.DaggerAppComponent:
    javax.inject.Provider projectRepositoryProvider -> projectRepositoryProvider
    18:20:void <init>(io.crnk.example.vertx.DaggerAppComponent$Builder) -> <init>
    23:23:io.crnk.example.vertx.DaggerAppComponent$Builder builder() -> builder
    31:31:java.util.Set getSetOfResourceRepositoryV2() -> getSetOfResourceRepositoryV2
    35:35:io.crnk.example.vertx.CrnkVerticle getCrnkVerticle() -> getCrnkVerticle
    40:42:void initialize(io.crnk.example.vertx.DaggerAppComponent$Builder) -> initialize
    46:46:io.crnk.example.vertx.AppServer server() -> server
    15:15:void <init>(io.crnk.example.vertx.DaggerAppComponent$Builder,io.crnk.example.vertx.DaggerAppComponent$1) -> <init>
io.crnk.example.vertx.DaggerAppComponent$1 -> io.crnk.example.vertx.DaggerAppComponent$1:
io.crnk.example.vertx.DaggerAppComponent$Builder -> io.crnk.example.vertx.DaggerAppComponent$Builder:
    io.crnk.example.vertx.AppModule appModule -> appModule
    52:52:void <init>() -> <init>
    55:58:io.crnk.example.vertx.AppComponent build() -> build
    49:49:void <init>(io.crnk.example.vertx.DaggerAppComponent$1) -> <init>
    49:49:io.crnk.example.vertx.AppModule access$100(io.crnk.example.vertx.DaggerAppComponent$Builder) -> access$100
io.crnk.example.vertx.VertxApplication -> io.crnk.example.vertx.VertxApplication:
    org.slf4j.Logger LOGGER -> LOGGER
    6:6:void <init>() -> <init>
    11:17:void main(java.lang.String[]) -> main
    8:8:void <clinit>() -> <clinit>
io.crnk.example.vertx.model.Project -> io.crnk.example.vertx.model.Project:
    java.lang.Long id -> id
    java.lang.String name -> name
    14:15:void <init>() -> <init>
    17:20:void <init>(long,java.lang.String) -> <init>
    23:23:java.lang.Long getId() -> getId
    27:28:void setId(java.lang.Long) -> setId
io.crnk.example.vertx.repository.ProjectRepository -> io.crnk.example.vertx.repository.ProjectRepository:
    java.util.concurrent.atomic.AtomicLong ID_GENERATOR -> ID_GENERATOR
    java.util.Map projects -> projects
    16:21:void <init>() -> <init>
    25:26:void delete(java.lang.Long) -> delete
    30:34:io.crnk.example.vertx.model.Project save(io.crnk.example.vertx.model.Project) -> save
    39:39:io.crnk.core.resource.list.ResourceList findAll(io.crnk.core.queryspec.QuerySpec) -> findAll
    12:12:void delete(java.io.Serializable) -> delete
    12:12:java.lang.Object save(java.lang.Object) -> save
    14:14:void <clinit>() -> <clinit>
io.crnk.home.HomeFormat -> io.crnk.home.HomeFormat:
    io.crnk.home.HomeFormat JSON_HOME -> JSON_HOME
    io.crnk.home.HomeFormat JSON_API -> JSON_API
    io.crnk.home.HomeFormat[] $VALUES -> $VALUES
    3:3:io.crnk.home.HomeFormat[] values() -> values
    3:3:io.crnk.home.HomeFormat valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
io.crnk.home.HomeModule -> io.crnk.home.HomeModule:
    org.slf4j.Logger LOGGER -> LOGGER
    java.util.List extensions -> extensions
    io.crnk.home.HomeFormat defaultFormat -> defaultFormat
    io.crnk.core.module.Module$ModuleContext moduleContext -> moduleContext
    io.crnk.core.engine.http.HttpRequestProcessor requestProcessor -> requestProcessor
    boolean potentialFilterIssues -> potentialFilterIssues
    55:59:void <init>() -> <init>
    62:62:io.crnk.home.HomeModule create() -> create
    66:68:io.crnk.home.HomeModule create(io.crnk.home.HomeFormat) -> create
    77:77:java.lang.String getModuleName() -> getModuleName
    82:85:void setupModule(io.crnk.core.module.Module$ModuleContext) -> setupModule
    164:203:java.util.List list(java.lang.String,io.crnk.core.engine.query.QueryContext) -> list
    211:216:java.lang.String getChildName(java.lang.String,java.lang.String) -> getChildName
    220:248:io.crnk.core.engine.http.HttpResponse getResponse(io.crnk.core.engine.http.HttpRequestContext,java.util.List) -> getResponse
    252:272:io.crnk.core.engine.http.HttpResponse writeJsonHome(io.crnk.core.engine.http.HttpRequestContext,java.util.List) -> writeJsonHome
    278:279:void setExtensions(java.util.List) -> setExtensions
    284:284:void init() -> init
    199:199:boolean lambda$list$1(java.lang.String) -> lambda$list$1
    198:198:java.lang.String lambda$list$0(java.lang.String,java.lang.String) -> lambda$list$0
    39:39:io.crnk.core.module.Module$ModuleContext access$000(io.crnk.home.HomeModule) -> access$000
    39:39:io.crnk.home.HomeFormat access$100(io.crnk.home.HomeModule) -> access$100
    39:39:io.crnk.core.engine.http.HttpResponse access$200(io.crnk.home.HomeModule,io.crnk.core.engine.http.HttpRequestContext,java.util.List) -> access$200
    39:39:io.crnk.core.engine.http.HttpResponse access$300(io.crnk.home.HomeModule,io.crnk.core.engine.http.HttpRequestContext,java.util.List) -> access$300
    41:41:void <clinit>() -> <clinit>
io.crnk.home.HomeModule$HomeHttpRequestProcessor -> io.crnk.home.HomeModule$HomeHttpRequestProcessor:
    io.crnk.home.HomeModule this$0 -> this$0
    87:87:void <init>(io.crnk.home.HomeModule) -> <init>
    91:91:boolean supportsAsync() -> supportsAsync
    96:120:boolean accepts(io.crnk.core.engine.http.HttpRequestContext) -> accepts
    126:154:io.crnk.core.engine.result.Result processAsync(io.crnk.core.engine.http.HttpRequestContext) -> processAsync
    159:159:int getPriority() -> getPriority
io.crnk.home.HomeModuleExtension -> io.crnk.home.HomeModuleExtension:
    java.util.List paths -> paths
    10:12:void <init>() -> <init>
    16:16:java.lang.Class getTargetModule() -> getTargetModule
    21:21:boolean isOptional() -> isOptional
    29:29:java.util.List getPaths() -> getPaths
io.crnk.legacy.locator.JsonServiceLocator -> io.crnk.legacy.locator.JsonServiceLocator:
    java.lang.Object getInstance(java.lang.Class) -> getInstance
io.crnk.legacy.locator.SampleJsonServiceLocator -> io.crnk.legacy.locator.SampleJsonServiceLocator:
    9:9:void <init>() -> <init>
    13:15:java.lang.Object getInstance(java.lang.Class) -> getInstance
io.crnk.legacy.queryParams.DefaultQueryParamsConverter -> io.crnk.legacy.queryParams.DefaultQueryParamsConverter:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> resourceRegistry
    36:38:void <init>(io.crnk.core.engine.registry.ResourceRegistry) -> <init>
    42:50:io.crnk.legacy.queryParams.QueryParams fromParams(java.lang.Class,io.crnk.core.queryspec.QuerySpec) -> fromParams
    54:59:java.lang.String getResourceType(java.lang.Class) -> getResourceType
    63:74:void applyFiltering(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> applyFiltering
    77:90:void applyFilterSpec(java.util.Map,io.crnk.core.queryspec.FilterSpec) -> applyFilterSpec
    93:93:java.lang.String joinPath(java.util.List) -> joinPath
    97:110:void applyIncludedFields(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> applyIncludedFields
    113:129:void applyRelatedFields(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> applyRelatedFields
    132:147:void applySorting(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> applySorting
    150:159:void applyPaging(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> applyPaging
io.crnk.legacy.queryParams.QueryParams -> io.crnk.legacy.queryParams.QueryParams:
    io.crnk.legacy.queryParams.params.TypedParams filters -> filters
    io.crnk.legacy.queryParams.params.TypedParams sorting -> sorting
    io.crnk.legacy.queryParams.params.TypedParams grouping -> grouping
    io.crnk.legacy.queryParams.params.TypedParams includedFields -> includedFields
    io.crnk.legacy.queryParams.params.TypedParams includedRelations -> includedRelations
    java.util.Map pagination -> pagination
    boolean warningShown -> warningShown
    36:43:void <init>() -> <init>
    50:51:void setFilters(io.crnk.legacy.queryParams.params.TypedParams) -> setFilters
    58:59:void setSorting(io.crnk.legacy.queryParams.params.TypedParams) -> setSorting
    66:67:void setGrouping(io.crnk.legacy.queryParams.params.TypedParams) -> setGrouping
    74:75:void setPagination(java.util.Map) -> setPagination
    82:83:void setIncludedFields(io.crnk.legacy.queryParams.params.TypedParams) -> setIncludedFields
    90:91:void setIncludedRelations(io.crnk.legacy.queryParams.params.TypedParams) -> setIncludedRelations
    95:101:int hashCode() -> hashCode
    106:130:boolean equals(java.lang.Object) -> equals
    135:135:java.lang.String toString() -> toString
    34:34:void <clinit>() -> <clinit>
io.crnk.legacy.queryParams.RestrictedPaginationKeys -> io.crnk.legacy.queryParams.RestrictedPaginationKeys:
    io.crnk.legacy.queryParams.RestrictedPaginationKeys offset -> offset
    io.crnk.legacy.queryParams.RestrictedPaginationKeys limit -> limit
    io.crnk.legacy.queryParams.RestrictedPaginationKeys number -> number
    io.crnk.legacy.queryParams.RestrictedPaginationKeys size -> size
    io.crnk.legacy.queryParams.RestrictedPaginationKeys[] $VALUES -> $VALUES
    6:6:io.crnk.legacy.queryParams.RestrictedPaginationKeys[] values() -> values
    6:6:io.crnk.legacy.queryParams.RestrictedPaginationKeys valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    6:8:void <clinit>() -> <clinit>
io.crnk.legacy.queryParams.RestrictedSortingValues -> io.crnk.legacy.queryParams.RestrictedSortingValues:
    io.crnk.legacy.queryParams.RestrictedSortingValues asc -> asc
    io.crnk.legacy.queryParams.RestrictedSortingValues desc -> desc
    io.crnk.legacy.queryParams.RestrictedSortingValues[] $VALUES -> $VALUES
    8:8:io.crnk.legacy.queryParams.RestrictedSortingValues[] values() -> values
    8:8:io.crnk.legacy.queryParams.RestrictedSortingValues valueOf(java.lang.String) -> valueOf
    9:9:void <init>(java.lang.String,int) -> <init>
    8:17:void <clinit>() -> <clinit>
io.crnk.legacy.queryParams.include.Inclusion -> io.crnk.legacy.queryParams.include.Inclusion:
    java.lang.String path -> path
    java.util.List pathList -> pathList
    15:21:void <init>(java.lang.String) -> <init>
    24:24:java.lang.String getPath() -> getPath
    33:42:boolean equals(java.lang.Object) -> equals
    48:48:int hashCode() -> hashCode
    53:53:java.lang.String toString() -> toString
io.crnk.legacy.queryParams.params.FilterParams -> io.crnk.legacy.queryParams.params.FilterParams:
    java.util.Map params -> params
    8:12:void <init>(java.util.Map) -> <init>
    16:16:int hashCode() -> hashCode
    26:31:boolean equals(java.lang.Object) -> equals
    36:36:java.lang.String toString() -> toString
io.crnk.legacy.queryParams.params.IncludedFieldsParams -> io.crnk.legacy.queryParams.params.IncludedFieldsParams:
    java.util.Set params -> params
    8:10:void <init>(java.util.Set) -> <init>
    13:13:java.util.Set getParams() -> getParams
    18:23:boolean equals(java.lang.Object) -> equals
    28:28:int hashCode() -> hashCode
    33:33:java.lang.String toString() -> toString
io.crnk.legacy.queryParams.params.IncludedRelationsParams -> io.crnk.legacy.queryParams.params.IncludedRelationsParams:
    java.util.Set params -> params
    10:12:void <init>(java.util.Set) -> <init>
    15:15:java.util.Set getParams() -> getParams
    20:25:boolean equals(java.lang.Object) -> equals
    30:30:int hashCode() -> hashCode
    35:35:java.lang.String toString() -> toString
io.crnk.legacy.queryParams.params.SortingParams -> io.crnk.legacy.queryParams.params.SortingParams:
    java.util.Map params -> params
    9:13:void <init>(java.util.Map) -> <init>
    21:21:int hashCode() -> hashCode
    26:31:boolean equals(java.lang.Object) -> equals
    36:36:java.lang.String toString() -> toString
io.crnk.legacy.queryParams.params.TypedParams -> io.crnk.legacy.queryParams.params.TypedParams:
    java.util.Map params -> params
    12:16:void <init>(java.util.Map) -> <init>
    19:19:java.util.Map getParams() -> getParams
    24:29:boolean equals(java.lang.Object) -> equals
    34:34:int hashCode() -> hashCode
    39:39:java.lang.String toString() -> toString
io.crnk.legacy.registry.DefaultResourceInformationProviderContext -> io.crnk.legacy.registry.DefaultResourceInformationProviderContext:
    io.crnk.core.engine.information.InformationBuilder informationBuilder -> informationBuilder
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> objectMapper
    io.crnk.core.engine.information.resource.ResourceInformationProvider provider -> provider
    io.crnk.core.engine.parser.TypeParser typeParser -> typeParser
    18:26:void <init>(io.crnk.core.engine.information.resource.ResourceInformationProvider,io.crnk.core.engine.information.InformationBuilder,io.crnk.core.engine.parser.TypeParser,com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    30:30:java.lang.String getResourceType(java.lang.Class) -> getResourceType
    35:35:boolean accept(java.lang.Class) -> accept
    40:40:io.crnk.core.engine.parser.TypeParser getTypeParser() -> getTypeParser
    45:45:io.crnk.core.engine.information.InformationBuilder getInformationBuilder() -> getInformationBuilder
    50:51:com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> getObjectMapper
io.crnk.legacy.repository.LinksRepository -> io.crnk.legacy.repository.LinksRepository:
    io.crnk.core.resource.links.LinksInformation getLinksInformation(java.lang.Iterable,io.crnk.legacy.queryParams.QueryParams) -> getLinksInformation
io.crnk.legacy.repository.MetaRepository -> io.crnk.legacy.repository.MetaRepository:
    io.crnk.core.resource.meta.MetaInformation getMetaInformation(java.lang.Iterable,io.crnk.legacy.queryParams.QueryParams) -> getMetaInformation
io.crnk.legacy.repository.RelationshipRepository -> io.crnk.legacy.repository.RelationshipRepository:
    void setRelation(java.lang.Object,java.io.Serializable,java.lang.String) -> setRelation
    void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> setRelations
    void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> addRelations
    void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> removeRelations
    java.lang.Object findOneTarget(java.io.Serializable,java.lang.String,io.crnk.legacy.queryParams.QueryParams) -> findOneTarget
    java.lang.Iterable findManyTargets(java.io.Serializable,java.lang.String,io.crnk.legacy.queryParams.QueryParams) -> findManyTargets
io.crnk.legacy.repository.ResourceRepository -> io.crnk.legacy.repository.ResourceRepository:
    java.lang.Object findOne(java.io.Serializable,io.crnk.legacy.queryParams.QueryParams) -> findOne
    java.lang.Iterable findAll(io.crnk.legacy.queryParams.QueryParams) -> findAll
    java.lang.Iterable findAll(java.lang.Iterable,io.crnk.legacy.queryParams.QueryParams) -> findAll
    java.lang.Object save(java.lang.Object) -> save
    void delete(java.io.Serializable) -> delete
io.crnk.legacy.repository.information.DefaultRelationshipRepositoryInformationProvider -> io.crnk.legacy.repository.information.DefaultRelationshipRepositoryInformationProvider:
    16:16:void <init>() -> <init>
    20:21:boolean accept(java.lang.Object) -> accept
    26:28:boolean accept(java.lang.Class) -> accept
    33:33:io.crnk.core.engine.information.repository.RepositoryInformation build(java.lang.Object,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> build
    44:60:io.crnk.core.engine.information.repository.RepositoryInformation buildInformation(java.lang.Object,java.lang.Class,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> buildInformation
    65:65:io.crnk.core.engine.information.repository.RepositoryMethodAccess getAccess(java.lang.Object) -> getAccess
    69:77:java.lang.Class getSourceResourceClass(java.lang.Object,java.lang.Class) -> getSourceResourceClass
    82:90:java.lang.Class getTargetResourceClass(java.lang.Object,java.lang.Class) -> getTargetResourceClass
io.crnk.legacy.repository.information.DefaultResourceRepositoryInformationProvider -> io.crnk.legacy.repository.information.DefaultResourceRepositoryInformationProvider:
    22:22:void <init>() -> <init>
    26:28:boolean accept(java.lang.Object) -> accept
    33:36:boolean accept(java.lang.Class) -> accept
    46:46:io.crnk.core.engine.information.repository.RepositoryInformation build(java.lang.Object,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> build
    51:63:io.crnk.core.engine.information.repository.RepositoryInformation build(java.lang.Object,java.lang.Class,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> build
    68:68:io.crnk.core.engine.information.repository.RepositoryMethodAccess getAccess(java.lang.Object) -> getAccess
    72:72:java.util.Map buildActions(java.lang.Class) -> buildActions
    76:76:java.lang.String getPath(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object) -> getPath
    80:81:boolean isExposed(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object) -> isExposed
    86:101:java.lang.Class getResourceClass(java.lang.Object,java.lang.Class) -> getResourceClass
io.crnk.reactive.ReactiveModule -> io.crnk.reactive.ReactiveModule:
    reactor.core.scheduler.Scheduler workerScheduler -> workerScheduler
    14:16:void <init>() -> <init>
    21:21:java.lang.String getModuleName() -> getModuleName
    26:30:void setupModule(io.crnk.core.module.Module$ModuleContext) -> setupModule
io.crnk.reactive.ReactiveModule$ReactiveRelationshipRepositoryInformationProvider -> io.crnk.reactive.ReactiveModule$ReactiveRelationshipRepositoryInformationProvider:
    io.crnk.reactive.ReactiveModule this$0 -> this$0
    61:61:void <init>(io.crnk.reactive.ReactiveModule) -> <init>
    65:65:boolean accept(java.lang.Class) -> accept
io.crnk.reactive.ReactiveModule$ReactiveResourceRepositoryInformationProvider -> io.crnk.reactive.ReactiveModule$ReactiveResourceRepositoryInformationProvider:
    io.crnk.reactive.ReactiveModule this$0 -> this$0
    43:43:void <init>(io.crnk.reactive.ReactiveModule) -> <init>
    47:47:boolean accept(java.lang.Class) -> accept
    51:56:java.lang.Class getResourceClass(java.lang.Object,java.lang.Class) -> getResourceClass
io.crnk.reactive.internal.MonoResult -> io.crnk.reactive.internal.MonoResult:
    reactor.core.publisher.Mono mono -> mono
    15:17:void <init>(reactor.core.publisher.Mono) -> <init>
    21:21:java.lang.Object get() -> get
    26:26:io.crnk.core.engine.result.Result map(java.util.function.Function) -> map
    31:35:io.crnk.core.engine.result.Result onErrorResume(java.util.function.Function) -> onErrorResume
    45:45:io.crnk.core.engine.result.Result doWork(java.util.function.Consumer) -> doWork
    50:52:io.crnk.core.engine.result.Result zipWith(io.crnk.core.engine.result.Result,java.util.function.BiFunction) -> zipWith
    57:61:io.crnk.core.engine.result.Result merge(java.util.function.Function) -> merge
    70:70:reactor.core.publisher.Mono getMono() -> getMono
    58:59:reactor.core.publisher.Mono lambda$merge$1(java.util.function.Function,java.lang.Object) -> lambda$merge$1
    32:33:reactor.core.publisher.Mono lambda$onErrorResume$0(java.util.function.Function,java.lang.Throwable) -> lambda$onErrorResume$0
io.crnk.reactive.internal.MonoResultFactory -> io.crnk.reactive.internal.MonoResultFactory:
    java.lang.ThreadLocal threadLocal -> threadLocal
    15:19:void <init>() -> <init>
    23:24:io.crnk.core.engine.result.Result just(java.lang.Object) -> just
    28:32:io.crnk.core.engine.result.Result toResult(reactor.core.publisher.Mono) -> toResult
    37:45:io.crnk.core.engine.result.Result zip(java.util.List) -> zip
    50:50:boolean isAsync() -> isAsync
    55:59:java.lang.Object getThreadContext() -> getThreadContext
    64:64:boolean hasThreadContext() -> hasThreadContext
    69:70:io.crnk.core.engine.result.Result attachContext(io.crnk.core.engine.result.Result,java.lang.Object) -> attachContext
    75:75:io.crnk.core.engine.result.Result getContext() -> getContext
    80:81:void setThreadContext(java.lang.Object) -> setThreadContext
    85:86:void clearContext() -> clearContext
    75:75:java.lang.Object lambda$getContext$2(reactor.util.context.Context) -> lambda$getContext$2
    44:44:java.util.List lambda$zip$1(java.lang.Object[]) -> lambda$zip$1
    30:30:reactor.util.context.Context lambda$toResult$0(java.lang.Object,reactor.util.context.Context) -> lambda$toResult$0
io.crnk.reactive.internal.adapter.ReactiveManyRelationshipRepositoryAdapter -> io.crnk.reactive.internal.adapter.ReactiveManyRelationshipRepositoryAdapter:
    io.crnk.reactive.repository.ReactiveManyRelationshipRepository repository -> repository
    io.crnk.core.engine.information.resource.ResourceField field -> field
    32:35:void <init>(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,io.crnk.core.module.ModuleRegistry,io.crnk.reactive.repository.ReactiveManyRelationshipRepository) -> <init>
    39:39:io.crnk.core.engine.result.Result setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> setRelation
    45:48:io.crnk.core.engine.result.Result setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> setRelations
    54:57:io.crnk.core.engine.result.Result addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> addRelations
    63:66:io.crnk.core.engine.result.Result removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> removeRelations
    71:71:io.crnk.core.engine.result.Result findOneTarget(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findOneTarget
    76:81:io.crnk.core.engine.result.Result findManyTargets(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findManyTargets
    87:90:io.crnk.core.engine.result.Result findBulkManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findBulkManyTargets
    96:96:io.crnk.core.engine.result.Result findBulkOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findBulkOneTargets
    102:102:java.lang.Object getRelationshipRepository() -> getRelationshipRepository
io.crnk.reactive.internal.adapter.ReactiveOneRelationshipRepositoryAdapter -> io.crnk.reactive.internal.adapter.ReactiveOneRelationshipRepositoryAdapter:
    io.crnk.reactive.repository.ReactiveOneRelationshipRepository repository -> repository
    io.crnk.core.engine.information.resource.ResourceField field -> field
    31:34:void <init>(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,io.crnk.core.module.ModuleRegistry,io.crnk.reactive.repository.ReactiveOneRelationshipRepository) -> <init>
    38:41:io.crnk.core.engine.result.Result setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> setRelation
    46:50:io.crnk.core.engine.result.Result findOneTarget(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findOneTarget
    56:59:io.crnk.core.engine.result.Result findBulkOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findBulkOneTargets
    64:64:io.crnk.core.engine.result.Result setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> setRelations
    69:69:io.crnk.core.engine.result.Result addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> addRelations
    74:74:io.crnk.core.engine.result.Result removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> removeRelations
    79:79:io.crnk.core.engine.result.Result findManyTargets(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findManyTargets
    85:85:io.crnk.core.engine.result.Result findBulkManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findBulkManyTargets
    90:90:java.lang.Object getRelationshipRepository() -> getRelationshipRepository
io.crnk.reactive.internal.adapter.ReactiveRepositoryAdapterBase -> io.crnk.reactive.internal.adapter.ReactiveRepositoryAdapterBase:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    io.crnk.core.engine.result.ResultFactory resultFactory -> resultFactory
    28:31:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    37:48:io.crnk.core.engine.result.Result toResponses(reactor.core.publisher.Mono,boolean,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> toResponses
    52:58:io.crnk.core.repository.response.JsonApiResponse toSingleResult(java.util.Map) -> toSingleResult
    62:64:io.crnk.core.engine.result.Result toResponse(reactor.core.publisher.Mono,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> toResponse
    68:79:void setInformation(io.crnk.core.repository.response.JsonApiResponse,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> setInformation
    64:64:void lambda$toResponse$2(io.crnk.core.engine.dispatcher.RepositoryRequestSpec,java.lang.Object) -> lambda$toResponse$2
    63:63:java.lang.Object lambda$toResponse$1(java.lang.Object) -> lambda$toResponse$1
    38:46:java.util.Map lambda$toResponses$0(io.crnk.core.engine.dispatcher.RepositoryRequestSpec,java.util.Map) -> lambda$toResponses$0
io.crnk.reactive.internal.adapter.ReactiveRepositoryAdapterFactory -> io.crnk.reactive.internal.adapter.ReactiveRepositoryAdapterFactory:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.module.ModuleRegistry moduleRegistry -> moduleRegistry
    reactor.core.scheduler.Scheduler workerScheduler -> workerScheduler
    30:33:void <init>(io.crnk.core.module.ModuleRegistry,reactor.core.scheduler.Scheduler) -> <init>
    41:41:boolean accepts(java.lang.Object) -> accepts
    46:46:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter createResourceRepositoryAdapter(io.crnk.core.engine.information.repository.ResourceRepositoryInformation,java.lang.Object) -> createResourceRepositoryAdapter
    51:54:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter createRelationshipRepositoryAdapter(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,java.lang.Object) -> createRelationshipRepositoryAdapter
    59:67:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter) -> decorate
    72:80:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> decorate
    24:24:void <clinit>() -> <clinit>
io.crnk.reactive.internal.adapter.ReactiveResourceRepositoryAdapter -> io.crnk.reactive.internal.adapter.ReactiveResourceRepositoryAdapter:
    io.crnk.reactive.repository.ReactiveResourceRepository repository -> repository
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation repositoryInformation -> repositoryInformation
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> resourceInformation
    30:34:void <init>(io.crnk.core.engine.information.repository.ResourceRepositoryInformation,io.crnk.core.module.ModuleRegistry,io.crnk.reactive.repository.ReactiveResourceRepository) -> <init>
    39:43:io.crnk.core.engine.result.Result findOne(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> findOne
    49:53:io.crnk.core.engine.result.Result findAll(io.crnk.core.engine.query.QueryAdapter) -> findAll
    58:62:io.crnk.core.engine.result.Result findAll(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> findAll
    67:70:io.crnk.core.engine.result.Result update(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> update
    75:78:io.crnk.core.engine.result.Result create(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> create
    83:86:io.crnk.core.engine.result.Result delete(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> delete
    91:91:java.lang.Object getResourceRepository() -> getResourceRepository
    96:96:io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> getRepositoryInformation
io.crnk.reactive.internal.adapter.Worker -> io.crnk.reactive.internal.adapter.Worker:
    io.crnk.core.engine.http.HttpRequestContextProvider requestContextProvider -> requestContextProvider
    reactor.core.scheduler.Scheduler scheduler -> scheduler
    19:22:void <init>(io.crnk.core.engine.http.HttpRequestContextProvider,reactor.core.scheduler.Scheduler) -> <init>
    25:25:io.crnk.core.engine.result.Result work(java.util.concurrent.Callable) -> work
    26:40:io.crnk.core.engine.result.Result lambda$work$1(java.util.concurrent.Callable,io.crnk.core.engine.http.HttpRequestContext) -> lambda$work$1
    27:38:java.lang.Object lambda$work$0(io.crnk.core.engine.http.HttpRequestContext,java.util.concurrent.Callable) -> lambda$work$0
io.crnk.reactive.internal.adapter.WorkerRelationshipRepositoryAdapter -> io.crnk.reactive.internal.adapter.WorkerRelationshipRepositoryAdapter:
    io.crnk.reactive.internal.adapter.Worker worker -> worker
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter adapter -> adapter
    21:24:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,reactor.core.scheduler.Scheduler,io.crnk.core.engine.http.HttpRequestContextProvider) -> <init>
    28:28:io.crnk.core.engine.result.Result setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> setRelation
    33:33:io.crnk.core.engine.result.Result setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> setRelations
    38:38:io.crnk.core.engine.result.Result addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> addRelations
    43:43:io.crnk.core.engine.result.Result removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> removeRelations
    48:48:io.crnk.core.engine.result.Result findOneTarget(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findOneTarget
    53:53:io.crnk.core.engine.result.Result findManyTargets(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findManyTargets
    58:58:io.crnk.core.engine.result.Result findBulkManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findBulkManyTargets
    63:63:io.crnk.core.engine.result.Result findBulkOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> findBulkOneTargets
    68:68:java.lang.Object getRelationshipRepository() -> getRelationshipRepository
    63:63:io.crnk.core.engine.result.Result lambda$findBulkOneTargets$7(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> lambda$findBulkOneTargets$7
    58:58:io.crnk.core.engine.result.Result lambda$findBulkManyTargets$6(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> lambda$findBulkManyTargets$6
    53:53:io.crnk.core.engine.result.Result lambda$findManyTargets$5(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> lambda$findManyTargets$5
    48:48:io.crnk.core.engine.result.Result lambda$findOneTarget$4(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> lambda$findOneTarget$4
    43:43:io.crnk.core.engine.result.Result lambda$removeRelations$3(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> lambda$removeRelations$3
    38:38:io.crnk.core.engine.result.Result lambda$addRelations$2(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> lambda$addRelations$2
    33:33:io.crnk.core.engine.result.Result lambda$setRelations$1(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> lambda$setRelations$1
    28:28:io.crnk.core.engine.result.Result lambda$setRelation$0(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> lambda$setRelation$0
io.crnk.reactive.internal.adapter.WorkerResourceRepositoryAdapter -> io.crnk.reactive.internal.adapter.WorkerResourceRepositoryAdapter:
    io.crnk.reactive.internal.adapter.Worker worker -> worker
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter adapter -> adapter
    18:21:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter,reactor.core.scheduler.Scheduler,io.crnk.core.engine.http.HttpRequestContextProvider) -> <init>
    25:25:io.crnk.core.engine.result.Result findOne(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> findOne
    30:30:io.crnk.core.engine.result.Result findAll(io.crnk.core.engine.query.QueryAdapter) -> findAll
    35:35:io.crnk.core.engine.result.Result findAll(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> findAll
    40:40:io.crnk.core.engine.result.Result update(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> update
    45:45:io.crnk.core.engine.result.Result create(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> create
    50:50:io.crnk.core.engine.result.Result delete(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> delete
    55:55:java.lang.Object getResourceRepository() -> getResourceRepository
    60:60:io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> getRepositoryInformation
    50:50:io.crnk.core.engine.result.Result lambda$delete$5(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> lambda$delete$5
    45:45:io.crnk.core.engine.result.Result lambda$create$4(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> lambda$create$4
    40:40:io.crnk.core.engine.result.Result lambda$update$3(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> lambda$update$3
    35:35:io.crnk.core.engine.result.Result lambda$findAll$2(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> lambda$findAll$2
    30:30:io.crnk.core.engine.result.Result lambda$findAll$1(io.crnk.core.engine.query.QueryAdapter) -> lambda$findAll$1
    25:25:io.crnk.core.engine.result.Result lambda$findOne$0(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> lambda$findOne$0
io.crnk.reactive.repository.ImmediateRepository -> io.crnk.reactive.repository.ImmediateRepository:
io.crnk.reactive.repository.ReactiveManyRelationshipRepository -> io.crnk.reactive.repository.ReactiveManyRelationshipRepository:
    reactor.core.publisher.Mono setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> setRelations
    reactor.core.publisher.Mono addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> addRelations
    reactor.core.publisher.Mono removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> removeRelations
    reactor.core.publisher.Mono findManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.queryspec.QuerySpec) -> findManyTargets
io.crnk.reactive.repository.ReactiveOneRelationshipRepository -> io.crnk.reactive.repository.ReactiveOneRelationshipRepository:
    reactor.core.publisher.Mono findOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.queryspec.QuerySpec) -> findOneTargets
    reactor.core.publisher.Mono setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField) -> setRelation
io.crnk.reactive.repository.ReactiveRelationshipRepository -> io.crnk.reactive.repository.ReactiveRelationshipRepository:
io.crnk.reactive.repository.ReactiveResourceRepository -> io.crnk.reactive.repository.ReactiveResourceRepository:
    java.lang.Class getResourceClass() -> getResourceClass
    reactor.core.publisher.Mono findOne(java.lang.Object,io.crnk.core.queryspec.QuerySpec) -> findOne
    reactor.core.publisher.Mono findAll(io.crnk.core.queryspec.QuerySpec) -> findAll
    reactor.core.publisher.Mono findAll(java.util.Collection,io.crnk.core.queryspec.QuerySpec) -> findAll
    reactor.core.publisher.Mono save(java.lang.Object) -> save
    reactor.core.publisher.Mono create(java.lang.Object) -> create
    reactor.core.publisher.Mono delete(java.lang.Object) -> delete
io.crnk.setup.vertx.CrnkVertxHandler -> io.crnk.setup.vertx.CrnkVertxHandler:
    org.slf4j.Logger LOGGER -> LOGGER
    io.crnk.core.boot.CrnkBoot boot -> boot
    34:36:void <init>() -> <init>
    31:46:void <init>(java.util.function.Consumer) -> <init>
    53:64:org.reactivestreams.Publisher process(io.vertx.reactivex.core.http.HttpServerRequest) -> process
    69:106:reactor.core.publisher.Mono processRequest(io.crnk.setup.vertx.internal.VertxRequestContext) -> processRequest
    83:93:io.vertx.reactivex.core.http.HttpServerRequest lambda$processRequest$5(io.vertx.reactivex.core.http.HttpServerRequest,io.crnk.core.engine.http.HttpResponse) -> lambda$processRequest$5
    86:86:void lambda$processRequest$4(io.vertx.reactivex.core.http.HttpServerResponse,java.lang.String,java.lang.String) -> lambda$processRequest$4
    64:64:java.lang.Object lambda$process$3(io.crnk.setup.vertx.internal.VertxRequestContext,java.lang.Object) -> lambda$process$3
    64:64:reactor.core.publisher.Mono lambda$process$2(reactor.core.publisher.Mono,io.crnk.setup.vertx.internal.VertxRequestContext) -> lambda$process$2
    58:60:void lambda$process$1(io.crnk.setup.vertx.internal.VertxRequestContext,io.reactivex.subjects.SingleSubject,io.vertx.reactivex.core.buffer.Buffer) -> lambda$process$1
    35:35:void lambda$new$0(io.crnk.core.boot.CrnkBoot) -> lambda$new$0
    29:29:void <clinit>() -> <clinit>
io.crnk.setup.vertx.internal.VertxModule -> io.crnk.setup.vertx.internal.VertxModule:
    5:5:void <init>() -> <init>
    10:10:void setupModule(io.crnk.core.module.Module$ModuleContext) -> setupModule
    14:14:java.lang.String getModuleName() -> getModuleName
io.crnk.setup.vertx.internal.VertxRequestContext -> io.crnk.setup.vertx.internal.VertxRequestContext:
    io.vertx.reactivex.core.http.HttpServerRequest serverRequest -> serverRequest
    byte[] requestBody -> requestBody
    io.crnk.core.engine.http.HttpResponse response -> response
    java.lang.String pathPrefix -> pathPrefix
    22:29:void <init>(io.vertx.reactivex.core.http.HttpServerRequest,java.lang.String) -> <init>
    32:33:void setRequestBody(byte[]) -> setRequestBody
    37:37:java.lang.String getRequestHeader(java.lang.String) -> getRequestHeader
    42:49:java.util.Map getRequestParameters() -> getRequestParameters
    54:58:java.lang.String getPath() -> getPath
    63:70:java.lang.String getBaseUrl() -> getBaseUrl
    76:76:byte[] getRequestBody() -> getRequestBody
    81:81:java.lang.String getMethod() -> getMethod
    87:87:io.crnk.core.engine.http.HttpResponse getResponse() -> getResponse
    92:93:void setResponse(io.crnk.core.engine.http.HttpResponse) -> setResponse
    115:115:io.vertx.reactivex.core.http.HttpServerRequest getServerRequest() -> getServerRequest
io.netty.bootstrap.AbstractBootstrap -> io.netty.bootstrap.AbstractBootstrap:
    io.netty.channel.EventLoopGroup group -> group
    io.netty.bootstrap.ChannelFactory channelFactory -> channelFactory
    java.net.SocketAddress localAddress -> localAddress
    java.util.Map options -> options
    java.util.Map attrs -> attrs
    io.netty.channel.ChannelHandler handler -> handler
    56:62:void <init>() -> <init>
    56:75:void <init>(io.netty.bootstrap.AbstractBootstrap) -> <init>
    82:89:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup) -> group
    94:94:io.netty.bootstrap.AbstractBootstrap self() -> self
    103:106:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class) -> channel
    114:122:io.netty.bootstrap.AbstractBootstrap channelFactory(io.netty.bootstrap.ChannelFactory) -> channelFactory
    134:134:io.netty.bootstrap.AbstractBootstrap channelFactory(io.netty.channel.ChannelFactory) -> channelFactory
    141:142:io.netty.bootstrap.AbstractBootstrap localAddress(java.net.SocketAddress) -> localAddress
    156:156:io.netty.bootstrap.AbstractBootstrap localAddress(java.lang.String,int) -> localAddress
    171:183:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object) -> option
    211:217:io.netty.bootstrap.AbstractBootstrap validate() -> validate
    io.netty.bootstrap.AbstractBootstrap clone() -> clone
    233:234:io.netty.channel.ChannelFuture register() -> register
    274:278:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    282:313:io.netty.channel.ChannelFuture doBind(java.net.SocketAddress) -> doBind
    318:349:io.netty.channel.ChannelFuture initAndRegister() -> initAndRegister
    void init(io.netty.channel.Channel) -> init
    360:370:void doBind0(io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> doBind0
    376:380:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler) -> handler
    390:390:io.netty.channel.EventLoopGroup group() -> group
    io.netty.bootstrap.AbstractBootstrapConfig config() -> config
    401:407:java.util.Map copiedMap(java.util.Map) -> copiedMap
    411:411:java.util.Map options0() -> options0
    415:415:java.util.Map attrs0() -> attrs0
    419:419:java.net.SocketAddress localAddress() -> localAddress
    424:424:io.netty.bootstrap.ChannelFactory channelFactory() -> channelFactory
    428:428:io.netty.channel.ChannelHandler handler() -> handler
    432:432:java.util.Map options() -> options
    436:436:java.util.Map attrs() -> attrs
    441:444:void setChannelOptions(io.netty.channel.Channel,java.util.Map,io.netty.util.internal.logging.InternalLogger) -> setChannelOptions
    448:451:void setChannelOptions(io.netty.channel.Channel,java.util.Map$Entry[],io.netty.util.internal.logging.InternalLogger) -> setChannelOptions
    457:464:void setChannelOption(io.netty.channel.Channel,io.netty.channel.ChannelOption,java.lang.Object,io.netty.util.internal.logging.InternalLogger) -> setChannelOption
    468:471:java.lang.String toString() -> toString
    50:50:java.lang.Object clone() -> clone
    50:50:void access$000(io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> access$000
io.netty.bootstrap.AbstractBootstrap$1 -> io.netty.bootstrap.AbstractBootstrap$1:
    io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise val$promise -> val$promise
    io.netty.channel.ChannelFuture val$regFuture -> val$regFuture
    io.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$localAddress -> val$localAddress
    io.netty.bootstrap.AbstractBootstrap this$0 -> this$0
    296:296:void <init>(io.netty.bootstrap.AbstractBootstrap,io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise,io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress) -> <init>
    299:311:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    296:296:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.bootstrap.AbstractBootstrap$2 -> io.netty.bootstrap.AbstractBootstrap$2:
    io.netty.channel.ChannelFuture val$regFuture -> val$regFuture
    io.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$localAddress -> val$localAddress
    io.netty.channel.ChannelPromise val$promise -> val$promise
    360:360:void <init>(io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> <init>
    363:368:void run() -> run
io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise -> io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise:
    boolean registered -> registered
    481:482:void <init>(io.netty.channel.Channel) -> <init>
    485:486:void registered() -> registered
    490:497:io.netty.util.concurrent.EventExecutor executor() -> executor
io.netty.bootstrap.AbstractBootstrapConfig -> io.netty.bootstrap.AbstractBootstrapConfig:
    io.netty.bootstrap.AbstractBootstrap bootstrap -> bootstrap
    36:38:void <init>(io.netty.bootstrap.AbstractBootstrap) -> <init>
    44:44:java.net.SocketAddress localAddress() -> localAddress
    52:52:io.netty.bootstrap.ChannelFactory channelFactory() -> channelFactory
    59:59:io.netty.channel.ChannelHandler handler() -> handler
    66:66:java.util.Map options() -> options
    73:73:java.util.Map attrs() -> attrs
    81:81:io.netty.channel.EventLoopGroup group() -> group
    86:133:java.lang.String toString() -> toString
io.netty.bootstrap.Bootstrap -> io.netty.bootstrap.Bootstrap:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.resolver.AddressResolverGroup DEFAULT_RESOLVER -> DEFAULT_RESOLVER
    io.netty.bootstrap.BootstrapConfig config -> config
    io.netty.resolver.AddressResolverGroup resolver -> resolver
    java.net.SocketAddress remoteAddress -> remoteAddress
    55:62:void <init>() -> <init>
    55:68:void <init>(io.netty.bootstrap.Bootstrap) -> <init>
    80:81:io.netty.bootstrap.Bootstrap resolver(io.netty.resolver.AddressResolverGroup) -> resolver
    140:145:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    163:192:io.netty.channel.ChannelFuture doResolveAndConnect(java.net.SocketAddress,java.net.SocketAddress) -> doResolveAndConnect
    199:239:io.netty.channel.ChannelFuture doResolveAndConnect0(io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> doResolveAndConnect0
    247:259:void doConnect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> doConnect
    264:278:void init(io.netty.channel.Channel) -> init
    282:286:io.netty.bootstrap.Bootstrap validate() -> validate
    292:292:io.netty.bootstrap.Bootstrap clone() -> clone
    308:308:io.netty.bootstrap.BootstrapConfig config() -> config
    312:312:java.net.SocketAddress remoteAddress() -> remoteAddress
    316:316:io.netty.resolver.AddressResolverGroup resolver() -> resolver
    49:49:io.netty.bootstrap.AbstractBootstrapConfig config() -> config
    49:49:io.netty.bootstrap.AbstractBootstrap clone() -> clone
    49:49:io.netty.bootstrap.AbstractBootstrap validate() -> validate
    49:49:java.lang.Object clone() -> clone
    49:49:io.netty.channel.ChannelFuture access$000(io.netty.bootstrap.Bootstrap,io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> access$000
    49:49:void access$100(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> access$100
    51:53:void <clinit>() -> <clinit>
io.netty.bootstrap.Bootstrap$1 -> io.netty.bootstrap.Bootstrap$1:
    io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise val$promise -> val$promise
    io.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    java.net.SocketAddress val$localAddress -> val$localAddress
    io.netty.bootstrap.Bootstrap this$0 -> this$0
    174:174:void <init>(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise,io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress) -> <init>
    179:190:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    174:174:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.bootstrap.Bootstrap$2 -> io.netty.bootstrap.Bootstrap$2:
    io.netty.channel.Channel val$channel -> val$channel
    io.netty.channel.ChannelPromise val$promise -> val$promise
    java.net.SocketAddress val$localAddress -> val$localAddress
    io.netty.bootstrap.Bootstrap this$0 -> this$0
    225:225:void <init>(io.netty.bootstrap.Bootstrap,io.netty.channel.Channel,io.netty.channel.ChannelPromise,java.net.SocketAddress) -> <init>
    228:234:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.bootstrap.Bootstrap$3 -> io.netty.bootstrap.Bootstrap$3:
    java.net.SocketAddress val$localAddress -> val$localAddress
    io.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    io.netty.channel.ChannelPromise val$connectPromise -> val$connectPromise
    248:248:void <init>(java.net.SocketAddress,io.netty.channel.Channel,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> <init>
    251:257:void run() -> run
io.netty.bootstrap.BootstrapConfig -> io.netty.bootstrap.BootstrapConfig:
    29:30:void <init>(io.netty.bootstrap.Bootstrap) -> <init>
    36:36:java.net.SocketAddress remoteAddress() -> remoteAddress
    43:43:io.netty.resolver.AddressResolverGroup resolver() -> resolver
    48:56:java.lang.String toString() -> toString
io.netty.bootstrap.ChannelFactory -> io.netty.bootstrap.ChannelFactory:
    io.netty.channel.Channel newChannel() -> newChannel
io.netty.bootstrap.ServerBootstrap -> io.netty.bootstrap.ServerBootstrap:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Map childOptions -> childOptions
    java.util.Map childAttrs -> childAttrs
    io.netty.bootstrap.ServerBootstrapConfig config -> config
    io.netty.channel.EventLoopGroup childGroup -> childGroup
    io.netty.channel.ChannelHandler childHandler -> childHandler
    47:53:void <init>() -> <init>
    47:65:void <init>(io.netty.bootstrap.ServerBootstrap) -> <init>
    72:72:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup) -> group
    81:89:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup) -> group
    98:110:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object) -> childOption
    133:137:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler) -> childHandler
    142:187:void init(io.netty.channel.Channel) -> init
    191:199:io.netty.bootstrap.ServerBootstrap validate() -> validate
    204:204:java.util.Map$Entry[] newAttrArray(int) -> newAttrArray
    209:209:java.util.Map$Entry[] newOptionArray(int) -> newOptionArray
    291:291:io.netty.bootstrap.ServerBootstrap clone() -> clone
    302:302:io.netty.channel.EventLoopGroup childGroup() -> childGroup
    306:306:io.netty.channel.ChannelHandler childHandler() -> childHandler
    310:310:java.util.Map childOptions() -> childOptions
    314:314:java.util.Map childAttrs() -> childAttrs
    319:319:io.netty.bootstrap.ServerBootstrapConfig config() -> config
    43:43:io.netty.bootstrap.AbstractBootstrapConfig config() -> config
    43:43:io.netty.bootstrap.AbstractBootstrap clone() -> clone
    43:43:io.netty.bootstrap.AbstractBootstrap validate() -> validate
    43:43:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup) -> group
    43:43:java.lang.Object clone() -> clone
    43:43:io.netty.bootstrap.ServerBootstrapConfig access$000(io.netty.bootstrap.ServerBootstrap) -> access$000
    43:43:io.netty.util.internal.logging.InternalLogger access$100() -> access$100
    45:45:void <clinit>() -> <clinit>
io.netty.bootstrap.ServerBootstrap$1 -> io.netty.bootstrap.ServerBootstrap$1:
    io.netty.channel.EventLoopGroup val$currentChildGroup -> val$currentChildGroup
    io.netty.channel.ChannelHandler val$currentChildHandler -> val$currentChildHandler
    java.util.Map$Entry[] val$currentChildOptions -> val$currentChildOptions
    java.util.Map$Entry[] val$currentChildAttrs -> val$currentChildAttrs
    io.netty.bootstrap.ServerBootstrap this$0 -> this$0
    169:169:void <init>(io.netty.bootstrap.ServerBootstrap,io.netty.channel.EventLoopGroup,io.netty.channel.ChannelHandler,java.util.Map$Entry[],java.util.Map$Entry[]) -> <init>
    172:185:void initChannel(io.netty.channel.Channel) -> initChannel
io.netty.bootstrap.ServerBootstrap$1$1 -> io.netty.bootstrap.ServerBootstrap$1$1:
    io.netty.channel.ChannelPipeline val$pipeline -> val$pipeline
    io.netty.channel.Channel val$ch -> val$ch
    io.netty.bootstrap.ServerBootstrap$1 this$1 -> this$1
    178:178:void <init>(io.netty.bootstrap.ServerBootstrap$1,io.netty.channel.ChannelPipeline,io.netty.channel.Channel) -> <init>
    181:183:void run() -> run
io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor -> io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor:
    io.netty.channel.EventLoopGroup childGroup -> childGroup
    io.netty.channel.ChannelHandler childHandler -> childHandler
    java.util.Map$Entry[] childOptions -> childOptions
    java.util.Map$Entry[] childAttrs -> childAttrs
    java.lang.Runnable enableAutoReadTask -> enableAutoReadTask
    222:239:void <init>(io.netty.channel.Channel,io.netty.channel.EventLoopGroup,io.netty.channel.ChannelHandler,java.util.Map$Entry[],java.util.Map$Entry[]) -> <init>
    244:266:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    269:271:void forceClose(io.netty.channel.Channel,java.lang.Throwable) -> forceClose
    275:285:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    212:212:void access$200(io.netty.channel.Channel,java.lang.Throwable) -> access$200
io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1 -> io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1:
    io.netty.channel.Channel val$channel -> val$channel
    io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor this$0 -> this$0
    233:233:void <init>(io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor,io.netty.channel.Channel) -> <init>
    236:237:void run() -> run
io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2 -> io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2:
    io.netty.channel.Channel val$child -> val$child
    io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor this$0 -> this$0
    255:255:void <init>(io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor,io.netty.channel.Channel) -> <init>
    258:261:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    255:255:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.bootstrap.ServerBootstrapConfig -> io.netty.bootstrap.ServerBootstrapConfig:
    33:34:void <init>(io.netty.bootstrap.ServerBootstrap) -> <init>
    42:42:io.netty.channel.EventLoopGroup childGroup() -> childGroup
    50:50:io.netty.channel.ChannelHandler childHandler() -> childHandler
    57:57:java.util.Map childOptions() -> childOptions
    64:64:java.util.Map childAttrs() -> childAttrs
    69:103:java.lang.String toString() -> toString
io.netty.buffer.AbstractByteBuf -> io.netty.buffer.AbstractByteBuf:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    boolean checkAccessible -> checkAccessible
    io.netty.util.ResourceLeakDetector leakDetector -> leakDetector
    int readerIndex -> readerIndex
    int writerIndex -> writerIndex
    int markedReaderIndex -> markedReaderIndex
    int markedWriterIndex -> markedWriterIndex
    int maxCapacity -> maxCapacity
    65:70:void <init>(int) -> <init>
    74:74:boolean isReadOnly() -> isReadOnly
    80:83:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    88:88:int maxCapacity() -> maxCapacity
    92:93:void maxCapacity(int) -> maxCapacity
    97:97:int readerIndex() -> readerIndex
    102:107:io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    112:112:int writerIndex() -> writerIndex
    117:123:io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    128:134:io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    139:140:io.netty.buffer.ByteBuf clear() -> clear
    145:145:boolean isReadable() -> isReadable
    150:150:boolean isReadable(int) -> isReadable
    155:155:boolean isWritable() -> isWritable
    160:160:boolean isWritable(int) -> isWritable
    165:165:int readableBytes() -> readableBytes
    170:170:int writableBytes() -> writableBytes
    180:181:io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    186:187:io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    192:193:io.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    204:218:io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    223:240:io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    244:257:void adjustMarkers(int) -> adjustMarkers
    261:266:io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    270:286:void ensureWritable0(int) -> ensureWritable0
    290:316:int ensureWritable(int,boolean) -> ensureWritable
    321:327:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    334:334:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    339:340:byte getByte(int) -> getByte
    byte _getByte(int) -> _getByte
    352:352:short getUnsignedByte(int) -> getUnsignedByte
    357:358:short getShort(int) -> getShort
    short _getShort(int) -> _getShort
    365:366:short getShortLE(int) -> getShortLE
    short _getShortLE(int) -> _getShortLE
    373:373:int getUnsignedShort(int) -> getUnsignedShort
    378:378:int getUnsignedShortLE(int) -> getUnsignedShortLE
    383:384:int getUnsignedMedium(int) -> getUnsignedMedium
    int _getUnsignedMedium(int) -> _getUnsignedMedium
    399:403:int getMedium(int) -> getMedium
    417:418:int getInt(int) -> getInt
    int _getInt(int) -> _getInt
    425:426:int getIntLE(int) -> getIntLE
    int _getIntLE(int) -> _getIntLE
    433:433:long getUnsignedInt(int) -> getUnsignedInt
    438:438:long getUnsignedIntLE(int) -> getUnsignedIntLE
    443:444:long getLong(int) -> getLong
    long _getLong(int) -> _getLong
    464:464:float getFloat(int) -> getFloat
    469:469:double getDouble(int) -> getDouble
    474:475:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    506:508:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    void _setByte(int,int) -> _setByte
    521:523:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    void _setShort(int,int) -> _setShort
    530:532:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    void _setShortLE(int,int) -> _setShortLE
    545:547:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    void _setMedium(int,int) -> _setMedium
    554:556:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    void _setMediumLE(int,int) -> _setMediumLE
    563:565:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    void _setInt(int,int) -> _setInt
    587:589:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    void _setLong(int,long) -> _setLong
    611:612:io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    639:667:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    672:672:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    676:702:int setCharSequence0(int,java.lang.CharSequence,java.nio.charset.Charset,boolean) -> setCharSequence0
    707:711:byte readByte() -> readByte
    721:721:short readUnsignedByte() -> readUnsignedByte
    726:729:short readShort() -> readShort
    742:742:int readUnsignedShort() -> readUnsignedShort
    752:756:int readMedium() -> readMedium
    770:773:int readUnsignedMedium() -> readUnsignedMedium
    786:789:int readInt() -> readInt
    802:802:long readUnsignedInt() -> readUnsignedInt
    812:815:long readLong() -> readLong
    843:851:io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    856:859:io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    864:867:io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    872:875:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    880:881:io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    886:887:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    892:898:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> readBytes
    903:906:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> readBytes
    921:924:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    946:948:io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    959:961:io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    966:969:io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    974:977:io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    982:985:io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    990:993:io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    998:1001:io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    1014:1017:io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    1030:1031:io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    1036:1037:io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    1042:1043:io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    1048:1051:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    1056:1057:io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    1062:1063:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    1068:1074:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> writeBytes
    1079:1082:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    1087:1091:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    1107:1112:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    1127:1158:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    1163:1165:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    1170:1170:io.netty.buffer.ByteBuf copy() -> copy
    1175:1175:io.netty.buffer.ByteBuf duplicate() -> duplicate
    1180:1180:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    1185:1185:io.netty.buffer.ByteBuf slice() -> slice
    1190:1190:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    1195:1195:io.netty.buffer.ByteBuf slice(int,int) -> slice
    1200:1200:io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    1205:1205:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    1210:1210:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    1215:1215:java.lang.String toString(java.nio.charset.Charset) -> toString
    1220:1220:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    1225:1225:int indexOf(int,int,byte) -> indexOf
    1250:1255:int forEachByte(io.netty.util.ByteProcessor) -> forEachByte
    1261:1266:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    1271:1277:int forEachByteAsc0(int,int,io.netty.util.ByteProcessor) -> forEachByteAsc0
    1293:1298:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    1303:1308:int forEachByteDesc0(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc0
    1313:1313:int hashCode() -> hashCode
    1318:1318:boolean equals(java.lang.Object) -> equals
    1323:1323:int compareTo(io.netty.buffer.ByteBuf) -> compareTo
    1328:1346:java.lang.String toString() -> toString
    1350:1351:void checkIndex(int) -> checkIndex
    1354:1356:void checkIndex(int,int) -> checkIndex
    1359:1363:void checkIndex0(int,int) -> checkIndex0
    1366:1371:void checkSrcIndex(int,int,int,int) -> checkSrcIndex
    1374:1379:void checkDstIndex(int,int,int,int) -> checkDstIndex
    1387:1391:void checkReadableBytes(int) -> checkReadableBytes
    1394:1398:void checkNewCapacity(int) -> checkNewCapacity
    1401:1407:void checkReadableBytes0(int) -> checkReadableBytes0
    1414:1417:void ensureAccessible() -> ensureAccessible
    1420:1422:void setIndex0(int,int) -> setIndex0
    1425:1426:void discardMarks() -> discardMarks
    44:44:int compareTo(java.lang.Object) -> compareTo
    45:57:void <clinit>() -> <clinit>
io.netty.buffer.AbstractByteBufAllocator -> io.netty.buffer.AbstractByteBufAllocator:
    boolean directByDefault -> directByDefault
    io.netty.buffer.ByteBuf emptyBuf -> emptyBuf
    39:56:io.netty.buffer.ByteBuf toLeakAwareBuffer(io.netty.buffer.ByteBuf) -> toLeakAwareBuffer
    61:78:io.netty.buffer.CompositeByteBuf toLeakAwareBuffer(io.netty.buffer.CompositeByteBuf) -> toLeakAwareBuffer
    88:89:void <init>() -> <init>
    97:100:void <init>(boolean) -> <init>
    104:107:io.netty.buffer.ByteBuf buffer() -> buffer
    112:115:io.netty.buffer.ByteBuf buffer(int) -> buffer
    120:123:io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    128:131:io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    136:139:io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    152:152:io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    157:157:io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    162:166:io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    171:171:io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    176:176:io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    181:185:io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    198:201:io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    206:206:io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    211:211:io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    216:216:io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    221:221:io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    225:233:void validate(int,int) -> validate
    io.netty.buffer.ByteBuf newHeapBuffer(int,int) -> newHeapBuffer
    io.netty.buffer.ByteBuf newDirectBuffer(int,int) -> newDirectBuffer
    247:247:java.lang.String toString() -> toString
    252:283:int calculateNewCapacity(int,int) -> calculateNewCapacity
    34:35:void <clinit>() -> <clinit>
io.netty.buffer.AbstractByteBufAllocator$1 -> io.netty.buffer.AbstractByteBufAllocator$1:
    int[] $SwitchMap$io$netty$util$ResourceLeakDetector$Level -> $SwitchMap$io$netty$util$ResourceLeakDetector$Level
    39:39:void <clinit>() -> <clinit>
io.netty.buffer.AbstractDerivedByteBuf -> io.netty.buffer.AbstractDerivedByteBuf:
    31:32:void <init>(int) -> <init>
    36:36:int refCnt() -> refCnt
    40:40:int refCnt0() -> refCnt0
    45:45:io.netty.buffer.ByteBuf retain() -> retain
    49:50:io.netty.buffer.ByteBuf retain0() -> retain0
    55:55:io.netty.buffer.ByteBuf retain(int) -> retain
    59:60:io.netty.buffer.ByteBuf retain0(int) -> retain0
    65:65:io.netty.buffer.ByteBuf touch() -> touch
    69:70:io.netty.buffer.ByteBuf touch0() -> touch0
    75:75:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    79:80:io.netty.buffer.ByteBuf touch0(java.lang.Object) -> touch0
    85:85:boolean release() -> release
    89:89:boolean release0() -> release0
    94:94:boolean release(int) -> release
    98:98:boolean release0(int) -> release0
    103:103:boolean isReadOnly() -> isReadOnly
    108:108:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    113:113:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
io.netty.buffer.AbstractPooledDerivedByteBuf -> io.netty.buffer.AbstractPooledDerivedByteBuf:
    io.netty.util.Recycler$Handle recyclerHandle -> recyclerHandle
    io.netty.buffer.AbstractByteBuf rootParent -> rootParent
    io.netty.buffer.ByteBuf parent -> parent
    boolean $assertionsDisabled -> $assertionsDisabled
    42:44:void <init>(io.netty.util.Recycler$Handle) -> <init>
    48:50:void parent(io.netty.buffer.ByteBuf) -> parent
    54:54:io.netty.buffer.AbstractByteBuf unwrap() -> unwrap
    59:75:io.netty.buffer.AbstractPooledDerivedByteBuf init(io.netty.buffer.AbstractByteBuf,io.netty.buffer.ByteBuf,int,int,int) -> init
    85:88:void deallocate() -> deallocate
    92:92:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    98:98:java.nio.ByteOrder order() -> order
    103:103:boolean isReadOnly() -> isReadOnly
    108:108:boolean isDirect() -> isDirect
    113:113:boolean hasArray() -> hasArray
    118:118:byte[] array() -> array
    123:123:boolean hasMemoryAddress() -> hasMemoryAddress
    128:128:int nioBufferCount() -> nioBufferCount
    133:133:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    138:139:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    145:145:io.netty.buffer.ByteBuf slice(int,int) -> slice
    150:150:io.netty.buffer.ByteBuf duplicate0() -> duplicate0
    28:28:io.netty.buffer.ByteBuf unwrap() -> unwrap
    28:28:void <clinit>() -> <clinit>
io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf -> io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf:
    io.netty.util.ReferenceCounted referenceCountDelegate -> referenceCountDelegate
    157:159:void <init>(io.netty.util.ReferenceCounted,io.netty.buffer.AbstractByteBuf) -> <init>
    163:163:int refCnt0() -> refCnt0
    168:169:io.netty.buffer.ByteBuf retain0() -> retain0
    174:175:io.netty.buffer.ByteBuf retain0(int) -> retain0
    180:181:io.netty.buffer.ByteBuf touch0() -> touch0
    186:187:io.netty.buffer.ByteBuf touch0(java.lang.Object) -> touch0
    192:192:boolean release0() -> release0
    197:197:boolean release0(int) -> release0
    202:202:io.netty.buffer.ByteBuf duplicate() -> duplicate
    207:207:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    212:213:io.netty.buffer.ByteBuf slice(int,int) -> slice
    219:219:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    224:224:io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf -> io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf:
    io.netty.util.ReferenceCounted referenceCountDelegate -> referenceCountDelegate
    233:235:void <init>(io.netty.util.ReferenceCounted,io.netty.buffer.AbstractByteBuf,int,int) -> <init>
    239:239:int refCnt0() -> refCnt0
    244:245:io.netty.buffer.ByteBuf retain0() -> retain0
    250:251:io.netty.buffer.ByteBuf retain0(int) -> retain0
    256:257:io.netty.buffer.ByteBuf touch0() -> touch0
    262:263:io.netty.buffer.ByteBuf touch0(java.lang.Object) -> touch0
    268:268:boolean release0() -> release0
    273:273:boolean release0(int) -> release0
    278:279:io.netty.buffer.ByteBuf duplicate() -> duplicate
    284:284:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    289:290:io.netty.buffer.ByteBuf slice(int,int) -> slice
    296:296:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    301:301:io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
io.netty.buffer.AbstractReferenceCountedByteBuf -> io.netty.buffer.AbstractReferenceCountedByteBuf:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater refCntUpdater -> refCntUpdater
    int refCnt -> refCnt
    36:38:void <init>(int) -> <init>
    42:42:int refCnt() -> refCnt
    49:50:void setRefCnt(int) -> setRefCnt
    54:54:io.netty.buffer.ByteBuf retain() -> retain
    59:59:io.netty.buffer.ByteBuf retain(int) -> retain
    63:69:io.netty.buffer.ByteBuf retain0(int) -> retain0
    74:74:io.netty.buffer.ByteBuf touch() -> touch
    79:79:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    84:84:boolean release() -> release
    89:89:boolean release(int) -> release
    93:102:boolean release0(int) -> release0
    void deallocate() -> deallocate
    28:28:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    28:28:io.netty.util.ReferenceCounted touch() -> touch
    28:28:io.netty.util.ReferenceCounted retain(int) -> retain
    28:28:io.netty.util.ReferenceCounted retain() -> retain
    30:31:void <clinit>() -> <clinit>
io.netty.buffer.AbstractUnpooledSlicedByteBuf -> io.netty.buffer.AbstractUnpooledSlicedByteBuf:
    io.netty.buffer.ByteBuf buffer -> buffer
    int adjustment -> adjustment
    37:53:void <init>(io.netty.buffer.ByteBuf,int,int) -> <init>
    60:60:void initLength(int) -> initLength
    68:68:io.netty.buffer.ByteBuf unwrap() -> unwrap
    73:73:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    79:79:java.nio.ByteOrder order() -> order
    84:84:boolean isDirect() -> isDirect
    89:89:io.netty.buffer.ByteBuf capacity(int) -> capacity
    94:94:boolean hasArray() -> hasArray
    99:99:byte[] array() -> array
    104:104:int arrayOffset() -> arrayOffset
    109:109:boolean hasMemoryAddress() -> hasMemoryAddress
    114:114:long memoryAddress() -> memoryAddress
    119:120:byte getByte(int) -> getByte
    125:125:byte _getByte(int) -> _getByte
    130:131:short getShort(int) -> getShort
    136:136:short _getShort(int) -> _getShort
    141:142:short getShortLE(int) -> getShortLE
    147:147:short _getShortLE(int) -> _getShortLE
    152:153:int getUnsignedMedium(int) -> getUnsignedMedium
    158:158:int _getUnsignedMedium(int) -> _getUnsignedMedium
    174:175:int getInt(int) -> getInt
    180:180:int _getInt(int) -> _getInt
    185:186:int getIntLE(int) -> getIntLE
    191:191:int _getIntLE(int) -> _getIntLE
    196:197:long getLong(int) -> getLong
    202:202:long _getLong(int) -> _getLong
    218:218:io.netty.buffer.ByteBuf duplicate() -> duplicate
    223:224:io.netty.buffer.ByteBuf copy(int,int) -> copy
    229:230:io.netty.buffer.ByteBuf slice(int,int) -> slice
    235:237:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    242:244:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    249:251:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    256:258:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    269:270:void _setByte(int,int) -> _setByte
    274:276:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    281:282:void _setShort(int,int) -> _setShort
    286:288:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    293:294:void _setShortLE(int,int) -> _setShortLE
    298:300:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    305:306:void _setMedium(int,int) -> _setMedium
    310:312:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    317:318:void _setMediumLE(int,int) -> _setMediumLE
    322:324:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    329:330:void _setInt(int,int) -> _setInt
    346:348:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    353:354:void _setLong(int,long) -> _setLong
    370:372:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    377:379:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    384:386:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    398:399:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    416:417:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    428:428:int nioBufferCount() -> nioBufferCount
    433:434:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    439:440:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    445:450:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    456:461:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    469:469:int idx(int) -> idx
    473:476:void checkSliceOutOfBounds(int,int,io.netty.buffer.ByteBuf) -> checkSliceOutOfBounds
io.netty.buffer.AbstractUnsafeSwappedByteBuf -> io.netty.buffer.AbstractUnsafeSwappedByteBuf:
    boolean nativeByteOrder -> nativeByteOrder
    io.netty.buffer.AbstractByteBuf wrapped -> wrapped
    boolean $assertionsDisabled -> $assertionsDisabled
    32:36:void <init>(io.netty.buffer.AbstractByteBuf) -> <init>
    40:42:long getLong(int) -> getLong
    47:47:float getFloat(int) -> getFloat
    52:52:double getDouble(int) -> getDouble
    62:62:long getUnsignedInt(int) -> getUnsignedInt
    67:69:int getInt(int) -> getInt
    74:74:int getUnsignedShort(int) -> getUnsignedShort
    79:81:short getShort(int) -> getShort
    86:88:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    93:95:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    100:102:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    125:128:io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    133:136:io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    141:144:io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    149:150:io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    155:156:io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    161:162:io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    short _getShort(io.netty.buffer.AbstractByteBuf,int) -> _getShort
    int _getInt(io.netty.buffer.AbstractByteBuf,int) -> _getInt
    long _getLong(io.netty.buffer.AbstractByteBuf,int) -> _getLong
    void _setShort(io.netty.buffer.AbstractByteBuf,int,short) -> _setShort
    void _setInt(io.netty.buffer.AbstractByteBuf,int,int) -> _setInt
    void _setLong(io.netty.buffer.AbstractByteBuf,int,long) -> _setLong
    27:27:void <clinit>() -> <clinit>
io.netty.buffer.AdvancedLeakAwareByteBuf -> io.netty.buffer.AdvancedLeakAwareByteBuf:
    boolean ACQUIRE_AND_RELEASE_ONLY -> ACQUIRE_AND_RELEASE_ONLY
    io.netty.util.internal.logging.InternalLogger logger -> logger
    55:56:void <init>(io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    59:60:void <init>(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    63:66:void recordLeakNonRefCountingOperation(io.netty.util.ResourceLeakTracker) -> recordLeakNonRefCountingOperation
    70:71:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    76:77:io.netty.buffer.ByteBuf slice() -> slice
    82:83:io.netty.buffer.ByteBuf slice(int,int) -> slice
    88:89:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    100:101:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    106:107:io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    112:113:io.netty.buffer.ByteBuf duplicate() -> duplicate
    118:119:io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    124:125:io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    130:131:io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    136:137:io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    142:143:int ensureWritable(int,boolean) -> ensureWritable
    154:155:byte getByte(int) -> getByte
    160:161:short getUnsignedByte(int) -> getUnsignedByte
    166:167:short getShort(int) -> getShort
    172:173:int getUnsignedShort(int) -> getUnsignedShort
    178:179:int getMedium(int) -> getMedium
    184:185:int getUnsignedMedium(int) -> getUnsignedMedium
    190:191:int getInt(int) -> getInt
    196:197:long getUnsignedInt(int) -> getUnsignedInt
    202:203:long getLong(int) -> getLong
    214:215:float getFloat(int) -> getFloat
    220:221:double getDouble(int) -> getDouble
    238:239:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    244:245:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    250:251:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    256:257:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    268:269:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    286:287:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    292:293:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    298:299:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    304:305:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    310:311:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    346:347:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    358:359:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    364:365:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    376:377:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    382:383:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    388:389:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    400:401:byte readByte() -> readByte
    406:407:short readUnsignedByte() -> readUnsignedByte
    412:413:short readShort() -> readShort
    418:419:int readUnsignedShort() -> readUnsignedShort
    424:425:int readMedium() -> readMedium
    430:431:int readUnsignedMedium() -> readUnsignedMedium
    436:437:int readInt() -> readInt
    442:443:long readUnsignedInt() -> readUnsignedInt
    448:449:long readLong() -> readLong
    472:473:io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    478:479:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    496:497:io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    502:503:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    520:521:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    532:533:io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    544:545:io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    550:551:io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    556:557:io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    562:563:io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    568:569:io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    574:575:io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    580:581:io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    586:587:io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    592:593:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    604:605:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    610:611:io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    616:617:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    622:623:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    634:635:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    640:641:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    646:647:int indexOf(int,int,byte) -> indexOf
    670:671:int forEachByte(io.netty.util.ByteProcessor) -> forEachByte
    676:677:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    688:689:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    694:695:io.netty.buffer.ByteBuf copy() -> copy
    700:701:io.netty.buffer.ByteBuf copy(int,int) -> copy
    706:707:int nioBufferCount() -> nioBufferCount
    712:713:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    718:719:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    724:725:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    730:731:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    736:737:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    742:743:java.lang.String toString(java.nio.charset.Charset) -> toString
    748:749:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    754:755:io.netty.buffer.ByteBuf capacity(int) -> capacity
    760:761:short getShortLE(int) -> getShortLE
    766:767:int getUnsignedShortLE(int) -> getUnsignedShortLE
    784:785:int getIntLE(int) -> getIntLE
    790:791:long getUnsignedIntLE(int) -> getUnsignedIntLE
    802:803:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    814:815:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    868:869:io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    874:875:io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    892:893:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    922:923:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    928:929:io.netty.buffer.ByteBuf retain() -> retain
    934:935:io.netty.buffer.ByteBuf retain(int) -> retain
    940:941:boolean release() -> release
    946:947:boolean release(int) -> release
    952:953:io.netty.buffer.ByteBuf touch() -> touch
    958:959:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    965:965:io.netty.buffer.AdvancedLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    36:36:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    36:36:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    36:36:io.netty.util.ReferenceCounted touch() -> touch
    36:36:io.netty.util.ReferenceCounted retain(int) -> retain
    36:36:io.netty.util.ReferenceCounted retain() -> retain
    41:52:void <clinit>() -> <clinit>
io.netty.buffer.AdvancedLeakAwareCompositeByteBuf -> io.netty.buffer.AdvancedLeakAwareCompositeByteBuf:
    39:40:void <init>(io.netty.buffer.CompositeByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    44:45:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    50:51:io.netty.buffer.ByteBuf slice() -> slice
    56:57:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    62:63:io.netty.buffer.ByteBuf slice(int,int) -> slice
    68:69:io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    74:75:io.netty.buffer.ByteBuf duplicate() -> duplicate
    80:81:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    86:87:io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    92:93:io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    98:99:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    104:105:boolean isReadOnly() -> isReadOnly
    110:111:io.netty.buffer.CompositeByteBuf discardReadBytes() -> discardReadBytes
    116:117:io.netty.buffer.CompositeByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    122:123:io.netty.buffer.CompositeByteBuf ensureWritable(int) -> ensureWritable
    128:129:int ensureWritable(int,boolean) -> ensureWritable
    140:141:byte getByte(int) -> getByte
    146:147:short getUnsignedByte(int) -> getUnsignedByte
    152:153:short getShort(int) -> getShort
    158:159:int getUnsignedShort(int) -> getUnsignedShort
    164:165:int getMedium(int) -> getMedium
    170:171:int getUnsignedMedium(int) -> getUnsignedMedium
    176:177:int getInt(int) -> getInt
    182:183:long getUnsignedInt(int) -> getUnsignedInt
    188:189:long getLong(int) -> getLong
    200:201:float getFloat(int) -> getFloat
    206:207:double getDouble(int) -> getDouble
    224:225:io.netty.buffer.CompositeByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    230:231:io.netty.buffer.CompositeByteBuf getBytes(int,byte[]) -> getBytes
    236:237:io.netty.buffer.CompositeByteBuf getBytes(int,byte[],int,int) -> getBytes
    242:243:io.netty.buffer.CompositeByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    254:255:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    272:273:io.netty.buffer.CompositeByteBuf setByte(int,int) -> setByte
    278:279:io.netty.buffer.CompositeByteBuf setShort(int,int) -> setShort
    284:285:io.netty.buffer.CompositeByteBuf setMedium(int,int) -> setMedium
    290:291:io.netty.buffer.CompositeByteBuf setInt(int,int) -> setInt
    296:297:io.netty.buffer.CompositeByteBuf setLong(int,long) -> setLong
    332:333:io.netty.buffer.CompositeByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    338:339:io.netty.buffer.CompositeByteBuf setBytes(int,byte[]) -> setBytes
    344:345:io.netty.buffer.CompositeByteBuf setBytes(int,byte[],int,int) -> setBytes
    350:351:io.netty.buffer.CompositeByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    362:363:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    368:369:io.netty.buffer.CompositeByteBuf setZero(int,int) -> setZero
    380:381:byte readByte() -> readByte
    386:387:short readUnsignedByte() -> readUnsignedByte
    392:393:short readShort() -> readShort
    398:399:int readUnsignedShort() -> readUnsignedShort
    404:405:int readMedium() -> readMedium
    410:411:int readUnsignedMedium() -> readUnsignedMedium
    416:417:int readInt() -> readInt
    422:423:long readUnsignedInt() -> readUnsignedInt
    428:429:long readLong() -> readLong
    452:453:io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    458:459:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    464:465:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> readBytes
    470:471:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> readBytes
    476:477:io.netty.buffer.CompositeByteBuf readBytes(byte[]) -> readBytes
    482:483:io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int) -> readBytes
    500:501:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    512:513:io.netty.buffer.CompositeByteBuf skipBytes(int) -> skipBytes
    524:525:io.netty.buffer.CompositeByteBuf writeByte(int) -> writeByte
    530:531:io.netty.buffer.CompositeByteBuf writeShort(int) -> writeShort
    536:537:io.netty.buffer.CompositeByteBuf writeMedium(int) -> writeMedium
    542:543:io.netty.buffer.CompositeByteBuf writeInt(int) -> writeInt
    548:549:io.netty.buffer.CompositeByteBuf writeLong(long) -> writeLong
    554:555:io.netty.buffer.CompositeByteBuf writeChar(int) -> writeChar
    560:561:io.netty.buffer.CompositeByteBuf writeFloat(float) -> writeFloat
    566:567:io.netty.buffer.CompositeByteBuf writeDouble(double) -> writeDouble
    572:573:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    578:579:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> writeBytes
    584:585:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    590:591:io.netty.buffer.CompositeByteBuf writeBytes(byte[]) -> writeBytes
    596:597:io.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int) -> writeBytes
    602:603:io.netty.buffer.CompositeByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    614:615:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    620:621:io.netty.buffer.CompositeByteBuf writeZero(int) -> writeZero
    626:627:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    632:633:int indexOf(int,int,byte) -> indexOf
    656:657:int forEachByte(io.netty.util.ByteProcessor) -> forEachByte
    662:663:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    674:675:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    680:681:io.netty.buffer.ByteBuf copy() -> copy
    686:687:io.netty.buffer.ByteBuf copy(int,int) -> copy
    692:693:int nioBufferCount() -> nioBufferCount
    698:699:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    704:705:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    710:711:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    716:717:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    722:723:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    728:729:java.lang.String toString(java.nio.charset.Charset) -> toString
    734:735:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    740:741:io.netty.buffer.CompositeByteBuf capacity(int) -> capacity
    746:747:short getShortLE(int) -> getShortLE
    752:753:int getUnsignedShortLE(int) -> getUnsignedShortLE
    770:771:int getIntLE(int) -> getIntLE
    776:777:long getUnsignedIntLE(int) -> getUnsignedIntLE
    788:789:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    794:795:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    812:813:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    860:861:io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    866:867:io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    920:921:io.netty.buffer.CompositeByteBuf addComponent(boolean,io.netty.buffer.ByteBuf) -> addComponent
    926:927:io.netty.buffer.CompositeByteBuf addComponents(boolean,io.netty.buffer.ByteBuf[]) -> addComponents
    956:957:java.util.Iterator iterator() -> iterator
    974:975:io.netty.buffer.CompositeByteBuf discardReadComponents() -> discardReadComponents
    1010:1011:io.netty.buffer.CompositeByteBuf retain() -> retain
    1016:1017:io.netty.buffer.CompositeByteBuf retain(int) -> retain
    1022:1023:boolean release() -> release
    1028:1029:boolean release(int) -> release
    1034:1035:io.netty.buffer.CompositeByteBuf touch() -> touch
    1040:1041:io.netty.buffer.CompositeByteBuf touch(java.lang.Object) -> touch
    1047:1047:io.netty.buffer.AdvancedLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    36:36:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    36:36:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    36:36:io.netty.buffer.ByteBuf touch() -> touch
    36:36:io.netty.buffer.ByteBuf retain(int) -> retain
    36:36:io.netty.buffer.ByteBuf retain() -> retain
    36:36:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    36:36:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    36:36:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    36:36:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> writeBytes
    36:36:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    36:36:io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    36:36:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    36:36:io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    36:36:io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    36:36:io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    36:36:io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    36:36:io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    36:36:io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    36:36:io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    36:36:io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    36:36:io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    36:36:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> readBytes
    36:36:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> readBytes
    36:36:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    36:36:io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    36:36:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    36:36:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    36:36:io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    36:36:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    36:36:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    36:36:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    36:36:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    36:36:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    36:36:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    36:36:io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    36:36:io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    36:36:io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    36:36:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    36:36:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    36:36:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    36:36:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    36:36:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    36:36:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    36:36:io.netty.buffer.ByteBuf capacity(int) -> capacity
    36:36:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    36:36:io.netty.util.ReferenceCounted touch() -> touch
    36:36:io.netty.util.ReferenceCounted retain(int) -> retain
    36:36:io.netty.util.ReferenceCounted retain() -> retain
io.netty.buffer.ByteBuf -> io.netty.buffer.ByteBuf:
    249:249:void <init>() -> <init>
    int capacity() -> capacity
    io.netty.buffer.ByteBuf capacity(int) -> capacity
    int maxCapacity() -> maxCapacity
    io.netty.buffer.ByteBufAllocator alloc() -> alloc
    java.nio.ByteOrder order() -> order
    io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    io.netty.buffer.ByteBuf unwrap() -> unwrap
    boolean isDirect() -> isDirect
    boolean isReadOnly() -> isReadOnly
    io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    int readerIndex() -> readerIndex
    io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    int writerIndex() -> writerIndex
    io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    int readableBytes() -> readableBytes
    int writableBytes() -> writableBytes
    boolean isReadable() -> isReadable
    boolean isReadable(int) -> isReadable
    boolean isWritable() -> isWritable
    boolean isWritable(int) -> isWritable
    io.netty.buffer.ByteBuf clear() -> clear
    io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    int ensureWritable(int,boolean) -> ensureWritable
    byte getByte(int) -> getByte
    short getUnsignedByte(int) -> getUnsignedByte
    short getShort(int) -> getShort
    short getShortLE(int) -> getShortLE
    int getUnsignedShort(int) -> getUnsignedShort
    int getUnsignedShortLE(int) -> getUnsignedShortLE
    int getMedium(int) -> getMedium
    int getUnsignedMedium(int) -> getUnsignedMedium
    int getInt(int) -> getInt
    int getIntLE(int) -> getIntLE
    long getUnsignedInt(int) -> getUnsignedInt
    long getUnsignedIntLE(int) -> getUnsignedIntLE
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    byte readByte() -> readByte
    short readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    int readMedium() -> readMedium
    int readUnsignedMedium() -> readUnsignedMedium
    int readInt() -> readInt
    long readUnsignedInt() -> readUnsignedInt
    long readLong() -> readLong
    io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    int indexOf(int,int,byte) -> indexOf
    int forEachByte(io.netty.util.ByteProcessor) -> forEachByte
    int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    io.netty.buffer.ByteBuf copy() -> copy
    io.netty.buffer.ByteBuf copy(int,int) -> copy
    io.netty.buffer.ByteBuf slice() -> slice
    io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    io.netty.buffer.ByteBuf slice(int,int) -> slice
    io.netty.buffer.ByteBuf duplicate() -> duplicate
    io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    int nioBufferCount() -> nioBufferCount
    java.nio.ByteBuffer nioBuffer() -> nioBuffer
    java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    boolean hasArray() -> hasArray
    byte[] array() -> array
    int arrayOffset() -> arrayOffset
    boolean hasMemoryAddress() -> hasMemoryAddress
    long memoryAddress() -> memoryAddress
    java.lang.String toString(java.nio.charset.Charset) -> toString
    java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(io.netty.buffer.ByteBuf) -> compareTo
    java.lang.String toString() -> toString
    io.netty.buffer.ByteBuf retain(int) -> retain
    io.netty.buffer.ByteBuf retain() -> retain
    io.netty.buffer.ByteBuf touch() -> touch
    io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    248:248:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    248:248:io.netty.util.ReferenceCounted touch() -> touch
    248:248:io.netty.util.ReferenceCounted retain(int) -> retain
    248:248:io.netty.util.ReferenceCounted retain() -> retain
    248:248:int compareTo(java.lang.Object) -> compareTo
io.netty.buffer.ByteBufAllocator -> io.netty.buffer.ByteBufAllocator:
    io.netty.buffer.ByteBufAllocator DEFAULT -> DEFAULT
    io.netty.buffer.ByteBuf buffer() -> buffer
    io.netty.buffer.ByteBuf buffer(int) -> buffer
    io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    boolean isDirectBufferPooled() -> isDirectBufferPooled
    int calculateNewCapacity(int,int) -> calculateNewCapacity
    24:24:void <clinit>() -> <clinit>
io.netty.buffer.ByteBufHolder -> io.netty.buffer.ByteBufHolder:
    io.netty.buffer.ByteBuf content() -> content
io.netty.buffer.ByteBufInputStream -> io.netty.buffer.ByteBufInputStream:
    io.netty.buffer.ByteBuf buffer -> buffer
    int startIndex -> startIndex
    int endIndex -> endIndex
    boolean closed -> closed
    boolean releaseOnClose -> releaseOnClose
    java.lang.StringBuilder lineBuf -> lineBuf
    62:63:void <init>(io.netty.buffer.ByteBuf) -> <init>
    76:77:void <init>(io.netty.buffer.ByteBuf,int) -> <init>
    88:89:void <init>(io.netty.buffer.ByteBuf,boolean) -> <init>
    103:243:void <init>(io.netty.buffer.ByteBuf,int,boolean) -> <init>
    138:146:void close() -> close
    150:150:int available() -> available
    155:156:void mark(int) -> mark
    160:160:boolean markSupported() -> markSupported
    165:168:int read() -> read
    173:180:int read(byte[],int,int) -> read
    185:186:void reset() -> reset
    190:193:long skip(long) -> skip
    199:200:boolean readBoolean() -> readBoolean
    205:208:byte readByte() -> readByte
    213:213:char readChar() -> readChar
    218:218:double readDouble() -> readDouble
    223:223:float readFloat() -> readFloat
    228:229:void readFully(byte[]) -> readFully
    233:235:void readFully(byte[],int,int) -> readFully
    239:240:int readInt() -> readInt
    247:270:java.lang.String readLine() -> readLine
    275:276:long readLong() -> readLong
    281:282:short readShort() -> readShort
    287:287:java.lang.String readUTF() -> readUTF
    292:292:int readUnsignedByte() -> readUnsignedByte
    297:297:int readUnsignedShort() -> readUnsignedShort
    302:304:int skipBytes(int) -> skipBytes
    308:315:void checkAvailable(int) -> checkAvailable
io.netty.buffer.ByteBufUtil -> io.netty.buffer.ByteBufUtil:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.concurrent.FastThreadLocal CHAR_BUFFERS -> CHAR_BUFFERS
    int MAX_CHAR_BUFFER_SIZE -> MAX_CHAR_BUFFER_SIZE
    int THREAD_LOCAL_BUFFER_SIZE -> THREAD_LOCAL_BUFFER_SIZE
    int MAX_BYTES_PER_CHAR_UTF8 -> MAX_BYTES_PER_CHAR_UTF8
    io.netty.buffer.ByteBufAllocator DEFAULT_ALLOCATOR -> DEFAULT_ALLOCATOR
    io.netty.util.ByteProcessor FIND_NON_ASCII -> FIND_NON_ASCII
    100:100:java.lang.String hexDump(io.netty.buffer.ByteBuf) -> hexDump
    108:108:java.lang.String hexDump(io.netty.buffer.ByteBuf,int,int) -> hexDump
    124:124:java.lang.String hexDump(byte[],int,int) -> hexDump
    156:156:boolean ensureWritableSuccess(int) -> ensureWritableSuccess
    164:190:int hashCode(io.netty.buffer.ByteBuf) -> hashCode
    198:206:int indexOf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> indexOf
    218:254:boolean equals(io.netty.buffer.ByteBuf,int,io.netty.buffer.ByteBuf,int,int) -> equals
    263:267:boolean equals(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> equals
    275:310:int compare(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> compare
    315:321:long compareUintBigEndian(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int,int,int) -> compareUintBigEndian
    326:332:long compareUintLittleEndian(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int,int,int) -> compareUintLittleEndian
    337:343:long compareUintBigEndianA(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int,int,int) -> compareUintBigEndianA
    348:354:long compareUintBigEndianB(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int,int,int) -> compareUintBigEndianB
    362:365:int indexOf(io.netty.buffer.ByteBuf,int,int,byte) -> indexOf
    373:373:short swapShort(short) -> swapShort
    380:384:int swapMedium(int) -> swapMedium
    391:391:int swapInt(int) -> swapInt
    398:398:long swapLong(long) -> swapLong
    406:406:io.netty.buffer.ByteBuf writeShortBE(io.netty.buffer.ByteBuf,int) -> writeShortBE
    414:414:io.netty.buffer.ByteBuf setShortBE(io.netty.buffer.ByteBuf,int,int) -> setShortBE
    422:422:io.netty.buffer.ByteBuf writeMediumBE(io.netty.buffer.ByteBuf,int) -> writeMediumBE
    429:437:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,int) -> readBytes
    443:448:int firstIndexOf(io.netty.buffer.ByteBuf,int,int,byte) -> firstIndexOf
    452:457:int lastIndexOf(io.netty.buffer.ByteBuf,int,int,byte) -> lastIndexOf
    470:472:io.netty.buffer.ByteBuf writeUtf8(io.netty.buffer.ByteBufAllocator,java.lang.CharSequence) -> writeUtf8
    483:495:int writeUtf8(io.netty.buffer.ByteBuf,java.lang.CharSequence) -> writeUtf8
    502:545:int writeUtf8(io.netty.buffer.AbstractByteBuf,int,java.lang.CharSequence,int) -> writeUtf8
    552:552:int utf8MaxBytes(java.lang.CharSequence) -> utf8MaxBytes
    578:600:int writeAscii(io.netty.buffer.ByteBuf,java.lang.CharSequence) -> writeAscii
    608:611:int writeAscii(io.netty.buffer.AbstractByteBuf,int,java.lang.CharSequence,int) -> writeAscii
    637:664:io.netty.buffer.ByteBuf encodeString0(io.netty.buffer.ByteBufAllocator,boolean,java.nio.CharBuffer,java.nio.charset.Charset,int) -> encodeString0
    670:700:java.lang.String decodeString(io.netty.buffer.ByteBuf,int,int,java.nio.charset.Charset) -> decodeString
    705:716:void decodeString(java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,java.nio.CharBuffer) -> decodeString
    724:731:io.netty.buffer.ByteBuf threadLocalDirectBuffer() -> threadLocalDirectBuffer
    740:740:byte[] getBytes(io.netty.buffer.ByteBuf) -> getBytes
    748:748:byte[] getBytes(io.netty.buffer.ByteBuf,int,int) -> getBytes
    758:774:byte[] getBytes(io.netty.buffer.ByteBuf,int,int,boolean) -> getBytes
    784:785:void copy(io.netty.util.AsciiString,io.netty.buffer.ByteBuf) -> copy
    799:805:void copy(io.netty.util.AsciiString,int,io.netty.buffer.ByteBuf,int,int) -> copy
    816:822:void copy(io.netty.util.AsciiString,int,io.netty.buffer.ByteBuf,int) -> copy
    844:845:void appendPrettyHexDump(java.lang.StringBuilder,io.netty.buffer.ByteBuf) -> appendPrettyHexDump
    853:854:void appendPrettyHexDump(java.lang.StringBuilder,io.netty.buffer.ByteBuf,int,int) -> appendPrettyHexDump
    1315:1315:void <init>() -> <init>
    51:51:int access$500() -> access$500
    53:1175:void <clinit>() -> <clinit>
io.netty.buffer.ByteBufUtil$1 -> io.netty.buffer.ByteBufUtil$1:
    54:54:void <init>() -> <init>
    57:57:java.nio.CharBuffer initialValue() -> initialValue
    54:54:java.lang.Object initialValue() -> initialValue
io.netty.buffer.ByteBufUtil$2 -> io.netty.buffer.ByteBufUtil$2:
    1175:1175:void <init>() -> <init>
    1178:1178:boolean process(byte) -> process
io.netty.buffer.ByteBufUtil$HexUtil -> io.netty.buffer.ByteBufUtil$HexUtil:
    char[] BYTE2CHAR -> BYTE2CHAR
    char[] HEXDUMP_TABLE -> HEXDUMP_TABLE
    java.lang.String[] HEXPADDING -> HEXPADDING
    java.lang.String[] HEXDUMP_ROWPREFIXES -> HEXDUMP_ROWPREFIXES
    java.lang.String[] BYTE2HEX -> BYTE2HEX
    java.lang.String[] BYTEPADDING -> BYTEPADDING
    921:939:java.lang.String hexDump(io.netty.buffer.ByteBuf,int,int) -> hexDump
    943:961:java.lang.String hexDump(byte[],int,int) -> hexDump
    976:1037:void appendPrettyHexDump(java.lang.StringBuilder,io.netty.buffer.ByteBuf,int,int) -> appendPrettyHexDump
    1040:1048:void appendHexDumpRowPrefix(java.lang.StringBuilder,int,int) -> appendHexDumpRowPrefix
    857:857:java.lang.String access$000(io.netty.buffer.ByteBuf,int,int) -> access$000
    857:857:java.lang.String access$100(byte[],int,int) -> access$100
    857:857:void access$300(java.lang.StringBuilder,io.netty.buffer.ByteBuf,int,int) -> access$300
    859:918:void <clinit>() -> <clinit>
io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf -> io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    io.netty.util.Recycler$Handle handle -> handle
    1095:1097:io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf newInstance() -> newInstance
    1103:1105:void <init>(io.netty.util.Recycler$Handle) -> <init>
    1109:1115:void deallocate() -> deallocate
    1085:1085:void <init>(io.netty.util.Recycler$Handle,io.netty.buffer.ByteBufUtil$1) -> <init>
    1087:1087:void <clinit>() -> <clinit>
io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf$1 -> io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf$1:
    1087:1087:void <init>() -> <init>
    1090:1090:io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf newObject(io.netty.util.Recycler$Handle) -> newObject
    1087:1087:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf -> io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    io.netty.util.Recycler$Handle handle -> handle
    1062:1064:io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf newInstance() -> newInstance
    1070:1072:void <init>(io.netty.util.Recycler$Handle) -> <init>
    1076:1082:void deallocate() -> deallocate
    1051:1051:void <init>(io.netty.util.Recycler$Handle,io.netty.buffer.ByteBufUtil$1) -> <init>
    1053:1053:void <clinit>() -> <clinit>
io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1 -> io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1:
    1054:1054:void <init>() -> <init>
    1057:1057:io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf newObject(io.netty.util.Recycler$Handle) -> newObject
    1054:1054:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.CompositeByteBuf -> io.netty.buffer.CompositeByteBuf:
    java.nio.ByteBuffer EMPTY_NIO_BUFFER -> EMPTY_NIO_BUFFER
    java.util.Iterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    io.netty.buffer.ByteBufAllocator alloc -> alloc
    boolean direct -> direct
    io.netty.buffer.CompositeByteBuf$ComponentList components -> components
    int maxNumComponents -> maxNumComponents
    boolean freed -> freed
    boolean $assertionsDisabled -> $assertionsDisabled
    57:65:void <init>(io.netty.buffer.ByteBufAllocator,boolean,int) -> <init>
    114:114:io.netty.buffer.CompositeByteBuf$ComponentList newList(int) -> newList
    119:124:void <init>(io.netty.buffer.ByteBufAllocator) -> <init>
    194:197:io.netty.buffer.CompositeByteBuf addComponent(boolean,io.netty.buffer.ByteBuf) -> addComponent
    210:212:io.netty.buffer.CompositeByteBuf addComponents(boolean,io.netty.buffer.ByteBuf[]) -> addComponents
    250:282:int addComponent0(boolean,int,io.netty.buffer.ByteBuf) -> addComponent0
    308:336:int addComponents0(boolean,int,io.netty.buffer.ByteBuf[],int,int) -> addComponents0
    401:419:void consolidateIfNeeded() -> consolidateIfNeeded
    422:428:void checkComponentIndex(int) -> checkComponentIndex
    441:459:void updateComponentOffsets(int) -> updateComponentOffsets
    509:513:java.util.Iterator iterator() -> iterator
    563:572:boolean isDirect() -> isDirect
    577:583:boolean hasArray() -> hasArray
    589:595:byte[] array() -> array
    601:607:int arrayOffset() -> arrayOffset
    613:619:boolean hasMemoryAddress() -> hasMemoryAddress
    625:631:long memoryAddress() -> memoryAddress
    637:641:int capacity() -> capacity
    646:689:io.netty.buffer.CompositeByteBuf capacity(int) -> capacity
    694:694:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    699:699:java.nio.ByteOrder order() -> order
    706:706:int numComponents() -> numComponents
    720:734:int toComponentIndex(int) -> toComponentIndex
    744:744:byte getByte(int) -> getByte
    749:750:byte _getByte(int) -> _getByte
    755:761:short _getShort(int) -> _getShort
    767:773:short _getShortLE(int) -> _getShortLE
    779:785:int _getUnsignedMedium(int) -> _getUnsignedMedium
    803:809:int _getInt(int) -> _getInt
    815:821:int _getIntLE(int) -> _getIntLE
    827:833:long _getLong(int) -> _getLong
    851:868:io.netty.buffer.CompositeByteBuf getBytes(int,byte[],int,int) -> getBytes
    873:897:io.netty.buffer.CompositeByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    902:919:io.netty.buffer.CompositeByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    925:933:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    979:981:io.netty.buffer.CompositeByteBuf setByte(int,int) -> setByte
    986:987:void _setByte(int,int) -> _setByte
    991:991:io.netty.buffer.CompositeByteBuf setShort(int,int) -> setShort
    996:1006:void _setShort(int,int) -> _setShort
    1010:1020:void _setShortLE(int,int) -> _setShortLE
    1024:1024:io.netty.buffer.CompositeByteBuf setMedium(int,int) -> setMedium
    1029:1039:void _setMedium(int,int) -> _setMedium
    1043:1053:void _setMediumLE(int,int) -> _setMediumLE
    1057:1057:io.netty.buffer.CompositeByteBuf setInt(int,int) -> setInt
    1062:1072:void _setInt(int,int) -> _setInt
    1090:1090:io.netty.buffer.CompositeByteBuf setLong(int,long) -> setLong
    1095:1105:void _setLong(int,long) -> _setLong
    1123:1140:io.netty.buffer.CompositeByteBuf setBytes(int,byte[],int,int) -> setBytes
    1145:1169:io.netty.buffer.CompositeByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    1174:1191:io.netty.buffer.CompositeByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    1240:1283:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    1336:1341:io.netty.buffer.ByteBuf copy(int,int) -> copy
    1345:1361:void copyTo(int,int,int,io.netty.buffer.ByteBuf) -> copyTo
    1390:1391:io.netty.buffer.ByteBuf internalComponent(int) -> internalComponent
    1405:1420:io.netty.buffer.CompositeByteBuf$Component findComponent(int) -> findComponent
    1425:1437:int nioBufferCount() -> nioBufferCount
    1443:1449:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    1455:1475:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    1480:1507:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    1571:1603:io.netty.buffer.CompositeByteBuf discardReadComponents() -> discardReadComponents
    1608:1650:io.netty.buffer.CompositeByteBuf discardReadBytes() -> discardReadBytes
    1654:1654:io.netty.buffer.ByteBuf allocBuffer(int) -> allocBuffer
    1659:1661:java.lang.String toString() -> toString
    1682:1682:io.netty.buffer.CompositeByteBuf readerIndex(int) -> readerIndex
    1687:1687:io.netty.buffer.CompositeByteBuf writerIndex(int) -> writerIndex
    1692:1692:io.netty.buffer.CompositeByteBuf setIndex(int,int) -> setIndex
    1697:1697:io.netty.buffer.CompositeByteBuf clear() -> clear
    1702:1702:io.netty.buffer.CompositeByteBuf markReaderIndex() -> markReaderIndex
    1707:1707:io.netty.buffer.CompositeByteBuf resetReaderIndex() -> resetReaderIndex
    1712:1712:io.netty.buffer.CompositeByteBuf markWriterIndex() -> markWriterIndex
    1722:1722:io.netty.buffer.CompositeByteBuf ensureWritable(int) -> ensureWritable
    1737:1737:io.netty.buffer.CompositeByteBuf getBytes(int,byte[]) -> getBytes
    1772:1772:io.netty.buffer.CompositeByteBuf setBytes(int,byte[]) -> setBytes
    1777:1777:io.netty.buffer.CompositeByteBuf setZero(int,int) -> setZero
    1782:1782:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    1787:1787:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> readBytes
    1792:1792:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> readBytes
    1797:1797:io.netty.buffer.CompositeByteBuf readBytes(byte[]) -> readBytes
    1802:1802:io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int) -> readBytes
    1817:1817:io.netty.buffer.CompositeByteBuf skipBytes(int) -> skipBytes
    1827:1827:io.netty.buffer.CompositeByteBuf writeByte(int) -> writeByte
    1832:1832:io.netty.buffer.CompositeByteBuf writeShort(int) -> writeShort
    1837:1837:io.netty.buffer.CompositeByteBuf writeMedium(int) -> writeMedium
    1842:1842:io.netty.buffer.CompositeByteBuf writeInt(int) -> writeInt
    1847:1847:io.netty.buffer.CompositeByteBuf writeLong(long) -> writeLong
    1852:1852:io.netty.buffer.CompositeByteBuf writeChar(int) -> writeChar
    1857:1857:io.netty.buffer.CompositeByteBuf writeFloat(float) -> writeFloat
    1862:1862:io.netty.buffer.CompositeByteBuf writeDouble(double) -> writeDouble
    1867:1867:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    1872:1872:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> writeBytes
    1877:1877:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    1882:1882:io.netty.buffer.CompositeByteBuf writeBytes(byte[]) -> writeBytes
    1887:1887:io.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int) -> writeBytes
    1892:1892:io.netty.buffer.CompositeByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    1897:1897:io.netty.buffer.CompositeByteBuf writeZero(int) -> writeZero
    1902:1902:io.netty.buffer.CompositeByteBuf retain(int) -> retain
    1907:1907:io.netty.buffer.CompositeByteBuf retain() -> retain
    1912:1912:io.netty.buffer.CompositeByteBuf touch() -> touch
    1917:1917:io.netty.buffer.CompositeByteBuf touch(java.lang.Object) -> touch
    1922:1922:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    1927:1927:io.netty.buffer.CompositeByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    1932:1943:void deallocate() -> deallocate
    1947:1947:io.netty.buffer.ByteBuf unwrap() -> unwrap
    44:44:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    44:44:io.netty.buffer.ByteBuf touch() -> touch
    44:44:io.netty.buffer.ByteBuf retain(int) -> retain
    44:44:io.netty.buffer.ByteBuf retain() -> retain
    44:44:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    44:44:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    44:44:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    44:44:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> writeBytes
    44:44:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    44:44:io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    44:44:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    44:44:io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    44:44:io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    44:44:io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    44:44:io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    44:44:io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    44:44:io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    44:44:io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    44:44:io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    44:44:io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    44:44:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> readBytes
    44:44:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> readBytes
    44:44:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    44:44:io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    44:44:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    44:44:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    44:44:io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    44:44:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    44:44:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    44:44:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    44:44:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    44:44:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    44:44:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    44:44:io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    44:44:io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    44:44:io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    44:44:io.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    44:44:io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    44:44:io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    44:44:io.netty.buffer.ByteBuf clear() -> clear
    44:44:io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    44:44:io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    44:44:io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    44:44:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    44:44:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    44:44:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    44:44:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    44:44:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    44:44:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    44:44:io.netty.buffer.ByteBuf capacity(int) -> capacity
    44:44:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    44:44:io.netty.util.ReferenceCounted touch() -> touch
    44:44:io.netty.util.ReferenceCounted retain(int) -> retain
    44:44:io.netty.util.ReferenceCounted retain() -> retain
    44:44:io.netty.buffer.CompositeByteBuf$ComponentList access$100(io.netty.buffer.CompositeByteBuf) -> access$100
    44:47:void <clinit>() -> <clinit>
io.netty.buffer.CompositeByteBuf$1 -> io.netty.buffer.CompositeByteBuf$1:
io.netty.buffer.CompositeByteBuf$Component -> io.netty.buffer.CompositeByteBuf$Component:
    io.netty.buffer.ByteBuf buf -> buf
    int length -> length
    int offset -> offset
    int endOffset -> endOffset
    1670:1673:void <init>(io.netty.buffer.ByteBuf) -> <init>
    1676:1677:void freeIfNecessary() -> freeIfNecessary
io.netty.buffer.CompositeByteBuf$ComponentList -> io.netty.buffer.CompositeByteBuf$ComponentList:
    1983:1984:void <init>(int) -> <init>
    1989:1990:void removeRange(int,int) -> removeRange
io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator -> io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:
    int size -> size
    int index -> index
    io.netty.buffer.CompositeByteBuf this$0 -> this$0
    1950:1951:void <init>(io.netty.buffer.CompositeByteBuf) -> <init>
    1956:1956:boolean hasNext() -> hasNext
    1961:1970:io.netty.buffer.ByteBuf next() -> next
    1976:1976:void remove() -> remove
    1950:1950:java.lang.Object next() -> next
    1950:1950:void <init>(io.netty.buffer.CompositeByteBuf,io.netty.buffer.CompositeByteBuf$1) -> <init>
io.netty.buffer.DefaultByteBufHolder -> io.netty.buffer.DefaultByteBufHolder:
    io.netty.buffer.ByteBuf data -> data
    29:34:void <init>(io.netty.buffer.ByteBuf) -> <init>
    38:41:io.netty.buffer.ByteBuf content() -> content
    51:51:io.netty.buffer.ByteBufHolder copy() -> copy
    61:61:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    71:71:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    83:83:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    88:88:int refCnt() -> refCnt
    93:94:io.netty.buffer.ByteBufHolder retain() -> retain
    99:100:io.netty.buffer.ByteBufHolder retain(int) -> retain
    105:106:io.netty.buffer.ByteBufHolder touch() -> touch
    111:112:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    117:117:boolean release() -> release
    122:122:boolean release(int) -> release
    130:130:java.lang.String contentToString() -> contentToString
    135:135:java.lang.String toString() -> toString
    140:146:boolean equals(java.lang.Object) -> equals
    151:151:int hashCode() -> hashCode
    25:25:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:io.netty.util.ReferenceCounted touch() -> touch
    25:25:io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:io.netty.util.ReferenceCounted retain() -> retain
io.netty.buffer.DuplicatedByteBuf -> io.netty.buffer.DuplicatedByteBuf:
    io.netty.buffer.ByteBuf buffer -> buffer
    42:43:void <init>(io.netty.buffer.ByteBuf) -> <init>
    46:59:void <init>(io.netty.buffer.ByteBuf,int,int) -> <init>
    63:63:io.netty.buffer.ByteBuf unwrap() -> unwrap
    68:68:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    74:74:java.nio.ByteOrder order() -> order
    79:79:boolean isDirect() -> isDirect
    84:84:int capacity() -> capacity
    89:90:io.netty.buffer.ByteBuf capacity(int) -> capacity
    95:95:boolean hasArray() -> hasArray
    100:100:byte[] array() -> array
    105:105:int arrayOffset() -> arrayOffset
    110:110:boolean hasMemoryAddress() -> hasMemoryAddress
    115:115:long memoryAddress() -> memoryAddress
    120:120:byte getByte(int) -> getByte
    125:125:byte _getByte(int) -> _getByte
    130:130:short getShort(int) -> getShort
    135:135:short _getShort(int) -> _getShort
    140:140:short getShortLE(int) -> getShortLE
    145:145:short _getShortLE(int) -> _getShortLE
    150:150:int getUnsignedMedium(int) -> getUnsignedMedium
    155:155:int _getUnsignedMedium(int) -> _getUnsignedMedium
    170:170:int getInt(int) -> getInt
    175:175:int _getInt(int) -> _getInt
    180:180:int getIntLE(int) -> getIntLE
    185:185:int _getIntLE(int) -> _getIntLE
    190:190:long getLong(int) -> getLong
    195:195:long _getLong(int) -> _getLong
    210:210:io.netty.buffer.ByteBuf copy(int,int) -> copy
    215:215:io.netty.buffer.ByteBuf slice(int,int) -> slice
    220:221:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    226:227:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    232:233:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    238:239:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    244:245:void _setByte(int,int) -> _setByte
    249:250:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    255:256:void _setShort(int,int) -> _setShort
    260:261:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    266:267:void _setShortLE(int,int) -> _setShortLE
    271:272:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    277:278:void _setMedium(int,int) -> _setMedium
    282:283:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    288:289:void _setMediumLE(int,int) -> _setMediumLE
    293:294:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    299:300:void _setInt(int,int) -> _setInt
    315:316:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    321:322:void _setLong(int,long) -> _setLong
    337:338:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    343:344:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    349:350:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    363:363:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    381:381:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    392:392:int nioBufferCount() -> nioBufferCount
    397:397:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    402:402:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    407:407:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
io.netty.buffer.EmptyByteBuf -> io.netty.buffer.EmptyByteBuf:
    java.nio.ByteBuffer EMPTY_BYTE_BUFFER -> EMPTY_BYTE_BUFFER
    long EMPTY_BYTE_BUFFER_ADDRESS -> EMPTY_BYTE_BUFFER_ADDRESS
    io.netty.buffer.ByteBufAllocator alloc -> alloc
    java.nio.ByteOrder order -> order
    java.lang.String str -> str
    io.netty.buffer.EmptyByteBuf swapped -> swapped
    60:61:void <init>(io.netty.buffer.ByteBufAllocator) -> <init>
    63:71:void <init>(io.netty.buffer.ByteBufAllocator,java.nio.ByteOrder) -> <init>
    75:75:int capacity() -> capacity
    80:80:io.netty.buffer.ByteBuf capacity(int) -> capacity
    85:85:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    90:90:java.nio.ByteOrder order() -> order
    95:95:io.netty.buffer.ByteBuf unwrap() -> unwrap
    100:100:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    105:105:boolean isReadOnly() -> isReadOnly
    110:110:boolean isDirect() -> isDirect
    115:115:int maxCapacity() -> maxCapacity
    120:133:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    138:138:int readerIndex() -> readerIndex
    143:143:io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    148:148:int writerIndex() -> writerIndex
    153:153:io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    158:160:io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    165:165:int readableBytes() -> readableBytes
    170:170:int writableBytes() -> writableBytes
    180:180:boolean isReadable() -> isReadable
    185:185:boolean isWritable() -> isWritable
    190:190:io.netty.buffer.ByteBuf clear() -> clear
    195:195:io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    200:200:io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    215:215:io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    220:220:io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    225:231:io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    236:244:int ensureWritable(int,boolean) -> ensureWritable
    254:254:byte getByte(int) -> getByte
    259:259:short getUnsignedByte(int) -> getUnsignedByte
    264:264:short getShort(int) -> getShort
    269:269:short getShortLE(int) -> getShortLE
    274:274:int getUnsignedShort(int) -> getUnsignedShort
    279:279:int getUnsignedShortLE(int) -> getUnsignedShortLE
    284:284:int getMedium(int) -> getMedium
    294:294:int getUnsignedMedium(int) -> getUnsignedMedium
    304:304:int getInt(int) -> getInt
    309:309:int getIntLE(int) -> getIntLE
    314:314:long getUnsignedInt(int) -> getUnsignedInt
    319:319:long getUnsignedIntLE(int) -> getUnsignedIntLE
    324:324:long getLong(int) -> getLong
    339:339:float getFloat(int) -> getFloat
    344:344:double getDouble(int) -> getDouble
    359:359:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    364:364:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    369:369:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    374:374:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    384:385:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    407:407:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    412:412:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    417:417:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    422:422:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    427:427:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    432:432:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    442:442:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    477:477:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    487:487:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    492:492:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    503:504:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    515:515:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    520:520:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    530:530:byte readByte() -> readByte
    535:535:short readUnsignedByte() -> readUnsignedByte
    540:540:short readShort() -> readShort
    550:550:int readUnsignedShort() -> readUnsignedShort
    560:560:int readMedium() -> readMedium
    570:570:int readUnsignedMedium() -> readUnsignedMedium
    580:580:int readInt() -> readInt
    590:590:long readUnsignedInt() -> readUnsignedInt
    600:600:long readLong() -> readLong
    625:625:io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    630:630:io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    635:635:io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    640:640:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    655:655:io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    660:660:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    675:676:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    693:693:io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    703:703:io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    708:708:io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    713:713:io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    718:718:io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    723:723:io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    728:728:io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    738:738:io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    748:748:io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    753:753:io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    758:758:io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    763:763:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    773:773:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    778:778:io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    783:783:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    788:788:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    799:800:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    811:811:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    816:816:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    821:823:int indexOf(int,int,byte) -> indexOf
    845:845:int forEachByte(io.netty.util.ByteProcessor) -> forEachByte
    850:851:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    861:862:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    867:867:io.netty.buffer.ByteBuf copy() -> copy
    872:872:io.netty.buffer.ByteBuf copy(int,int) -> copy
    877:877:io.netty.buffer.ByteBuf slice() -> slice
    882:882:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    887:887:io.netty.buffer.ByteBuf slice(int,int) -> slice
    897:897:io.netty.buffer.ByteBuf duplicate() -> duplicate
    902:902:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    907:907:int nioBufferCount() -> nioBufferCount
    912:912:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    917:918:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    923:923:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    928:929:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    934:934:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    939:939:boolean hasArray() -> hasArray
    944:944:byte[] array() -> array
    949:949:int arrayOffset() -> arrayOffset
    954:954:boolean hasMemoryAddress() -> hasMemoryAddress
    959:962:long memoryAddress() -> memoryAddress
    968:968:java.lang.String toString(java.nio.charset.Charset) -> toString
    973:974:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    979:979:int hashCode() -> hashCode
    984:984:boolean equals(java.lang.Object) -> equals
    989:989:int compareTo(io.netty.buffer.ByteBuf) -> compareTo
    994:994:java.lang.String toString() -> toString
    999:999:boolean isReadable(int) -> isReadable
    1004:1004:boolean isWritable(int) -> isWritable
    1009:1009:int refCnt() -> refCnt
    1014:1014:io.netty.buffer.ByteBuf retain() -> retain
    1019:1019:io.netty.buffer.ByteBuf retain(int) -> retain
    1024:1024:io.netty.buffer.ByteBuf touch() -> touch
    1029:1029:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    1034:1034:boolean release() -> release
    1039:1039:boolean release(int) -> release
    1043:1046:io.netty.buffer.ByteBuf checkIndex(int) -> checkIndex
    1050:1056:io.netty.buffer.ByteBuf checkIndex(int,int) -> checkIndex
    1060:1066:io.netty.buffer.ByteBuf checkLength(int) -> checkLength
    37:37:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    37:37:io.netty.util.ReferenceCounted touch() -> touch
    37:37:io.netty.util.ReferenceCounted retain(int) -> retain
    37:37:io.netty.util.ReferenceCounted retain() -> retain
    37:37:int compareTo(java.lang.Object) -> compareTo
    39:52:void <clinit>() -> <clinit>
io.netty.buffer.HeapByteBufUtil -> io.netty.buffer.HeapByteBufUtil:
    24:24:byte getByte(byte[],int) -> getByte
    28:28:short getShort(byte[],int) -> getShort
    32:32:short getShortLE(byte[],int) -> getShortLE
    36:36:int getUnsignedMedium(byte[],int) -> getUnsignedMedium
    48:48:int getInt(byte[],int) -> getInt
    55:55:int getIntLE(byte[],int) -> getIntLE
    62:62:long getLong(byte[],int) -> getLong
    84:85:void setByte(byte[],int,int) -> setByte
    88:90:void setShort(byte[],int,int) -> setShort
    93:95:void setShortLE(byte[],int,int) -> setShortLE
    98:101:void setMedium(byte[],int,int) -> setMedium
    104:107:void setMediumLE(byte[],int,int) -> setMediumLE
    110:114:void setInt(byte[],int,int) -> setInt
    124:132:void setLong(byte[],int,long) -> setLong
io.netty.buffer.PoolArena -> io.netty.buffer.PoolArena:
    boolean HAS_UNSAFE -> HAS_UNSAFE
    io.netty.buffer.PooledByteBufAllocator parent -> parent
    int maxOrder -> maxOrder
    int pageSize -> pageSize
    int pageShifts -> pageShifts
    int chunkSize -> chunkSize
    int subpageOverflowMask -> subpageOverflowMask
    int numSmallSubpagePools -> numSmallSubpagePools
    int directMemoryCacheAlignment -> directMemoryCacheAlignment
    int directMemoryCacheAlignmentMask -> directMemoryCacheAlignmentMask
    io.netty.buffer.PoolSubpage[] tinySubpagePools -> tinySubpagePools
    io.netty.buffer.PoolSubpage[] smallSubpagePools -> smallSubpagePools
    io.netty.buffer.PoolChunkList q050 -> q050
    io.netty.buffer.PoolChunkList q025 -> q025
    io.netty.buffer.PoolChunkList q000 -> q000
    io.netty.buffer.PoolChunkList qInit -> qInit
    io.netty.buffer.PoolChunkList q075 -> q075
    io.netty.buffer.PoolChunkList q100 -> q100
    java.util.List chunkListMetrics -> chunkListMetrics
    long allocationsNormal -> allocationsNormal
    io.netty.util.internal.LongCounter allocationsTiny -> allocationsTiny
    io.netty.util.internal.LongCounter allocationsSmall -> allocationsSmall
    io.netty.util.internal.LongCounter allocationsHuge -> allocationsHuge
    io.netty.util.internal.LongCounter activeBytesHuge -> activeBytesHuge
    long deallocationsTiny -> deallocationsTiny
    long deallocationsSmall -> deallocationsSmall
    long deallocationsNormal -> deallocationsNormal
    io.netty.util.internal.LongCounter deallocationsHuge -> deallocationsHuge
    java.util.concurrent.atomic.AtomicInteger numThreadCaches -> numThreadCaches
    boolean $assertionsDisabled -> $assertionsDisabled
    67:128:void <init>(io.netty.buffer.PooledByteBufAllocator,int,int,int,int,int) -> <init>
    131:134:io.netty.buffer.PoolSubpage newSubpagePoolHead(int) -> newSubpagePoolHead
    139:139:io.netty.buffer.PoolSubpage[] newSubpagePoolArray(int) -> newSubpagePoolArray
    boolean isDirect() -> isDirect
    145:147:io.netty.buffer.PooledByteBuf allocate(io.netty.buffer.PoolThreadCache,int,int) -> allocate
    151:151:int tinyIdx(int) -> tinyIdx
    155:161:int smallIdx(int) -> smallIdx
    166:166:boolean isTinyOrSmall(int) -> isTinyOrSmall
    171:171:boolean isTiny(int) -> isTiny
    175:233:void allocate(io.netty.buffer.PoolThreadCache,io.netty.buffer.PooledByteBuf,int) -> allocate
    237:249:void allocateNormal(io.netty.buffer.PooledByteBuf,int,int) -> allocateNormal
    252:257:void incTinySmallAllocation(boolean) -> incTinySmallAllocation
    260:264:void allocateHuge(io.netty.buffer.PooledByteBuf,int) -> allocateHuge
    267:281:void free(io.netty.buffer.PoolChunk,long,int,io.netty.buffer.PoolThreadCache) -> free
    284:287:io.netty.buffer.PoolArena$SizeClass sizeClass(int) -> sizeClass
    292:312:void freeChunk(io.netty.buffer.PoolChunk,long,io.netty.buffer.PoolArena$SizeClass) -> freeChunk
    317:330:io.netty.buffer.PoolSubpage findSubpagePoolHead(int) -> findSubpagePoolHead
    334:371:int normalizeCapacity(int) -> normalizeCapacity
    375:376:int alignCapacity(int) -> alignCapacity
    380:420:void reallocate(io.netty.buffer.PooledByteBuf,int,boolean) -> reallocate
    569:577:long numActiveBytes() -> numActiveBytes
    io.netty.buffer.PoolChunk newChunk(int,int,int,int) -> newChunk
    io.netty.buffer.PoolChunk newUnpooledChunk(int) -> newUnpooledChunk
    io.netty.buffer.PooledByteBuf newByteBuf(int) -> newByteBuf
    void memoryCopy(java.lang.Object,int,java.lang.Object,int,int) -> memoryCopy
    void destroyChunk(io.netty.buffer.PoolChunk) -> destroyChunk
    588:620:java.lang.String toString() -> toString
    624:642:void appendPoolSubPages(java.lang.StringBuilder,io.netty.buffer.PoolSubpage[]) -> appendPoolSubPages
    647:653:void finalize() -> finalize
    656:659:void destroyPoolSubPages(io.netty.buffer.PoolSubpage[]) -> destroyPoolSubPages
    662:665:void destroyPoolChunkLists(io.netty.buffer.PoolChunkList[]) -> destroyPoolChunkLists
    31:32:void <clinit>() -> <clinit>
io.netty.buffer.PoolArena$1 -> io.netty.buffer.PoolArena$1:
    int[] $SwitchMap$io$netty$buffer$PoolArena$SizeClass -> $SwitchMap$io$netty$buffer$PoolArena$SizeClass
    293:293:void <clinit>() -> <clinit>
io.netty.buffer.PoolArena$DirectArena -> io.netty.buffer.PoolArena$DirectArena:
    719:721:void <init>(io.netty.buffer.PooledByteBufAllocator,int,int,int,int,int) -> <init>
    725:725:boolean isDirect() -> isDirect
    731:732:int offsetCacheLine(java.nio.ByteBuffer) -> offsetCacheLine
    738:747:io.netty.buffer.PoolChunk newChunk(int,int,int,int) -> newChunk
    752:759:io.netty.buffer.PoolChunk newUnpooledChunk(int) -> newUnpooledChunk
    763:764:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    769:774:void destroyChunk(io.netty.buffer.PoolChunk) -> destroyChunk
    778:781:io.netty.buffer.PooledByteBuf newByteBuf(int) -> newByteBuf
    787:803:void memoryCopy(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int) -> memoryCopy
    715:715:void memoryCopy(java.lang.Object,int,java.lang.Object,int,int) -> memoryCopy
io.netty.buffer.PoolArena$HeapArena -> io.netty.buffer.PoolArena$HeapArena:
    671:673:void <init>(io.netty.buffer.PooledByteBufAllocator,int,int,int,int,int) -> <init>
    676:676:byte[] newByteArray(int) -> newByteArray
    681:681:boolean isDirect() -> isDirect
    686:686:io.netty.buffer.PoolChunk newChunk(int,int,int,int) -> newChunk
    691:691:io.netty.buffer.PoolChunk newUnpooledChunk(int) -> newUnpooledChunk
    697:697:void destroyChunk(io.netty.buffer.PoolChunk) -> destroyChunk
    701:702:io.netty.buffer.PooledByteBuf newByteBuf(int) -> newByteBuf
    707:712:void memoryCopy(byte[],int,byte[],int,int) -> memoryCopy
    667:667:void memoryCopy(java.lang.Object,int,java.lang.Object,int,int) -> memoryCopy
io.netty.buffer.PoolArena$SizeClass -> io.netty.buffer.PoolArena$SizeClass:
    io.netty.buffer.PoolArena$SizeClass Tiny -> Tiny
    io.netty.buffer.PoolArena$SizeClass Small -> Small
    io.netty.buffer.PoolArena$SizeClass Normal -> Normal
    io.netty.buffer.PoolArena$SizeClass[] $VALUES -> $VALUES
    34:34:io.netty.buffer.PoolArena$SizeClass[] values() -> values
    34:34:io.netty.buffer.PoolArena$SizeClass valueOf(java.lang.String) -> valueOf
    34:34:void <init>(java.lang.String,int) -> <init>
    34:37:void <clinit>() -> <clinit>
io.netty.buffer.PoolChunk -> io.netty.buffer.PoolChunk:
    io.netty.buffer.PoolArena arena -> arena
    java.lang.Object memory -> memory
    boolean unpooled -> unpooled
    int offset -> offset
    byte[] memoryMap -> memoryMap
    byte[] depthMap -> depthMap
    io.netty.buffer.PoolSubpage[] subpages -> subpages
    int subpageOverflowMask -> subpageOverflowMask
    int pageSize -> pageSize
    int pageShifts -> pageShifts
    int maxOrder -> maxOrder
    int chunkSize -> chunkSize
    int log2ChunkSize -> log2ChunkSize
    int maxSubpageAllocs -> maxSubpageAllocs
    byte unusable -> unusable
    int freeBytes -> freeBytes
    io.netty.buffer.PoolChunkList parent -> parent
    io.netty.buffer.PoolChunk prev -> prev
    io.netty.buffer.PoolChunk next -> next
    boolean $assertionsDisabled -> $assertionsDisabled
    135:167:void <init>(io.netty.buffer.PoolArena,java.lang.Object,int,int,int,int,int) -> <init>
    170:186:void <init>(io.netty.buffer.PoolArena,java.lang.Object,int,int) -> <init>
    190:190:io.netty.buffer.PoolSubpage[] newSubpageArray(int) -> newSubpageArray
    196:199:int usage() -> usage
    203:211:int usage(int) -> usage
    215:218:long allocate(int) -> allocate
    231:239:void updateParentsAlloc(int) -> updateParentsAlloc
    249:265:void updateParentsFree(int) -> updateParentsFree
    275:294:int allocateNode(int) -> allocateNode
    304:310:long allocateRun(int) -> allocateRun
    323:345:long allocateSubpage(int) -> allocateSubpage
    357:376:void free(long) -> free
    379:389:void initBuf(io.netty.buffer.PooledByteBuf,long,int) -> initBuf
    392:393:void initBufWithSubpage(io.netty.buffer.PooledByteBuf,long,int) -> initBufWithSubpage
    396:408:void initBufWithSubpage(io.netty.buffer.PooledByteBuf,long,int,int) -> initBufWithSubpage
    411:411:byte value(int) -> value
    415:416:void setValue(int,byte) -> setValue
    419:419:byte depth(int) -> depth
    424:424:int log2(int) -> log2
    429:429:int runLength(int) -> runLength
    434:435:int runOffset(int) -> runOffset
    439:439:int subpageIdx(int) -> subpageIdx
    443:443:int memoryMapIdx(long) -> memoryMapIdx
    447:447:int bitmapIdx(long) -> bitmapIdx
    452:452:int chunkSize() -> chunkSize
    465:479:java.lang.String toString() -> toString
    483:484:void destroy() -> destroy
    103:103:void <clinit>() -> <clinit>
io.netty.buffer.PoolChunkList -> io.netty.buffer.PoolChunkList:
    java.util.Iterator EMPTY_METRICS -> EMPTY_METRICS
    io.netty.buffer.PoolArena arena -> arena
    io.netty.buffer.PoolChunkList nextList -> nextList
    int minUsage -> minUsage
    int maxUsage -> maxUsage
    int maxCapacity -> maxCapacity
    io.netty.buffer.PoolChunk head -> head
    io.netty.buffer.PoolChunkList prevList -> prevList
    boolean $assertionsDisabled -> $assertionsDisabled
    43:50:void <init>(io.netty.buffer.PoolArena,io.netty.buffer.PoolChunkList,int,int,int) -> <init>
    57:69:int calculateMaxCapacity(int,int) -> calculateMaxCapacity
    73:75:void prevList(io.netty.buffer.PoolChunkList) -> prevList
    78:99:boolean allocate(io.netty.buffer.PooledByteBuf,int,int) -> allocate
    103:109:boolean free(io.netty.buffer.PoolChunk,long) -> free
    113:122:boolean move(io.netty.buffer.PoolChunk) -> move
    130:136:boolean move0(io.netty.buffer.PoolChunk) -> move0
    140:145:void add(io.netty.buffer.PoolChunk) -> add
    151:162:void add0(io.netty.buffer.PoolChunk) -> add0
    165:177:void remove(io.netty.buffer.PoolChunk) -> remove
    190:190:int minUsage0(int) -> minUsage0
    195:208:java.util.Iterator iterator() -> iterator
    213:228:java.lang.String toString() -> toString
    232:238:void destroy(io.netty.buffer.PoolArena) -> destroy
    28:29:void <clinit>() -> <clinit>
io.netty.buffer.PoolChunkListMetric -> io.netty.buffer.PoolChunkListMetric:
io.netty.buffer.PoolChunkMetric -> io.netty.buffer.PoolChunkMetric:
    int chunkSize() -> chunkSize
io.netty.buffer.PoolSubpage -> io.netty.buffer.PoolSubpage:
    io.netty.buffer.PoolChunk chunk -> chunk
    int memoryMapIdx -> memoryMapIdx
    int runOffset -> runOffset
    int pageSize -> pageSize
    long[] bitmap -> bitmap
    io.netty.buffer.PoolSubpage prev -> prev
    io.netty.buffer.PoolSubpage next -> next
    boolean doNotDestroy -> doNotDestroy
    int elemSize -> elemSize
    int maxNumElems -> maxNumElems
    int bitmapLength -> bitmapLength
    int nextAvail -> nextAvail
    int numAvail -> numAvail
    boolean $assertionsDisabled -> $assertionsDisabled
    41:48:void <init>(int) -> <init>
    50:57:void <init>(io.netty.buffer.PoolSubpage,io.netty.buffer.PoolChunk,int,int,int,int) -> <init>
    60:75:void init(io.netty.buffer.PoolSubpage,int) -> init
    81:99:long allocate() -> allocate
    107:134:boolean free(io.netty.buffer.PoolSubpage,int) -> free
    139:144:void addToPool(io.netty.buffer.PoolSubpage) -> addToPool
    147:152:void removeFromPool() -> removeFromPool
    155:156:void setNextAvail(int) -> setNextAvail
    159:164:int getNextAvail() -> getNextAvail
    168:176:int findNextAvail() -> findNextAvail
    180:194:int findNextAvail0(int,long) -> findNextAvail0
    198:198:long toHandle(int) -> toHandle
    207:224:java.lang.String toString() -> toString
    255:258:void destroy() -> destroy
    19:19:void <clinit>() -> <clinit>
io.netty.buffer.PoolThreadCache -> io.netty.buffer.PoolThreadCache:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.buffer.PoolArena heapArena -> heapArena
    io.netty.buffer.PoolArena directArena -> directArena
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] tinySubPageHeapCaches -> tinySubPageHeapCaches
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] smallSubPageHeapCaches -> smallSubPageHeapCaches
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] tinySubPageDirectCaches -> tinySubPageDirectCaches
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] smallSubPageDirectCaches -> smallSubPageDirectCaches
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] normalHeapCaches -> normalHeapCaches
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] normalDirectCaches -> normalDirectCaches
    int numShiftsNormalDirect -> numShiftsNormalDirect
    int numShiftsNormalHeap -> numShiftsNormalHeap
    int freeSweepAllocationThreshold -> freeSweepAllocationThreshold
    java.lang.Thread deathWatchThread -> deathWatchThread
    java.lang.Runnable freeTask -> freeTask
    int allocations -> allocations
    boolean $assertionsDisabled -> $assertionsDisabled
    70:142:void <init>(io.netty.buffer.PoolArena,io.netty.buffer.PoolArena,int,int,int,int,int,boolean) -> <init>
    146:155:io.netty.buffer.PoolThreadCache$MemoryRegionCache[] createSubPageCaches(int,int,io.netty.buffer.PoolArena$SizeClass) -> createSubPageCaches
    161:172:io.netty.buffer.PoolThreadCache$MemoryRegionCache[] createNormalCaches(int,int,io.netty.buffer.PoolArena) -> createNormalCaches
    177:182:int log2(int) -> log2
    189:189:boolean allocateTiny(io.netty.buffer.PoolArena,io.netty.buffer.PooledByteBuf,int,int) -> allocateTiny
    196:196:boolean allocateSmall(io.netty.buffer.PoolArena,io.netty.buffer.PooledByteBuf,int,int) -> allocateSmall
    203:203:boolean allocateNormal(io.netty.buffer.PoolArena,io.netty.buffer.PooledByteBuf,int,int) -> allocateNormal
    208:217:boolean allocate(io.netty.buffer.PoolThreadCache$MemoryRegionCache,io.netty.buffer.PooledByteBuf,int) -> allocate
    226:230:boolean add(io.netty.buffer.PoolArena,io.netty.buffer.PoolChunk,long,int,io.netty.buffer.PoolArena$SizeClass) -> add
    234:242:io.netty.buffer.PoolThreadCache$MemoryRegionCache cache(io.netty.buffer.PoolArena,int,io.netty.buffer.PoolArena$SizeClass) -> cache
    250:255:void free() -> free
    258:276:void free0() -> free0
    279:287:int free(io.netty.buffer.PoolThreadCache$MemoryRegionCache[]) -> free
    291:294:int free(io.netty.buffer.PoolThreadCache$MemoryRegionCache) -> free
    298:304:void trim() -> trim
    307:313:void trim(io.netty.buffer.PoolThreadCache$MemoryRegionCache[]) -> trim
    316:320:void trim(io.netty.buffer.PoolThreadCache$MemoryRegionCache) -> trim
    323:327:io.netty.buffer.PoolThreadCache$MemoryRegionCache cacheForTiny(io.netty.buffer.PoolArena,int) -> cacheForTiny
    331:335:io.netty.buffer.PoolThreadCache$MemoryRegionCache cacheForSmall(io.netty.buffer.PoolArena,int) -> cacheForSmall
    339:344:io.netty.buffer.PoolThreadCache$MemoryRegionCache cacheForNormal(io.netty.buffer.PoolArena,int) -> cacheForNormal
    348:351:io.netty.buffer.PoolThreadCache$MemoryRegionCache cache(io.netty.buffer.PoolThreadCache$MemoryRegionCache[],int) -> cache
    39:39:void access$000(io.netty.buffer.PoolThreadCache) -> access$000
    39:41:void <clinit>() -> <clinit>
io.netty.buffer.PoolThreadCache$1 -> io.netty.buffer.PoolThreadCache$1:
    io.netty.buffer.PoolThreadCache this$0 -> this$0
    126:126:void <init>(io.netty.buffer.PoolThreadCache) -> <init>
    129:130:void run() -> run
io.netty.buffer.PoolThreadCache$2 -> io.netty.buffer.PoolThreadCache$2:
    int[] $SwitchMap$io$netty$buffer$PoolArena$SizeClass -> $SwitchMap$io$netty$buffer$PoolArena$SizeClass
    234:234:void <clinit>() -> <clinit>
io.netty.buffer.PoolThreadCache$MemoryRegionCache -> io.netty.buffer.PoolThreadCache$MemoryRegionCache:
    int size -> size
    java.util.Queue queue -> queue
    io.netty.buffer.PoolArena$SizeClass sizeClass -> sizeClass
    int allocations -> allocations
    io.netty.util.Recycler RECYCLER -> RECYCLER
    390:394:void <init>(int,io.netty.buffer.PoolArena$SizeClass) -> <init>
    void initBuf(io.netty.buffer.PoolChunk,long,io.netty.buffer.PooledByteBuf,int) -> initBuf
    407:414:boolean add(io.netty.buffer.PoolChunk,long) -> add
    421:430:boolean allocate(io.netty.buffer.PooledByteBuf,int) -> allocate
    437:437:int free() -> free
    441:451:int free(int) -> free
    458:465:void trim() -> trim
    469:476:void freeEntry(io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry) -> freeEntry
    496:499:io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry newEntry(io.netty.buffer.PoolChunk,long) -> newEntry
    503:503:void <clinit>() -> <clinit>
io.netty.buffer.PoolThreadCache$MemoryRegionCache$1 -> io.netty.buffer.PoolThreadCache$MemoryRegionCache$1:
    503:503:void <init>() -> <init>
    507:507:io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry newObject(io.netty.util.Recycler$Handle) -> newObject
    503:503:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry -> io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry:
    io.netty.util.Recycler$Handle recyclerHandle -> recyclerHandle
    io.netty.buffer.PoolChunk chunk -> chunk
    long handle -> handle
    481:485:void <init>(io.netty.util.Recycler$Handle) -> <init>
    488:491:void recycle() -> recycle
io.netty.buffer.PoolThreadCache$NormalMemoryRegionCache -> io.netty.buffer.PoolThreadCache$NormalMemoryRegionCache:
    374:375:void <init>(int) -> <init>
    380:381:void initBuf(io.netty.buffer.PoolChunk,long,io.netty.buffer.PooledByteBuf,int) -> initBuf
io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache -> io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache:
    359:360:void <init>(int,io.netty.buffer.PoolArena$SizeClass) -> <init>
    365:366:void initBuf(io.netty.buffer.PoolChunk,long,io.netty.buffer.PooledByteBuf,int) -> initBuf
io.netty.buffer.PooledByteBuf -> io.netty.buffer.PooledByteBuf:
    io.netty.util.Recycler$Handle recyclerHandle -> recyclerHandle
    io.netty.buffer.PoolChunk chunk -> chunk
    long handle -> handle
    java.lang.Object memory -> memory
    int offset -> offset
    int length -> length
    int maxLength -> maxLength
    io.netty.buffer.PoolThreadCache cache -> cache
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    io.netty.buffer.ByteBufAllocator allocator -> allocator
    boolean $assertionsDisabled -> $assertionsDisabled
    41:43:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    46:47:void init(io.netty.buffer.PoolChunk,long,int,int,int,io.netty.buffer.PoolThreadCache) -> init
    50:51:void initUnpooled(io.netty.buffer.PoolChunk,int) -> initUnpooled
    54:66:void init0(io.netty.buffer.PoolChunk,long,int,int,int,io.netty.buffer.PoolThreadCache) -> init0
    72:76:void reuse(int) -> reuse
    80:80:int capacity() -> capacity
    85:119:io.netty.buffer.ByteBuf capacity(int) -> capacity
    124:124:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    129:129:java.nio.ByteOrder order() -> order
    134:134:io.netty.buffer.ByteBuf unwrap() -> unwrap
    139:139:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    144:145:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    150:150:io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    154:158:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    165:174:void deallocate() -> deallocate
    177:178:void recycle() -> recycle
    181:181:int idx(int) -> idx
    25:25:void <clinit>() -> <clinit>
io.netty.buffer.PooledByteBufAllocator -> io.netty.buffer.PooledByteBufAllocator:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    int DEFAULT_NUM_HEAP_ARENA -> DEFAULT_NUM_HEAP_ARENA
    int DEFAULT_NUM_DIRECT_ARENA -> DEFAULT_NUM_DIRECT_ARENA
    int DEFAULT_PAGE_SIZE -> DEFAULT_PAGE_SIZE
    int DEFAULT_MAX_ORDER -> DEFAULT_MAX_ORDER
    int DEFAULT_TINY_CACHE_SIZE -> DEFAULT_TINY_CACHE_SIZE
    int DEFAULT_SMALL_CACHE_SIZE -> DEFAULT_SMALL_CACHE_SIZE
    int DEFAULT_NORMAL_CACHE_SIZE -> DEFAULT_NORMAL_CACHE_SIZE
    int DEFAULT_MAX_CACHED_BUFFER_CAPACITY -> DEFAULT_MAX_CACHED_BUFFER_CAPACITY
    int DEFAULT_CACHE_TRIM_INTERVAL -> DEFAULT_CACHE_TRIM_INTERVAL
    boolean DEFAULT_USE_CACHE_FOR_ALL_THREADS -> DEFAULT_USE_CACHE_FOR_ALL_THREADS
    int DEFAULT_DIRECT_MEMORY_CACHE_ALIGNMENT -> DEFAULT_DIRECT_MEMORY_CACHE_ALIGNMENT
    io.netty.buffer.PooledByteBufAllocator DEFAULT -> DEFAULT
    io.netty.buffer.PoolArena[] heapArenas -> heapArenas
    io.netty.buffer.PoolArena[] directArenas -> directArenas
    int tinyCacheSize -> tinyCacheSize
    int smallCacheSize -> smallCacheSize
    int normalCacheSize -> normalCacheSize
    java.util.List heapArenaMetrics -> heapArenaMetrics
    java.util.List directArenaMetrics -> directArenaMetrics
    io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache -> threadCache
    int chunkSize -> chunkSize
    io.netty.buffer.PooledByteBufAllocatorMetric metric -> metric
    boolean $assertionsDisabled -> $assertionsDisabled
    157:158:void <init>() -> <init>
    162:163:void <init>(boolean) -> <init>
    176:178:void <init>(boolean,int,int,int,int) -> <init>
    187:189:void <init>(boolean,int,int,int,int,int,int,int) -> <init>
    203:263:void <init>(boolean,int,int,int,int,int,int,int,boolean,int) -> <init>
    267:267:io.netty.buffer.PoolArena[] newArenaArray(int) -> newArenaArray
    271:280:int validateAndCalculatePageShifts(int) -> validateAndCalculatePageShifts
    284:297:int validateAndCalculateChunkSize(int,int) -> validateAndCalculateChunkSize
    302:314:io.netty.buffer.ByteBuf newHeapBuffer(int,int) -> newHeapBuffer
    319:331:io.netty.buffer.ByteBuf newDirectBuffer(int,int) -> newDirectBuffer
    401:401:boolean isDirectMemoryCacheAlignmentSupported() -> isDirectMemoryCacheAlignmentSupported
    406:406:boolean isDirectBufferPooled() -> isDirectBufferPooled
    487:487:int numHeapArenas() -> numHeapArenas
    497:497:int numDirectArenas() -> numDirectArenas
    527:537:int numThreadLocalCaches() -> numThreadLocalCaches
    547:547:int tinyCacheSize() -> tinyCacheSize
    557:557:int smallCacheSize() -> smallCacheSize
    567:567:int normalCacheSize() -> normalCacheSize
    577:577:int chunkSize() -> chunkSize
    581:581:long usedHeapMemory() -> usedHeapMemory
    585:585:long usedDirectMemory() -> usedDirectMemory
    589:599:long usedMemory(io.netty.buffer.PoolArena[]) -> usedMemory
    603:605:io.netty.buffer.PoolThreadCache threadCache() -> threadCache
    33:33:io.netty.buffer.PoolArena[] access$000(io.netty.buffer.PooledByteBufAllocator) -> access$000
    33:33:io.netty.buffer.PoolArena[] access$100(io.netty.buffer.PooledByteBufAllocator) -> access$100
    33:33:int access$200(io.netty.buffer.PooledByteBufAllocator) -> access$200
    33:33:int access$300(io.netty.buffer.PooledByteBufAllocator) -> access$300
    33:33:int access$400(io.netty.buffer.PooledByteBufAllocator) -> access$400
    33:33:int access$500() -> access$500
    33:33:int access$600() -> access$600
    33:143:void <clinit>() -> <clinit>
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache -> io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache:
    boolean useCacheForAllThreads -> useCacheForAllThreads
    io.netty.buffer.PooledByteBufAllocator this$0 -> this$0
    429:431:void <init>(io.netty.buffer.PooledByteBufAllocator,boolean) -> <init>
    435:450:io.netty.buffer.PoolThreadCache initialValue() -> initialValue
    455:456:void onRemoval(io.netty.buffer.PoolThreadCache) -> onRemoval
    459:471:io.netty.buffer.PoolArena leastUsedArena(io.netty.buffer.PoolArena[]) -> leastUsedArena
    426:426:void onRemoval(java.lang.Object) -> onRemoval
    426:426:java.lang.Object initialValue() -> initialValue
io.netty.buffer.PooledByteBufAllocatorMetric -> io.netty.buffer.PooledByteBufAllocatorMetric:
    io.netty.buffer.PooledByteBufAllocator allocator -> allocator
    30:32:void <init>(io.netty.buffer.PooledByteBufAllocator) -> <init>
    38:38:int numHeapArenas() -> numHeapArenas
    45:45:int numDirectArenas() -> numDirectArenas
    66:66:int numThreadLocalCaches() -> numThreadLocalCaches
    73:73:int tinyCacheSize() -> tinyCacheSize
    80:80:int smallCacheSize() -> smallCacheSize
    87:87:int normalCacheSize() -> normalCacheSize
    94:94:int chunkSize() -> chunkSize
    99:99:long usedHeapMemory() -> usedHeapMemory
    104:104:long usedDirectMemory() -> usedDirectMemory
    109:120:java.lang.String toString() -> toString
io.netty.buffer.PooledDirectByteBuf -> io.netty.buffer.PooledDirectByteBuf:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    40:42:io.netty.buffer.PooledDirectByteBuf newInstance(int) -> newInstance
    46:47:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    51:51:java.nio.ByteBuffer newInternalNioBuffer(java.nio.ByteBuffer) -> newInternalNioBuffer
    56:56:boolean isDirect() -> isDirect
    61:61:byte _getByte(int) -> _getByte
    66:66:short _getShort(int) -> _getShort
    71:71:short _getShortLE(int) -> _getShortLE
    76:79:int _getUnsignedMedium(int) -> _getUnsignedMedium
    92:92:int _getInt(int) -> _getInt
    97:97:int _getIntLE(int) -> _getIntLE
    102:102:long _getLong(int) -> _getLong
    112:124:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    129:130:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    134:144:void getBytes(int,byte[],int,int,boolean) -> getBytes
    148:151:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    156:157:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    161:171:void getBytes(int,java.nio.ByteBuffer,boolean) -> getBytes
    216:216:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    220:233:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    255:258:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    271:272:void _setByte(int,int) -> _setByte
    276:277:void _setShort(int,int) -> _setShort
    281:282:void _setShortLE(int,int) -> _setShortLE
    286:290:void _setMedium(int,int) -> _setMedium
    294:298:void _setMediumLE(int,int) -> _setMediumLE
    302:303:void _setInt(int,int) -> _setInt
    312:313:void _setLong(int,long) -> _setLong
    322:334:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    339:344:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    349:358:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    377:384:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    403:406:io.netty.buffer.ByteBuf copy(int,int) -> copy
    411:411:int nioBufferCount() -> nioBufferCount
    416:418:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    423:423:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    428:430:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    435:435:boolean hasArray() -> hasArray
    440:440:byte[] array() -> array
    445:445:int arrayOffset() -> arrayOffset
    450:450:boolean hasMemoryAddress() -> hasMemoryAddress
    455:455:long memoryAddress() -> memoryAddress
    30:30:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    30:30:void <init>(io.netty.util.Recycler$Handle,int,io.netty.buffer.PooledDirectByteBuf$1) -> <init>
    32:32:void <clinit>() -> <clinit>
io.netty.buffer.PooledDirectByteBuf$1 -> io.netty.buffer.PooledDirectByteBuf$1:
    32:32:void <init>() -> <init>
    35:35:io.netty.buffer.PooledDirectByteBuf newObject(io.netty.util.Recycler$Handle) -> newObject
    32:32:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PooledDuplicatedByteBuf -> io.netty.buffer.PooledDuplicatedByteBuf:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    42:47:io.netty.buffer.PooledDuplicatedByteBuf newInstance(io.netty.buffer.AbstractByteBuf,io.netty.buffer.ByteBuf,int,int) -> newInstance
    51:52:void <init>(io.netty.util.Recycler$Handle) -> <init>
    56:56:int capacity() -> capacity
    61:62:io.netty.buffer.ByteBuf capacity(int) -> capacity
    67:67:int arrayOffset() -> arrayOffset
    72:72:long memoryAddress() -> memoryAddress
    77:77:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    82:82:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    87:87:io.netty.buffer.ByteBuf copy(int,int) -> copy
    92:92:io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    97:97:io.netty.buffer.ByteBuf duplicate() -> duplicate
    102:102:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    107:107:byte getByte(int) -> getByte
    112:112:byte _getByte(int) -> _getByte
    117:117:short getShort(int) -> getShort
    122:122:short _getShort(int) -> _getShort
    127:127:short getShortLE(int) -> getShortLE
    132:132:short _getShortLE(int) -> _getShortLE
    137:137:int getUnsignedMedium(int) -> getUnsignedMedium
    142:142:int _getUnsignedMedium(int) -> _getUnsignedMedium
    157:157:int getInt(int) -> getInt
    162:162:int _getInt(int) -> _getInt
    167:167:int getIntLE(int) -> getIntLE
    172:172:int _getIntLE(int) -> _getIntLE
    177:177:long getLong(int) -> getLong
    182:182:long _getLong(int) -> _getLong
    197:198:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    203:204:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    209:210:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    215:216:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    221:222:void _setByte(int,int) -> _setByte
    226:227:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    232:233:void _setShort(int,int) -> _setShort
    237:238:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    243:244:void _setShortLE(int,int) -> _setShortLE
    248:249:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    254:255:void _setMedium(int,int) -> _setMedium
    259:260:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    265:266:void _setMediumLE(int,int) -> _setMediumLE
    270:271:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    276:277:void _setInt(int,int) -> _setInt
    292:293:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    298:299:void _setLong(int,long) -> _setLong
    314:315:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    320:321:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    326:327:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    340:340:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    358:358:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    369:369:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    374:374:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    31:31:void <init>(io.netty.util.Recycler$Handle,io.netty.buffer.PooledDuplicatedByteBuf$1) -> <init>
    33:33:void <clinit>() -> <clinit>
io.netty.buffer.PooledDuplicatedByteBuf$1 -> io.netty.buffer.PooledDuplicatedByteBuf$1:
    33:33:void <init>() -> <init>
    36:36:io.netty.buffer.PooledDuplicatedByteBuf newObject(io.netty.util.Recycler$Handle) -> newObject
    33:33:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PooledHeapByteBuf -> io.netty.buffer.PooledHeapByteBuf:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    39:41:io.netty.buffer.PooledHeapByteBuf newInstance(int) -> newInstance
    45:46:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    50:50:boolean isDirect() -> isDirect
    55:55:byte _getByte(int) -> _getByte
    60:60:short _getShort(int) -> _getShort
    65:65:short _getShortLE(int) -> _getShortLE
    70:70:int _getUnsignedMedium(int) -> _getUnsignedMedium
    80:80:int _getInt(int) -> _getInt
    85:85:int _getIntLE(int) -> _getIntLE
    90:90:long _getLong(int) -> _getLong
    100:108:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    113:115:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    120:122:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    134:134:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    138:146:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    163:166:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    179:180:void _setByte(int,int) -> _setByte
    184:185:void _setShort(int,int) -> _setShort
    189:190:void _setShortLE(int,int) -> _setShortLE
    194:195:void _setMedium(int,int) -> _setMedium
    199:200:void _setMediumLE(int,int) -> _setMediumLE
    204:205:void _setInt(int,int) -> _setInt
    214:215:void _setLong(int,long) -> _setLong
    224:232:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    237:239:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    244:247:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    258:263:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    280:283:io.netty.buffer.ByteBuf copy(int,int) -> copy
    288:288:int nioBufferCount() -> nioBufferCount
    293:293:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    298:301:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    306:308:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    313:313:boolean hasArray() -> hasArray
    318:319:byte[] array() -> array
    324:324:int arrayOffset() -> arrayOffset
    329:329:boolean hasMemoryAddress() -> hasMemoryAddress
    334:334:long memoryAddress() -> memoryAddress
    339:339:java.nio.ByteBuffer newInternalNioBuffer(byte[]) -> newInternalNioBuffer
    29:29:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    31:31:void <clinit>() -> <clinit>
io.netty.buffer.PooledHeapByteBuf$1 -> io.netty.buffer.PooledHeapByteBuf$1:
    31:31:void <init>() -> <init>
    34:34:io.netty.buffer.PooledHeapByteBuf newObject(io.netty.util.Recycler$Handle) -> newObject
    31:31:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PooledSlicedByteBuf -> io.netty.buffer.PooledSlicedByteBuf:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    int adjustment -> adjustment
    44:45:io.netty.buffer.PooledSlicedByteBuf newInstance(io.netty.buffer.AbstractByteBuf,io.netty.buffer.ByteBuf,int,int) -> newInstance
    50:55:io.netty.buffer.PooledSlicedByteBuf newInstance0(io.netty.buffer.AbstractByteBuf,io.netty.buffer.ByteBuf,int,int) -> newInstance0
    61:62:void <init>(io.netty.util.Recycler$Handle) -> <init>
    66:66:int capacity() -> capacity
    71:71:io.netty.buffer.ByteBuf capacity(int) -> capacity
    76:76:int arrayOffset() -> arrayOffset
    81:81:long memoryAddress() -> memoryAddress
    86:87:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    92:93:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    98:99:io.netty.buffer.ByteBuf copy(int,int) -> copy
    104:105:io.netty.buffer.ByteBuf slice(int,int) -> slice
    110:111:io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    116:116:io.netty.buffer.ByteBuf duplicate() -> duplicate
    121:121:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    126:127:byte getByte(int) -> getByte
    132:132:byte _getByte(int) -> _getByte
    137:138:short getShort(int) -> getShort
    143:143:short _getShort(int) -> _getShort
    148:149:short getShortLE(int) -> getShortLE
    154:154:short _getShortLE(int) -> _getShortLE
    159:160:int getUnsignedMedium(int) -> getUnsignedMedium
    165:165:int _getUnsignedMedium(int) -> _getUnsignedMedium
    181:182:int getInt(int) -> getInt
    187:187:int _getInt(int) -> _getInt
    192:193:int getIntLE(int) -> getIntLE
    198:198:int _getIntLE(int) -> _getIntLE
    203:204:long getLong(int) -> getLong
    209:209:long _getLong(int) -> _getLong
    225:227:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    232:234:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    239:241:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    246:248:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    253:254:void _setByte(int,int) -> _setByte
    258:260:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    265:266:void _setShort(int,int) -> _setShort
    270:272:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    277:278:void _setShortLE(int,int) -> _setShortLE
    282:284:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    289:290:void _setMedium(int,int) -> _setMedium
    294:296:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    301:302:void _setMediumLE(int,int) -> _setMediumLE
    306:308:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    313:314:void _setInt(int,int) -> _setInt
    330:332:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    337:338:void _setLong(int,long) -> _setLong
    354:356:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    361:363:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    368:370:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    384:385:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    405:406:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    418:423:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    428:433:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    437:437:int idx(int) -> idx
    33:33:void <init>(io.netty.util.Recycler$Handle,io.netty.buffer.PooledSlicedByteBuf$1) -> <init>
    35:35:void <clinit>() -> <clinit>
io.netty.buffer.PooledSlicedByteBuf$1 -> io.netty.buffer.PooledSlicedByteBuf$1:
    35:35:void <init>() -> <init>
    38:38:io.netty.buffer.PooledSlicedByteBuf newObject(io.netty.util.Recycler$Handle) -> newObject
    35:35:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PooledUnsafeDirectByteBuf -> io.netty.buffer.PooledUnsafeDirectByteBuf:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    long memoryAddress -> memoryAddress
    40:42:io.netty.buffer.PooledUnsafeDirectByteBuf newInstance(int) -> newInstance
    48:49:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    54:56:void init(io.netty.buffer.PoolChunk,long,int,int,int,io.netty.buffer.PoolThreadCache) -> init
    60:62:void initUnpooled(io.netty.buffer.PoolChunk,int) -> initUnpooled
    65:66:void initMemoryAddress() -> initMemoryAddress
    70:70:java.nio.ByteBuffer newInternalNioBuffer(java.nio.ByteBuffer) -> newInternalNioBuffer
    75:75:boolean isDirect() -> isDirect
    80:80:byte _getByte(int) -> _getByte
    85:85:short _getShort(int) -> _getShort
    90:90:short _getShortLE(int) -> _getShortLE
    95:95:int _getUnsignedMedium(int) -> _getUnsignedMedium
    105:105:int _getInt(int) -> _getInt
    110:110:int _getIntLE(int) -> _getIntLE
    115:115:long _getLong(int) -> _getLong
    125:126:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    131:132:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    137:138:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    158:158:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    162:175:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    198:201:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    215:216:void _setByte(int,int) -> _setByte
    220:221:void _setShort(int,int) -> _setShort
    225:226:void _setShortLE(int,int) -> _setShortLE
    230:231:void _setMedium(int,int) -> _setMedium
    235:236:void _setMediumLE(int,int) -> _setMediumLE
    240:241:void _setInt(int,int) -> _setInt
    250:251:void _setLong(int,long) -> _setLong
    260:261:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    266:267:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    272:273:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    283:290:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    309:309:io.netty.buffer.ByteBuf copy(int,int) -> copy
    314:314:int nioBufferCount() -> nioBufferCount
    319:319:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    324:326:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    331:333:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    338:338:boolean hasArray() -> hasArray
    343:343:byte[] array() -> array
    348:348:int arrayOffset() -> arrayOffset
    353:353:boolean hasMemoryAddress() -> hasMemoryAddress
    358:359:long memoryAddress() -> memoryAddress
    363:363:long addr(int) -> addr
    368:372:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    377:379:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    384:388:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    31:31:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    31:31:void <init>(io.netty.util.Recycler$Handle,int,io.netty.buffer.PooledUnsafeDirectByteBuf$1) -> <init>
    32:32:void <clinit>() -> <clinit>
io.netty.buffer.PooledUnsafeDirectByteBuf$1 -> io.netty.buffer.PooledUnsafeDirectByteBuf$1:
    32:32:void <init>() -> <init>
    35:35:io.netty.buffer.PooledUnsafeDirectByteBuf newObject(io.netty.util.Recycler$Handle) -> newObject
    32:32:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PooledUnsafeHeapByteBuf -> io.netty.buffer.PooledUnsafeHeapByteBuf:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    32:34:io.netty.buffer.PooledUnsafeHeapByteBuf newUnsafeInstance(int) -> newUnsafeInstance
    38:39:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    43:43:byte _getByte(int) -> _getByte
    48:48:short _getShort(int) -> _getShort
    53:53:short _getShortLE(int) -> _getShortLE
    58:58:int _getUnsignedMedium(int) -> _getUnsignedMedium
    68:68:int _getInt(int) -> _getInt
    73:73:int _getIntLE(int) -> _getIntLE
    78:78:long _getLong(int) -> _getLong
    88:89:void _setByte(int,int) -> _setByte
    93:94:void _setShort(int,int) -> _setShort
    98:99:void _setShortLE(int,int) -> _setShortLE
    103:104:void _setMedium(int,int) -> _setMedium
    108:109:void _setMediumLE(int,int) -> _setMediumLE
    113:114:void _setInt(int,int) -> _setInt
    123:124:void _setLong(int,long) -> _setLong
    133:139:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    144:152:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    158:162:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    22:22:void <init>(io.netty.util.Recycler$Handle,int,io.netty.buffer.PooledUnsafeHeapByteBuf$1) -> <init>
    24:24:void <clinit>() -> <clinit>
io.netty.buffer.PooledUnsafeHeapByteBuf$1 -> io.netty.buffer.PooledUnsafeHeapByteBuf$1:
    24:24:void <init>() -> <init>
    27:27:io.netty.buffer.PooledUnsafeHeapByteBuf newObject(io.netty.util.Recycler$Handle) -> newObject
    24:24:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.ReadOnlyByteBuf -> io.netty.buffer.ReadOnlyByteBuf:
    io.netty.buffer.ByteBuf buffer -> buffer
    43:51:void <init>(io.netty.buffer.ByteBuf) -> <init>
    55:55:boolean isReadOnly() -> isReadOnly
    60:60:boolean isWritable() -> isWritable
    65:65:boolean isWritable(int) -> isWritable
    70:70:int ensureWritable(int,boolean) -> ensureWritable
    75:75:io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    80:80:io.netty.buffer.ByteBuf unwrap() -> unwrap
    85:85:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    91:91:java.nio.ByteOrder order() -> order
    96:96:boolean isDirect() -> isDirect
    101:101:boolean hasArray() -> hasArray
    106:106:byte[] array() -> array
    111:111:int arrayOffset() -> arrayOffset
    116:116:boolean hasMemoryAddress() -> hasMemoryAddress
    121:121:long memoryAddress() -> memoryAddress
    126:126:io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    131:131:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    136:136:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    141:141:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    146:146:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    151:151:void _setByte(int,int) -> _setByte
    156:156:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    161:161:void _setShort(int,int) -> _setShort
    166:166:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    171:171:void _setShortLE(int,int) -> _setShortLE
    176:176:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    181:181:void _setMedium(int,int) -> _setMedium
    186:186:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    191:191:void _setMediumLE(int,int) -> _setMediumLE
    196:196:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    201:201:void _setInt(int,int) -> _setInt
    216:216:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    221:221:void _setLong(int,long) -> _setLong
    241:241:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    252:252:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    270:271:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    276:277:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    282:283:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    288:288:io.netty.buffer.ByteBuf duplicate() -> duplicate
    293:293:io.netty.buffer.ByteBuf copy(int,int) -> copy
    298:298:io.netty.buffer.ByteBuf slice(int,int) -> slice
    303:303:byte getByte(int) -> getByte
    308:308:byte _getByte(int) -> _getByte
    313:313:short getShort(int) -> getShort
    318:318:short _getShort(int) -> _getShort
    323:323:short getShortLE(int) -> getShortLE
    328:328:short _getShortLE(int) -> _getShortLE
    333:333:int getUnsignedMedium(int) -> getUnsignedMedium
    338:338:int _getUnsignedMedium(int) -> _getUnsignedMedium
    353:353:int getInt(int) -> getInt
    358:358:int _getInt(int) -> _getInt
    363:363:int getIntLE(int) -> getIntLE
    368:368:int _getIntLE(int) -> _getIntLE
    373:373:long getLong(int) -> getLong
    378:378:long _getLong(int) -> _getLong
    393:393:int nioBufferCount() -> nioBufferCount
    398:398:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    403:403:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    408:408:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    413:413:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    418:418:int capacity() -> capacity
    423:423:io.netty.buffer.ByteBuf capacity(int) -> capacity
    428:428:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
io.netty.buffer.SimpleLeakAwareByteBuf -> io.netty.buffer.SimpleLeakAwareByteBuf:
    io.netty.buffer.ByteBuf trackedByteBuf -> trackedByteBuf
    io.netty.util.ResourceLeakTracker leak -> leak
    boolean $assertionsDisabled -> $assertionsDisabled
    36:39:void <init>(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    42:43:void <init>(io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    47:47:io.netty.buffer.ByteBuf slice() -> slice
    52:52:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    62:62:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    67:67:io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    72:72:io.netty.buffer.ByteBuf slice(int,int) -> slice
    77:77:io.netty.buffer.ByteBuf duplicate() -> duplicate
    82:82:io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    87:87:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    92:92:io.netty.buffer.ByteBuf touch() -> touch
    97:97:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    102:106:boolean release() -> release
    111:115:boolean release(int) -> release
    121:123:void closeLeak() -> closeLeak
    127:130:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    137:150:io.netty.buffer.ByteBuf unwrappedDerived(io.netty.buffer.ByteBuf) -> unwrappedDerived
    155:162:io.netty.buffer.ByteBuf unwrapSwapped(io.netty.buffer.ByteBuf) -> unwrapSwapped
    167:167:io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(io.netty.buffer.ByteBuf) -> newSharedLeakAwareByteBuf
    172:172:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    177:177:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    25:25:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:io.netty.util.ReferenceCounted touch() -> touch
    25:25:void <clinit>() -> <clinit>
io.netty.buffer.SimpleLeakAwareCompositeByteBuf -> io.netty.buffer.SimpleLeakAwareCompositeByteBuf:
    io.netty.util.ResourceLeakTracker leak -> leak
    boolean $assertionsDisabled -> $assertionsDisabled
    29:31:void <init>(io.netty.buffer.CompositeByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    37:42:boolean release() -> release
    49:54:boolean release(int) -> release
    60:62:void closeLeak(io.netty.buffer.ByteBuf) -> closeLeak
    66:69:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    75:75:io.netty.buffer.ByteBuf slice() -> slice
    80:80:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    85:85:io.netty.buffer.ByteBuf slice(int,int) -> slice
    90:90:io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    95:95:io.netty.buffer.ByteBuf duplicate() -> duplicate
    100:100:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    105:105:io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    110:110:io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    115:115:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    119:119:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf) -> newLeakAwareByteBuf
    124:124:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    24:24:void <clinit>() -> <clinit>
io.netty.buffer.SwappedByteBuf -> io.netty.buffer.SwappedByteBuf:
    io.netty.buffer.ByteBuf buf -> buf
    java.nio.ByteOrder order -> order
    42:52:void <init>(io.netty.buffer.ByteBuf) -> <init>
    56:56:java.nio.ByteOrder order() -> order
    61:67:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    72:72:io.netty.buffer.ByteBuf unwrap() -> unwrap
    77:77:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    82:82:int capacity() -> capacity
    87:88:io.netty.buffer.ByteBuf capacity(int) -> capacity
    93:93:int maxCapacity() -> maxCapacity
    98:98:boolean isReadOnly() -> isReadOnly
    103:103:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    108:108:boolean isDirect() -> isDirect
    113:113:int readerIndex() -> readerIndex
    118:119:io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    124:124:int writerIndex() -> writerIndex
    129:130:io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    135:136:io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    141:141:int readableBytes() -> readableBytes
    146:146:int writableBytes() -> writableBytes
    156:156:boolean isReadable() -> isReadable
    161:161:boolean isReadable(int) -> isReadable
    166:166:boolean isWritable() -> isWritable
    171:171:boolean isWritable(int) -> isWritable
    176:177:io.netty.buffer.ByteBuf clear() -> clear
    182:183:io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    188:189:io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    206:207:io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    212:213:io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    218:219:io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    224:224:int ensureWritable(int,boolean) -> ensureWritable
    234:234:byte getByte(int) -> getByte
    239:239:short getUnsignedByte(int) -> getUnsignedByte
    244:244:short getShort(int) -> getShort
    249:249:short getShortLE(int) -> getShortLE
    254:254:int getUnsignedShort(int) -> getUnsignedShort
    259:259:int getUnsignedShortLE(int) -> getUnsignedShortLE
    264:264:int getMedium(int) -> getMedium
    274:274:int getUnsignedMedium(int) -> getUnsignedMedium
    284:284:int getInt(int) -> getInt
    289:289:int getIntLE(int) -> getIntLE
    294:294:long getUnsignedInt(int) -> getUnsignedInt
    299:299:long getUnsignedIntLE(int) -> getUnsignedIntLE
    304:304:long getLong(int) -> getLong
    319:319:float getFloat(int) -> getFloat
    324:324:double getDouble(int) -> getDouble
    341:342:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    347:348:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    353:354:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    359:360:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    371:371:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    392:393:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    398:399:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    404:405:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    410:411:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    416:417:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    422:423:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    434:435:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    476:477:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    488:489:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    494:495:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    505:505:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    515:516:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    521:521:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    531:531:byte readByte() -> readByte
    536:536:short readUnsignedByte() -> readUnsignedByte
    541:541:short readShort() -> readShort
    551:551:int readUnsignedShort() -> readUnsignedShort
    561:561:int readMedium() -> readMedium
    571:571:int readUnsignedMedium() -> readUnsignedMedium
    581:581:int readInt() -> readInt
    591:591:long readUnsignedInt() -> readUnsignedInt
    601:601:long readLong() -> readLong
    626:626:io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    631:631:io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    636:636:io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    641:642:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    659:660:io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    665:666:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    683:683:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    698:699:io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    710:711:io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    716:717:io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    722:723:io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    728:729:io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    734:735:io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    740:741:io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    752:753:io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    764:765:io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    770:771:io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    776:777:io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    782:783:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    794:795:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    800:801:io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    806:807:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    812:813:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    823:823:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    833:834:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    839:839:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    844:844:int indexOf(int,int,byte) -> indexOf
    864:864:int forEachByte(io.netty.util.ByteProcessor) -> forEachByte
    869:869:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    879:879:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    884:884:io.netty.buffer.ByteBuf copy() -> copy
    889:889:io.netty.buffer.ByteBuf copy(int,int) -> copy
    894:894:io.netty.buffer.ByteBuf slice() -> slice
    899:899:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    904:904:io.netty.buffer.ByteBuf slice(int,int) -> slice
    914:914:io.netty.buffer.ByteBuf duplicate() -> duplicate
    919:919:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    924:924:int nioBufferCount() -> nioBufferCount
    929:929:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    934:934:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    939:939:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    944:948:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    953:957:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    962:962:boolean hasArray() -> hasArray
    967:967:byte[] array() -> array
    972:972:int arrayOffset() -> arrayOffset
    977:977:boolean hasMemoryAddress() -> hasMemoryAddress
    982:982:long memoryAddress() -> memoryAddress
    987:987:java.lang.String toString(java.nio.charset.Charset) -> toString
    992:992:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    997:997:int refCnt() -> refCnt
    1002:1003:io.netty.buffer.ByteBuf retain() -> retain
    1008:1009:io.netty.buffer.ByteBuf retain(int) -> retain
    1014:1015:io.netty.buffer.ByteBuf touch() -> touch
    1020:1021:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    1026:1026:boolean release() -> release
    1031:1031:boolean release(int) -> release
    1036:1036:int hashCode() -> hashCode
    1041:1047:boolean equals(java.lang.Object) -> equals
    1052:1052:int compareTo(io.netty.buffer.ByteBuf) -> compareTo
    1057:1057:java.lang.String toString() -> toString
    36:36:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    36:36:io.netty.util.ReferenceCounted touch() -> touch
    36:36:io.netty.util.ReferenceCounted retain(int) -> retain
    36:36:io.netty.util.ReferenceCounted retain() -> retain
    36:36:int compareTo(java.lang.Object) -> compareTo
io.netty.buffer.Unpooled -> io.netty.buffer.Unpooled:
    io.netty.buffer.ByteBufAllocator ALLOC -> ALLOC
    java.nio.ByteOrder BIG_ENDIAN -> BIG_ENDIAN
    java.nio.ByteOrder LITTLE_ENDIAN -> LITTLE_ENDIAN
    io.netty.buffer.ByteBuf EMPTY_BUFFER -> EMPTY_BUFFER
    boolean $assertionsDisabled -> $assertionsDisabled
    99:99:io.netty.buffer.ByteBuf buffer() -> buffer
    116:116:io.netty.buffer.ByteBuf buffer(int) -> buffer
    125:125:io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    135:135:io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    145:145:io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    154:157:io.netty.buffer.ByteBuf wrappedBuffer(byte[]) -> wrappedBuffer
    166:174:io.netty.buffer.ByteBuf wrappedBuffer(byte[],int,int) -> wrappedBuffer
    370:370:io.netty.buffer.CompositeByteBuf compositeBuffer() -> compositeBuffer
    377:377:io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    433:439:io.netty.buffer.ByteBuf copiedBuffer(io.netty.buffer.ByteBuf) -> copiedBuffer
    496:537:io.netty.buffer.ByteBuf copiedBuffer(io.netty.buffer.ByteBuf[]) -> copiedBuffer
    604:612:io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset) -> copiedBuffer
    678:678:io.netty.buffer.ByteBuf copiedBuffer(java.nio.CharBuffer,java.nio.charset.Charset) -> copiedBuffer
    691:696:io.netty.buffer.ByteBuf unmodifiableBuffer(io.netty.buffer.ByteBuf) -> unmodifiableBuffer
    726:728:io.netty.buffer.ByteBuf copyShort(int) -> copyShort
    878:878:io.netty.buffer.ByteBuf unreleasableBuffer(io.netty.buffer.ByteBuf) -> unreleasableBuffer
    889:891:void <init>() -> <init>
    71:92:void <clinit>() -> <clinit>
io.netty.buffer.UnpooledByteBufAllocator -> io.netty.buffer.UnpooledByteBufAllocator:
    io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric metric -> metric
    boolean disableLeakDetector -> disableLeakDetector
    boolean noCleaner -> noCleaner
    io.netty.buffer.UnpooledByteBufAllocator DEFAULT -> DEFAULT
    46:47:void <init>(boolean) -> <init>
    59:60:void <init>(boolean,boolean) -> <init>
    29:78:void <init>(boolean,boolean,boolean) -> <init>
    82:82:io.netty.buffer.ByteBuf newHeapBuffer(int,int) -> newHeapBuffer
    90:96:io.netty.buffer.ByteBuf newDirectBuffer(int,int) -> newDirectBuffer
    101:102:io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    107:108:io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    113:113:boolean isDirectBufferPooled() -> isDirectBufferPooled
    122:123:void incrementDirect(int) -> incrementDirect
    126:127:void decrementDirect(int) -> decrementDirect
    130:131:void incrementHeap(int) -> incrementHeap
    134:135:void decrementHeap(int) -> decrementHeap
    36:37:void <clinit>() -> <clinit>
io.netty.buffer.UnpooledByteBufAllocator$1 -> io.netty.buffer.UnpooledByteBufAllocator$1:
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledDirectByteBuf -> io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledDirectByteBuf:
    231:232:void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    236:238:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    243:246:void freeDirect(java.nio.ByteBuffer) -> freeDirect
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf -> io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf:
    159:160:void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    164:166:byte[] allocateArray(int) -> allocateArray
    171:174:void freeArray(byte[]) -> freeArray
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeDirectByteBuf -> io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeDirectByteBuf:
    210:211:void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    215:217:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    222:225:void freeDirect(java.nio.ByteBuffer) -> freeDirect
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf -> io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf:
    139:140:void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    144:146:byte[] allocateArray(int) -> allocateArray
    151:154:void freeArray(byte[]) -> freeArray
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf -> io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf:
    181:182:void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    186:188:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    193:196:java.nio.ByteBuffer reallocateDirect(java.nio.ByteBuffer,int) -> reallocateDirect
    201:204:void freeDirect(java.nio.ByteBuffer) -> freeDirect
io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric -> io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric:
    io.netty.util.internal.LongCounter directCounter -> directCounter
    io.netty.util.internal.LongCounter heapCounter -> heapCounter
    249:251:void <init>() -> <init>
    255:255:long usedHeapMemory() -> usedHeapMemory
    260:260:long usedDirectMemory() -> usedDirectMemory
    265:266:java.lang.String toString() -> toString
    249:249:void <init>(io.netty.buffer.UnpooledByteBufAllocator$1) -> <init>
io.netty.buffer.UnpooledDirectByteBuf -> io.netty.buffer.UnpooledDirectByteBuf:
    io.netty.buffer.ByteBufAllocator alloc -> alloc
    java.nio.ByteBuffer buffer -> buffer
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    int capacity -> capacity
    boolean doNotFree -> doNotFree
    51:68:void <init>(io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    106:106:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    113:114:void freeDirect(java.nio.ByteBuffer) -> freeDirect
    117:129:void setByteBuffer(java.nio.ByteBuffer) -> setByteBuffer
    133:133:boolean isDirect() -> isDirect
    138:138:int capacity() -> capacity
    143:173:io.netty.buffer.ByteBuf capacity(int) -> capacity
    178:178:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    183:183:java.nio.ByteOrder order() -> order
    188:188:boolean hasArray() -> hasArray
    193:193:byte[] array() -> array
    198:198:int arrayOffset() -> arrayOffset
    203:203:boolean hasMemoryAddress() -> hasMemoryAddress
    208:208:long memoryAddress() -> memoryAddress
    213:214:byte getByte(int) -> getByte
    219:219:byte _getByte(int) -> _getByte
    224:225:short getShort(int) -> getShort
    230:230:short _getShort(int) -> _getShort
    235:235:short _getShortLE(int) -> _getShortLE
    240:241:int getUnsignedMedium(int) -> getUnsignedMedium
    246:248:int _getUnsignedMedium(int) -> _getUnsignedMedium
    260:261:int getInt(int) -> getInt
    266:266:int _getInt(int) -> _getInt
    271:271:int _getIntLE(int) -> _getIntLE
    276:277:long getLong(int) -> getLong
    282:282:long _getLong(int) -> _getLong
    292:304:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    309:310:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    314:324:void getBytes(int,byte[],int,int,boolean) -> getBytes
    328:331:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    336:337:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    341:351:void getBytes(int,java.nio.ByteBuffer,boolean) -> getBytes
    364:366:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    371:372:void _setByte(int,int) -> _setByte
    376:378:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    383:384:void _setShort(int,int) -> _setShort
    388:389:void _setShortLE(int,int) -> _setShortLE
    393:395:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    400:403:void _setMedium(int,int) -> _setMedium
    407:410:void _setMediumLE(int,int) -> _setMediumLE
    414:416:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    421:422:void _setInt(int,int) -> _setInt
    431:433:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    438:439:void _setLong(int,long) -> _setLong
    448:458:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    463:467:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    472:480:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    521:521:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    525:537:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    558:561:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    592:598:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    616:616:int nioBufferCount() -> nioBufferCount
    621:621:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    626:634:io.netty.buffer.ByteBuf copy(int,int) -> copy
    639:640:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    644:648:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    653:654:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    659:669:void deallocate() -> deallocate
    673:673:io.netty.buffer.ByteBuf unwrap() -> unwrap
io.netty.buffer.UnpooledDuplicatedByteBuf -> io.netty.buffer.UnpooledDuplicatedByteBuf:
    24:25:void <init>(io.netty.buffer.AbstractByteBuf) -> <init>
    29:29:io.netty.buffer.AbstractByteBuf unwrap() -> unwrap
    34:34:byte _getByte(int) -> _getByte
    39:39:short _getShort(int) -> _getShort
    44:44:short _getShortLE(int) -> _getShortLE
    49:49:int _getUnsignedMedium(int) -> _getUnsignedMedium
    59:59:int _getInt(int) -> _getInt
    64:64:int _getIntLE(int) -> _getIntLE
    69:69:long _getLong(int) -> _getLong
    79:80:void _setByte(int,int) -> _setByte
    84:85:void _setShort(int,int) -> _setShort
    89:90:void _setShortLE(int,int) -> _setShortLE
    94:95:void _setMedium(int,int) -> _setMedium
    99:100:void _setMediumLE(int,int) -> _setMediumLE
    104:105:void _setInt(int,int) -> _setInt
    114:115:void _setLong(int,long) -> _setLong
    22:22:io.netty.buffer.ByteBuf unwrap() -> unwrap
io.netty.buffer.UnpooledHeapByteBuf -> io.netty.buffer.UnpooledHeapByteBuf:
    io.netty.buffer.ByteBufAllocator alloc -> alloc
    byte[] array -> array
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    50:62:void <init>(io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    71:84:void <init>(io.netty.buffer.ByteBufAllocator,byte[],int) -> <init>
    87:87:byte[] allocateArray(int) -> allocateArray
    92:92:void freeArray(byte[]) -> freeArray
    95:97:void setArray(byte[]) -> setArray
    101:101:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    106:106:java.nio.ByteOrder order() -> order
    111:111:boolean isDirect() -> isDirect
    116:117:int capacity() -> capacity
    122:146:io.netty.buffer.ByteBuf capacity(int) -> capacity
    151:151:boolean hasArray() -> hasArray
    156:157:byte[] array() -> array
    162:162:int arrayOffset() -> arrayOffset
    167:167:boolean hasMemoryAddress() -> hasMemoryAddress
    172:172:long memoryAddress() -> memoryAddress
    177:185:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    190:192:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    197:199:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    211:212:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    222:229:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    240:243:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    256:264:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    269:271:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    276:278:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    289:293:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    309:309:int nioBufferCount() -> nioBufferCount
    314:315:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    320:320:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    325:326:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    331:332:byte getByte(int) -> getByte
    337:337:byte _getByte(int) -> _getByte
    342:343:short getShort(int) -> getShort
    348:348:short _getShort(int) -> _getShort
    353:354:short getShortLE(int) -> getShortLE
    359:359:short _getShortLE(int) -> _getShortLE
    364:365:int getUnsignedMedium(int) -> getUnsignedMedium
    370:370:int _getUnsignedMedium(int) -> _getUnsignedMedium
    386:387:int getInt(int) -> getInt
    392:392:int _getInt(int) -> _getInt
    397:398:int getIntLE(int) -> getIntLE
    403:403:int _getIntLE(int) -> _getIntLE
    408:409:long getLong(int) -> getLong
    414:414:long _getLong(int) -> _getLong
    430:432:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    437:438:void _setByte(int,int) -> _setByte
    442:444:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    449:450:void _setShort(int,int) -> _setShort
    454:456:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    461:462:void _setShortLE(int,int) -> _setShortLE
    466:468:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    473:474:void _setMedium(int,int) -> _setMedium
    478:480:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    485:486:void _setMediumLE(int,int) -> _setMediumLE
    490:492:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    497:498:void _setInt(int,int) -> _setInt
    514:516:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    521:522:void _setLong(int,long) -> _setLong
    538:541:io.netty.buffer.ByteBuf copy(int,int) -> copy
    545:549:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    554:556:void deallocate() -> deallocate
    560:560:io.netty.buffer.ByteBuf unwrap() -> unwrap
io.netty.buffer.UnpooledSlicedByteBuf -> io.netty.buffer.UnpooledSlicedByteBuf:
    24:25:void <init>(io.netty.buffer.AbstractByteBuf,int,int) -> <init>
    29:29:int capacity() -> capacity
    34:34:io.netty.buffer.AbstractByteBuf unwrap() -> unwrap
    39:39:byte _getByte(int) -> _getByte
    44:44:short _getShort(int) -> _getShort
    49:49:short _getShortLE(int) -> _getShortLE
    54:54:int _getUnsignedMedium(int) -> _getUnsignedMedium
    64:64:int _getInt(int) -> _getInt
    69:69:int _getIntLE(int) -> _getIntLE
    74:74:long _getLong(int) -> _getLong
    84:85:void _setByte(int,int) -> _setByte
    89:90:void _setShort(int,int) -> _setShort
    94:95:void _setShortLE(int,int) -> _setShortLE
    99:100:void _setMedium(int,int) -> _setMedium
    104:105:void _setMediumLE(int,int) -> _setMediumLE
    109:110:void _setInt(int,int) -> _setInt
    119:120:void _setLong(int,long) -> _setLong
    22:22:io.netty.buffer.ByteBuf unwrap() -> unwrap
io.netty.buffer.UnpooledUnsafeDirectByteBuf -> io.netty.buffer.UnpooledUnsafeDirectByteBuf:
    io.netty.buffer.ByteBufAllocator alloc -> alloc
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    int capacity -> capacity
    boolean doNotFree -> doNotFree
    java.nio.ByteBuffer buffer -> buffer
    long memoryAddress -> memoryAddress
    52:69:void <init>(io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    120:120:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    127:128:void freeDirect(java.nio.ByteBuffer) -> freeDirect
    131:145:void setByteBuffer(java.nio.ByteBuffer,boolean) -> setByteBuffer
    149:149:boolean isDirect() -> isDirect
    154:154:int capacity() -> capacity
    159:189:io.netty.buffer.ByteBuf capacity(int) -> capacity
    194:194:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    199:199:java.nio.ByteOrder order() -> order
    204:204:boolean hasArray() -> hasArray
    209:209:byte[] array() -> array
    214:214:int arrayOffset() -> arrayOffset
    219:219:boolean hasMemoryAddress() -> hasMemoryAddress
    224:225:long memoryAddress() -> memoryAddress
    230:230:byte _getByte(int) -> _getByte
    235:235:short _getShort(int) -> _getShort
    240:240:short _getShortLE(int) -> _getShortLE
    245:245:int _getUnsignedMedium(int) -> _getUnsignedMedium
    255:255:int _getInt(int) -> _getInt
    260:260:int _getIntLE(int) -> _getIntLE
    265:265:long _getLong(int) -> _getLong
    275:276:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    281:282:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    287:288:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    302:303:void _setByte(int,int) -> _setByte
    307:308:void _setShort(int,int) -> _setShort
    312:313:void _setShortLE(int,int) -> _setShortLE
    317:318:void _setMedium(int,int) -> _setMedium
    322:323:void _setMediumLE(int,int) -> _setMediumLE
    327:328:void _setInt(int,int) -> _setInt
    337:338:void _setLong(int,long) -> _setLong
    347:348:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    353:354:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    359:360:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    371:371:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    375:387:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    408:411:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    429:435:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    453:453:int nioBufferCount() -> nioBufferCount
    458:458:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    463:463:io.netty.buffer.ByteBuf copy(int,int) -> copy
    468:469:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    473:477:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    482:483:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    488:498:void deallocate() -> deallocate
    502:502:io.netty.buffer.ByteBuf unwrap() -> unwrap
    506:506:long addr(int) -> addr
    511:515:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    520:522:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    527:531:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
io.netty.buffer.UnpooledUnsafeHeapByteBuf -> io.netty.buffer.UnpooledUnsafeHeapByteBuf:
    29:30:void <init>(io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    34:34:byte[] allocateArray(int) -> allocateArray
    39:40:byte getByte(int) -> getByte
    45:45:byte _getByte(int) -> _getByte
    50:51:short getShort(int) -> getShort
    56:56:short _getShort(int) -> _getShort
    61:62:short getShortLE(int) -> getShortLE
    67:67:short _getShortLE(int) -> _getShortLE
    72:73:int getUnsignedMedium(int) -> getUnsignedMedium
    78:78:int _getUnsignedMedium(int) -> _getUnsignedMedium
    94:95:int getInt(int) -> getInt
    100:100:int _getInt(int) -> _getInt
    105:106:int getIntLE(int) -> getIntLE
    111:111:int _getIntLE(int) -> _getIntLE
    116:117:long getLong(int) -> getLong
    122:122:long _getLong(int) -> _getLong
    138:140:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    145:146:void _setByte(int,int) -> _setByte
    150:152:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    157:158:void _setShort(int,int) -> _setShort
    162:164:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    169:170:void _setShortLE(int,int) -> _setShortLE
    174:176:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    181:182:void _setMedium(int,int) -> _setMedium
    186:188:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    193:194:void _setMediumLE(int,int) -> _setMediumLE
    198:200:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    205:206:void _setInt(int,int) -> _setInt
    222:224:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    229:230:void _setLong(int,long) -> _setLong
    246:252:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    257:265:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    271:275:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf -> io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf:
    25:26:void <init>(io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    30:30:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    34:34:java.nio.ByteBuffer reallocateDirect(java.nio.ByteBuffer,int) -> reallocateDirect
    39:40:void freeDirect(java.nio.ByteBuffer) -> freeDirect
    44:63:io.netty.buffer.ByteBuf capacity(int) -> capacity
io.netty.buffer.UnreleasableByteBuf -> io.netty.buffer.UnreleasableByteBuf:
    io.netty.buffer.SwappedByteBuf swappedBuf -> swappedBuf
    29:30:void <init>(io.netty.buffer.ByteBuf) -> <init>
    34:45:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    50:50:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    55:55:io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    63:63:io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    68:68:io.netty.buffer.ByteBuf slice() -> slice
    76:76:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    81:81:io.netty.buffer.ByteBuf slice(int,int) -> slice
    94:94:io.netty.buffer.ByteBuf duplicate() -> duplicate
    102:102:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    107:107:io.netty.buffer.ByteBuf retain(int) -> retain
    112:112:io.netty.buffer.ByteBuf retain() -> retain
    117:117:io.netty.buffer.ByteBuf touch() -> touch
    122:122:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    127:127:boolean release() -> release
    132:132:boolean release(int) -> release
    24:24:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:io.netty.util.ReferenceCounted touch() -> touch
    24:24:io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:io.netty.util.ReferenceCounted retain() -> retain
io.netty.buffer.UnsafeByteBufUtil -> io.netty.buffer.UnsafeByteBufUtil:
    boolean UNALIGNED -> UNALIGNED
    39:39:byte getByte(long) -> getByte
    43:47:short getShort(long) -> getShort
    51:55:short getShortLE(long) -> getShortLE
    59:66:int getUnsignedMedium(long) -> getUnsignedMedium
    81:88:int getInt(long) -> getInt
    92:99:int getIntLE(long) -> getIntLE
    103:114:long getLong(long) -> getLong
    133:134:void setByte(long,int) -> setByte
    137:144:void setShort(long,int) -> setShort
    147:154:void setShortLE(long,int) -> setShortLE
    157:165:void setMedium(long,int) -> setMedium
    168:176:void setMediumLE(long,int) -> setMediumLE
    179:187:void setInt(long,int) -> setInt
    201:213:void setLong(long,long) -> setLong
    231:231:byte getByte(byte[],int) -> getByte
    235:240:short getShort(byte[],int) -> getShort
    244:249:short getShortLE(byte[],int) -> getShortLE
    253:261:int getUnsignedMedium(byte[],int) -> getUnsignedMedium
    276:283:int getInt(byte[],int) -> getInt
    287:294:int getIntLE(byte[],int) -> getIntLE
    298:309:long getLong(byte[],int) -> getLong
    328:329:void setByte(byte[],int,int) -> setByte
    332:339:void setShort(byte[],int,int) -> setShort
    342:349:void setShortLE(byte[],int,int) -> setShortLE
    352:361:void setMedium(byte[],int,int) -> setMedium
    364:373:void setMediumLE(byte[],int,int) -> setMediumLE
    376:384:void setInt(byte[],int,int) -> setInt
    398:410:void setLong(byte[],int,long) -> setLong
    428:432:void setZero(byte[],int,int) -> setZero
    435:445:io.netty.buffer.ByteBuf copy(io.netty.buffer.AbstractByteBuf,long,int,int) -> copy
    465:478:void getBytes(io.netty.buffer.AbstractByteBuf,long,int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    481:489:void getBytes(io.netty.buffer.AbstractByteBuf,long,int,byte[],int,int) -> getBytes
    492:513:void getBytes(io.netty.buffer.AbstractByteBuf,long,int,java.nio.ByteBuffer) -> getBytes
    516:531:void setBytes(io.netty.buffer.AbstractByteBuf,long,int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    534:538:void setBytes(io.netty.buffer.AbstractByteBuf,long,int,byte[],int,int) -> setBytes
    541:567:void setBytes(io.netty.buffer.AbstractByteBuf,long,int,java.nio.ByteBuffer) -> setBytes
    585:590:void setZero(long,int) -> setZero
    594:597:io.netty.buffer.UnpooledUnsafeDirectByteBuf newUnsafeDirectByteBuf(io.netty.buffer.ByteBufAllocator,int,int) -> newUnsafeDirectByteBuf
    35:35:void <clinit>() -> <clinit>
io.netty.buffer.UnsafeDirectSwappedByteBuf -> io.netty.buffer.UnsafeDirectSwappedByteBuf:
    27:28:void <init>(io.netty.buffer.AbstractByteBuf) -> <init>
    35:35:long addr(io.netty.buffer.AbstractByteBuf,int) -> addr
    40:40:long _getLong(io.netty.buffer.AbstractByteBuf,int) -> _getLong
    45:45:int _getInt(io.netty.buffer.AbstractByteBuf,int) -> _getInt
    50:50:short _getShort(io.netty.buffer.AbstractByteBuf,int) -> _getShort
    55:56:void _setShort(io.netty.buffer.AbstractByteBuf,int,short) -> _setShort
    60:61:void _setInt(io.netty.buffer.AbstractByteBuf,int,int) -> _setInt
    65:66:void _setLong(io.netty.buffer.AbstractByteBuf,int,long) -> _setLong
io.netty.buffer.UnsafeHeapSwappedByteBuf -> io.netty.buffer.UnsafeHeapSwappedByteBuf:
    27:28:void <init>(io.netty.buffer.AbstractByteBuf) -> <init>
    31:31:int idx(io.netty.buffer.ByteBuf,int) -> idx
    36:36:long _getLong(io.netty.buffer.AbstractByteBuf,int) -> _getLong
    41:41:int _getInt(io.netty.buffer.AbstractByteBuf,int) -> _getInt
    46:46:short _getShort(io.netty.buffer.AbstractByteBuf,int) -> _getShort
    51:52:void _setShort(io.netty.buffer.AbstractByteBuf,int,short) -> _setShort
    56:57:void _setInt(io.netty.buffer.AbstractByteBuf,int,int) -> _setInt
    61:62:void _setLong(io.netty.buffer.AbstractByteBuf,int,long) -> _setLong
io.netty.buffer.WrappedByteBuf -> io.netty.buffer.WrappedByteBuf:
    io.netty.buffer.ByteBuf buf -> buf
    43:48:void <init>(io.netty.buffer.ByteBuf) -> <init>
    52:52:boolean hasMemoryAddress() -> hasMemoryAddress
    57:57:long memoryAddress() -> memoryAddress
    62:62:int capacity() -> capacity
    67:68:io.netty.buffer.ByteBuf capacity(int) -> capacity
    73:73:int maxCapacity() -> maxCapacity
    78:78:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    83:83:java.nio.ByteOrder order() -> order
    88:88:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    93:93:io.netty.buffer.ByteBuf unwrap() -> unwrap
    98:98:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    103:103:boolean isReadOnly() -> isReadOnly
    108:108:boolean isDirect() -> isDirect
    113:113:int readerIndex() -> readerIndex
    118:119:io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    124:124:int writerIndex() -> writerIndex
    129:130:io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    135:136:io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    141:141:int readableBytes() -> readableBytes
    146:146:int writableBytes() -> writableBytes
    156:156:boolean isReadable() -> isReadable
    161:161:boolean isWritable() -> isWritable
    166:167:io.netty.buffer.ByteBuf clear() -> clear
    172:173:io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    178:179:io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    196:197:io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    202:203:io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    208:209:io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    214:214:int ensureWritable(int,boolean) -> ensureWritable
    224:224:byte getByte(int) -> getByte
    229:229:short getUnsignedByte(int) -> getUnsignedByte
    234:234:short getShort(int) -> getShort
    239:239:short getShortLE(int) -> getShortLE
    244:244:int getUnsignedShort(int) -> getUnsignedShort
    249:249:int getUnsignedShortLE(int) -> getUnsignedShortLE
    254:254:int getMedium(int) -> getMedium
    264:264:int getUnsignedMedium(int) -> getUnsignedMedium
    274:274:int getInt(int) -> getInt
    279:279:int getIntLE(int) -> getIntLE
    284:284:long getUnsignedInt(int) -> getUnsignedInt
    289:289:long getUnsignedIntLE(int) -> getUnsignedIntLE
    294:294:long getLong(int) -> getLong
    309:309:float getFloat(int) -> getFloat
    314:314:double getDouble(int) -> getDouble
    331:332:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    337:338:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    343:344:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    349:350:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    361:361:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    382:383:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    388:389:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    394:395:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    400:401:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    406:407:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    412:413:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    424:425:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    466:467:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    478:479:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    484:485:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    495:495:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    505:506:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    511:511:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    521:521:byte readByte() -> readByte
    526:526:short readUnsignedByte() -> readUnsignedByte
    531:531:short readShort() -> readShort
    541:541:int readUnsignedShort() -> readUnsignedShort
    551:551:int readMedium() -> readMedium
    561:561:int readUnsignedMedium() -> readUnsignedMedium
    571:571:int readInt() -> readInt
    581:581:long readUnsignedInt() -> readUnsignedInt
    591:591:long readLong() -> readLong
    616:616:io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    621:621:io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    626:626:io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    631:632:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    649:650:io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    655:656:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    673:673:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    688:689:io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    700:701:io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    706:707:io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    712:713:io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    718:719:io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    724:725:io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    730:731:io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    742:743:io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    754:755:io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    760:761:io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    766:767:io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    772:773:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    784:785:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    790:791:io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    796:797:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    802:803:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    813:813:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    823:824:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    829:829:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    834:834:int indexOf(int,int,byte) -> indexOf
    854:854:int forEachByte(io.netty.util.ByteProcessor) -> forEachByte
    859:859:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    869:869:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    874:874:io.netty.buffer.ByteBuf copy() -> copy
    879:879:io.netty.buffer.ByteBuf copy(int,int) -> copy
    884:884:io.netty.buffer.ByteBuf slice() -> slice
    889:889:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    894:894:io.netty.buffer.ByteBuf slice(int,int) -> slice
    904:904:io.netty.buffer.ByteBuf duplicate() -> duplicate
    909:909:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    914:914:int nioBufferCount() -> nioBufferCount
    919:919:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    924:924:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    929:929:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    934:934:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    939:939:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    944:944:boolean hasArray() -> hasArray
    949:949:byte[] array() -> array
    954:954:int arrayOffset() -> arrayOffset
    959:959:java.lang.String toString(java.nio.charset.Charset) -> toString
    964:964:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    969:969:int hashCode() -> hashCode
    975:975:boolean equals(java.lang.Object) -> equals
    980:980:int compareTo(io.netty.buffer.ByteBuf) -> compareTo
    985:985:java.lang.String toString() -> toString
    990:991:io.netty.buffer.ByteBuf retain(int) -> retain
    996:997:io.netty.buffer.ByteBuf retain() -> retain
    1002:1003:io.netty.buffer.ByteBuf touch() -> touch
    1008:1009:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    1014:1014:boolean isReadable(int) -> isReadable
    1019:1019:boolean isWritable(int) -> isWritable
    1024:1024:int refCnt() -> refCnt
    1029:1029:boolean release() -> release
    1034:1034:boolean release(int) -> release
    39:39:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    39:39:io.netty.util.ReferenceCounted touch() -> touch
    39:39:io.netty.util.ReferenceCounted retain(int) -> retain
    39:39:io.netty.util.ReferenceCounted retain() -> retain
    39:39:int compareTo(java.lang.Object) -> compareTo
io.netty.buffer.WrappedCompositeByteBuf -> io.netty.buffer.WrappedCompositeByteBuf:
    io.netty.buffer.CompositeByteBuf wrapped -> wrapped
    37:39:void <init>(io.netty.buffer.CompositeByteBuf) -> <init>
    43:43:boolean release() -> release
    48:48:boolean release(int) -> release
    53:53:int maxCapacity() -> maxCapacity
    58:58:int readerIndex() -> readerIndex
    63:63:int writerIndex() -> writerIndex
    68:68:boolean isReadable() -> isReadable
    73:73:boolean isReadable(int) -> isReadable
    78:78:boolean isWritable() -> isWritable
    83:83:boolean isWritable(int) -> isWritable
    88:88:int readableBytes() -> readableBytes
    93:93:int writableBytes() -> writableBytes
    103:103:int ensureWritable(int,boolean) -> ensureWritable
    108:108:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    118:118:short getUnsignedByte(int) -> getUnsignedByte
    123:123:short getShort(int) -> getShort
    128:128:short getShortLE(int) -> getShortLE
    133:133:int getUnsignedShort(int) -> getUnsignedShort
    138:138:int getUnsignedShortLE(int) -> getUnsignedShortLE
    143:143:int getUnsignedMedium(int) -> getUnsignedMedium
    153:153:int getMedium(int) -> getMedium
    163:163:int getInt(int) -> getInt
    168:168:int getIntLE(int) -> getIntLE
    173:173:long getUnsignedInt(int) -> getUnsignedInt
    178:178:long getUnsignedIntLE(int) -> getUnsignedIntLE
    183:183:long getLong(int) -> getLong
    198:198:float getFloat(int) -> getFloat
    203:203:double getDouble(int) -> getDouble
    208:208:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    213:213:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    228:228:byte readByte() -> readByte
    238:238:short readUnsignedByte() -> readUnsignedByte
    243:243:short readShort() -> readShort
    253:253:int readUnsignedShort() -> readUnsignedShort
    263:263:int readMedium() -> readMedium
    273:273:int readUnsignedMedium() -> readUnsignedMedium
    283:283:int readInt() -> readInt
    293:293:long readUnsignedInt() -> readUnsignedInt
    303:303:long readLong() -> readLong
    328:328:io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    333:333:io.netty.buffer.ByteBuf slice() -> slice
    338:338:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    343:343:io.netty.buffer.ByteBuf slice(int,int) -> slice
    348:348:io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    353:353:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    358:358:java.lang.String toString(java.nio.charset.Charset) -> toString
    363:363:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    368:368:int indexOf(int,int,byte) -> indexOf
    388:388:int forEachByte(io.netty.util.ByteProcessor) -> forEachByte
    393:393:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    403:403:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    408:408:int hashCode() -> hashCode
    413:413:boolean equals(java.lang.Object) -> equals
    418:418:int compareTo(io.netty.buffer.ByteBuf) -> compareTo
    423:423:int refCnt() -> refCnt
    428:428:io.netty.buffer.ByteBuf duplicate() -> duplicate
    433:433:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    438:438:io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    443:443:io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    448:448:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    453:453:io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    458:458:io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    478:478:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    483:483:io.netty.buffer.ByteBuf copy() -> copy
    524:525:io.netty.buffer.CompositeByteBuf addComponent(boolean,io.netty.buffer.ByteBuf) -> addComponent
    530:531:io.netty.buffer.CompositeByteBuf addComponents(boolean,io.netty.buffer.ByteBuf[]) -> addComponents
    560:560:java.util.Iterator iterator() -> iterator
    570:570:boolean isDirect() -> isDirect
    575:575:boolean hasArray() -> hasArray
    580:580:byte[] array() -> array
    585:585:int arrayOffset() -> arrayOffset
    590:590:boolean hasMemoryAddress() -> hasMemoryAddress
    595:595:long memoryAddress() -> memoryAddress
    600:600:int capacity() -> capacity
    605:606:io.netty.buffer.CompositeByteBuf capacity(int) -> capacity
    611:611:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    616:616:java.nio.ByteOrder order() -> order
    621:621:int numComponents() -> numComponents
    631:631:int toComponentIndex(int) -> toComponentIndex
    641:641:byte getByte(int) -> getByte
    646:646:byte _getByte(int) -> _getByte
    651:651:short _getShort(int) -> _getShort
    656:656:short _getShortLE(int) -> _getShortLE
    661:661:int _getUnsignedMedium(int) -> _getUnsignedMedium
    671:671:int _getInt(int) -> _getInt
    676:676:int _getIntLE(int) -> _getIntLE
    681:681:long _getLong(int) -> _getLong
    691:692:io.netty.buffer.CompositeByteBuf getBytes(int,byte[],int,int) -> getBytes
    697:698:io.netty.buffer.CompositeByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    703:704:io.netty.buffer.CompositeByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    709:709:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    720:721:io.netty.buffer.CompositeByteBuf setByte(int,int) -> setByte
    726:727:void _setByte(int,int) -> _setByte
    731:732:io.netty.buffer.CompositeByteBuf setShort(int,int) -> setShort
    737:738:void _setShort(int,int) -> _setShort
    742:743:void _setShortLE(int,int) -> _setShortLE
    747:748:io.netty.buffer.CompositeByteBuf setMedium(int,int) -> setMedium
    753:754:void _setMedium(int,int) -> _setMedium
    758:759:void _setMediumLE(int,int) -> _setMediumLE
    763:764:io.netty.buffer.CompositeByteBuf setInt(int,int) -> setInt
    769:770:void _setInt(int,int) -> _setInt
    779:780:io.netty.buffer.CompositeByteBuf setLong(int,long) -> setLong
    785:786:void _setLong(int,long) -> _setLong
    795:796:io.netty.buffer.CompositeByteBuf setBytes(int,byte[],int,int) -> setBytes
    801:802:io.netty.buffer.CompositeByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    807:808:io.netty.buffer.CompositeByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    818:818:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    823:823:io.netty.buffer.ByteBuf copy(int,int) -> copy
    838:838:io.netty.buffer.ByteBuf internalComponent(int) -> internalComponent
    848:848:int nioBufferCount() -> nioBufferCount
    853:853:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    858:858:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    863:863:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    880:881:io.netty.buffer.CompositeByteBuf discardReadComponents() -> discardReadComponents
    886:887:io.netty.buffer.CompositeByteBuf discardReadBytes() -> discardReadBytes
    892:892:java.lang.String toString() -> toString
    897:898:io.netty.buffer.CompositeByteBuf readerIndex(int) -> readerIndex
    903:904:io.netty.buffer.CompositeByteBuf writerIndex(int) -> writerIndex
    909:910:io.netty.buffer.CompositeByteBuf setIndex(int,int) -> setIndex
    915:916:io.netty.buffer.CompositeByteBuf clear() -> clear
    921:922:io.netty.buffer.CompositeByteBuf markReaderIndex() -> markReaderIndex
    927:928:io.netty.buffer.CompositeByteBuf resetReaderIndex() -> resetReaderIndex
    933:934:io.netty.buffer.CompositeByteBuf markWriterIndex() -> markWriterIndex
    945:946:io.netty.buffer.CompositeByteBuf ensureWritable(int) -> ensureWritable
    963:964:io.netty.buffer.CompositeByteBuf getBytes(int,byte[]) -> getBytes
    1005:1006:io.netty.buffer.CompositeByteBuf setBytes(int,byte[]) -> setBytes
    1011:1012:io.netty.buffer.CompositeByteBuf setZero(int,int) -> setZero
    1017:1018:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    1023:1024:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> readBytes
    1029:1030:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> readBytes
    1035:1036:io.netty.buffer.CompositeByteBuf readBytes(byte[]) -> readBytes
    1041:1042:io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int) -> readBytes
    1069:1069:boolean isReadOnly() -> isReadOnly
    1074:1074:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    1079:1079:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    1094:1094:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    1109:1109:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    1114:1115:io.netty.buffer.CompositeByteBuf skipBytes(int) -> skipBytes
    1126:1127:io.netty.buffer.CompositeByteBuf writeByte(int) -> writeByte
    1132:1133:io.netty.buffer.CompositeByteBuf writeShort(int) -> writeShort
    1138:1139:io.netty.buffer.CompositeByteBuf writeMedium(int) -> writeMedium
    1144:1145:io.netty.buffer.CompositeByteBuf writeInt(int) -> writeInt
    1150:1151:io.netty.buffer.CompositeByteBuf writeLong(long) -> writeLong
    1156:1157:io.netty.buffer.CompositeByteBuf writeChar(int) -> writeChar
    1162:1163:io.netty.buffer.CompositeByteBuf writeFloat(float) -> writeFloat
    1168:1169:io.netty.buffer.CompositeByteBuf writeDouble(double) -> writeDouble
    1174:1175:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    1180:1181:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> writeBytes
    1186:1187:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    1192:1193:io.netty.buffer.CompositeByteBuf writeBytes(byte[]) -> writeBytes
    1198:1199:io.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int) -> writeBytes
    1204:1205:io.netty.buffer.CompositeByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    1210:1211:io.netty.buffer.CompositeByteBuf writeZero(int) -> writeZero
    1216:1217:io.netty.buffer.CompositeByteBuf retain(int) -> retain
    1222:1223:io.netty.buffer.CompositeByteBuf retain() -> retain
    1228:1229:io.netty.buffer.CompositeByteBuf touch() -> touch
    1234:1235:io.netty.buffer.CompositeByteBuf touch(java.lang.Object) -> touch
    1240:1240:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    1245:1246:io.netty.buffer.CompositeByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    1251:1252:void deallocate() -> deallocate
    1256:1256:io.netty.buffer.ByteBuf unwrap() -> unwrap
    32:32:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    32:32:io.netty.buffer.ByteBuf touch() -> touch
    32:32:io.netty.buffer.ByteBuf retain(int) -> retain
    32:32:io.netty.buffer.ByteBuf retain() -> retain
    32:32:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    32:32:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    32:32:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    32:32:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> writeBytes
    32:32:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    32:32:io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    32:32:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    32:32:io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    32:32:io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    32:32:io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    32:32:io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    32:32:io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    32:32:io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    32:32:io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    32:32:io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    32:32:io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    32:32:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> readBytes
    32:32:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> readBytes
    32:32:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    32:32:io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    32:32:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    32:32:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    32:32:io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    32:32:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    32:32:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    32:32:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    32:32:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    32:32:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    32:32:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    32:32:io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    32:32:io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    32:32:io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    32:32:io.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    32:32:io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    32:32:io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    32:32:io.netty.buffer.ByteBuf clear() -> clear
    32:32:io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    32:32:io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    32:32:io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    32:32:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    32:32:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    32:32:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    32:32:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    32:32:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    32:32:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    32:32:io.netty.buffer.ByteBuf capacity(int) -> capacity
    32:32:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    32:32:io.netty.util.ReferenceCounted touch() -> touch
    32:32:io.netty.util.ReferenceCounted retain(int) -> retain
    32:32:io.netty.util.ReferenceCounted retain() -> retain
    32:32:int compareTo(java.lang.Object) -> compareTo
io.netty.channel.AbstractChannel -> io.netty.channel.AbstractChannel:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.nio.channels.ClosedChannelException FLUSH0_CLOSED_CHANNEL_EXCEPTION -> FLUSH0_CLOSED_CHANNEL_EXCEPTION
    java.nio.channels.ClosedChannelException ENSURE_OPEN_CLOSED_CHANNEL_EXCEPTION -> ENSURE_OPEN_CLOSED_CHANNEL_EXCEPTION
    java.nio.channels.ClosedChannelException CLOSE_CLOSED_CHANNEL_EXCEPTION -> CLOSE_CLOSED_CHANNEL_EXCEPTION
    java.nio.channels.ClosedChannelException WRITE_CLOSED_CHANNEL_EXCEPTION -> WRITE_CLOSED_CHANNEL_EXCEPTION
    java.nio.channels.NotYetConnectedException FLUSH0_NOT_YET_CONNECTED_EXCEPTION -> FLUSH0_NOT_YET_CONNECTED_EXCEPTION
    io.netty.channel.Channel parent -> parent
    io.netty.channel.ChannelId id -> id
    io.netty.channel.Channel$Unsafe unsafe -> unsafe
    io.netty.channel.DefaultChannelPipeline pipeline -> pipeline
    io.netty.channel.VoidChannelPromise unsafeVoidPromise -> unsafeVoidPromise
    io.netty.channel.AbstractChannel$CloseFuture closeFuture -> closeFuture
    java.net.SocketAddress localAddress -> localAddress
    java.net.SocketAddress remoteAddress -> remoteAddress
    io.netty.channel.EventLoop eventLoop -> eventLoop
    boolean registered -> registered
    boolean closeInitiated -> closeInitiated
    boolean strValActive -> strValActive
    java.lang.String strVal -> strVal
    62:86:void <init>(io.netty.channel.Channel) -> <init>
    62:99:void <init>(io.netty.channel.Channel,io.netty.channel.ChannelId) -> <init>
    103:103:io.netty.channel.ChannelId id() -> id
    111:111:io.netty.channel.ChannelId newId() -> newId
    118:118:io.netty.channel.DefaultChannelPipeline newChannelPipeline() -> newChannelPipeline
    123:124:boolean isWritable() -> isWritable
    129:132:long bytesBeforeUnwritable() -> bytesBeforeUnwritable
    137:140:long bytesBeforeWritable() -> bytesBeforeWritable
    145:145:io.netty.channel.Channel parent() -> parent
    150:150:io.netty.channel.ChannelPipeline pipeline() -> pipeline
    155:155:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    160:164:io.netty.channel.EventLoop eventLoop() -> eventLoop
    169:178:java.net.SocketAddress localAddress() -> localAddress
    186:187:void invalidateLocalAddress() -> invalidateLocalAddress
    191:200:java.net.SocketAddress remoteAddress() -> remoteAddress
    208:209:void invalidateRemoteAddress() -> invalidateRemoteAddress
    213:213:boolean isRegistered() -> isRegistered
    218:218:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    223:223:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    228:228:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    233:233:io.netty.channel.ChannelFuture disconnect() -> disconnect
    238:238:io.netty.channel.ChannelFuture close() -> close
    243:243:io.netty.channel.ChannelFuture deregister() -> deregister
    248:249:io.netty.channel.Channel flush() -> flush
    254:254:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    259:259:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    264:264:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    269:269:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    274:274:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    279:279:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    284:285:io.netty.channel.Channel read() -> read
    290:290:io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    295:295:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    300:300:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    305:305:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    310:310:io.netty.channel.ChannelPromise newPromise() -> newPromise
    315:315:io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    320:320:io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    325:325:io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    330:330:io.netty.channel.ChannelFuture closeFuture() -> closeFuture
    335:335:io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    348:348:int hashCode() -> hashCode
    357:357:boolean equals(java.lang.Object) -> equals
    362:366:int compareTo(io.netty.channel.Channel) -> compareTo
    377:412:java.lang.String toString() -> toString
    417:417:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    boolean isCompatible(io.netty.channel.EventLoop) -> isCompatible
    java.net.SocketAddress localAddress0() -> localAddress0
    java.net.SocketAddress remoteAddress0() -> remoteAddress0
    1068:1068:void doRegister() -> doRegister
    void doBind(java.net.SocketAddress) -> doBind
    void doDisconnect() -> doDisconnect
    void doClose() -> doClose
    1091:1092:void doShutdownOutput() -> doShutdownOutput
    1101:1101:void doDeregister() -> doDeregister
    void doBeginRead() -> doBeginRead
    void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    1118:1118:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    43:43:io.netty.channel.ChannelOutboundInvoker flush() -> flush
    43:43:io.netty.channel.ChannelOutboundInvoker read() -> read
    43:43:int compareTo(java.lang.Object) -> compareTo
    43:43:boolean access$000(io.netty.channel.AbstractChannel) -> access$000
    43:43:io.netty.channel.EventLoop access$100(io.netty.channel.AbstractChannel) -> access$100
    43:43:io.netty.channel.EventLoop access$102(io.netty.channel.AbstractChannel,io.netty.channel.EventLoop) -> access$102
    43:43:io.netty.util.internal.logging.InternalLogger access$300() -> access$300
    43:43:io.netty.channel.AbstractChannel$CloseFuture access$400(io.netty.channel.AbstractChannel) -> access$400
    43:43:boolean access$002(io.netty.channel.AbstractChannel,boolean) -> access$002
    43:43:io.netty.channel.DefaultChannelPipeline access$500(io.netty.channel.AbstractChannel) -> access$500
    43:43:java.nio.channels.ClosedChannelException access$600() -> access$600
    43:43:boolean access$800(io.netty.channel.AbstractChannel) -> access$800
    43:43:boolean access$802(io.netty.channel.AbstractChannel,boolean) -> access$802
    43:43:java.nio.channels.ClosedChannelException access$1200() -> access$1200
    43:43:java.nio.channels.NotYetConnectedException access$1300() -> access$1300
    43:43:java.nio.channels.ClosedChannelException access$1400() -> access$1400
    43:43:io.netty.channel.VoidChannelPromise access$1500(io.netty.channel.AbstractChannel) -> access$1500
    43:43:java.nio.channels.ClosedChannelException access$1600() -> access$1600
    45:55:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannel$AbstractUnsafe -> io.netty.channel.AbstractChannel$AbstractUnsafe:
    io.netty.channel.ChannelOutboundBuffer outboundBuffer -> outboundBuffer
    io.netty.channel.RecvByteBufAllocator$Handle recvHandle -> recvHandle
    boolean inFlush0 -> inFlush0
    boolean neverRegistered -> neverRegistered
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.channel.AbstractChannel this$0 -> this$0
    423:429:void <init>(io.netty.channel.AbstractChannel) -> <init>
    432:433:void assertEventLoop() -> assertEventLoop
    437:440:io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle() -> recvBufAllocHandle
    445:445:io.netty.channel.ChannelOutboundBuffer outboundBuffer() -> outboundBuffer
    450:450:java.net.SocketAddress localAddress() -> localAddress
    455:455:java.net.SocketAddress remoteAddress() -> remoteAddress
    460:494:void register(io.netty.channel.EventLoop,io.netty.channel.ChannelPromise) -> register
    500:533:void register0(io.netty.channel.ChannelPromise) -> register0
    537:575:void bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    579:605:void disconnect(io.netty.channel.ChannelPromise) -> disconnect
    609:612:void close(io.netty.channel.ChannelPromise) -> close
    620:622:void shutdownOutput(io.netty.channel.ChannelPromise) -> shutdownOutput
    630:677:void shutdownOutput(io.netty.channel.ChannelPromise,java.lang.Throwable) -> shutdownOutput
    681:684:void closeOutboundBufferForShutdown(io.netty.channel.ChannelPipeline,io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable) -> closeOutboundBufferForShutdown
    688:759:void close(io.netty.channel.ChannelPromise,java.lang.Throwable,java.nio.channels.ClosedChannelException,boolean) -> close
    763:770:void doClose0(io.netty.channel.ChannelPromise) -> doClose0
    773:774:void fireChannelInactiveAndDeregister(boolean) -> fireChannelInactiveAndDeregister
    778:785:void closeForcibly() -> closeForcibly
    789:792:void deregister(io.netty.channel.ChannelPromise) -> deregister
    795:836:void deregister(io.netty.channel.ChannelPromise,boolean) -> deregister
    840:857:void beginRead() -> beginRead
    861:889:void write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    893:902:void flush() -> flush
    906:956:void flush0() -> flush0
    960:962:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    966:971:boolean ensureOpen(io.netty.channel.ChannelPromise) -> ensureOpen
    978:981:void safeSetSuccess(io.netty.channel.ChannelPromise) -> safeSetSuccess
    987:990:void safeSetFailure(io.netty.channel.ChannelPromise,java.lang.Throwable) -> safeSetFailure
    993:997:void closeIfClosed() -> closeIfClosed
    1012:1016:void invokeLater(java.lang.Runnable) -> invokeLater
    1022:1032:java.lang.Throwable annotateConnectException(java.lang.Throwable,java.net.SocketAddress) -> annotateConnectException
    1042:1042:java.util.concurrent.Executor prepareToClose() -> prepareToClose
    423:423:void access$200(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise) -> access$200
    423:423:void access$700(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPipeline,io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable) -> access$700
    423:423:void access$900(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise) -> access$900
    423:423:void access$1000(io.netty.channel.AbstractChannel$AbstractUnsafe,boolean) -> access$1000
    423:423:void access$1100(io.netty.channel.AbstractChannel$AbstractUnsafe,java.lang.Runnable) -> access$1100
    423:423:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannel$AbstractUnsafe$1 -> io.netty.channel.AbstractChannel$AbstractUnsafe$1:
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    479:479:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise) -> <init>
    482:483:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$2 -> io.netty.channel.AbstractChannel$AbstractUnsafe$2:
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    566:566:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe) -> <init>
    569:570:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$3 -> io.netty.channel.AbstractChannel$AbstractUnsafe$3:
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    595:595:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe) -> <init>
    598:599:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$4 -> io.netty.channel.AbstractChannel$AbstractUnsafe$4:
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.ChannelOutboundBuffer val$outboundBuffer -> val$outboundBuffer
    java.lang.Throwable val$shutdownCause -> val$shutdownCause
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    646:646:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise,io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable) -> <init>
    651:664:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$4$1 -> io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:
    io.netty.channel.AbstractChannel$AbstractUnsafe$4 this$2 -> this$2
    657:657:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe$4) -> <init>
    660:661:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$5 -> io.netty.channel.AbstractChannel$AbstractUnsafe$5:
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    698:698:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise) -> <init>
    701:702:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    698:698:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.AbstractChannel$AbstractUnsafe$6 -> io.netty.channel.AbstractChannel$AbstractUnsafe$6:
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.ChannelOutboundBuffer val$outboundBuffer -> val$outboundBuffer
    java.lang.Throwable val$cause -> val$cause
    boolean val$notify -> val$notify
    java.nio.channels.ClosedChannelException val$closeCause -> val$closeCause
    boolean val$wasActive -> val$wasActive
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    715:715:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise,io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable,boolean,java.nio.channels.ClosedChannelException,boolean) -> <init>
    720:735:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$6$1 -> io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:
    io.netty.channel.AbstractChannel$AbstractUnsafe$6 this$2 -> this$2
    723:723:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe$6) -> <init>
    726:732:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$7 -> io.netty.channel.AbstractChannel$AbstractUnsafe$7:
    boolean val$wasActive -> val$wasActive
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    749:749:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,boolean) -> <init>
    752:753:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$8 -> io.netty.channel.AbstractChannel$AbstractUnsafe$8:
    boolean val$fireChannelInactive -> val$fireChannelInactive
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    813:813:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,boolean,io.netty.channel.ChannelPromise) -> <init>
    817:834:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$9 -> io.netty.channel.AbstractChannel$AbstractUnsafe$9:
    java.lang.Exception val$e -> val$e
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    849:849:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,java.lang.Exception) -> <init>
    852:853:void run() -> run
io.netty.channel.AbstractChannel$AnnotatedConnectException -> io.netty.channel.AbstractChannel$AnnotatedConnectException:
    long serialVersionUID -> serialVersionUID
    1157:1160:void <init>(java.net.ConnectException,java.net.SocketAddress) -> <init>
    1164:1164:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException -> io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException:
    long serialVersionUID -> serialVersionUID
    1173:1176:void <init>(java.net.NoRouteToHostException,java.net.SocketAddress) -> <init>
    1180:1180:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.netty.channel.AbstractChannel$AnnotatedSocketException -> io.netty.channel.AbstractChannel$AnnotatedSocketException:
    long serialVersionUID -> serialVersionUID
    1189:1192:void <init>(java.net.SocketException,java.net.SocketAddress) -> <init>
    1196:1196:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.netty.channel.AbstractChannel$CloseFuture -> io.netty.channel.AbstractChannel$CloseFuture:
    1124:1125:void <init>(io.netty.channel.AbstractChannel) -> <init>
    1129:1129:io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    1134:1134:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    1139:1139:boolean trySuccess() -> trySuccess
    1144:1144:boolean tryFailure(java.lang.Throwable) -> tryFailure
    1148:1148:boolean setClosed() -> setClosed
    1121:1121:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
io.netty.channel.AbstractChannelHandlerContext -> io.netty.channel.AbstractChannelHandlerContext:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.channel.AbstractChannelHandlerContext next -> next
    io.netty.channel.AbstractChannelHandlerContext prev -> prev
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater HANDLER_STATE_UPDATER -> HANDLER_STATE_UPDATER
    int ADD_PENDING -> ADD_PENDING
    int ADD_COMPLETE -> ADD_COMPLETE
    int REMOVE_COMPLETE -> REMOVE_COMPLETE
    int INIT -> INIT
    boolean inbound -> inbound
    boolean outbound -> outbound
    io.netty.channel.DefaultChannelPipeline pipeline -> pipeline
    java.lang.String name -> name
    boolean ordered -> ordered
    io.netty.util.concurrent.EventExecutor executor -> executor
    io.netty.channel.ChannelFuture succeededFuture -> succeededFuture
    java.lang.Runnable invokeChannelReadCompleteTask -> invokeChannelReadCompleteTask
    java.lang.Runnable invokeReadTask -> invokeReadTask
    java.lang.Runnable invokeChannelWritableStateChangedTask -> invokeChannelWritableStateChangedTask
    java.lang.Runnable invokeFlushTask -> invokeFlushTask
    int handlerState -> handlerState
    boolean $assertionsDisabled -> $assertionsDisabled
    84:95:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.util.concurrent.EventExecutor,java.lang.String,boolean,boolean) -> <init>
    99:99:io.netty.channel.Channel channel() -> channel
    104:104:io.netty.channel.ChannelPipeline pipeline() -> pipeline
    109:109:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    114:117:io.netty.util.concurrent.EventExecutor executor() -> executor
    123:123:java.lang.String name() -> name
    128:129:io.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    133:144:void invokeChannelRegistered(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelRegistered
    147:156:void invokeChannelRegistered() -> invokeChannelRegistered
    160:161:io.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    165:176:void invokeChannelUnregistered(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelUnregistered
    179:188:void invokeChannelUnregistered() -> invokeChannelUnregistered
    192:193:io.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    197:208:void invokeChannelActive(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelActive
    211:220:void invokeChannelActive() -> invokeChannelActive
    224:225:io.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    229:240:void invokeChannelInactive(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelInactive
    243:252:void invokeChannelInactive() -> invokeChannelInactive
    256:257:io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    261:280:void invokeExceptionCaught(io.netty.channel.AbstractChannelHandlerContext,java.lang.Throwable) -> invokeExceptionCaught
    283:303:void invokeExceptionCaught(java.lang.Throwable) -> invokeExceptionCaught
    307:308:io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    312:324:void invokeUserEventTriggered(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> invokeUserEventTriggered
    327:336:void invokeUserEventTriggered(java.lang.Object) -> invokeUserEventTriggered
    340:341:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    345:357:void invokeChannelRead(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> invokeChannelRead
    360:369:void invokeChannelRead(java.lang.Object) -> invokeChannelRead
    373:374:io.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    378:393:void invokeChannelReadComplete(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelReadComplete
    396:405:void invokeChannelReadComplete() -> invokeChannelReadComplete
    409:410:io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    414:429:void invokeChannelWritabilityChanged(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelWritabilityChanged
    432:441:void invokeChannelWritabilityChanged() -> invokeChannelWritabilityChanged
    445:445:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    450:450:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    455:455:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    460:460:io.netty.channel.ChannelFuture disconnect() -> disconnect
    465:465:io.netty.channel.ChannelFuture close() -> close
    470:470:io.netty.channel.ChannelFuture deregister() -> deregister
    475:495:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    499:508:void invokeBind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> invokeBind
    512:512:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    519:539:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    543:552:void invokeConnect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> invokeConnect
    556:583:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    587:596:void invokeDisconnect(io.netty.channel.ChannelPromise) -> invokeDisconnect
    600:618:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    622:631:void invokeClose(io.netty.channel.ChannelPromise) -> invokeClose
    635:653:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    657:666:void invokeDeregister(io.netty.channel.ChannelPromise) -> invokeDeregister
    670:687:io.netty.channel.ChannelHandlerContext read() -> read
    691:700:void invokeRead() -> invokeRead
    704:704:io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    709:725:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    729:734:void invokeWrite(java.lang.Object,io.netty.channel.ChannelPromise) -> invokeWrite
    738:742:void invokeWrite0(java.lang.Object,io.netty.channel.ChannelPromise) -> invokeWrite0
    746:763:io.netty.channel.ChannelHandlerContext flush() -> flush
    767:772:void invokeFlush() -> invokeFlush
    776:780:void invokeFlush0() -> invokeFlush0
    784:796:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    800:806:void invokeWriteAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> invokeWriteAndFlush
    809:827:void write(java.lang.Object,boolean,io.netty.channel.ChannelPromise) -> write
    831:831:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    837:838:void notifyOutboundHandlerException(java.lang.Throwable,io.netty.channel.ChannelPromise) -> notifyOutboundHandlerException
    841:851:void notifyHandlerException(java.lang.Throwable) -> notifyHandlerException
    855:870:boolean inExceptionCaught(java.lang.Throwable) -> inExceptionCaught
    875:875:io.netty.channel.ChannelPromise newPromise() -> newPromise
    880:880:io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    885:889:io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    894:894:io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    898:931:boolean isNotValidPromise(io.netty.channel.ChannelPromise,boolean) -> isNotValidPromise
    935:939:io.netty.channel.AbstractChannelHandlerContext findContextInbound() -> findContextInbound
    943:947:io.netty.channel.AbstractChannelHandlerContext findContextOutbound() -> findContextOutbound
    952:952:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    956:957:void setRemoved() -> setRemoved
    961:968:void setAddComplete() -> setAddComplete
    972:974:void setAddPending() -> setAddPending
    986:987:boolean invokeHandler() -> invokeHandler
    992:992:boolean isRemoved() -> isRemoved
    997:997:io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    1002:1002:boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
    1007:1017:void safeExecute(io.netty.util.concurrent.EventExecutor,java.lang.Runnable,io.netty.channel.ChannelPromise,java.lang.Object) -> safeExecute
    1021:1021:java.lang.String toHintString() -> toHintString
    1026:1026:java.lang.String toString() -> toString
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    38:38:io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    38:38:io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    38:38:io.netty.channel.ChannelOutboundInvoker flush() -> flush
    38:38:io.netty.channel.ChannelOutboundInvoker read() -> read
    38:38:void access$000(io.netty.channel.AbstractChannelHandlerContext) -> access$000
    38:38:void access$100(io.netty.channel.AbstractChannelHandlerContext) -> access$100
    38:38:void access$200(io.netty.channel.AbstractChannelHandlerContext) -> access$200
    38:38:void access$300(io.netty.channel.AbstractChannelHandlerContext) -> access$300
    38:38:void access$400(io.netty.channel.AbstractChannelHandlerContext,java.lang.Throwable) -> access$400
    38:38:void access$500(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> access$500
    38:38:void access$600(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> access$600
    38:38:void access$700(io.netty.channel.AbstractChannelHandlerContext) -> access$700
    38:38:void access$800(io.netty.channel.AbstractChannelHandlerContext) -> access$800
    38:38:void access$900(io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> access$900
    38:38:void access$1000(io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> access$1000
    38:38:void access$1100(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> access$1100
    38:38:void access$1200(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> access$1200
    38:38:void access$1300(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> access$1300
    38:38:void access$1400(io.netty.channel.AbstractChannelHandlerContext) -> access$1400
    38:38:void access$1500(io.netty.channel.AbstractChannelHandlerContext) -> access$1500
    38:38:io.netty.channel.DefaultChannelPipeline access$1800(io.netty.channel.AbstractChannelHandlerContext) -> access$1800
    38:38:void access$1900(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> access$1900
    38:46:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannelHandlerContext$1 -> io.netty.channel.AbstractChannelHandlerContext$1:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    137:137:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    140:141:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$10 -> io.netty.channel.AbstractChannelHandlerContext$10:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.net.SocketAddress val$localAddress -> val$localAddress
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    488:488:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> <init>
    491:492:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$11 -> io.netty.channel.AbstractChannelHandlerContext$11:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    java.net.SocketAddress val$localAddress -> val$localAddress
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    532:532:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> <init>
    535:536:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$12 -> io.netty.channel.AbstractChannelHandlerContext$12:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    572:572:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    575:580:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$13 -> io.netty.channel.AbstractChannelHandlerContext$13:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    610:610:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    613:614:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$14 -> io.netty.channel.AbstractChannelHandlerContext$14:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    645:645:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    648:649:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$15 -> io.netty.channel.AbstractChannelHandlerContext$15:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    677:677:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    680:681:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$16 -> io.netty.channel.AbstractChannelHandlerContext$16:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    753:753:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    756:757:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$2 -> io.netty.channel.AbstractChannelHandlerContext$2:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    169:169:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    172:173:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$3 -> io.netty.channel.AbstractChannelHandlerContext$3:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    201:201:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    204:205:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$4 -> io.netty.channel.AbstractChannelHandlerContext$4:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    233:233:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    236:237:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$5 -> io.netty.channel.AbstractChannelHandlerContext$5:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Throwable val$cause -> val$cause
    267:267:void <init>(io.netty.channel.AbstractChannelHandlerContext,java.lang.Throwable) -> <init>
    270:271:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$6 -> io.netty.channel.AbstractChannelHandlerContext$6:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Object val$event -> val$event
    317:317:void <init>(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> <init>
    320:321:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$7 -> io.netty.channel.AbstractChannelHandlerContext$7:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Object val$m -> val$m
    350:350:void <init>(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> <init>
    353:354:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$8 -> io.netty.channel.AbstractChannelHandlerContext$8:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    384:384:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    387:388:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$9 -> io.netty.channel.AbstractChannelHandlerContext$9:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    420:420:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    423:424:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask -> io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:
    boolean ESTIMATE_TASK_SIZE_ON_SUBMIT -> ESTIMATE_TASK_SIZE_ON_SUBMIT
    int WRITE_TASK_OVERHEAD -> WRITE_TASK_OVERHEAD
    io.netty.util.Recycler$Handle handle -> handle
    io.netty.channel.AbstractChannelHandlerContext ctx -> ctx
    java.lang.Object msg -> msg
    io.netty.channel.ChannelPromise promise -> promise
    int size -> size
    1045:1047:void <init>(io.netty.util.Recycler$Handle) -> <init>
    1051:1061:void init(io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask,io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> init
    1067:1078:void run() -> run
    1081:1082:void write(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    1029:1029:void <init>(io.netty.util.Recycler$Handle,io.netty.channel.AbstractChannelHandlerContext$1) -> <init>
    1031:1036:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask -> io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    1117:1119:io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask newInstance(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> newInstance
    1123:1124:void <init>(io.netty.util.Recycler$Handle) -> <init>
    1128:1130:void write(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    1106:1106:io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask access$1600(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> access$1600
    1106:1106:void <init>(io.netty.util.Recycler$Handle,io.netty.channel.AbstractChannelHandlerContext$1) -> <init>
    1108:1108:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1 -> io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1:
    1108:1108:void <init>() -> <init>
    1111:1111:io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask newObject(io.netty.util.Recycler$Handle) -> newObject
    1108:1108:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.channel.AbstractChannelHandlerContext$WriteTask -> io.netty.channel.AbstractChannelHandlerContext$WriteTask:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    1096:1098:io.netty.channel.AbstractChannelHandlerContext$WriteTask newInstance(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> newInstance
    1102:1103:void <init>(io.netty.util.Recycler$Handle) -> <init>
    1085:1085:io.netty.channel.AbstractChannelHandlerContext$WriteTask access$1700(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> access$1700
    1085:1085:void <init>(io.netty.util.Recycler$Handle,io.netty.channel.AbstractChannelHandlerContext$1) -> <init>
    1087:1087:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannelHandlerContext$WriteTask$1 -> io.netty.channel.AbstractChannelHandlerContext$WriteTask$1:
    1087:1087:void <init>() -> <init>
    1090:1090:io.netty.channel.AbstractChannelHandlerContext$WriteTask newObject(io.netty.util.Recycler$Handle) -> newObject
    1087:1087:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.channel.AbstractCoalescingBufferQueue -> io.netty.channel.AbstractCoalescingBufferQueue:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.ArrayDeque bufAndListenerPairs -> bufAndListenerPairs
    io.netty.channel.PendingBytesTracker tracker -> tracker
    int readableBytes -> readableBytes
    boolean $assertionsDisabled -> $assertionsDisabled
    45:48:void <init>(io.netty.channel.Channel,int) -> <init>
    57:58:void addFirst(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> addFirst
    61:66:void addFirst(io.netty.buffer.ByteBuf,io.netty.channel.ChannelFutureListener) -> addFirst
    72:73:void add(io.netty.buffer.ByteBuf) -> add
    84:85:void add(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> add
    96:101:void add(io.netty.buffer.ByteBuf,io.netty.channel.ChannelFutureListener) -> add
    109:123:io.netty.buffer.ByteBuf removeFirst(io.netty.channel.ChannelPromise) -> removeFirst
    138:186:io.netty.buffer.ByteBuf remove(io.netty.buffer.ByteBufAllocator,int,io.netty.channel.ChannelPromise) -> remove
    193:193:int readableBytes() -> readableBytes
    200:200:boolean isEmpty() -> isEmpty
    207:208:void releaseAndFailAll(io.netty.channel.ChannelOutboundInvoker,java.lang.Throwable) -> releaseAndFailAll
    215:217:void copyTo(io.netty.channel.AbstractCoalescingBufferQueue) -> copyTo
    224:260:void writeAndRemoveAll(io.netty.channel.ChannelHandlerContext) -> writeAndRemoveAll
    io.netty.buffer.ByteBuf compose(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> compose
    273:282:io.netty.buffer.ByteBuf composeIntoComposite(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> composeIntoComposite
    293:303:io.netty.buffer.ByteBuf copyAndCompose(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> copyAndCompose
    311:311:io.netty.buffer.ByteBuf composeFirst(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf) -> composeFirst
    io.netty.buffer.ByteBuf removeEmptyValue() -> removeEmptyValue
    325:325:int size() -> size
    329:353:void releaseAndCompleteAll(io.netty.channel.ChannelFuture) -> releaseAndCompleteAll
    356:364:void incrementReadableBytes(int) -> incrementReadableBytes
    367:372:void decrementReadableBytes(int) -> decrementReadableBytes
    375:375:io.netty.channel.ChannelFutureListener toChannelFutureListener(io.netty.channel.ChannelPromise) -> toChannelFutureListener
    31:33:void <clinit>() -> <clinit>
io.netty.channel.AbstractEventLoop -> io.netty.channel.AbstractEventLoop:
    26:26:void <init>() -> <init>
    29:30:void <init>(io.netty.channel.EventLoopGroup) -> <init>
    34:34:io.netty.channel.EventLoopGroup parent() -> parent
    39:39:io.netty.channel.EventLoop next() -> next
    24:24:io.netty.util.concurrent.EventExecutor next() -> next
    24:24:io.netty.util.concurrent.EventExecutorGroup parent() -> parent
io.netty.channel.AbstractEventLoopGroup -> io.netty.channel.AbstractEventLoopGroup:
    24:24:void <init>() -> <init>
    io.netty.channel.EventLoop next() -> next
    24:24:io.netty.util.concurrent.EventExecutor next() -> next
io.netty.channel.AbstractServerChannel -> io.netty.channel.AbstractServerChannel:
    io.netty.channel.ChannelMetadata METADATA -> METADATA
    38:39:void <init>() -> <init>
    43:43:io.netty.channel.ChannelMetadata metadata() -> metadata
    48:48:java.net.SocketAddress remoteAddress() -> remoteAddress
    53:53:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    58:58:void doDisconnect() -> doDisconnect
    63:63:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    68:68:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    73:73:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    32:32:void <clinit>() -> <clinit>
io.netty.channel.AbstractServerChannel$1 -> io.netty.channel.AbstractServerChannel$1:
io.netty.channel.AbstractServerChannel$DefaultServerUnsafe -> io.netty.channel.AbstractServerChannel$DefaultServerUnsafe:
    io.netty.channel.AbstractServerChannel this$0 -> this$0
    76:76:void <init>(io.netty.channel.AbstractServerChannel) -> <init>
    79:80:void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    76:76:void <init>(io.netty.channel.AbstractServerChannel,io.netty.channel.AbstractServerChannel$1) -> <init>
io.netty.channel.AdaptiveRecvByteBufAllocator -> io.netty.channel.AdaptiveRecvByteBufAllocator:
    int DEFAULT_MINIMUM -> DEFAULT_MINIMUM
    int DEFAULT_INITIAL -> DEFAULT_INITIAL
    int DEFAULT_MAXIMUM -> DEFAULT_MAXIMUM
    int INDEX_INCREMENT -> INDEX_INCREMENT
    int INDEX_DECREMENT -> INDEX_DECREMENT
    int[] SIZE_TABLE -> SIZE_TABLE
    io.netty.channel.AdaptiveRecvByteBufAllocator DEFAULT -> DEFAULT
    int minIndex -> minIndex
    int maxIndex -> maxIndex
    int initial -> initial
    68:88:int getSizeTableIndex(int) -> getSizeTableIndex
    155:156:void <init>() -> <init>
    165:191:void <init>(int,int,int) -> <init>
    196:196:io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    201:202:io.netty.channel.AdaptiveRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    34:34:io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    34:34:int access$000(int) -> access$000
    34:34:int[] access$100() -> access$100
    46:65:void <clinit>() -> <clinit>
io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl -> io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl:
    int minIndex -> minIndex
    int maxIndex -> maxIndex
    int index -> index
    int nextReceiveBufferSize -> nextReceiveBufferSize
    boolean decreaseNow -> decreaseNow
    io.netty.channel.AdaptiveRecvByteBufAllocator this$0 -> this$0
    98:104:void <init>(io.netty.channel.AdaptiveRecvByteBufAllocator,int,int,int) -> <init>
    112:116:void lastBytesRead(int) -> lastBytesRead
    120:120:int guess() -> guess
    124:137:void record(int) -> record
    141:142:void readComplete() -> readComplete
io.netty.channel.AddressedEnvelope -> io.netty.channel.AddressedEnvelope:
    java.lang.Object content() -> content
    java.net.SocketAddress sender() -> sender
    java.net.SocketAddress recipient() -> recipient
    io.netty.channel.AddressedEnvelope retain() -> retain
    io.netty.channel.AddressedEnvelope retain(int) -> retain
    io.netty.channel.AddressedEnvelope touch() -> touch
    io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
io.netty.channel.Channel -> io.netty.channel.Channel:
    io.netty.channel.ChannelId id() -> id
    io.netty.channel.EventLoop eventLoop() -> eventLoop
    io.netty.channel.Channel parent() -> parent
    io.netty.channel.ChannelConfig config() -> config
    boolean isOpen() -> isOpen
    boolean isRegistered() -> isRegistered
    boolean isActive() -> isActive
    io.netty.channel.ChannelMetadata metadata() -> metadata
    java.net.SocketAddress localAddress() -> localAddress
    java.net.SocketAddress remoteAddress() -> remoteAddress
    io.netty.channel.ChannelFuture closeFuture() -> closeFuture
    boolean isWritable() -> isWritable
    long bytesBeforeUnwritable() -> bytesBeforeUnwritable
    long bytesBeforeWritable() -> bytesBeforeWritable
    io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    io.netty.channel.ChannelPipeline pipeline() -> pipeline
    io.netty.buffer.ByteBufAllocator alloc() -> alloc
    io.netty.channel.Channel read() -> read
    io.netty.channel.Channel flush() -> flush
io.netty.channel.Channel$Unsafe -> io.netty.channel.Channel$Unsafe:
    io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle() -> recvBufAllocHandle
    java.net.SocketAddress localAddress() -> localAddress
    java.net.SocketAddress remoteAddress() -> remoteAddress
    void register(io.netty.channel.EventLoop,io.netty.channel.ChannelPromise) -> register
    void bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    void disconnect(io.netty.channel.ChannelPromise) -> disconnect
    void close(io.netty.channel.ChannelPromise) -> close
    void closeForcibly() -> closeForcibly
    void deregister(io.netty.channel.ChannelPromise) -> deregister
    void beginRead() -> beginRead
    void write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    void flush() -> flush
    io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    io.netty.channel.ChannelOutboundBuffer outboundBuffer() -> outboundBuffer
io.netty.channel.ChannelConfig -> io.netty.channel.ChannelConfig:
    java.util.Map getOptions() -> getOptions
    boolean setOptions(java.util.Map) -> setOptions
    java.lang.Object getOption(io.netty.channel.ChannelOption) -> getOption
    boolean setOption(io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    int getConnectTimeoutMillis() -> getConnectTimeoutMillis
    io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    int getMaxMessagesPerRead() -> getMaxMessagesPerRead
    io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    int getWriteSpinCount() -> getWriteSpinCount
    io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    io.netty.buffer.ByteBufAllocator getAllocator() -> getAllocator
    io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    io.netty.channel.RecvByteBufAllocator getRecvByteBufAllocator() -> getRecvByteBufAllocator
    io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    boolean isAutoRead() -> isAutoRead
    io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    boolean isAutoClose() -> isAutoClose
    io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    int getWriteBufferHighWaterMark() -> getWriteBufferHighWaterMark
    io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    int getWriteBufferLowWaterMark() -> getWriteBufferLowWaterMark
    io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    io.netty.channel.MessageSizeEstimator getMessageSizeEstimator() -> getMessageSizeEstimator
    io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    io.netty.channel.WriteBufferWaterMark getWriteBufferWaterMark() -> getWriteBufferWaterMark
    io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
io.netty.channel.ChannelDuplexHandler -> io.netty.channel.ChannelDuplexHandler:
    27:27:void <init>() -> <init>
    38:39:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    50:51:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    62:63:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    73:74:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    84:85:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    95:96:void read(io.netty.channel.ChannelHandlerContext) -> read
    106:107:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    117:118:void flush(io.netty.channel.ChannelHandlerContext) -> flush
io.netty.channel.ChannelException -> io.netty.channel.ChannelException:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
io.netty.channel.ChannelFactory -> io.netty.channel.ChannelFactory:
    io.netty.channel.Channel newChannel() -> newChannel
io.netty.channel.ChannelFlushPromiseNotifier -> io.netty.channel.ChannelFlushPromiseNotifier:
    long writeCounter -> writeCounter
    java.util.Queue flushCheckpoints -> flushCheckpoints
    boolean tryNotify -> tryNotify
    28:41:void <init>(boolean) -> <init>
    48:49:void <init>() -> <init>
    56:56:io.netty.channel.ChannelFlushPromiseNotifier add(io.netty.channel.ChannelPromise,int) -> add
    64:78:io.netty.channel.ChannelFlushPromiseNotifier add(io.netty.channel.ChannelPromise,long) -> add
    84:88:io.netty.channel.ChannelFlushPromiseNotifier increaseWriteCounter(long) -> increaseWriteCounter
    95:95:long writeCounter() -> writeCounter
    106:107:io.netty.channel.ChannelFlushPromiseNotifier notifyPromises() -> notifyPromises
    115:115:io.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures() -> notifyFlushFutures
    130:142:io.netty.channel.ChannelFlushPromiseNotifier notifyPromises(java.lang.Throwable) -> notifyPromises
    150:150:io.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures(java.lang.Throwable) -> notifyFlushFutures
    170:182:io.netty.channel.ChannelFlushPromiseNotifier notifyPromises(java.lang.Throwable,java.lang.Throwable) -> notifyPromises
    190:190:io.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures(java.lang.Throwable,java.lang.Throwable) -> notifyFlushFutures
    194:243:void notifyPromises0(java.lang.Throwable) -> notifyPromises0
io.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint -> io.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint:
    long checkpoint -> checkpoint
    io.netty.channel.ChannelPromise future -> future
    255:258:void <init>(long,io.netty.channel.ChannelPromise) -> <init>
    262:262:long flushCheckpoint() -> flushCheckpoint
    267:268:void flushCheckpoint(long) -> flushCheckpoint
    272:272:io.netty.channel.ChannelPromise promise() -> promise
io.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint -> io.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint:
    long flushCheckpoint() -> flushCheckpoint
    void flushCheckpoint(long) -> flushCheckpoint
    io.netty.channel.ChannelPromise promise() -> promise
io.netty.channel.ChannelFuture -> io.netty.channel.ChannelFuture:
    io.netty.channel.Channel channel() -> channel
    io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    io.netty.channel.ChannelFuture sync() -> sync
    io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    io.netty.channel.ChannelFuture await() -> await
    io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    boolean isVoid() -> isVoid
io.netty.channel.ChannelFutureListener -> io.netty.channel.ChannelFutureListener:
    io.netty.channel.ChannelFutureListener CLOSE -> CLOSE
    io.netty.channel.ChannelFutureListener CLOSE_ON_FAILURE -> CLOSE_ON_FAILURE
    io.netty.channel.ChannelFutureListener FIRE_EXCEPTION_ON_FAILURE -> FIRE_EXCEPTION_ON_FAILURE
    41:65:void <clinit>() -> <clinit>
io.netty.channel.ChannelFutureListener$1 -> io.netty.channel.ChannelFutureListener$1:
    41:41:void <init>() -> <init>
    44:45:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    41:41:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.ChannelFutureListener$2 -> io.netty.channel.ChannelFutureListener$2:
    52:52:void <init>() -> <init>
    55:58:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    52:52:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.ChannelFutureListener$3 -> io.netty.channel.ChannelFutureListener$3:
    65:65:void <init>() -> <init>
    68:71:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    65:65:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.ChannelHandler -> io.netty.channel.ChannelHandler:
    void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
io.netty.channel.ChannelHandler$Sharable -> io.netty.channel.ChannelHandler$Sharable:
io.netty.channel.ChannelHandlerAdapter -> io.netty.channel.ChannelHandlerAdapter:
    boolean added -> added
    26:26:void <init>() -> <init>
    35:38:void ensureNotSharable() -> ensureNotSharable
    53:60:boolean isSharable() -> isSharable
    69:69:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    77:77:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    87:88:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
io.netty.channel.ChannelHandlerContext -> io.netty.channel.ChannelHandlerContext:
    io.netty.channel.Channel channel() -> channel
    io.netty.util.concurrent.EventExecutor executor() -> executor
    java.lang.String name() -> name
    io.netty.channel.ChannelHandler handler() -> handler
    boolean isRemoved() -> isRemoved
    io.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    io.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    io.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    io.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    io.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    io.netty.channel.ChannelHandlerContext read() -> read
    io.netty.channel.ChannelHandlerContext flush() -> flush
    io.netty.channel.ChannelPipeline pipeline() -> pipeline
    io.netty.buffer.ByteBufAllocator alloc() -> alloc
    io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
io.netty.channel.ChannelId -> io.netty.channel.ChannelId:
    java.lang.String asShortText() -> asShortText
    java.lang.String asLongText() -> asLongText
io.netty.channel.ChannelInboundHandler -> io.netty.channel.ChannelInboundHandler:
    void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
io.netty.channel.ChannelInboundHandlerAdapter -> io.netty.channel.ChannelInboundHandlerAdapter:
    32:32:void <init>() -> <init>
    42:43:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    53:54:void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    64:65:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    75:76:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    86:87:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    97:98:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    108:109:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    119:120:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    131:132:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
io.netty.channel.ChannelInboundInvoker -> io.netty.channel.ChannelInboundInvoker:
    io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
io.netty.channel.ChannelInitializer -> io.netty.channel.ChannelInitializer:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.ConcurrentMap initMap -> initMap
    53:58:void <init>() -> <init>
    void initChannel(io.netty.channel.Channel) -> initChannel
    76:84:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    91:93:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    100:107:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    111:123:boolean initChannel(io.netty.channel.ChannelHandlerContext) -> initChannel
    128:135:void remove(io.netty.channel.ChannelHandlerContext) -> remove
    55:55:void <clinit>() -> <clinit>
io.netty.channel.ChannelMetadata -> io.netty.channel.ChannelMetadata:
    boolean hasDisconnect -> hasDisconnect
    int defaultMaxMessagesPerRead -> defaultMaxMessagesPerRead
    36:37:void <init>(boolean) -> <init>
    48:55:void <init>(boolean,int) -> <init>
    63:63:boolean hasDisconnect() -> hasDisconnect
    71:71:int defaultMaxMessagesPerRead() -> defaultMaxMessagesPerRead
io.netty.channel.ChannelOption -> io.netty.channel.ChannelOption:
    io.netty.util.ConstantPool pool -> pool
    io.netty.channel.ChannelOption ALLOCATOR -> ALLOCATOR
    io.netty.channel.ChannelOption RCVBUF_ALLOCATOR -> RCVBUF_ALLOCATOR
    io.netty.channel.ChannelOption MESSAGE_SIZE_ESTIMATOR -> MESSAGE_SIZE_ESTIMATOR
    io.netty.channel.ChannelOption CONNECT_TIMEOUT_MILLIS -> CONNECT_TIMEOUT_MILLIS
    io.netty.channel.ChannelOption MAX_MESSAGES_PER_READ -> MAX_MESSAGES_PER_READ
    io.netty.channel.ChannelOption WRITE_SPIN_COUNT -> WRITE_SPIN_COUNT
    io.netty.channel.ChannelOption WRITE_BUFFER_HIGH_WATER_MARK -> WRITE_BUFFER_HIGH_WATER_MARK
    io.netty.channel.ChannelOption WRITE_BUFFER_LOW_WATER_MARK -> WRITE_BUFFER_LOW_WATER_MARK
    io.netty.channel.ChannelOption WRITE_BUFFER_WATER_MARK -> WRITE_BUFFER_WATER_MARK
    io.netty.channel.ChannelOption ALLOW_HALF_CLOSURE -> ALLOW_HALF_CLOSURE
    io.netty.channel.ChannelOption AUTO_READ -> AUTO_READ
    io.netty.channel.ChannelOption AUTO_CLOSE -> AUTO_CLOSE
    io.netty.channel.ChannelOption SO_BROADCAST -> SO_BROADCAST
    io.netty.channel.ChannelOption SO_KEEPALIVE -> SO_KEEPALIVE
    io.netty.channel.ChannelOption SO_SNDBUF -> SO_SNDBUF
    io.netty.channel.ChannelOption SO_RCVBUF -> SO_RCVBUF
    io.netty.channel.ChannelOption SO_REUSEADDR -> SO_REUSEADDR
    io.netty.channel.ChannelOption SO_LINGER -> SO_LINGER
    io.netty.channel.ChannelOption SO_BACKLOG -> SO_BACKLOG
    io.netty.channel.ChannelOption SO_TIMEOUT -> SO_TIMEOUT
    io.netty.channel.ChannelOption IP_TOS -> IP_TOS
    io.netty.channel.ChannelOption IP_MULTICAST_ADDR -> IP_MULTICAST_ADDR
    io.netty.channel.ChannelOption IP_MULTICAST_IF -> IP_MULTICAST_IF
    io.netty.channel.ChannelOption IP_MULTICAST_TTL -> IP_MULTICAST_TTL
    io.netty.channel.ChannelOption IP_MULTICAST_LOOP_DISABLED -> IP_MULTICAST_LOOP_DISABLED
    io.netty.channel.ChannelOption TCP_NODELAY -> TCP_NODELAY
    io.netty.channel.ChannelOption DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION -> DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION
    io.netty.channel.ChannelOption SINGLE_EVENTEXECUTOR_PER_GROUP -> SINGLE_EVENTEXECUTOR_PER_GROUP
    47:47:io.netty.channel.ChannelOption valueOf(java.lang.String) -> valueOf
    55:55:io.netty.channel.ChannelOption valueOf(java.lang.Class,java.lang.String) -> valueOf
    62:62:boolean exists(java.lang.String) -> exists
    71:71:io.netty.channel.ChannelOption newInstance(java.lang.String) -> newInstance
    138:139:void <init>(int,java.lang.String) -> <init>
    143:144:void <init>(java.lang.String) -> <init>
    151:154:void validate(java.lang.Object) -> validate
    33:33:void <init>(int,java.lang.String,io.netty.channel.ChannelOption$1) -> <init>
    35:132:void <clinit>() -> <clinit>
io.netty.channel.ChannelOption$1 -> io.netty.channel.ChannelOption$1:
    35:35:void <init>() -> <init>
    38:38:io.netty.channel.ChannelOption newConstant(int,java.lang.String) -> newConstant
    35:35:io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
io.netty.channel.ChannelOutboundBuffer -> io.netty.channel.ChannelOutboundBuffer:
    int CHANNEL_OUTBOUND_BUFFER_ENTRY_OVERHEAD -> CHANNEL_OUTBOUND_BUFFER_ENTRY_OVERHEAD
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.concurrent.FastThreadLocal NIO_BUFFERS -> NIO_BUFFERS
    io.netty.channel.Channel channel -> channel
    io.netty.channel.ChannelOutboundBuffer$Entry flushedEntry -> flushedEntry
    io.netty.channel.ChannelOutboundBuffer$Entry unflushedEntry -> unflushedEntry
    io.netty.channel.ChannelOutboundBuffer$Entry tailEntry -> tailEntry
    int flushed -> flushed
    int nioBufferCount -> nioBufferCount
    long nioBufferSize -> nioBufferSize
    boolean inFail -> inFail
    java.util.concurrent.atomic.AtomicLongFieldUpdater TOTAL_PENDING_SIZE_UPDATER -> TOTAL_PENDING_SIZE_UPDATER
    long totalPendingSize -> totalPendingSize
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater UNWRITABLE_UPDATER -> UNWRITABLE_UPDATER
    int unwritable -> unwritable
    java.lang.Runnable fireChannelWritabilityChangedTask -> fireChannelWritabilityChangedTask
    boolean $assertionsDisabled -> $assertionsDisabled
    104:106:void <init>(io.netty.channel.AbstractChannel) -> <init>
    113:129:void addMessage(java.lang.Object,int,io.netty.channel.ChannelPromise) -> addMessage
    140:159:void addFlush() -> addFlush
    166:167:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    170:178:void incrementPendingOutboundBytes(long,boolean) -> incrementPendingOutboundBytes
    185:186:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    189:197:void decrementPendingOutboundBytes(long,boolean,boolean) -> decrementPendingOutboundBytes
    200:209:long total(java.lang.Object) -> total
    216:221:java.lang.Object current() -> current
    228:236:void progress(long) -> progress
    244:266:boolean remove() -> remove
    275:275:boolean remove(java.lang.Throwable) -> remove
    279:302:boolean remove0(java.lang.Throwable,boolean) -> remove0
    306:316:void removeEntry(io.netty.channel.ChannelOutboundBuffer$Entry) -> removeEntry
    324:349:void removeBytes(long) -> removeBytes
    354:359:void clearNioBuffers() -> clearNioBuffers
    372:372:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    390:464:java.nio.ByteBuffer[] nioBuffers(int,long) -> nioBuffers
    468:483:java.nio.ByteBuffer[] expandNioBufferArray(java.nio.ByteBuffer[],int,int) -> expandNioBufferArray
    492:492:int nioBufferCount() -> nioBufferCount
    501:501:long nioBufferSize() -> nioBufferSize
    511:511:boolean isWritable() -> isWritable
    519:519:boolean getUserDefinedWritability(int) -> getUserDefinedWritability
    526:531:void setUserDefinedWritability(int,boolean) -> setUserDefinedWritability
    534:545:void setUserDefinedWritability(int) -> setUserDefinedWritability
    548:559:void clearUserDefinedWritability(int) -> clearUserDefinedWritability
    562:565:int writabilityMask(int) -> writabilityMask
    570:579:void setWritable(boolean) -> setWritable
    583:592:void setUnwritable(boolean) -> setUnwritable
    595:610:void fireChannelWritabilityChanged(boolean) -> fireChannelWritabilityChanged
    616:616:int size() -> size
    624:624:boolean isEmpty() -> isEmpty
    633:647:void failFlushed(java.lang.Throwable,boolean) -> failFlushed
    650:688:void close(java.lang.Throwable,boolean) -> close
    691:692:void close(java.nio.channels.ClosedChannelException) -> close
    697:698:void safeSuccess(io.netty.channel.ChannelPromise) -> safeSuccess
    703:704:void safeFail(io.netty.channel.ChannelPromise,java.lang.Throwable) -> safeFail
    709:709:void recycle() -> recycle
    712:712:long totalPendingWriteBytes() -> totalPendingWriteBytes
    720:727:long bytesBeforeUnwritable() -> bytesBeforeUnwritable
    735:742:long bytesBeforeWritable() -> bytesBeforeWritable
    751:768:void forEachFlushedMessage(io.netty.channel.ChannelOutboundBuffer$MessageProcessor) -> forEachFlushedMessage
    771:771:boolean isFlushedEntry(io.netty.channel.ChannelOutboundBuffer$Entry) -> isFlushedEntry
    52:97:void <clinit>() -> <clinit>
io.netty.channel.ChannelOutboundBuffer$1 -> io.netty.channel.ChannelOutboundBuffer$1:
    65:65:void <init>() -> <init>
    68:68:java.nio.ByteBuffer[] initialValue() -> initialValue
    65:65:java.lang.Object initialValue() -> initialValue
io.netty.channel.ChannelOutboundBuffer$2 -> io.netty.channel.ChannelOutboundBuffer$2:
    io.netty.channel.ChannelPipeline val$pipeline -> val$pipeline
    io.netty.channel.ChannelOutboundBuffer this$0 -> this$0
    599:599:void <init>(io.netty.channel.ChannelOutboundBuffer,io.netty.channel.ChannelPipeline) -> <init>
    602:603:void run() -> run
io.netty.channel.ChannelOutboundBuffer$3 -> io.netty.channel.ChannelOutboundBuffer$3:
    java.lang.Throwable val$cause -> val$cause
    boolean val$allowChannelOpen -> val$allowChannelOpen
    io.netty.channel.ChannelOutboundBuffer this$0 -> this$0
    651:651:void <init>(io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable,boolean) -> <init>
    654:655:void run() -> run
io.netty.channel.ChannelOutboundBuffer$Entry -> io.netty.channel.ChannelOutboundBuffer$Entry:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    io.netty.util.Recycler$Handle handle -> handle
    io.netty.channel.ChannelOutboundBuffer$Entry next -> next
    java.lang.Object msg -> msg
    java.nio.ByteBuffer[] bufs -> bufs
    java.nio.ByteBuffer buf -> buf
    io.netty.channel.ChannelPromise promise -> promise
    long progress -> progress
    long total -> total
    int pendingSize -> pendingSize
    int count -> count
    boolean cancelled -> cancelled
    799:804:void <init>(io.netty.util.Recycler$Handle) -> <init>
    807:812:io.netty.channel.ChannelOutboundBuffer$Entry newInstance(java.lang.Object,int,long,io.netty.channel.ChannelPromise) -> newInstance
    816:831:int cancel() -> cancel
    835:846:void recycle() -> recycle
    849:851:io.netty.channel.ChannelOutboundBuffer$Entry recycleAndGetNext() -> recycleAndGetNext
    782:782:void <init>(io.netty.util.Recycler$Handle,io.netty.channel.ChannelOutboundBuffer$1) -> <init>
    783:783:void <clinit>() -> <clinit>
io.netty.channel.ChannelOutboundBuffer$Entry$1 -> io.netty.channel.ChannelOutboundBuffer$Entry$1:
    783:783:void <init>() -> <init>
    786:786:io.netty.channel.ChannelOutboundBuffer$Entry newObject(io.netty.util.Recycler$Handle) -> newObject
    783:783:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.channel.ChannelOutboundBuffer$MessageProcessor -> io.netty.channel.ChannelOutboundBuffer$MessageProcessor:
    boolean processMessage(java.lang.Object) -> processMessage
io.netty.channel.ChannelOutboundHandler -> io.netty.channel.ChannelOutboundHandler:
    void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    void read(io.netty.channel.ChannelHandlerContext) -> read
    void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    void flush(io.netty.channel.ChannelHandlerContext) -> flush
io.netty.channel.ChannelOutboundHandlerAdapter -> io.netty.channel.ChannelOutboundHandlerAdapter:
    24:24:void <init>() -> <init>
    35:36:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    47:48:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    59:60:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    71:72:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    82:83:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    93:94:void read(io.netty.channel.ChannelHandlerContext) -> read
    104:105:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    115:116:void flush(io.netty.channel.ChannelHandlerContext) -> flush
io.netty.channel.ChannelOutboundInvoker -> io.netty.channel.ChannelOutboundInvoker:
    io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    io.netty.channel.ChannelFuture disconnect() -> disconnect
    io.netty.channel.ChannelFuture close() -> close
    io.netty.channel.ChannelFuture deregister() -> deregister
    io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    io.netty.channel.ChannelOutboundInvoker read() -> read
    io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    io.netty.channel.ChannelOutboundInvoker flush() -> flush
    io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    io.netty.channel.ChannelPromise newPromise() -> newPromise
    io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    io.netty.channel.ChannelPromise voidPromise() -> voidPromise
io.netty.channel.ChannelPipeline -> io.netty.channel.ChannelPipeline:
    io.netty.channel.ChannelPipeline addFirst(java.lang.String,io.netty.channel.ChannelHandler) -> addFirst
    io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler) -> addFirst
    io.netty.channel.ChannelPipeline addLast(java.lang.String,io.netty.channel.ChannelHandler) -> addLast
    io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler) -> addLast
    io.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addBefore
    io.netty.channel.ChannelPipeline addBefore(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addBefore
    io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addAfter
    io.netty.channel.ChannelPipeline addAfter(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addAfter
    io.netty.channel.ChannelPipeline addFirst(io.netty.channel.ChannelHandler[]) -> addFirst
    io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup,io.netty.channel.ChannelHandler[]) -> addFirst
    io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[]) -> addLast
    io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup,io.netty.channel.ChannelHandler[]) -> addLast
    io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler) -> remove
    io.netty.channel.ChannelHandler remove(java.lang.String) -> remove
    io.netty.channel.ChannelHandler remove(java.lang.Class) -> remove
    io.netty.channel.ChannelHandler removeFirst() -> removeFirst
    io.netty.channel.ChannelHandler removeLast() -> removeLast
    io.netty.channel.ChannelPipeline replace(io.netty.channel.ChannelHandler,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    io.netty.channel.ChannelHandler replace(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    io.netty.channel.ChannelHandler replace(java.lang.Class,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    io.netty.channel.ChannelHandler first() -> first
    io.netty.channel.ChannelHandlerContext firstContext() -> firstContext
    io.netty.channel.ChannelHandler last() -> last
    io.netty.channel.ChannelHandlerContext lastContext() -> lastContext
    io.netty.channel.ChannelHandler get(java.lang.String) -> get
    io.netty.channel.ChannelHandler get(java.lang.Class) -> get
    io.netty.channel.ChannelHandlerContext context(io.netty.channel.ChannelHandler) -> context
    io.netty.channel.ChannelHandlerContext context(java.lang.String) -> context
    io.netty.channel.ChannelHandlerContext context(java.lang.Class) -> context
    io.netty.channel.Channel channel() -> channel
    java.util.List names() -> names
    java.util.Map toMap() -> toMap
    io.netty.channel.ChannelPipeline fireChannelRegistered() -> fireChannelRegistered
    io.netty.channel.ChannelPipeline fireChannelUnregistered() -> fireChannelUnregistered
    io.netty.channel.ChannelPipeline fireChannelActive() -> fireChannelActive
    io.netty.channel.ChannelPipeline fireChannelInactive() -> fireChannelInactive
    io.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    io.netty.channel.ChannelPipeline fireChannelRead(java.lang.Object) -> fireChannelRead
    io.netty.channel.ChannelPipeline fireChannelReadComplete() -> fireChannelReadComplete
    io.netty.channel.ChannelPipeline fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    io.netty.channel.ChannelPipeline flush() -> flush
io.netty.channel.ChannelPipelineException -> io.netty.channel.ChannelPipelineException:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>() -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.String) -> <init>
    50:51:void <init>(java.lang.Throwable) -> <init>
io.netty.channel.ChannelProgressiveFuture -> io.netty.channel.ChannelProgressiveFuture:
    io.netty.channel.ChannelProgressiveFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    io.netty.channel.ChannelProgressiveFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    io.netty.channel.ChannelProgressiveFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    io.netty.channel.ChannelProgressiveFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    io.netty.channel.ChannelProgressiveFuture sync() -> sync
    io.netty.channel.ChannelProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    io.netty.channel.ChannelProgressiveFuture await() -> await
    io.netty.channel.ChannelProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
io.netty.channel.ChannelProgressiveFutureListener -> io.netty.channel.ChannelProgressiveFutureListener:
io.netty.channel.ChannelProgressivePromise -> io.netty.channel.ChannelProgressivePromise:
    io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    io.netty.channel.ChannelProgressivePromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    io.netty.channel.ChannelProgressivePromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    io.netty.channel.ChannelProgressivePromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    io.netty.channel.ChannelProgressivePromise sync() -> sync
    io.netty.channel.ChannelProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    io.netty.channel.ChannelProgressivePromise await() -> await
    io.netty.channel.ChannelProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    io.netty.channel.ChannelProgressivePromise setSuccess(java.lang.Void) -> setSuccess
    io.netty.channel.ChannelProgressivePromise setSuccess() -> setSuccess
    io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    io.netty.channel.ChannelProgressivePromise setProgress(long,long) -> setProgress
    io.netty.channel.ChannelProgressivePromise unvoid() -> unvoid
io.netty.channel.ChannelPromise -> io.netty.channel.ChannelPromise:
    io.netty.channel.Channel channel() -> channel
    io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    boolean trySuccess() -> trySuccess
    io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    io.netty.channel.ChannelPromise sync() -> sync
    io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    io.netty.channel.ChannelPromise await() -> await
    io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    io.netty.channel.ChannelPromise unvoid() -> unvoid
io.netty.channel.ChannelPromiseAggregator -> io.netty.channel.ChannelPromiseAggregator:
    35:36:void <init>(io.netty.channel.ChannelPromise) -> <init>
io.netty.channel.ChannelPromiseNotifier -> io.netty.channel.ChannelPromiseNotifier:
    33:34:void <init>(io.netty.channel.ChannelPromise[]) -> <init>
    43:44:void <init>(boolean,io.netty.channel.ChannelPromise[]) -> <init>
io.netty.channel.CoalescingBufferQueue -> io.netty.channel.CoalescingBufferQueue:
    io.netty.channel.Channel channel -> channel
    40:41:void <init>(io.netty.channel.Channel) -> <init>
    44:45:void <init>(io.netty.channel.Channel,int) -> <init>
    48:50:void <init>(io.netty.channel.Channel,int,boolean) -> <init>
    63:63:io.netty.buffer.ByteBuf remove(int,io.netty.channel.ChannelPromise) -> remove
    70:71:void releaseAndFailAll(java.lang.Throwable) -> releaseAndFailAll
    75:80:io.netty.buffer.ByteBuf compose(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> compose
    85:85:io.netty.buffer.ByteBuf removeEmptyValue() -> removeEmptyValue
io.netty.channel.CombinedChannelDuplexHandler -> io.netty.channel.CombinedChannelDuplexHandler:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext inboundCtx -> inboundCtx
    io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext outboundCtx -> outboundCtx
    boolean handlerAdded -> handlerAdded
    io.netty.channel.ChannelInboundHandler inboundHandler -> inboundHandler
    io.netty.channel.ChannelOutboundHandler outboundHandler -> outboundHandler
    boolean $assertionsDisabled -> $assertionsDisabled
    48:50:void <init>() -> <init>
    55:58:void <init>(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler) -> <init>
    69:72:void init(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler) -> init
    75:97:void validate(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler) -> validate
    100:100:io.netty.channel.ChannelInboundHandler inboundHandler() -> inboundHandler
    104:104:io.netty.channel.ChannelOutboundHandler outboundHandler() -> outboundHandler
    108:111:void checkAdded() -> checkAdded
    117:119:void removeInboundHandler() -> removeInboundHandler
    125:127:void removeOutboundHandler() -> removeOutboundHandler
    131:178:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    183:187:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    191:197:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    201:207:void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    211:217:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    221:227:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    231:237:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    241:247:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    251:257:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    261:267:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    271:277:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    283:289:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    296:302:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    306:312:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    316:322:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    326:332:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    336:342:void read(io.netty.channel.ChannelHandlerContext) -> read
    346:352:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    356:362:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    31:31:io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext access$000(io.netty.channel.CombinedChannelDuplexHandler) -> access$000
    31:31:io.netty.channel.ChannelOutboundHandler access$100(io.netty.channel.CombinedChannelDuplexHandler) -> access$100
    31:31:io.netty.util.internal.logging.InternalLogger access$200() -> access$200
    31:34:void <clinit>() -> <clinit>
io.netty.channel.CombinedChannelDuplexHandler$1 -> io.netty.channel.CombinedChannelDuplexHandler$1:
    io.netty.channel.CombinedChannelDuplexHandler this$0 -> this$0
    139:139:void <init>(io.netty.channel.CombinedChannelDuplexHandler,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelHandler) -> <init>
    143:165:io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    139:139:io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext -> io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    io.netty.channel.ChannelHandler handler -> handler
    boolean removed -> removed
    370:373:void <init>(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelHandler) -> <init>
    377:377:io.netty.channel.Channel channel() -> channel
    382:382:io.netty.util.concurrent.EventExecutor executor() -> executor
    387:387:java.lang.String name() -> name
    392:392:io.netty.channel.ChannelHandler handler() -> handler
    397:397:boolean isRemoved() -> isRemoved
    402:403:io.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    408:409:io.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    414:415:io.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    420:421:io.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    426:427:io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    432:433:io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    438:439:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    444:445:io.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    450:451:io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    456:456:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    461:461:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    466:466:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    471:471:io.netty.channel.ChannelFuture disconnect() -> disconnect
    476:476:io.netty.channel.ChannelFuture close() -> close
    481:481:io.netty.channel.ChannelFuture deregister() -> deregister
    486:486:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    491:491:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    497:497:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    502:502:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    507:507:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    512:512:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    517:518:io.netty.channel.ChannelHandlerContext read() -> read
    523:523:io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    528:528:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    533:534:io.netty.channel.ChannelHandlerContext flush() -> flush
    539:539:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    544:544:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    549:549:io.netty.channel.ChannelPipeline pipeline() -> pipeline
    554:554:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    559:559:io.netty.channel.ChannelPromise newPromise() -> newPromise
    564:564:io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    569:569:io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    574:574:io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    579:579:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    584:584:io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    589:589:boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
    593:604:void remove() -> remove
    607:616:void remove0() -> remove0
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    364:364:io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    364:364:io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    364:364:io.netty.channel.ChannelOutboundInvoker flush() -> flush
    364:364:io.netty.channel.ChannelOutboundInvoker read() -> read
    364:364:io.netty.channel.ChannelHandlerContext access$300(io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext) -> access$300
    364:364:void access$400(io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext) -> access$400
io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1 -> io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:
    io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext this$0 -> this$0
    597:597:void <init>(io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext) -> <init>
    600:601:void run() -> run
io.netty.channel.CompleteChannelFuture -> io.netty.channel.CompleteChannelFuture:
    io.netty.channel.Channel channel -> channel
    37:42:void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor) -> <init>
    46:50:io.netty.util.concurrent.EventExecutor executor() -> executor
    56:57:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    62:63:io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    68:69:io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    74:75:io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    80:80:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    85:85:io.netty.channel.ChannelFuture sync() -> sync
    90:90:io.netty.channel.ChannelFuture await() -> await
    95:95:io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    100:100:io.netty.channel.Channel channel() -> channel
    105:105:java.lang.Void getNow() -> getNow
    110:110:boolean isVoid() -> isVoid
    27:27:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    27:27:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    27:27:io.netty.util.concurrent.Future sync() -> sync
    27:27:io.netty.util.concurrent.Future await() -> await
    27:27:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    27:27:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    27:27:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    27:27:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    27:27:java.lang.Object getNow() -> getNow
io.netty.channel.ConnectTimeoutException -> io.netty.channel.ConnectTimeoutException:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>(java.lang.String) -> <init>
    31:32:void <init>() -> <init>
io.netty.channel.DefaultAddressedEnvelope -> io.netty.channel.DefaultAddressedEnvelope:
    java.lang.Object message -> message
    java.net.SocketAddress sender -> sender
    java.net.SocketAddress recipient -> recipient
    41:53:void <init>(java.lang.Object,java.net.SocketAddress,java.net.SocketAddress) -> <init>
    60:61:void <init>(java.lang.Object,java.net.SocketAddress) -> <init>
    65:65:java.lang.Object content() -> content
    70:70:java.net.SocketAddress sender() -> sender
    75:75:java.net.SocketAddress recipient() -> recipient
    80:83:int refCnt() -> refCnt
    89:90:io.netty.channel.AddressedEnvelope retain() -> retain
    95:96:io.netty.channel.AddressedEnvelope retain(int) -> retain
    101:101:boolean release() -> release
    106:106:boolean release(int) -> release
    111:112:io.netty.channel.AddressedEnvelope touch() -> touch
    117:118:io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    123:127:java.lang.String toString() -> toString
    31:31:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:io.netty.util.ReferenceCounted touch() -> touch
    31:31:io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:io.netty.util.ReferenceCounted retain() -> retain
io.netty.channel.DefaultChannelConfig -> io.netty.channel.DefaultChannelConfig:
    io.netty.channel.MessageSizeEstimator DEFAULT_MSG_SIZE_ESTIMATOR -> DEFAULT_MSG_SIZE_ESTIMATOR
    int DEFAULT_CONNECT_TIMEOUT -> DEFAULT_CONNECT_TIMEOUT
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater AUTOREAD_UPDATER -> AUTOREAD_UPDATER
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater WATERMARK_UPDATER -> WATERMARK_UPDATER
    io.netty.channel.Channel channel -> channel
    io.netty.buffer.ByteBufAllocator allocator -> allocator
    io.netty.channel.RecvByteBufAllocator rcvBufAllocator -> rcvBufAllocator
    io.netty.channel.MessageSizeEstimator msgSizeEstimator -> msgSizeEstimator
    int connectTimeoutMillis -> connectTimeoutMillis
    int writeSpinCount -> writeSpinCount
    int autoRead -> autoRead
    boolean autoClose -> autoClose
    io.netty.channel.WriteBufferWaterMark writeBufferWaterMark -> writeBufferWaterMark
    boolean pinEventExecutor -> pinEventExecutor
    69:70:void <init>(io.netty.channel.Channel) -> <init>
    56:75:void <init>(io.netty.channel.Channel,io.netty.channel.RecvByteBufAllocator) -> <init>
    80:80:java.util.Map getOptions() -> getOptions
    90:96:java.util.Map getOptions(java.util.Map,io.netty.channel.ChannelOption[]) -> getOptions
    102:113:boolean setOptions(java.util.Map) -> setOptions
    119:159:java.lang.Object getOption(io.netty.channel.ChannelOption) -> getOption
    165:195:boolean setOption(io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    199:203:void validate(io.netty.channel.ChannelOption,java.lang.Object) -> validate
    207:207:int getConnectTimeoutMillis() -> getConnectTimeoutMillis
    212:217:io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    230:233:int getMaxMessagesPerRead() -> getMaxMessagesPerRead
    248:252:io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    259:259:int getWriteSpinCount() -> getWriteSpinCount
    264:276:io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    281:281:io.netty.buffer.ByteBufAllocator getAllocator() -> getAllocator
    286:290:io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    296:296:io.netty.channel.RecvByteBufAllocator getRecvByteBufAllocator() -> getRecvByteBufAllocator
    301:302:io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    312:318:void setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator,io.netty.channel.ChannelMetadata) -> setRecvByteBufAllocator
    322:322:boolean isAutoRead() -> isAutoRead
    327:333:io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    340:340:void autoReadCleared() -> autoReadCleared
    344:344:boolean isAutoClose() -> isAutoClose
    349:350:io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    355:355:int getWriteBufferHighWaterMark() -> getWriteBufferHighWaterMark
    360:376:io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    381:381:int getWriteBufferLowWaterMark() -> getWriteBufferLowWaterMark
    386:402:io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    407:408:io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    413:413:io.netty.channel.WriteBufferWaterMark getWriteBufferWaterMark() -> getWriteBufferWaterMark
    418:418:io.netty.channel.MessageSizeEstimator getMessageSizeEstimator() -> getMessageSizeEstimator
    423:427:io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    431:432:io.netty.channel.ChannelConfig setPinEventExecutorPerGroup(boolean) -> setPinEventExecutorPerGroup
    436:436:boolean getPinEventExecutorPerGroup() -> getPinEventExecutorPerGroup
    44:51:void <clinit>() -> <clinit>
io.netty.channel.DefaultChannelHandlerContext -> io.netty.channel.DefaultChannelHandlerContext:
    io.netty.channel.ChannelHandler handler -> handler
    26:31:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.util.concurrent.EventExecutor,java.lang.String,io.netty.channel.ChannelHandler) -> <init>
    35:35:io.netty.channel.ChannelHandler handler() -> handler
    39:39:boolean isInbound(io.netty.channel.ChannelHandler) -> isInbound
    43:43:boolean isOutbound(io.netty.channel.ChannelHandler) -> isOutbound
io.netty.channel.DefaultChannelId -> io.netty.channel.DefaultChannelId:
    long serialVersionUID -> serialVersionUID
    io.netty.util.internal.logging.InternalLogger logger -> logger
    byte[] MACHINE_ID -> MACHINE_ID
    int PROCESS_ID_LEN -> PROCESS_ID_LEN
    int PROCESS_ID -> PROCESS_ID
    int SEQUENCE_LEN -> SEQUENCE_LEN
    int TIMESTAMP_LEN -> TIMESTAMP_LEN
    int RANDOM_LEN -> RANDOM_LEN
    java.util.concurrent.atomic.AtomicInteger nextSequence -> nextSequence
    byte[] data -> data
    int hashCode -> hashCode
    java.lang.String shortValue -> shortValue
    java.lang.String longValue -> longValue
    boolean $assertionsDisabled -> $assertionsDisabled
    55:55:io.netty.channel.DefaultChannelId newInstance() -> newInstance
    109:152:int defaultProcessId() -> defaultProcessId
    161:184:void <init>() -> <init>
    187:191:int writeInt(int,int) -> writeInt
    195:203:int writeLong(int,long) -> writeLong
    208:212:java.lang.String asShortText() -> asShortText
    217:221:java.lang.String asLongText() -> asLongText
    225:233:java.lang.String newLongValue() -> newLongValue
    237:240:int appendHexDumpField(java.lang.StringBuilder,int,int) -> appendHexDumpField
    245:245:int hashCode() -> hashCode
    250:272:int compareTo(io.netty.channel.ChannelId) -> compareTo
    277:284:boolean equals(java.lang.Object) -> equals
    289:289:java.lang.String toString() -> toString
    37:37:int compareTo(java.lang.Object) -> compareTo
    37:106:void <clinit>() -> <clinit>
io.netty.channel.DefaultChannelPipeline -> io.netty.channel.DefaultChannelPipeline:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String HEAD_NAME -> HEAD_NAME
    java.lang.String TAIL_NAME -> TAIL_NAME
    io.netty.util.concurrent.FastThreadLocal nameCaches -> nameCaches
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ESTIMATOR -> ESTIMATOR
    io.netty.channel.AbstractChannelHandlerContext head -> head
    io.netty.channel.AbstractChannelHandlerContext tail -> tail
    io.netty.channel.Channel channel -> channel
    io.netty.channel.ChannelFuture succeededFuture -> succeededFuture
    io.netty.channel.VoidChannelPromise voidPromise -> voidPromise
    boolean touch -> touch
    java.util.Map childExecutors -> childExecutors
    io.netty.channel.MessageSizeEstimator$Handle estimatorHandle -> estimatorHandle
    boolean firstRegistration -> firstRegistration
    io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback pendingHandlerCallbackHead -> pendingHandlerCallbackHead
    boolean registered -> registered
    boolean $assertionsDisabled -> $assertionsDisabled
    70:102:void <init>(io.netty.channel.Channel) -> <init>
    105:112:io.netty.channel.MessageSizeEstimator$Handle estimatorHandle() -> estimatorHandle
    116:116:java.lang.Object touch(java.lang.Object,io.netty.channel.AbstractChannelHandlerContext) -> touch
    120:120:io.netty.channel.AbstractChannelHandlerContext newContext(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler) -> newContext
    124:143:io.netty.util.concurrent.EventExecutor childExecutor(io.netty.util.concurrent.EventExecutorGroup) -> childExecutor
    147:147:io.netty.channel.Channel channel() -> channel
    152:152:io.netty.channel.ChannelPipeline addFirst(java.lang.String,io.netty.channel.ChannelHandler) -> addFirst
    158:188:io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler) -> addFirst
    192:197:void addFirst0(io.netty.channel.AbstractChannelHandlerContext) -> addFirst0
    201:201:io.netty.channel.ChannelPipeline addLast(java.lang.String,io.netty.channel.ChannelHandler) -> addLast
    207:236:io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler) -> addLast
    240:245:void addLast0(io.netty.channel.AbstractChannelHandlerContext) -> addLast0
    249:249:io.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addBefore
    257:288:io.netty.channel.ChannelPipeline addBefore(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addBefore
    292:296:void addBefore0(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> addBefore0
    299:303:java.lang.String filterName(java.lang.String,io.netty.channel.ChannelHandler) -> filterName
    308:308:io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addAfter
    317:347:io.netty.channel.ChannelPipeline addAfter(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addAfter
    351:355:void addAfter0(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> addAfter0
    359:359:io.netty.channel.ChannelPipeline addFirst(io.netty.channel.ChannelHandler[]) -> addFirst
    364:383:io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup,io.netty.channel.ChannelHandler[]) -> addFirst
    388:388:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[]) -> addLast
    393:404:io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup,io.netty.channel.ChannelHandler[]) -> addLast
    408:428:java.lang.String generateName(io.netty.channel.ChannelHandler) -> generateName
    432:432:java.lang.String generateName0(java.lang.Class) -> generateName0
    437:438:io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler) -> remove
    443:443:io.netty.channel.ChannelHandler remove(java.lang.String) -> remove
    449:449:io.netty.channel.ChannelHandler remove(java.lang.Class) -> remove
    453:478:io.netty.channel.AbstractChannelHandlerContext remove(io.netty.channel.AbstractChannelHandlerContext) -> remove
    482:486:void remove0(io.netty.channel.AbstractChannelHandlerContext) -> remove0
    490:493:io.netty.channel.ChannelHandler removeFirst() -> removeFirst
    498:501:io.netty.channel.ChannelHandler removeLast() -> removeLast
    506:507:io.netty.channel.ChannelPipeline replace(io.netty.channel.ChannelHandler,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    512:512:io.netty.channel.ChannelHandler replace(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    519:519:io.netty.channel.ChannelHandler replace(java.lang.Class,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    524:571:io.netty.channel.ChannelHandler replace(io.netty.channel.AbstractChannelHandlerContext,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    575:590:void replace0(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> replace0
    593:602:void checkMultiplicity(io.netty.channel.ChannelHandler) -> checkMultiplicity
    606:634:void callHandlerAdded0(io.netty.channel.AbstractChannelHandlerContext) -> callHandlerAdded0
    640:648:void callHandlerRemoved0(io.netty.channel.AbstractChannelHandlerContext) -> callHandlerRemoved0
    651:658:void invokeHandlerAddedIfNeeded() -> invokeHandlerAddedIfNeeded
    662:666:io.netty.channel.ChannelHandler first() -> first
    671:675:io.netty.channel.ChannelHandlerContext firstContext() -> firstContext
    680:684:io.netty.channel.ChannelHandler last() -> last
    689:693:io.netty.channel.ChannelHandlerContext lastContext() -> lastContext
    698:702:io.netty.channel.ChannelHandler get(java.lang.String) -> get
    709:713:io.netty.channel.ChannelHandler get(java.lang.Class) -> get
    719:723:io.netty.channel.ChannelHandlerContext context(java.lang.String) -> context
    728:743:io.netty.channel.ChannelHandlerContext context(io.netty.channel.ChannelHandler) -> context
    749:761:io.netty.channel.ChannelHandlerContext context(java.lang.Class) -> context
    767:774:java.util.List names() -> names
    780:787:java.util.Map toMap() -> toMap
    793:793:java.util.Iterator iterator() -> iterator
    801:824:java.lang.String toString() -> toString
    829:830:io.netty.channel.ChannelPipeline fireChannelRegistered() -> fireChannelRegistered
    835:836:io.netty.channel.ChannelPipeline fireChannelUnregistered() -> fireChannelUnregistered
    850:851:void destroy() -> destroy
    854:877:void destroyUp(io.netty.channel.AbstractChannelHandlerContext,boolean) -> destroyUp
    881:907:void destroyDown(java.lang.Thread,io.netty.channel.AbstractChannelHandlerContext,boolean) -> destroyDown
    911:912:io.netty.channel.ChannelPipeline fireChannelActive() -> fireChannelActive
    917:918:io.netty.channel.ChannelPipeline fireChannelInactive() -> fireChannelInactive
    923:924:io.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    929:930:io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    935:936:io.netty.channel.ChannelPipeline fireChannelRead(java.lang.Object) -> fireChannelRead
    941:942:io.netty.channel.ChannelPipeline fireChannelReadComplete() -> fireChannelReadComplete
    947:948:io.netty.channel.ChannelPipeline fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    953:953:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    958:958:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    963:963:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    968:968:io.netty.channel.ChannelFuture disconnect() -> disconnect
    973:973:io.netty.channel.ChannelFuture close() -> close
    978:978:io.netty.channel.ChannelFuture deregister() -> deregister
    983:984:io.netty.channel.ChannelPipeline flush() -> flush
    989:989:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    994:994:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    1000:1000:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    1005:1005:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    1010:1010:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    1015:1015:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    1020:1021:io.netty.channel.ChannelPipeline read() -> read
    1026:1026:io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    1031:1031:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    1036:1036:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    1041:1041:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    1046:1046:io.netty.channel.ChannelPromise newPromise() -> newPromise
    1051:1051:io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    1056:1056:io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    1061:1061:io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    1066:1066:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    1070:1073:void checkDuplicateName(java.lang.String) -> checkDuplicateName
    1076:1083:io.netty.channel.AbstractChannelHandlerContext context0(java.lang.String) -> context0
    1087:1091:io.netty.channel.AbstractChannelHandlerContext getContextOrDie(java.lang.String) -> getContextOrDie
    1096:1100:io.netty.channel.AbstractChannelHandlerContext getContextOrDie(io.netty.channel.ChannelHandler) -> getContextOrDie
    1105:1109:io.netty.channel.AbstractChannelHandlerContext getContextOrDie(java.lang.Class) -> getContextOrDie
    1115:1134:void callHandlerAddedForAllHandlers() -> callHandlerAddedForAllHandlers
    1137:1150:void callHandlerCallbackLater(io.netty.channel.AbstractChannelHandlerContext,boolean) -> callHandlerCallbackLater
    1158:1165:void onUnhandledInboundException(java.lang.Throwable) -> onUnhandledInboundException
    1174:1180:void onUnhandledInboundMessage(java.lang.Object) -> onUnhandledInboundMessage
    1184:1188:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    1192:1196:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    46:46:io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    46:46:io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    46:46:io.netty.channel.ChannelOutboundInvoker flush() -> flush
    46:46:io.netty.channel.ChannelOutboundInvoker read() -> read
    46:46:void access$000(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> access$000
    46:46:void access$100(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> access$100
    46:46:void access$200(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext,boolean) -> access$200
    46:46:void access$300(io.netty.channel.DefaultChannelPipeline,java.lang.Thread,io.netty.channel.AbstractChannelHandlerContext,boolean) -> access$300
    46:46:java.lang.String access$400() -> access$400
    46:46:java.lang.String access$500() -> access$500
    46:46:io.netty.channel.Channel access$600(io.netty.channel.DefaultChannelPipeline) -> access$600
    46:46:void access$700(io.netty.channel.DefaultChannelPipeline) -> access$700
    46:46:void access$800(io.netty.channel.AbstractChannelHandlerContext) -> access$800
    46:62:void <clinit>() -> <clinit>
io.netty.channel.DefaultChannelPipeline$1 -> io.netty.channel.DefaultChannelPipeline$1:
    54:54:void <init>() -> <init>
    57:57:java.util.Map initialValue() -> initialValue
    54:54:java.lang.Object initialValue() -> initialValue
io.netty.channel.DefaultChannelPipeline$2 -> io.netty.channel.DefaultChannelPipeline$2:
    io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    178:178:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    181:182:void run() -> run
io.netty.channel.DefaultChannelPipeline$3 -> io.netty.channel.DefaultChannelPipeline$3:
    io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    226:226:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    229:230:void run() -> run
io.netty.channel.DefaultChannelPipeline$4 -> io.netty.channel.DefaultChannelPipeline$4:
    io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    278:278:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    281:282:void run() -> run
io.netty.channel.DefaultChannelPipeline$5 -> io.netty.channel.DefaultChannelPipeline$5:
    io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    337:337:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    340:341:void run() -> run
io.netty.channel.DefaultChannelPipeline$6 -> io.netty.channel.DefaultChannelPipeline$6:
    io.netty.channel.AbstractChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    468:468:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    471:472:void run() -> run
io.netty.channel.DefaultChannelPipeline$7 -> io.netty.channel.DefaultChannelPipeline$7:
    io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    io.netty.channel.AbstractChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    553:553:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    559:561:void run() -> run
io.netty.channel.DefaultChannelPipeline$8 -> io.netty.channel.DefaultChannelPipeline$8:
    io.netty.channel.AbstractChannelHandlerContext val$finalCtx -> val$finalCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    865:865:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    868:869:void run() -> run
io.netty.channel.DefaultChannelPipeline$9 -> io.netty.channel.DefaultChannelPipeline$9:
    io.netty.channel.AbstractChannelHandlerContext val$finalCtx -> val$finalCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    895:895:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    898:899:void run() -> run
io.netty.channel.DefaultChannelPipeline$HeadContext -> io.netty.channel.DefaultChannelPipeline$HeadContext:
    io.netty.channel.Channel$Unsafe unsafe -> unsafe
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1258:1262:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.DefaultChannelPipeline) -> <init>
    1266:1266:io.netty.channel.ChannelHandler handler() -> handler
    1272:1272:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    1277:1277:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    1283:1284:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    1291:1292:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    1296:1297:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    1301:1302:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    1306:1307:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    1311:1312:void read(io.netty.channel.ChannelHandlerContext) -> read
    1316:1317:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    1321:1322:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    1326:1327:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    1331:1333:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    1337:1343:void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    1347:1350:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    1354:1355:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    1359:1360:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    1364:1367:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    1370:1373:void readIfIsAutoRead() -> readIfIsAutoRead
    1377:1378:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    1382:1383:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask -> io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1399:1401:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    1405:1406:void run() -> run
    1410:1426:void execute() -> execute
io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback -> io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback:
    io.netty.channel.AbstractChannelHandlerContext ctx -> ctx
    io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback next -> next
    1390:1392:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    void execute() -> execute
io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask -> io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1431:1433:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    1437:1438:void run() -> run
    1442:1458:void execute() -> execute
io.netty.channel.DefaultChannelPipeline$TailContext -> io.netty.channel.DefaultChannelPipeline$TailContext:
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1201:1204:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.DefaultChannelPipeline) -> <init>
    1208:1208:io.netty.channel.ChannelHandler handler() -> handler
    1212:1212:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    1215:1215:void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    1218:1218:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    1221:1221:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    1224:1224:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    1227:1227:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    1230:1230:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    1236:1237:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    1241:1242:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    1246:1247:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    1250:1250:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
io.netty.channel.DefaultChannelProgressivePromise -> io.netty.channel.DefaultChannelProgressivePromise:
    io.netty.channel.Channel channel -> channel
    long checkpoint -> checkpoint
    41:43:void <init>(io.netty.channel.Channel) -> <init>
    52:54:void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor) -> <init>
    58:62:io.netty.util.concurrent.EventExecutor executor() -> executor
    68:68:io.netty.channel.Channel channel() -> channel
    73:73:io.netty.channel.ChannelProgressivePromise setSuccess() -> setSuccess
    78:79:io.netty.channel.ChannelProgressivePromise setSuccess(java.lang.Void) -> setSuccess
    84:84:boolean trySuccess() -> trySuccess
    89:90:io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    95:96:io.netty.channel.ChannelProgressivePromise setProgress(long,long) -> setProgress
    101:102:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    107:108:io.netty.channel.ChannelProgressivePromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    113:114:io.netty.channel.ChannelProgressivePromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    120:121:io.netty.channel.ChannelProgressivePromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    126:127:io.netty.channel.ChannelProgressivePromise sync() -> sync
    132:133:io.netty.channel.ChannelProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    138:139:io.netty.channel.ChannelProgressivePromise await() -> await
    144:145:io.netty.channel.ChannelProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    150:150:long flushCheckpoint() -> flushCheckpoint
    155:156:void flushCheckpoint(long) -> flushCheckpoint
    160:160:io.netty.channel.ChannelProgressivePromise promise() -> promise
    165:168:void checkDeadLock() -> checkDeadLock
    172:172:io.netty.channel.ChannelProgressivePromise unvoid() -> unvoid
    177:177:boolean isVoid() -> isVoid
    29:29:io.netty.util.concurrent.ProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    29:29:io.netty.util.concurrent.ProgressivePromise setSuccess(java.lang.Object) -> setSuccess
    29:29:io.netty.util.concurrent.ProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.util.concurrent.ProgressivePromise await() -> await
    29:29:io.netty.util.concurrent.ProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.util.concurrent.ProgressivePromise sync() -> sync
    29:29:io.netty.util.concurrent.ProgressivePromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.util.concurrent.ProgressivePromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.util.concurrent.ProgressivePromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.util.concurrent.ProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.util.concurrent.ProgressivePromise setProgress(long,long) -> setProgress
    29:29:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.util.concurrent.Promise sync() -> sync
    29:29:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.util.concurrent.Promise await() -> await
    29:29:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    29:29:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    29:29:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.util.concurrent.Future await() -> await
    29:29:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.util.concurrent.Future sync() -> sync
    29:29:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.util.concurrent.ProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.util.concurrent.ProgressiveFuture await() -> await
    29:29:io.netty.util.concurrent.ProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.util.concurrent.ProgressiveFuture sync() -> sync
    29:29:io.netty.util.concurrent.ProgressiveFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.util.concurrent.ProgressiveFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.util.concurrent.ProgressiveFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.util.concurrent.ProgressiveFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.channel.ChannelProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.channel.ChannelProgressiveFuture await() -> await
    29:29:io.netty.channel.ChannelProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.channel.ChannelProgressiveFuture sync() -> sync
    29:29:io.netty.channel.ChannelProgressiveFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.channel.ChannelProgressiveFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.channel.ChannelProgressiveFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.channel.ChannelProgressiveFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.channel.ChannelFuture await() -> await
    29:29:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.channel.ChannelFuture sync() -> sync
    29:29:io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.channel.ChannelPromise unvoid() -> unvoid
    29:29:io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.channel.ChannelPromise await() -> await
    29:29:io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.channel.ChannelPromise sync() -> sync
    29:29:io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    29:29:io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    29:29:io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    29:29:io.netty.channel.ChannelPromise promise() -> promise
io.netty.channel.DefaultChannelPromise -> io.netty.channel.DefaultChannelPromise:
    io.netty.channel.Channel channel -> channel
    long checkpoint -> checkpoint
    39:41:void <init>(io.netty.channel.Channel) -> <init>
    50:52:void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor) -> <init>
    56:60:io.netty.util.concurrent.EventExecutor executor() -> executor
    66:66:io.netty.channel.Channel channel() -> channel
    71:71:io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    76:77:io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    82:82:boolean trySuccess() -> trySuccess
    87:88:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    93:94:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    99:100:io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    105:106:io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    111:112:io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    117:118:io.netty.channel.ChannelPromise sync() -> sync
    123:124:io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    129:130:io.netty.channel.ChannelPromise await() -> await
    135:136:io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    141:141:long flushCheckpoint() -> flushCheckpoint
    146:147:void flushCheckpoint(long) -> flushCheckpoint
    151:151:io.netty.channel.ChannelPromise promise() -> promise
    156:159:void checkDeadLock() -> checkDeadLock
    163:163:io.netty.channel.ChannelPromise unvoid() -> unvoid
    168:168:boolean isVoid() -> isVoid
    28:28:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    28:28:io.netty.util.concurrent.Promise sync() -> sync
    28:28:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    28:28:io.netty.util.concurrent.Promise await() -> await
    28:28:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    28:28:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    28:28:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    28:28:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    28:28:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    28:28:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    28:28:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    28:28:io.netty.util.concurrent.Future await() -> await
    28:28:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    28:28:io.netty.util.concurrent.Future sync() -> sync
    28:28:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    28:28:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    28:28:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    28:28:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    28:28:io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    28:28:io.netty.channel.ChannelFuture await() -> await
    28:28:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    28:28:io.netty.channel.ChannelFuture sync() -> sync
    28:28:io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    28:28:io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    28:28:io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    28:28:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
io.netty.channel.DefaultEventLoop -> io.netty.channel.DefaultEventLoop:
    26:27:void <init>() -> <init>
    30:31:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    34:35:void <init>(java.util.concurrent.Executor) -> <init>
    38:39:void <init>(io.netty.channel.EventLoopGroup) -> <init>
    42:43:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.ThreadFactory) -> <init>
    46:47:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.Executor) -> <init>
    52:62:void run() -> run
io.netty.channel.DefaultEventLoopGroup -> io.netty.channel.DefaultEventLoopGroup:
    30:31:void <init>() -> <init>
    39:40:void <init>(int) -> <init>
    49:50:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    59:60:void <init>(int,java.util.concurrent.Executor) -> <init>
    64:64:io.netty.channel.EventLoop newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    24:24:io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
io.netty.channel.DefaultFileRegion -> io.netty.channel.DefaultFileRegion:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.io.File f -> f
    long position -> position
    long count -> count
    long transferred -> transferred
    java.nio.channels.FileChannel file -> file
    51:65:void <init>(java.nio.channels.FileChannel,long,long) -> <init>
    75:88:void <init>(java.io.File,long,long) -> <init>
    94:94:boolean isOpen() -> isOpen
    101:105:void open() -> open
    109:109:long position() -> position
    114:114:long count() -> count
    120:120:long transfered() -> transfered
    125:125:long transferred() -> transferred
    130:149:long transferTo(java.nio.channels.WritableByteChannel,long) -> transferTo
    154:168:void deallocate() -> deallocate
    172:173:io.netty.channel.FileRegion retain() -> retain
    178:179:io.netty.channel.FileRegion retain(int) -> retain
    184:184:io.netty.channel.FileRegion touch() -> touch
    189:189:io.netty.channel.FileRegion touch(java.lang.Object) -> touch
    35:35:io.netty.util.ReferenceCounted touch() -> touch
    35:35:io.netty.util.ReferenceCounted retain(int) -> retain
    35:35:io.netty.util.ReferenceCounted retain() -> retain
    35:35:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    37:37:void <clinit>() -> <clinit>
io.netty.channel.DefaultMaxBytesRecvByteBufAllocator -> io.netty.channel.DefaultMaxBytesRecvByteBufAllocator:
    int maxBytesPerRead -> maxBytesPerRead
    int maxBytesPerIndividualRead -> maxBytesPerIndividualRead
    105:106:void <init>() -> <init>
    108:112:void <init>(int,int) -> <init>
    117:117:io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    122:122:int maxBytesPerRead() -> maxBytesPerRead
    127:142:io.netty.channel.DefaultMaxBytesRecvByteBufAllocator maxBytesPerRead(int) -> maxBytesPerRead
    147:147:int maxBytesPerIndividualRead() -> maxBytesPerIndividualRead
    152:168:io.netty.channel.DefaultMaxBytesRecvByteBufAllocator maxBytesPerIndividualRead(int) -> maxBytesPerIndividualRead
    173:173:java.util.Map$Entry maxBytesPerReadPair() -> maxBytesPerReadPair
    177:189:void checkMaxBytesPerReadPair(int,int) -> checkMaxBytesPerReadPair
    194:201:io.netty.channel.DefaultMaxBytesRecvByteBufAllocator maxBytesPerReadPair(int,int) -> maxBytesPerReadPair
    29:29:io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerReadPair(int,int) -> maxBytesPerReadPair
    29:29:io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerIndividualRead(int) -> maxBytesPerIndividualRead
    29:29:io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerRead(int) -> maxBytesPerRead
io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1 -> io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1:
io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl -> io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl:
    int individualReadMax -> individualReadMax
    int bytesToRead -> bytesToRead
    int lastBytesRead -> lastBytesRead
    int attemptBytesRead -> attemptBytesRead
    io.netty.util.UncheckedBooleanSupplier defaultMaybeMoreSupplier -> defaultMaybeMoreSupplier
    io.netty.channel.DefaultMaxBytesRecvByteBufAllocator this$0 -> this$0
    33:38:void <init>(io.netty.channel.DefaultMaxBytesRecvByteBufAllocator) -> <init>
    47:47:io.netty.buffer.ByteBuf allocate(io.netty.buffer.ByteBufAllocator) -> allocate
    52:52:int guess() -> guess
    57:59:void reset(io.netty.channel.ChannelConfig) -> reset
    63:63:void incMessagesRead(int) -> incMessagesRead
    67:71:void lastBytesRead(int) -> lastBytesRead
    75:75:int lastBytesRead() -> lastBytesRead
    80:80:boolean continueReading() -> continueReading
    86:86:boolean continueReading(io.netty.util.UncheckedBooleanSupplier) -> continueReading
    91:91:void readComplete() -> readComplete
    95:96:void attemptedBytesRead(int) -> attemptedBytesRead
    100:100:int attemptedBytesRead() -> attemptedBytesRead
    33:33:int access$000(io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl) -> access$000
    33:33:int access$100(io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl) -> access$100
    33:33:void <init>(io.netty.channel.DefaultMaxBytesRecvByteBufAllocator,io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1) -> <init>
io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl$1 -> io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl$1:
    io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl this$1 -> this$1
    38:38:void <init>(io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl) -> <init>
    41:41:boolean get() -> get
io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator -> io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator:
    int maxMessagesPerRead -> maxMessagesPerRead
    boolean respectMaybeMoreData -> respectMaybeMoreData
    31:32:void <init>() -> <init>
    28:36:void <init>(int) -> <init>
    40:40:int maxMessagesPerRead() -> maxMessagesPerRead
    45:49:io.netty.channel.MaxMessagesRecvByteBufAllocator maxMessagesPerRead(int) -> maxMessagesPerRead
    65:66:io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    81:81:boolean respectMaybeMoreData() -> respectMaybeMoreData
    26:26:boolean access$000(io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator) -> access$000
io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle -> io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle:
    io.netty.channel.ChannelConfig config -> config
    int maxMessagePerRead -> maxMessagePerRead
    int totalMessages -> totalMessages
    int totalBytesRead -> totalBytesRead
    int attemptedBytesRead -> attemptedBytesRead
    int lastBytesRead -> lastBytesRead
    boolean respectMaybeMoreData -> respectMaybeMoreData
    io.netty.util.UncheckedBooleanSupplier defaultMaybeMoreSupplier -> defaultMaybeMoreSupplier
    io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator this$0 -> this$0
    87:95:void <init>(io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator) -> <init>
    107:110:void reset(io.netty.channel.ChannelConfig) -> reset
    114:114:io.netty.buffer.ByteBuf allocate(io.netty.buffer.ByteBufAllocator) -> allocate
    119:120:void incMessagesRead(int) -> incMessagesRead
    124:128:void lastBytesRead(int) -> lastBytesRead
    132:132:int lastBytesRead() -> lastBytesRead
    137:137:boolean continueReading() -> continueReading
    142:143:boolean continueReading(io.netty.util.UncheckedBooleanSupplier) -> continueReading
    150:150:void readComplete() -> readComplete
    154:154:int attemptedBytesRead() -> attemptedBytesRead
    159:160:void attemptedBytesRead(int) -> attemptedBytesRead
    163:163:int totalBytesRead() -> totalBytesRead
    87:87:int access$100(io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle) -> access$100
    87:87:int access$200(io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle) -> access$200
io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle$1 -> io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle$1:
    io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle this$1 -> this$1
    95:95:void <init>(io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle) -> <init>
    98:98:boolean get() -> get
io.netty.channel.DefaultMessageSizeEstimator -> io.netty.channel.DefaultMessageSizeEstimator:
    io.netty.channel.MessageSizeEstimator DEFAULT -> DEFAULT
    io.netty.channel.MessageSizeEstimator$Handle handle -> handle
    61:66:void <init>(int) -> <init>
    70:70:io.netty.channel.MessageSizeEstimator$Handle newHandle() -> newHandle
    52:52:void <clinit>() -> <clinit>
io.netty.channel.DefaultMessageSizeEstimator$1 -> io.netty.channel.DefaultMessageSizeEstimator$1:
io.netty.channel.DefaultMessageSizeEstimator$HandleImpl -> io.netty.channel.DefaultMessageSizeEstimator$HandleImpl:
    int unknownSize -> unknownSize
    30:32:void <init>(int) -> <init>
    36:45:int size(java.lang.Object) -> size
    27:27:void <init>(int,io.netty.channel.DefaultMessageSizeEstimator$1) -> <init>
io.netty.channel.DefaultSelectStrategy -> io.netty.channel.DefaultSelectStrategy:
    io.netty.channel.SelectStrategy INSTANCE -> INSTANCE
    26:26:void <init>() -> <init>
    30:30:int calculateStrategy(io.netty.util.IntSupplier,boolean) -> calculateStrategy
    24:24:void <clinit>() -> <clinit>
io.netty.channel.DefaultSelectStrategyFactory -> io.netty.channel.DefaultSelectStrategyFactory:
    io.netty.channel.SelectStrategyFactory INSTANCE -> INSTANCE
    24:24:void <init>() -> <init>
    28:28:io.netty.channel.SelectStrategy newSelectStrategy() -> newSelectStrategy
    22:22:void <clinit>() -> <clinit>
io.netty.channel.DelegatingChannelPromiseNotifier -> io.netty.channel.DelegatingChannelPromiseNotifier:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.channel.ChannelPromise delegate -> delegate
    boolean logNotifyFailure -> logNotifyFailure
    39:40:void <init>(io.netty.channel.ChannelPromise) -> <init>
    42:45:void <init>(io.netty.channel.ChannelPromise,boolean) -> <init>
    49:59:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    63:63:io.netty.channel.Channel channel() -> channel
    68:69:io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    74:75:io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    80:80:boolean trySuccess() -> trySuccess
    85:85:boolean trySuccess(java.lang.Void) -> trySuccess
    90:91:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    96:97:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    102:103:io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    108:109:io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    114:115:io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    120:120:boolean tryFailure(java.lang.Throwable) -> tryFailure
    125:125:boolean setUncancellable() -> setUncancellable
    130:131:io.netty.channel.ChannelPromise await() -> await
    136:137:io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    142:142:boolean isVoid() -> isVoid
    147:147:io.netty.channel.ChannelPromise unvoid() -> unvoid
    152:152:boolean await(long,java.util.concurrent.TimeUnit) -> await
    157:157:boolean await(long) -> await
    162:162:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    167:167:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    172:172:java.lang.Void getNow() -> getNow
    177:177:boolean cancel(boolean) -> cancel
    182:182:boolean isCancelled() -> isCancelled
    187:187:boolean isDone() -> isDone
    192:192:java.lang.Void get() -> get
    197:197:java.lang.Void get(long,java.util.concurrent.TimeUnit) -> get
    202:203:io.netty.channel.ChannelPromise sync() -> sync
    208:209:io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    214:214:boolean isSuccess() -> isSuccess
    219:219:boolean isCancellable() -> isCancellable
    224:224:java.lang.Throwable cause() -> cause
    31:31:io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    31:31:io.netty.channel.ChannelFuture await() -> await
    31:31:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    31:31:io.netty.channel.ChannelFuture sync() -> sync
    31:31:io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    31:31:io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    31:31:io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    31:31:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    31:31:java.lang.Object getNow() -> getNow
    31:31:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    31:31:io.netty.util.concurrent.Future await() -> await
    31:31:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    31:31:io.netty.util.concurrent.Future sync() -> sync
    31:31:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    31:31:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    31:31:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    31:31:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    31:31:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    31:31:java.lang.Object get() -> get
    31:31:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    31:31:io.netty.util.concurrent.Promise sync() -> sync
    31:31:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    31:31:io.netty.util.concurrent.Promise await() -> await
    31:31:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    31:31:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    31:31:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    31:31:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    31:31:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    31:31:boolean trySuccess(java.lang.Object) -> trySuccess
    31:31:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    31:31:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
    33:34:void <clinit>() -> <clinit>
io.netty.channel.EventLoop -> io.netty.channel.EventLoop:
    io.netty.channel.EventLoopGroup parent() -> parent
io.netty.channel.EventLoopException -> io.netty.channel.EventLoopException:
    long serialVersionUID -> serialVersionUID
    26:27:void <init>() -> <init>
    30:31:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    34:35:void <init>(java.lang.String) -> <init>
    38:39:void <init>(java.lang.Throwable) -> <init>
io.netty.channel.EventLoopGroup -> io.netty.channel.EventLoopGroup:
    io.netty.channel.EventLoop next() -> next
    io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
io.netty.channel.FailedChannelFuture -> io.netty.channel.FailedChannelFuture:
    java.lang.Throwable cause -> cause
    37:42:void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor,java.lang.Throwable) -> <init>
    46:46:java.lang.Throwable cause() -> cause
    51:51:boolean isSuccess() -> isSuccess
    56:57:io.netty.channel.ChannelFuture sync() -> sync
    62:63:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    26:26:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    26:26:io.netty.util.concurrent.Future sync() -> sync
io.netty.channel.FileRegion -> io.netty.channel.FileRegion:
    long position() -> position
    long transfered() -> transfered
    long transferred() -> transferred
    long count() -> count
    long transferTo(java.nio.channels.WritableByteChannel,long) -> transferTo
    io.netty.channel.FileRegion retain() -> retain
    io.netty.channel.FileRegion retain(int) -> retain
    io.netty.channel.FileRegion touch() -> touch
    io.netty.channel.FileRegion touch(java.lang.Object) -> touch
io.netty.channel.FixedRecvByteBufAllocator -> io.netty.channel.FixedRecvByteBufAllocator:
    int bufferSize -> bufferSize
    43:49:void <init>(int) -> <init>
    54:54:io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    59:60:io.netty.channel.FixedRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    22:22:io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
io.netty.channel.FixedRecvByteBufAllocator$HandleImpl -> io.netty.channel.FixedRecvByteBufAllocator$HandleImpl:
    int bufferSize -> bufferSize
    io.netty.channel.FixedRecvByteBufAllocator this$0 -> this$0
    29:31:void <init>(io.netty.channel.FixedRecvByteBufAllocator,int) -> <init>
    35:35:int guess() -> guess
io.netty.channel.MaxBytesRecvByteBufAllocator -> io.netty.channel.MaxBytesRecvByteBufAllocator:
    int maxBytesPerRead() -> maxBytesPerRead
    io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerRead(int) -> maxBytesPerRead
    int maxBytesPerIndividualRead() -> maxBytesPerIndividualRead
    io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerIndividualRead(int) -> maxBytesPerIndividualRead
    java.util.Map$Entry maxBytesPerReadPair() -> maxBytesPerReadPair
    io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerReadPair(int,int) -> maxBytesPerReadPair
io.netty.channel.MaxMessagesRecvByteBufAllocator -> io.netty.channel.MaxMessagesRecvByteBufAllocator:
    int maxMessagesPerRead() -> maxMessagesPerRead
    io.netty.channel.MaxMessagesRecvByteBufAllocator maxMessagesPerRead(int) -> maxMessagesPerRead
io.netty.channel.MessageSizeEstimator -> io.netty.channel.MessageSizeEstimator:
    io.netty.channel.MessageSizeEstimator$Handle newHandle() -> newHandle
io.netty.channel.MessageSizeEstimator$Handle -> io.netty.channel.MessageSizeEstimator$Handle:
    int size(java.lang.Object) -> size
io.netty.channel.MultithreadEventLoopGroup -> io.netty.channel.MultithreadEventLoopGroup:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    int DEFAULT_EVENT_LOOP_THREADS -> DEFAULT_EVENT_LOOP_THREADS
    52:53:void <init>(int,java.util.concurrent.Executor,java.lang.Object[]) -> <init>
    59:60:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    68:69:void <init>(int,java.util.concurrent.Executor,io.netty.util.concurrent.EventExecutorChooserFactory,java.lang.Object[]) -> <init>
    73:73:java.util.concurrent.ThreadFactory newDefaultThreadFactory() -> newDefaultThreadFactory
    78:78:io.netty.channel.EventLoop next() -> next
    io.netty.channel.EventLoop newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    86:86:io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    91:91:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    97:97:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    33:33:io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    33:33:io.netty.util.concurrent.EventExecutor next() -> next
    35:46:void <clinit>() -> <clinit>
io.netty.channel.PendingBytesTracker -> io.netty.channel.PendingBytesTracker:
    io.netty.channel.MessageSizeEstimator$Handle estimatorHandle -> estimatorHandle
    23:25:void <init>(io.netty.channel.MessageSizeEstimator$Handle) -> <init>
    29:29:int size(java.lang.Object) -> size
    void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    36:44:io.netty.channel.PendingBytesTracker newTracker(io.netty.channel.Channel) -> newTracker
    20:20:void <init>(io.netty.channel.MessageSizeEstimator$Handle,io.netty.channel.PendingBytesTracker$1) -> <init>
io.netty.channel.PendingBytesTracker$1 -> io.netty.channel.PendingBytesTracker$1:
io.netty.channel.PendingBytesTracker$ChannelOutboundBufferPendingBytesTracker -> io.netty.channel.PendingBytesTracker$ChannelOutboundBufferPendingBytesTracker:
    io.netty.channel.ChannelOutboundBuffer buffer -> buffer
    73:75:void <init>(io.netty.channel.ChannelOutboundBuffer,io.netty.channel.MessageSizeEstimator$Handle) -> <init>
    79:80:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    84:85:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
io.netty.channel.PendingBytesTracker$DefaultChannelPipelinePendingBytesTracker -> io.netty.channel.PendingBytesTracker$DefaultChannelPipelinePendingBytesTracker:
    io.netty.channel.DefaultChannelPipeline pipeline -> pipeline
    53:55:void <init>(io.netty.channel.DefaultChannelPipeline) -> <init>
    59:60:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    64:65:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
io.netty.channel.PendingBytesTracker$NoopPendingBytesTracker -> io.netty.channel.PendingBytesTracker$NoopPendingBytesTracker:
    91:92:void <init>(io.netty.channel.MessageSizeEstimator$Handle) -> <init>
    97:97:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    102:102:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
io.netty.channel.PendingWriteQueue -> io.netty.channel.PendingWriteQueue:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    int PENDING_WRITE_OVERHEAD -> PENDING_WRITE_OVERHEAD
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    io.netty.channel.PendingBytesTracker tracker -> tracker
    io.netty.channel.PendingWriteQueue$PendingWrite head -> head
    io.netty.channel.PendingWriteQueue$PendingWrite tail -> tail
    int size -> size
    long bytes -> bytes
    boolean $assertionsDisabled -> $assertionsDisabled
    49:52:void <init>(io.netty.channel.ChannelHandlerContext) -> <init>
    58:59:boolean isEmpty() -> isEmpty
    66:67:int size() -> size
    75:76:long bytes() -> bytes
    82:87:int size(java.lang.Object) -> size
    94:116:void add(java.lang.Object,io.netty.channel.ChannelPromise) -> add
    126:157:io.netty.channel.ChannelFuture removeAndWriteAll() -> removeAndWriteAll
    165:185:void removeAndFailAll(java.lang.Throwable) -> removeAndFailAll
    192:205:void removeAndFail(java.lang.Throwable) -> removeAndFail
    208:209:void assertEmpty() -> assertEmpty
    219:227:io.netty.channel.ChannelFuture removeAndWrite() -> removeAndWrite
    237:245:io.netty.channel.ChannelPromise remove() -> remove
    252:257:java.lang.Object current() -> current
    261:281:void recycle(io.netty.channel.PendingWriteQueue$PendingWrite,boolean) -> recycle
    284:287:void safeFail(io.netty.channel.ChannelPromise,java.lang.Throwable) -> safeFail
    31:38:void <clinit>() -> <clinit>
io.netty.channel.PendingWriteQueue$1 -> io.netty.channel.PendingWriteQueue$1:
io.netty.channel.PendingWriteQueue$PendingWrite -> io.netty.channel.PendingWriteQueue$PendingWrite:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    io.netty.util.Recycler$Handle handle -> handle
    io.netty.channel.PendingWriteQueue$PendingWrite next -> next
    long size -> size
    io.netty.channel.ChannelPromise promise -> promise
    java.lang.Object msg -> msg
    306:308:void <init>(io.netty.util.Recycler$Handle) -> <init>
    311:315:io.netty.channel.PendingWriteQueue$PendingWrite newInstance(java.lang.Object,int,io.netty.channel.ChannelPromise) -> newInstance
    319:324:void recycle() -> recycle
    292:292:io.netty.channel.PendingWriteQueue$PendingWrite access$002(io.netty.channel.PendingWriteQueue$PendingWrite,io.netty.channel.PendingWriteQueue$PendingWrite) -> access$002
    292:292:long access$100(io.netty.channel.PendingWriteQueue$PendingWrite) -> access$100
    292:292:io.netty.channel.PendingWriteQueue$PendingWrite access$000(io.netty.channel.PendingWriteQueue$PendingWrite) -> access$000
    292:292:java.lang.Object access$200(io.netty.channel.PendingWriteQueue$PendingWrite) -> access$200
    292:292:io.netty.channel.ChannelPromise access$300(io.netty.channel.PendingWriteQueue$PendingWrite) -> access$300
    292:292:void access$400(io.netty.channel.PendingWriteQueue$PendingWrite) -> access$400
    292:292:void <init>(io.netty.util.Recycler$Handle,io.netty.channel.PendingWriteQueue$1) -> <init>
    293:293:void <clinit>() -> <clinit>
io.netty.channel.PendingWriteQueue$PendingWrite$1 -> io.netty.channel.PendingWriteQueue$PendingWrite$1:
    293:293:void <init>() -> <init>
    296:296:io.netty.channel.PendingWriteQueue$PendingWrite newObject(io.netty.util.Recycler$Handle) -> newObject
    293:293:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.channel.PreferHeapByteBufAllocator -> io.netty.channel.PreferHeapByteBufAllocator:
    io.netty.buffer.ByteBufAllocator allocator -> allocator
    32:34:void <init>(io.netty.buffer.ByteBufAllocator) -> <init>
    38:38:io.netty.buffer.ByteBuf buffer() -> buffer
    43:43:io.netty.buffer.ByteBuf buffer(int) -> buffer
    48:48:io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    53:53:io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    58:58:io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    63:63:io.netty.buffer.ByteBuf ioBuffer(int,int) -> ioBuffer
    68:68:io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    73:73:io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    78:78:io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    83:83:io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    88:88:io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    93:93:io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    98:98:io.netty.buffer.CompositeByteBuf compositeBuffer() -> compositeBuffer
    103:103:io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    108:108:io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    113:113:io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    118:118:io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    123:123:io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    128:128:boolean isDirectBufferPooled() -> isDirectBufferPooled
    133:133:int calculateNewCapacity(int,int) -> calculateNewCapacity
io.netty.channel.RecvByteBufAllocator -> io.netty.channel.RecvByteBufAllocator:
    io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
io.netty.channel.RecvByteBufAllocator$DelegatingHandle -> io.netty.channel.RecvByteBufAllocator$DelegatingHandle:
    io.netty.channel.RecvByteBufAllocator$Handle delegate -> delegate
    126:128:void <init>(io.netty.channel.RecvByteBufAllocator$Handle) -> <init>
    135:135:io.netty.channel.RecvByteBufAllocator$Handle delegate() -> delegate
    140:140:io.netty.buffer.ByteBuf allocate(io.netty.buffer.ByteBufAllocator) -> allocate
    145:145:int guess() -> guess
    150:151:void reset(io.netty.channel.ChannelConfig) -> reset
    155:156:void incMessagesRead(int) -> incMessagesRead
    160:161:void lastBytesRead(int) -> lastBytesRead
    165:165:int lastBytesRead() -> lastBytesRead
    170:170:boolean continueReading() -> continueReading
    175:175:int attemptedBytesRead() -> attemptedBytesRead
    180:181:void attemptedBytesRead(int) -> attemptedBytesRead
    185:186:void readComplete() -> readComplete
io.netty.channel.RecvByteBufAllocator$ExtendedHandle -> io.netty.channel.RecvByteBufAllocator$ExtendedHandle:
    boolean continueReading(io.netty.util.UncheckedBooleanSupplier) -> continueReading
io.netty.channel.RecvByteBufAllocator$Handle -> io.netty.channel.RecvByteBufAllocator$Handle:
    io.netty.buffer.ByteBuf allocate(io.netty.buffer.ByteBufAllocator) -> allocate
    int guess() -> guess
    void reset(io.netty.channel.ChannelConfig) -> reset
    void incMessagesRead(int) -> incMessagesRead
    void lastBytesRead(int) -> lastBytesRead
    int lastBytesRead() -> lastBytesRead
    void attemptedBytesRead(int) -> attemptedBytesRead
    int attemptedBytesRead() -> attemptedBytesRead
    boolean continueReading() -> continueReading
    void readComplete() -> readComplete
io.netty.channel.ReflectiveChannelFactory -> io.netty.channel.ReflectiveChannelFactory:
    java.lang.Class clazz -> clazz
    28:33:void <init>(java.lang.Class) -> <init>
    38:40:io.netty.channel.Channel newChannel() -> newChannel
    46:46:java.lang.String toString() -> toString
io.netty.channel.SelectStrategy -> io.netty.channel.SelectStrategy:
    int SELECT -> SELECT
    int CONTINUE -> CONTINUE
    int calculateStrategy(io.netty.util.IntSupplier,boolean) -> calculateStrategy
io.netty.channel.SelectStrategyFactory -> io.netty.channel.SelectStrategyFactory:
    io.netty.channel.SelectStrategy newSelectStrategy() -> newSelectStrategy
io.netty.channel.ServerChannel -> io.netty.channel.ServerChannel:
io.netty.channel.SimpleChannelInboundHandler -> io.netty.channel.SimpleChannelInboundHandler:
    io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    boolean autoRelease -> autoRelease
    57:58:void <init>() -> <init>
    66:69:void <init>(boolean) -> <init>
    75:76:void <init>(java.lang.Class) -> <init>
    85:88:void <init>(java.lang.Class,boolean) -> <init>
    95:95:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    100:115:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void channelRead0(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead0
io.netty.channel.SingleThreadEventLoop -> io.netty.channel.SingleThreadEventLoop:
    int DEFAULT_MAX_PENDING_TASKS -> DEFAULT_MAX_PENDING_TASKS
    java.util.Queue tailTasks -> tailTasks
    41:42:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.ThreadFactory,boolean) -> <init>
    45:46:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.Executor,boolean) -> <init>
    51:53:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.ThreadFactory,boolean,int,io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    58:60:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.Executor,boolean,int,io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    64:64:io.netty.channel.EventLoopGroup parent() -> parent
    69:69:io.netty.channel.EventLoop next() -> next
    74:74:io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    79:81:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    87:95:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    105:117:void executeAfterEventLoopIteration(java.lang.Runnable) -> executeAfterEventLoopIteration
    128:128:boolean removeAfterEventLoopIterationTask(java.lang.Runnable) -> removeAfterEventLoopIterationTask
    133:133:boolean wakesUpForTask(java.lang.Runnable) -> wakesUpForTask
    138:139:void afterRunningAllTasks() -> afterRunningAllTasks
    143:143:boolean hasTasks() -> hasTasks
    148:148:int pendingTasks() -> pendingTasks
    33:33:io.netty.util.concurrent.EventExecutorGroup parent() -> parent
    33:33:io.netty.util.concurrent.EventExecutor next() -> next
    35:36:void <clinit>() -> <clinit>
io.netty.channel.SingleThreadEventLoop$NonWakeupRunnable -> io.netty.channel.SingleThreadEventLoop$NonWakeupRunnable:
io.netty.channel.SucceededChannelFuture -> io.netty.channel.SucceededChannelFuture:
    33:34:void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor) -> <init>
    38:38:java.lang.Throwable cause() -> cause
    43:43:boolean isSuccess() -> isSuccess
io.netty.channel.ThreadPerChannelEventLoop -> io.netty.channel.ThreadPerChannelEventLoop:
    io.netty.channel.ThreadPerChannelEventLoopGroup parent -> parent
    io.netty.channel.Channel ch -> ch
    29:31:void <init>(io.netty.channel.ThreadPerChannelEventLoopGroup) -> <init>
    35:35:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    50:50:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    65:89:void run() -> run
    92:95:void deregister() -> deregister
    23:23:io.netty.channel.Channel access$002(io.netty.channel.ThreadPerChannelEventLoop,io.netty.channel.Channel) -> access$002
io.netty.channel.ThreadPerChannelEventLoop$1 -> io.netty.channel.ThreadPerChannelEventLoop$1:
    io.netty.channel.ThreadPerChannelEventLoop this$0 -> this$0
    35:35:void <init>(io.netty.channel.ThreadPerChannelEventLoop) -> <init>
    38:43:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    35:35:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.ThreadPerChannelEventLoop$2 -> io.netty.channel.ThreadPerChannelEventLoop$2:
    io.netty.channel.ThreadPerChannelEventLoop this$0 -> this$0
    50:50:void <init>(io.netty.channel.ThreadPerChannelEventLoop) -> <init>
    53:58:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    50:50:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.ThreadPerChannelEventLoopGroup -> io.netty.channel.ThreadPerChannelEventLoopGroup:
    java.lang.Object[] childArgs -> childArgs
    int maxChannels -> maxChannels
    java.util.concurrent.Executor executor -> executor
    java.util.Set activeChildren -> activeChildren
    java.util.Queue idleChildren -> idleChildren
    io.netty.channel.ChannelException tooManyChannels -> tooManyChannels
    boolean shuttingDown -> shuttingDown
    io.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    io.netty.util.concurrent.FutureListener childTerminationListener -> childTerminationListener
    72:73:void <init>() -> <init>
    85:86:void <init>(int) -> <init>
    101:102:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    51:137:void <init>(int,java.util.concurrent.Executor,java.lang.Object[]) -> <init>
    143:143:io.netty.channel.EventLoop newChild(java.lang.Object[]) -> newChild
    148:148:java.util.Iterator iterator() -> iterator
    153:153:io.netty.channel.EventLoop next() -> next
    158:172:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    177:177:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    183:196:void shutdown() -> shutdown
    200:210:boolean isShuttingDown() -> isShuttingDown
    215:225:boolean isShutdown() -> isShutdown
    230:240:boolean isTerminated() -> isTerminated
    246:269:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    274:281:io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    288:291:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    298:305:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    310:323:io.netty.channel.EventLoop nextChild() -> nextChild
    46:46:io.netty.util.concurrent.EventExecutor next() -> next
    46:46:io.netty.util.concurrent.Promise access$000(io.netty.channel.ThreadPerChannelEventLoopGroup) -> access$000
io.netty.channel.ThreadPerChannelEventLoopGroup$1 -> io.netty.channel.ThreadPerChannelEventLoopGroup$1:
    io.netty.channel.ThreadPerChannelEventLoopGroup this$0 -> this$0
    58:58:void <init>(io.netty.channel.ThreadPerChannelEventLoopGroup) -> <init>
    62:65:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.VoidChannelPromise -> io.netty.channel.VoidChannelPromise:
    io.netty.channel.Channel channel -> channel
    boolean fireException -> fireException
    36:42:void <init>(io.netty.channel.Channel,boolean) -> <init>
    46:47:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    52:53:io.netty.channel.VoidChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    59:59:io.netty.channel.VoidChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    65:65:io.netty.channel.VoidChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    70:73:io.netty.channel.VoidChannelPromise await() -> await
    78:79:boolean await(long,java.util.concurrent.TimeUnit) -> await
    84:85:boolean await(long) -> await
    90:91:io.netty.channel.VoidChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    96:97:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    102:103:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    108:108:io.netty.channel.Channel channel() -> channel
    113:113:boolean isDone() -> isDone
    118:118:boolean isSuccess() -> isSuccess
    123:123:boolean setUncancellable() -> setUncancellable
    128:128:boolean isCancellable() -> isCancellable
    133:133:boolean isCancelled() -> isCancelled
    138:138:java.lang.Throwable cause() -> cause
    143:144:io.netty.channel.VoidChannelPromise sync() -> sync
    149:150:io.netty.channel.VoidChannelPromise syncUninterruptibly() -> syncUninterruptibly
    154:155:io.netty.channel.VoidChannelPromise setFailure(java.lang.Throwable) -> setFailure
    160:160:io.netty.channel.VoidChannelPromise setSuccess() -> setSuccess
    165:166:boolean tryFailure(java.lang.Throwable) -> tryFailure
    171:171:boolean cancel(boolean) -> cancel
    176:176:boolean trySuccess() -> trySuccess
    180:180:void fail() -> fail
    185:185:io.netty.channel.VoidChannelPromise setSuccess(java.lang.Void) -> setSuccess
    190:190:boolean trySuccess(java.lang.Void) -> trySuccess
    195:195:java.lang.Void getNow() -> getNow
    200:211:io.netty.channel.ChannelPromise unvoid() -> unvoid
    216:216:boolean isVoid() -> isVoid
    224:227:void fireException(java.lang.Throwable) -> fireException
    25:25:java.lang.Object getNow() -> getNow
    25:25:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    25:25:io.netty.util.concurrent.Future await() -> await
    25:25:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    25:25:io.netty.util.concurrent.Future sync() -> sync
    25:25:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    25:25:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    25:25:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    25:25:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    25:25:io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    25:25:io.netty.channel.ChannelPromise await() -> await
    25:25:io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    25:25:io.netty.channel.ChannelPromise sync() -> sync
    25:25:io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    25:25:io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    25:25:io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    25:25:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    25:25:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    25:25:io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    25:25:io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    25:25:io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    25:25:io.netty.channel.ChannelFuture await() -> await
    25:25:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    25:25:io.netty.channel.ChannelFuture sync() -> sync
    25:25:io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    25:25:io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    25:25:io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    25:25:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    25:25:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    25:25:io.netty.util.concurrent.Promise sync() -> sync
    25:25:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    25:25:io.netty.util.concurrent.Promise await() -> await
    25:25:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    25:25:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    25:25:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    25:25:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    25:25:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    25:25:boolean trySuccess(java.lang.Object) -> trySuccess
    25:25:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    26:26:void access$000(io.netty.channel.VoidChannelPromise,java.lang.Throwable) -> access$000
io.netty.channel.VoidChannelPromise$1 -> io.netty.channel.VoidChannelPromise$1:
    io.netty.channel.VoidChannelPromise this$0 -> this$0
    202:202:void <init>(io.netty.channel.VoidChannelPromise) -> <init>
    205:208:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    202:202:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.WriteBufferWaterMark -> io.netty.channel.WriteBufferWaterMark:
    int DEFAULT_LOW_WATER_MARK -> DEFAULT_LOW_WATER_MARK
    int DEFAULT_HIGH_WATER_MARK -> DEFAULT_HIGH_WATER_MARK
    io.netty.channel.WriteBufferWaterMark DEFAULT -> DEFAULT
    int low -> low
    int high -> high
    49:50:void <init>(int,int) -> <init>
    55:69:void <init>(int,int,boolean) -> <init>
    75:75:int low() -> low
    82:82:int high() -> high
    87:93:java.lang.String toString() -> toString
    36:36:void <clinit>() -> <clinit>
io.netty.channel.embedded.EmbeddedChannel -> io.netty.channel.embedded.EmbeddedChannel:
    java.net.SocketAddress LOCAL_ADDRESS -> LOCAL_ADDRESS
    java.net.SocketAddress REMOTE_ADDRESS -> REMOTE_ADDRESS
    io.netty.channel.ChannelHandler[] EMPTY_HANDLERS -> EMPTY_HANDLERS
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.channel.ChannelMetadata METADATA_NO_DISCONNECT -> METADATA_NO_DISCONNECT
    io.netty.channel.ChannelMetadata METADATA_DISCONNECT -> METADATA_DISCONNECT
    io.netty.channel.embedded.EmbeddedEventLoop loop -> loop
    io.netty.channel.ChannelFutureListener recordExceptionListener -> recordExceptionListener
    io.netty.channel.ChannelMetadata metadata -> metadata
    io.netty.channel.ChannelConfig config -> config
    java.util.Queue inboundMessages -> inboundMessages
    java.util.Queue outboundMessages -> outboundMessages
    java.lang.Throwable lastException -> lastException
    io.netty.channel.embedded.EmbeddedChannel$State state -> state
    boolean $assertionsDisabled -> $assertionsDisabled
    83:84:void <init>() -> <init>
    101:102:void <init>(io.netty.channel.ChannelHandler[]) -> <init>
    136:137:void <init>(io.netty.channel.ChannelId,io.netty.channel.ChannelHandler[]) -> <init>
    149:150:void <init>(io.netty.channel.ChannelId,boolean,io.netty.channel.ChannelHandler[]) -> <init>
    63:169:void <init>(io.netty.channel.ChannelId,boolean,boolean,io.netty.channel.ChannelHandler[]) -> <init>
    63:187:void <init>(io.netty.channel.ChannelId,boolean,io.netty.channel.ChannelConfig,io.netty.channel.ChannelHandler[]) -> <init>
    190:190:io.netty.channel.ChannelMetadata metadata(boolean) -> metadata
    194:212:void setup(boolean,io.netty.channel.ChannelHandler[]) -> setup
    228:228:io.netty.channel.DefaultChannelPipeline newChannelPipeline() -> newChannelPipeline
    233:233:io.netty.channel.ChannelMetadata metadata() -> metadata
    238:238:io.netty.channel.ChannelConfig config() -> config
    243:243:boolean isOpen() -> isOpen
    248:248:boolean isActive() -> isActive
    255:258:java.util.Queue inboundMessages() -> inboundMessages
    273:276:java.util.Queue outboundMessages() -> outboundMessages
    292:292:java.lang.Object readInbound() -> readInbound
    300:300:java.lang.Object readOutbound() -> readOutbound
    311:322:boolean writeInbound(java.lang.Object[]) -> writeInbound
    359:364:io.netty.channel.ChannelFuture flushInbound(boolean,io.netty.channel.ChannelPromise) -> flushInbound
    374:404:boolean writeOutbound(java.lang.Object[]) -> writeOutbound
    447:450:void flushOutbound0() -> flushOutbound0
    458:458:boolean finish() -> finish
    468:468:boolean finishAndReleaseAll() -> finishAndReleaseAll
    478:485:boolean finish(boolean) -> finish
    507:517:boolean releaseAll(java.util.Queue) -> releaseAll
    521:526:void finishPendingTasks(boolean) -> finishPendingTasks
    530:530:io.netty.channel.ChannelFuture close() -> close
    535:535:io.netty.channel.ChannelFuture disconnect() -> disconnect
    542:547:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    552:554:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    558:558:boolean isNotEmpty(java.util.Queue) -> isNotEmpty
    562:562:java.lang.Object poll(java.util.Queue) -> poll
    571:581:void runPendingTasks() -> runPendingTasks
    598:601:void recordException(io.netty.channel.ChannelFuture) -> recordException
    604:611:void recordException(java.lang.Throwable) -> recordException
    617:628:io.netty.channel.ChannelFuture checkException(io.netty.channel.ChannelPromise) -> checkException
    635:636:void checkException() -> checkException
    643:650:boolean checkOpen(boolean) -> checkOpen
    657:660:void ensureOpen() -> ensureOpen
    664:664:boolean isCompatible(io.netty.channel.EventLoop) -> isCompatible
    669:669:java.net.SocketAddress localAddress0() -> localAddress0
    674:674:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    679:680:void doRegister() -> doRegister
    685:685:void doBind(java.net.SocketAddress) -> doBind
    689:692:void doDisconnect() -> doDisconnect
    696:697:void doClose() -> doClose
    702:702:void doBeginRead() -> doBeginRead
    706:706:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    711:711:io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    717:726:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    734:735:void handleOutboundMessage(java.lang.Object) -> handleOutboundMessage
    741:742:void handleInboundMessage(java.lang.Object) -> handleInboundMessage
    50:50:void access$000(io.netty.channel.embedded.EmbeddedChannel,io.netty.channel.ChannelFuture) -> access$000
    50:50:void access$200(io.netty.channel.embedded.EmbeddedChannel,java.lang.Throwable) -> access$200
    50:61:void <clinit>() -> <clinit>
io.netty.channel.embedded.EmbeddedChannel$1 -> io.netty.channel.embedded.EmbeddedChannel$1:
    io.netty.channel.embedded.EmbeddedChannel this$0 -> this$0
    64:64:void <init>(io.netty.channel.embedded.EmbeddedChannel) -> <init>
    67:68:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    64:64:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.embedded.EmbeddedChannel$2 -> io.netty.channel.embedded.EmbeddedChannel$2:
    io.netty.channel.ChannelHandler[] val$handlers -> val$handlers
    io.netty.channel.embedded.EmbeddedChannel this$0 -> this$0
    196:196:void <init>(io.netty.channel.embedded.EmbeddedChannel,io.netty.channel.ChannelHandler[]) -> <init>
    199:206:void initChannel(io.netty.channel.Channel) -> initChannel
io.netty.channel.embedded.EmbeddedChannel$EmbeddedChannelPipeline -> io.netty.channel.embedded.EmbeddedChannel$EmbeddedChannelPipeline:
    io.netty.channel.embedded.EmbeddedChannel this$0 -> this$0
    842:844:void <init>(io.netty.channel.embedded.EmbeddedChannel,io.netty.channel.embedded.EmbeddedChannel) -> <init>
    848:849:void onUnhandledInboundException(java.lang.Throwable) -> onUnhandledInboundException
    853:854:void onUnhandledInboundMessage(java.lang.Object) -> onUnhandledInboundMessage
io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe -> io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe:
    io.netty.channel.Channel$Unsafe wrapped -> wrapped
    io.netty.channel.embedded.EmbeddedChannel this$0 -> this$0
    744:748:void <init>(io.netty.channel.embedded.EmbeddedChannel) -> <init>
    837:838:void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    744:744:void <init>(io.netty.channel.embedded.EmbeddedChannel,io.netty.channel.embedded.EmbeddedChannel$1) -> <init>
io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe$1 -> io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe$1:
    io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe this$1 -> this$1
    748:748:void <init>(io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe) -> <init>
    751:751:io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle() -> recvBufAllocHandle
    756:756:java.net.SocketAddress localAddress() -> localAddress
    761:761:java.net.SocketAddress remoteAddress() -> remoteAddress
    766:768:void register(io.netty.channel.EventLoop,io.netty.channel.ChannelPromise) -> register
    772:774:void bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    778:780:void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    784:786:void disconnect(io.netty.channel.ChannelPromise) -> disconnect
    790:792:void close(io.netty.channel.ChannelPromise) -> close
    796:798:void closeForcibly() -> closeForcibly
    802:804:void deregister(io.netty.channel.ChannelPromise) -> deregister
    808:810:void beginRead() -> beginRead
    814:816:void write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    820:822:void flush() -> flush
    826:826:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    831:831:io.netty.channel.ChannelOutboundBuffer outboundBuffer() -> outboundBuffer
io.netty.channel.embedded.EmbeddedChannel$State -> io.netty.channel.embedded.EmbeddedChannel$State:
    io.netty.channel.embedded.EmbeddedChannel$State OPEN -> OPEN
    io.netty.channel.embedded.EmbeddedChannel$State ACTIVE -> ACTIVE
    io.netty.channel.embedded.EmbeddedChannel$State CLOSED -> CLOSED
    io.netty.channel.embedded.EmbeddedChannel$State[] $VALUES -> $VALUES
    56:56:io.netty.channel.embedded.EmbeddedChannel$State[] values() -> values
    56:56:io.netty.channel.embedded.EmbeddedChannel$State valueOf(java.lang.String) -> valueOf
    56:56:void <init>(java.lang.String,int) -> <init>
    56:56:void <clinit>() -> <clinit>
io.netty.channel.embedded.EmbeddedChannelId -> io.netty.channel.embedded.EmbeddedChannelId:
    io.netty.channel.ChannelId INSTANCE -> INSTANCE
    30:30:void <init>() -> <init>
    34:34:java.lang.String asShortText() -> asShortText
    39:39:java.lang.String asLongText() -> asLongText
    44:48:int compareTo(io.netty.channel.ChannelId) -> compareTo
    53:53:int hashCode() -> hashCode
    58:58:boolean equals(java.lang.Object) -> equals
    63:63:java.lang.String toString() -> toString
    24:24:int compareTo(java.lang.Object) -> compareTo
    28:28:void <clinit>() -> <clinit>
io.netty.channel.embedded.EmbeddedEventLoop -> io.netty.channel.embedded.EmbeddedEventLoop:
    java.util.Queue tasks -> tasks
    32:34:void <init>() -> <init>
    38:38:io.netty.channel.EventLoopGroup parent() -> parent
    43:43:io.netty.channel.EventLoop next() -> next
    48:52:void execute(java.lang.Runnable) -> execute
    56:63:void runTasks() -> runTasks
    66:74:long runScheduledTasks() -> runScheduledTasks
    83:84:void cancelScheduledTasks() -> cancelScheduledTasks
    88:88:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    93:93:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    99:99:void shutdown() -> shutdown
    104:104:boolean isShuttingDown() -> isShuttingDown
    109:109:boolean isShutdown() -> isShutdown
    114:114:boolean isTerminated() -> isTerminated
    119:119:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    124:124:io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    129:131:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    137:138:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    143:143:boolean inEventLoop() -> inEventLoop
    148:148:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    32:32:io.netty.util.concurrent.EventExecutor next() -> next
    32:32:io.netty.util.concurrent.EventExecutorGroup parent() -> parent
io.netty.channel.embedded.EmbeddedSocketAddress -> io.netty.channel.embedded.EmbeddedSocketAddress:
    20:20:void <init>() -> <init>
    25:25:java.lang.String toString() -> toString
io.netty.channel.group.ChannelGroup -> io.netty.channel.group.ChannelGroup:
    java.lang.String name() -> name
    io.netty.channel.group.ChannelGroupFuture close() -> close
io.netty.channel.group.ChannelGroupException -> io.netty.channel.group.ChannelGroupException:
    java.util.Collection failed -> failed
    34:42:void <init>(java.util.Collection) -> <init>
    50:50:java.util.Iterator iterator() -> iterator
io.netty.channel.group.ChannelGroupFuture -> io.netty.channel.group.ChannelGroupFuture:
    io.netty.channel.group.ChannelGroupException cause() -> cause
    io.netty.channel.group.ChannelGroupFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
io.netty.channel.group.ChannelMatcher -> io.netty.channel.group.ChannelMatcher:
    boolean matches(io.netty.channel.Channel) -> matches
io.netty.channel.group.ChannelMatchers -> io.netty.channel.group.ChannelMatchers:
    io.netty.channel.group.ChannelMatcher ALL_MATCHER -> ALL_MATCHER
    io.netty.channel.group.ChannelMatcher SERVER_CHANNEL_MATCHER -> SERVER_CHANNEL_MATCHER
    io.netty.channel.group.ChannelMatcher NON_SERVER_CHANNEL_MATCHER -> NON_SERVER_CHANNEL_MATCHER
    44:44:io.netty.channel.group.ChannelMatcher all() -> all
    66:66:io.netty.channel.group.ChannelMatcher isInstanceOf(java.lang.Class) -> isInstanceOf
    74:74:io.netty.channel.group.ChannelMatcher isNotInstanceOf(java.lang.Class) -> isNotInstanceOf
    96:96:io.netty.channel.group.ChannelMatcher invert(io.netty.channel.group.ChannelMatcher) -> invert
    26:34:void <clinit>() -> <clinit>
io.netty.channel.group.ChannelMatchers$1 -> io.netty.channel.group.ChannelMatchers$1:
    26:26:void <init>() -> <init>
    29:29:boolean matches(io.netty.channel.Channel) -> matches
io.netty.channel.group.ChannelMatchers$ClassMatcher -> io.netty.channel.group.ChannelMatchers$ClassMatcher:
    java.lang.Class clazz -> clazz
    160:162:void <init>(java.lang.Class) -> <init>
    166:166:boolean matches(io.netty.channel.Channel) -> matches
io.netty.channel.group.ChannelMatchers$InvertMatcher -> io.netty.channel.group.ChannelMatchers$InvertMatcher:
    io.netty.channel.group.ChannelMatcher matcher -> matcher
    134:136:void <init>(io.netty.channel.group.ChannelMatcher) -> <init>
    140:140:boolean matches(io.netty.channel.Channel) -> matches
io.netty.channel.group.CombinedIterator -> io.netty.channel.group.CombinedIterator:
    java.util.Iterator i1 -> i1
    java.util.Iterator i2 -> i2
    java.util.Iterator currentIterator -> currentIterator
    29:39:void <init>(java.util.Iterator,java.util.Iterator) -> <init>
    44:51:boolean hasNext() -> hasNext
    60:67:java.lang.Object next() -> next
    73:74:void remove() -> remove
io.netty.channel.group.DefaultChannelGroup -> io.netty.channel.group.DefaultChannelGroup:
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    java.lang.String name -> name
    io.netty.util.concurrent.EventExecutor executor -> executor
    java.util.concurrent.ConcurrentMap serverChannels -> serverChannels
    java.util.concurrent.ConcurrentMap nonServerChannels -> nonServerChannels
    io.netty.channel.ChannelFutureListener remover -> remover
    io.netty.channel.group.VoidChannelGroupFuture voidFuture -> voidFuture
    boolean stayClosed -> stayClosed
    boolean closed -> closed
    73:74:void <init>(java.lang.String,io.netty.util.concurrent.EventExecutor) -> <init>
    47:100:void <init>(java.lang.String,io.netty.util.concurrent.EventExecutor,boolean) -> <init>
    104:104:java.lang.String name() -> name
    119:119:boolean isEmpty() -> isEmpty
    124:124:int size() -> size
    129:137:boolean contains(java.lang.Object) -> contains
    143:167:boolean add(io.netty.channel.Channel) -> add
    172:192:boolean remove(java.lang.Object) -> remove
    197:199:void clear() -> clear
    203:205:java.util.Iterator iterator() -> iterator
    210:213:java.lang.Object[] toArray() -> toArray
    218:221:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    226:226:io.netty.channel.group.ChannelGroupFuture close() -> close
    331:359:io.netty.channel.group.ChannelGroupFuture close(io.netty.channel.group.ChannelMatcher) -> close
    458:458:int hashCode() -> hashCode
    463:463:boolean equals(java.lang.Object) -> equals
    468:473:int compareTo(io.netty.channel.group.ChannelGroup) -> compareTo
    478:478:java.lang.String toString() -> toString
    42:42:boolean add(java.lang.Object) -> add
    42:42:int compareTo(java.lang.Object) -> compareTo
    44:44:void <clinit>() -> <clinit>
io.netty.channel.group.DefaultChannelGroup$1 -> io.netty.channel.group.DefaultChannelGroup$1:
    io.netty.channel.group.DefaultChannelGroup this$0 -> this$0
    49:49:void <init>(io.netty.channel.group.DefaultChannelGroup) -> <init>
    52:53:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    49:49:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.group.DefaultChannelGroupFuture -> io.netty.channel.group.DefaultChannelGroupFuture:
    io.netty.channel.group.ChannelGroup group -> group
    java.util.Map futures -> futures
    int successCount -> successCount
    int failureCount -> failureCount
    io.netty.channel.ChannelFutureListener childListener -> childListener
    47:123:void <init>(io.netty.channel.group.ChannelGroup,java.util.Map,io.netty.util.concurrent.EventExecutor) -> <init>
    137:137:java.util.Iterator iterator() -> iterator
    152:153:io.netty.channel.group.DefaultChannelGroupFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    158:159:io.netty.channel.group.DefaultChannelGroupFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    164:165:io.netty.channel.group.DefaultChannelGroupFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    171:172:io.netty.channel.group.DefaultChannelGroupFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    177:178:io.netty.channel.group.DefaultChannelGroupFuture await() -> await
    183:184:io.netty.channel.group.DefaultChannelGroupFuture awaitUninterruptibly() -> awaitUninterruptibly
    189:190:io.netty.channel.group.DefaultChannelGroupFuture syncUninterruptibly() -> syncUninterruptibly
    195:196:io.netty.channel.group.DefaultChannelGroupFuture sync() -> sync
    201:201:io.netty.channel.group.ChannelGroupException cause() -> cause
    205:206:void setSuccess0() -> setSuccess0
    209:210:void setFailure0(io.netty.channel.group.ChannelGroupException) -> setFailure0
    214:214:io.netty.channel.group.DefaultChannelGroupFuture setSuccess(java.lang.Void) -> setSuccess
    219:219:boolean trySuccess(java.lang.Void) -> trySuccess
    224:224:io.netty.channel.group.DefaultChannelGroupFuture setFailure(java.lang.Throwable) -> setFailure
    229:229:boolean tryFailure(java.lang.Throwable) -> tryFailure
    234:238:void checkDeadLock() -> checkDeadLock
    40:40:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    40:40:io.netty.util.concurrent.Promise sync() -> sync
    40:40:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    40:40:io.netty.util.concurrent.Promise await() -> await
    40:40:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    40:40:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    40:40:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    40:40:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    40:40:java.lang.Throwable cause() -> cause
    40:40:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    40:40:boolean trySuccess(java.lang.Object) -> trySuccess
    40:40:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    40:40:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    40:40:io.netty.util.concurrent.Future await() -> await
    40:40:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    40:40:io.netty.util.concurrent.Future sync() -> sync
    40:40:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    40:40:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    40:40:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    40:40:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    40:40:io.netty.channel.group.ChannelGroupFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    40:40:int access$008(io.netty.channel.group.DefaultChannelGroupFuture) -> access$008
    40:40:int access$108(io.netty.channel.group.DefaultChannelGroupFuture) -> access$108
    40:40:int access$000(io.netty.channel.group.DefaultChannelGroupFuture) -> access$000
    40:40:int access$100(io.netty.channel.group.DefaultChannelGroupFuture) -> access$100
    40:40:java.util.Map access$200(io.netty.channel.group.DefaultChannelGroupFuture) -> access$200
    40:40:void access$300(io.netty.channel.group.DefaultChannelGroupFuture,io.netty.channel.group.ChannelGroupException) -> access$300
    40:40:void access$400(io.netty.channel.group.DefaultChannelGroupFuture) -> access$400
io.netty.channel.group.DefaultChannelGroupFuture$1 -> io.netty.channel.group.DefaultChannelGroupFuture$1:
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.channel.group.DefaultChannelGroupFuture this$0 -> this$0
    47:47:void <init>(io.netty.channel.group.DefaultChannelGroupFuture) -> <init>
    50:77:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    47:47:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
    47:47:void <clinit>() -> <clinit>
io.netty.channel.group.DefaultChannelGroupFuture$DefaultEntry -> io.netty.channel.group.DefaultChannelGroupFuture$DefaultEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    244:247:void <init>(java.lang.Object,java.lang.Object) -> <init>
    251:251:java.lang.Object getKey() -> getKey
    256:256:java.lang.Object getValue() -> getValue
    261:261:java.lang.Object setValue(java.lang.Object) -> setValue
io.netty.channel.group.VoidChannelGroupFuture -> io.netty.channel.group.VoidChannelGroupFuture:
    java.util.Iterator EMPTY -> EMPTY
    io.netty.channel.group.ChannelGroup group -> group
    32:34:void <init>(io.netty.channel.group.ChannelGroup) -> <init>
    48:48:boolean isSuccess() -> isSuccess
    53:53:io.netty.channel.group.ChannelGroupException cause() -> cause
    68:68:io.netty.channel.group.ChannelGroupFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    88:88:io.netty.channel.group.ChannelGroupFuture await() -> await
    98:98:io.netty.channel.group.ChannelGroupFuture syncUninterruptibly() -> syncUninterruptibly
    108:108:java.util.Iterator iterator() -> iterator
    113:113:boolean isCancellable() -> isCancellable
    118:118:boolean await(long,java.util.concurrent.TimeUnit) -> await
    123:123:boolean await(long) -> await
    128:128:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    133:133:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    138:138:java.lang.Void getNow() -> getNow
    143:143:boolean cancel(boolean) -> cancel
    148:148:boolean isCancelled() -> isCancelled
    153:153:boolean isDone() -> isDone
    158:158:java.lang.Void get() -> get
    163:163:java.lang.Void get(long,java.util.concurrent.TimeUnit) -> get
    167:167:java.lang.RuntimeException reject() -> reject
    27:27:java.lang.Object getNow() -> getNow
    27:27:io.netty.util.concurrent.Future await() -> await
    27:27:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    27:27:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    27:27:java.lang.Throwable cause() -> cause
    27:27:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    27:27:java.lang.Object get() -> get
    29:29:void <clinit>() -> <clinit>
io.netty.channel.nio.AbstractNioByteChannel -> io.netty.channel.nio.AbstractNioByteChannel:
    io.netty.channel.ChannelMetadata METADATA -> METADATA
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    java.lang.Runnable flushTask -> flushTask
    58:59:void <init>(io.netty.channel.Channel,java.nio.channels.SelectableChannel) -> <init>
    io.netty.channel.ChannelFuture shutdownInput() -> shutdownInput
    67:67:boolean isInputShutdown0() -> isInputShutdown0
    72:72:io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe() -> newUnsafe
    77:77:io.netty.channel.ChannelMetadata metadata() -> metadata
    182:187:int doWrite0(io.netty.channel.ChannelOutboundBuffer) -> doWrite0
    191:225:int doWriteInternal(io.netty.channel.ChannelOutboundBuffer,java.lang.Object) -> doWriteInternal
    230:243:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    247:261:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    266:281:void incompleteWrite(boolean) -> incompleteWrite
    long doWriteFileRegion(io.netty.channel.FileRegion) -> doWriteFileRegion
    int doReadBytes(io.netty.buffer.ByteBuf) -> doReadBytes
    int doWriteBytes(io.netty.buffer.ByteBuf) -> doWriteBytes
    304:315:void setOpWrite() -> setOpWrite
    318:329:void clearOpWrite() -> clearOpWrite
    43:43:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    44:47:void <clinit>() -> <clinit>
io.netty.channel.nio.AbstractNioByteChannel$1 -> io.netty.channel.nio.AbstractNioByteChannel$1:
    io.netty.channel.nio.AbstractNioByteChannel this$0 -> this$0
    272:272:void <init>(io.netty.channel.nio.AbstractNioByteChannel) -> <init>
    275:276:void run() -> run
io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe -> io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe:
    io.netty.channel.nio.AbstractNioByteChannel this$0 -> this$0
    80:80:void <init>(io.netty.channel.nio.AbstractNioByteChannel) -> <init>
    83:93:void closeOnRead(io.netty.channel.ChannelPipeline) -> closeOnRead
    97:111:void handleReadException(io.netty.channel.ChannelPipeline,io.netty.buffer.ByteBuf,java.lang.Throwable,boolean,io.netty.channel.RecvByteBufAllocator$Handle) -> handleReadException
    115:164:void read() -> read
io.netty.channel.nio.AbstractNioChannel -> io.netty.channel.nio.AbstractNioChannel:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.nio.channels.ClosedChannelException DO_CLOSE_CLOSED_CHANNEL_EXCEPTION -> DO_CLOSE_CLOSED_CHANNEL_EXCEPTION
    java.nio.channels.SelectableChannel ch -> ch
    int readInterestOp -> readInterestOp
    java.nio.channels.SelectionKey selectionKey -> selectionKey
    boolean readPending -> readPending
    java.lang.Runnable clearReadPendingRunnable -> clearReadPendingRunnable
    io.netty.channel.ChannelPromise connectPromise -> connectPromise
    java.util.concurrent.ScheduledFuture connectTimeoutFuture -> connectTimeoutFuture
    java.net.SocketAddress requestedRemoteAddress -> requestedRemoteAddress
    boolean $assertionsDisabled -> $assertionsDisabled
    61:101:void <init>(io.netty.channel.Channel,java.nio.channels.SelectableChannel,int) -> <init>
    105:105:boolean isOpen() -> isOpen
    110:110:io.netty.channel.nio.AbstractNioChannel$NioUnsafe unsafe() -> unsafe
    114:114:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    119:119:io.netty.channel.nio.NioEventLoop eventLoop() -> eventLoop
    126:127:java.nio.channels.SelectionKey selectionKey() -> selectionKey
    136:136:boolean isReadPending() -> isReadPending
    145:163:void setReadPending(boolean) -> setReadPending
    169:182:void clearReadPending() -> clearReadPending
    185:189:void setReadPending0(boolean) -> setReadPending0
    192:194:void clearReadPending0() -> clearReadPending0
    379:379:boolean isCompatible(io.netty.channel.EventLoop) -> isCompatible
    384:400:void doRegister() -> doRegister
    406:407:void doDeregister() -> doDeregister
    412:423:void doBeginRead() -> doBeginRead
    boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    void doFinishConnect() -> doFinishConnect
    441:463:io.netty.buffer.ByteBuf newDirectBuffer(io.netty.buffer.ByteBuf) -> newDirectBuffer
    473:501:io.netty.buffer.ByteBuf newDirectBuffer(io.netty.util.ReferenceCounted,io.netty.buffer.ByteBuf) -> newDirectBuffer
    506:518:void doClose() -> doClose
    49:49:io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    49:49:io.netty.channel.EventLoop eventLoop() -> eventLoop
    49:49:void access$000(io.netty.channel.nio.AbstractNioChannel) -> access$000
    49:49:void access$100(io.netty.channel.nio.AbstractNioChannel,boolean) -> access$100
    49:49:io.netty.channel.ChannelPromise access$200(io.netty.channel.nio.AbstractNioChannel) -> access$200
    49:49:io.netty.channel.ChannelPromise access$202(io.netty.channel.nio.AbstractNioChannel,io.netty.channel.ChannelPromise) -> access$202
    49:49:java.net.SocketAddress access$302(io.netty.channel.nio.AbstractNioChannel,java.net.SocketAddress) -> access$302
    49:49:java.util.concurrent.ScheduledFuture access$402(io.netty.channel.nio.AbstractNioChannel,java.util.concurrent.ScheduledFuture) -> access$402
    49:49:java.util.concurrent.ScheduledFuture access$400(io.netty.channel.nio.AbstractNioChannel) -> access$400
    49:49:java.net.SocketAddress access$300(io.netty.channel.nio.AbstractNioChannel) -> access$300
    49:54:void <clinit>() -> <clinit>
io.netty.channel.nio.AbstractNioChannel$1 -> io.netty.channel.nio.AbstractNioChannel$1:
    io.netty.channel.nio.AbstractNioChannel this$0 -> this$0
    61:61:void <init>(io.netty.channel.nio.AbstractNioChannel) -> <init>
    64:65:void run() -> run
io.netty.channel.nio.AbstractNioChannel$2 -> io.netty.channel.nio.AbstractNioChannel$2:
    boolean val$readPending -> val$readPending
    io.netty.channel.nio.AbstractNioChannel this$0 -> this$0
    150:150:void <init>(io.netty.channel.nio.AbstractNioChannel,boolean) -> <init>
    153:154:void run() -> run
io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe -> io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe:
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.channel.nio.AbstractNioChannel this$0 -> this$0
    218:218:void <init>(io.netty.channel.nio.AbstractNioChannel) -> <init>
    221:233:void removeReadOp() -> removeReadOp
    237:237:java.nio.channels.SelectableChannel ch() -> ch
    243:293:void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    296:318:void fulfillConnectPromise(io.netty.channel.ChannelPromise,boolean) -> fulfillConnectPromise
    321:329:void fulfillConnectPromise(io.netty.channel.ChannelPromise,java.lang.Throwable) -> fulfillConnectPromise
    336:352:void finishConnect() -> finishConnect
    359:363:void flush0() -> flush0
    368:369:void forceFlush() -> forceFlush
    372:373:boolean isFlushPending() -> isFlushPending
    218:218:void <clinit>() -> <clinit>
io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1 -> io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1:
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe this$1 -> this$1
    263:263:void <init>(io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe,java.net.SocketAddress) -> <init>
    266:272:void run() -> run
io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2 -> io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2:
    io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe this$1 -> this$1
    276:276:void <init>(io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe) -> <init>
    279:286:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    276:276:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.nio.AbstractNioChannel$NioUnsafe -> io.netty.channel.nio.AbstractNioChannel$NioUnsafe:
    void finishConnect() -> finishConnect
    void read() -> read
    void forceFlush() -> forceFlush
io.netty.channel.nio.AbstractNioMessageChannel -> io.netty.channel.nio.AbstractNioMessageChannel:
    boolean inputShutdown -> inputShutdown
    42:43:void <init>(io.netty.channel.Channel,java.nio.channels.SelectableChannel,int) -> <init>
    47:47:io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe() -> newUnsafe
    52:56:void doBeginRead() -> doBeginRead
    127:165:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    171:171:boolean continueOnWriteError() -> continueOnWriteError
    177:177:boolean closeOnReadError(java.lang.Throwable) -> closeOnReadError
    int doReadMessages(java.util.List) -> doReadMessages
    boolean doWriteMessage(java.lang.Object,io.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    35:35:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
io.netty.channel.nio.AbstractNioMessageChannel$1 -> io.netty.channel.nio.AbstractNioMessageChannel$1:
io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe -> io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe:
    java.util.List readBuf -> readBuf
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.channel.nio.AbstractNioMessageChannel this$0 -> this$0
    58:60:void <init>(io.netty.channel.nio.AbstractNioMessageChannel) -> <init>
    64:122:void read() -> read
    58:58:void <init>(io.netty.channel.nio.AbstractNioMessageChannel,io.netty.channel.nio.AbstractNioMessageChannel$1) -> <init>
    58:58:void <clinit>() -> <clinit>
io.netty.channel.nio.NioEventLoop -> io.netty.channel.nio.NioEventLoop:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    int CLEANUP_INTERVAL -> CLEANUP_INTERVAL
    boolean DISABLE_KEYSET_OPTIMIZATION -> DISABLE_KEYSET_OPTIMIZATION
    int MIN_PREMATURE_SELECTOR_RETURNS -> MIN_PREMATURE_SELECTOR_RETURNS
    int SELECTOR_AUTO_REBUILD_THRESHOLD -> SELECTOR_AUTO_REBUILD_THRESHOLD
    io.netty.util.IntSupplier selectNowSupplier -> selectNowSupplier
    java.util.concurrent.Callable pendingTasksCallable -> pendingTasksCallable
    java.nio.channels.Selector selector -> selector
    java.nio.channels.Selector unwrappedSelector -> unwrappedSelector
    io.netty.channel.nio.SelectedSelectionKeySet selectedKeys -> selectedKeys
    java.nio.channels.spi.SelectorProvider provider -> provider
    java.util.concurrent.atomic.AtomicBoolean wakenUp -> wakenUp
    io.netty.channel.SelectStrategy selectStrategy -> selectStrategy
    int ioRatio -> ioRatio
    int cancelledKeys -> cancelledKeys
    boolean needsToSelectAgain -> needsToSelectAgain
    68:153:void <init>(io.netty.channel.nio.NioEventLoopGroup,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider,io.netty.channel.SelectStrategy,io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    173:245:io.netty.channel.nio.NioEventLoop$SelectorTuple openSelector() -> openSelector
    253:253:java.nio.channels.spi.SelectorProvider selectorProvider() -> selectorProvider
    259:260:java.util.Queue newTaskQueue(int) -> newTaskQueue
    268:271:int pendingTasks() -> pendingTasks
    281:304:void register(java.nio.channels.SelectableChannel,int,io.netty.channel.nio.NioTask) -> register
    310:310:int getIoRatio() -> getIoRatio
    318:322:void setIoRatio(int) -> setIoRatio
    329:339:void rebuildSelector() -> rebuildSelector
    342:399:void rebuildSelector0() -> rebuildSelector0
    405:479:void run() -> run
    484:493:void handleLoopException(java.lang.Throwable) -> handleLoopException
    496:501:void processSelectedKeys() -> processSelectedKeys
    506:510:void cleanup() -> cleanup
    513:519:void cancel(java.nio.channels.SelectionKey) -> cancel
    523:527:java.lang.Runnable pollTask() -> pollTask
    534:568:void processSelectedKeysPlain(java.util.Set) -> processSelectedKeysPlain
    571:596:void processSelectedKeysOptimized() -> processSelectedKeysOptimized
    599:650:void processSelectedKey(java.nio.channels.SelectionKey,io.netty.channel.nio.AbstractNioChannel) -> processSelectedKey
    653:674:void processSelectedKey(java.nio.channels.SelectionKey,io.netty.channel.nio.NioTask) -> processSelectedKey
    677:695:void closeAll() -> closeAll
    699:703:void invokeChannelUnregistered(io.netty.channel.nio.NioTask,java.nio.channels.SelectionKey,java.lang.Throwable) -> invokeChannelUnregistered
    707:710:void wakeup(boolean) -> wakeup
    713:713:java.nio.channels.Selector unwrappedSelector() -> unwrappedSelector
    718:722:int selectNow() -> selectNow
    728:815:void select(boolean) -> select
    818:824:void selectAgain() -> selectAgain
    56:56:int access$001(io.netty.channel.nio.NioEventLoop) -> access$001
    56:56:void access$100(io.netty.channel.nio.NioEventLoop) -> access$100
    58:114:void <clinit>() -> <clinit>
io.netty.channel.nio.NioEventLoop$1 -> io.netty.channel.nio.NioEventLoop$1:
    io.netty.channel.nio.NioEventLoop this$0 -> this$0
    68:68:void <init>(io.netty.channel.nio.NioEventLoop) -> <init>
    71:71:int get() -> get
io.netty.channel.nio.NioEventLoop$2 -> io.netty.channel.nio.NioEventLoop$2:
    io.netty.channel.nio.NioEventLoop this$0 -> this$0
    74:74:void <init>(io.netty.channel.nio.NioEventLoop) -> <init>
    77:77:java.lang.Integer call() -> call
    74:74:java.lang.Object call() -> call
io.netty.channel.nio.NioEventLoop$3 -> io.netty.channel.nio.NioEventLoop$3:
    91:91:void <init>() -> <init>
    94:95:java.lang.Void run() -> run
    91:91:java.lang.Object run() -> run
io.netty.channel.nio.NioEventLoop$4 -> io.netty.channel.nio.NioEventLoop$4:
    io.netty.channel.nio.NioEventLoop this$0 -> this$0
    184:184:void <init>(io.netty.channel.nio.NioEventLoop) -> <init>
    188:193:java.lang.Object run() -> run
io.netty.channel.nio.NioEventLoop$5 -> io.netty.channel.nio.NioEventLoop$5:
    java.lang.Class val$selectorImplClass -> val$selectorImplClass
    java.nio.channels.Selector val$unwrappedSelector -> val$unwrappedSelector
    io.netty.channel.nio.SelectedSelectionKeySet val$selectedKeySet -> val$selectedKeySet
    io.netty.channel.nio.NioEventLoop this$0 -> this$0
    210:210:void <init>(io.netty.channel.nio.NioEventLoop,java.lang.Class,java.nio.channels.Selector,io.netty.channel.nio.SelectedSelectionKeySet) -> <init>
    214:232:java.lang.Object run() -> run
io.netty.channel.nio.NioEventLoop$6 -> io.netty.channel.nio.NioEventLoop$6:
    io.netty.channel.nio.NioEventLoop this$0 -> this$0
    330:330:void <init>(io.netty.channel.nio.NioEventLoop) -> <init>
    333:334:void run() -> run
io.netty.channel.nio.NioEventLoop$SelectorTuple -> io.netty.channel.nio.NioEventLoop$SelectorTuple:
    java.nio.channels.Selector unwrappedSelector -> unwrappedSelector
    java.nio.channels.Selector selector -> selector
    159:162:void <init>(java.nio.channels.Selector) -> <init>
    164:167:void <init>(java.nio.channels.Selector,java.nio.channels.Selector) -> <init>
io.netty.channel.nio.NioEventLoopGroup -> io.netty.channel.nio.NioEventLoopGroup:
    43:44:void <init>() -> <init>
    51:52:void <init>(int) -> <init>
    59:60:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    63:64:void <init>(int,java.util.concurrent.Executor) -> <init>
    72:73:void <init>(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider) -> <init>
    77:78:void <init>(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider,io.netty.channel.SelectStrategyFactory) -> <init>
    82:83:void <init>(int,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider) -> <init>
    87:88:void <init>(int,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider,io.netty.channel.SelectStrategyFactory) -> <init>
    109:112:void setIoRatio(int) -> setIoRatio
    126:127:io.netty.channel.EventLoop newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    36:36:io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
io.netty.channel.nio.NioTask -> io.netty.channel.nio.NioTask:
    void channelReady(java.nio.channels.SelectableChannel,java.nio.channels.SelectionKey) -> channelReady
    void channelUnregistered(java.nio.channels.SelectableChannel,java.lang.Throwable) -> channelUnregistered
io.netty.channel.nio.SelectedSelectionKeySet -> io.netty.channel.nio.SelectedSelectionKeySet:
    java.nio.channels.SelectionKey[] keys -> keys
    int size -> size
    28:30:void <init>() -> <init>
    34:43:boolean add(java.nio.channels.SelectionKey) -> add
    48:48:int size() -> size
    53:53:boolean remove(java.lang.Object) -> remove
    58:58:boolean contains(java.lang.Object) -> contains
    63:63:java.util.Iterator iterator() -> iterator
    67:68:void reset() -> reset
    71:73:void reset(int) -> reset
    76:79:void increaseCapacity() -> increaseCapacity
    23:23:boolean add(java.lang.Object) -> add
io.netty.channel.nio.SelectedSelectionKeySetSelector -> io.netty.channel.nio.SelectedSelectionKeySetSelector:
    io.netty.channel.nio.SelectedSelectionKeySet selectionKeys -> selectionKeys
    java.nio.channels.Selector delegate -> delegate
    28:31:void <init>(java.nio.channels.Selector,io.netty.channel.nio.SelectedSelectionKeySet) -> <init>
    35:35:boolean isOpen() -> isOpen
    40:40:java.nio.channels.spi.SelectorProvider provider() -> provider
    45:45:java.util.Set keys() -> keys
    50:50:java.util.Set selectedKeys() -> selectedKeys
    55:56:int selectNow() -> selectNow
    61:62:int select(long) -> select
    67:68:int select() -> select
    73:73:java.nio.channels.Selector wakeup() -> wakeup
    78:79:void close() -> close
io.netty.channel.socket.ChannelInputShutdownEvent -> io.netty.channel.socket.ChannelInputShutdownEvent:
    io.netty.channel.socket.ChannelInputShutdownEvent INSTANCE -> INSTANCE
    35:35:void <init>() -> <init>
    33:33:void <clinit>() -> <clinit>
io.netty.channel.socket.ChannelInputShutdownReadComplete -> io.netty.channel.socket.ChannelInputShutdownReadComplete:
    io.netty.channel.socket.ChannelInputShutdownReadComplete INSTANCE -> INSTANCE
    25:26:void <init>() -> <init>
    23:23:void <clinit>() -> <clinit>
io.netty.channel.socket.ChannelOutputShutdownEvent -> io.netty.channel.socket.ChannelOutputShutdownEvent:
    io.netty.channel.socket.ChannelOutputShutdownEvent INSTANCE -> INSTANCE
    31:32:void <init>() -> <init>
    29:29:void <clinit>() -> <clinit>
io.netty.channel.socket.ChannelOutputShutdownException -> io.netty.channel.socket.ChannelOutputShutdownException:
    32:33:void <init>(java.lang.String) -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.netty.channel.socket.DatagramChannel -> io.netty.channel.socket.DatagramChannel:
    io.netty.channel.socket.DatagramChannelConfig config() -> config
io.netty.channel.socket.DatagramChannelConfig -> io.netty.channel.socket.DatagramChannelConfig:
    io.netty.channel.socket.DatagramChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
io.netty.channel.socket.DatagramPacket -> io.netty.channel.socket.DatagramPacket:
    34:35:void <init>(io.netty.buffer.ByteBuf,java.net.InetSocketAddress) -> <init>
    42:43:void <init>(io.netty.buffer.ByteBuf,java.net.InetSocketAddress,java.net.InetSocketAddress) -> <init>
    67:68:io.netty.channel.socket.DatagramPacket retain() -> retain
    73:74:io.netty.channel.socket.DatagramPacket retain(int) -> retain
    79:80:io.netty.channel.socket.DatagramPacket touch() -> touch
    85:86:io.netty.channel.socket.DatagramPacket touch(java.lang.Object) -> touch
    27:27:io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    27:27:io.netty.channel.AddressedEnvelope touch() -> touch
    27:27:io.netty.channel.AddressedEnvelope retain(int) -> retain
    27:27:io.netty.channel.AddressedEnvelope retain() -> retain
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
    27:27:io.netty.buffer.ByteBuf content() -> content
io.netty.channel.socket.DefaultDatagramChannelConfig -> io.netty.channel.socket.DefaultDatagramChannelConfig:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.net.DatagramSocket javaSocket -> javaSocket
    boolean activeOnOpen -> activeOnOpen
    54:59:void <init>(io.netty.channel.socket.DatagramChannel,java.net.DatagramSocket) -> <init>
    68:69:java.util.Map getOptions() -> getOptions
    77:107:java.lang.Object getOption(io.netty.channel.ChannelOption) -> getOption
    113:139:boolean setOption(io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    143:147:void setActiveOnOpen(boolean) -> setActiveOnOpen
    152:154:boolean isBroadcast() -> isBroadcast
    162:178:io.netty.channel.socket.DatagramChannelConfig setBroadcast(boolean) -> setBroadcast
    183:190:java.net.InetAddress getInterface() -> getInterface
    196:205:io.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    210:217:boolean isLoopbackModeDisabled() -> isLoopbackModeDisabled
    223:232:io.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    237:244:java.net.NetworkInterface getNetworkInterface() -> getNetworkInterface
    250:259:io.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    265:267:boolean isReuseAddress() -> isReuseAddress
    274:278:io.netty.channel.socket.DatagramChannelConfig setReuseAddress(boolean) -> setReuseAddress
    284:286:int getReceiveBufferSize() -> getReceiveBufferSize
    293:297:io.netty.channel.socket.DatagramChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    303:305:int getSendBufferSize() -> getSendBufferSize
    312:316:io.netty.channel.socket.DatagramChannelConfig setSendBufferSize(int) -> setSendBufferSize
    321:328:int getTimeToLive() -> getTimeToLive
    334:343:io.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    349:351:int getTrafficClass() -> getTrafficClass
    358:362:io.netty.channel.socket.DatagramChannelConfig setTrafficClass(int) -> setTrafficClass
    367:368:io.netty.channel.socket.DatagramChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    373:374:io.netty.channel.socket.DatagramChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    380:381:io.netty.channel.socket.DatagramChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    386:387:io.netty.channel.socket.DatagramChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    392:393:io.netty.channel.socket.DatagramChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    398:399:io.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    404:405:io.netty.channel.socket.DatagramChannelConfig setAutoClose(boolean) -> setAutoClose
    410:411:io.netty.channel.socket.DatagramChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    416:417:io.netty.channel.socket.DatagramChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    422:423:io.netty.channel.socket.DatagramChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    428:429:io.netty.channel.socket.DatagramChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    43:43:io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    43:43:io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    43:43:io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    43:43:io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    43:43:io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    43:43:io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    43:43:io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    43:43:io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    43:43:io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    43:43:io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    43:43:io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    45:45:void <clinit>() -> <clinit>
io.netty.channel.socket.DefaultServerSocketChannelConfig -> io.netty.channel.socket.DefaultServerSocketChannelConfig:
    java.net.ServerSocket javaSocket -> javaSocket
    int backlog -> backlog
    42:53:void <init>(io.netty.channel.socket.ServerSocketChannel,java.net.ServerSocket) -> <init>
    57:57:java.util.Map getOptions() -> getOptions
    63:73:java.lang.Object getOption(io.netty.channel.ChannelOption) -> getOption
    78:90:boolean setOption(io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    96:98:boolean isReuseAddress() -> isReuseAddress
    105:109:io.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    115:117:int getReceiveBufferSize() -> getReceiveBufferSize
    124:128:io.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    139:139:int getBacklog() -> getBacklog
    144:148:io.netty.channel.socket.ServerSocketChannelConfig setBacklog(int) -> setBacklog
    153:154:io.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    160:161:io.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    166:167:io.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    172:173:io.netty.channel.socket.ServerSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    178:179:io.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    184:185:io.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    190:191:io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    196:197:io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    202:203:io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    208:209:io.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    38:38:io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    38:38:io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    38:38:io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    38:38:io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    38:38:io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    38:38:io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    38:38:io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    38:38:io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    38:38:io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    38:38:io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
io.netty.channel.socket.DefaultSocketChannelConfig -> io.netty.channel.socket.DefaultSocketChannelConfig:
    java.net.Socket javaSocket -> javaSocket
    boolean allowHalfClosure -> allowHalfClosure
    46:60:void <init>(io.netty.channel.socket.SocketChannel,java.net.Socket) -> <init>
    64:65:java.util.Map getOptions() -> getOptions
    73:98:java.lang.Object getOption(io.netty.channel.ChannelOption) -> getOption
    103:125:boolean setOption(io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    131:133:int getReceiveBufferSize() -> getReceiveBufferSize
    140:142:int getSendBufferSize() -> getSendBufferSize
    149:151:int getSoLinger() -> getSoLinger
    158:160:int getTrafficClass() -> getTrafficClass
    167:169:boolean isKeepAlive() -> isKeepAlive
    176:178:boolean isReuseAddress() -> isReuseAddress
    185:187:boolean isTcpNoDelay() -> isTcpNoDelay
    194:198:io.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    211:215:io.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    221:225:io.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    231:235:io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    241:249:io.netty.channel.socket.SocketChannelConfig setSoLinger(int) -> setSoLinger
    255:259:io.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    265:269:io.netty.channel.socket.SocketChannelConfig setTrafficClass(int) -> setTrafficClass
    274:274:boolean isAllowHalfClosure() -> isAllowHalfClosure
    279:280:io.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    285:286:io.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    292:293:io.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    298:299:io.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    304:305:io.netty.channel.socket.SocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    310:311:io.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    316:317:io.netty.channel.socket.SocketChannelConfig setAutoRead(boolean) -> setAutoRead
    322:323:io.netty.channel.socket.SocketChannelConfig setAutoClose(boolean) -> setAutoClose
    328:329:io.netty.channel.socket.SocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    334:335:io.netty.channel.socket.SocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    340:341:io.netty.channel.socket.SocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    346:347:io.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    36:36:io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    36:36:io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    36:36:io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    36:36:io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    36:36:io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    36:36:io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    36:36:io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    36:36:io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    36:36:io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    36:36:io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    36:36:io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
io.netty.channel.socket.DuplexChannel -> io.netty.channel.socket.DuplexChannel:
io.netty.channel.socket.InternetProtocolFamily -> io.netty.channel.socket.InternetProtocolFamily:
    io.netty.channel.socket.InternetProtocolFamily IPv4 -> IPv4
    io.netty.channel.socket.InternetProtocolFamily IPv6 -> IPv6
    java.lang.Class addressType -> addressType
    int addressNumber -> addressNumber
    java.net.InetAddress localHost -> localHost
    io.netty.channel.socket.InternetProtocolFamily[] $VALUES -> $VALUES
    27:27:io.netty.channel.socket.InternetProtocolFamily[] values() -> values
    27:27:io.netty.channel.socket.InternetProtocolFamily valueOf(java.lang.String) -> valueOf
    35:39:void <init>(java.lang.String,int,java.lang.Class,int,java.net.InetAddress) -> <init>
    45:45:java.lang.Class addressType() -> addressType
    54:54:int addressNumber() -> addressNumber
    61:61:java.net.InetAddress localhost() -> localhost
    27:29:void <clinit>() -> <clinit>
io.netty.channel.socket.ServerSocketChannel -> io.netty.channel.socket.ServerSocketChannel:
io.netty.channel.socket.ServerSocketChannelConfig -> io.netty.channel.socket.ServerSocketChannelConfig:
    int getBacklog() -> getBacklog
io.netty.channel.socket.SocketChannel -> io.netty.channel.socket.SocketChannel:
io.netty.channel.socket.SocketChannelConfig -> io.netty.channel.socket.SocketChannelConfig:
    int getSoLinger() -> getSoLinger
io.netty.channel.socket.nio.NioDatagramChannel -> io.netty.channel.socket.nio.NioDatagramChannel:
    io.netty.channel.ChannelMetadata METADATA -> METADATA
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> DEFAULT_SELECTOR_PROVIDER
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    io.netty.channel.socket.DatagramChannelConfig config -> config
    86:88:java.nio.channels.DatagramChannel newSocket(java.nio.channels.spi.SelectorProvider) -> newSocket
    116:117:void <init>() -> <init>
    148:150:void <init>(java.nio.channels.DatagramChannel) -> <init>
    154:154:io.netty.channel.ChannelMetadata metadata() -> metadata
    159:159:io.netty.channel.socket.DatagramChannelConfig config() -> config
    165:168:boolean isActive() -> isActive
    178:178:java.nio.channels.DatagramChannel javaChannel() -> javaChannel
    183:183:java.net.SocketAddress localAddress0() -> localAddress0
    188:188:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    193:194:void doBind(java.net.SocketAddress) -> doBind
    197:202:void doBind0(java.net.SocketAddress) -> doBind0
    207:218:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    225:225:void doFinishConnect() -> doFinishConnect
    230:231:void doDisconnect() -> doDisconnect
    235:236:void doClose() -> doClose
    240:265:int doReadMessages(java.util.List) -> doReadMessages
    274:296:boolean doWriteMessage(java.lang.Object,io.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    301:331:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    339:339:boolean isSingleDirectBuffer(io.netty.buffer.ByteBuf) -> isSingleDirectBuffer
    347:347:boolean continueOnWriteError() -> continueOnWriteError
    352:352:java.net.InetSocketAddress localAddress() -> localAddress
    357:357:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    594:595:void setReadPending(boolean) -> setReadPending
    598:599:void clearReadPending0() -> clearReadPending0
    605:608:boolean closeOnReadError(java.lang.Throwable) -> closeOnReadError
    62:62:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    62:62:java.net.SocketAddress remoteAddress() -> remoteAddress
    62:62:java.net.SocketAddress localAddress() -> localAddress
    62:62:io.netty.channel.ChannelConfig config() -> config
    65:72:void <clinit>() -> <clinit>
io.netty.channel.socket.nio.NioDatagramChannelConfig -> io.netty.channel.socket.nio.NioDatagramChannelConfig:
    java.lang.Object IP_MULTICAST_TTL -> IP_MULTICAST_TTL
    java.lang.Object IP_MULTICAST_IF -> IP_MULTICAST_IF
    java.lang.Object IP_MULTICAST_LOOP -> IP_MULTICAST_LOOP
    java.lang.reflect.Method GET_OPTION -> GET_OPTION
    java.lang.reflect.Method SET_OPTION -> SET_OPTION
    java.nio.channels.DatagramChannel javaChannel -> javaChannel
    115:117:void <init>(io.netty.channel.socket.nio.NioDatagramChannel,java.nio.channels.DatagramChannel) -> <init>
    121:121:int getTimeToLive() -> getTimeToLive
    126:127:io.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    132:140:java.net.InetAddress getInterface() -> getInterface
    147:151:io.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    156:156:java.net.NetworkInterface getNetworkInterface() -> getNetworkInterface
    161:162:io.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    167:167:boolean isLoopbackModeDisabled() -> isLoopbackModeDisabled
    172:173:io.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    178:179:io.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    184:185:void autoReadCleared() -> autoReadCleared
    188:194:java.lang.Object getOption0(java.lang.Object) -> getOption0
    200:209:void setOption0(java.lang.Object,java.lang.Object) -> setOption0
    34:34:io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    43:110:void <clinit>() -> <clinit>
io.netty.channel.socket.nio.NioServerSocketChannel -> io.netty.channel.socket.nio.NioServerSocketChannel:
    io.netty.channel.ChannelMetadata METADATA -> METADATA
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> DEFAULT_SELECTOR_PROVIDER
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.channel.socket.ServerSocketChannelConfig config -> config
    59:61:java.nio.channels.ServerSocketChannel newSocket(java.nio.channels.spi.SelectorProvider) -> newSocket
    72:73:void <init>() -> <init>
    86:88:void <init>(java.nio.channels.ServerSocketChannel) -> <init>
    92:92:java.net.InetSocketAddress localAddress() -> localAddress
    97:97:io.netty.channel.ChannelMetadata metadata() -> metadata
    102:102:io.netty.channel.socket.ServerSocketChannelConfig config() -> config
    107:107:boolean isActive() -> isActive
    112:112:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    117:117:java.nio.channels.ServerSocketChannel javaChannel() -> javaChannel
    122:122:java.net.SocketAddress localAddress0() -> localAddress0
    127:132:void doBind(java.net.SocketAddress) -> doBind
    136:137:void doClose() -> doClose
    141:158:int doReadMessages(java.util.List) -> doReadMessages
    165:165:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    170:170:void doFinishConnect() -> doFinishConnect
    175:175:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    180:180:void doDisconnect() -> doDisconnect
    185:185:boolean doWriteMessage(java.lang.Object,io.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    190:190:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    43:43:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    43:43:java.net.SocketAddress remoteAddress() -> remoteAddress
    43:43:java.net.SocketAddress localAddress() -> localAddress
    43:43:io.netty.channel.ChannelConfig config() -> config
    43:43:void access$100(io.netty.channel.socket.nio.NioServerSocketChannel) -> access$100
    46:49:void <clinit>() -> <clinit>
io.netty.channel.socket.nio.NioServerSocketChannel$1 -> io.netty.channel.socket.nio.NioServerSocketChannel$1:
io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig -> io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig:
    io.netty.channel.socket.nio.NioServerSocketChannel this$0 -> this$0
    194:196:void <init>(io.netty.channel.socket.nio.NioServerSocketChannel,io.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket) -> <init>
    200:201:void autoReadCleared() -> autoReadCleared
    193:193:void <init>(io.netty.channel.socket.nio.NioServerSocketChannel,io.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket,io.netty.channel.socket.nio.NioServerSocketChannel$1) -> <init>
io.netty.channel.socket.nio.NioSocketChannel -> io.netty.channel.socket.nio.NioSocketChannel:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> DEFAULT_SELECTOR_PROVIDER
    io.netty.channel.socket.SocketChannelConfig config -> config
    66:68:java.nio.channels.SocketChannel newSocket(java.nio.channels.spi.SelectorProvider) -> newSocket
    78:79:void <init>() -> <init>
    85:86:void <init>(java.nio.channels.spi.SelectorProvider) -> <init>
    92:93:void <init>(java.nio.channels.SocketChannel) -> <init>
    102:104:void <init>(io.netty.channel.Channel,java.nio.channels.SocketChannel) -> <init>
    108:108:io.netty.channel.socket.ServerSocketChannel parent() -> parent
    113:113:io.netty.channel.socket.SocketChannelConfig config() -> config
    118:118:java.nio.channels.SocketChannel javaChannel() -> javaChannel
    123:124:boolean isActive() -> isActive
    134:134:boolean isInputShutdown() -> isInputShutdown
    145:145:java.net.InetSocketAddress localAddress() -> localAddress
    150:150:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    156:161:void doShutdownOutput() -> doShutdownOutput
    186:186:io.netty.channel.ChannelFuture shutdownInput() -> shutdownInput
    191:191:boolean isInputShutdown0() -> isInputShutdown0
    196:207:io.netty.channel.ChannelFuture shutdownInput(io.netty.channel.ChannelPromise) -> shutdownInput
    264:269:void shutdownInput0(io.netty.channel.ChannelPromise) -> shutdownInput0
    272:277:void shutdownInput0() -> shutdownInput0
    281:281:java.net.SocketAddress localAddress0() -> localAddress0
    286:286:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    291:292:void doBind(java.net.SocketAddress) -> doBind
    295:300:void doBind0(java.net.SocketAddress) -> doBind0
    304:318:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    325:328:void doFinishConnect() -> doFinishConnect
    332:333:void doDisconnect() -> doDisconnect
    337:339:void doClose() -> doClose
    343:345:int doReadBytes(io.netty.buffer.ByteBuf) -> doReadBytes
    350:351:int doWriteBytes(io.netty.buffer.ByteBuf) -> doWriteBytes
    356:357:long doWriteFileRegion(io.netty.channel.FileRegion) -> doWriteFileRegion
    364:371:void adjustMaxBytesPerGatheringWrite(int,int,int) -> adjustMaxBytesPerGatheringWrite
    375:434:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    438:438:io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe() -> newUnsafe
    54:54:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    54:54:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    54:54:java.net.SocketAddress remoteAddress() -> remoteAddress
    54:54:java.net.SocketAddress localAddress() -> localAddress
    54:54:io.netty.channel.Channel parent() -> parent
    54:54:io.netty.channel.ChannelConfig config() -> config
    54:54:void access$100(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.ChannelPromise) -> access$100
    54:54:void access$500(io.netty.channel.socket.nio.NioSocketChannel) -> access$500
    54:54:void access$600(io.netty.channel.socket.nio.NioSocketChannel) -> access$600
    55:56:void <clinit>() -> <clinit>
io.netty.channel.socket.nio.NioSocketChannel$1 -> io.netty.channel.socket.nio.NioSocketChannel$1:
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    177:178:void run() -> run
io.netty.channel.socket.nio.NioSocketChannel$2 -> io.netty.channel.socket.nio.NioSocketChannel$2:
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    200:200:void <init>(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.ChannelPromise) -> <init>
    203:204:void run() -> run
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig -> io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig:
    int maxBytesPerGatheringWrite -> maxBytesPerGatheringWrite
    io.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    463:468:void <init>(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.socket.nio.NioSocketChannel,java.net.Socket) -> <init>
    472:473:void autoReadCleared() -> autoReadCleared
    477:479:io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    483:484:void setMaxBytesPerGatheringWrite(int) -> setMaxBytesPerGatheringWrite
    487:487:int getMaxBytesPerGatheringWrite() -> getMaxBytesPerGatheringWrite
    492:496:void calculateMaxBytesPerGatheringWrite() -> calculateMaxBytesPerGatheringWrite
    462:462:io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    462:462:void <init>(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.socket.nio.NioSocketChannel,java.net.Socket,io.netty.channel.socket.nio.NioSocketChannel$1) -> <init>
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelUnsafe -> io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelUnsafe:
    io.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    441:441:void <init>(io.netty.channel.socket.nio.NioSocketChannel) -> <init>
    445:458:java.util.concurrent.Executor prepareToClose() -> prepareToClose
    441:441:void <init>(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.socket.nio.NioSocketChannel$1) -> <init>
io.netty.handler.codec.ByteToMessageDecoder -> io.netty.handler.codec.ByteToMessageDecoder:
    io.netty.handler.codec.ByteToMessageDecoder$Cumulator MERGE_CUMULATOR -> MERGE_CUMULATOR
    io.netty.handler.codec.ByteToMessageDecoder$Cumulator COMPOSITE_CUMULATOR -> COMPOSITE_CUMULATOR
    byte STATE_INIT -> STATE_INIT
    byte STATE_CALLING_CHILD_DECODE -> STATE_CALLING_CHILD_DECODE
    byte STATE_HANDLER_REMOVED_PENDING -> STATE_HANDLER_REMOVED_PENDING
    io.netty.buffer.ByteBuf cumulation -> cumulation
    io.netty.handler.codec.ByteToMessageDecoder$Cumulator cumulator -> cumulator
    boolean singleDecode -> singleDecode
    boolean decodeWasNull -> decodeWasNull
    boolean first -> first
    byte decodeState -> decodeState
    int discardAfterReads -> discardAfterReads
    int numReads -> numReads
    137:155:void <init>() -> <init>
    164:165:void setSingleDecode(boolean) -> setSingleDecode
    174:174:boolean isSingleDecode() -> isSingleDecode
    181:185:void setCumulator(io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> setCumulator
    192:196:void setDiscardAfterReads(int) -> setDiscardAfterReads
    205:205:int actualReadableBytes() -> actualReadableBytes
    214:217:io.netty.buffer.ByteBuf internalBuffer() -> internalBuffer
    223:245:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    251:251:void handlerRemoved0(io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    255:290:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    296:303:void fireChannelRead(io.netty.channel.ChannelHandlerContext,java.util.List,int) -> fireChannelRead
    309:312:void fireChannelRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.CodecOutputList,int) -> fireChannelRead
    316:325:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    328:338:void discardSomeReadBytes() -> discardSomeReadBytes
    342:343:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    347:354:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    357:384:void channelInputClosed(io.netty.channel.ChannelHandlerContext,boolean) -> channelInputClosed
    391:397:void channelInputClosed(io.netty.channel.ChannelHandlerContext,java.util.List) -> channelInputClosed
    409:461:void callDecode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> callDecode
    void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    487:497:void decodeRemovalReentryProtection(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decodeRemovalReentryProtection
    507:512:void decodeLast(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decodeLast
    515:519:io.netty.buffer.ByteBuf expandCumulation(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,int) -> expandCumulation
    75:103:void <clinit>() -> <clinit>
io.netty.handler.codec.ByteToMessageDecoder$1 -> io.netty.handler.codec.ByteToMessageDecoder$1:
    75:75:void <init>() -> <init>
    79:94:io.netty.buffer.ByteBuf cumulate(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> cumulate
io.netty.handler.codec.ByteToMessageDecoder$2 -> io.netty.handler.codec.ByteToMessageDecoder$2:
    103:103:void <init>() -> <init>
    107:128:io.netty.buffer.ByteBuf cumulate(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> cumulate
io.netty.handler.codec.ByteToMessageDecoder$Cumulator -> io.netty.handler.codec.ByteToMessageDecoder$Cumulator:
    io.netty.buffer.ByteBuf cumulate(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> cumulate
io.netty.handler.codec.CharSequenceValueConverter -> io.netty.handler.codec.CharSequenceValueConverter:
    io.netty.handler.codec.CharSequenceValueConverter INSTANCE -> INSTANCE
    26:26:void <init>() -> <init>
    31:34:java.lang.CharSequence convertObject(java.lang.Object) -> convertObject
    26:26:java.lang.Object convertObject(java.lang.Object) -> convertObject
    27:27:void <clinit>() -> <clinit>
io.netty.handler.codec.CodecException -> io.netty.handler.codec.CodecException:
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
io.netty.handler.codec.CodecOutputList -> io.netty.handler.codec.CodecOutputList:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    io.netty.util.Recycler$Handle handle -> handle
    int size -> size
    java.lang.Object[] array -> array
    boolean insertSinceRecycled -> insertSinceRecycled
    38:38:io.netty.handler.codec.CodecOutputList newInstance() -> newInstance
    44:49:void <init>(io.netty.util.Recycler$Handle) -> <init>
    53:54:java.lang.Object get(int) -> get
    59:59:int size() -> size
    64:73:boolean add(java.lang.Object) -> add
    78:83:java.lang.Object set(int,java.lang.Object) -> set
    88:101:void add(int,java.lang.Object) -> add
    105:114:java.lang.Object remove(int) -> remove
    121:122:void clear() -> clear
    128:128:boolean insertSinceRecycled() -> insertSinceRecycled
    135:141:void recycle() -> recycle
    147:147:java.lang.Object getUnsafe(int) -> getUnsafe
    151:154:void checkIndex(int) -> checkIndex
    157:159:void insert(int,java.lang.Object) -> insert
    163:173:void expandArray() -> expandArray
    28:28:void <init>(io.netty.util.Recycler$Handle,io.netty.handler.codec.CodecOutputList$1) -> <init>
    30:30:void <clinit>() -> <clinit>
io.netty.handler.codec.CodecOutputList$1 -> io.netty.handler.codec.CodecOutputList$1:
    30:30:void <init>() -> <init>
    33:33:io.netty.handler.codec.CodecOutputList newObject(io.netty.util.Recycler$Handle) -> newObject
    30:30:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.handler.codec.CorruptedFrameException -> io.netty.handler.codec.CorruptedFrameException:
    29:30:void <init>() -> <init>
    43:44:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.DateFormatter -> io.netty.handler.codec.DateFormatter:
    java.util.BitSet DELIMITERS -> DELIMITERS
    java.lang.String[] DAY_OF_WEEK_TO_SHORT_NAME -> DAY_OF_WEEK_TO_SHORT_NAME
    java.lang.String[] CALENDAR_MONTH_TO_SHORT_NAME -> CALENDAR_MONTH_TO_SHORT_NAME
    io.netty.util.concurrent.FastThreadLocal INSTANCES -> INSTANCES
    java.util.GregorianCalendar cal -> cal
    java.lang.StringBuilder sb -> sb
    boolean timeFound -> timeFound
    int hours -> hours
    int minutes -> minutes
    int seconds -> seconds
    boolean dayOfMonthFound -> dayOfMonthFound
    int dayOfMonth -> dayOfMonth
    boolean monthFound -> monthFound
    int month -> month
    boolean yearFound -> yearFound
    int year -> year
    114:114:java.lang.String format(java.util.Date) -> format
    128:130:io.netty.handler.codec.DateFormatter formatter() -> formatter
    146:161:void <init>() -> <init>
    164:176:void reset() -> reset
    424:425:java.lang.String format0(java.util.Date) -> format0
    429:437:java.lang.StringBuilder append0(java.util.Date,java.lang.StringBuilder) -> append0
    441:444:java.lang.StringBuilder appendZeroLeftPadded(int,java.lang.StringBuilder) -> appendZeroLeftPadded
    46:46:void <init>(io.netty.handler.codec.DateFormatter$1) -> <init>
    48:71:void <clinit>() -> <clinit>
io.netty.handler.codec.DateFormatter$1 -> io.netty.handler.codec.DateFormatter$1:
    72:72:void <init>() -> <init>
    75:75:io.netty.handler.codec.DateFormatter initialValue() -> initialValue
    72:72:java.lang.Object initialValue() -> initialValue
io.netty.handler.codec.DecoderException -> io.netty.handler.codec.DecoderException:
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
io.netty.handler.codec.DecoderResult -> io.netty.handler.codec.DecoderResult:
    io.netty.util.Signal SIGNAL_UNFINISHED -> SIGNAL_UNFINISHED
    io.netty.util.Signal SIGNAL_SUCCESS -> SIGNAL_SUCCESS
    io.netty.handler.codec.DecoderResult UNFINISHED -> UNFINISHED
    io.netty.handler.codec.DecoderResult SUCCESS -> SUCCESS
    java.lang.Throwable cause -> cause
    29:32:io.netty.handler.codec.DecoderResult failure(java.lang.Throwable) -> failure
    37:42:void <init>(java.lang.Throwable) -> <init>
    45:45:boolean isFinished() -> isFinished
    49:49:boolean isSuccess() -> isSuccess
    53:53:boolean isFailure() -> isFailure
    57:60:java.lang.Throwable cause() -> cause
    66:78:java.lang.String toString() -> toString
    22:26:void <clinit>() -> <clinit>
io.netty.handler.codec.DecoderResultProvider -> io.netty.handler.codec.DecoderResultProvider:
    io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
io.netty.handler.codec.DefaultHeaders -> io.netty.handler.codec.DefaultHeaders:
    io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries -> entries
    io.netty.handler.codec.DefaultHeaders$HeaderEntry head -> head
    byte hashMask -> hashMask
    io.netty.handler.codec.ValueConverter valueConverter -> valueConverter
    io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator -> nameValidator
    io.netty.util.HashingStrategy hashingStrategy -> hashingStrategy
    int size -> size
    87:88:void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter) -> <init>
    92:93:void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
    105:114:void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator,int) -> <init>
    118:132:java.lang.Object get(java.lang.Object) -> get
    146:147:java.lang.Object getAndRemove(java.lang.Object) -> getAndRemove
    161:174:java.util.List getAll(java.lang.Object) -> getAll
    183:183:java.util.Iterator valueIterator(java.lang.Object) -> valueIterator
    195:195:boolean contains(java.lang.Object) -> contains
    251:251:boolean contains(java.lang.Object,java.lang.Object) -> contains
    255:266:boolean contains(java.lang.Object,java.lang.Object,io.netty.util.HashingStrategy) -> contains
    271:271:int size() -> size
    276:276:boolean isEmpty() -> isEmpty
    281:290:java.util.Set names() -> names
    295:300:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> add
    305:311:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> add
    327:327:io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object) -> addObject
    332:335:io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Iterable) -> addObject
    393:397:io.netty.handler.codec.Headers add(io.netty.handler.codec.Headers) -> add
    401:426:void addImpl(io.netty.handler.codec.Headers) -> addImpl
    430:436:io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object) -> set
    441:455:io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> set
    479:481:io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object) -> setObject
    486:499:io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Iterable) -> setObject
    567:571:io.netty.handler.codec.Headers set(io.netty.handler.codec.Headers) -> set
    587:587:boolean remove(java.lang.Object) -> remove
    592:595:io.netty.handler.codec.Headers clear() -> clear
    600:600:java.util.Iterator iterator() -> iterator
    829:833:boolean equals(java.lang.Object) -> equals
    839:839:int hashCode() -> hashCode
    850:870:boolean equals(io.netty.handler.codec.Headers,io.netty.util.HashingStrategy) -> equals
    879:887:int hashCode(io.netty.util.HashingStrategy) -> hashCode
    892:892:java.lang.String toString() -> toString
    896:896:io.netty.handler.codec.DefaultHeaders$HeaderEntry newHeaderEntry(int,java.lang.Object,java.lang.Object,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> newHeaderEntry
    900:900:io.netty.handler.codec.ValueConverter valueConverter() -> valueConverter
    904:904:int index(int) -> index
    909:911:void add0(int,int,java.lang.Object,java.lang.Object) -> add0
    917:947:java.lang.Object remove0(int,int,java.lang.Object) -> remove0
    952:952:io.netty.handler.codec.Headers thisT() -> thisT
    43:43:io.netty.util.HashingStrategy access$100(io.netty.handler.codec.DefaultHeaders) -> access$100
    43:43:io.netty.handler.codec.DefaultHeaders$HeaderEntry[] access$200(io.netty.handler.codec.DefaultHeaders) -> access$200
    43:43:int access$300(io.netty.handler.codec.DefaultHeaders,int) -> access$300
io.netty.handler.codec.DefaultHeaders$1 -> io.netty.handler.codec.DefaultHeaders$1:
io.netty.handler.codec.DefaultHeaders$HeaderEntry -> io.netty.handler.codec.DefaultHeaders$HeaderEntry:
    int hash -> hash
    java.lang.Object key -> key
    java.lang.Object value -> value
    io.netty.handler.codec.DefaultHeaders$HeaderEntry next -> next
    io.netty.handler.codec.DefaultHeaders$HeaderEntry before -> before
    io.netty.handler.codec.DefaultHeaders$HeaderEntry after -> after
    1036:1039:void <init>(int,java.lang.Object) -> <init>
    1041:1050:void <init>(int,java.lang.Object,java.lang.Object,io.netty.handler.codec.DefaultHeaders$HeaderEntry,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> <init>
    1052:1056:void <init>() -> <init>
    1059:1061:void pointNeighborsToThis() -> pointNeighborsToThis
    1064:1064:io.netty.handler.codec.DefaultHeaders$HeaderEntry before() -> before
    1068:1068:io.netty.handler.codec.DefaultHeaders$HeaderEntry after() -> after
    1072:1074:void remove() -> remove
    1078:1078:java.lang.Object getKey() -> getKey
    1083:1083:java.lang.Object getValue() -> getValue
    1088:1091:java.lang.Object setValue(java.lang.Object) -> setValue
    1096:1096:java.lang.String toString() -> toString
io.netty.handler.codec.DefaultHeaders$HeaderIterator -> io.netty.handler.codec.DefaultHeaders$HeaderIterator:
    io.netty.handler.codec.DefaultHeaders$HeaderEntry current -> current
    io.netty.handler.codec.DefaultHeaders this$0 -> this$0
    955:956:void <init>(io.netty.handler.codec.DefaultHeaders) -> <init>
    960:960:boolean hasNext() -> hasNext
    965:971:java.util.Map$Entry next() -> next
    976:976:void remove() -> remove
    955:955:java.lang.Object next() -> next
    955:955:void <init>(io.netty.handler.codec.DefaultHeaders,io.netty.handler.codec.DefaultHeaders$1) -> <init>
io.netty.handler.codec.DefaultHeaders$NameValidator -> io.netty.handler.codec.DefaultHeaders$NameValidator:
    io.netty.handler.codec.DefaultHeaders$NameValidator NOT_NULL -> NOT_NULL
    void validateName(java.lang.Object) -> validateName
    67:67:void <clinit>() -> <clinit>
io.netty.handler.codec.DefaultHeaders$NameValidator$1 -> io.netty.handler.codec.DefaultHeaders$NameValidator$1:
    67:67:void <init>() -> <init>
    70:71:void validateName(java.lang.Object) -> validateName
io.netty.handler.codec.DefaultHeaders$ValueIterator -> io.netty.handler.codec.DefaultHeaders$ValueIterator:
    java.lang.Object name -> name
    int hash -> hash
    io.netty.handler.codec.DefaultHeaders$HeaderEntry next -> next
    io.netty.handler.codec.DefaultHeaders this$0 -> this$0
    985:989:void <init>(io.netty.handler.codec.DefaultHeaders,java.lang.Object) -> <init>
    993:993:boolean hasNext() -> hasNext
    998:1003:java.lang.Object next() -> next
    1008:1008:void remove() -> remove
    1012:1020:void calculateNext(io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> calculateNext
io.netty.handler.codec.DefaultHeadersImpl -> io.netty.handler.codec.DefaultHeadersImpl:
    27:28:void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
io.netty.handler.codec.EncoderException -> io.netty.handler.codec.EncoderException:
    28:29:void <init>() -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
io.netty.handler.codec.Headers -> io.netty.handler.codec.Headers:
    java.lang.Object get(java.lang.Object) -> get
    java.util.List getAll(java.lang.Object) -> getAll
    boolean contains(java.lang.Object) -> contains
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Set names() -> names
    io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> add
    io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> add
    io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object) -> set
    io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> set
    boolean remove(java.lang.Object) -> remove
    io.netty.handler.codec.Headers clear() -> clear
    java.util.Iterator iterator() -> iterator
io.netty.handler.codec.HeadersUtils -> io.netty.handler.codec.HeadersUtils:
    42:43:java.util.List getAllAsString(io.netty.handler.codec.Headers,java.lang.Object) -> getAllAsString
    64:65:java.lang.String getAsString(io.netty.handler.codec.Headers,java.lang.Object) -> getAsString
    73:73:java.util.Iterator iteratorAsString(java.lang.Iterable) -> iteratorAsString
    84:97:java.lang.String toString(java.lang.Class,java.util.Iterator,int) -> toString
    107:107:java.util.Set namesAsString(io.netty.handler.codec.Headers) -> namesAsString
io.netty.handler.codec.HeadersUtils$1 -> io.netty.handler.codec.HeadersUtils$1:
    java.util.List val$allNames -> val$allNames
    43:43:void <init>(java.util.List) -> <init>
    46:47:java.lang.String get(int) -> get
    52:52:int size() -> size
    43:43:java.lang.Object get(int) -> get
io.netty.handler.codec.HeadersUtils$CharSequenceDelegatingStringSet -> io.netty.handler.codec.HeadersUtils$CharSequenceDelegatingStringSet:
    197:198:void <init>(java.util.Set) -> <init>
    202:202:boolean add(java.lang.String) -> add
    207:207:boolean addAll(java.util.Collection) -> addAll
    195:195:boolean add(java.lang.Object) -> add
io.netty.handler.codec.HeadersUtils$DelegatingStringSet -> io.netty.handler.codec.HeadersUtils$DelegatingStringSet:
    java.util.Set allNames -> allNames
    214:216:void <init>(java.util.Set) -> <init>
    220:220:int size() -> size
    225:225:boolean isEmpty() -> isEmpty
    230:230:boolean contains(java.lang.Object) -> contains
    235:235:java.util.Iterator iterator() -> iterator
    240:240:boolean remove(java.lang.Object) -> remove
    245:246:void clear() -> clear
io.netty.handler.codec.HeadersUtils$StringEntry -> io.netty.handler.codec.HeadersUtils$StringEntry:
    java.util.Map$Entry entry -> entry
    java.lang.String name -> name
    java.lang.String value -> value
    138:140:void <init>(java.util.Map$Entry) -> <init>
    144:147:java.lang.String getKey() -> getKey
    152:155:java.lang.String getValue() -> getValue
    160:162:java.lang.String setValue(java.lang.String) -> setValue
    167:167:java.lang.String toString() -> toString
    133:133:java.lang.Object setValue(java.lang.Object) -> setValue
    133:133:java.lang.Object getValue() -> getValue
    133:133:java.lang.Object getKey() -> getKey
io.netty.handler.codec.HeadersUtils$StringEntryIterator -> io.netty.handler.codec.HeadersUtils$StringEntryIterator:
    java.util.Iterator iter -> iter
    113:115:void <init>(java.util.Iterator) -> <init>
    119:119:boolean hasNext() -> hasNext
    124:124:java.util.Map$Entry next() -> next
    129:130:void remove() -> remove
    110:110:java.lang.Object next() -> next
io.netty.handler.codec.HeadersUtils$StringIterator -> io.netty.handler.codec.HeadersUtils$StringIterator:
    java.util.Iterator iter -> iter
    174:176:void <init>(java.util.Iterator) -> <init>
    180:180:boolean hasNext() -> hasNext
    185:186:java.lang.String next() -> next
    191:192:void remove() -> remove
    171:171:java.lang.Object next() -> next
io.netty.handler.codec.MessageAggregationException -> io.netty.handler.codec.MessageAggregationException:
    26:26:void <init>() -> <init>
io.netty.handler.codec.MessageAggregator -> io.netty.handler.codec.MessageAggregator:
    int maxContentLength -> maxContentLength
    io.netty.buffer.ByteBufHolder currentMessage -> currentMessage
    boolean handlingOversizedMessage -> handlingOversizedMessage
    int maxCumulationBufferComponents -> maxCumulationBufferComponents
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    io.netty.channel.ChannelFutureListener continueResponseWriteListener -> continueResponseWriteListener
    60:75:void <init>(int) -> <init>
    84:87:void validateMaxContentLength(int) -> validateMaxContentLength
    92:99:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    boolean isStartMessage(java.lang.Object) -> isStartMessage
    boolean isContentMessage(java.lang.Object) -> isContentMessage
    boolean isLastContentMessage(io.netty.buffer.ByteBufHolder) -> isLastContentMessage
    boolean isAggregated(java.lang.Object) -> isAggregated
    143:143:int maxContentLength() -> maxContentLength
    195:313:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    316:319:void appendPartialContent(io.netty.buffer.CompositeByteBuf,io.netty.buffer.ByteBuf) -> appendPartialContent
    boolean isContentLengthInvalid(java.lang.Object,int) -> isContentLengthInvalid
    java.lang.Object newContinueResponse(java.lang.Object,int,io.netty.channel.ChannelPipeline) -> newContinueResponse
    boolean closeAfterContinueResponse(java.lang.Object) -> closeAfterContinueResponse
    boolean ignoreContentAfterContinueResponse(java.lang.Object) -> ignoreContentAfterContinueResponse
    io.netty.buffer.ByteBufHolder beginAggregation(java.lang.Object,io.netty.buffer.ByteBuf) -> beginAggregation
    372:372:void aggregate(io.netty.buffer.ByteBufHolder,io.netty.buffer.ByteBufHolder) -> aggregate
    377:377:void finishAggregation(io.netty.buffer.ByteBufHolder) -> finishAggregation
    380:388:void invokeHandleOversizedMessage(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> invokeHandleOversizedMessage
    398:400:void handleOversizedMessage(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleOversizedMessage
    407:411:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    417:421:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    425:426:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    431:437:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    440:445:void releaseCurrentMessage() -> releaseCurrentMessage
io.netty.handler.codec.MessageAggregator$1 -> io.netty.handler.codec.MessageAggregator$1:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.handler.codec.MessageAggregator this$0 -> this$0
    213:213:void <init>(io.netty.handler.codec.MessageAggregator,io.netty.channel.ChannelHandlerContext) -> <init>
    216:219:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    213:213:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.MessageToByteEncoder -> io.netty.handler.codec.MessageToByteEncoder:
    io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    boolean preferDirect -> preferDirect
    55:56:void <init>() -> <init>
    72:75:void <init>(boolean) -> <init>
    95:95:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    100:131:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    139:142:io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> allocateBuffer
    void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf) -> encode
io.netty.handler.codec.MessageToMessageCodec -> io.netty.handler.codec.MessageToMessageCodec:
    io.netty.handler.codec.MessageToMessageEncoder encoder -> encoder
    io.netty.handler.codec.MessageToMessageDecoder decoder -> decoder
    io.netty.util.internal.TypeParameterMatcher inboundMsgMatcher -> inboundMsgMatcher
    io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher -> outboundMsgMatcher
    57:95:void <init>() -> <init>
    57:107:void <init>(java.lang.Class,java.lang.Class) -> <init>
    111:112:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    116:117:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    125:125:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    134:134:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
io.netty.handler.codec.MessageToMessageCodec$1 -> io.netty.handler.codec.MessageToMessageCodec$1:
    io.netty.handler.codec.MessageToMessageCodec this$0 -> this$0
    57:57:void <init>(io.netty.handler.codec.MessageToMessageCodec) -> <init>
    61:61:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    67:68:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
io.netty.handler.codec.MessageToMessageCodec$2 -> io.netty.handler.codec.MessageToMessageCodec$2:
    io.netty.handler.codec.MessageToMessageCodec this$0 -> this$0
    71:71:void <init>(io.netty.handler.codec.MessageToMessageCodec) -> <init>
    75:75:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    81:82:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
io.netty.handler.codec.MessageToMessageDecoder -> io.netty.handler.codec.MessageToMessageDecoder:
    io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    59:61:void <init>() -> <init>
    77:77:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    82:106:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
io.netty.handler.codec.MessageToMessageEncoder -> io.netty.handler.codec.MessageToMessageEncoder:
    io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    58:60:void <init>() -> <init>
    67:69:void <init>(java.lang.Class) -> <init>
    76:76:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    81:131:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
io.netty.handler.codec.PrematureChannelClosureException -> io.netty.handler.codec.PrematureChannelClosureException:
    32:32:void <init>() -> <init>
    45:46:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.ReplayingDecoder -> io.netty.handler.codec.ReplayingDecoder:
    io.netty.util.Signal REPLAY -> REPLAY
    io.netty.handler.codec.ReplayingDecoderByteBuf replayable -> replayable
    java.lang.Object state -> state
    int checkpoint -> checkpoint
    280:281:void <init>() -> <init>
    272:288:void <init>(java.lang.Object) -> <init>
    294:295:void checkpoint() -> checkpoint
    302:304:void checkpoint(java.lang.Object) -> checkpoint
    311:311:java.lang.Object state() -> state
    319:321:java.lang.Object state(java.lang.Object) -> state
    327:339:void channelInputClosed(io.netty.channel.ChannelHandlerContext,java.util.List) -> channelInputClosed
    343:424:void callDecode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> callDecode
    270:270:void <clinit>() -> <clinit>
io.netty.handler.codec.ReplayingDecoderByteBuf -> io.netty.handler.codec.ReplayingDecoderByteBuf:
    io.netty.util.Signal REPLAY -> REPLAY
    io.netty.buffer.ByteBuf buffer -> buffer
    boolean terminated -> terminated
    io.netty.buffer.SwappedByteBuf swapped -> swapped
    io.netty.handler.codec.ReplayingDecoderByteBuf EMPTY_BUFFER -> EMPTY_BUFFER
    52:52:void <init>() -> <init>
    54:56:void <init>(io.netty.buffer.ByteBuf) -> <init>
    59:60:void setCumulation(io.netty.buffer.ByteBuf) -> setCumulation
    63:64:void terminate() -> terminate
    68:71:int capacity() -> capacity
    77:77:io.netty.buffer.ByteBuf capacity(int) -> capacity
    82:82:int maxCapacity() -> maxCapacity
    87:87:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    92:92:boolean isReadOnly() -> isReadOnly
    98:98:io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    103:103:boolean isDirect() -> isDirect
    108:108:boolean hasArray() -> hasArray
    113:113:byte[] array() -> array
    118:118:int arrayOffset() -> arrayOffset
    123:123:boolean hasMemoryAddress() -> hasMemoryAddress
    128:128:long memoryAddress() -> memoryAddress
    133:133:io.netty.buffer.ByteBuf clear() -> clear
    138:138:boolean equals(java.lang.Object) -> equals
    143:143:int compareTo(io.netty.buffer.ByteBuf) -> compareTo
    148:148:io.netty.buffer.ByteBuf copy() -> copy
    153:154:io.netty.buffer.ByteBuf copy(int,int) -> copy
    159:159:io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    164:164:io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    169:169:int ensureWritable(int,boolean) -> ensureWritable
    174:174:io.netty.buffer.ByteBuf duplicate() -> duplicate
    179:179:io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    190:191:byte getByte(int) -> getByte
    196:197:short getUnsignedByte(int) -> getUnsignedByte
    202:204:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    209:211:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    216:216:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    221:223:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> getBytes
    238:238:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    253:254:int getInt(int) -> getInt
    259:260:int getIntLE(int) -> getIntLE
    265:266:long getUnsignedInt(int) -> getUnsignedInt
    271:272:long getUnsignedIntLE(int) -> getUnsignedIntLE
    277:278:long getLong(int) -> getLong
    289:290:int getMedium(int) -> getMedium
    301:302:int getUnsignedMedium(int) -> getUnsignedMedium
    313:314:short getShort(int) -> getShort
    319:320:short getShortLE(int) -> getShortLE
    325:326:int getUnsignedShort(int) -> getUnsignedShort
    331:332:int getUnsignedShortLE(int) -> getUnsignedShortLE
    343:344:float getFloat(int) -> getFloat
    349:350:double getDouble(int) -> getDouble
    361:361:int hashCode() -> hashCode
    366:374:int indexOf(int,int,byte) -> indexOf
    412:416:int forEachByte(io.netty.util.ByteProcessor) -> forEachByte
    422:435:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    450:454:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> forEachByteDesc
    459:460:io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    470:470:java.nio.ByteOrder order() -> order
    475:486:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    491:491:boolean isReadable() -> isReadable
    496:496:boolean isReadable(int) -> isReadable
    501:504:int readableBytes() -> readableBytes
    516:517:byte readByte() -> readByte
    522:523:short readUnsignedByte() -> readUnsignedByte
    528:530:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    535:537:io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    559:561:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> readBytes
    566:566:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    576:577:io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    582:583:io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    588:589:io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    599:599:int readerIndex() -> readerIndex
    604:605:io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    610:611:int readInt() -> readInt
    622:623:long readUnsignedInt() -> readUnsignedInt
    634:635:long readLong() -> readLong
    646:647:int readMedium() -> readMedium
    658:659:int readUnsignedMedium() -> readUnsignedMedium
    670:671:short readShort() -> readShort
    682:683:int readUnsignedShort() -> readUnsignedShort
    718:719:io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    734:734:io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    739:739:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    749:749:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    754:754:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> setBytes
    774:774:io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    779:779:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    789:789:io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    794:794:io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    804:804:io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    814:814:io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    819:819:io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    824:824:io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    829:829:io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    849:851:io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    856:856:io.netty.buffer.ByteBuf slice() -> slice
    861:861:io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    866:867:io.netty.buffer.ByteBuf slice(int,int) -> slice
    878:878:int nioBufferCount() -> nioBufferCount
    883:883:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    888:889:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    894:894:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    899:900:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    905:906:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    911:912:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    917:917:java.lang.String toString(java.nio.charset.Charset) -> toString
    922:927:java.lang.String toString() -> toString
    933:933:boolean isWritable() -> isWritable
    938:938:boolean isWritable(int) -> isWritable
    943:943:int writableBytes() -> writableBytes
    958:958:io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    963:963:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    968:968:io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    973:973:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    978:978:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> writeBytes
    988:988:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> writeBytes
    998:998:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    1008:1008:io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    1018:1018:io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    1028:1028:io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    1033:1033:io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    1038:1038:io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    1043:1043:int writerIndex() -> writerIndex
    1048:1048:io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    1053:1053:io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    1058:1058:io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    1063:1063:io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    1068:1068:io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    1073:1073:io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    1078:1078:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    1083:1083:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    1087:1090:void checkIndex(int,int) -> checkIndex
    1093:1096:void checkReadableBytes(int) -> checkReadableBytes
    1100:1100:io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    1105:1105:int refCnt() -> refCnt
    1110:1110:io.netty.buffer.ByteBuf retain() -> retain
    1115:1115:io.netty.buffer.ByteBuf retain(int) -> retain
    1120:1121:io.netty.buffer.ByteBuf touch() -> touch
    1126:1127:io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    1132:1132:boolean release() -> release
    1137:1137:boolean release(int) -> release
    1142:1142:io.netty.buffer.ByteBuf unwrap() -> unwrap
    1146:1146:java.lang.UnsupportedOperationException reject() -> reject
    38:38:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    38:38:io.netty.util.ReferenceCounted touch() -> touch
    38:38:io.netty.util.ReferenceCounted retain(int) -> retain
    38:38:io.netty.util.ReferenceCounted retain() -> retain
    38:38:int compareTo(java.lang.Object) -> compareTo
    40:50:void <clinit>() -> <clinit>
io.netty.handler.codec.TooLongFrameException -> io.netty.handler.codec.TooLongFrameException:
    29:30:void <init>() -> <init>
    43:44:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.UnsupportedMessageTypeException -> io.netty.handler.codec.UnsupportedMessageTypeException:
    27:29:void <init>(java.lang.Object,java.lang.Class[]) -> <init>
    31:31:void <init>() -> <init>
    38:39:void <init>(java.lang.String) -> <init>
    47:61:java.lang.String message(java.lang.String,java.lang.Class[]) -> message
io.netty.handler.codec.UnsupportedValueConverter -> io.netty.handler.codec.UnsupportedValueConverter:
    io.netty.handler.codec.UnsupportedValueConverter INSTANCE -> INSTANCE
    24:24:void <init>() -> <init>
    28:28:io.netty.handler.codec.UnsupportedValueConverter instance() -> instance
    33:33:java.lang.Object convertObject(java.lang.Object) -> convertObject
    23:23:void <clinit>() -> <clinit>
io.netty.handler.codec.ValueConverter -> io.netty.handler.codec.ValueConverter:
    java.lang.Object convertObject(java.lang.Object) -> convertObject
io.netty.handler.codec.base64.Base64 -> io.netty.handler.codec.base64.Base64:
    53:56:byte[] alphabet(io.netty.handler.codec.base64.Base64Dialect) -> alphabet
    60:63:byte[] decodabet(io.netty.handler.codec.base64.Base64Dialect) -> decodabet
    67:70:boolean breakLines(io.netty.handler.codec.base64.Base64Dialect) -> breakLines
    74:74:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf) -> encode
    78:78:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,io.netty.handler.codec.base64.Base64Dialect) -> encode
    82:82:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,boolean) -> encode
    87:93:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,boolean,io.netty.handler.codec.base64.Base64Dialect) -> encode
    111:111:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,int,int,boolean,io.netty.handler.codec.base64.Base64Dialect) -> encode
    116:151:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,int,int,boolean,io.netty.handler.codec.base64.Base64Dialect,io.netty.buffer.ByteBufAllocator) -> encode
    167:196:void encode3to4(io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf,int,byte[]) -> encode3to4
    201:210:int encodedBufferSize(int,boolean) -> encodedBufferSize
    214:214:int toInt(byte) -> toInt
    218:218:int toIntBE(short) -> toIntBE
    222:222:int toIntLE(short) -> toIntLE
    226:226:int toIntBE(int) -> toIntBE
    230:230:int toIntLE(int) -> toIntLE
    236:259:void encode3to4BigEndian(int,int,io.netty.buffer.ByteBuf,int,byte[]) -> encode3to4BigEndian
    264:287:void encode3to4LittleEndian(int,int,io.netty.buffer.ByteBuf,int,byte[]) -> encode3to4LittleEndian
    290:290:io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf) -> decode
    294:300:io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,io.netty.handler.codec.base64.Base64Dialect) -> decode
    310:310:io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,int,int,io.netty.handler.codec.base64.Base64Dialect) -> decode
    315:323:io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,int,int,io.netty.handler.codec.base64.Base64Dialect,io.netty.buffer.ByteBufAllocator) -> decode
    328:328:int decodedBufferSize(int) -> decodedBufferSize
    37:37:byte[] access$100(io.netty.handler.codec.base64.Base64Dialect) -> access$100
io.netty.handler.codec.base64.Base64$1 -> io.netty.handler.codec.base64.Base64$1:
io.netty.handler.codec.base64.Base64$Decoder -> io.netty.handler.codec.base64.Base64$Decoder:
    byte[] b4 -> b4
    int b4Posn -> b4Posn
    byte sbiCrop -> sbiCrop
    byte sbiDecode -> sbiDecode
    byte[] decodabet -> decodabet
    int outBuffPosn -> outBuffPosn
    io.netty.buffer.ByteBuf dest -> dest
    331:332:void <init>() -> <init>
    341:350:io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.base64.Base64Dialect) -> decode
    356:374:boolean process(byte) -> process
    379:447:int decode4to3(byte[],io.netty.buffer.ByteBuf,int,byte[]) -> decode4to3
    331:331:void <init>(io.netty.handler.codec.base64.Base64$1) -> <init>
io.netty.handler.codec.base64.Base64Dialect -> io.netty.handler.codec.base64.Base64Dialect:
    io.netty.handler.codec.base64.Base64Dialect STANDARD -> STANDARD
    io.netty.handler.codec.base64.Base64Dialect URL_SAFE -> URL_SAFE
    io.netty.handler.codec.base64.Base64Dialect ORDERED -> ORDERED
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    boolean breakLinesByDefault -> breakLinesByDefault
    io.netty.handler.codec.base64.Base64Dialect[] $VALUES -> $VALUES
    29:29:io.netty.handler.codec.base64.Base64Dialect[] values() -> values
    29:29:io.netty.handler.codec.base64.Base64Dialect valueOf(java.lang.String) -> valueOf
    202:206:void <init>(java.lang.String,int,byte[],byte[],boolean) -> <init>
    29:145:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.ByteBufChecksum -> io.netty.handler.codec.compression.ByteBufChecksum:
    java.lang.reflect.Method ADLER32_UPDATE_METHOD -> ADLER32_UPDATE_METHOD
    java.lang.reflect.Method CRC32_UPDATE_METHOD -> CRC32_UPDATE_METHOD
    io.netty.util.ByteProcessor updateProcessor -> updateProcessor
    35:46:void <init>() -> <init>
    55:64:java.lang.reflect.Method updateByteBuffer(java.util.zip.Checksum) -> updateByteBuffer
    68:75:io.netty.handler.codec.compression.ByteBufChecksum wrapChecksum(java.util.zip.Checksum) -> wrapChecksum
    82:87:void update(io.netty.buffer.ByteBuf,int,int) -> update
    42:44:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.ByteBufChecksum$1 -> io.netty.handler.codec.compression.ByteBufChecksum$1:
    io.netty.handler.codec.compression.ByteBufChecksum this$0 -> this$0
    46:46:void <init>(io.netty.handler.codec.compression.ByteBufChecksum) -> <init>
    49:50:boolean process(byte) -> process
io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum -> io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum:
    java.lang.reflect.Method method -> method
    93:95:void <init>(java.util.zip.Checksum,java.lang.reflect.Method) -> <init>
    99:108:void update(io.netty.buffer.ByteBuf,int,int) -> update
io.netty.handler.codec.compression.ByteBufChecksum$SlowByteBufChecksum -> io.netty.handler.codec.compression.ByteBufChecksum$SlowByteBufChecksum:
    java.util.zip.Checksum checksum -> checksum
    115:117:void <init>(java.util.zip.Checksum) -> <init>
    121:122:void update(int) -> update
    126:127:void update(byte[],int,int) -> update
    131:131:long getValue() -> getValue
    136:137:void reset() -> reset
io.netty.handler.codec.compression.CompressionException -> io.netty.handler.codec.compression.CompressionException:
    30:31:void <init>() -> <init>
    44:45:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.compression.CompressionUtil -> io.netty.handler.codec.compression.CompressionUtil:
    40:41:java.nio.ByteBuffer safeNioBuffer(io.netty.buffer.ByteBuf) -> safeNioBuffer
io.netty.handler.codec.compression.DecompressionException -> io.netty.handler.codec.compression.DecompressionException:
    30:31:void <init>() -> <init>
    37:38:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    44:45:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.compression.JZlibDecoder -> io.netty.handler.codec.compression.JZlibDecoder:
    com.jcraft.jzlib.Inflater z -> z
    byte[] dictionary -> dictionary
    boolean finished -> finished
    37:38:void <init>() -> <init>
    27:54:void <init>(io.netty.handler.codec.compression.ZlibWrapper) -> <init>
    87:172:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
io.netty.handler.codec.compression.JZlibEncoder -> io.netty.handler.codec.compression.JZlibEncoder:
    int wrapperOverhead -> wrapperOverhead
    com.jcraft.jzlib.Deflater z -> z
    boolean finished -> finished
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    50:51:void <init>() -> <init>
    66:67:void <init>(int) -> <init>
    93:94:void <init>(io.netty.handler.codec.compression.ZlibWrapper,int) -> <init>
    38:150:void <init>(io.netty.handler.codec.compression.ZlibWrapper,int,int,int) -> <init>
    281:338:void encode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> encode
    344:361:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    364:403:io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> finishEncode
    408:409:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    35:35:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf) -> encode
io.netty.handler.codec.compression.JZlibEncoder$2 -> io.netty.handler.codec.compression.JZlibEncoder$2:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.handler.codec.compression.JZlibEncoder this$0 -> this$0
    345:345:void <init>(io.netty.handler.codec.compression.JZlibEncoder,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    348:349:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    345:345:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.compression.JZlibEncoder$3 -> io.netty.handler.codec.compression.JZlibEncoder$3:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.handler.codec.compression.JZlibEncoder this$0 -> this$0
    354:354:void <init>(io.netty.handler.codec.compression.JZlibEncoder,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    357:358:void run() -> run
io.netty.handler.codec.compression.JdkZlibDecoder -> io.netty.handler.codec.compression.JdkZlibDecoder:
    java.util.zip.Inflater inflater -> inflater
    byte[] dictionary -> dictionary
    io.netty.handler.codec.compression.ByteBufChecksum crc -> crc
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState gzipState -> gzipState
    int flags -> flags
    int xlen -> xlen
    boolean finished -> finished
    boolean decideZlibOrNone -> decideZlibOrNone
    66:67:void <init>() -> <init>
    84:85:void <init>(io.netty.handler.codec.compression.ZlibWrapper) -> <init>
    54:113:void <init>(io.netty.handler.codec.compression.ZlibWrapper,byte[]) -> <init>
    122:223:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    227:231:void handlerRemoved0(io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    234:340:boolean readGZIPHeader(io.netty.buffer.ByteBuf) -> readGZIPHeader
    345:361:boolean readGZIPFooter(io.netty.buffer.ByteBuf) -> readGZIPFooter
    365:374:void verifyCrc(io.netty.buffer.ByteBuf) -> verifyCrc
    384:384:boolean looksLikeZlib(short) -> looksLikeZlib
io.netty.handler.codec.compression.JdkZlibDecoder$1 -> io.netty.handler.codec.compression.JdkZlibDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    int[] $SwitchMap$io$netty$handler$codec$compression$JdkZlibDecoder$GzipState -> $SwitchMap$io$netty$handler$codec$compression$JdkZlibDecoder$GzipState
    91:145:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.JdkZlibDecoder$GzipState -> io.netty.handler.codec.compression.JdkZlibDecoder$GzipState:
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_START -> HEADER_START
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_END -> HEADER_END
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FLG_READ -> FLG_READ
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState XLEN_READ -> XLEN_READ
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_FNAME -> SKIP_FNAME
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_COMMENT -> SKIP_COMMENT
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState PROCESS_FHCRC -> PROCESS_FHCRC
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FOOTER_START -> FOOTER_START
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] $VALUES -> $VALUES
    43:43:io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] values() -> values
    43:43:io.netty.handler.codec.compression.JdkZlibDecoder$GzipState valueOf(java.lang.String) -> valueOf
    43:43:void <init>(java.lang.String,int) -> <init>
    43:51:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.JdkZlibEncoder -> io.netty.handler.codec.compression.JdkZlibEncoder:
    io.netty.handler.codec.compression.ZlibWrapper wrapper -> wrapper
    java.util.zip.Deflater deflater -> deflater
    boolean finished -> finished
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    java.util.zip.CRC32 crc -> crc
    byte[] gzipHeader -> gzipHeader
    boolean writeHeader -> writeHeader
    54:55:void <init>() -> <init>
    69:70:void <init>(int) -> <init>
    43:109:void <init>(io.netty.handler.codec.compression.ZlibWrapper,int) -> <init>
    192:231:void encode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> encode
    236:249:io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,boolean) -> allocateBuffer
    254:271:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    274:310:io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> finishEncode
    316:321:void deflate(io.netty.buffer.ByteBuf) -> deflate
    325:326:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    33:33:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf) -> encode
    33:33:io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> allocateBuffer
    44:44:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.JdkZlibEncoder$2 -> io.netty.handler.codec.compression.JdkZlibEncoder$2:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.handler.codec.compression.JdkZlibEncoder this$0 -> this$0
    255:255:void <init>(io.netty.handler.codec.compression.JdkZlibEncoder,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    258:259:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    255:255:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.compression.JdkZlibEncoder$3 -> io.netty.handler.codec.compression.JdkZlibEncoder$3:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.handler.codec.compression.JdkZlibEncoder this$0 -> this$0
    264:264:void <init>(io.netty.handler.codec.compression.JdkZlibEncoder,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    267:268:void run() -> run
io.netty.handler.codec.compression.JdkZlibEncoder$4 -> io.netty.handler.codec.compression.JdkZlibEncoder$4:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    238:238:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.ZlibCodecFactory -> io.netty.handler.codec.compression.ZlibCodecFactory:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    boolean noJdkZlibDecoder -> noJdkZlibDecoder
    boolean noJdkZlibEncoder -> noJdkZlibEncoder
    boolean supportsWindowSizeAndMemLevel -> supportsWindowSizeAndMemLevel
    79:83:io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(io.netty.handler.codec.compression.ZlibWrapper,int,int,int) -> newZlibEncoder
    121:124:io.netty.handler.codec.compression.ZlibDecoder newZlibDecoder(io.netty.handler.codec.compression.ZlibWrapper) -> newZlibDecoder
    136:138:void <init>() -> <init>
    27:45:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.ZlibDecoder -> io.netty.handler.codec.compression.ZlibDecoder:
    24:24:void <init>() -> <init>
io.netty.handler.codec.compression.ZlibEncoder -> io.netty.handler.codec.compression.ZlibEncoder:
    29:30:void <init>() -> <init>
io.netty.handler.codec.compression.ZlibUtil -> io.netty.handler.codec.compression.ZlibUtil:
    28:28:void fail(com.jcraft.jzlib.Inflater,java.lang.String,int) -> fail
    32:32:void fail(com.jcraft.jzlib.Deflater,java.lang.String,int) -> fail
    36:36:io.netty.handler.codec.compression.DecompressionException inflaterException(com.jcraft.jzlib.Inflater,java.lang.String,int) -> inflaterException
    40:40:io.netty.handler.codec.compression.CompressionException deflaterException(com.jcraft.jzlib.Deflater,java.lang.String,int) -> deflaterException
    45:61:com.jcraft.jzlib.JZlib$WrapperType convertWrapperType(io.netty.handler.codec.compression.ZlibWrapper) -> convertWrapperType
    66:80:int wrapperOverhead(io.netty.handler.codec.compression.ZlibWrapper) -> wrapperOverhead
io.netty.handler.codec.compression.ZlibUtil$1 -> io.netty.handler.codec.compression.ZlibUtil$1:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    45:45:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.ZlibWrapper -> io.netty.handler.codec.compression.ZlibWrapper:
    io.netty.handler.codec.compression.ZlibWrapper ZLIB -> ZLIB
    io.netty.handler.codec.compression.ZlibWrapper GZIP -> GZIP
    io.netty.handler.codec.compression.ZlibWrapper NONE -> NONE
    io.netty.handler.codec.compression.ZlibWrapper ZLIB_OR_NONE -> ZLIB_OR_NONE
    io.netty.handler.codec.compression.ZlibWrapper[] $VALUES -> $VALUES
    22:22:io.netty.handler.codec.compression.ZlibWrapper[] values() -> values
    22:22:io.netty.handler.codec.compression.ZlibWrapper valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:39:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.AbstractDnsMessage -> io.netty.handler.codec.dns.AbstractDnsMessage:
    io.netty.util.ResourceLeakDetector leakDetector -> leakDetector
    int SECTION_QUESTION -> SECTION_QUESTION
    io.netty.util.ResourceLeakTracker leak -> leak
    short id -> id
    io.netty.handler.codec.dns.DnsOpCode opCode -> opCode
    boolean recursionDesired -> recursionDesired
    byte z -> z
    java.lang.Object questions -> questions
    java.lang.Object answers -> answers
    java.lang.Object authorities -> authorities
    java.lang.Object additionals -> additionals
    boolean $assertionsDisabled -> $assertionsDisabled
    44:70:void <init>(int,io.netty.handler.codec.dns.DnsOpCode) -> <init>
    74:74:int id() -> id
    79:80:io.netty.handler.codec.dns.DnsMessage setId(int) -> setId
    85:85:io.netty.handler.codec.dns.DnsOpCode opCode() -> opCode
    90:91:io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> setOpCode
    96:96:boolean isRecursionDesired() -> isRecursionDesired
    101:102:io.netty.handler.codec.dns.DnsMessage setRecursionDesired(boolean) -> setRecursionDesired
    107:107:int z() -> z
    112:113:io.netty.handler.codec.dns.DnsMessage setZ(int) -> setZ
    118:118:int count(io.netty.handler.codec.dns.DnsSection) -> count
    122:132:int count(int) -> count
    146:146:io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection) -> recordAt
    150:165:io.netty.handler.codec.dns.DnsRecord recordAt(int) -> recordAt
    170:170:io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection,int) -> recordAt
    174:189:io.netty.handler.codec.dns.DnsRecord recordAt(int,int) -> recordAt
    232:233:io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    237:256:void addRecord(int,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    333:336:io.netty.handler.codec.dns.DnsMessage clear() -> clear
    340:353:void clear(int) -> clear
    357:357:io.netty.handler.codec.dns.DnsMessage touch() -> touch
    362:365:io.netty.handler.codec.dns.DnsMessage touch(java.lang.Object) -> touch
    370:370:io.netty.handler.codec.dns.DnsMessage retain() -> retain
    375:375:io.netty.handler.codec.dns.DnsMessage retain(int) -> retain
    380:387:void deallocate() -> deallocate
    391:412:boolean equals(java.lang.Object) -> equals
    417:417:int hashCode() -> hashCode
    421:432:java.lang.Object sectionAt(int) -> sectionAt
    436:451:void setSection(int,java.lang.Object) -> setSection
    455:455:int sectionOrdinal(io.netty.handler.codec.dns.DnsSection) -> sectionOrdinal
    459:463:io.netty.handler.codec.dns.DnsRecord checkQuestion(int,io.netty.handler.codec.dns.DnsRecord) -> checkQuestion
    468:468:io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object) -> castRecord
    472:472:java.util.ArrayList newRecordList() -> newRecordList
    35:35:io.netty.util.ReferenceCounted touch() -> touch
    35:35:io.netty.util.ReferenceCounted retain(int) -> retain
    35:35:io.netty.util.ReferenceCounted retain() -> retain
    35:35:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    35:41:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.AbstractDnsOptPseudoRrRecord -> io.netty.handler.codec.dns.AbstractDnsOptPseudoRrRecord:
    31:32:void <init>(int,int,int) -> <init>
    41:41:long packIntoLong(int,int) -> packIntoLong
    46:46:int extendedRcode() -> extendedRcode
    51:51:int version() -> version
    56:56:int flags() -> flags
    61:61:java.lang.String toString() -> toString
    65:76:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
io.netty.handler.codec.dns.AbstractDnsRecord -> io.netty.handler.codec.dns.AbstractDnsRecord:
    java.lang.String name -> name
    io.netty.handler.codec.dns.DnsRecordType type -> type
    short dnsClass -> dnsClass
    long timeToLive -> timeToLive
    int hashCode -> hashCode
    45:46:void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,long) -> <init>
    64:76:void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long) -> <init>
    79:82:java.lang.String appendTrailingDot(java.lang.String) -> appendTrailingDot
    87:87:java.lang.String name() -> name
    92:92:io.netty.handler.codec.dns.DnsRecordType type() -> type
    97:97:int dnsClass() -> dnsClass
    102:102:long timeToLive() -> timeToLive
    107:123:boolean equals(java.lang.Object) -> equals
    128:133:int hashCode() -> hashCode
    138:152:java.lang.String toString() -> toString
io.netty.handler.codec.dns.DatagramDnsQuery -> io.netty.handler.codec.dns.DatagramDnsQuery:
    java.net.InetSocketAddress sender -> sender
    java.net.InetSocketAddress recipient -> recipient
    43:44:void <init>(java.net.InetSocketAddress,java.net.InetSocketAddress,int) -> <init>
    56:64:void <init>(java.net.InetSocketAddress,java.net.InetSocketAddress,int,io.netty.handler.codec.dns.DnsOpCode) -> <init>
    68:68:io.netty.handler.codec.dns.DatagramDnsQuery content() -> content
    73:73:java.net.InetSocketAddress sender() -> sender
    78:78:java.net.InetSocketAddress recipient() -> recipient
    83:83:io.netty.handler.codec.dns.DatagramDnsQuery setId(int) -> setId
    88:88:io.netty.handler.codec.dns.DatagramDnsQuery setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> setOpCode
    93:93:io.netty.handler.codec.dns.DatagramDnsQuery setRecursionDesired(boolean) -> setRecursionDesired
    98:98:io.netty.handler.codec.dns.DatagramDnsQuery setZ(int) -> setZ
    108:108:io.netty.handler.codec.dns.DatagramDnsQuery addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    123:123:io.netty.handler.codec.dns.DatagramDnsQuery clear() -> clear
    128:128:io.netty.handler.codec.dns.DatagramDnsQuery touch() -> touch
    133:133:io.netty.handler.codec.dns.DatagramDnsQuery touch(java.lang.Object) -> touch
    138:138:io.netty.handler.codec.dns.DatagramDnsQuery retain() -> retain
    143:143:io.netty.handler.codec.dns.DatagramDnsQuery retain(int) -> retain
    148:178:boolean equals(java.lang.Object) -> equals
    183:190:int hashCode() -> hashCode
    27:27:io.netty.handler.codec.dns.DnsQuery retain(int) -> retain
    27:27:io.netty.handler.codec.dns.DnsQuery retain() -> retain
    27:27:io.netty.handler.codec.dns.DnsQuery touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.dns.DnsQuery touch() -> touch
    27:27:io.netty.handler.codec.dns.DnsQuery clear() -> clear
    27:27:io.netty.handler.codec.dns.DnsQuery addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    27:27:io.netty.handler.codec.dns.DnsQuery setZ(int) -> setZ
    27:27:io.netty.handler.codec.dns.DnsQuery setRecursionDesired(boolean) -> setRecursionDesired
    27:27:io.netty.handler.codec.dns.DnsQuery setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> setOpCode
    27:27:io.netty.handler.codec.dns.DnsQuery setId(int) -> setId
    27:27:io.netty.handler.codec.dns.DnsMessage retain(int) -> retain
    27:27:io.netty.handler.codec.dns.DnsMessage retain() -> retain
    27:27:io.netty.handler.codec.dns.DnsMessage touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.dns.DnsMessage touch() -> touch
    27:27:io.netty.handler.codec.dns.DnsMessage clear() -> clear
    27:27:io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    27:27:io.netty.handler.codec.dns.DnsMessage setZ(int) -> setZ
    27:27:io.netty.handler.codec.dns.DnsMessage setRecursionDesired(boolean) -> setRecursionDesired
    27:27:io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> setOpCode
    27:27:io.netty.handler.codec.dns.DnsMessage setId(int) -> setId
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
    27:27:io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    27:27:io.netty.channel.AddressedEnvelope touch() -> touch
    27:27:io.netty.channel.AddressedEnvelope retain(int) -> retain
    27:27:io.netty.channel.AddressedEnvelope retain() -> retain
    27:27:java.net.SocketAddress recipient() -> recipient
    27:27:java.net.SocketAddress sender() -> sender
    27:27:java.lang.Object content() -> content
io.netty.handler.codec.dns.DatagramDnsQueryEncoder -> io.netty.handler.codec.dns.DatagramDnsQueryEncoder:
    io.netty.handler.codec.dns.DnsRecordEncoder recordEncoder -> recordEncoder
    45:46:void <init>() -> <init>
    51:53:void <init>(io.netty.handler.codec.dns.DnsRecordEncoder) -> <init>
    60:77:void encode(io.netty.channel.ChannelHandlerContext,io.netty.channel.AddressedEnvelope,java.util.List) -> encode
    86:86:io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext,io.netty.channel.AddressedEnvelope) -> allocateBuffer
    96:107:void encodeHeader(io.netty.handler.codec.dns.DnsQuery,io.netty.buffer.ByteBuf) -> encodeHeader
    110:114:void encodeQuestions(io.netty.handler.codec.dns.DnsQuery,io.netty.buffer.ByteBuf) -> encodeQuestions
    117:121:void encodeRecords(io.netty.handler.codec.dns.DnsQuery,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf) -> encodeRecords
    35:35:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
io.netty.handler.codec.dns.DatagramDnsResponse -> io.netty.handler.codec.dns.DatagramDnsResponse:
    java.net.InetSocketAddress sender -> sender
    java.net.InetSocketAddress recipient -> recipient
    70:78:void <init>(java.net.InetSocketAddress,java.net.InetSocketAddress,int,io.netty.handler.codec.dns.DnsOpCode,io.netty.handler.codec.dns.DnsResponseCode) -> <init>
    82:82:io.netty.handler.codec.dns.DatagramDnsResponse content() -> content
    87:87:java.net.InetSocketAddress sender() -> sender
    92:92:java.net.InetSocketAddress recipient() -> recipient
    97:97:io.netty.handler.codec.dns.DatagramDnsResponse setAuthoritativeAnswer(boolean) -> setAuthoritativeAnswer
    102:102:io.netty.handler.codec.dns.DatagramDnsResponse setTruncated(boolean) -> setTruncated
    107:107:io.netty.handler.codec.dns.DatagramDnsResponse setRecursionAvailable(boolean) -> setRecursionAvailable
    112:112:io.netty.handler.codec.dns.DatagramDnsResponse setCode(io.netty.handler.codec.dns.DnsResponseCode) -> setCode
    117:117:io.netty.handler.codec.dns.DatagramDnsResponse setId(int) -> setId
    122:122:io.netty.handler.codec.dns.DatagramDnsResponse setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> setOpCode
    127:127:io.netty.handler.codec.dns.DatagramDnsResponse setRecursionDesired(boolean) -> setRecursionDesired
    132:132:io.netty.handler.codec.dns.DatagramDnsResponse setZ(int) -> setZ
    142:142:io.netty.handler.codec.dns.DatagramDnsResponse addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    157:157:io.netty.handler.codec.dns.DatagramDnsResponse clear() -> clear
    162:162:io.netty.handler.codec.dns.DatagramDnsResponse touch() -> touch
    167:167:io.netty.handler.codec.dns.DatagramDnsResponse touch(java.lang.Object) -> touch
    172:172:io.netty.handler.codec.dns.DatagramDnsResponse retain() -> retain
    177:177:io.netty.handler.codec.dns.DatagramDnsResponse retain(int) -> retain
    182:212:boolean equals(java.lang.Object) -> equals
    217:224:int hashCode() -> hashCode
    27:27:io.netty.handler.codec.dns.DnsResponse retain(int) -> retain
    27:27:io.netty.handler.codec.dns.DnsResponse retain() -> retain
    27:27:io.netty.handler.codec.dns.DnsResponse touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.dns.DnsResponse touch() -> touch
    27:27:io.netty.handler.codec.dns.DnsResponse clear() -> clear
    27:27:io.netty.handler.codec.dns.DnsResponse addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    27:27:io.netty.handler.codec.dns.DnsResponse setZ(int) -> setZ
    27:27:io.netty.handler.codec.dns.DnsResponse setRecursionDesired(boolean) -> setRecursionDesired
    27:27:io.netty.handler.codec.dns.DnsResponse setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> setOpCode
    27:27:io.netty.handler.codec.dns.DnsResponse setId(int) -> setId
    27:27:io.netty.handler.codec.dns.DnsResponse setCode(io.netty.handler.codec.dns.DnsResponseCode) -> setCode
    27:27:io.netty.handler.codec.dns.DnsResponse setRecursionAvailable(boolean) -> setRecursionAvailable
    27:27:io.netty.handler.codec.dns.DnsResponse setTruncated(boolean) -> setTruncated
    27:27:io.netty.handler.codec.dns.DnsResponse setAuthoritativeAnswer(boolean) -> setAuthoritativeAnswer
    27:27:io.netty.handler.codec.dns.DnsMessage retain(int) -> retain
    27:27:io.netty.handler.codec.dns.DnsMessage retain() -> retain
    27:27:io.netty.handler.codec.dns.DnsMessage touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.dns.DnsMessage touch() -> touch
    27:27:io.netty.handler.codec.dns.DnsMessage clear() -> clear
    27:27:io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    27:27:io.netty.handler.codec.dns.DnsMessage setZ(int) -> setZ
    27:27:io.netty.handler.codec.dns.DnsMessage setRecursionDesired(boolean) -> setRecursionDesired
    27:27:io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> setOpCode
    27:27:io.netty.handler.codec.dns.DnsMessage setId(int) -> setId
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
    27:27:io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    27:27:io.netty.channel.AddressedEnvelope touch() -> touch
    27:27:io.netty.channel.AddressedEnvelope retain(int) -> retain
    27:27:io.netty.channel.AddressedEnvelope retain() -> retain
    27:27:java.net.SocketAddress recipient() -> recipient
    27:27:java.net.SocketAddress sender() -> sender
    27:27:java.lang.Object content() -> content
io.netty.handler.codec.dns.DatagramDnsResponseDecoder -> io.netty.handler.codec.dns.DatagramDnsResponseDecoder:
    io.netty.handler.codec.dns.DnsRecordDecoder recordDecoder -> recordDecoder
    43:44:void <init>() -> <init>
    49:51:void <init>(io.netty.handler.codec.dns.DnsRecordDecoder) -> <init>
    55:77:void decode(io.netty.channel.ChannelHandlerContext,io.netty.channel.socket.DatagramPacket,java.util.List) -> decode
    80:98:io.netty.handler.codec.dns.DnsResponse newResponse(io.netty.channel.socket.DatagramPacket,io.netty.buffer.ByteBuf) -> newResponse
    102:105:void decodeQuestions(io.netty.handler.codec.dns.DnsResponse,io.netty.buffer.ByteBuf,int) -> decodeQuestions
    109:118:void decodeRecords(io.netty.handler.codec.dns.DnsResponse,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf,int) -> decodeRecords
    33:33:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
io.netty.handler.codec.dns.DefaultDnsPtrRecord -> io.netty.handler.codec.dns.DefaultDnsPtrRecord:
    java.lang.String hostname -> hostname
    46:48:void <init>(java.lang.String,int,long,java.lang.String) -> <init>
    52:52:java.lang.String hostname() -> hostname
    57:71:java.lang.String toString() -> toString
io.netty.handler.codec.dns.DefaultDnsQuery -> io.netty.handler.codec.dns.DefaultDnsQuery:
    42:43:void <init>(int,io.netty.handler.codec.dns.DnsOpCode) -> <init>
    47:47:io.netty.handler.codec.dns.DnsQuery setId(int) -> setId
    52:52:io.netty.handler.codec.dns.DnsQuery setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> setOpCode
    57:57:io.netty.handler.codec.dns.DnsQuery setRecursionDesired(boolean) -> setRecursionDesired
    62:62:io.netty.handler.codec.dns.DnsQuery setZ(int) -> setZ
    72:72:io.netty.handler.codec.dns.DnsQuery addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    87:87:io.netty.handler.codec.dns.DnsQuery clear() -> clear
    92:92:io.netty.handler.codec.dns.DnsQuery touch() -> touch
    97:97:io.netty.handler.codec.dns.DnsQuery touch(java.lang.Object) -> touch
    102:102:io.netty.handler.codec.dns.DnsQuery retain() -> retain
    107:107:io.netty.handler.codec.dns.DnsQuery retain(int) -> retain
    112:112:java.lang.String toString() -> toString
    23:23:io.netty.handler.codec.dns.DnsMessage retain(int) -> retain
    23:23:io.netty.handler.codec.dns.DnsMessage retain() -> retain
    23:23:io.netty.handler.codec.dns.DnsMessage touch(java.lang.Object) -> touch
    23:23:io.netty.handler.codec.dns.DnsMessage touch() -> touch
    23:23:io.netty.handler.codec.dns.DnsMessage clear() -> clear
    23:23:io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    23:23:io.netty.handler.codec.dns.DnsMessage setZ(int) -> setZ
    23:23:io.netty.handler.codec.dns.DnsMessage setRecursionDesired(boolean) -> setRecursionDesired
    23:23:io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> setOpCode
    23:23:io.netty.handler.codec.dns.DnsMessage setId(int) -> setId
    23:23:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    23:23:io.netty.util.ReferenceCounted touch() -> touch
    23:23:io.netty.util.ReferenceCounted retain(int) -> retain
    23:23:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.dns.DefaultDnsQuestion -> io.netty.handler.codec.dns.DefaultDnsQuestion:
    34:35:void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType) -> <init>
    53:54:void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int) -> <init>
    58:70:java.lang.String toString() -> toString
io.netty.handler.codec.dns.DefaultDnsRawRecord -> io.netty.handler.codec.dns.DefaultDnsRawRecord:
    io.netty.buffer.ByteBuf content -> content
    61:63:void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long,io.netty.buffer.ByteBuf) -> <init>
    67:67:io.netty.buffer.ByteBuf content() -> content
    92:92:int refCnt() -> refCnt
    97:98:io.netty.handler.codec.dns.DnsRawRecord retain() -> retain
    103:104:io.netty.handler.codec.dns.DnsRawRecord retain(int) -> retain
    109:109:boolean release() -> release
    114:114:boolean release(int) -> release
    119:120:io.netty.handler.codec.dns.DnsRawRecord touch() -> touch
    125:126:io.netty.handler.codec.dns.DnsRawRecord touch(java.lang.Object) -> touch
    131:153:java.lang.String toString() -> toString
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.dns.DefaultDnsRecordDecoder -> io.netty.handler.codec.dns.DefaultDnsRecordDecoder:
    36:36:void <init>() -> <init>
    40:43:io.netty.handler.codec.dns.DnsQuestion decodeQuestion(io.netty.buffer.ByteBuf) -> decodeQuestion
    48:73:io.netty.handler.codec.dns.DnsRecord decodeRecord(io.netty.buffer.ByteBuf) -> decodeRecord
    97:102:io.netty.handler.codec.dns.DnsRecord decodeRecord(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long,io.netty.buffer.ByteBuf,int,int) -> decodeRecord
    114:114:java.lang.String decodeName0(io.netty.buffer.ByteBuf) -> decodeName0
    126:189:java.lang.String decodeName(io.netty.buffer.ByteBuf) -> decodeName
io.netty.handler.codec.dns.DefaultDnsRecordEncoder -> io.netty.handler.codec.dns.DefaultDnsRecordEncoder:
    39:39:void <init>() -> <init>
    43:46:void encodeQuestion(io.netty.handler.codec.dns.DnsQuestion,io.netty.buffer.ByteBuf) -> encodeQuestion
    50:63:void encodeRecord(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf) -> encodeRecord
    66:70:void encodeRecord0(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf) -> encodeRecord0
    73:75:void encodePtrRecord(io.netty.handler.codec.dns.DnsPtrRecord,io.netty.buffer.ByteBuf) -> encodePtrRecord
    78:80:void encodeOptPseudoRecord(io.netty.handler.codec.dns.DnsOptPseudoRecord,io.netty.buffer.ByteBuf) -> encodeOptPseudoRecord
    83:126:void encodeOptEcsRecord(io.netty.handler.codec.dns.DnsOptEcsRecord,io.netty.buffer.ByteBuf) -> encodeOptEcsRecord
    130:130:int calculateEcsAddressLength(int,int) -> calculateEcsAddressLength
    134:141:void encodeRawRecord(io.netty.handler.codec.dns.DnsRawRecord,io.netty.buffer.ByteBuf) -> encodeRawRecord
    144:163:void encodeName(java.lang.String,io.netty.buffer.ByteBuf) -> encodeName
    166:186:byte padWithZeros(byte,int) -> padWithZeros
io.netty.handler.codec.dns.DefaultDnsResponse -> io.netty.handler.codec.dns.DefaultDnsResponse:
    boolean authoritativeAnswer -> authoritativeAnswer
    boolean truncated -> truncated
    boolean recursionAvailable -> recursionAvailable
    io.netty.handler.codec.dns.DnsResponseCode code -> code
    61:63:void <init>(int,io.netty.handler.codec.dns.DnsOpCode,io.netty.handler.codec.dns.DnsResponseCode) -> <init>
    67:67:boolean isAuthoritativeAnswer() -> isAuthoritativeAnswer
    72:73:io.netty.handler.codec.dns.DnsResponse setAuthoritativeAnswer(boolean) -> setAuthoritativeAnswer
    78:78:boolean isTruncated() -> isTruncated
    83:84:io.netty.handler.codec.dns.DnsResponse setTruncated(boolean) -> setTruncated
    89:89:boolean isRecursionAvailable() -> isRecursionAvailable
    94:95:io.netty.handler.codec.dns.DnsResponse setRecursionAvailable(boolean) -> setRecursionAvailable
    100:100:io.netty.handler.codec.dns.DnsResponseCode code() -> code
    105:106:io.netty.handler.codec.dns.DnsResponse setCode(io.netty.handler.codec.dns.DnsResponseCode) -> setCode
    111:111:io.netty.handler.codec.dns.DnsResponse setId(int) -> setId
    116:116:io.netty.handler.codec.dns.DnsResponse setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> setOpCode
    121:121:io.netty.handler.codec.dns.DnsResponse setRecursionDesired(boolean) -> setRecursionDesired
    126:126:io.netty.handler.codec.dns.DnsResponse setZ(int) -> setZ
    136:136:io.netty.handler.codec.dns.DnsResponse addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    151:151:io.netty.handler.codec.dns.DnsResponse clear() -> clear
    156:156:io.netty.handler.codec.dns.DnsResponse touch() -> touch
    161:161:io.netty.handler.codec.dns.DnsResponse touch(java.lang.Object) -> touch
    166:166:io.netty.handler.codec.dns.DnsResponse retain() -> retain
    171:171:io.netty.handler.codec.dns.DnsResponse retain(int) -> retain
    176:176:java.lang.String toString() -> toString
    25:25:io.netty.handler.codec.dns.DnsMessage retain(int) -> retain
    25:25:io.netty.handler.codec.dns.DnsMessage retain() -> retain
    25:25:io.netty.handler.codec.dns.DnsMessage touch(java.lang.Object) -> touch
    25:25:io.netty.handler.codec.dns.DnsMessage touch() -> touch
    25:25:io.netty.handler.codec.dns.DnsMessage clear() -> clear
    25:25:io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
    25:25:io.netty.handler.codec.dns.DnsMessage setZ(int) -> setZ
    25:25:io.netty.handler.codec.dns.DnsMessage setRecursionDesired(boolean) -> setRecursionDesired
    25:25:io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> setOpCode
    25:25:io.netty.handler.codec.dns.DnsMessage setId(int) -> setId
    25:25:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:io.netty.util.ReferenceCounted touch() -> touch
    25:25:io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.dns.DnsMessage -> io.netty.handler.codec.dns.DnsMessage:
    int id() -> id
    io.netty.handler.codec.dns.DnsOpCode opCode() -> opCode
    boolean isRecursionDesired() -> isRecursionDesired
    int z() -> z
    int count(io.netty.handler.codec.dns.DnsSection) -> count
    io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection) -> recordAt
    io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection,int) -> recordAt
io.netty.handler.codec.dns.DnsMessageUtil -> io.netty.handler.codec.dns.DnsMessageUtil:
    29:31:java.lang.StringBuilder appendQuery(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsQuery) -> appendQuery
    35:37:java.lang.StringBuilder appendResponse(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsResponse) -> appendResponse
    42:72:java.lang.StringBuilder appendRecordClass(java.lang.StringBuilder,int) -> appendRecordClass
    76:92:void appendQueryHeader(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsQuery) -> appendQueryHeader
    95:136:void appendResponseHeader(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsResponse) -> appendResponseHeader
    140:161:java.lang.StringBuilder appendAddresses(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage) -> appendAddresses
    165:169:void appendAllRecords(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage) -> appendAllRecords
    172:178:void appendRecords(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage,io.netty.handler.codec.dns.DnsSection) -> appendRecords
io.netty.handler.codec.dns.DnsOpCode -> io.netty.handler.codec.dns.DnsOpCode:
    io.netty.handler.codec.dns.DnsOpCode QUERY -> QUERY
    io.netty.handler.codec.dns.DnsOpCode IQUERY -> IQUERY
    io.netty.handler.codec.dns.DnsOpCode STATUS -> STATUS
    io.netty.handler.codec.dns.DnsOpCode NOTIFY -> NOTIFY
    io.netty.handler.codec.dns.DnsOpCode UPDATE -> UPDATE
    byte byteValue -> byteValue
    java.lang.String name -> name
    java.lang.String text -> text
    57:70:io.netty.handler.codec.dns.DnsOpCode valueOf(int) -> valueOf
    78:79:void <init>(int) -> <init>
    81:84:void <init>(int,java.lang.String) -> <init>
    87:87:byte byteValue() -> byteValue
    92:92:int hashCode() -> hashCode
    97:105:boolean equals(java.lang.Object) -> equals
    110:110:int compareTo(io.netty.handler.codec.dns.DnsOpCode) -> compareTo
    115:119:java.lang.String toString() -> toString
    25:25:int compareTo(java.lang.Object) -> compareTo
    31:51:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.DnsOptEcsRecord -> io.netty.handler.codec.dns.DnsOptEcsRecord:
    int sourcePrefixLength() -> sourcePrefixLength
    int scopePrefixLength() -> scopePrefixLength
    byte[] address() -> address
io.netty.handler.codec.dns.DnsOptPseudoRecord -> io.netty.handler.codec.dns.DnsOptPseudoRecord:
io.netty.handler.codec.dns.DnsPtrRecord -> io.netty.handler.codec.dns.DnsPtrRecord:
    java.lang.String hostname() -> hostname
io.netty.handler.codec.dns.DnsQuery -> io.netty.handler.codec.dns.DnsQuery:
io.netty.handler.codec.dns.DnsQuestion -> io.netty.handler.codec.dns.DnsQuestion:
io.netty.handler.codec.dns.DnsRawRecord -> io.netty.handler.codec.dns.DnsRawRecord:
io.netty.handler.codec.dns.DnsRecord -> io.netty.handler.codec.dns.DnsRecord:
    java.lang.String name() -> name
    io.netty.handler.codec.dns.DnsRecordType type() -> type
    int dnsClass() -> dnsClass
    long timeToLive() -> timeToLive
io.netty.handler.codec.dns.DnsRecordDecoder -> io.netty.handler.codec.dns.DnsRecordDecoder:
    io.netty.handler.codec.dns.DnsRecordDecoder DEFAULT -> DEFAULT
    io.netty.handler.codec.dns.DnsQuestion decodeQuestion(io.netty.buffer.ByteBuf) -> decodeQuestion
    io.netty.handler.codec.dns.DnsRecord decodeRecord(io.netty.buffer.ByteBuf) -> decodeRecord
    29:29:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.DnsRecordEncoder -> io.netty.handler.codec.dns.DnsRecordEncoder:
    io.netty.handler.codec.dns.DnsRecordEncoder DEFAULT -> DEFAULT
    void encodeQuestion(io.netty.handler.codec.dns.DnsQuestion,io.netty.buffer.ByteBuf) -> encodeQuestion
    void encodeRecord(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf) -> encodeRecord
    29:29:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.DnsRecordType -> io.netty.handler.codec.dns.DnsRecordType:
    io.netty.handler.codec.dns.DnsRecordType A -> A
    io.netty.handler.codec.dns.DnsRecordType NS -> NS
    io.netty.handler.codec.dns.DnsRecordType CNAME -> CNAME
    io.netty.handler.codec.dns.DnsRecordType SOA -> SOA
    io.netty.handler.codec.dns.DnsRecordType PTR -> PTR
    io.netty.handler.codec.dns.DnsRecordType MX -> MX
    io.netty.handler.codec.dns.DnsRecordType TXT -> TXT
    io.netty.handler.codec.dns.DnsRecordType RP -> RP
    io.netty.handler.codec.dns.DnsRecordType AFSDB -> AFSDB
    io.netty.handler.codec.dns.DnsRecordType SIG -> SIG
    io.netty.handler.codec.dns.DnsRecordType KEY -> KEY
    io.netty.handler.codec.dns.DnsRecordType AAAA -> AAAA
    io.netty.handler.codec.dns.DnsRecordType LOC -> LOC
    io.netty.handler.codec.dns.DnsRecordType SRV -> SRV
    io.netty.handler.codec.dns.DnsRecordType NAPTR -> NAPTR
    io.netty.handler.codec.dns.DnsRecordType KX -> KX
    io.netty.handler.codec.dns.DnsRecordType CERT -> CERT
    io.netty.handler.codec.dns.DnsRecordType DNAME -> DNAME
    io.netty.handler.codec.dns.DnsRecordType OPT -> OPT
    io.netty.handler.codec.dns.DnsRecordType APL -> APL
    io.netty.handler.codec.dns.DnsRecordType DS -> DS
    io.netty.handler.codec.dns.DnsRecordType SSHFP -> SSHFP
    io.netty.handler.codec.dns.DnsRecordType IPSECKEY -> IPSECKEY
    io.netty.handler.codec.dns.DnsRecordType RRSIG -> RRSIG
    io.netty.handler.codec.dns.DnsRecordType NSEC -> NSEC
    io.netty.handler.codec.dns.DnsRecordType DNSKEY -> DNSKEY
    io.netty.handler.codec.dns.DnsRecordType DHCID -> DHCID
    io.netty.handler.codec.dns.DnsRecordType NSEC3 -> NSEC3
    io.netty.handler.codec.dns.DnsRecordType NSEC3PARAM -> NSEC3PARAM
    io.netty.handler.codec.dns.DnsRecordType TLSA -> TLSA
    io.netty.handler.codec.dns.DnsRecordType HIP -> HIP
    io.netty.handler.codec.dns.DnsRecordType SPF -> SPF
    io.netty.handler.codec.dns.DnsRecordType TKEY -> TKEY
    io.netty.handler.codec.dns.DnsRecordType TSIG -> TSIG
    io.netty.handler.codec.dns.DnsRecordType IXFR -> IXFR
    io.netty.handler.codec.dns.DnsRecordType AXFR -> AXFR
    io.netty.handler.codec.dns.DnsRecordType ANY -> ANY
    io.netty.handler.codec.dns.DnsRecordType CAA -> CAA
    io.netty.handler.codec.dns.DnsRecordType TA -> TA
    io.netty.handler.codec.dns.DnsRecordType DLV -> DLV
    java.util.Map BY_NAME -> BY_NAME
    io.netty.util.collection.IntObjectHashMap BY_TYPE -> BY_TYPE
    java.lang.String EXPECTED -> EXPECTED
    int intValue -> intValue
    java.lang.String name -> name
    java.lang.String text -> text
    336:340:io.netty.handler.codec.dns.DnsRecordType valueOf(int) -> valueOf
    356:357:void <init>(int) -> <init>
    359:365:void <init>(int,java.lang.String) -> <init>
    371:371:java.lang.String name() -> name
    378:378:int intValue() -> intValue
    383:383:int hashCode() -> hashCode
    388:388:boolean equals(java.lang.Object) -> equals
    393:393:int compareTo(io.netty.handler.codec.dns.DnsRecordType) -> compareTo
    398:402:java.lang.String toString() -> toString
    27:27:int compareTo(java.lang.Object) -> compareTo
    35:333:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.DnsResponse -> io.netty.handler.codec.dns.DnsResponse:
    boolean isAuthoritativeAnswer() -> isAuthoritativeAnswer
    io.netty.handler.codec.dns.DnsResponse setAuthoritativeAnswer(boolean) -> setAuthoritativeAnswer
    boolean isTruncated() -> isTruncated
    io.netty.handler.codec.dns.DnsResponse setTruncated(boolean) -> setTruncated
    boolean isRecursionAvailable() -> isRecursionAvailable
    io.netty.handler.codec.dns.DnsResponse setRecursionAvailable(boolean) -> setRecursionAvailable
    io.netty.handler.codec.dns.DnsResponseCode code() -> code
    io.netty.handler.codec.dns.DnsResponse setRecursionDesired(boolean) -> setRecursionDesired
    io.netty.handler.codec.dns.DnsResponse setZ(int) -> setZ
    io.netty.handler.codec.dns.DnsResponse addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> addRecord
io.netty.handler.codec.dns.DnsResponseCode -> io.netty.handler.codec.dns.DnsResponseCode:
    io.netty.handler.codec.dns.DnsResponseCode NOERROR -> NOERROR
    io.netty.handler.codec.dns.DnsResponseCode FORMERR -> FORMERR
    io.netty.handler.codec.dns.DnsResponseCode SERVFAIL -> SERVFAIL
    io.netty.handler.codec.dns.DnsResponseCode NXDOMAIN -> NXDOMAIN
    io.netty.handler.codec.dns.DnsResponseCode NOTIMP -> NOTIMP
    io.netty.handler.codec.dns.DnsResponseCode REFUSED -> REFUSED
    io.netty.handler.codec.dns.DnsResponseCode YXDOMAIN -> YXDOMAIN
    io.netty.handler.codec.dns.DnsResponseCode YXRRSET -> YXRRSET
    io.netty.handler.codec.dns.DnsResponseCode NXRRSET -> NXRRSET
    io.netty.handler.codec.dns.DnsResponseCode NOTAUTH -> NOTAUTH
    io.netty.handler.codec.dns.DnsResponseCode NOTZONE -> NOTZONE
    io.netty.handler.codec.dns.DnsResponseCode BADVERS_OR_BADSIG -> BADVERS_OR_BADSIG
    io.netty.handler.codec.dns.DnsResponseCode BADKEY -> BADKEY
    io.netty.handler.codec.dns.DnsResponseCode BADTIME -> BADTIME
    io.netty.handler.codec.dns.DnsResponseCode BADMODE -> BADMODE
    io.netty.handler.codec.dns.DnsResponseCode BADNAME -> BADNAME
    io.netty.handler.codec.dns.DnsResponseCode BADALG -> BADALG
    int code -> code
    java.lang.String name -> name
    java.lang.String text -> text
    122:158:io.netty.handler.codec.dns.DnsResponseCode valueOf(int) -> valueOf
    167:168:void <init>(int) -> <init>
    170:177:void <init>(int,java.lang.String) -> <init>
    183:183:int intValue() -> intValue
    188:188:int compareTo(io.netty.handler.codec.dns.DnsResponseCode) -> compareTo
    193:193:int hashCode() -> hashCode
    201:205:boolean equals(java.lang.Object) -> equals
    213:217:java.lang.String toString() -> toString
    25:25:int compareTo(java.lang.Object) -> compareTo
    31:112:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.DnsSection -> io.netty.handler.codec.dns.DnsSection:
    io.netty.handler.codec.dns.DnsSection QUESTION -> QUESTION
    io.netty.handler.codec.dns.DnsSection ANSWER -> ANSWER
    io.netty.handler.codec.dns.DnsSection AUTHORITY -> AUTHORITY
    io.netty.handler.codec.dns.DnsSection ADDITIONAL -> ADDITIONAL
    io.netty.handler.codec.dns.DnsSection[] $VALUES -> $VALUES
    23:23:io.netty.handler.codec.dns.DnsSection[] values() -> values
    23:23:io.netty.handler.codec.dns.DnsSection valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    23:40:void <clinit>() -> <clinit>
io.netty.handler.codec.http.CombinedHttpHeaders -> io.netty.handler.codec.http.CombinedHttpHeaders:
    40:41:void <init>(boolean) -> <init>
    45:45:boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean) -> containsValue
io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl -> io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl:
    io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper objectEscaper -> objectEscaper
    io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper charSequenceEscaper -> charSequenceEscaper
    58:66:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper objectEscaper() -> objectEscaper
    70:78:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper charSequenceEscaper() -> charSequenceEscaper
    84:85:void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
    89:97:java.util.Iterator valueIterator(java.lang.CharSequence) -> valueIterator
    102:109:java.util.List getAll(java.lang.CharSequence) -> getAll
    115:133:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl add(io.netty.handler.codec.Headers) -> add
    138:142:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl set(io.netty.handler.codec.Headers) -> set
    158:158:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl add(java.lang.CharSequence,java.lang.CharSequence) -> add
    168:168:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl add(java.lang.CharSequence,java.lang.Iterable) -> add
    173:173:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl addObject(java.lang.CharSequence,java.lang.Object) -> addObject
    178:178:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl addObject(java.lang.CharSequence,java.lang.Iterable) -> addObject
    194:195:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl set(java.lang.CharSequence,java.lang.Iterable) -> set
    200:201:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl setObject(java.lang.CharSequence,java.lang.Object) -> setObject
    212:213:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl setObject(java.lang.CharSequence,java.lang.Iterable) -> setObject
    217:223:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl addEscapedValue(java.lang.CharSequence,java.lang.CharSequence) -> addEscapedValue
    227:235:java.lang.CharSequence commaSeparate(io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper,java.lang.Object[]) -> commaSeparate
    240:251:java.lang.CharSequence commaSeparate(io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper,java.lang.Iterable) -> commaSeparate
    255:258:java.lang.CharSequence commaSeparateEscapedValues(java.lang.CharSequence,java.lang.CharSequence) -> commaSeparateEscapedValues
    48:48:io.netty.handler.codec.Headers set(io.netty.handler.codec.Headers) -> set
    48:48:io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Iterable) -> setObject
    48:48:io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object) -> setObject
    48:48:io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> set
    48:48:io.netty.handler.codec.Headers add(io.netty.handler.codec.Headers) -> add
    48:48:io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Iterable) -> addObject
    48:48:io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object) -> addObject
    48:48:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> add
    48:48:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> add
    48:48:java.util.Iterator valueIterator(java.lang.Object) -> valueIterator
    48:48:java.util.List getAll(java.lang.Object) -> getAll
    48:48:io.netty.handler.codec.ValueConverter access$000(io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl) -> access$000
io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$1 -> io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$1:
    io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl this$0 -> this$0
    59:59:void <init>(io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl) -> <init>
    62:62:java.lang.CharSequence escape(java.lang.Object) -> escape
io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$2 -> io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$2:
    io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl this$0 -> this$0
    71:71:void <init>(io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl) -> <init>
    74:74:java.lang.CharSequence escape(java.lang.CharSequence) -> escape
    71:71:java.lang.CharSequence escape(java.lang.Object) -> escape
io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper -> io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper:
    java.lang.CharSequence escape(java.lang.Object) -> escape
io.netty.handler.codec.http.ComposedLastHttpContent -> io.netty.handler.codec.http.ComposedLastHttpContent:
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    io.netty.handler.codec.DecoderResult result -> result
    27:29:void <init>(io.netty.handler.codec.http.HttpHeaders) -> <init>
    33:33:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    62:62:io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    67:67:io.netty.handler.codec.http.LastHttpContent retain() -> retain
    72:72:io.netty.handler.codec.http.LastHttpContent touch() -> touch
    77:77:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    82:82:io.netty.buffer.ByteBuf content() -> content
    87:87:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    92:92:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    97:98:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    102:102:int refCnt() -> refCnt
    107:107:boolean release() -> release
    112:112:boolean release(int) -> release
    23:23:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    23:23:io.netty.handler.codec.http.HttpContent touch() -> touch
    23:23:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    23:23:io.netty.handler.codec.http.HttpContent retain() -> retain
    23:23:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    23:23:io.netty.util.ReferenceCounted touch() -> touch
    23:23:io.netty.util.ReferenceCounted retain(int) -> retain
    23:23:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.DefaultFullHttpRequest -> io.netty.handler.codec.http.DefaultFullHttpRequest:
    io.netty.buffer.ByteBuf content -> content
    io.netty.handler.codec.http.HttpHeaders trailingHeader -> trailingHeader
    int hash -> hash
    36:37:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String) -> <init>
    40:41:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf) -> <init>
    44:45:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,boolean) -> <init>
    49:52:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf,boolean) -> <init>
    63:63:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    68:68:io.netty.buffer.ByteBuf content() -> content
    73:73:int refCnt() -> refCnt
    78:79:io.netty.handler.codec.http.FullHttpRequest retain() -> retain
    84:85:io.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    90:91:io.netty.handler.codec.http.FullHttpRequest touch() -> touch
    96:97:io.netty.handler.codec.http.FullHttpRequest touch(java.lang.Object) -> touch
    102:102:boolean release() -> release
    107:107:boolean release(int) -> release
    112:113:io.netty.handler.codec.http.FullHttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    118:119:io.netty.handler.codec.http.FullHttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    124:125:io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
    150:166:int hashCode() -> hashCode
    171:179:boolean equals(java.lang.Object) -> equals
    184:184:java.lang.String toString() -> toString
    26:26:io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    26:26:io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    26:26:io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    26:26:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    26:26:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    26:26:io.netty.handler.codec.http.HttpContent touch() -> touch
    26:26:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    26:26:io.netty.handler.codec.http.HttpContent retain() -> retain
    26:26:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:io.netty.util.ReferenceCounted touch() -> touch
    26:26:io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.DefaultFullHttpResponse -> io.netty.handler.codec.http.DefaultFullHttpResponse:
    io.netty.buffer.ByteBuf content -> content
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    int hash -> hash
    38:39:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus) -> <init>
    42:43:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf) -> <init>
    46:47:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,boolean) -> <init>
    56:57:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf,boolean) -> <init>
    61:65:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf,boolean,boolean) -> <init>
    69:72:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders,io.netty.handler.codec.http.HttpHeaders) -> <init>
    76:76:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    81:81:io.netty.buffer.ByteBuf content() -> content
    86:86:int refCnt() -> refCnt
    91:92:io.netty.handler.codec.http.FullHttpResponse retain() -> retain
    97:98:io.netty.handler.codec.http.FullHttpResponse retain(int) -> retain
    103:104:io.netty.handler.codec.http.FullHttpResponse touch() -> touch
    109:110:io.netty.handler.codec.http.FullHttpResponse touch(java.lang.Object) -> touch
    115:115:boolean release() -> release
    120:120:boolean release(int) -> release
    125:126:io.netty.handler.codec.http.FullHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    147:147:io.netty.handler.codec.http.FullHttpResponse retainedDuplicate() -> retainedDuplicate
    152:152:io.netty.handler.codec.http.FullHttpResponse replace(io.netty.buffer.ByteBuf) -> replace
    157:173:int hashCode() -> hashCode
    178:186:boolean equals(java.lang.Object) -> equals
    191:191:java.lang.String toString() -> toString
    27:27:io.netty.handler.codec.http.HttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    27:27:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    27:27:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.http.HttpContent touch() -> touch
    27:27:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    27:27:io.netty.handler.codec.http.HttpContent retain() -> retain
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.DefaultHttpContent -> io.netty.handler.codec.http.DefaultHttpContent:
    io.netty.buffer.ByteBuf content -> content
    31:36:void <init>(io.netty.buffer.ByteBuf) -> <init>
    40:40:io.netty.buffer.ByteBuf content() -> content
    65:65:int refCnt() -> refCnt
    70:71:io.netty.handler.codec.http.HttpContent retain() -> retain
    76:77:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    82:83:io.netty.handler.codec.http.HttpContent touch() -> touch
    88:89:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    94:94:boolean release() -> release
    99:99:boolean release(int) -> release
    104:105:java.lang.String toString() -> toString
    24:24:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:io.netty.util.ReferenceCounted touch() -> touch
    24:24:io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.DefaultHttpHeaders -> io.netty.handler.codec.http.DefaultHttpHeaders:
    io.netty.util.ByteProcessor HEADER_NAME_VALIDATOR -> HEADER_NAME_VALIDATOR
    io.netty.handler.codec.DefaultHeaders$NameValidator HttpNameValidator -> HttpNameValidator
    io.netty.handler.codec.DefaultHeaders headers -> headers
    78:79:void <init>() -> <init>
    82:83:void <init>(boolean) -> <init>
    86:89:void <init>(boolean,io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
    91:93:void <init>(io.netty.handler.codec.DefaultHeaders) -> <init>
    97:101:io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders) -> add
    107:111:io.netty.handler.codec.http.HttpHeaders set(io.netty.handler.codec.http.HttpHeaders) -> set
    117:118:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> add
    123:124:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object) -> add
    129:130:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    135:136:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> add
    153:154:io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> remove
    159:160:io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence) -> remove
    165:166:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    171:172:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object) -> set
    177:178:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    183:184:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> set
    201:202:io.netty.handler.codec.http.HttpHeaders clear() -> clear
    207:207:java.lang.String get(java.lang.String) -> get
    212:212:java.lang.String get(java.lang.CharSequence) -> get
    247:247:java.util.List getAll(java.lang.String) -> getAll
    252:252:java.util.List getAll(java.lang.CharSequence) -> getAll
    257:265:java.util.List entries() -> entries
    271:271:java.util.Iterator iterator() -> iterator
    276:276:java.util.Iterator iteratorCharSequence() -> iteratorCharSequence
    281:282:java.util.Iterator valueStringIterator(java.lang.CharSequence) -> valueStringIterator
    302:302:java.util.Iterator valueCharSequenceIterator(java.lang.CharSequence) -> valueCharSequenceIterator
    307:307:boolean contains(java.lang.String) -> contains
    312:312:boolean contains(java.lang.CharSequence) -> contains
    317:317:boolean isEmpty() -> isEmpty
    322:322:int size() -> size
    327:327:boolean contains(java.lang.String,java.lang.String,boolean) -> contains
    332:332:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    337:337:java.util.Set names() -> names
    342:343:boolean equals(java.lang.Object) -> equals
    348:348:int hashCode() -> hashCode
    352:374:void validateHeaderNameElement(byte) -> validateHeaderNameElement
    377:399:void validateHeaderNameElement(char) -> validateHeaderNameElement
    402:402:io.netty.handler.codec.ValueConverter valueConverter(boolean) -> valueConverter
    407:407:io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator(boolean) -> nameValidator
    45:45:void access$000(byte) -> access$000
    45:45:io.netty.util.ByteProcessor access$100() -> access$100
    45:45:void access$200(char) -> access$200
    47:54:void <clinit>() -> <clinit>
io.netty.handler.codec.http.DefaultHttpHeaders$1 -> io.netty.handler.codec.http.DefaultHttpHeaders$1:
    47:47:void <init>() -> <init>
    50:51:boolean process(byte) -> process
io.netty.handler.codec.http.DefaultHttpHeaders$2 -> io.netty.handler.codec.http.DefaultHttpHeaders$2:
    54:54:void <init>() -> <init>
    57:72:void validateName(java.lang.CharSequence) -> validateName
    54:54:void validateName(java.lang.Object) -> validateName
io.netty.handler.codec.http.DefaultHttpHeaders$3 -> io.netty.handler.codec.http.DefaultHttpHeaders$3:
    java.util.Iterator val$itr -> val$itr
    io.netty.handler.codec.http.DefaultHttpHeaders this$0 -> this$0
    282:282:void <init>(io.netty.handler.codec.http.DefaultHttpHeaders,java.util.Iterator) -> <init>
    285:285:boolean hasNext() -> hasNext
    290:290:java.lang.String next() -> next
    295:296:void remove() -> remove
    282:282:java.lang.Object next() -> next
io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverter -> io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverter:
    io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverter INSTANCE -> INSTANCE
    410:410:void <init>() -> <init>
    415:424:java.lang.CharSequence convertObject(java.lang.Object) -> convertObject
    410:410:java.lang.Object convertObject(java.lang.Object) -> convertObject
    410:410:void <init>(io.netty.handler.codec.http.DefaultHttpHeaders$1) -> <init>
    411:411:void <clinit>() -> <clinit>
io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverterAndValidator -> io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverterAndValidator:
    io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverterAndValidator INSTANCE -> INSTANCE
    428:428:void <init>() -> <init>
    433:443:java.lang.CharSequence convertObject(java.lang.Object) -> convertObject
    453:491:int validateValueChar(java.lang.CharSequence,int,char) -> validateValueChar
    428:428:java.lang.Object convertObject(java.lang.Object) -> convertObject
    429:429:void <clinit>() -> <clinit>
io.netty.handler.codec.http.DefaultHttpMessage -> io.netty.handler.codec.http.DefaultHttpMessage:
    io.netty.handler.codec.http.HttpVersion version -> version
    io.netty.handler.codec.http.HttpHeaders headers -> headers
    39:42:void <init>(io.netty.handler.codec.http.HttpVersion,boolean,boolean) -> <init>
    47:50:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpHeaders) -> <init>
    54:54:io.netty.handler.codec.http.HttpHeaders headers() -> headers
    60:60:io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    65:65:io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    70:74:int hashCode() -> hashCode
    79:87:boolean equals(java.lang.Object) -> equals
    92:96:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
io.netty.handler.codec.http.DefaultHttpObject -> io.netty.handler.codec.http.DefaultHttpObject:
    io.netty.handler.codec.DecoderResult decoderResult -> decoderResult
    23:27:void <init>() -> <init>
    31:31:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    37:37:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    42:46:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    50:52:int hashCode() -> hashCode
    57:63:boolean equals(java.lang.Object) -> equals
io.netty.handler.codec.http.DefaultHttpRequest -> io.netty.handler.codec.http.DefaultHttpRequest:
    io.netty.handler.codec.http.HttpMethod method -> method
    java.lang.String uri -> uri
    36:37:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String) -> <init>
    48:51:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,boolean) -> <init>
    70:70:io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    75:75:io.netty.handler.codec.http.HttpMethod method() -> method
    81:81:java.lang.String getUri() -> getUri
    86:86:java.lang.String uri() -> uri
    91:95:io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    100:104:io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    109:110:io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    115:119:int hashCode() -> hashCode
    124:132:boolean equals(java.lang.Object) -> equals
    137:137:java.lang.String toString() -> toString
    23:23:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
io.netty.handler.codec.http.DefaultHttpResponse -> io.netty.handler.codec.http.DefaultHttpResponse:
    io.netty.handler.codec.http.HttpResponseStatus status -> status
    34:35:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus) -> <init>
    45:46:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,boolean) -> <init>
    62:64:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,boolean,boolean) -> <init>
    74:76:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.handler.codec.http.HttpHeaders) -> <init>
    86:86:io.netty.handler.codec.http.HttpResponseStatus status() -> status
    100:101:io.netty.handler.codec.http.HttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    106:106:java.lang.String toString() -> toString
    23:23:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
io.netty.handler.codec.http.DefaultLastHttpContent -> io.netty.handler.codec.http.DefaultLastHttpContent:
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    boolean validateHeaders -> validateHeaders
    33:34:void <init>() -> <init>
    37:38:void <init>(io.netty.buffer.ByteBuf) -> <init>
    41:44:void <init>(io.netty.buffer.ByteBuf,boolean) -> <init>
    70:71:io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    76:77:io.netty.handler.codec.http.LastHttpContent retain() -> retain
    82:83:io.netty.handler.codec.http.LastHttpContent touch() -> touch
    88:89:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    94:94:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    99:105:java.lang.String toString() -> toString
    109:115:void appendHeaders(java.lang.StringBuilder) -> appendHeaders
    28:28:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    28:28:io.netty.handler.codec.http.HttpContent touch() -> touch
    28:28:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    28:28:io.netty.handler.codec.http.HttpContent retain() -> retain
    28:28:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    28:28:io.netty.util.ReferenceCounted touch() -> touch
    28:28:io.netty.util.ReferenceCounted retain(int) -> retain
    28:28:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHttpHeaders -> io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHttpHeaders:
    io.netty.handler.codec.DefaultHeaders$NameValidator TrailerNameValidator -> TrailerNameValidator
    132:133:void <init>(boolean) -> <init>
    118:118:void <clinit>() -> <clinit>
io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHttpHeaders$1 -> io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHttpHeaders$1:
    118:118:void <init>() -> <init>
    121:127:void validateName(java.lang.CharSequence) -> validateName
    118:118:void validateName(java.lang.Object) -> validateName
io.netty.handler.codec.http.EmptyHttpHeaders -> io.netty.handler.codec.http.EmptyHttpHeaders:
    java.util.Iterator EMPTY_CHARS_ITERATOR -> EMPTY_CHARS_ITERATOR
    io.netty.handler.codec.http.EmptyHttpHeaders INSTANCE -> INSTANCE
    40:40:io.netty.handler.codec.http.EmptyHttpHeaders instance() -> instance
    43:44:void <init>() -> <init>
    48:48:java.lang.String get(java.lang.String) -> get
    83:83:java.util.List getAll(java.lang.String) -> getAll
    88:88:java.util.List entries() -> entries
    93:93:boolean contains(java.lang.String) -> contains
    98:98:boolean isEmpty() -> isEmpty
    103:103:int size() -> size
    108:108:java.util.Set names() -> names
    113:113:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> add
    118:118:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    133:133:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    138:138:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    153:153:io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> remove
    158:158:io.netty.handler.codec.http.HttpHeaders clear() -> clear
    163:163:java.util.Iterator iterator() -> iterator
    168:168:java.util.Iterator iteratorCharSequence() -> iteratorCharSequence
    27:29:void <clinit>() -> <clinit>
io.netty.handler.codec.http.EmptyHttpHeaders$InstanceInitializer -> io.netty.handler.codec.http.EmptyHttpHeaders$InstanceInitializer:
    io.netty.handler.codec.http.EmptyHttpHeaders EMPTY_HEADERS -> EMPTY_HEADERS
    176:176:io.netty.handler.codec.http.EmptyHttpHeaders access$000() -> access$000
    183:183:void <clinit>() -> <clinit>
io.netty.handler.codec.http.FullHttpMessage -> io.netty.handler.codec.http.FullHttpMessage:
io.netty.handler.codec.http.FullHttpRequest -> io.netty.handler.codec.http.FullHttpRequest:
io.netty.handler.codec.http.FullHttpResponse -> io.netty.handler.codec.http.FullHttpResponse:
    io.netty.handler.codec.http.FullHttpResponse retainedDuplicate() -> retainedDuplicate
    io.netty.handler.codec.http.FullHttpResponse retain() -> retain
io.netty.handler.codec.http.HttpClientCodec -> io.netty.handler.codec.http.HttpClientCodec:
    java.util.Queue queue -> queue
    boolean parseHttpAfterConnectRequest -> parseHttpAfterConnectRequest
    boolean done -> done
    java.util.concurrent.atomic.AtomicLong requestResponseCounter -> requestResponseCounter
    boolean failOnMissingResponse -> failOnMissingResponse
    64:65:void <init>() -> <init>
    79:80:void <init>(int,int,int,boolean) -> <init>
    88:89:void <init>(int,int,int,boolean,boolean) -> <init>
    49:100:void <init>(int,int,int,boolean,boolean,boolean) -> <init>
    108:110:void <init>(int,int,int,boolean,boolean,int) -> <init>
    49:122:void <init>(int,int,int,boolean,boolean,int,boolean) -> <init>
    129:130:void prepareUpgradeFrom(io.netty.channel.ChannelHandlerContext) -> prepareUpgradeFrom
    138:140:void upgradeFrom(io.netty.channel.ChannelHandlerContext) -> upgradeFrom
    45:45:boolean access$100(io.netty.handler.codec.http.HttpClientCodec) -> access$100
    45:45:java.util.Queue access$200(io.netty.handler.codec.http.HttpClientCodec) -> access$200
    45:45:boolean access$300(io.netty.handler.codec.http.HttpClientCodec) -> access$300
    45:45:java.util.concurrent.atomic.AtomicLong access$400(io.netty.handler.codec.http.HttpClientCodec) -> access$400
    45:45:boolean access$500(io.netty.handler.codec.http.HttpClientCodec) -> access$500
    45:45:boolean access$102(io.netty.handler.codec.http.HttpClientCodec,boolean) -> access$102
io.netty.handler.codec.http.HttpClientCodec$1 -> io.netty.handler.codec.http.HttpClientCodec$1:
io.netty.handler.codec.http.HttpClientCodec$Decoder -> io.netty.handler.codec.http.HttpClientCodec$Decoder:
    io.netty.handler.codec.http.HttpClientCodec this$0 -> this$0
    180:182:void <init>(io.netty.handler.codec.http.HttpClientCodec,int,int,int,boolean) -> <init>
    185:187:void <init>(io.netty.handler.codec.http.HttpClientCodec,int,int,int,boolean,int) -> <init>
    192:210:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    213:221:void decrement(java.lang.Object) -> decrement
    225:276:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    282:292:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
io.netty.handler.codec.http.HttpClientCodec$Encoder -> io.netty.handler.codec.http.HttpClientCodec$Encoder:
    boolean upgraded -> upgraded
    io.netty.handler.codec.http.HttpClientCodec this$0 -> this$0
    150:150:void <init>(io.netty.handler.codec.http.HttpClientCodec) -> <init>
    158:176:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    150:150:void <init>(io.netty.handler.codec.http.HttpClientCodec,io.netty.handler.codec.http.HttpClientCodec$1) -> <init>
io.netty.handler.codec.http.HttpClientUpgradeHandler -> io.netty.handler.codec.http.HttpClientUpgradeHandler:
    io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec sourceCodec -> sourceCodec
    io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec upgradeCodec -> upgradeCodec
    boolean upgradeRequested -> upgradeRequested
    boolean $assertionsDisabled -> $assertionsDisabled
    117:126:void <init>(io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec,io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec,int) -> <init>
    130:131:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    136:137:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    141:142:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    146:147:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    151:152:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    156:157:void read(io.netty.channel.ChannelHandlerContext) -> read
    162:182:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    186:187:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    192:256:void decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpObject,java.util.List) -> decode
    259:260:void removeThisHandler(io.netty.channel.ChannelHandlerContext) -> removeThisHandler
    267:281:void setUpgradeRequestHeaders(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpRequest) -> setUpgradeRequestHeaders
    38:38:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    38:38:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec -> io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec:
    void prepareUpgradeFrom(io.netty.channel.ChannelHandlerContext) -> prepareUpgradeFrom
    void upgradeFrom(io.netty.channel.ChannelHandlerContext) -> upgradeFrom
io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec -> io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec:
    java.lang.CharSequence protocol() -> protocol
    java.util.Collection setUpgradeHeaders(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpRequest) -> setUpgradeHeaders
    void upgradeTo(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse) -> upgradeTo
io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent -> io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent:
    io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_ISSUED -> UPGRADE_ISSUED
    io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_SUCCESSFUL -> UPGRADE_SUCCESSFUL
    io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_REJECTED -> UPGRADE_REJECTED
    io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent[] $VALUES -> $VALUES
    43:43:io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent[] values() -> values
    43:43:io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent valueOf(java.lang.String) -> valueOf
    43:43:void <init>(java.lang.String,int) -> <init>
    43:58:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpConstants -> io.netty.handler.codec.http.HttpConstants:
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    72:72:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpContent -> io.netty.handler.codec.http.HttpContent:
    io.netty.handler.codec.http.HttpContent retain() -> retain
    io.netty.handler.codec.http.HttpContent retain(int) -> retain
    io.netty.handler.codec.http.HttpContent touch() -> touch
    io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
io.netty.handler.codec.http.HttpContentCompressor -> io.netty.handler.codec.http.HttpContentCompressor:
    int compressionLevel -> compressionLevel
    int windowBits -> windowBits
    int memLevel -> memLevel
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    42:43:void <init>() -> <init>
    55:56:void <init>(int) -> <init>
    77:94:void <init>(int,int,int) -> <init>
    98:99:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    103:130:io.netty.handler.codec.http.HttpContentEncoder$Result beginEncode(io.netty.handler.codec.http.HttpResponse,java.lang.String) -> beginEncode
    136:173:io.netty.handler.codec.compression.ZlibWrapper determineWrapper(java.lang.String) -> determineWrapper
io.netty.handler.codec.http.HttpContentCompressor$1 -> io.netty.handler.codec.http.HttpContentCompressor$1:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    116:116:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpContentDecoder -> io.netty.handler.codec.http.HttpContentDecoder:
    java.lang.String IDENTITY -> IDENTITY
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    io.netty.channel.embedded.EmbeddedChannel decoder -> decoder
    boolean continueResponse -> continueResponse
    46:46:void <init>() -> <init>
    56:150:void decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpObject,java.util.List) -> decode
    153:170:void decodeContent(io.netty.handler.codec.http.HttpContent,java.util.List) -> decodeContent
    io.netty.channel.embedded.EmbeddedChannel newContentDecoder(java.lang.String) -> newContentDecoder
    193:193:java.lang.String getTargetContentEncoding(java.lang.String) -> getTargetContentEncoding
    198:200:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    204:206:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    210:212:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    215:220:void cleanup() -> cleanup
    224:230:void cleanupSafely(io.netty.channel.ChannelHandlerContext) -> cleanupSafely
    234:236:void decode(io.netty.buffer.ByteBuf,java.util.List) -> decode
    239:243:void finishDecode(java.util.List) -> finishDecode
    247:257:void fetchDecoderOutput(java.util.List) -> fetchDecoderOutput
    46:46:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    48:48:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpContentDecompressor -> io.netty.handler.codec.http.HttpContentDecompressor:
    boolean strict -> strict
    40:41:void <init>() -> <init>
    49:51:void <init>(boolean) -> <init>
    55:69:io.netty.channel.embedded.EmbeddedChannel newContentDecoder(java.lang.String) -> newContentDecoder
io.netty.handler.codec.http.HttpContentEncoder -> io.netty.handler.codec.http.HttpContentEncoder:
    java.lang.CharSequence ZERO_LENGTH_HEAD -> ZERO_LENGTH_HEAD
    java.lang.CharSequence ZERO_LENGTH_CONNECT -> ZERO_LENGTH_CONNECT
    int CONTINUE_CODE -> CONTINUE_CODE
    java.util.Queue acceptEncodingQueue -> acceptEncodingQueue
    io.netty.channel.embedded.EmbeddedChannel encoder -> encoder
    io.netty.handler.codec.http.HttpContentEncoder$State state -> state
    boolean $assertionsDisabled -> $assertionsDisabled
    51:65:void <init>() -> <init>
    69:69:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    75:89:void decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpRequest,java.util.List) -> decode
    93:209:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpObject,java.util.List) -> encode
    212:228:void encodeFullResponse(io.netty.handler.codec.http.HttpResponse,io.netty.handler.codec.http.HttpContent,java.util.List) -> encodeFullResponse
    231:231:boolean isPassthru(io.netty.handler.codec.http.HttpVersion,int,java.lang.CharSequence) -> isPassthru
    237:242:void ensureHeaders(io.netty.handler.codec.http.HttpObject) -> ensureHeaders
    245:250:void ensureContent(io.netty.handler.codec.http.HttpObject) -> ensureContent
    253:271:boolean encodeContent(io.netty.handler.codec.http.HttpContent,java.util.List) -> encodeContent
    io.netty.handler.codec.http.HttpContentEncoder$Result beginEncode(io.netty.handler.codec.http.HttpResponse,java.lang.String) -> beginEncode
    292:294:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    298:300:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    303:308:void cleanup() -> cleanup
    312:318:void cleanupSafely(io.netty.channel.ChannelHandlerContext) -> cleanupSafely
    322:324:void encode(io.netty.buffer.ByteBuf,java.util.List) -> encode
    327:331:void finishEncode(java.util.List) -> finishEncode
    335:345:void fetchEncoderOutput(java.util.List) -> fetchEncoderOutput
    51:51:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    51:51:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    51:61:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpContentEncoder$1 -> io.netty.handler.codec.http.HttpContentEncoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http$HttpContentEncoder$State -> $SwitchMap$io$netty$handler$codec$http$HttpContentEncoder$State
    94:94:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpContentEncoder$Result -> io.netty.handler.codec.http.HttpContentEncoder$Result:
    java.lang.String targetContentEncoding -> targetContentEncoding
    io.netty.channel.embedded.EmbeddedChannel contentEncoder -> contentEncoder
    351:361:void <init>(java.lang.String,io.netty.channel.embedded.EmbeddedChannel) -> <init>
    364:364:java.lang.String targetContentEncoding() -> targetContentEncoding
    368:368:io.netty.channel.embedded.EmbeddedChannel contentEncoder() -> contentEncoder
io.netty.handler.codec.http.HttpContentEncoder$State -> io.netty.handler.codec.http.HttpContentEncoder$State:
    io.netty.handler.codec.http.HttpContentEncoder$State PASS_THROUGH -> PASS_THROUGH
    io.netty.handler.codec.http.HttpContentEncoder$State AWAIT_HEADERS -> AWAIT_HEADERS
    io.netty.handler.codec.http.HttpContentEncoder$State AWAIT_CONTENT -> AWAIT_CONTENT
    io.netty.handler.codec.http.HttpContentEncoder$State[] $VALUES -> $VALUES
    53:53:io.netty.handler.codec.http.HttpContentEncoder$State[] values() -> values
    53:53:io.netty.handler.codec.http.HttpContentEncoder$State valueOf(java.lang.String) -> valueOf
    53:53:void <init>(java.lang.String,int) -> <init>
    53:56:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpExpectationFailedEvent -> io.netty.handler.codec.http.HttpExpectationFailedEvent:
    io.netty.handler.codec.http.HttpExpectationFailedEvent INSTANCE -> INSTANCE
    24:24:void <init>() -> <init>
    23:23:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpHeaderNames -> io.netty.handler.codec.http.HttpHeaderNames:
    io.netty.util.AsciiString ACCEPT -> ACCEPT
    io.netty.util.AsciiString ACCEPT_CHARSET -> ACCEPT_CHARSET
    io.netty.util.AsciiString ACCEPT_ENCODING -> ACCEPT_ENCODING
    io.netty.util.AsciiString ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    io.netty.util.AsciiString ACCEPT_RANGES -> ACCEPT_RANGES
    io.netty.util.AsciiString ACCEPT_PATCH -> ACCEPT_PATCH
    io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_CREDENTIALS -> ACCESS_CONTROL_ALLOW_CREDENTIALS
    io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_HEADERS -> ACCESS_CONTROL_ALLOW_HEADERS
    io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_METHODS -> ACCESS_CONTROL_ALLOW_METHODS
    io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_ORIGIN -> ACCESS_CONTROL_ALLOW_ORIGIN
    io.netty.util.AsciiString ACCESS_CONTROL_EXPOSE_HEADERS -> ACCESS_CONTROL_EXPOSE_HEADERS
    io.netty.util.AsciiString ACCESS_CONTROL_MAX_AGE -> ACCESS_CONTROL_MAX_AGE
    io.netty.util.AsciiString ACCESS_CONTROL_REQUEST_HEADERS -> ACCESS_CONTROL_REQUEST_HEADERS
    io.netty.util.AsciiString ACCESS_CONTROL_REQUEST_METHOD -> ACCESS_CONTROL_REQUEST_METHOD
    io.netty.util.AsciiString AGE -> AGE
    io.netty.util.AsciiString ALLOW -> ALLOW
    io.netty.util.AsciiString AUTHORIZATION -> AUTHORIZATION
    io.netty.util.AsciiString CACHE_CONTROL -> CACHE_CONTROL
    io.netty.util.AsciiString CONNECTION -> CONNECTION
    io.netty.util.AsciiString CONTENT_BASE -> CONTENT_BASE
    io.netty.util.AsciiString CONTENT_ENCODING -> CONTENT_ENCODING
    io.netty.util.AsciiString CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    io.netty.util.AsciiString CONTENT_LENGTH -> CONTENT_LENGTH
    io.netty.util.AsciiString CONTENT_LOCATION -> CONTENT_LOCATION
    io.netty.util.AsciiString CONTENT_TRANSFER_ENCODING -> CONTENT_TRANSFER_ENCODING
    io.netty.util.AsciiString CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    io.netty.util.AsciiString CONTENT_MD5 -> CONTENT_MD5
    io.netty.util.AsciiString CONTENT_RANGE -> CONTENT_RANGE
    io.netty.util.AsciiString CONTENT_SECURITY_POLICY -> CONTENT_SECURITY_POLICY
    io.netty.util.AsciiString CONTENT_TYPE -> CONTENT_TYPE
    io.netty.util.AsciiString COOKIE -> COOKIE
    io.netty.util.AsciiString DATE -> DATE
    io.netty.util.AsciiString ETAG -> ETAG
    io.netty.util.AsciiString EXPECT -> EXPECT
    io.netty.util.AsciiString EXPIRES -> EXPIRES
    io.netty.util.AsciiString FROM -> FROM
    io.netty.util.AsciiString HOST -> HOST
    io.netty.util.AsciiString IF_MATCH -> IF_MATCH
    io.netty.util.AsciiString IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    io.netty.util.AsciiString IF_NONE_MATCH -> IF_NONE_MATCH
    io.netty.util.AsciiString IF_RANGE -> IF_RANGE
    io.netty.util.AsciiString IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    io.netty.util.AsciiString KEEP_ALIVE -> KEEP_ALIVE
    io.netty.util.AsciiString LAST_MODIFIED -> LAST_MODIFIED
    io.netty.util.AsciiString LOCATION -> LOCATION
    io.netty.util.AsciiString MAX_FORWARDS -> MAX_FORWARDS
    io.netty.util.AsciiString ORIGIN -> ORIGIN
    io.netty.util.AsciiString PRAGMA -> PRAGMA
    io.netty.util.AsciiString PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    io.netty.util.AsciiString PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    io.netty.util.AsciiString PROXY_CONNECTION -> PROXY_CONNECTION
    io.netty.util.AsciiString RANGE -> RANGE
    io.netty.util.AsciiString REFERER -> REFERER
    io.netty.util.AsciiString RETRY_AFTER -> RETRY_AFTER
    io.netty.util.AsciiString SEC_WEBSOCKET_KEY1 -> SEC_WEBSOCKET_KEY1
    io.netty.util.AsciiString SEC_WEBSOCKET_KEY2 -> SEC_WEBSOCKET_KEY2
    io.netty.util.AsciiString SEC_WEBSOCKET_LOCATION -> SEC_WEBSOCKET_LOCATION
    io.netty.util.AsciiString SEC_WEBSOCKET_ORIGIN -> SEC_WEBSOCKET_ORIGIN
    io.netty.util.AsciiString SEC_WEBSOCKET_PROTOCOL -> SEC_WEBSOCKET_PROTOCOL
    io.netty.util.AsciiString SEC_WEBSOCKET_VERSION -> SEC_WEBSOCKET_VERSION
    io.netty.util.AsciiString SEC_WEBSOCKET_KEY -> SEC_WEBSOCKET_KEY
    io.netty.util.AsciiString SEC_WEBSOCKET_ACCEPT -> SEC_WEBSOCKET_ACCEPT
    io.netty.util.AsciiString SEC_WEBSOCKET_EXTENSIONS -> SEC_WEBSOCKET_EXTENSIONS
    io.netty.util.AsciiString SERVER -> SERVER
    io.netty.util.AsciiString SET_COOKIE -> SET_COOKIE
    io.netty.util.AsciiString SET_COOKIE2 -> SET_COOKIE2
    io.netty.util.AsciiString TE -> TE
    io.netty.util.AsciiString TRAILER -> TRAILER
    io.netty.util.AsciiString TRANSFER_ENCODING -> TRANSFER_ENCODING
    io.netty.util.AsciiString UPGRADE -> UPGRADE
    io.netty.util.AsciiString USER_AGENT -> USER_AGENT
    io.netty.util.AsciiString VARY -> VARY
    io.netty.util.AsciiString VIA -> VIA
    io.netty.util.AsciiString WARNING -> WARNING
    io.netty.util.AsciiString WEBSOCKET_LOCATION -> WEBSOCKET_LOCATION
    io.netty.util.AsciiString WEBSOCKET_ORIGIN -> WEBSOCKET_ORIGIN
    io.netty.util.AsciiString WEBSOCKET_PROTOCOL -> WEBSOCKET_PROTOCOL
    io.netty.util.AsciiString WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    io.netty.util.AsciiString X_FRAME_OPTIONS -> X_FRAME_OPTIONS
    31:356:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpHeaderValues -> io.netty.handler.codec.http.HttpHeaderValues:
    io.netty.util.AsciiString APPLICATION_JSON -> APPLICATION_JSON
    io.netty.util.AsciiString APPLICATION_X_WWW_FORM_URLENCODED -> APPLICATION_X_WWW_FORM_URLENCODED
    io.netty.util.AsciiString APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    io.netty.util.AsciiString ATTACHMENT -> ATTACHMENT
    io.netty.util.AsciiString BASE64 -> BASE64
    io.netty.util.AsciiString BINARY -> BINARY
    io.netty.util.AsciiString BOUNDARY -> BOUNDARY
    io.netty.util.AsciiString BYTES -> BYTES
    io.netty.util.AsciiString CHARSET -> CHARSET
    io.netty.util.AsciiString CHUNKED -> CHUNKED
    io.netty.util.AsciiString CLOSE -> CLOSE
    io.netty.util.AsciiString COMPRESS -> COMPRESS
    io.netty.util.AsciiString CONTINUE -> CONTINUE
    io.netty.util.AsciiString DEFLATE -> DEFLATE
    io.netty.util.AsciiString X_DEFLATE -> X_DEFLATE
    io.netty.util.AsciiString FILE -> FILE
    io.netty.util.AsciiString FILENAME -> FILENAME
    io.netty.util.AsciiString FORM_DATA -> FORM_DATA
    io.netty.util.AsciiString GZIP -> GZIP
    io.netty.util.AsciiString GZIP_DEFLATE -> GZIP_DEFLATE
    io.netty.util.AsciiString X_GZIP -> X_GZIP
    io.netty.util.AsciiString IDENTITY -> IDENTITY
    io.netty.util.AsciiString KEEP_ALIVE -> KEEP_ALIVE
    io.netty.util.AsciiString MAX_AGE -> MAX_AGE
    io.netty.util.AsciiString MAX_STALE -> MAX_STALE
    io.netty.util.AsciiString MIN_FRESH -> MIN_FRESH
    io.netty.util.AsciiString MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    io.netty.util.AsciiString MULTIPART_MIXED -> MULTIPART_MIXED
    io.netty.util.AsciiString MUST_REVALIDATE -> MUST_REVALIDATE
    io.netty.util.AsciiString NAME -> NAME
    io.netty.util.AsciiString NO_CACHE -> NO_CACHE
    io.netty.util.AsciiString NO_STORE -> NO_STORE
    io.netty.util.AsciiString NO_TRANSFORM -> NO_TRANSFORM
    io.netty.util.AsciiString NONE -> NONE
    io.netty.util.AsciiString ZERO -> ZERO
    io.netty.util.AsciiString ONLY_IF_CACHED -> ONLY_IF_CACHED
    io.netty.util.AsciiString PRIVATE -> PRIVATE
    io.netty.util.AsciiString PROXY_REVALIDATE -> PROXY_REVALIDATE
    io.netty.util.AsciiString PUBLIC -> PUBLIC
    io.netty.util.AsciiString QUOTED_PRINTABLE -> QUOTED_PRINTABLE
    io.netty.util.AsciiString S_MAXAGE -> S_MAXAGE
    io.netty.util.AsciiString TEXT_PLAIN -> TEXT_PLAIN
    io.netty.util.AsciiString TRAILERS -> TRAILERS
    io.netty.util.AsciiString UPGRADE -> UPGRADE
    io.netty.util.AsciiString WEBSOCKET -> WEBSOCKET
    28:210:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpHeaders -> io.netty.handler.codec.http.HttpHeaders:
    io.netty.handler.codec.http.HttpHeaders EMPTY_HEADERS -> EMPTY_HEADERS
    995:996:void setContentLength(io.netty.handler.codec.http.HttpMessage,long) -> setContentLength
    1005:1005:java.lang.String getHost(io.netty.handler.codec.http.HttpMessage) -> getHost
    1173:1173:java.lang.CharSequence newEntity(java.lang.String) -> newEntity
    1176:1176:void <init>() -> <init>
    java.lang.String get(java.lang.String) -> get
    1192:1192:java.lang.String get(java.lang.CharSequence) -> get
    java.util.List getAll(java.lang.String) -> getAll
    1287:1287:java.util.List getAll(java.lang.CharSequence) -> getAll
    java.util.List entries() -> entries
    boolean contains(java.lang.String) -> contains
    java.util.Iterator iterator() -> iterator
    java.util.Iterator iteratorCharSequence() -> iteratorCharSequence
    1322:1322:java.util.Iterator valueStringIterator(java.lang.CharSequence) -> valueStringIterator
    1331:1331:java.util.Iterator valueCharSequenceIterator(java.lang.CharSequence) -> valueCharSequenceIterator
    1341:1341:boolean contains(java.lang.CharSequence) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.util.Set names() -> names
    io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> add
    1380:1380:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object) -> add
    io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    1406:1406:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> add
    1415:1421:io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders) -> add
    io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    1459:1459:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object) -> set
    io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    1487:1487:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> set
    1496:1507:io.netty.handler.codec.http.HttpHeaders set(io.netty.handler.codec.http.HttpHeaders) -> set
    io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> remove
    1557:1557:io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence) -> remove
    io.netty.handler.codec.http.HttpHeaders clear() -> clear
    1571:1585:boolean contains(java.lang.String,java.lang.String,boolean) -> contains
    1599:1605:boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean) -> containsValue
    1610:1651:boolean containsCommaSeparatedTrimmed(java.lang.CharSequence,java.lang.CharSequence,boolean) -> containsCommaSeparatedTrimmed
    1689:1689:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    1694:1694:java.lang.String toString() -> toString
    53:53:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpHeadersEncoder -> io.netty.handler.codec.http.HttpHeadersEncoder:
    34:48:void encoderHeader(java.lang.CharSequence,java.lang.CharSequence,io.netty.buffer.ByteBuf) -> encoderHeader
    51:56:void writeAscii(io.netty.buffer.ByteBuf,int,java.lang.CharSequence) -> writeAscii
io.netty.handler.codec.http.HttpMessage -> io.netty.handler.codec.http.HttpMessage:
    io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    io.netty.handler.codec.http.HttpHeaders headers() -> headers
io.netty.handler.codec.http.HttpMessageUtil -> io.netty.handler.codec.http.HttpMessageUtil:
    29:33:java.lang.StringBuilder appendRequest(java.lang.StringBuilder,io.netty.handler.codec.http.HttpRequest) -> appendRequest
    37:41:java.lang.StringBuilder appendResponse(java.lang.StringBuilder,io.netty.handler.codec.http.HttpResponse) -> appendResponse
    45:52:void appendCommon(java.lang.StringBuilder,io.netty.handler.codec.http.HttpMessage) -> appendCommon
    55:60:java.lang.StringBuilder appendFullRequest(java.lang.StringBuilder,io.netty.handler.codec.http.FullHttpRequest) -> appendFullRequest
    64:69:java.lang.StringBuilder appendFullResponse(java.lang.StringBuilder,io.netty.handler.codec.http.FullHttpResponse) -> appendFullResponse
    73:82:void appendFullCommon(java.lang.StringBuilder,io.netty.handler.codec.http.FullHttpMessage) -> appendFullCommon
    85:91:void appendInitialLine(java.lang.StringBuilder,io.netty.handler.codec.http.HttpRequest) -> appendInitialLine
    94:98:void appendInitialLine(java.lang.StringBuilder,io.netty.handler.codec.http.HttpResponse) -> appendInitialLine
    101:107:void appendHeaders(java.lang.StringBuilder,io.netty.handler.codec.http.HttpHeaders) -> appendHeaders
    110:111:void removeLastNewLine(java.lang.StringBuilder) -> removeLastNewLine
io.netty.handler.codec.http.HttpMethod -> io.netty.handler.codec.http.HttpMethod:
    io.netty.handler.codec.http.HttpMethod OPTIONS -> OPTIONS
    io.netty.handler.codec.http.HttpMethod GET -> GET
    io.netty.handler.codec.http.HttpMethod HEAD -> HEAD
    io.netty.handler.codec.http.HttpMethod POST -> POST
    io.netty.handler.codec.http.HttpMethod PUT -> PUT
    io.netty.handler.codec.http.HttpMethod PATCH -> PATCH
    io.netty.handler.codec.http.HttpMethod DELETE -> DELETE
    io.netty.handler.codec.http.HttpMethod TRACE -> TRACE
    io.netty.handler.codec.http.HttpMethod CONNECT -> CONNECT
    io.netty.handler.codec.http.HttpMethod$EnumNameMap methodMap -> methodMap
    io.netty.util.AsciiString name -> name
    109:110:io.netty.handler.codec.http.HttpMethod valueOf(java.lang.String) -> valueOf
    122:136:void <init>(java.lang.String) -> <init>
    142:142:java.lang.String name() -> name
    149:149:io.netty.util.AsciiString asciiName() -> asciiName
    154:154:int hashCode() -> hashCode
    159:164:boolean equals(java.lang.Object) -> equals
    169:169:java.lang.String toString() -> toString
    174:174:int compareTo(io.netty.handler.codec.http.HttpMethod) -> compareTo
    28:28:int compareTo(java.lang.Object) -> compareTo
    36:101:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpMethod$EnumNameMap -> io.netty.handler.codec.http.HttpMethod$EnumNameMap:
    io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node[] values -> values
    int valuesMask -> valuesMask
    181:192:void <init>(io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node[]) -> <init>
    195:196:java.lang.Object get(java.lang.String) -> get
    205:205:int hashCode(java.lang.String) -> hashCode
io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node -> io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node:
    java.lang.String key -> key
    java.lang.Object value -> value
    212:215:void <init>(java.lang.String,java.lang.Object) -> <init>
io.netty.handler.codec.http.HttpObject -> io.netty.handler.codec.http.HttpObject:
    io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
io.netty.handler.codec.http.HttpObjectAggregator -> io.netty.handler.codec.http.HttpObjectAggregator:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.handler.codec.http.FullHttpResponse CONTINUE -> CONTINUE
    io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED -> EXPECTATION_FAILED
    io.netty.handler.codec.http.FullHttpResponse TOO_LARGE_CLOSE -> TOO_LARGE_CLOSE
    io.netty.handler.codec.http.FullHttpResponse TOO_LARGE -> TOO_LARGE
    boolean closeOnExpectationFailed -> closeOnExpectationFailed
    boolean $assertionsDisabled -> $assertionsDisabled
    116:117:void <init>(int) -> <init>
    129:131:void <init>(int,boolean) -> <init>
    135:135:boolean isStartMessage(io.netty.handler.codec.http.HttpObject) -> isStartMessage
    140:140:boolean isContentMessage(io.netty.handler.codec.http.HttpObject) -> isContentMessage
    145:145:boolean isLastContentMessage(io.netty.handler.codec.http.HttpContent) -> isLastContentMessage
    150:150:boolean isAggregated(io.netty.handler.codec.http.HttpObject) -> isAggregated
    156:158:boolean isContentLengthInvalid(io.netty.handler.codec.http.HttpMessage,int) -> isContentLengthInvalid
    163:176:java.lang.Object continueResponse(io.netty.handler.codec.http.HttpMessage,int,io.netty.channel.ChannelPipeline) -> continueResponse
    181:187:java.lang.Object newContinueResponse(io.netty.handler.codec.http.HttpMessage,int,io.netty.channel.ChannelPipeline) -> newContinueResponse
    192:192:boolean closeAfterContinueResponse(java.lang.Object) -> closeAfterContinueResponse
    197:201:boolean ignoreContentAfterContinueResponse(java.lang.Object) -> ignoreContentAfterContinueResponse
    206:218:io.netty.handler.codec.http.FullHttpMessage beginAggregation(io.netty.handler.codec.http.HttpMessage,io.netty.buffer.ByteBuf) -> beginAggregation
    223:227:void aggregate(io.netty.handler.codec.http.FullHttpMessage,io.netty.handler.codec.http.HttpContent) -> aggregate
    237:242:void finishAggregation(io.netty.handler.codec.http.FullHttpMessage) -> finishAggregation
    246:287:void handleOversizedMessage(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpMessage) -> handleOversizedMessage
    87:87:void handleOversizedMessage(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleOversizedMessage
    87:87:void finishAggregation(io.netty.buffer.ByteBufHolder) -> finishAggregation
    87:87:void aggregate(io.netty.buffer.ByteBufHolder,io.netty.buffer.ByteBufHolder) -> aggregate
    87:87:io.netty.buffer.ByteBufHolder beginAggregation(java.lang.Object,io.netty.buffer.ByteBuf) -> beginAggregation
    87:87:java.lang.Object newContinueResponse(java.lang.Object,int,io.netty.channel.ChannelPipeline) -> newContinueResponse
    87:87:boolean isContentLengthInvalid(java.lang.Object,int) -> isContentLengthInvalid
    87:87:boolean isAggregated(java.lang.Object) -> isAggregated
    87:87:boolean isLastContentMessage(io.netty.buffer.ByteBufHolder) -> isLastContentMessage
    87:87:boolean isContentMessage(java.lang.Object) -> isContentMessage
    87:87:boolean isStartMessage(java.lang.Object) -> isStartMessage
    87:87:io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    87:105:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpObjectAggregator$1 -> io.netty.handler.codec.http.HttpObjectAggregator$1:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.handler.codec.http.HttpObjectAggregator this$0 -> this$0
    254:254:void <init>(io.netty.handler.codec.http.HttpObjectAggregator,io.netty.channel.ChannelHandlerContext) -> <init>
    257:261:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    254:254:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http.HttpObjectAggregator$2 -> io.netty.handler.codec.http.HttpObjectAggregator$2:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.handler.codec.http.HttpObjectAggregator this$0 -> this$0
    264:264:void <init>(io.netty.handler.codec.http.HttpObjectAggregator,io.netty.channel.ChannelHandlerContext) -> <init>
    267:271:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    264:264:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage -> io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:
    io.netty.handler.codec.http.HttpMessage message -> message
    io.netty.buffer.ByteBuf content -> content
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    294:298:void <init>(io.netty.handler.codec.http.HttpMessage,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders) -> <init>
    302:306:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    311:312:void setTrailingHeaders(io.netty.handler.codec.http.HttpHeaders) -> setTrailingHeaders
    316:316:io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    321:321:io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    326:327:io.netty.handler.codec.http.FullHttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    332:332:io.netty.handler.codec.http.HttpHeaders headers() -> headers
    337:337:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    342:342:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    347:348:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    352:352:io.netty.buffer.ByteBuf content() -> content
    357:357:int refCnt() -> refCnt
    362:363:io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    368:369:io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    374:375:io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    380:381:io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    386:386:boolean release() -> release
    391:391:boolean release(int) -> release
    289:289:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    289:289:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    289:289:io.netty.handler.codec.http.HttpContent touch() -> touch
    289:289:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    289:289:io.netty.handler.codec.http.HttpContent retain() -> retain
    289:289:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    289:289:io.netty.util.ReferenceCounted touch() -> touch
    289:289:io.netty.util.ReferenceCounted retain(int) -> retain
    289:289:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest -> io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:
    407:408:void <init>(io.netty.handler.codec.http.HttpRequest,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders) -> <init>
    436:437:io.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    442:443:io.netty.handler.codec.http.FullHttpRequest retain() -> retain
    448:449:io.netty.handler.codec.http.FullHttpRequest touch() -> touch
    454:455:io.netty.handler.codec.http.FullHttpRequest touch(java.lang.Object) -> touch
    460:461:io.netty.handler.codec.http.FullHttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    466:467:io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
    472:472:io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    477:477:java.lang.String getUri() -> getUri
    482:482:io.netty.handler.codec.http.HttpMethod method() -> method
    487:487:java.lang.String uri() -> uri
    492:493:io.netty.handler.codec.http.FullHttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    498:498:java.lang.String toString() -> toString
    404:404:io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    404:404:io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    404:404:io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    404:404:io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    404:404:io.netty.handler.codec.http.FullHttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    404:404:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    404:404:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    404:404:io.netty.handler.codec.http.HttpContent touch() -> touch
    404:404:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    404:404:io.netty.handler.codec.http.HttpContent retain() -> retain
    404:404:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    404:404:io.netty.util.ReferenceCounted touch() -> touch
    404:404:io.netty.util.ReferenceCounted retain(int) -> retain
    404:404:io.netty.util.ReferenceCounted retain() -> retain
    404:404:io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    404:404:io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    404:404:io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse -> io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:
    506:507:void <init>(io.netty.handler.codec.http.HttpResponse,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders) -> <init>
    521:521:io.netty.handler.codec.http.FullHttpResponse retainedDuplicate() -> retainedDuplicate
    526:530:io.netty.handler.codec.http.FullHttpResponse replace(io.netty.buffer.ByteBuf) -> replace
    541:541:io.netty.handler.codec.http.HttpResponseStatus getStatus() -> getStatus
    546:546:io.netty.handler.codec.http.HttpResponseStatus status() -> status
    551:552:io.netty.handler.codec.http.FullHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    557:558:io.netty.handler.codec.http.FullHttpResponse retain(int) -> retain
    563:564:io.netty.handler.codec.http.FullHttpResponse retain() -> retain
    569:570:io.netty.handler.codec.http.FullHttpResponse touch(java.lang.Object) -> touch
    575:576:io.netty.handler.codec.http.FullHttpResponse touch() -> touch
    581:581:java.lang.String toString() -> toString
    502:502:io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    502:502:io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    502:502:io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    502:502:io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    502:502:io.netty.handler.codec.http.FullHttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    502:502:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    502:502:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    502:502:io.netty.handler.codec.http.HttpContent touch() -> touch
    502:502:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    502:502:io.netty.handler.codec.http.HttpContent retain() -> retain
    502:502:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    502:502:io.netty.util.ReferenceCounted touch() -> touch
    502:502:io.netty.util.ReferenceCounted retain(int) -> retain
    502:502:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.HttpObjectDecoder -> io.netty.handler.codec.http.HttpObjectDecoder:
    int maxChunkSize -> maxChunkSize
    boolean chunkedSupported -> chunkedSupported
    boolean validateHeaders -> validateHeaders
    io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser headerParser -> headerParser
    io.netty.handler.codec.http.HttpObjectDecoder$LineParser lineParser -> lineParser
    io.netty.handler.codec.http.HttpMessage message -> message
    long chunkSize -> chunkSize
    long contentLength -> contentLength
    boolean resetRequested -> resetRequested
    java.lang.CharSequence name -> name
    java.lang.CharSequence value -> value
    io.netty.handler.codec.http.LastHttpContent trailer -> trailer
    io.netty.handler.codec.http.HttpObjectDecoder$State currentState -> currentState
    boolean $assertionsDisabled -> $assertionsDisabled
    148:149:void <init>() -> <init>
    156:157:void <init>(int,int,int,boolean) -> <init>
    165:166:void <init>(int,int,int,boolean,boolean) -> <init>
    113:192:void <init>(int,int,int,boolean,boolean,int) -> <init>
    196:398:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    402:445:void decodeLast(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decodeLast
    449:461:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    464:484:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    492:498:boolean isSwitchingToNonHttp1Protocol(io.netty.handler.codec.http.HttpResponse) -> isSwitchingToNonHttp1Protocol
    506:507:void reset() -> reset
    510:528:void resetNow() -> resetNow
    531:546:io.netty.handler.codec.http.HttpMessage invalidMessage(io.netty.buffer.ByteBuf,java.lang.Exception) -> invalidMessage
    550:560:io.netty.handler.codec.http.HttpContent invalidChunk(io.netty.buffer.ByteBuf,java.lang.Exception) -> invalidChunk
    564:576:boolean skipControlCharacters(io.netty.buffer.ByteBuf) -> skipControlCharacters
    580:630:io.netty.handler.codec.http.HttpObjectDecoder$State readHeaders(io.netty.buffer.ByteBuf) -> readHeaders
    634:637:long contentLength() -> contentLength
    641:687:io.netty.handler.codec.http.LastHttpContent readTrailingHeaders(io.netty.buffer.ByteBuf) -> readTrailingHeaders
    boolean isDecodingRequest() -> isDecodingRequest
    io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    io.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    695:704:int getChunkSize(java.lang.String) -> getChunkSize
    715:727:java.lang.String[] splitInitialLine(io.netty.util.internal.AppendableCharSequence) -> splitInitialLine
    731:761:void splitHeader(io.netty.util.internal.AppendableCharSequence) -> splitHeader
    764:769:int findNonWhitespace(io.netty.util.internal.AppendableCharSequence,int) -> findNonWhitespace
    773:778:int findWhitespace(io.netty.util.internal.AppendableCharSequence,int) -> findWhitespace
    782:787:int findEndOfString(io.netty.util.internal.AppendableCharSequence) -> findEndOfString
    102:102:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpObjectDecoder$1 -> io.netty.handler.codec.http.HttpObjectDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http$HttpObjectDecoder$State -> $SwitchMap$io$netty$handler$codec$http$HttpObjectDecoder$State
    232:232:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser -> io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser:
    io.netty.util.internal.AppendableCharSequence seq -> seq
    int maxLength -> maxLength
    int size -> size
    795:798:void <init>(io.netty.util.internal.AppendableCharSequence,int) -> <init>
    801:809:io.netty.util.internal.AppendableCharSequence parse(io.netty.buffer.ByteBuf) -> parse
    813:814:void reset() -> reset
    818:835:boolean process(byte) -> process
    839:839:io.netty.handler.codec.TooLongFrameException newException(int) -> newException
io.netty.handler.codec.http.HttpObjectDecoder$LineParser -> io.netty.handler.codec.http.HttpObjectDecoder$LineParser:
    846:847:void <init>(io.netty.util.internal.AppendableCharSequence,int) -> <init>
    851:852:io.netty.util.internal.AppendableCharSequence parse(io.netty.buffer.ByteBuf) -> parse
    857:857:io.netty.handler.codec.TooLongFrameException newException(int) -> newException
io.netty.handler.codec.http.HttpObjectDecoder$State -> io.netty.handler.codec.http.HttpObjectDecoder$State:
    io.netty.handler.codec.http.HttpObjectDecoder$State SKIP_CONTROL_CHARS -> SKIP_CONTROL_CHARS
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_INITIAL -> READ_INITIAL
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_HEADER -> READ_HEADER
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_VARIABLE_LENGTH_CONTENT -> READ_VARIABLE_LENGTH_CONTENT
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_FIXED_LENGTH_CONTENT -> READ_FIXED_LENGTH_CONTENT
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_SIZE -> READ_CHUNK_SIZE
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNKED_CONTENT -> READ_CHUNKED_CONTENT
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_DELIMITER -> READ_CHUNK_DELIMITER
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_FOOTER -> READ_CHUNK_FOOTER
    io.netty.handler.codec.http.HttpObjectDecoder$State BAD_MESSAGE -> BAD_MESSAGE
    io.netty.handler.codec.http.HttpObjectDecoder$State UPGRADED -> UPGRADED
    io.netty.handler.codec.http.HttpObjectDecoder$State[] $VALUES -> $VALUES
    126:126:io.netty.handler.codec.http.HttpObjectDecoder$State[] values() -> values
    126:126:io.netty.handler.codec.http.HttpObjectDecoder$State valueOf(java.lang.String) -> valueOf
    126:126:void <init>(java.lang.String,int) -> <init>
    126:137:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpObjectEncoder -> io.netty.handler.codec.http.HttpObjectEncoder:
    int CRLF_SHORT -> CRLF_SHORT
    int ZERO_CRLF_MEDIUM -> ZERO_CRLF_MEDIUM
    byte[] ZERO_CRLF_CRLF -> ZERO_CRLF_CRLF
    io.netty.buffer.ByteBuf CRLF_BUF -> CRLF_BUF
    io.netty.buffer.ByteBuf ZERO_CRLF_CRLF_BUF -> ZERO_CRLF_CRLF_BUF
    float HEADERS_WEIGHT_NEW -> HEADERS_WEIGHT_NEW
    float HEADERS_WEIGHT_HISTORICAL -> HEADERS_WEIGHT_HISTORICAL
    float TRAILERS_WEIGHT_NEW -> TRAILERS_WEIGHT_NEW
    float TRAILERS_WEIGHT_HISTORICAL -> TRAILERS_WEIGHT_HISTORICAL
    int ST_INIT -> ST_INIT
    int ST_CONTENT_NON_CHUNK -> ST_CONTENT_NON_CHUNK
    int ST_CONTENT_CHUNK -> ST_CONTENT_CHUNK
    int ST_CONTENT_ALWAYS_EMPTY -> ST_CONTENT_ALWAYS_EMPTY
    int state -> state
    float headersEncodedSizeAccumulator -> headersEncodedSizeAccumulator
    float trailersEncodedSizeAccumulator -> trailersEncodedSizeAccumulator
    49:79:void <init>() -> <init>
    83:181:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    187:192:void encodeHeaders(io.netty.handler.codec.http.HttpHeaders,io.netty.buffer.ByteBuf) -> encodeHeaders
    195:223:void encodeChunkedContent(io.netty.channel.ChannelHandlerContext,java.lang.Object,long,java.util.List) -> encodeChunkedContent
    230:230:void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpMessage,boolean) -> sanitizeHeadersBeforeEncode
    240:240:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    245:245:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    249:258:java.lang.Object encodeAndRetain(java.lang.Object) -> encodeAndRetain
    262:271:long contentLength(java.lang.Object) -> contentLength
    281:281:int padSizeForAccumulation(int) -> padSizeForAccumulation
    286:287:void encodeAscii(java.lang.String,io.netty.buffer.ByteBuf) -> encodeAscii
    void encodeInitialLine(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    52:55:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpRequest -> io.netty.handler.codec.http.HttpRequest:
    io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    io.netty.handler.codec.http.HttpMethod method() -> method
    io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    java.lang.String getUri() -> getUri
    java.lang.String uri() -> uri
    io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
io.netty.handler.codec.http.HttpRequestDecoder -> io.netty.handler.codec.http.HttpRequestDecoder:
    62:63:void <init>() -> <init>
    70:71:void <init>(int,int,int) -> <init>
    81:82:void <init>(int,int,int,boolean,int) -> <init>
    86:88:io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    93:93:io.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    98:98:boolean isDecodingRequest() -> isDecodingRequest
io.netty.handler.codec.http.HttpRequestEncoder -> io.netty.handler.codec.http.HttpRequestEncoder:
    28:28:void <init>() -> <init>
    36:36:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    41:79:void encodeInitialLine(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpRequest) -> encodeInitialLine
    28:28:void encodeInitialLine(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
io.netty.handler.codec.http.HttpResponse -> io.netty.handler.codec.http.HttpResponse:
    io.netty.handler.codec.http.HttpResponseStatus status() -> status
io.netty.handler.codec.http.HttpResponseDecoder -> io.netty.handler.codec.http.HttpResponseDecoder:
    io.netty.handler.codec.http.HttpResponseStatus UNKNOWN_STATUS -> UNKNOWN_STATUS
    93:94:void <init>() -> <init>
    106:107:void <init>(int,int,int,boolean) -> <init>
    112:113:void <init>(int,int,int,boolean,int) -> <init>
    117:119:io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    124:124:io.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    129:129:boolean isDecodingRequest() -> isDecodingRequest
    86:86:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpResponseEncoder -> io.netty.handler.codec.http.HttpResponseEncoder:
    27:27:void <init>() -> <init>
    31:31:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    36:40:void encodeInitialLine(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpResponse) -> encodeInitialLine
    44:58:void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpResponse,boolean) -> sanitizeHeadersBeforeEncode
    64:77:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpResponse) -> isContentAlwaysEmpty
    27:27:void encodeInitialLine(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    27:27:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    27:27:void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpMessage,boolean) -> sanitizeHeadersBeforeEncode
io.netty.handler.codec.http.HttpResponseStatus -> io.netty.handler.codec.http.HttpResponseStatus:
    io.netty.handler.codec.http.HttpResponseStatus CONTINUE -> CONTINUE
    io.netty.handler.codec.http.HttpResponseStatus SWITCHING_PROTOCOLS -> SWITCHING_PROTOCOLS
    io.netty.handler.codec.http.HttpResponseStatus PROCESSING -> PROCESSING
    io.netty.handler.codec.http.HttpResponseStatus OK -> OK
    io.netty.handler.codec.http.HttpResponseStatus CREATED -> CREATED
    io.netty.handler.codec.http.HttpResponseStatus ACCEPTED -> ACCEPTED
    io.netty.handler.codec.http.HttpResponseStatus NON_AUTHORITATIVE_INFORMATION -> NON_AUTHORITATIVE_INFORMATION
    io.netty.handler.codec.http.HttpResponseStatus NO_CONTENT -> NO_CONTENT
    io.netty.handler.codec.http.HttpResponseStatus RESET_CONTENT -> RESET_CONTENT
    io.netty.handler.codec.http.HttpResponseStatus PARTIAL_CONTENT -> PARTIAL_CONTENT
    io.netty.handler.codec.http.HttpResponseStatus MULTI_STATUS -> MULTI_STATUS
    io.netty.handler.codec.http.HttpResponseStatus MULTIPLE_CHOICES -> MULTIPLE_CHOICES
    io.netty.handler.codec.http.HttpResponseStatus MOVED_PERMANENTLY -> MOVED_PERMANENTLY
    io.netty.handler.codec.http.HttpResponseStatus FOUND -> FOUND
    io.netty.handler.codec.http.HttpResponseStatus SEE_OTHER -> SEE_OTHER
    io.netty.handler.codec.http.HttpResponseStatus NOT_MODIFIED -> NOT_MODIFIED
    io.netty.handler.codec.http.HttpResponseStatus USE_PROXY -> USE_PROXY
    io.netty.handler.codec.http.HttpResponseStatus TEMPORARY_REDIRECT -> TEMPORARY_REDIRECT
    io.netty.handler.codec.http.HttpResponseStatus PERMANENT_REDIRECT -> PERMANENT_REDIRECT
    io.netty.handler.codec.http.HttpResponseStatus BAD_REQUEST -> BAD_REQUEST
    io.netty.handler.codec.http.HttpResponseStatus UNAUTHORIZED -> UNAUTHORIZED
    io.netty.handler.codec.http.HttpResponseStatus PAYMENT_REQUIRED -> PAYMENT_REQUIRED
    io.netty.handler.codec.http.HttpResponseStatus FORBIDDEN -> FORBIDDEN
    io.netty.handler.codec.http.HttpResponseStatus NOT_FOUND -> NOT_FOUND
    io.netty.handler.codec.http.HttpResponseStatus METHOD_NOT_ALLOWED -> METHOD_NOT_ALLOWED
    io.netty.handler.codec.http.HttpResponseStatus NOT_ACCEPTABLE -> NOT_ACCEPTABLE
    io.netty.handler.codec.http.HttpResponseStatus PROXY_AUTHENTICATION_REQUIRED -> PROXY_AUTHENTICATION_REQUIRED
    io.netty.handler.codec.http.HttpResponseStatus REQUEST_TIMEOUT -> REQUEST_TIMEOUT
    io.netty.handler.codec.http.HttpResponseStatus CONFLICT -> CONFLICT
    io.netty.handler.codec.http.HttpResponseStatus GONE -> GONE
    io.netty.handler.codec.http.HttpResponseStatus LENGTH_REQUIRED -> LENGTH_REQUIRED
    io.netty.handler.codec.http.HttpResponseStatus PRECONDITION_FAILED -> PRECONDITION_FAILED
    io.netty.handler.codec.http.HttpResponseStatus REQUEST_ENTITY_TOO_LARGE -> REQUEST_ENTITY_TOO_LARGE
    io.netty.handler.codec.http.HttpResponseStatus REQUEST_URI_TOO_LONG -> REQUEST_URI_TOO_LONG
    io.netty.handler.codec.http.HttpResponseStatus UNSUPPORTED_MEDIA_TYPE -> UNSUPPORTED_MEDIA_TYPE
    io.netty.handler.codec.http.HttpResponseStatus REQUESTED_RANGE_NOT_SATISFIABLE -> REQUESTED_RANGE_NOT_SATISFIABLE
    io.netty.handler.codec.http.HttpResponseStatus EXPECTATION_FAILED -> EXPECTATION_FAILED
    io.netty.handler.codec.http.HttpResponseStatus MISDIRECTED_REQUEST -> MISDIRECTED_REQUEST
    io.netty.handler.codec.http.HttpResponseStatus UNPROCESSABLE_ENTITY -> UNPROCESSABLE_ENTITY
    io.netty.handler.codec.http.HttpResponseStatus LOCKED -> LOCKED
    io.netty.handler.codec.http.HttpResponseStatus FAILED_DEPENDENCY -> FAILED_DEPENDENCY
    io.netty.handler.codec.http.HttpResponseStatus UNORDERED_COLLECTION -> UNORDERED_COLLECTION
    io.netty.handler.codec.http.HttpResponseStatus UPGRADE_REQUIRED -> UPGRADE_REQUIRED
    io.netty.handler.codec.http.HttpResponseStatus PRECONDITION_REQUIRED -> PRECONDITION_REQUIRED
    io.netty.handler.codec.http.HttpResponseStatus TOO_MANY_REQUESTS -> TOO_MANY_REQUESTS
    io.netty.handler.codec.http.HttpResponseStatus REQUEST_HEADER_FIELDS_TOO_LARGE -> REQUEST_HEADER_FIELDS_TOO_LARGE
    io.netty.handler.codec.http.HttpResponseStatus INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    io.netty.handler.codec.http.HttpResponseStatus NOT_IMPLEMENTED -> NOT_IMPLEMENTED
    io.netty.handler.codec.http.HttpResponseStatus BAD_GATEWAY -> BAD_GATEWAY
    io.netty.handler.codec.http.HttpResponseStatus SERVICE_UNAVAILABLE -> SERVICE_UNAVAILABLE
    io.netty.handler.codec.http.HttpResponseStatus GATEWAY_TIMEOUT -> GATEWAY_TIMEOUT
    io.netty.handler.codec.http.HttpResponseStatus HTTP_VERSION_NOT_SUPPORTED -> HTTP_VERSION_NOT_SUPPORTED
    io.netty.handler.codec.http.HttpResponseStatus VARIANT_ALSO_NEGOTIATES -> VARIANT_ALSO_NEGOTIATES
    io.netty.handler.codec.http.HttpResponseStatus INSUFFICIENT_STORAGE -> INSUFFICIENT_STORAGE
    io.netty.handler.codec.http.HttpResponseStatus NOT_EXTENDED -> NOT_EXTENDED
    io.netty.handler.codec.http.HttpResponseStatus NETWORK_AUTHENTICATION_REQUIRED -> NETWORK_AUTHENTICATION_REQUIRED
    int code -> code
    io.netty.util.AsciiString codeAsText -> codeAsText
    io.netty.handler.codec.http.HttpStatusClass codeClass -> codeClass
    java.lang.String reasonPhrase -> reasonPhrase
    byte[] bytes -> bytes
    322:322:io.netty.handler.codec.http.HttpResponseStatus newStatus(int,java.lang.String) -> newStatus
    331:446:io.netty.handler.codec.http.HttpResponseStatus valueOf(int) -> valueOf
    569:570:void <init>(int) -> <init>
    576:577:void <init>(int,java.lang.String) -> <init>
    579:608:void <init>(int,java.lang.String,boolean) -> <init>
    614:614:int code() -> code
    621:621:io.netty.util.AsciiString codeAsText() -> codeAsText
    628:628:java.lang.String reasonPhrase() -> reasonPhrase
    635:639:io.netty.handler.codec.http.HttpStatusClass codeClass() -> codeClass
    644:644:int hashCode() -> hashCode
    653:657:boolean equals(java.lang.Object) -> equals
    666:666:int compareTo(io.netty.handler.codec.http.HttpResponseStatus) -> compareTo
    671:675:java.lang.String toString() -> toString
    679:686:void encode(io.netty.buffer.ByteBuf) -> encode
    30:30:int compareTo(java.lang.Object) -> compareTo
    35:319:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpScheme -> io.netty.handler.codec.http.HttpScheme:
    io.netty.handler.codec.http.HttpScheme HTTP -> HTTP
    io.netty.handler.codec.http.HttpScheme HTTPS -> HTTPS
    int port -> port
    io.netty.util.AsciiString name -> name
    39:42:void <init>(int,java.lang.String) -> <init>
    45:45:io.netty.util.AsciiString name() -> name
    49:49:int port() -> port
    54:58:boolean equals(java.lang.Object) -> equals
    63:63:int hashCode() -> hashCode
    68:68:java.lang.String toString() -> toString
    29:34:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpServerCodec -> io.netty.handler.codec.http.HttpServerCodec:
    java.util.Queue queue -> queue
    44:45:void <init>() -> <init>
    36:53:void <init>(int,int,int) -> <init>
    32:32:java.util.Queue access$100(io.netty.handler.codec.http.HttpServerCodec) -> access$100
io.netty.handler.codec.http.HttpServerCodec$1 -> io.netty.handler.codec.http.HttpServerCodec$1:
io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder -> io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder:
    io.netty.handler.codec.http.HttpServerCodec this$0 -> this$0
    84:86:void <init>(io.netty.handler.codec.http.HttpServerCodec,int,int,int) -> <init>
    100:109:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder -> io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder:
    io.netty.handler.codec.http.HttpMethod method -> method
    io.netty.handler.codec.http.HttpServerCodec this$0 -> this$0
    112:112:void <init>(io.netty.handler.codec.http.HttpServerCodec) -> <init>
    118:126:void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpResponse,boolean) -> sanitizeHeadersBeforeEncode
    130:131:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpResponse) -> isContentAlwaysEmpty
    112:112:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    112:112:void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpMessage,boolean) -> sanitizeHeadersBeforeEncode
    112:112:void <init>(io.netty.handler.codec.http.HttpServerCodec,io.netty.handler.codec.http.HttpServerCodec$1) -> <init>
io.netty.handler.codec.http.HttpStatusClass -> io.netty.handler.codec.http.HttpStatusClass:
    io.netty.handler.codec.http.HttpStatusClass INFORMATIONAL -> INFORMATIONAL
    io.netty.handler.codec.http.HttpStatusClass SUCCESS -> SUCCESS
    io.netty.handler.codec.http.HttpStatusClass REDIRECTION -> REDIRECTION
    io.netty.handler.codec.http.HttpStatusClass CLIENT_ERROR -> CLIENT_ERROR
    io.netty.handler.codec.http.HttpStatusClass SERVER_ERROR -> SERVER_ERROR
    io.netty.handler.codec.http.HttpStatusClass UNKNOWN -> UNKNOWN
    int min -> min
    int max -> max
    io.netty.util.AsciiString defaultReasonPhrase -> defaultReasonPhrase
    io.netty.handler.codec.http.HttpStatusClass[] $VALUES -> $VALUES
    24:24:io.netty.handler.codec.http.HttpStatusClass[] values() -> values
    24:24:io.netty.handler.codec.http.HttpStatusClass valueOf(java.lang.String) -> valueOf
    59:74:io.netty.handler.codec.http.HttpStatusClass valueOf(int) -> valueOf
    82:87:io.netty.handler.codec.http.HttpStatusClass valueOf(java.lang.CharSequence) -> valueOf
    91:91:int digit(char) -> digit
    95:95:boolean isDigit(char) -> isDigit
    102:106:void <init>(java.lang.String,int,int,int,java.lang.String) -> <init>
    112:112:boolean contains(int) -> contains
    119:119:io.netty.util.AsciiString defaultReasonPhrase() -> defaultReasonPhrase
    24:24:void <init>(java.lang.String,int,int,int,java.lang.String,io.netty.handler.codec.http.HttpStatusClass$1) -> <init>
    24:48:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpStatusClass$1 -> io.netty.handler.codec.http.HttpStatusClass$1:
    48:48:void <init>(java.lang.String,int,int,int,java.lang.String) -> <init>
    51:51:boolean contains(int) -> contains
io.netty.handler.codec.http.HttpUtil -> io.netty.handler.codec.http.HttpUtil:
    io.netty.util.AsciiString CHARSET_EQUALS -> CHARSET_EQUALS
    io.netty.util.AsciiString SEMICOLON -> SEMICOLON
    65:73:boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage) -> isKeepAlive
    176:189:long getContentLength(io.netty.handler.codec.http.HttpMessage,long) -> getContentLength
    208:226:int getWebSocketContentLength(io.netty.handler.codec.http.HttpMessage) -> getWebSocketContentLength
    233:234:void setContentLength(io.netty.handler.codec.http.HttpMessage,long) -> setContentLength
    237:237:boolean isContentLengthSet(io.netty.handler.codec.http.HttpMessage) -> isContentLengthSet
    250:256:boolean is100ContinueExpected(io.netty.handler.codec.http.HttpMessage) -> is100ContinueExpected
    268:273:boolean isUnsupportedExpectation(io.netty.handler.codec.http.HttpMessage) -> isUnsupportedExpectation
    282:283:boolean isExpectHeaderValid(io.netty.handler.codec.http.HttpMessage) -> isExpectHeaderValid
    308:308:boolean isTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage) -> isTransferEncodingChunked
    319:341:void setTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage,boolean) -> setTransferEncodingChunked
    33:34:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpVersion -> io.netty.handler.codec.http.HttpVersion:
    java.util.regex.Pattern VERSION_PATTERN -> VERSION_PATTERN
    io.netty.handler.codec.http.HttpVersion HTTP_1_0 -> HTTP_1_0
    io.netty.handler.codec.http.HttpVersion HTTP_1_1 -> HTTP_1_1
    java.lang.String protocolName -> protocolName
    int majorVersion -> majorVersion
    int minorVersion -> minorVersion
    java.lang.String text -> text
    boolean keepAliveDefault -> keepAliveDefault
    byte[] bytes -> bytes
    56:78:io.netty.handler.codec.http.HttpVersion valueOf(java.lang.String) -> valueOf
    82:88:io.netty.handler.codec.http.HttpVersion version0(java.lang.String) -> version0
    109:130:void <init>(java.lang.String,boolean) -> <init>
    151:186:void <init>(java.lang.String,int,int,boolean,boolean) -> <init>
    192:192:java.lang.String protocolName() -> protocolName
    199:199:int majorVersion() -> majorVersion
    206:206:int minorVersion() -> minorVersion
    213:213:java.lang.String text() -> text
    221:221:boolean isKeepAliveDefault() -> isKeepAliveDefault
    229:229:java.lang.String toString() -> toString
    234:235:int hashCode() -> hashCode
    240:247:boolean equals(java.lang.Object) -> equals
    252:262:int compareTo(io.netty.handler.codec.http.HttpVersion) -> compareTo
    266:271:void encode(io.netty.buffer.ByteBuf) -> encode
    29:29:int compareTo(java.lang.Object) -> compareTo
    31:45:void <clinit>() -> <clinit>
io.netty.handler.codec.http.LastHttpContent -> io.netty.handler.codec.http.LastHttpContent:
    io.netty.handler.codec.http.LastHttpContent EMPTY_LAST_CONTENT -> EMPTY_LAST_CONTENT
    io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    30:30:void <clinit>() -> <clinit>
io.netty.handler.codec.http.LastHttpContent$1 -> io.netty.handler.codec.http.LastHttpContent$1:
    30:30:void <init>() -> <init>
    34:34:io.netty.buffer.ByteBuf content() -> content
    59:59:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    64:64:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    70:70:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    75:75:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    80:80:int refCnt() -> refCnt
    85:85:io.netty.handler.codec.http.LastHttpContent retain() -> retain
    90:90:io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    95:95:io.netty.handler.codec.http.LastHttpContent touch() -> touch
    100:100:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    105:105:boolean release() -> release
    110:110:boolean release(int) -> release
    115:115:java.lang.String toString() -> toString
    30:30:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.HttpContent touch() -> touch
    30:30:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    30:30:io.netty.handler.codec.http.HttpContent retain() -> retain
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.QueryStringDecoder -> io.netty.handler.codec.http.QueryStringDecoder:
    java.nio.charset.Charset charset -> charset
    java.lang.String uri -> uri
    int maxParams -> maxParams
    int pathEndIdx -> pathEndIdx
    java.util.Map params -> params
    80:81:void <init>(java.lang.String) -> <init>
    96:97:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    104:105:void <init>(java.lang.String,java.nio.charset.Charset,boolean) -> <init>
    111:118:void <init>(java.lang.String,java.nio.charset.Charset,boolean,int) -> <init>
    155:155:java.lang.String toString() -> toString
    162:162:java.lang.String uri() -> uri
    179:182:java.util.Map parameters() -> parameters
    201:204:int pathEndIdx() -> pathEndIdx
    208:246:java.util.Map decodeParams(java.lang.String,int,java.nio.charset.Charset,int) -> decodeParams
    251:265:boolean addParam(java.lang.String,int,int,int,java.util.Map,java.nio.charset.Charset) -> addParam
    306:309:java.lang.String decodeComponent(java.lang.String,java.nio.charset.Charset) -> decodeComponent
    313:372:java.lang.String decodeComponent(java.lang.String,int,int,java.nio.charset.Charset,boolean) -> decodeComponent
    376:383:int findPathEndIndex(java.lang.String) -> findPathEndIndex
io.netty.handler.codec.http.multipart.AbstractDiskHttpData -> io.netty.handler.codec.http.multipart.AbstractDiskHttpData:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.io.File file -> file
    boolean isRenamed -> isRenamed
    java.nio.channels.FileChannel fileChannel -> fileChannel
    47:48:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    java.lang.String getDiskFilename() -> getDiskFilename
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getBaseDirectory() -> getBaseDirectory
    java.lang.String getPostfix() -> getPostfix
    boolean deleteOnExit() -> deleteOnExit
    81:98:java.io.File tempFile() -> tempFile
    103:141:void setContent(io.netty.buffer.ByteBuf) -> setContent
    146:191:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    245:262:void delete() -> delete
    266:269:byte[] get() -> get
    274:278:io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    332:332:boolean isInMemory() -> isInMemory
    414:431:byte[] readFrom(java.io.File) -> readFrom
    436:436:java.io.File getFile() -> getFile
    441:441:io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    446:446:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    38:38:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    38:38:io.netty.util.ReferenceCounted touch() -> touch
    40:40:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.AbstractHttpData -> io.netty.handler.codec.http.multipart.AbstractHttpData:
    java.util.regex.Pattern STRIP_PATTERN -> STRIP_PATTERN
    java.util.regex.Pattern REPLACE_PATTERN -> REPLACE_PATTERN
    java.lang.String name -> name
    long definedSize -> definedSize
    long size -> size
    java.nio.charset.Charset charset -> charset
    boolean completed -> completed
    long maxSize -> maxSize
    38:59:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    66:67:void setMaxSize(long) -> setMaxSize
    71:74:void checkSize(long) -> checkSize
    78:78:java.lang.String getName() -> getName
    83:83:boolean isCompleted() -> isCompleted
    87:88:void setCompleted() -> setCompleted
    92:92:java.nio.charset.Charset getCharset() -> getCharset
    97:101:void setCharset(java.nio.charset.Charset) -> setCharset
    105:105:long length() -> length
    110:110:long definedLength() -> definedLength
    116:118:io.netty.buffer.ByteBuf content() -> content
    124:125:void deallocate() -> deallocate
    129:130:io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    135:136:io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    32:33:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData -> io.netty.handler.codec.http.multipart.AbstractMemoryHttpData:
    io.netty.buffer.ByteBuf byteBuf -> byteBuf
    45:46:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    50:65:void setContent(io.netty.buffer.ByteBuf) -> setContent
    96:122:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    156:160:void delete() -> delete
    195:195:io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    220:220:boolean isInMemory() -> isInMemory
    264:264:io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    269:272:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    39:39:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    39:39:io.netty.util.ReferenceCounted touch() -> touch
io.netty.handler.codec.http.multipart.Attribute -> io.netty.handler.codec.http.multipart.Attribute:
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    io.netty.handler.codec.http.multipart.Attribute retain() -> retain
    io.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
    io.netty.handler.codec.http.multipart.Attribute touch() -> touch
    io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> touch
io.netty.handler.codec.http.multipart.CaseIgnoringComparator -> io.netty.handler.codec.http.multipart.CaseIgnoringComparator:
    io.netty.handler.codec.http.multipart.CaseIgnoringComparator INSTANCE -> INSTANCE
    27:28:void <init>() -> <init>
    32:50:int compare(java.lang.CharSequence,java.lang.CharSequence) -> compare
    21:21:int compare(java.lang.Object,java.lang.Object) -> compare
    25:25:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.DefaultHttpDataFactory -> io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:
    long MINSIZE -> MINSIZE
    long MAXSIZE -> MAXSIZE
    boolean useDisk -> useDisk
    boolean checkSize -> checkSize
    long minSize -> minSize
    long maxSize -> maxSize
    java.nio.charset.Charset charset -> charset
    java.util.Map requestFileDeleteMap -> requestFileDeleteMap
    55:72:void <init>() -> <init>
    75:77:void <init>(java.nio.charset.Charset) -> <init>
    55:85:void <init>(boolean) -> <init>
    88:90:void <init>(boolean,java.nio.charset.Charset) -> <init>
    55:99:void <init>(long) -> <init>
    102:104:void <init>(long,java.nio.charset.Charset) -> <init>
    108:109:void setMaxLimit(long) -> setMaxLimit
    115:120:java.util.List getList(io.netty.handler.codec.http.HttpRequest) -> getList
    125:141:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String) -> createAttribute
    146:162:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,long) -> createAttribute
    170:174:void checkHttpDataSize(io.netty.handler.codec.http.multipart.HttpData) -> checkHttpDataSize
    178:207:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String) -> createAttribute
    215:237:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> createFileUpload
    242:246:void removeHttpDataFromClean(io.netty.handler.codec.http.HttpRequest,io.netty.handler.codec.http.multipart.InterfaceHttpData) -> removeHttpDataFromClean
    250:257:void cleanRequestHttpData(io.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpData
    261:274:void cleanAllHttpData() -> cleanAllHttpData
    278:279:void cleanRequestHttpDatas(io.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpDatas
    283:284:void cleanAllHttpDatas() -> cleanAllHttpDatas
io.netty.handler.codec.http.multipart.DiskAttribute -> io.netty.handler.codec.http.multipart.DiskAttribute:
    java.lang.String baseDirectory -> baseDirectory
    boolean deleteOnExitTemporaryFile -> deleteOnExitTemporaryFile
    47:48:void <init>(java.lang.String,long) -> <init>
    51:52:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    55:56:void <init>(java.lang.String,long,java.nio.charset.Charset) -> <init>
    63:65:void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset) -> <init>
    69:69:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    74:75:java.lang.String getValue() -> getValue
    80:90:void setValue(java.lang.String) -> setValue
    94:100:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    104:104:int hashCode() -> hashCode
    109:113:boolean equals(java.lang.Object) -> equals
    118:122:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    126:126:int compareTo(io.netty.handler.codec.http.multipart.Attribute) -> compareTo
    132:134:java.lang.String toString() -> toString
    140:140:boolean deleteOnExit() -> deleteOnExit
    145:145:java.lang.String getBaseDirectory() -> getBaseDirectory
    150:150:java.lang.String getDiskFilename() -> getDiskFilename
    155:155:java.lang.String getPostfix() -> getPostfix
    160:160:java.lang.String getPrefix() -> getPrefix
    211:212:io.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
    217:218:io.netty.handler.codec.http.multipart.Attribute retain() -> retain
    223:224:io.netty.handler.codec.http.multipart.Attribute touch() -> touch
    229:230:io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    30:30:io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    30:30:io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    30:30:int compareTo(java.lang.Object) -> compareTo
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
    33:33:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.DiskFileUpload -> io.netty.handler.codec.http.multipart.DiskFileUpload:
    java.lang.String baseDirectory -> baseDirectory
    boolean deleteOnExitTemporaryFile -> deleteOnExitTemporaryFile
    java.lang.String filename -> filename
    java.lang.String contentType -> contentType
    java.lang.String contentTransferEncoding -> contentTransferEncoding
    47:51:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> <init>
    55:55:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    60:60:java.lang.String getFilename() -> getFilename
    65:69:void setFilename(java.lang.String) -> setFilename
    73:73:int hashCode() -> hashCode
    78:78:boolean equals(java.lang.Object) -> equals
    83:87:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    91:91:int compareTo(io.netty.handler.codec.http.multipart.FileUpload) -> compareTo
    96:100:void setContentType(java.lang.String) -> setContentType
    104:104:java.lang.String getContentType() -> getContentType
    109:109:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    114:115:void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    119:134:java.lang.String toString() -> toString
    140:140:boolean deleteOnExit() -> deleteOnExit
    145:145:java.lang.String getBaseDirectory() -> getBaseDirectory
    150:150:java.lang.String getDiskFilename() -> getDiskFilename
    155:155:java.lang.String getPostfix() -> getPostfix
    160:160:java.lang.String getPrefix() -> getPrefix
    211:212:io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    217:218:io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    223:224:io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    229:230:io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    30:30:io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    30:30:io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    30:30:int compareTo(java.lang.Object) -> compareTo
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
    33:33:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.FileUpload -> io.netty.handler.codec.http.multipart.FileUpload:
    java.lang.String getFilename() -> getFilename
    java.lang.String getContentType() -> getContentType
    java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
io.netty.handler.codec.http.multipart.FileUploadUtil -> io.netty.handler.codec.http.multipart.FileUploadUtil:
    23:23:int hashCode(io.netty.handler.codec.http.multipart.FileUpload) -> hashCode
    27:27:boolean equals(io.netty.handler.codec.http.multipart.FileUpload,io.netty.handler.codec.http.multipart.FileUpload) -> equals
    31:31:int compareTo(io.netty.handler.codec.http.multipart.FileUpload,io.netty.handler.codec.http.multipart.FileUpload) -> compareTo
io.netty.handler.codec.http.multipart.HttpData -> io.netty.handler.codec.http.multipart.HttpData:
    void setMaxSize(long) -> setMaxSize
    void checkSize(long) -> checkSize
    void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    boolean isCompleted() -> isCompleted
    long length() -> length
    long definedLength() -> definedLength
    void delete() -> delete
    io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    void setCharset(java.nio.charset.Charset) -> setCharset
    java.nio.charset.Charset getCharset() -> getCharset
io.netty.handler.codec.http.multipart.HttpDataFactory -> io.netty.handler.codec.http.multipart.HttpDataFactory:
    io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String) -> createAttribute
    io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,long) -> createAttribute
    io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String) -> createAttribute
    io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> createFileUpload
    void cleanRequestHttpData(io.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpData
io.netty.handler.codec.http.multipart.HttpPostBodyUtil -> io.netty.handler.codec.http.multipart.HttpPostBodyUtil:
    131:136:int findNonWhitespace(java.lang.String,int) -> findNonWhitespace
    145:150:int findEndOfString(java.lang.String) -> findEndOfString
io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize -> io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize:
    byte[] bytes -> bytes
    int readerIndex -> readerIndex
    int pos -> pos
    int origPos -> origPos
    int limit -> limit
    io.netty.buffer.ByteBuf buffer -> buffer
    93:102:void <init>(io.netty.buffer.ByteBuf) -> <init>
    110:113:void setReadPosition(int) -> setReadPosition
    121:121:int getReadPosition(int) -> getReadPosition
io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism -> io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism:
    io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BIT7 -> BIT7
    io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BIT8 -> BIT8
    io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BINARY -> BINARY
    java.lang.String value -> value
    io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism[] $VALUES -> $VALUES
    45:45:io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism[] values() -> values
    45:45:io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism valueOf(java.lang.String) -> valueOf
    61:63:void <init>(java.lang.String,int,java.lang.String) -> <init>
    66:66:java.lang.String value() -> value
    71:71:java.lang.String toString() -> toString
    45:57:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder -> io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:
    io.netty.handler.codec.http.multipart.HttpDataFactory factory -> factory
    io.netty.handler.codec.http.HttpRequest request -> request
    java.nio.charset.Charset charset -> charset
    boolean isLastChunk -> isLastChunk
    java.util.List bodyListHttpData -> bodyListHttpData
    java.util.Map bodyMapHttpData -> bodyMapHttpData
    io.netty.buffer.ByteBuf undecodedChunk -> undecodedChunk
    int bodyListHttpDataRank -> bodyListHttpDataRank
    java.lang.String multipartDataBoundary -> multipartDataBoundary
    java.lang.String multipartMixedBoundary -> multipartMixedBoundary
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus currentStatus -> currentStatus
    java.util.Map currentFieldAttributes -> currentFieldAttributes
    io.netty.handler.codec.http.multipart.FileUpload currentFileUpload -> currentFileUpload
    io.netty.handler.codec.http.multipart.Attribute currentAttribute -> currentAttribute
    boolean destroyed -> destroyed
    int discardThreshold -> discardThreshold
    java.lang.String FILENAME_ENCODED -> FILENAME_ENCODED
    78:190:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset) -> <init>
    196:206:void setMultipart(java.lang.String) -> setMultipart
    209:213:void checkDestroyed() -> checkDestroyed
    322:340:io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> offer
    355:363:boolean hasNext() -> hasNext
    380:385:io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> next
    405:412:void parseBody() -> parseBody
    418:428:void addHttpData(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> addHttpData
    438:450:void parseBodyMultipart() -> parseBodyMultipart
    469:571:io.netty.handler.codec.http.multipart.InterfaceHttpData decodeMultipart(io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus) -> decodeMultipart
    581:597:void skipControlCharacters(io.netty.buffer.ByteBuf) -> skipControlCharacters
    602:608:void skipControlCharactersStandard(io.netty.buffer.ByteBuf) -> skipControlCharactersStandard
    625:656:io.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDelimiter(java.lang.String,io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus,io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus) -> findMultipartDelimiter
    666:793:io.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDisposition() -> findMultipartDisposition
    801:827:io.netty.handler.codec.http.multipart.Attribute getContentDispositionAttribute(java.lang.String[]) -> getContentDispositionAttribute
    841:927:io.netty.handler.codec.http.multipart.InterfaceHttpData getFileUpload(java.lang.String) -> getFileUpload
    936:949:void destroy() -> destroy
    956:959:void cleanFiles() -> cleanFiles
    976:981:void cleanMixedAttributes() -> cleanMixedAttributes
    992:1020:java.lang.String readLineStandard(io.netty.buffer.ByteBuf,java.nio.charset.Charset) -> readLineStandard
    1032:1068:java.lang.String readLine(io.netty.buffer.ByteBuf,java.nio.charset.Charset) -> readLine
    1087:1163:java.lang.String readDelimiterStandard(io.netty.buffer.ByteBuf,java.lang.String) -> readDelimiterStandard
    1181:1287:java.lang.String readDelimiter(io.netty.buffer.ByteBuf,java.lang.String) -> readDelimiter
    1297:1331:boolean loadDataMultipartStandard(io.netty.buffer.ByteBuf,java.lang.String,io.netty.handler.codec.http.multipart.HttpData) -> loadDataMultipartStandard
    1341:1380:boolean loadDataMultipart(io.netty.buffer.ByteBuf,java.lang.String,io.netty.handler.codec.http.multipart.HttpData) -> loadDataMultipart
    1389:1409:java.lang.String cleanString(java.lang.String) -> cleanString
    1418:1438:boolean skipOneLine() -> skipOneLine
    1448:1484:java.lang.String[] splitMultipartHeader(java.lang.String) -> splitMultipartHeader
    1492:1518:java.lang.String[] splitMultipartHeaderValues(java.lang.String) -> splitMultipartHeaderValues
    53:53:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> offer
    798:798:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder$1 -> io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus -> $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus
    469:469:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.HttpPostRequestDecoder -> io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:
    io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder decoder -> decoder
    68:69:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest) -> <init>
    85:101:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset) -> <init>
    143:146:boolean isMultipart(io.netty.handler.codec.http.HttpRequest) -> isMultipart
    157:192:java.lang.String[] getMultipartDataBoundary(java.lang.String) -> getMultipartDataBoundary
    227:227:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> offer
    232:232:boolean hasNext() -> hasNext
    237:237:io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> next
    247:248:void destroy() -> destroy
    272:291:java.lang.String[] splitHeaderContentType(java.lang.String) -> splitHeaderContentType
io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$EndOfDataDecoderException -> io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$EndOfDataDecoderException:
    320:320:void <init>() -> <init>
io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$ErrorDataDecoderException -> io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$ErrorDataDecoderException:
    330:331:void <init>() -> <init>
    334:335:void <init>(java.lang.String) -> <init>
    338:339:void <init>(java.lang.Throwable) -> <init>
    342:343:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus -> io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus:
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus NOTSTARTED -> NOTSTARTED
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus PREAMBLE -> PREAMBLE
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus HEADERDELIMITER -> HEADERDELIMITER
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus DISPOSITION -> DISPOSITION
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus FIELD -> FIELD
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus FILEUPLOAD -> FILEUPLOAD
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDPREAMBLE -> MIXEDPREAMBLE
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDDELIMITER -> MIXEDDELIMITER
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDDISPOSITION -> MIXEDDISPOSITION
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDFILEUPLOAD -> MIXEDFILEUPLOAD
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDCLOSEDELIMITER -> MIXEDCLOSEDELIMITER
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus CLOSEDELIMITER -> CLOSEDELIMITER
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus PREEPILOGUE -> PREEPILOGUE
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus EPILOGUE -> EPILOGUE
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus[] $VALUES -> $VALUES
    133:133:io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus[] values() -> values
    133:133:io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus valueOf(java.lang.String) -> valueOf
    133:133:void <init>(java.lang.String,int) -> <init>
    133:135:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$NotEnoughDataDecoderException -> io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$NotEnoughDataDecoderException:
    301:302:void <init>() -> <init>
    305:306:void <init>(java.lang.String) -> <init>
    309:310:void <init>(java.lang.Throwable) -> <init>
io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder -> io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:
    io.netty.handler.codec.http.multipart.HttpDataFactory factory -> factory
    io.netty.handler.codec.http.HttpRequest request -> request
    java.nio.charset.Charset charset -> charset
    boolean isLastChunk -> isLastChunk
    java.util.List bodyListHttpData -> bodyListHttpData
    java.util.Map bodyMapHttpData -> bodyMapHttpData
    io.netty.buffer.ByteBuf undecodedChunk -> undecodedChunk
    int bodyListHttpDataRank -> bodyListHttpDataRank
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus currentStatus -> currentStatus
    io.netty.handler.codec.http.multipart.Attribute currentAttribute -> currentAttribute
    boolean destroyed -> destroyed
    int discardThreshold -> discardThreshold
    71:159:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset) -> <init>
    162:166:void checkDestroyed() -> checkDestroyed
    275:293:io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> offer
    308:316:boolean hasNext() -> hasNext
    333:338:io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> next
    354:361:void parseBody() -> parseBody
    367:377:void addHttpData(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> addHttpData
    388:493:void parseBodyAttributesStandard() -> parseBodyAttributesStandard
    504:627:void parseBodyAttributes() -> parseBodyAttributes
    630:635:void setFinalBuffer(io.netty.buffer.ByteBuf) -> setFinalBuffer
    644:646:java.lang.String decodeAttribute(java.lang.String,java.nio.charset.Charset) -> decodeAttribute
    656:669:void destroy() -> destroy
    676:679:void cleanFiles() -> cleanFiles
    46:46:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> offer
io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$1 -> io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus -> $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus
    400:400:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.InterfaceHttpData -> io.netty.handler.codec.http.multipart.InterfaceHttpData:
    java.lang.String getName() -> getName
    io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType -> io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType:
    io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType Attribute -> Attribute
    io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType FileUpload -> FileUpload
    io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType InternalAttribute -> InternalAttribute
    io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType[] $VALUES -> $VALUES
    24:24:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType[] values() -> values
    24:24:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:25:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder -> io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder:
    io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> offer
    boolean hasNext() -> hasNext
    io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> next
    void destroy() -> destroy
io.netty.handler.codec.http.multipart.MemoryAttribute -> io.netty.handler.codec.http.multipart.MemoryAttribute:
    33:34:void <init>(java.lang.String) -> <init>
    37:38:void <init>(java.lang.String,long) -> <init>
    41:42:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    45:46:void <init>(java.lang.String,long,java.nio.charset.Charset) -> <init>
    53:55:void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset) -> <init>
    59:59:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    64:64:java.lang.String getValue() -> getValue
    69:79:void setValue(java.lang.String) -> setValue
    83:89:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    93:93:int hashCode() -> hashCode
    98:102:boolean equals(java.lang.Object) -> equals
    107:111:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    115:115:int compareTo(io.netty.handler.codec.http.multipart.Attribute) -> compareTo
    120:120:java.lang.String toString() -> toString
    171:172:io.netty.handler.codec.http.multipart.Attribute retain() -> retain
    177:178:io.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
    183:184:io.netty.handler.codec.http.multipart.Attribute touch() -> touch
    189:190:io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    30:30:io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    30:30:io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    30:30:int compareTo(java.lang.Object) -> compareTo
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.multipart.MemoryFileUpload -> io.netty.handler.codec.http.multipart.MemoryFileUpload:
    java.lang.String filename -> filename
    java.lang.String contentType -> contentType
    java.lang.String contentTransferEncoding -> contentTransferEncoding
    41:45:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> <init>
    49:49:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    54:54:java.lang.String getFilename() -> getFilename
    59:63:void setFilename(java.lang.String) -> setFilename
    67:67:int hashCode() -> hashCode
    72:72:boolean equals(java.lang.Object) -> equals
    77:81:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    85:85:int compareTo(io.netty.handler.codec.http.multipart.FileUpload) -> compareTo
    90:94:void setContentType(java.lang.String) -> setContentType
    98:98:java.lang.String getContentType() -> getContentType
    103:103:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    108:109:void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    113:120:java.lang.String toString() -> toString
    172:173:io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    178:179:io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    184:185:io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    190:191:io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    31:31:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    31:31:io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    31:31:io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    31:31:io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    31:31:int compareTo(java.lang.Object) -> compareTo
    31:31:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:io.netty.util.ReferenceCounted touch() -> touch
    31:31:io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.multipart.MixedAttribute -> io.netty.handler.codec.http.multipart.MixedAttribute:
    io.netty.handler.codec.http.multipart.Attribute attribute -> attribute
    long limitSize -> limitSize
    long maxSize -> maxSize
    33:46:void <init>(java.lang.String,long,java.nio.charset.Charset) -> <init>
    33:51:void <init>(java.lang.String,long,long,java.nio.charset.Charset) -> <init>
    33:77:void <init>(java.lang.String,java.lang.String,long,java.nio.charset.Charset) -> <init>
    86:88:void setMaxSize(long) -> setMaxSize
    92:95:void checkSize(long) -> checkSize
    99:113:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    117:118:void delete() -> delete
    127:127:io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    132:132:java.nio.charset.Charset getCharset() -> getCharset
    147:147:boolean isCompleted() -> isCompleted
    157:157:long length() -> length
    162:162:long definedLength() -> definedLength
    172:173:void setCharset(java.nio.charset.Charset) -> setCharset
    213:213:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    218:218:java.lang.String getName() -> getName
    223:223:int hashCode() -> hashCode
    228:228:boolean equals(java.lang.Object) -> equals
    233:233:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    238:238:java.lang.String toString() -> toString
    243:243:java.lang.String getValue() -> getValue
    248:252:void setValue(java.lang.String) -> setValue
    286:286:io.netty.buffer.ByteBuf content() -> content
    291:291:int refCnt() -> refCnt
    296:297:io.netty.handler.codec.http.multipart.Attribute retain() -> retain
    302:303:io.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
    308:309:io.netty.handler.codec.http.multipart.Attribute touch() -> touch
    314:315:io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> touch
    320:320:boolean release() -> release
    325:325:boolean release(int) -> release
    29:29:int compareTo(java.lang.Object) -> compareTo
    29:29:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    29:29:io.netty.util.ReferenceCounted touch() -> touch
    29:29:io.netty.util.ReferenceCounted retain(int) -> retain
    29:29:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.multipart.MixedFileUpload -> io.netty.handler.codec.http.multipart.MixedFileUpload:
    io.netty.handler.codec.http.multipart.FileUpload fileUpload -> fileUpload
    long limitSize -> limitSize
    long definedSize -> definedSize
    long maxSize -> maxSize
    35:49:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long,long) -> <init>
    58:60:void setMaxSize(long) -> setMaxSize
    64:67:void checkSize(long) -> checkSize
    72:92:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    96:97:void delete() -> delete
    106:106:io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    111:111:java.nio.charset.Charset getCharset() -> getCharset
    116:116:java.lang.String getContentType() -> getContentType
    121:121:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    126:126:java.lang.String getFilename() -> getFilename
    141:141:boolean isCompleted() -> isCompleted
    151:151:long length() -> length
    156:156:long definedLength() -> definedLength
    166:167:void setCharset(java.nio.charset.Charset) -> setCharset
    248:248:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    253:253:java.lang.String getName() -> getName
    258:258:int hashCode() -> hashCode
    263:263:boolean equals(java.lang.Object) -> equals
    268:268:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    273:273:java.lang.String toString() -> toString
    308:308:io.netty.buffer.ByteBuf content() -> content
    313:313:int refCnt() -> refCnt
    318:319:io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    324:325:io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    330:331:io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    336:337:io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    342:342:boolean release() -> release
    347:347:boolean release(int) -> release
    28:28:int compareTo(java.lang.Object) -> compareTo
    28:28:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    28:28:io.netty.util.ReferenceCounted touch() -> touch
    28:28:io.netty.util.ReferenceCounted retain(int) -> retain
    28:28:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame -> io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame:
    30:31:void <init>() -> <init>
    40:41:void <init>(io.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    59:59:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame copy() -> copy
    64:64:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame duplicate() -> duplicate
    69:69:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retainedDuplicate() -> retainedDuplicate
    74:74:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    79:80:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retain() -> retain
    85:86:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retain(int) -> retain
    91:92:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame touch() -> touch
    97:98:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame touch(java.lang.Object) -> touch
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    24:24:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    24:24:io.netty.buffer.ByteBufHolder touch() -> touch
    24:24:io.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:io.netty.buffer.ByteBufHolder retain() -> retain
    24:24:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    24:24:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    24:24:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:io.netty.buffer.ByteBufHolder copy() -> copy
    24:24:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:io.netty.util.ReferenceCounted touch() -> touch
    24:24:io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.CloseWebSocketFrame -> io.netty.handler.codec.http.websocketx.CloseWebSocketFrame:
    32:33:void <init>() -> <init>
    45:46:void <init>(int,java.lang.String) -> <init>
    74:75:void <init>(boolean,int,int,java.lang.String) -> <init>
    78:89:io.netty.buffer.ByteBuf newBinaryData(int,java.lang.String) -> newBinaryData
    103:104:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    142:142:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame copy() -> copy
    147:147:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame duplicate() -> duplicate
    152:152:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame retainedDuplicate() -> retainedDuplicate
    157:157:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    162:163:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame retain() -> retain
    168:169:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame retain(int) -> retain
    174:175:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame touch() -> touch
    180:181:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame touch(java.lang.Object) -> touch
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    26:26:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    26:26:io.netty.buffer.ByteBufHolder touch() -> touch
    26:26:io.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:io.netty.buffer.ByteBufHolder retain() -> retain
    26:26:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    26:26:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    26:26:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:io.netty.buffer.ByteBufHolder copy() -> copy
    26:26:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:io.netty.util.ReferenceCounted touch() -> touch
    26:26:io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame -> io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:
    32:33:void <init>() -> <init>
    42:43:void <init>(io.netty.buffer.ByteBuf) -> <init>
    56:57:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    96:96:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame copy() -> copy
    101:101:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame duplicate() -> duplicate
    106:106:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retainedDuplicate() -> retainedDuplicate
    111:111:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    116:117:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retain() -> retain
    122:123:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retain(int) -> retain
    128:129:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame touch() -> touch
    134:135:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame touch(java.lang.Object) -> touch
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    26:26:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    26:26:io.netty.buffer.ByteBufHolder touch() -> touch
    26:26:io.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:io.netty.buffer.ByteBufHolder retain() -> retain
    26:26:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    26:26:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    26:26:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:io.netty.buffer.ByteBufHolder copy() -> copy
    26:26:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:io.netty.util.ReferenceCounted touch() -> touch
    26:26:io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.PingWebSocketFrame -> io.netty.handler.codec.http.websocketx.PingWebSocketFrame:
    30:31:void <init>() -> <init>
    40:41:void <init>(io.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    59:59:io.netty.handler.codec.http.websocketx.PingWebSocketFrame copy() -> copy
    64:64:io.netty.handler.codec.http.websocketx.PingWebSocketFrame duplicate() -> duplicate
    69:69:io.netty.handler.codec.http.websocketx.PingWebSocketFrame retainedDuplicate() -> retainedDuplicate
    74:74:io.netty.handler.codec.http.websocketx.PingWebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    79:80:io.netty.handler.codec.http.websocketx.PingWebSocketFrame retain() -> retain
    85:86:io.netty.handler.codec.http.websocketx.PingWebSocketFrame retain(int) -> retain
    91:92:io.netty.handler.codec.http.websocketx.PingWebSocketFrame touch() -> touch
    97:98:io.netty.handler.codec.http.websocketx.PingWebSocketFrame touch(java.lang.Object) -> touch
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    24:24:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    24:24:io.netty.buffer.ByteBufHolder touch() -> touch
    24:24:io.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:io.netty.buffer.ByteBufHolder retain() -> retain
    24:24:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    24:24:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    24:24:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:io.netty.buffer.ByteBufHolder copy() -> copy
    24:24:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:io.netty.util.ReferenceCounted touch() -> touch
    24:24:io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.PongWebSocketFrame -> io.netty.handler.codec.http.websocketx.PongWebSocketFrame:
    30:31:void <init>() -> <init>
    40:41:void <init>(io.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    59:59:io.netty.handler.codec.http.websocketx.PongWebSocketFrame copy() -> copy
    64:64:io.netty.handler.codec.http.websocketx.PongWebSocketFrame duplicate() -> duplicate
    69:69:io.netty.handler.codec.http.websocketx.PongWebSocketFrame retainedDuplicate() -> retainedDuplicate
    74:74:io.netty.handler.codec.http.websocketx.PongWebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    79:80:io.netty.handler.codec.http.websocketx.PongWebSocketFrame retain() -> retain
    85:86:io.netty.handler.codec.http.websocketx.PongWebSocketFrame retain(int) -> retain
    91:92:io.netty.handler.codec.http.websocketx.PongWebSocketFrame touch() -> touch
    97:98:io.netty.handler.codec.http.websocketx.PongWebSocketFrame touch(java.lang.Object) -> touch
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    24:24:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    24:24:io.netty.buffer.ByteBufHolder touch() -> touch
    24:24:io.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:io.netty.buffer.ByteBufHolder retain() -> retain
    24:24:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    24:24:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    24:24:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:io.netty.buffer.ByteBufHolder copy() -> copy
    24:24:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:io.netty.util.ReferenceCounted touch() -> touch
    24:24:io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.TextWebSocketFrame -> io.netty.handler.codec.http.websocketx.TextWebSocketFrame:
    31:32:void <init>() -> <init>
    51:52:void <init>(io.netty.buffer.ByteBuf) -> <init>
    87:88:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    99:99:io.netty.handler.codec.http.websocketx.TextWebSocketFrame copy() -> copy
    104:104:io.netty.handler.codec.http.websocketx.TextWebSocketFrame duplicate() -> duplicate
    109:109:io.netty.handler.codec.http.websocketx.TextWebSocketFrame retainedDuplicate() -> retainedDuplicate
    114:114:io.netty.handler.codec.http.websocketx.TextWebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    119:120:io.netty.handler.codec.http.websocketx.TextWebSocketFrame retain() -> retain
    125:126:io.netty.handler.codec.http.websocketx.TextWebSocketFrame retain(int) -> retain
    131:132:io.netty.handler.codec.http.websocketx.TextWebSocketFrame touch() -> touch
    137:138:io.netty.handler.codec.http.websocketx.TextWebSocketFrame touch(java.lang.Object) -> touch
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    25:25:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    25:25:io.netty.buffer.ByteBufHolder touch() -> touch
    25:25:io.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:io.netty.buffer.ByteBufHolder retain() -> retain
    25:25:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    25:25:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    25:25:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:io.netty.buffer.ByteBufHolder copy() -> copy
    25:25:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:io.netty.util.ReferenceCounted touch() -> touch
    25:25:io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.Utf8Validator -> io.netty.handler.codec.http.websocketx.Utf8Validator:
    byte[] TYPES -> TYPES
    byte[] STATES -> STATES
    int state -> state
    int codep -> codep
    boolean checking -> checking
    45:67:void <init>() -> <init>
    73:75:void check(io.netty.buffer.ByteBuf) -> check
    88:98:boolean process(byte) -> process
    49:60:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder -> io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder:
    long maxFrameSize -> maxFrameSize
    boolean receivedClosingHandshake -> receivedClosingHandshake
    41:42:void <init>() -> <init>
    51:53:void <init>(int) -> <init>
    58:77:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    80:102:io.netty.handler.codec.http.websocketx.WebSocketFrame decodeBinaryFrame(io.netty.channel.ChannelHandlerContext,byte,io.netty.buffer.ByteBuf) -> decodeBinaryFrame
    106:134:io.netty.handler.codec.http.websocketx.WebSocketFrame decodeTextFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> decodeTextFrame
io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder -> io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder:
    io.netty.buffer.ByteBuf _0X00 -> _0X00
    io.netty.buffer.ByteBuf _0XFF -> _0XFF
    io.netty.buffer.ByteBuf _0XFF_0X00 -> _0XFF_0X00
    33:33:void <init>() -> <init>
    43:100:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> encode
    32:32:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    34:39:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder -> io.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder:
    94:95:void <init>(boolean,boolean,int,boolean) -> <init>
io.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder -> io.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder:
    71:72:void <init>(boolean) -> <init>
io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder -> io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    long maxFramePayloadLength -> maxFramePayloadLength
    boolean allowExtensions -> allowExtensions
    boolean expectMaskedFrames -> expectMaskedFrames
    boolean allowMaskMismatch -> allowMaskMismatch
    int fragmentedFramesCount -> fragmentedFramesCount
    boolean frameFinalFlag -> frameFinalFlag
    boolean frameMasked -> frameMasked
    int frameRsv -> frameRsv
    int frameOpcode -> frameOpcode
    long framePayloadLength -> framePayloadLength
    byte[] maskingKey -> maskingKey
    int framePayloadLen1 -> framePayloadLen1
    boolean receivedClosingHandshake -> receivedClosingHandshake
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State state -> state
    110:149:void <init>(boolean,boolean,int,boolean) -> <init>
    155:379:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    384:409:void unmask(io.netty.buffer.ByteBuf) -> unmask
    412:413:void protocolViolation(io.netty.channel.ChannelHandlerContext,java.lang.String) -> protocolViolation
    416:426:void protocolViolation(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.CorruptedFrameException) -> protocolViolation
    430:433:int toFrameLength(long) -> toFrameLength
    440:469:void checkCloseFrameBody(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> checkCloseFrameBody
    87:87:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$1 -> io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http$websocketx$WebSocket08FrameDecoder$State -> $SwitchMap$io$netty$handler$codec$http$websocketx$WebSocket08FrameDecoder$State
    159:159:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State -> io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State:
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State READING_FIRST -> READING_FIRST
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State READING_SECOND -> READING_SECOND
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State READING_SIZE -> READING_SIZE
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State MASKING_KEY -> MASKING_KEY
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State PAYLOAD -> PAYLOAD
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State CORRUPT -> CORRUPT
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State[] $VALUES -> $VALUES
    78:78:io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State[] values() -> values
    78:78:io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State valueOf(java.lang.String) -> valueOf
    78:78:void <init>(java.lang.String,int) -> <init>
    78:84:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder -> io.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    boolean maskPayload -> maskPayload
    101:103:void <init>(boolean) -> <init>
    107:233:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> encode
    73:73:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    75:75:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder -> io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder:
    94:95:void <init>(boolean,boolean,int,boolean) -> <init>
io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder -> io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder:
    71:72:void <init>(boolean) -> <init>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker -> io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker:
    java.nio.channels.ClosedChannelException CLOSED_CHANNEL_EXCEPTION -> CLOSED_CHANNEL_EXCEPTION
    java.lang.String HTTP_SCHEME_PREFIX -> HTTP_SCHEME_PREFIX
    java.lang.String HTTPS_SCHEME_PREFIX -> HTTPS_SCHEME_PREFIX
    java.net.URI uri -> uri
    io.netty.handler.codec.http.websocketx.WebSocketVersion version -> version
    boolean handshakeComplete -> handshakeComplete
    java.lang.String expectedSubprotocol -> expectedSubprotocol
    java.lang.String actualSubprotocol -> actualSubprotocol
    io.netty.handler.codec.http.HttpHeaders customHeaders -> customHeaders
    int maxFramePayloadLength -> maxFramePayloadLength
    84:90:void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,io.netty.handler.codec.http.HttpHeaders,int) -> <init>
    96:96:java.net.URI uri() -> uri
    110:110:int maxFramePayloadLength() -> maxFramePayloadLength
    121:122:void setHandshakeComplete() -> setHandshakeComplete
    128:128:java.lang.String expectedSubprotocol() -> expectedSubprotocol
    136:136:java.lang.String actualSubprotocol() -> actualSubprotocol
    140:141:void setActualSubprotocol(java.lang.String) -> setActualSubprotocol
    150:153:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel) -> handshake
    165:199:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> handshake
    io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    216:301:void finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpResponse) -> finishHandshake
    void verify(io.netty.handler.codec.http.FullHttpResponse) -> verify
    io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    414:417:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame) -> close
    431:434:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,io.netty.channel.ChannelPromise) -> close
    441:447:java.lang.String rawPath(java.net.URI) -> rawPath
    451:469:java.lang.CharSequence websocketHostValue(java.net.URI) -> websocketHostValue
    473:496:java.lang.CharSequence websocketOriginValue(java.net.URI) -> websocketOriginValue
    48:52:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$1 -> io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$1:
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> this$0
    177:177:void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,io.netty.channel.ChannelPromise) -> <init>
    180:197:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    177:177:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$2 -> io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$2:
    io.netty.channel.ChannelPipeline val$p -> val$p
    io.netty.handler.codec.http.HttpClientCodec val$codec -> val$codec
    io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> this$0
    277:277:void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,io.netty.channel.ChannelPipeline,io.netty.handler.codec.http.HttpClientCodec) -> <init>
    280:281:void run() -> run
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$3 -> io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$3:
    io.netty.channel.ChannelPipeline val$p -> val$p
    io.netty.channel.ChannelHandlerContext val$context -> val$context
    io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> this$0
    294:294:void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,io.netty.channel.ChannelPipeline,io.netty.channel.ChannelHandlerContext) -> <init>
    297:298:void run() -> run
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 -> io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00:
    io.netty.util.AsciiString WEBSOCKET -> WEBSOCKET
    io.netty.buffer.ByteBuf expectedChallengeResponseBytes -> expectedChallengeResponseBytes
    67:68:void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,io.netty.handler.codec.http.HttpHeaders,int) -> <init>
    91:154:io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    179:200:void verify(io.netty.handler.codec.http.FullHttpResponse) -> verify
    203:222:java.lang.String insertRandomCharacters(java.lang.String) -> insertRandomCharacters
    226:233:java.lang.String insertSpaces(java.lang.String,int) -> insertSpaces
    238:238:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    243:243:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    46:46:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 -> io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String expectedChallengeResponseString -> expectedChallengeResponseString
    boolean allowExtensions -> allowExtensions
    boolean performMasking -> performMasking
    boolean allowMaskMismatch -> allowMaskMismatch
    100:104:void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> <init>
    127:164:io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    186:208:void verify(io.netty.handler.codec.http.FullHttpResponse) -> verify
    212:212:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    217:217:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    42:42:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08 -> io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String expectedChallengeResponseString -> expectedChallengeResponseString
    boolean allowExtensions -> allowExtensions
    boolean performMasking -> performMasking
    boolean allowMaskMismatch -> allowMaskMismatch
    101:105:void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> <init>
    128:165:io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    187:209:void verify(io.netty.handler.codec.http.FullHttpResponse) -> verify
    213:213:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    218:218:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    42:42:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13 -> io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String expectedChallengeResponseString -> expectedChallengeResponseString
    boolean allowExtensions -> allowExtensions
    boolean performMasking -> performMasking
    boolean allowMaskMismatch -> allowMaskMismatch
    101:105:void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> <init>
    128:165:io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    187:209:void verify(io.netty.handler.codec.http.FullHttpResponse) -> verify
    213:213:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    218:218:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    42:42:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory -> io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory:
    110:130:io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> newHandshaker
io.netty.handler.codec.http.websocketx.WebSocketFrame -> io.netty.handler.codec.http.websocketx.WebSocketFrame:
    boolean finalFragment -> finalFragment
    int rsv -> rsv
    39:40:void <init>(io.netty.buffer.ByteBuf) -> <init>
    43:46:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    53:53:boolean isFinalFragment() -> isFinalFragment
    60:60:int rsv() -> rsv
    65:65:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    70:70:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    75:75:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> replace
    83:83:java.lang.String toString() -> toString
    88:89:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    94:95:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    100:101:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    106:107:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    25:25:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    25:25:io.netty.buffer.ByteBufHolder touch() -> touch
    25:25:io.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:io.netty.buffer.ByteBufHolder retain() -> retain
    25:25:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    25:25:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    25:25:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:io.netty.buffer.ByteBufHolder copy() -> copy
    25:25:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:io.netty.util.ReferenceCounted touch() -> touch
    25:25:io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder -> io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder:
io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder -> io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder:
io.netty.handler.codec.http.websocketx.WebSocketHandshakeException -> io.netty.handler.codec.http.websocketx.WebSocketHandshakeException:
    26:27:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.http.websocketx.WebSocketScheme -> io.netty.handler.codec.http.websocketx.WebSocketScheme:
    io.netty.handler.codec.http.websocketx.WebSocketScheme WS -> WS
    io.netty.handler.codec.http.websocketx.WebSocketScheme WSS -> WSS
    int port -> port
    io.netty.util.AsciiString name -> name
    38:41:void <init>(int,java.lang.String) -> <init>
    44:44:io.netty.util.AsciiString name() -> name
    48:48:int port() -> port
    53:57:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    67:67:java.lang.String toString() -> toString
    28:33:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker -> io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.nio.channels.ClosedChannelException CLOSED_CHANNEL_EXCEPTION -> CLOSED_CHANNEL_EXCEPTION
    java.lang.String uri -> uri
    java.lang.String[] subprotocols -> subprotocols
    io.netty.handler.codec.http.websocketx.WebSocketVersion version -> version
    int maxFramePayloadLength -> maxFramePayloadLength
    java.lang.String selectedSubprotocol -> selectedSubprotocol
    83:96:void <init>(io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,java.lang.String,int) -> <init>
    102:102:java.lang.String uri() -> uri
    118:118:io.netty.handler.codec.http.websocketx.WebSocketVersion version() -> version
    127:127:int maxFramePayloadLength() -> maxFramePayloadLength
    142:142:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpRequest) -> handshake
    164:206:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders,io.netty.channel.ChannelPromise) -> handshake
    221:221:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpRequest) -> handshake
    243:294:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpRequest,io.netty.handler.codec.http.HttpHeaders,io.netty.channel.ChannelPromise) -> handshake
    io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    311:314:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame) -> close
    328:331:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,io.netty.channel.ChannelPromise) -> close
    342:360:java.lang.String selectSubprotocol(java.lang.String) -> selectSubprotocol
    370:370:java.lang.String selectedSubprotocol() -> selectedSubprotocol
    io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    48:48:java.nio.channels.ClosedChannelException access$000() -> access$000
    49:50:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$1 -> io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$1:
    java.lang.String val$encoderName -> val$encoderName
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker this$0 -> this$0
    194:194:void <init>(io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,java.lang.String,io.netty.channel.ChannelPromise) -> <init>
    197:204:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    194:194:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2 -> io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2:
    io.netty.channel.Channel val$channel -> val$channel
    io.netty.handler.codec.http.HttpHeaders val$responseHeaders -> val$responseHeaders
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker this$0 -> this$0
    266:266:void <init>(io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.netty.channel.Channel,io.netty.handler.codec.http.HttpHeaders,io.netty.channel.ChannelPromise) -> <init>
    270:272:void channelRead0(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest) -> channelRead0
    277:280:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    285:287:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    266:266:void channelRead0(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead0
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 -> io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00:
    java.util.regex.Pattern BEGINNING_DIGIT -> BEGINNING_DIGIT
    java.util.regex.Pattern BEGINNING_SPACE -> BEGINNING_SPACE
    63:64:void <init>(java.lang.String,java.lang.String,int) -> <init>
    110:170:io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    183:183:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,io.netty.channel.ChannelPromise) -> close
    188:188:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    193:193:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    47:48:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker07 -> io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker07:
    boolean allowExtensions -> allowExtensions
    boolean allowMaskMismatch -> allowMaskMismatch
    82:85:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    123:157:io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    162:162:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    167:167:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker08 -> io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker08:
    boolean allowExtensions -> allowExtensions
    boolean allowMaskMismatch -> allowMaskMismatch
    82:85:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    123:156:io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    161:161:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    166:166:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 -> io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13:
    boolean allowExtensions -> allowExtensions
    boolean allowMaskMismatch -> allowMaskMismatch
    81:84:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    122:154:io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    159:159:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    164:164:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory -> io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory:
    java.lang.String webSocketURL -> webSocketURL
    java.lang.String subprotocols -> subprotocols
    boolean allowExtensions -> allowExtensions
    int maxFramePayloadLength -> maxFramePayloadLength
    boolean allowMaskMismatch -> allowMaskMismatch
    100:106:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    116:135:io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker newHandshaker(io.netty.handler.codec.http.HttpRequest) -> newHandshaker
    151:151:io.netty.channel.ChannelFuture sendUnsupportedVersionResponse(io.netty.channel.Channel) -> sendUnsupportedVersionResponse
    158:163:io.netty.channel.ChannelFuture sendUnsupportedVersionResponse(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> sendUnsupportedVersionResponse
io.netty.handler.codec.http.websocketx.WebSocketUtil -> io.netty.handler.codec.http.websocketx.WebSocketUtil:
    io.netty.util.concurrent.FastThreadLocal MD5 -> MD5
    io.netty.util.concurrent.FastThreadLocal SHA1 -> SHA1
    66:66:byte[] md5(byte[]) -> md5
    77:77:byte[] sha1(byte[]) -> sha1
    81:83:byte[] digest(io.netty.util.concurrent.FastThreadLocal,byte[]) -> digest
    93:97:java.lang.String base64(byte[]) -> base64
    107:113:byte[] randomBytes(int) -> randomBytes
    124:124:int randomNumber(int,int) -> randomNumber
    32:45:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketUtil$1 -> io.netty.handler.codec.http.websocketx.WebSocketUtil$1:
    32:32:void <init>() -> <init>
    37:40:java.security.MessageDigest initialValue() -> initialValue
    32:32:java.lang.Object initialValue() -> initialValue
io.netty.handler.codec.http.websocketx.WebSocketUtil$2 -> io.netty.handler.codec.http.websocketx.WebSocketUtil$2:
    45:45:void <init>() -> <init>
    50:53:java.security.MessageDigest initialValue() -> initialValue
    45:45:java.lang.Object initialValue() -> initialValue
io.netty.handler.codec.http.websocketx.WebSocketVersion -> io.netty.handler.codec.http.websocketx.WebSocketVersion:
    io.netty.handler.codec.http.websocketx.WebSocketVersion UNKNOWN -> UNKNOWN
    io.netty.handler.codec.http.websocketx.WebSocketVersion V00 -> V00
    io.netty.handler.codec.http.websocketx.WebSocketVersion V07 -> V07
    io.netty.handler.codec.http.websocketx.WebSocketVersion V08 -> V08
    io.netty.handler.codec.http.websocketx.WebSocketVersion V13 -> V13
    io.netty.handler.codec.http.websocketx.WebSocketVersion[] $VALUES -> $VALUES
    27:27:io.netty.handler.codec.http.websocketx.WebSocketVersion[] values() -> values
    27:27:io.netty.handler.codec.http.websocketx.WebSocketVersion valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    59:71:java.lang.String toHttpHeaderValue() -> toHttpHeaderValue
    27:53:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder -> io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder:
    io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector DEFAULT_HEADER_SENSITIVITY_DETECTOR -> DEFAULT_HEADER_SENSITIVITY_DETECTOR
    io.netty.handler.codec.http2.Http2Settings initialSettings -> initialSettings
    io.netty.handler.codec.http2.Http2FrameListener frameListener -> frameListener
    long gracefulShutdownTimeoutMillis -> gracefulShutdownTimeoutMillis
    java.lang.Boolean isServer -> isServer
    java.lang.Integer maxReservedStreams -> maxReservedStreams
    io.netty.handler.codec.http2.Http2Connection connection -> connection
    io.netty.handler.codec.http2.Http2ConnectionDecoder decoder -> decoder
    io.netty.handler.codec.http2.Http2ConnectionEncoder encoder -> encoder
    java.lang.Boolean validateHeaders -> validateHeaders
    io.netty.handler.codec.http2.Http2FrameLogger frameLogger -> frameLogger
    io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector headerSensitivityDetector -> headerSensitivityDetector
    java.lang.Boolean encoderEnforceMaxConcurrentStreams -> encoderEnforceMaxConcurrentStreams
    java.lang.Boolean encoderIgnoreMaxHeaderListSize -> encoderIgnoreMaxHeaderListSize
    int initialHuffmanDecodeCapacity -> initialHuffmanDecodeCapacity
    boolean $assertionsDisabled -> $assertionsDisabled
    78:108:void <init>() -> <init>
    114:114:io.netty.handler.codec.http2.Http2Settings initialSettings() -> initialSettings
    121:122:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder initialSettings(io.netty.handler.codec.http2.Http2Settings) -> initialSettings
    131:131:io.netty.handler.codec.http2.Http2FrameListener frameListener() -> frameListener
    139:140:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder frameListener(io.netty.handler.codec.http2.Http2FrameListener) -> frameListener
    148:148:long gracefulShutdownTimeoutMillis() -> gracefulShutdownTimeoutMillis
    155:160:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder gracefulShutdownTimeoutMillis(long) -> gracefulShutdownTimeoutMillis
    168:168:boolean isServer() -> isServer
    176:181:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder server(boolean) -> server
    192:192:int maxReservedStreams() -> maxReservedStreams
    199:204:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder maxReservedStreams(int) -> maxReservedStreams
    213:213:io.netty.handler.codec.http2.Http2Connection connection() -> connection
    220:227:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder connection(io.netty.handler.codec.http2.Http2Connection) -> connection
    236:236:io.netty.handler.codec.http2.Http2ConnectionDecoder decoder() -> decoder
    245:245:io.netty.handler.codec.http2.Http2ConnectionEncoder encoder() -> encoder
    252:270:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder codec(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder) -> codec
    278:278:boolean isValidateHeaders() -> isValidateHeaders
    286:288:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder validateHeaders(boolean) -> validateHeaders
    297:297:io.netty.handler.codec.http2.Http2FrameLogger frameLogger() -> frameLogger
    304:306:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder frameLogger(io.netty.handler.codec.http2.Http2FrameLogger) -> frameLogger
    314:314:boolean encoderEnforceMaxConcurrentStreams() -> encoderEnforceMaxConcurrentStreams
    322:324:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder encoderEnforceMaxConcurrentStreams(boolean) -> encoderEnforceMaxConcurrentStreams
    331:331:io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector headerSensitivityDetector() -> headerSensitivityDetector
    338:340:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder headerSensitivityDetector(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> headerSensitivityDetector
    351:353:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder encoderIgnoreMaxHeaderListSize(boolean) -> encoderIgnoreMaxHeaderListSize
    362:364:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder initialHuffmanDecodeCapacity(int) -> initialHuffmanDecodeCapacity
    371:381:io.netty.handler.codec.http2.Http2ConnectionHandler build() -> build
    385:413:io.netty.handler.codec.http2.Http2ConnectionHandler buildFromConnection(io.netty.handler.codec.http2.Http2Connection) -> buildFromConnection
    420:432:io.netty.handler.codec.http2.Http2ConnectionHandler buildFromCodec(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder) -> buildFromCodec
    io.netty.handler.codec.http2.Http2ConnectionHandler build(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings) -> build
    452:452:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder self() -> self
    456:458:void enforceNonCodecConstraints(java.lang.String) -> enforceNonCodecConstraints
    461:465:void enforceConstraint(java.lang.String,java.lang.String,java.lang.Object) -> enforceConstraint
    77:81:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.CharSequenceMap -> io.netty.handler.codec.http2.CharSequenceMap:
    32:33:void <init>() -> <init>
    36:37:void <init>(boolean) -> <init>
    40:41:void <init>(boolean,io.netty.handler.codec.ValueConverter) -> <init>
    45:47:void <init>(boolean,io.netty.handler.codec.ValueConverter,int) -> <init>
io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder -> io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder:
    int compressionLevel -> compressionLevel
    int windowBits -> windowBits
    int memLevel -> memLevel
    io.netty.handler.codec.http2.Http2Connection$PropertyKey propertyKey -> propertyKey
    58:82:void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder,int,int,int) -> <init>
    87:138:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> writeData
    146:158:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    167:180:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    195:202:io.netty.channel.embedded.EmbeddedChannel newContentCompressor(io.netty.channel.ChannelHandlerContext,java.lang.CharSequence) -> newContentCompressor
    214:214:java.lang.CharSequence getTargetContentEncoding(java.lang.CharSequence) -> getTargetContentEncoding
    223:224:io.netty.channel.embedded.EmbeddedChannel newCompressionChannel(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.compression.ZlibWrapper) -> newCompressionChannel
    240:263:io.netty.channel.embedded.EmbeddedChannel newCompressor(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Headers,boolean) -> newCompressor
    272:278:void bindCompressorToStream(io.netty.channel.embedded.EmbeddedChannel,int) -> bindCompressorToStream
    287:298:void cleanup(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.embedded.EmbeddedChannel) -> cleanup
    308:316:io.netty.buffer.ByteBuf nextReadableBuf(io.netty.channel.embedded.EmbeddedChannel) -> nextReadableBuf
    42:42:io.netty.handler.codec.http2.Http2Connection$PropertyKey access$000(io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder) -> access$000
io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder$1 -> io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder$1:
    io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder this$0 -> this$0
    73:73:void <init>(io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder) -> <init>
    76:80:void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
io.netty.handler.codec.http2.DecoratingHttp2ConnectionEncoder -> io.netty.handler.codec.http2.DecoratingHttp2ConnectionEncoder:
    io.netty.handler.codec.http2.Http2ConnectionEncoder delegate -> delegate
    29:31:void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder) -> <init>
    35:36:void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager) -> lifecycleManager
    40:40:io.netty.handler.codec.http2.Http2Connection connection() -> connection
    45:45:io.netty.handler.codec.http2.Http2RemoteFlowController flowController() -> flowController
    50:50:io.netty.handler.codec.http2.Http2FrameWriter frameWriter() -> frameWriter
    55:55:io.netty.handler.codec.http2.Http2Settings pollSentSettings() -> pollSentSettings
    60:61:void remoteSettings(io.netty.handler.codec.http2.Http2Settings) -> remoteSettings
io.netty.handler.codec.http2.DecoratingHttp2FrameWriter -> io.netty.handler.codec.http2.DecoratingHttp2FrameWriter:
    io.netty.handler.codec.http2.Http2FrameWriter delegate -> delegate
    32:34:void <init>(io.netty.handler.codec.http2.Http2FrameWriter) -> <init>
    39:39:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> writeData
    45:45:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    52:53:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    65:65:io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> writeRstStream
    70:70:io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> writeSettings
    75:75:io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> writeSettingsAck
    80:80:io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writePing
    86:86:io.netty.channel.ChannelFuture writePushPromise(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int,io.netty.channel.ChannelPromise) -> writePushPromise
    92:92:io.netty.channel.ChannelFuture writeGoAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writeGoAway
    98:98:io.netty.channel.ChannelFuture writeWindowUpdate(io.netty.channel.ChannelHandlerContext,int,int,io.netty.channel.ChannelPromise) -> writeWindowUpdate
    104:104:io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writeFrame
    109:109:io.netty.handler.codec.http2.Http2FrameWriter$Configuration configuration() -> configuration
    114:115:void close() -> close
io.netty.handler.codec.http2.DefaultHttp2Connection -> io.netty.handler.codec.http2.DefaultHttp2Connection:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.collection.IntObjectMap streamMap -> streamMap
    io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry propertyKeyRegistry -> propertyKeyRegistry
    io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream connectionStream -> connectionStream
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint -> localEndpoint
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint -> remoteEndpoint
    java.util.List listeners -> listeners
    io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams -> activeStreams
    io.netty.util.concurrent.Promise closePromise -> closePromise
    91:92:void <init>(boolean) -> <init>
    68:111:void <init>(boolean,int) -> <init>
    117:117:boolean isClosed() -> isClosed
    122:169:io.netty.util.concurrent.Future close(io.netty.util.concurrent.Promise) -> close
    174:175:void addListener(io.netty.handler.codec.http2.Http2Connection$Listener) -> addListener
    184:184:boolean isServer() -> isServer
    189:189:io.netty.handler.codec.http2.Http2Stream connectionStream() -> connectionStream
    194:194:io.netty.handler.codec.http2.Http2Stream stream(int) -> stream
    199:199:boolean streamMayHaveExisted(int) -> streamMayHaveExisted
    204:204:int numActiveStreams() -> numActiveStreams
    209:209:io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor) -> forEachActiveStream
    214:214:io.netty.handler.codec.http2.Http2Connection$Endpoint local() -> local
    219:219:io.netty.handler.codec.http2.Http2Connection$Endpoint remote() -> remote
    224:224:boolean goAwayReceived() -> goAwayReceived
    229:251:void goAwayReceived(int,long,io.netty.buffer.ByteBuf) -> goAwayReceived
    255:255:boolean goAwaySent() -> goAwaySent
    260:282:void goAwaySent(int,long,io.netty.buffer.ByteBuf) -> goAwaySent
    288:288:boolean isStreamMapEmpty() -> isStreamMapEmpty
    299:319:void removeStream(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator) -> removeStream
    323:331:io.netty.handler.codec.http2.Http2Stream$State activeState(int,io.netty.handler.codec.http2.Http2Stream$State,boolean,boolean) -> activeState
    337:344:void notifyHalfClosed(io.netty.handler.codec.http2.Http2Stream) -> notifyHalfClosed
    347:354:void notifyClosed(io.netty.handler.codec.http2.Http2Stream) -> notifyClosed
    358:358:io.netty.handler.codec.http2.Http2Connection$PropertyKey newKey() -> newKey
    369:369:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey verifyKey(io.netty.handler.codec.http2.Http2Connection$PropertyKey) -> verifyKey
    65:65:io.netty.util.internal.logging.InternalLogger access$400() -> access$400
    66:66:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2Connection$1 -> io.netty.handler.codec.http2.DefaultHttp2Connection$1:
    int val$lastKnownStream -> val$lastKnownStream
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> this$0
    239:239:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,int) -> <init>
    242:245:boolean visit(io.netty.handler.codec.http2.Http2Stream) -> visit
io.netty.handler.codec.http2.DefaultHttp2Connection$2 -> io.netty.handler.codec.http2.DefaultHttp2Connection$2:
    int val$lastKnownStream -> val$lastKnownStream
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> this$0
    270:270:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,int) -> <init>
    273:276:boolean visit(io.netty.handler.codec.http2.Http2Stream) -> visit
io.netty.handler.codec.http2.DefaultHttp2Connection$3 -> io.netty.handler.codec.http2.DefaultHttp2Connection$3:
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State -> $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State
    323:323:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams -> io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams:
    java.util.List listeners -> listeners
    java.util.Queue pendingEvents -> pendingEvents
    java.util.Set streams -> streams
    int pendingIterations -> pendingIterations
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> this$0
    914:920:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,java.util.List) -> <init>
    923:923:int size() -> size
    927:937:void activate(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream) -> activate
    940:950:void deactivate(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator) -> deactivate
    953:962:io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor) -> forEachActiveStream
    967:979:void addToActiveStreams(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream) -> addToActiveStreams
    982:988:void removeFromActiveStreams(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator) -> removeFromActiveStreams
    991:991:boolean allowModifications() -> allowModifications
    995:996:void incrementPendingIterations() -> incrementPendingIterations
    999:1013:void decrementPendingIterations() -> decrementPendingIterations
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$1 -> io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$1:
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream val$stream -> val$stream
    io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams this$1 -> this$1
    930:930:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams,io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream) -> <init>
    933:934:void process() -> process
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$2 -> io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$2:
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream val$stream -> val$stream
    java.util.Iterator val$itr -> val$itr
    io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams this$1 -> this$1
    943:943:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams,io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator) -> <init>
    946:947:void process() -> process
io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream -> io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream:
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> this$0
    590:592:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection) -> <init>
    596:596:boolean isResetSent() -> isResetSent
    601:601:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint createdBy() -> createdBy
    606:606:io.netty.handler.codec.http2.Http2Stream resetSent() -> resetSent
    611:611:io.netty.handler.codec.http2.Http2Stream open(boolean) -> open
    616:616:io.netty.handler.codec.http2.Http2Stream close() -> close
    621:621:io.netty.handler.codec.http2.Http2Stream closeLocalSide() -> closeLocalSide
    626:626:io.netty.handler.codec.http2.Http2Stream closeRemoteSide() -> closeRemoteSide
    631:631:io.netty.handler.codec.http2.Http2Stream headersSent(boolean) -> headersSent
    636:636:boolean isHeadersSent() -> isHeadersSent
    641:641:io.netty.handler.codec.http2.Http2Stream pushPromiseSent() -> pushPromiseSent
    646:646:boolean isPushPromiseSent() -> isPushPromiseSent
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint -> io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint:
    boolean server -> server
    int nextStreamIdToCreate -> nextStreamIdToCreate
    int nextReservationStreamId -> nextReservationStreamId
    int lastStreamKnownByPeer -> lastStreamKnownByPeer
    boolean pushToAllowed -> pushToAllowed
    io.netty.handler.codec.http2.Http2FlowController flowController -> flowController
    int maxStreams -> maxStreams
    int maxActiveStreams -> maxActiveStreams
    int maxReservedStreams -> maxReservedStreams
    int numActiveStreams -> numActiveStreams
    int numStreams -> numStreams
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> this$0
    668:699:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,boolean,int) -> <init>
    703:703:int incrementAndGetNextStreamId() -> incrementAndGetNextStreamId
    707:712:void incrementExpectedStreamId(int) -> incrementExpectedStreamId
    716:716:boolean isValidStreamId(int) -> isValidStreamId
    721:721:boolean mayHaveCreatedStream(int) -> mayHaveCreatedStream
    726:726:boolean canOpenStream() -> canOpenStream
    731:743:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream createStream(int,boolean) -> createStream
    748:748:boolean created(io.netty.handler.codec.http2.Http2Stream) -> created
    753:753:boolean isServer() -> isServer
    758:777:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream reservePushStream(int,io.netty.handler.codec.http2.Http2Stream) -> reservePushStream
    782:792:void addStream(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream) -> addStream
    796:800:void allowPushTo(boolean) -> allowPushTo
    804:804:boolean allowPushTo() -> allowPushTo
    809:809:int numActiveStreams() -> numActiveStreams
    814:814:int maxActiveStreams() -> maxActiveStreams
    819:821:void maxActiveStreams(int) -> maxActiveStreams
    825:825:int lastStreamCreated() -> lastStreamCreated
    830:830:int lastStreamKnownByPeer() -> lastStreamKnownByPeer
    834:835:void lastStreamKnownByPeer(int) -> lastStreamKnownByPeer
    839:839:io.netty.handler.codec.http2.Http2FlowController flowController() -> flowController
    844:845:void flowController(io.netty.handler.codec.http2.Http2FlowController) -> flowController
    849:849:io.netty.handler.codec.http2.Http2Connection$Endpoint opposite() -> opposite
    853:854:void updateMaxStreams() -> updateMaxStreams
    857:887:void checkNewStreamAllowed(int,io.netty.handler.codec.http2.Http2Stream$State) -> checkNewStreamAllowed
    890:890:boolean isLocal() -> isLocal
    653:653:io.netty.handler.codec.http2.Http2Stream reservePushStream(int,io.netty.handler.codec.http2.Http2Stream) -> reservePushStream
    653:653:io.netty.handler.codec.http2.Http2Stream createStream(int,boolean) -> createStream
    653:653:int access$100(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint) -> access$100
    653:653:void access$200(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint,int) -> access$200
    653:653:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey -> io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey:
    int index -> index
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> this$0
    1022:1024:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,int) -> <init>
    1027:1030:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey verifyConnection(io.netty.handler.codec.http2.Http2Connection) -> verifyConnection
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream -> io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream:
    int id -> id
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap properties -> properties
    io.netty.handler.codec.http2.Http2Stream$State state -> state
    byte metaState -> metaState
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> this$0
    383:390:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,int,io.netty.handler.codec.http2.Http2Stream$State) -> <init>
    394:394:int id() -> id
    399:399:io.netty.handler.codec.http2.Http2Stream$State state() -> state
    404:404:boolean isResetSent() -> isResetSent
    409:410:io.netty.handler.codec.http2.Http2Stream resetSent() -> resetSent
    415:418:io.netty.handler.codec.http2.Http2Stream headersSent(boolean) -> headersSent
    423:423:boolean isHeadersSent() -> isHeadersSent
    428:428:boolean isTrailersSent() -> isTrailersSent
    433:436:io.netty.handler.codec.http2.Http2Stream headersReceived(boolean) -> headersReceived
    441:441:boolean isHeadersReceived() -> isHeadersReceived
    446:446:boolean isTrailersReceived() -> isTrailersReceived
    451:452:io.netty.handler.codec.http2.Http2Stream pushPromiseSent() -> pushPromiseSent
    457:457:boolean isPushPromiseSent() -> isPushPromiseSent
    462:462:java.lang.Object setProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey,java.lang.Object) -> setProperty
    467:467:java.lang.Object getProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey) -> getProperty
    472:472:java.lang.Object removeProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey) -> removeProperty
    477:482:io.netty.handler.codec.http2.Http2Stream open(boolean) -> open
    486:487:void activate() -> activate
    490:498:io.netty.handler.codec.http2.Http2Stream close(java.util.Iterator) -> close
    503:503:io.netty.handler.codec.http2.Http2Stream close() -> close
    508:519:io.netty.handler.codec.http2.Http2Stream closeLocalSide() -> closeLocalSide
    524:535:io.netty.handler.codec.http2.Http2Stream closeRemoteSide() -> closeRemoteSide
    539:539:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint createdBy() -> createdBy
    543:543:boolean isLocal() -> isLocal
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap -> io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap:
    java.lang.Object[] values -> values
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream this$1 -> this$1
    549:550:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream) -> <init>
    553:557:java.lang.Object add(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey,java.lang.Object) -> add
    562:565:java.lang.Object get(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey) -> get
    570:575:java.lang.Object remove(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey) -> remove
    579:582:void resizeIfNecessary(int) -> resizeIfNecessary
    549:549:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,io.netty.handler.codec.http2.DefaultHttp2Connection$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2Connection$Event -> io.netty.handler.codec.http2.DefaultHttp2Connection$Event:
    void process() -> process
io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry -> io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry:
    java.util.List keys -> keys
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> this$0
    1037:1043:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection) -> <init>
    1049:1051:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey newKey() -> newKey
    1055:1055:int size() -> size
    1037:1037:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,io.netty.handler.codec.http2.DefaultHttp2Connection$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder -> io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.handler.codec.http2.Http2FrameListener internalFrameListener -> internalFrameListener
    io.netty.handler.codec.http2.Http2Connection connection -> connection
    io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager -> lifecycleManager
    io.netty.handler.codec.http2.Http2ConnectionEncoder encoder -> encoder
    io.netty.handler.codec.http2.Http2FrameReader frameReader -> frameReader
    io.netty.handler.codec.http2.Http2FrameListener listener -> listener
    io.netty.handler.codec.http2.Http2PromisedRequestVerifier requestVerifier -> requestVerifier
    64:65:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2FrameReader) -> <init>
    53:79:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2FrameReader,io.netty.handler.codec.http2.Http2PromisedRequestVerifier) -> <init>
    83:84:void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager) -> lifecycleManager
    88:88:io.netty.handler.codec.http2.Http2Connection connection() -> connection
    93:93:io.netty.handler.codec.http2.Http2LocalFlowController flowController() -> flowController
    98:99:void frameListener(io.netty.handler.codec.http2.Http2FrameListener) -> frameListener
    103:103:io.netty.handler.codec.http2.Http2FrameListener frameListener() -> frameListener
    113:113:boolean prefaceReceived() -> prefaceReceived
    118:119:void decodeFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decodeFrame
    123:136:io.netty.handler.codec.http2.Http2Settings localSettings() -> localSettings
    141:142:void close() -> close
    152:152:long calculateMaxHeaderListSizeGoAway(long) -> calculateMaxHeaderListSizeGoAway
    156:156:int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream) -> unconsumedBytes
    161:167:void onGoAwayRead0(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead0
    171:172:void onUnknownFrame0(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame0
    51:51:io.netty.handler.codec.http2.Http2Connection access$100(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> access$100
    51:51:int access$200(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder,io.netty.handler.codec.http2.Http2Stream) -> access$200
    51:51:io.netty.handler.codec.http2.Http2FrameListener access$300(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> access$300
    51:51:io.netty.handler.codec.http2.Http2LifecycleManager access$400(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> access$400
    51:51:io.netty.handler.codec.http2.Http2ConnectionEncoder access$500(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> access$500
    51:51:io.netty.handler.codec.http2.Http2FrameReader access$600(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> access$600
    51:51:io.netty.handler.codec.http2.Http2PromisedRequestVerifier access$700(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> access$700
    51:51:io.netty.util.internal.logging.InternalLogger access$800() -> access$800
    51:51:io.netty.handler.codec.http2.Http2FrameListener access$900(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> access$900
    51:51:io.netty.handler.codec.http2.Http2FrameListener access$902(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder,io.netty.handler.codec.http2.Http2FrameListener) -> access$902
    52:52:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$1 -> io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State -> $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State
    212:212:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener -> io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:
    io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0 -> this$0
    177:177:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> <init>
    181:261:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    269:270:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    275:327:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    332:335:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    339:357:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    362:369:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    377:412:void applyLocalSettings(io.netty.handler.codec.http2.Http2Settings) -> applyLocalSettings
    419:424:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    430:433:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    437:438:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    444:490:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    495:496:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    501:512:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    517:518:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
    526:546:boolean shouldIgnoreHeadersOrDataFrame(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Stream,java.lang.String) -> shouldIgnoreHeadersOrDataFrame
    562:564:boolean streamCreatedAfterGoAwaySent(int) -> streamCreatedAfterGoAwaySent
    568:571:void verifyStreamMayHaveExisted(int) -> verifyStreamMayHaveExisted
    177:177:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder,io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener -> io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:
    io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0 -> this$0
    574:574:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> <init>
    582:585:void verifyPrefaceReceived() -> verifyPrefaceReceived
    590:591:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    597:599:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    604:607:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    612:614:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    618:620:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    624:626:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    632:636:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    640:642:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    646:648:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    653:655:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    660:661:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    666:668:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    673:674:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
    574:574:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder,io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder -> io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder:
    io.netty.handler.codec.http2.Http2FrameWriter frameWriter -> frameWriter
    io.netty.handler.codec.http2.Http2Connection connection -> connection
    io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager -> lifecycleManager
    java.util.ArrayDeque outstandingLocalSettingsQueue -> outstandingLocalSettingsQueue
    46:54:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameWriter) -> <init>
    58:59:void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager) -> lifecycleManager
    63:63:io.netty.handler.codec.http2.Http2FrameWriter frameWriter() -> frameWriter
    68:68:io.netty.handler.codec.http2.Http2Connection connection() -> connection
    73:73:io.netty.handler.codec.http2.Http2RemoteFlowController flowController() -> flowController
    78:114:void remoteSettings(io.netty.handler.codec.http2.Http2Settings) -> remoteSettings
    121:140:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> writeData
    146:146:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    151:155:boolean validateHeadersSentState(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean,boolean) -> validateHeadersSentState
    163:228:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    242:242:io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> writeRstStream
    248:258:io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> writeSettings
    263:263:io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> writeSettingsAck
    268:268:io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writePing
    275:296:io.netty.channel.ChannelFuture writePushPromise(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int,io.netty.channel.ChannelPromise) -> writePushPromise
    303:303:io.netty.channel.ChannelFuture writeGoAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writeGoAway
    309:309:io.netty.channel.ChannelFuture writeWindowUpdate(io.netty.channel.ChannelHandlerContext,int,int,io.netty.channel.ChannelPromise) -> writeWindowUpdate
    316:316:io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writeFrame
    321:322:void close() -> close
    326:326:io.netty.handler.codec.http2.Http2Settings pollSentSettings() -> pollSentSettings
    331:331:io.netty.handler.codec.http2.Http2FrameWriter$Configuration configuration() -> configuration
    335:345:io.netty.handler.codec.http2.Http2Stream requireStream(int) -> requireStream
    40:40:io.netty.handler.codec.http2.Http2LifecycleManager access$000(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder) -> access$000
    40:40:io.netty.handler.codec.http2.Http2Connection access$100(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder) -> access$100
    40:40:boolean access$200(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean,boolean) -> access$200
    40:40:io.netty.handler.codec.http2.Http2FrameWriter access$300(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder) -> access$300
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$1 -> io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$1:
    io.netty.handler.codec.http2.Http2Stream val$finalStream -> val$finalStream
    io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0 -> this$0
    196:196:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder,io.netty.handler.codec.http2.Http2Stream) -> <init>
    199:200:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    196:196:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$2 -> io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$2:
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State -> $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State
    124:124:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase -> io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase:
    io.netty.handler.codec.http2.Http2Stream stream -> stream
    io.netty.channel.ChannelPromise promise -> promise
    boolean endOfStream -> endOfStream
    int padding -> padding
    io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0 -> this$0
    500:508:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder,io.netty.handler.codec.http2.Http2Stream,int,boolean,io.netty.channel.ChannelPromise) -> <init>
    512:515:void writeComplete() -> writeComplete
    519:522:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    492:492:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData -> io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData:
    io.netty.channel.CoalescingBufferQueue queue -> queue
    int dataSize -> dataSize
    io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0 -> this$0
    362:367:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder,io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> <init>
    371:371:int size() -> size
    376:380:void error(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> error
    384:413:void write(io.netty.channel.ChannelHandlerContext,int) -> write
    418:427:boolean merge(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> merge
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledHeaders -> io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledHeaders:
    io.netty.handler.codec.http2.Http2Headers headers -> headers
    int streamDependency -> streamDependency
    short weight -> weight
    boolean exclusive -> exclusive
    io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0 -> this$0
    443:449:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder,io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> <init>
    453:453:int size() -> size
    458:462:void error(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> error
    466:481:void write(io.netty.channel.ChannelHandlerContext,int) -> write
    485:485:boolean merge(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> merge
io.netty.handler.codec.http2.DefaultHttp2FrameReader -> io.netty.handler.codec.http2.DefaultHttp2FrameReader:
    io.netty.handler.codec.http2.Http2HeadersDecoder headersDecoder -> headersDecoder
    boolean readingHeaders -> readingHeaders
    boolean readError -> readError
    byte frameType -> frameType
    int streamId -> streamId
    io.netty.handler.codec.http2.Http2Flags flags -> flags
    int payloadLength -> payloadLength
    io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation headersContinuation -> headersContinuation
    int maxFrameSize -> maxFrameSize
    80:81:void <init>() -> <init>
    89:90:void <init>(boolean) -> <init>
    61:95:void <init>(io.netty.handler.codec.http2.Http2HeadersDecoder) -> <init>
    99:99:io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration headersConfiguration() -> headersConfiguration
    104:104:io.netty.handler.codec.http2.Http2FrameReader$Configuration configuration() -> configuration
    109:109:io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy() -> frameSizePolicy
    114:119:void maxFrameSize(int) -> maxFrameSize
    123:123:int maxFrameSize() -> maxFrameSize
    128:129:void close() -> close
    132:136:void closeHeadersContinuation() -> closeHeadersContinuation
    141:176:void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readFrame
    179:233:void processHeaderState(io.netty.buffer.ByteBuf) -> processHeaderState
    237:284:void processPayloadState(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> processPayloadState
    287:295:void verifyDataFrame() -> verifyDataFrame
    298:307:void verifyHeadersFrame() -> verifyHeadersFrame
    310:317:void verifyPriorityFrame() -> verifyPriorityFrame
    320:326:void verifyRstStreamFrame() -> verifyRstStreamFrame
    329:340:void verifySettingsFrame() -> verifySettingsFrame
    343:353:void verifyPushPromiseFrame() -> verifyPushPromiseFrame
    356:364:void verifyPingFrame() -> verifyPingFrame
    367:376:void verifyGoAwayFrame() -> verifyGoAwayFrame
    379:385:void verifyWindowUpdateFrame() -> verifyWindowUpdateFrame
    388:405:void verifyContinuationFrame() -> verifyContinuationFrame
    408:409:void verifyUnknownFrame() -> verifyUnknownFrame
    413:423:void readDataFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readDataFrame
    427:493:void readHeadersFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readHeadersFrame
    496:499:void resetHeadersContinuationIfEnd(boolean) -> resetHeadersContinuationIfEnd
    503:511:void readPriorityFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readPriorityFrame
    515:517:void readRstStreamFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readRstStreamFrame
    521:544:void readSettingsFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readSettingsFrame
    548:575:void readPushPromiseFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readPushPromiseFrame
    579:585:void readPingFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readPingFrame
    589:593:void readGoAwayFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readGoAwayFrame
    597:603:void readWindowUpdateFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readWindowUpdateFrame
    608:612:void readContinuationFrame(io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readContinuationFrame
    616:618:void readUnknownFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readUnknownFrame
    625:628:int readPadding(io.netty.buffer.ByteBuf) -> readPadding
    632:636:void verifyPadding(int) -> verifyPadding
    643:643:int lengthWithoutTrailingPadding(int,int) -> lengthWithoutTrailingPadding
    771:775:void verifyNotProcessingHeaders() -> verifyNotProcessingHeaders
    778:781:void verifyPayloadLength(int) -> verifyPayloadLength
    784:787:void verifyAssociatedWithAStream() -> verifyAssociatedWithAStream
    791:794:void verifyStreamOrConnectionId(int,java.lang.String) -> verifyStreamOrConnectionId
    55:55:io.netty.handler.codec.http2.Http2HeadersDecoder access$100(io.netty.handler.codec.http2.DefaultHttp2FrameReader) -> access$100
    55:55:int access$200(io.netty.handler.codec.http2.DefaultHttp2FrameReader) -> access$200
    55:55:io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation access$302(io.netty.handler.codec.http2.DefaultHttp2FrameReader,io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation) -> access$302
io.netty.handler.codec.http2.DefaultHttp2FrameReader$1 -> io.netty.handler.codec.http2.DefaultHttp2FrameReader$1:
    int val$headersStreamId -> val$headersStreamId
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    int val$streamDependency -> val$streamDependency
    short val$weight -> val$weight
    boolean val$exclusive -> val$exclusive
    int val$padding -> val$padding
    io.netty.handler.codec.http2.Http2Flags val$headersFlags -> val$headersFlags
    io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0 -> this$0
    445:445:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader,int,io.netty.channel.ChannelHandlerContext,int,short,boolean,int,io.netty.handler.codec.http2.Http2Flags) -> <init>
    448:448:int getStreamId() -> getStreamId
    454:460:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> processFragment
io.netty.handler.codec.http2.DefaultHttp2FrameReader$2 -> io.netty.handler.codec.http2.DefaultHttp2FrameReader$2:
    int val$headersStreamId -> val$headersStreamId
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    int val$padding -> val$padding
    io.netty.handler.codec.http2.Http2Flags val$headersFlags -> val$headersFlags
    io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0 -> this$0
    471:471:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader,int,io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Flags) -> <init>
    474:474:int getStreamId() -> getStreamId
    480:486:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> processFragment
io.netty.handler.codec.http2.DefaultHttp2FrameReader$3 -> io.netty.handler.codec.http2.DefaultHttp2FrameReader$3:
    int val$pushPromiseStreamId -> val$pushPromiseStreamId
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    int val$promisedStreamId -> val$promisedStreamId
    int val$padding -> val$padding
    io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0 -> this$0
    554:554:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader,int,io.netty.channel.ChannelHandlerContext,int,int) -> <init>
    557:557:int getStreamId() -> getStreamId
    563:568:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> processFragment
io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder -> io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder:
    io.netty.buffer.ByteBuf headerBlock -> headerBlock
    io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0 -> this$0
    687:687:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader) -> <init>
    695:697:void headerSizeExceeded() -> headerSizeExceeded
    709:738:void addFragment(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBufAllocator,boolean) -> addFragment
    746:748:io.netty.handler.codec.http2.Http2Headers headers() -> headers
    756:763:void close() -> close
io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation -> io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation:
    io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder builder -> builder
    io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0 -> this$0
    653:654:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader) -> <init>
    int getStreamId() -> getStreamId
    void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> processFragment
    672:672:io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder headersBlockBuilder() -> headersBlockBuilder
    679:680:void close() -> close
    653:653:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader,io.netty.handler.codec.http2.DefaultHttp2FrameReader$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2FrameWriter -> io.netty.handler.codec.http2.DefaultHttp2FrameWriter:
    io.netty.buffer.ByteBuf ZERO_BUFFER -> ZERO_BUFFER
    io.netty.handler.codec.http2.Http2HeadersEncoder headersEncoder -> headersEncoder
    int maxFrameSize -> maxFrameSize
    86:87:void <init>() -> <init>
    90:91:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> <init>
    94:95:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector,boolean) -> <init>
    97:100:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder) -> <init>
    104:104:io.netty.handler.codec.http2.Http2FrameWriter$Configuration configuration() -> configuration
    109:109:io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration headersConfiguration() -> headersConfiguration
    114:114:io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy() -> frameSizePolicy
    119:123:void maxFrameSize(int) -> maxFrameSize
    127:127:int maxFrameSize() -> maxFrameSize
    131:131:void close() -> close
    136:252:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> writeData
    258:258:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    266:266:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    293:301:io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> writeRstStream
    309:319:io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> writeSettings
    326:330:io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> writeSettingsAck
    336:364:io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writePing
    370:422:io.netty.channel.ChannelFuture writePushPromise(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int,io.netty.channel.ChannelPromise) -> writePushPromise
    428:457:io.netty.channel.ChannelFuture writeGoAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writeGoAway
    464:472:io.netty.channel.ChannelFuture writeWindowUpdate(io.netty.channel.ChannelHandlerContext,int,int,io.netty.channel.ChannelPromise) -> writeWindowUpdate
    479:502:io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writeFrame
    508:569:io.netty.channel.ChannelFuture writeHeadersInternal(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,boolean,int,short,boolean,io.netty.channel.ChannelPromise) -> writeHeadersInternal
    577:618:io.netty.channel.ChannelFuture writeContinuationFrames(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator) -> writeContinuationFrames
    627:627:int paddingBytes(int) -> paddingBytes
    631:636:void writePaddingLength(io.netty.buffer.ByteBuf,int) -> writePaddingLength
    639:642:void verifyStreamId(int,java.lang.String) -> verifyStreamId
    645:648:void verifyStreamOrConnectionId(int,java.lang.String) -> verifyStreamOrConnectionId
    651:654:void verifyWeight(short) -> verifyWeight
    657:660:void verifyErrorCode(long) -> verifyErrorCode
    663:666:void verifyWindowSizeIncrement(int) -> verifyWindowSizeIncrement
    669:672:void verifyPingPayload(io.netty.buffer.ByteBuf) -> verifyPingPayload
    79:80:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2Headers -> io.netty.handler.codec.http2.DefaultHttp2Headers:
    io.netty.util.ByteProcessor HTTP2_NAME_VALIDATOR_PROCESSOR -> HTTP2_NAME_VALIDATOR_PROCESSOR
    io.netty.handler.codec.DefaultHeaders$NameValidator HTTP2_NAME_VALIDATOR -> HTTP2_NAME_VALIDATOR
    io.netty.handler.codec.DefaultHeaders$HeaderEntry firstNonPseudo -> firstNonPseudo
    81:82:void <init>() -> <init>
    72:96:void <init>(boolean) -> <init>
    72:113:void <init>(boolean,int) -> <init>
    117:118:io.netty.handler.codec.http2.Http2Headers clear() -> clear
    123:123:boolean equals(java.lang.Object) -> equals
    128:128:int hashCode() -> hashCode
    133:134:io.netty.handler.codec.http2.Http2Headers method(java.lang.CharSequence) -> method
    139:140:io.netty.handler.codec.http2.Http2Headers scheme(java.lang.CharSequence) -> scheme
    145:146:io.netty.handler.codec.http2.Http2Headers authority(java.lang.CharSequence) -> authority
    151:152:io.netty.handler.codec.http2.Http2Headers path(java.lang.CharSequence) -> path
    157:158:io.netty.handler.codec.http2.Http2Headers status(java.lang.CharSequence) -> status
    163:163:java.lang.CharSequence method() -> method
    168:168:java.lang.CharSequence scheme() -> scheme
    173:173:java.lang.CharSequence authority() -> authority
    178:178:java.lang.CharSequence path() -> path
    183:183:java.lang.CharSequence status() -> status
    189:189:io.netty.handler.codec.DefaultHeaders$HeaderEntry newHeaderEntry(int,java.lang.CharSequence,java.lang.CharSequence,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> newHeaderEntry
    28:28:io.netty.handler.codec.DefaultHeaders$HeaderEntry newHeaderEntry(int,java.lang.Object,java.lang.Object,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> newHeaderEntry
    28:28:io.netty.handler.codec.Headers clear() -> clear
    29:29:io.netty.util.ByteProcessor access$000() -> access$000
    29:29:io.netty.handler.codec.DefaultHeaders$HeaderEntry access$100(io.netty.handler.codec.http2.DefaultHttp2Headers) -> access$100
    29:29:io.netty.handler.codec.DefaultHeaders$HeaderEntry access$200(io.netty.handler.codec.http2.DefaultHttp2Headers) -> access$200
    29:29:io.netty.handler.codec.DefaultHeaders$HeaderEntry access$300(io.netty.handler.codec.http2.DefaultHttp2Headers) -> access$300
    29:29:io.netty.handler.codec.DefaultHeaders$HeaderEntry access$400(io.netty.handler.codec.http2.DefaultHttp2Headers) -> access$400
    29:29:io.netty.handler.codec.DefaultHeaders$HeaderEntry access$102(io.netty.handler.codec.http2.DefaultHttp2Headers,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> access$102
    31:37:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2Headers$1 -> io.netty.handler.codec.http2.DefaultHttp2Headers$1:
    31:31:void <init>() -> <init>
    34:34:boolean process(byte) -> process
io.netty.handler.codec.http2.DefaultHttp2Headers$2 -> io.netty.handler.codec.http2.DefaultHttp2Headers$2:
    37:37:void <init>() -> <init>
    40:69:void validateName(java.lang.CharSequence) -> validateName
    37:37:void validateName(java.lang.Object) -> validateName
io.netty.handler.codec.http2.DefaultHttp2Headers$Http2HeaderEntry -> io.netty.handler.codec.http2.DefaultHttp2Headers$Http2HeaderEntry:
    io.netty.handler.codec.http2.DefaultHttp2Headers this$0 -> this$0
    194:211:void <init>(io.netty.handler.codec.http2.DefaultHttp2Headers,int,java.lang.CharSequence,java.lang.CharSequence,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> <init>
    215:219:void remove() -> remove
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder -> io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder:
    io.netty.handler.codec.http2.HpackDecoder hpackDecoder -> hpackDecoder
    boolean validateHeaders -> validateHeaders
    float headerArraySizeAccumulator -> headerArraySizeAccumulator
    42:43:void <init>() -> <init>
    46:47:void <init>(boolean) -> <init>
    58:59:void <init>(boolean,long) -> <init>
    72:73:void <init>(boolean,long,int) -> <init>
    39:82:void <init>(boolean,io.netty.handler.codec.http2.HpackDecoder) -> <init>
    86:87:void maxHeaderTableSize(long) -> maxHeaderTableSize
    91:91:long maxHeaderTableSize() -> maxHeaderTableSize
    96:97:void maxHeaderListSize(long,long) -> maxHeaderListSize
    101:101:long maxHeaderListSize() -> maxHeaderListSize
    106:106:long maxHeaderListSizeGoAway() -> maxHeaderListSizeGoAway
    111:111:io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration configuration() -> configuration
    117:128:io.netty.handler.codec.http2.Http2Headers decodeHeaders(int,io.netty.buffer.ByteBuf) -> decodeHeaders
    153:153:io.netty.handler.codec.http2.Http2Headers newHeaders() -> newHeaders
io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder -> io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder:
    io.netty.handler.codec.http2.HpackEncoder hpackEncoder -> hpackEncoder
    io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector sensitivityDetector -> sensitivityDetector
    io.netty.buffer.ByteBuf tableSizeChangeOutput -> tableSizeChangeOutput
    33:34:void <init>() -> <init>
    37:38:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> <init>
    41:42:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector,boolean) -> <init>
    30:56:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector,io.netty.handler.codec.http2.HpackEncoder) -> <init>
    63:74:void encodeHeaders(int,io.netty.handler.codec.http2.Http2Headers,io.netty.buffer.ByteBuf) -> encodeHeaders
    78:79:void maxHeaderTableSize(long) -> maxHeaderTableSize
    88:89:void maxHeaderListSize(long) -> maxHeaderListSize
    98:98:io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration configuration() -> configuration
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController -> io.netty.handler.codec.http2.DefaultHttp2LocalFlowController:
    io.netty.handler.codec.http2.Http2Connection connection -> connection
    io.netty.handler.codec.http2.Http2Connection$PropertyKey stateKey -> stateKey
    io.netty.handler.codec.http2.Http2FrameWriter frameWriter -> frameWriter
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    float windowUpdateRatio -> windowUpdateRatio
    int initialWindowSize -> initialWindowSize
    io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState REDUCED_FLOW_STATE -> REDUCED_FLOW_STATE
    boolean $assertionsDisabled -> $assertionsDisabled
    58:59:void <init>(io.netty.handler.codec.http2.Http2Connection) -> <init>
    55:124:void <init>(io.netty.handler.codec.http2.Http2Connection,float,boolean) -> <init>
    128:129:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController frameWriter(io.netty.handler.codec.http2.Http2FrameWriter) -> frameWriter
    134:135:void channelHandlerContext(io.netty.channel.ChannelHandlerContext) -> channelHandlerContext
    139:146:void initialWindowSize(int) -> initialWindowSize
    150:150:int initialWindowSize() -> initialWindowSize
    155:155:int windowSize(io.netty.handler.codec.http2.Http2Stream) -> windowSize
    165:171:void incrementWindowSize(io.netty.handler.codec.http2.Http2Stream,int) -> incrementWindowSize
    175:194:boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream,int) -> consumeBytes
    199:199:int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream) -> unconsumedBytes
    203:206:void checkValidRatio(float) -> checkValidRatio
    216:219:void windowUpdateRatio(float) -> windowUpdateRatio
    264:280:void receiveFlowControlledFrame(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,int,boolean) -> receiveFlowControlledFrame
    283:283:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState connectionState() -> connectionState
    287:287:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState state(io.netty.handler.codec.http2.Http2Stream) -> state
    291:291:boolean isClosed(io.netty.handler.codec.http2.Http2Stream) -> isClosed
    42:42:io.netty.handler.codec.http2.Http2LocalFlowController frameWriter(io.netty.handler.codec.http2.Http2FrameWriter) -> frameWriter
    43:43:io.netty.handler.codec.http2.Http2Connection$PropertyKey access$000(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> access$000
    43:43:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState access$100() -> access$100
    43:43:int access$200(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> access$200
    43:43:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState access$300(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController,io.netty.handler.codec.http2.Http2Stream) -> access$300
    43:43:io.netty.channel.ChannelHandlerContext access$400(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> access$400
    43:43:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState access$500(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> access$500
    43:43:float access$600(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> access$600
    43:43:io.netty.handler.codec.http2.Http2FrameWriter access$700(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> access$700
    42:487:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$1 -> io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$1:
    io.netty.handler.codec.http2.DefaultHttp2LocalFlowController this$0 -> this$0
    88:88:void <init>(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> <init>
    93:94:void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    100:101:void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    108:122:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$2 -> io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$2:
    487:487:void <init>() -> <init>
    491:491:int windowSize() -> windowSize
    508:508:void incrementInitialStreamWindow(int) -> incrementInitialStreamWindow
    512:512:boolean writeWindowUpdateIfNeeded() -> writeWindowUpdateIfNeeded
    517:517:boolean consumeBytes(int) -> consumeBytes
    522:522:int unconsumedBytes() -> unconsumedBytes
    537:537:void receiveFlowControlledFrame(int) -> receiveFlowControlledFrame
    544:544:void incrementFlowControlWindows(int) -> incrementFlowControlWindows
    548:548:void endOfStream(boolean) -> endOfStream
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$AutoRefillState -> io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$AutoRefillState:
    io.netty.handler.codec.http2.DefaultHttp2LocalFlowController this$0 -> this$0
    299:301:void <init>(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController,io.netty.handler.codec.http2.Http2Stream,int) -> <init>
    305:308:void receiveFlowControlledFrame(int) -> receiveFlowControlledFrame
    313:313:boolean consumeBytes(int) -> consumeBytes
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$DefaultState -> io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$DefaultState:
    io.netty.handler.codec.http2.Http2Stream stream -> stream
    int window -> window
    int processedWindow -> processedWindow
    int initialStreamWindowSize -> initialStreamWindowSize
    float streamWindowUpdateRatio -> streamWindowUpdateRatio
    int lowerBound -> lowerBound
    boolean endOfStream -> endOfStream
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.handler.codec.http2.DefaultHttp2LocalFlowController this$0 -> this$0
    352:356:void <init>(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController,io.netty.handler.codec.http2.Http2Stream,int) -> <init>
    360:362:void window(int) -> window
    366:366:int windowSize() -> windowSize
    376:377:void endOfStream(boolean) -> endOfStream
    393:398:void incrementInitialStreamWindow(int) -> incrementInitialStreamWindow
    402:410:void incrementFlowControlWindows(int) -> incrementFlowControlWindows
    414:428:void receiveFlowControlledFrame(int) -> receiveFlowControlledFrame
    431:436:void returnProcessedBytes(int) -> returnProcessedBytes
    441:442:boolean consumeBytes(int) -> consumeBytes
    447:447:int unconsumedBytes() -> unconsumedBytes
    452:461:boolean writeWindowUpdateIfNeeded() -> writeWindowUpdateIfNeeded
    470:480:void writeWindowUpdate() -> writeWindowUpdate
    320:320:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState -> io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState:
    int windowSize() -> windowSize
    void incrementInitialStreamWindow(int) -> incrementInitialStreamWindow
    boolean writeWindowUpdateIfNeeded() -> writeWindowUpdateIfNeeded
    boolean consumeBytes(int) -> consumeBytes
    int unconsumedBytes() -> unconsumedBytes
    void receiveFlowControlledFrame(int) -> receiveFlowControlledFrame
    void incrementFlowControlWindows(int) -> incrementFlowControlWindows
    void endOfStream(boolean) -> endOfStream
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$WindowUpdateVisitor -> io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$WindowUpdateVisitor:
    io.netty.handler.codec.http2.Http2Exception$CompositeStreamException compositeException -> compositeException
    int delta -> delta
    io.netty.handler.codec.http2.DefaultHttp2LocalFlowController this$0 -> this$0
    616:618:void <init>(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController,int) -> <init>
    624:633:boolean visit(io.netty.handler.codec.http2.Http2Stream) -> visit
    637:640:void throwIfError() -> throwIfError
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController -> io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.handler.codec.http2.Http2Connection connection -> connection
    io.netty.handler.codec.http2.Http2Connection$PropertyKey stateKey -> stateKey
    io.netty.handler.codec.http2.StreamByteDistributor streamByteDistributor -> streamByteDistributor
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState connectionState -> connectionState
    int initialWindowSize -> initialWindowSize
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor monitor -> monitor
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    boolean $assertionsDisabled -> $assertionsDisabled
    58:59:void <init>(io.netty.handler.codec.http2.Http2Connection) -> <init>
    67:68:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2RemoteFlowController$Listener) -> <init>
    53:126:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.StreamByteDistributor,io.netty.handler.codec.http2.Http2RemoteFlowController$Listener) -> <init>
    135:148:void channelHandlerContext(io.netty.channel.ChannelHandlerContext) -> channelHandlerContext
    152:152:io.netty.channel.ChannelHandlerContext channelHandlerContext() -> channelHandlerContext
    157:159:void initialWindowSize(int) -> initialWindowSize
    163:163:int initialWindowSize() -> initialWindowSize
    168:168:int windowSize(io.netty.handler.codec.http2.Http2Stream) -> windowSize
    173:173:boolean isWritable(io.netty.handler.codec.http2.Http2Stream) -> isWritable
    178:179:void channelWritabilityChanged() -> channelWritabilityChanged
    184:189:void updateDependencyTree(int,int,short,boolean) -> updateDependencyTree
    192:192:boolean isChannelWritable() -> isChannelWritable
    196:196:boolean isChannelWritable0() -> isChannelWritable0
    201:202:void listener(io.netty.handler.codec.http2.Http2RemoteFlowController$Listener) -> listener
    206:208:void incrementWindowSize(io.netty.handler.codec.http2.Http2Stream,int) -> incrementWindowSize
    213:220:void addFlowControlled(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> addFlowControlled
    224:224:boolean hasFlowControlled(io.netty.handler.codec.http2.Http2Stream) -> hasFlowControlled
    228:228:io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState state(io.netty.handler.codec.http2.Http2Stream) -> state
    235:235:int connectionWindowSize() -> connectionWindowSize
    245:245:int minUsableChannelBytes() -> minUsableChannelBytes
    250:254:int maxUsableChannelBytes() -> maxUsableChannelBytes
    262:262:int writableBytes() -> writableBytes
    267:268:void writePendingBytes() -> writePendingBytes
    45:45:io.netty.handler.codec.http2.Http2Connection$PropertyKey access$000(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> access$000
    45:45:io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState access$100(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController,io.netty.handler.codec.http2.Http2Stream) -> access$100
    45:45:int access$200(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> access$200
    45:45:io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor access$300(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> access$300
    45:45:io.netty.channel.ChannelHandlerContext access$500(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> access$500
    45:45:io.netty.handler.codec.http2.StreamByteDistributor access$600(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> access$600
    45:45:int access$700(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> access$700
    45:45:io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState access$800(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> access$800
    45:45:int access$900(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> access$900
    45:45:boolean access$1000(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> access$1000
    45:45:int access$202(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController,int) -> access$202
    45:45:io.netty.handler.codec.http2.Http2Connection access$1100(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> access$1100
    45:45:boolean access$1200(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> access$1200
    45:45:io.netty.util.internal.logging.InternalLogger access$1500() -> access$1500
    44:47:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1 -> io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1:
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0 -> this$0
    86:86:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> <init>
    91:92:void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    98:99:void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    105:106:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    110:124:void onStreamHalfClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamHalfClosed
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState -> io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState:
    io.netty.handler.codec.http2.Http2Stream stream -> stream
    java.util.Deque pendingWriteQueue -> pendingWriteQueue
    int window -> window
    int pendingBytes -> pendingBytes
    boolean markedWritable -> markedWritable
    boolean writing -> writing
    boolean cancelled -> cancelled
    io.netty.util.BooleanSupplier isWritableSupplier -> isWritableSupplier
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0 -> this$0
    288:298:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController,io.netty.handler.codec.http2.Http2Stream) -> <init>
    306:308:boolean isWritable() -> isWritable
    317:317:io.netty.handler.codec.http2.Http2Stream stream() -> stream
    324:324:boolean markedWritability() -> markedWritability
    331:332:void markedWritability(boolean) -> markedWritability
    336:336:int windowSize() -> windowSize
    343:344:void windowSize(int) -> windowSize
    351:410:int writeAllocatedBytes(int) -> writeAllocatedBytes
    417:424:int incrementStreamWindow(int) -> incrementStreamWindow
    431:431:int writableWindow() -> writableWindow
    436:436:int pendingBytes() -> pendingBytes
    443:455:void enqueueFrame(io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> enqueueFrame
    458:462:void enqueueFrameWithoutMerge(io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> enqueueFrameWithoutMerge
    466:466:boolean hasFrame() -> hasFrame
    473:473:io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled peek() -> peek
    480:481:void cancel() -> cancel
    488:507:void cancel(java.lang.Throwable) -> cancel
    514:519:void incrementPendingBytes(int,boolean) -> incrementPendingBytes
    525:526:void decrementPendingBytes(int,boolean) -> decrementPendingBytes
    533:540:void decrementFlowControlWindow(int) -> decrementFlowControlWindow
    547:550:void writeError(io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled,io.netty.handler.codec.http2.Http2Exception) -> writeError
    273:273:io.netty.handler.codec.http2.Http2Stream access$1400(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> access$1400
    273:273:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState$1 -> io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState$1:
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState this$1 -> this$1
    288:288:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> <init>
    291:291:boolean get() -> get
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor -> io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor:
    io.netty.handler.codec.http2.Http2RemoteFlowController$Listener listener -> listener
    io.netty.handler.codec.http2.Http2StreamVisitor checkStreamWritabilityVisitor -> checkStreamWritabilityVisitor
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0 -> this$0
    690:703:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController,io.netty.handler.codec.http2.Http2RemoteFlowController$Listener) -> <init>
    707:713:void windowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,int) -> windowSize
    717:719:void incrementWindowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,int) -> incrementWindowSize
    723:729:void initialWindowSize(int) -> initialWindowSize
    733:735:void enqueueFrame(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> enqueueFrame
    740:744:void stateCancelled(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> stateCancelled
    748:751:void channelWritabilityChange() -> channelWritabilityChange
    754:761:void checkStateWritability(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> checkStateWritability
    764:770:void notifyWritabilityChanged(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> notifyWritabilityChanged
    774:779:void checkConnectionThenStreamWritabilityChanged(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> checkConnectionThenStreamWritabilityChanged
    783:785:void checkAllWritabilityChanged() -> checkAllWritabilityChanged
    688:688:void access$1300(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor,io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> access$1300
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor$1 -> io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor$1:
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor this$1 -> this$1
    690:690:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor) -> <init>
    693:697:boolean visit(io.netty.handler.codec.http2.Http2Stream) -> visit
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor -> io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor:
    boolean inWritePendingBytes -> inWritePendingBytes
    long totalPendingBytes -> totalPendingBytes
    io.netty.handler.codec.http2.StreamByteDistributor$Writer writer -> writer
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0 -> this$0
    556:559:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> <init>
    570:570:void channelWritabilityChange() -> channelWritabilityChange
    576:576:void stateCancelled(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> stateCancelled
    584:585:void windowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,int) -> windowSize
    594:595:void incrementWindowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,int) -> incrementWindowSize
    604:605:void enqueueFrame(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> enqueueFrame
    613:617:void incrementPendingBytes(int) -> incrementPendingBytes
    625:625:boolean isWritable(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> isWritable
    634:652:void writePendingBytes() -> writePendingBytes
    655:673:void initialWindowSize(int) -> initialWindowSize
    676:676:boolean isWritableConnection() -> isWritableConnection
    556:556:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController,io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor$1 -> io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor$1:
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor this$1 -> this$1
    559:559:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor) -> <init>
    562:563:void write(io.netty.handler.codec.http2.Http2Stream,int) -> write
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor$2 -> io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor$2:
    int val$delta -> val$delta
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor this$1 -> this$1
    661:661:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor,int) -> <init>
    664:665:boolean visit(io.netty.handler.codec.http2.Http2Stream) -> visit
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener -> io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:
    io.netty.handler.codec.http2.Http2Connection connection -> connection
    boolean strict -> strict
    boolean flowControllerInitialized -> flowControllerInitialized
    io.netty.handler.codec.http2.Http2Connection$PropertyKey propertyKey -> propertyKey
    50:51:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener) -> <init>
    55:69:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,boolean) -> <init>
    74:138:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    145:147:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    152:154:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    167:178:io.netty.channel.embedded.EmbeddedChannel newContentDecompressor(io.netty.channel.ChannelHandlerContext,java.lang.CharSequence) -> newContentDecompressor
    191:191:java.lang.CharSequence getTargetContentEncoding(java.lang.CharSequence) -> getTargetContentEncoding
    206:246:void initDecompressor(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,boolean) -> initDecompressor
    249:249:io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor decompressor(io.netty.handler.codec.http2.Http2Stream) -> decompressor
    258:259:void cleanup(io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor) -> cleanup
    270:278:io.netty.buffer.ByteBuf nextReadableBuf(io.netty.channel.embedded.EmbeddedChannel) -> nextReadableBuf
    42:42:void access$000(io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor) -> access$000
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$1 -> io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$1:
    io.netty.handler.codec.http2.DelegatingDecompressorFrameListener this$0 -> this$0
    60:60:void <init>(io.netty.handler.codec.http2.DelegatingDecompressorFrameListener) -> <init>
    63:67:void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$ConsumedBytesConverter -> io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$ConsumedBytesConverter:
    io.netty.handler.codec.http2.Http2LocalFlowController flowController -> flowController
    io.netty.handler.codec.http2.DelegatingDecompressorFrameListener this$0 -> this$0
    288:290:void <init>(io.netty.handler.codec.http2.DelegatingDecompressorFrameListener,io.netty.handler.codec.http2.Http2LocalFlowController) -> <init>
    294:294:io.netty.handler.codec.http2.Http2LocalFlowController frameWriter(io.netty.handler.codec.http2.Http2FrameWriter) -> frameWriter
    299:300:void channelHandlerContext(io.netty.channel.ChannelHandlerContext) -> channelHandlerContext
    304:305:void initialWindowSize(int) -> initialWindowSize
    309:309:int initialWindowSize() -> initialWindowSize
    314:314:int windowSize(io.netty.handler.codec.http2.Http2Stream) -> windowSize
    319:320:void incrementWindowSize(io.netty.handler.codec.http2.Http2Stream,int) -> incrementWindowSize
    325:326:void receiveFlowControlledFrame(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,int,boolean) -> receiveFlowControlledFrame
    330:342:boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream,int) -> consumeBytes
    348:348:int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream) -> unconsumedBytes
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor -> io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor:
    io.netty.channel.embedded.EmbeddedChannel decompressor -> decompressor
    int compressed -> compressed
    int decompressed -> decompressed
    boolean $assertionsDisabled -> $assertionsDisabled
    365:367:void <init>(io.netty.channel.embedded.EmbeddedChannel) -> <init>
    373:373:io.netty.channel.embedded.EmbeddedChannel decompressor() -> decompressor
    380:382:void incrementCompressedBytes(int) -> incrementCompressedBytes
    388:390:void incrementDecompressedBytes(int) -> incrementDecompressedBytes
    401:420:int consumeBytes(int,int) -> consumeBytes
    360:360:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackDecoder -> io.netty.handler.codec.http2.HpackDecoder:
    io.netty.handler.codec.http2.Http2Exception DECODE_ULE_128_DECOMPRESSION_EXCEPTION -> DECODE_ULE_128_DECOMPRESSION_EXCEPTION
    io.netty.handler.codec.http2.Http2Exception DECODE_ULE_128_TO_LONG_DECOMPRESSION_EXCEPTION -> DECODE_ULE_128_TO_LONG_DECOMPRESSION_EXCEPTION
    io.netty.handler.codec.http2.Http2Exception DECODE_ULE_128_TO_INT_DECOMPRESSION_EXCEPTION -> DECODE_ULE_128_TO_INT_DECOMPRESSION_EXCEPTION
    io.netty.handler.codec.http2.Http2Exception DECODE_ILLEGAL_INDEX_VALUE -> DECODE_ILLEGAL_INDEX_VALUE
    io.netty.handler.codec.http2.Http2Exception INDEX_HEADER_ILLEGAL_INDEX_VALUE -> INDEX_HEADER_ILLEGAL_INDEX_VALUE
    io.netty.handler.codec.http2.Http2Exception READ_NAME_ILLEGAL_INDEX_VALUE -> READ_NAME_ILLEGAL_INDEX_VALUE
    io.netty.handler.codec.http2.Http2Exception INVALID_MAX_DYNAMIC_TABLE_SIZE -> INVALID_MAX_DYNAMIC_TABLE_SIZE
    io.netty.handler.codec.http2.Http2Exception MAX_DYNAMIC_TABLE_SIZE_CHANGE_REQUIRED -> MAX_DYNAMIC_TABLE_SIZE_CHANGE_REQUIRED
    io.netty.handler.codec.http2.HpackDynamicTable hpackDynamicTable -> hpackDynamicTable
    io.netty.handler.codec.http2.HpackHuffmanDecoder hpackHuffmanDecoder -> hpackHuffmanDecoder
    long maxHeaderListSizeGoAway -> maxHeaderListSizeGoAway
    long maxHeaderListSize -> maxHeaderListSize
    long maxDynamicTableSize -> maxDynamicTableSize
    long encoderMaxDynamicTableSize -> encoderMaxDynamicTableSize
    boolean maxDynamicTableSizeChangeRequired -> maxDynamicTableSizeChangeRequired
    boolean $assertionsDisabled -> $assertionsDisabled
    100:101:void <init>(long,int) -> <init>
    107:115:void <init>(long,int,int) -> <init>
    123:304:void decode(int,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2Headers) -> decode
    311:322:void setMaxHeaderTableSize(long) -> setMaxHeaderTableSize
    325:335:void setMaxHeaderListSize(long,long) -> setMaxHeaderListSize
    338:338:long getMaxHeaderListSize() -> getMaxHeaderListSize
    342:342:long getMaxHeaderListSizeGoAway() -> getMaxHeaderListSizeGoAway
    350:350:long getMaxHeaderTableSize() -> getMaxHeaderTableSize
    375:381:void setDynamicTableSize(long) -> setDynamicTableSize
    384:392:java.lang.CharSequence readName(int) -> readName
    396:404:long indexHeader(int,int,io.netty.handler.codec.http2.Http2Headers,long) -> indexHeader
    409:424:long insertHeader(int,io.netty.handler.codec.http2.Http2Headers,java.lang.CharSequence,java.lang.CharSequence,io.netty.handler.codec.http2.HpackUtil$IndexType,long) -> insertHeader
    429:434:long addHeader(int,io.netty.handler.codec.http2.Http2Headers,java.lang.CharSequence,java.lang.CharSequence,long) -> addHeader
    438:443:java.lang.CharSequence readStringLiteral(io.netty.buffer.ByteBuf,int,boolean) -> readStringLiteral
    447:447:java.lang.IllegalArgumentException notEnoughDataException(io.netty.buffer.ByteBuf) -> notEnoughDataException
    456:467:int decodeULE128(io.netty.buffer.ByteBuf,int) -> decodeULE128
    476:499:long decodeULE128(io.netty.buffer.ByteBuf,long) -> decodeULE128
    52:70:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackDecoder$1 -> io.netty.handler.codec.http2.HpackDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http2$HpackUtil$IndexType -> $SwitchMap$io$netty$handler$codec$http2$HpackUtil$IndexType
    411:411:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackDynamicTable -> io.netty.handler.codec.http2.HpackDynamicTable:
    io.netty.handler.codec.http2.HpackHeaderField[] hpackHeaderFields -> hpackHeaderFields
    int head -> head
    int tail -> tail
    long size -> size
    long capacity -> capacity
    44:51:void <init>(long) -> <init>
    58:63:int length() -> length
    77:77:long capacity() -> capacity
    85:92:io.netty.handler.codec.http2.HpackHeaderField getEntry(int) -> getEntry
    103:116:void add(io.netty.handler.codec.http2.HpackHeaderField) -> add
    122:131:io.netty.handler.codec.http2.HpackHeaderField remove() -> remove
    138:147:void clear() -> clear
    154:198:void setCapacity(long) -> setCapacity
io.netty.handler.codec.http2.HpackEncoder -> io.netty.handler.codec.http2.HpackEncoder:
    io.netty.handler.codec.http2.HpackEncoder$HeaderEntry[] headerFields -> headerFields
    io.netty.handler.codec.http2.HpackEncoder$HeaderEntry head -> head
    io.netty.handler.codec.http2.HpackHuffmanEncoder hpackHuffmanEncoder -> hpackHuffmanEncoder
    byte hashMask -> hashMask
    boolean ignoreMaxHeaderListSize -> ignoreMaxHeaderListSize
    long size -> size
    long maxHeaderTableSize -> maxHeaderTableSize
    long maxHeaderListSize -> maxHeaderListSize
    boolean $assertionsDisabled -> $assertionsDisabled
    73:74:void <init>() -> <init>
    80:81:void <init>(boolean) -> <init>
    60:95:void <init>(boolean,int) -> <init>
    104:109:void encodeHeaders(int,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2Headers,io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> encodeHeaders
    114:127:void encodeHeadersEnforceMaxHeaderListSize(int,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2Headers,io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> encodeHeadersEnforceMaxHeaderListSize
    131:137:void encodeHeadersIgnoreMaxHeaderListSize(io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2Headers,io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> encodeHeadersIgnoreMaxHeaderListSize
    146:187:void encodeHeader(io.netty.buffer.ByteBuf,java.lang.CharSequence,java.lang.CharSequence,boolean,long) -> encodeHeader
    193:204:void setMaxHeaderTableSize(io.netty.buffer.ByteBuf,long) -> setMaxHeaderTableSize
    214:219:void setMaxHeaderListSize(long) -> setMaxHeaderListSize
    229:230:void encodeInteger(io.netty.buffer.ByteBuf,int,int,int) -> encodeInteger
    236:248:void encodeInteger(io.netty.buffer.ByteBuf,int,int,long) -> encodeInteger
    254:270:void encodeStringLiteral(io.netty.buffer.ByteBuf,java.lang.CharSequence) -> encodeStringLiteral
    277:295:void encodeLiteral(io.netty.buffer.ByteBuf,java.lang.CharSequence,java.lang.CharSequence,io.netty.handler.codec.http2.HpackUtil$IndexType,int) -> encodeLiteral
    298:305:int getNameIndex(java.lang.CharSequence) -> getNameIndex
    313:320:void ensureCapacity(long) -> ensureCapacity
    326:326:int length() -> length
    352:363:io.netty.handler.codec.http2.HpackEncoder$HeaderEntry getEntry(java.lang.CharSequence,java.lang.CharSequence) -> getEntry
    371:381:int getIndex(java.lang.CharSequence) -> getIndex
    388:388:int getIndex(int) -> getIndex
    398:415:void add(java.lang.CharSequence,java.lang.CharSequence,long) -> add
    421:444:io.netty.handler.codec.http2.HpackHeaderField remove() -> remove
    451:454:void clear() -> clear
    460:460:int index(int) -> index
    57:57:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackEncoder$1 -> io.netty.handler.codec.http2.HpackEncoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http2$HpackUtil$IndexType -> $SwitchMap$io$netty$handler$codec$http2$HpackUtil$IndexType
    278:278:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackEncoder$HeaderEntry -> io.netty.handler.codec.http2.HpackEncoder$HeaderEntry:
    io.netty.handler.codec.http2.HpackEncoder$HeaderEntry before -> before
    io.netty.handler.codec.http2.HpackEncoder$HeaderEntry after -> after
    io.netty.handler.codec.http2.HpackEncoder$HeaderEntry next -> next
    int hash -> hash
    int index -> index
    481:485:void <init>(int,java.lang.CharSequence,java.lang.CharSequence,int,io.netty.handler.codec.http2.HpackEncoder$HeaderEntry) -> <init>
    491:496:void remove() -> remove
    502:506:void addBefore(io.netty.handler.codec.http2.HpackEncoder$HeaderEntry) -> addBefore
    466:466:void access$000(io.netty.handler.codec.http2.HpackEncoder$HeaderEntry,io.netty.handler.codec.http2.HpackEncoder$HeaderEntry) -> access$000
    466:466:void access$100(io.netty.handler.codec.http2.HpackEncoder$HeaderEntry) -> access$100
io.netty.handler.codec.http2.HpackHeaderField -> io.netty.handler.codec.http2.HpackHeaderField:
    java.lang.CharSequence name -> name
    java.lang.CharSequence value -> value
    44:44:long sizeOf(java.lang.CharSequence,java.lang.CharSequence) -> sizeOf
    51:54:void <init>(java.lang.CharSequence,java.lang.CharSequence) -> <init>
    57:57:int size() -> size
    63:63:int hashCode() -> hashCode
    68:76:boolean equals(java.lang.Object) -> equals
    81:81:java.lang.String toString() -> toString
io.netty.handler.codec.http2.HpackHuffmanDecoder -> io.netty.handler.codec.http2.HpackHuffmanDecoder:
    io.netty.handler.codec.http2.Http2Exception EOS_DECODED -> EOS_DECODED
    io.netty.handler.codec.http2.Http2Exception INVALID_PADDING -> INVALID_PADDING
    io.netty.handler.codec.http2.HpackHuffmanDecoder$Node ROOT -> ROOT
    io.netty.handler.codec.http2.HpackHuffmanDecoder$DecoderProcessor processor -> processor
    54:56:void <init>(int) -> <init>
    66:69:io.netty.util.AsciiString decode(io.netty.buffer.ByteBuf,int) -> decode
    106:110:io.netty.handler.codec.http2.HpackHuffmanDecoder$Node buildTree(int[],byte[]) -> buildTree
    115:135:void insert(io.netty.handler.codec.http2.HpackHuffmanDecoder$Node,int,int,byte) -> insert
    43:43:io.netty.handler.codec.http2.HpackHuffmanDecoder$Node access$200() -> access$200
    43:43:io.netty.handler.codec.http2.Http2Exception access$500() -> access$500
    43:43:io.netty.handler.codec.http2.Http2Exception access$600() -> access$600
    45:50:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackHuffmanDecoder$DecoderProcessor -> io.netty.handler.codec.http2.HpackHuffmanDecoder$DecoderProcessor:
    int initialCapacity -> initialCapacity
    byte[] bytes -> bytes
    int index -> index
    io.netty.handler.codec.http2.HpackHuffmanDecoder$Node node -> node
    int current -> current
    int currentBits -> currentBits
    int symbolBits -> symbolBits
    146:148:void <init>(int) -> <init>
    151:157:void reset() -> reset
    179:197:boolean process(byte) -> process
    205:229:io.netty.util.AsciiString end() -> end
    233:243:void append(int) -> append
io.netty.handler.codec.http2.HpackHuffmanDecoder$Node -> io.netty.handler.codec.http2.HpackHuffmanDecoder$Node:
    int symbol -> symbol
    int bits -> bits
    io.netty.handler.codec.http2.HpackHuffmanDecoder$Node[] children -> children
    boolean $assertionsDisabled -> $assertionsDisabled
    81:85:void <init>() -> <init>
    93:98:void <init>(int,int) -> <init>
    101:101:boolean isTerminal() -> isTerminal
    72:72:boolean access$000(io.netty.handler.codec.http2.HpackHuffmanDecoder$Node) -> access$000
    72:72:io.netty.handler.codec.http2.HpackHuffmanDecoder$Node[] access$100(io.netty.handler.codec.http2.HpackHuffmanDecoder$Node) -> access$100
    72:72:int access$300(io.netty.handler.codec.http2.HpackHuffmanDecoder$Node) -> access$300
    72:72:int access$400(io.netty.handler.codec.http2.HpackHuffmanDecoder$Node) -> access$400
    72:72:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackHuffmanEncoder -> io.netty.handler.codec.http2.HpackHuffmanEncoder:
    int[] codes -> codes
    byte[] lengths -> lengths
    io.netty.handler.codec.http2.HpackHuffmanEncoder$EncodedLengthProcessor encodedLengthProcessor -> encodedLengthProcessor
    io.netty.handler.codec.http2.HpackHuffmanEncoder$EncodeProcessor encodeProcessor -> encodeProcessor
    48:49:void <init>() -> <init>
    44:60:void <init>(int[],byte[]) -> <init>
    69:83:void encode(io.netty.buffer.ByteBuf,java.lang.CharSequence) -> encode
    86:109:void encodeSlowPath(io.netty.buffer.ByteBuf,java.lang.CharSequence) -> encodeSlowPath
    118:129:int getEncodedLength(java.lang.CharSequence) -> getEncodedLength
    134:138:int getEncodedLengthSlowPath(java.lang.CharSequence) -> getEncodedLengthSlowPath
    40:40:byte[] access$200(io.netty.handler.codec.http2.HpackHuffmanEncoder) -> access$200
    40:40:int[] access$300(io.netty.handler.codec.http2.HpackHuffmanEncoder) -> access$300
io.netty.handler.codec.http2.HpackHuffmanEncoder$1 -> io.netty.handler.codec.http2.HpackHuffmanEncoder$1:
io.netty.handler.codec.http2.HpackHuffmanEncoder$EncodeProcessor -> io.netty.handler.codec.http2.HpackHuffmanEncoder$EncodeProcessor:
    io.netty.buffer.ByteBuf out -> out
    long current -> current
    int n -> n
    io.netty.handler.codec.http2.HpackHuffmanEncoder this$0 -> this$0
    141:141:void <init>(io.netty.handler.codec.http2.HpackHuffmanEncoder) -> <init>
    148:159:boolean process(byte) -> process
    164:174:void end() -> end
    141:141:void <init>(io.netty.handler.codec.http2.HpackHuffmanEncoder,io.netty.handler.codec.http2.HpackHuffmanEncoder$1) -> <init>
io.netty.handler.codec.http2.HpackHuffmanEncoder$EncodedLengthProcessor -> io.netty.handler.codec.http2.HpackHuffmanEncoder$EncodedLengthProcessor:
    long len -> len
    io.netty.handler.codec.http2.HpackHuffmanEncoder this$0 -> this$0
    177:177:void <init>(io.netty.handler.codec.http2.HpackHuffmanEncoder) -> <init>
    182:183:boolean process(byte) -> process
    187:188:void reset() -> reset
    191:191:int length() -> length
    177:177:void <init>(io.netty.handler.codec.http2.HpackHuffmanEncoder,io.netty.handler.codec.http2.HpackHuffmanEncoder$1) -> <init>
io.netty.handler.codec.http2.HpackStaticTable -> io.netty.handler.codec.http2.HpackStaticTable:
    java.util.List STATIC_TABLE -> STATIC_TABLE
    io.netty.handler.codec.http2.CharSequenceMap STATIC_INDEX_BY_NAME -> STATIC_INDEX_BY_NAME
    int length -> length
    111:111:io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String) -> newEmptyHeaderField
    115:115:io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String) -> newHeaderField
    129:129:io.netty.handler.codec.http2.HpackHeaderField getEntry(int) -> getEntry
    137:141:int getIndex(java.lang.CharSequence) -> getIndex
    149:166:int getIndex(java.lang.CharSequence,java.lang.CharSequence) -> getIndex
    171:182:io.netty.handler.codec.http2.CharSequenceMap createMap() -> createMap
    46:123:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackUtil -> io.netty.handler.codec.http2.HpackUtil:
    int[] HUFFMAN_CODES -> HUFFMAN_CODES
    byte[] HUFFMAN_CODE_LENGTHS -> HUFFMAN_CODE_LENGTHS
    55:65:int equalsConstantTime(java.lang.CharSequence,java.lang.CharSequence) -> equalsConstantTime
    77:337:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackUtil$IndexType -> io.netty.handler.codec.http2.HpackUtil$IndexType:
    io.netty.handler.codec.http2.HpackUtil$IndexType INCREMENTAL -> INCREMENTAL
    io.netty.handler.codec.http2.HpackUtil$IndexType NONE -> NONE
    io.netty.handler.codec.http2.HpackUtil$IndexType NEVER -> NEVER
    io.netty.handler.codec.http2.HpackUtil$IndexType[] $VALUES -> $VALUES
    69:69:io.netty.handler.codec.http2.HpackUtil$IndexType[] values() -> values
    69:69:io.netty.handler.codec.http2.HpackUtil$IndexType valueOf(java.lang.String) -> valueOf
    69:69:void <init>(java.lang.String,int) -> <init>
    69:72:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2CodecUtil -> io.netty.handler.codec.http2.Http2CodecUtil:
    java.lang.CharSequence HTTP_UPGRADE_SETTINGS_HEADER -> HTTP_UPGRADE_SETTINGS_HEADER
    java.lang.CharSequence HTTP_UPGRADE_PROTOCOL_NAME -> HTTP_UPGRADE_PROTOCOL_NAME
    java.lang.CharSequence TLS_UPGRADE_PROTOCOL_NAME -> TLS_UPGRADE_PROTOCOL_NAME
    io.netty.buffer.ByteBuf CONNECTION_PREFACE -> CONNECTION_PREFACE
    io.netty.buffer.ByteBuf EMPTY_PING -> EMPTY_PING
    long DEFAULT_GRACEFUL_SHUTDOWN_TIMEOUT_MILLIS -> DEFAULT_GRACEFUL_SHUTDOWN_TIMEOUT_MILLIS
    134:134:long calculateMaxHeaderListSizeGoAway(long) -> calculateMaxHeaderListSizeGoAway
    161:161:boolean isMaxFrameSizeValid(int) -> isMaxFrameSizeValid
    169:169:io.netty.buffer.ByteBuf connectionPrefaceBuf() -> connectionPrefaceBuf
    185:191:io.netty.handler.codec.http2.Http2Exception getEmbeddedHttp2Exception(java.lang.Throwable) -> getEmbeddedHttp2Exception
    199:203:io.netty.buffer.ByteBuf toByteBuf(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> toByteBuf
    210:210:int readUnsignedInt(io.netty.buffer.ByteBuf) -> readUnsignedInt
    226:226:int streamableBytes(io.netty.handler.codec.http2.StreamByteDistributor$StreamState) -> streamableBytes
    239:240:void headerListSizeExceeded(int,long,boolean) -> headerListSizeExceeded
    251:252:void headerListSizeExceeded(long) -> headerListSizeExceeded
    257:261:void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int) -> writeFrameHeaderInternal
    398:402:void verifyPadding(int) -> verifyPadding
    403:403:void <init>() -> <init>
    48:137:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator -> io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator:
    io.netty.channel.ChannelPromise promise -> promise
    int expectedCount -> expectedCount
    int doneCount -> doneCount
    java.lang.Throwable lastFailure -> lastFailure
    boolean doneAllocating -> doneAllocating
    boolean $assertionsDisabled -> $assertionsDisabled
    275:278:void <init>(io.netty.channel.ChannelPromise,io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor) -> <init>
    286:288:io.netty.channel.ChannelPromise newPromise() -> newPromise
    297:303:io.netty.channel.ChannelPromise doneAllocatingPromises() -> doneAllocatingPromises
    308:318:boolean tryFailure(java.lang.Throwable) -> tryFailure
    329:336:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    341:347:io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    352:361:boolean trySuccess(java.lang.Void) -> trySuccess
    365:365:boolean allowFailure() -> allowFailure
    369:369:boolean awaitingPromises() -> awaitingPromises
    373:373:boolean allPromisesDone() -> allPromisesDone
    377:382:io.netty.channel.ChannelPromise setPromise() -> setPromise
    387:392:boolean tryPromise() -> tryPromise
    267:267:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    267:267:boolean trySuccess(java.lang.Object) -> trySuccess
    267:267:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    267:267:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2Connection -> io.netty.handler.codec.http2.Http2Connection:
    io.netty.util.concurrent.Future close(io.netty.util.concurrent.Promise) -> close
    io.netty.handler.codec.http2.Http2Connection$PropertyKey newKey() -> newKey
    void addListener(io.netty.handler.codec.http2.Http2Connection$Listener) -> addListener
    io.netty.handler.codec.http2.Http2Stream stream(int) -> stream
    boolean streamMayHaveExisted(int) -> streamMayHaveExisted
    io.netty.handler.codec.http2.Http2Stream connectionStream() -> connectionStream
    int numActiveStreams() -> numActiveStreams
    io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor) -> forEachActiveStream
    boolean isServer() -> isServer
    io.netty.handler.codec.http2.Http2Connection$Endpoint local() -> local
    io.netty.handler.codec.http2.Http2Connection$Endpoint remote() -> remote
    boolean goAwayReceived() -> goAwayReceived
    void goAwayReceived(int,long,io.netty.buffer.ByteBuf) -> goAwayReceived
    boolean goAwaySent() -> goAwaySent
    void goAwaySent(int,long,io.netty.buffer.ByteBuf) -> goAwaySent
io.netty.handler.codec.http2.Http2Connection$Endpoint -> io.netty.handler.codec.http2.Http2Connection$Endpoint:
    int incrementAndGetNextStreamId() -> incrementAndGetNextStreamId
    boolean isValidStreamId(int) -> isValidStreamId
    boolean mayHaveCreatedStream(int) -> mayHaveCreatedStream
    boolean created(io.netty.handler.codec.http2.Http2Stream) -> created
    io.netty.handler.codec.http2.Http2Stream createStream(int,boolean) -> createStream
    io.netty.handler.codec.http2.Http2Stream reservePushStream(int,io.netty.handler.codec.http2.Http2Stream) -> reservePushStream
    void allowPushTo(boolean) -> allowPushTo
    boolean allowPushTo() -> allowPushTo
    int numActiveStreams() -> numActiveStreams
    int maxActiveStreams() -> maxActiveStreams
    void maxActiveStreams(int) -> maxActiveStreams
    int lastStreamCreated() -> lastStreamCreated
    int lastStreamKnownByPeer() -> lastStreamKnownByPeer
    io.netty.handler.codec.http2.Http2FlowController flowController() -> flowController
    void flowController(io.netty.handler.codec.http2.Http2FlowController) -> flowController
io.netty.handler.codec.http2.Http2Connection$Listener -> io.netty.handler.codec.http2.Http2Connection$Listener:
    void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    void onStreamHalfClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamHalfClosed
    void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
    void onGoAwaySent(int,long,io.netty.buffer.ByteBuf) -> onGoAwaySent
    void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
io.netty.handler.codec.http2.Http2Connection$PropertyKey -> io.netty.handler.codec.http2.Http2Connection$PropertyKey:
io.netty.handler.codec.http2.Http2ConnectionAdapter -> io.netty.handler.codec.http2.Http2ConnectionAdapter:
    24:24:void <init>() -> <init>
    27:27:void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    31:31:void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    35:35:void onStreamHalfClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamHalfClosed
    39:39:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    43:43:void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
    47:47:void onGoAwaySent(int,long,io.netty.buffer.ByteBuf) -> onGoAwaySent
    51:51:void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
io.netty.handler.codec.http2.Http2ConnectionDecoder -> io.netty.handler.codec.http2.Http2ConnectionDecoder:
    void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager) -> lifecycleManager
    io.netty.handler.codec.http2.Http2Connection connection() -> connection
    io.netty.handler.codec.http2.Http2LocalFlowController flowController() -> flowController
    void frameListener(io.netty.handler.codec.http2.Http2FrameListener) -> frameListener
    io.netty.handler.codec.http2.Http2FrameListener frameListener() -> frameListener
    void decodeFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decodeFrame
    io.netty.handler.codec.http2.Http2Settings localSettings() -> localSettings
    boolean prefaceReceived() -> prefaceReceived
    void close() -> close
io.netty.handler.codec.http2.Http2ConnectionEncoder -> io.netty.handler.codec.http2.Http2ConnectionEncoder:
    void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager) -> lifecycleManager
    io.netty.handler.codec.http2.Http2Connection connection() -> connection
    io.netty.handler.codec.http2.Http2RemoteFlowController flowController() -> flowController
    io.netty.handler.codec.http2.Http2FrameWriter frameWriter() -> frameWriter
    io.netty.handler.codec.http2.Http2Settings pollSentSettings() -> pollSentSettings
    void remoteSettings(io.netty.handler.codec.http2.Http2Settings) -> remoteSettings
    io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writeFrame
io.netty.handler.codec.http2.Http2ConnectionHandler -> io.netty.handler.codec.http2.Http2ConnectionHandler:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.handler.codec.http2.Http2Headers HEADERS_TOO_LARGE_HEADERS -> HEADERS_TOO_LARGE_HEADERS
    io.netty.buffer.ByteBuf HTTP_1_X_BUF -> HTTP_1_X_BUF
    io.netty.handler.codec.http2.Http2ConnectionDecoder decoder -> decoder
    io.netty.handler.codec.http2.Http2ConnectionEncoder encoder -> encoder
    io.netty.handler.codec.http2.Http2Settings initialSettings -> initialSettings
    io.netty.channel.ChannelFutureListener closeListener -> closeListener
    io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder byteDecoder -> byteDecoder
    long gracefulShutdownTimeoutMillis -> gracefulShutdownTimeoutMillis
    84:91:void <init>(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings) -> <init>
    94:110:void <init>(boolean,io.netty.handler.codec.http2.Http2FrameWriter,io.netty.handler.codec.http2.Http2FrameLogger,io.netty.handler.codec.http2.Http2Settings) -> <init>
    118:118:long gracefulShutdownTimeoutMillis() -> gracefulShutdownTimeoutMillis
    128:133:void gracefulShutdownTimeoutMillis(long) -> gracefulShutdownTimeoutMillis
    136:136:io.netty.handler.codec.http2.Http2Connection connection() -> connection
    140:140:io.netty.handler.codec.http2.Http2ConnectionDecoder decoder() -> decoder
    144:144:io.netty.handler.codec.http2.Http2ConnectionEncoder encoder() -> encoder
    148:148:boolean prefaceSent() -> prefaceSent
    156:170:void onHttpClientUpgrade() -> onHttpClientUpgrade
    177:194:void onHttpServerUpgrade(io.netty.handler.codec.http2.Http2Settings) -> onHttpServerUpgrade
    200:207:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    400:405:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    409:413:void handlerRemoved0(io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    417:422:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    427:432:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    439:446:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    450:451:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    455:456:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    461:462:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    466:467:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    471:486:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    489:501:void doGracefulShutdown(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise) -> doGracefulShutdown
    505:506:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    510:511:void read(io.netty.channel.ChannelHandlerContext) -> read
    515:516:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    524:528:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    531:532:void channelReadComplete0(io.netty.channel.ChannelHandlerContext) -> channelReadComplete0
    539:545:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    556:565:void closeStreamLocal(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStreamLocal
    576:585:void closeStreamRemote(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStreamRemote
    589:601:void closeStream(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStream
    608:620:void onError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> onError
    628:628:boolean isGracefulShutdownComplete() -> isGracefulShutdownComplete
    641:655:void onConnectionError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,io.netty.handler.codec.http2.Http2Exception) -> onConnectionError
    667:705:void onStreamError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,io.netty.handler.codec.http2.Http2Exception$StreamException) -> onStreamError
    715:716:void handleServerHeaderDecodeSizeError(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream) -> handleServerHeaderDecodeSizeError
    719:719:io.netty.handler.codec.http2.Http2FrameWriter frameWriter() -> frameWriter
    729:740:io.netty.channel.ChannelFuture resetUnknownStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> resetUnknownStream
    746:751:io.netty.channel.ChannelFuture resetStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> resetStream
    756:786:io.netty.channel.ChannelFuture resetStream(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,long,io.netty.channel.ChannelPromise) -> resetStream
    793:831:io.netty.channel.ChannelFuture goAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> goAway
    842:853:void checkCloseConnection(io.netty.channel.ChannelFuture) -> checkCloseConnection
    860:862:io.netty.channel.ChannelFuture goAway(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Exception) -> goAway
    866:872:void processRstStreamWriteResult(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> processRstStreamWriteResult
    875:878:void closeConnectionOnError(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelFuture) -> closeConnectionOnError
    884:884:io.netty.buffer.ByteBuf clientPrefaceString(io.netty.handler.codec.http2.Http2Connection) -> clientPrefaceString
    890:911:void processGoAwayWriteResult(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelFuture) -> processGoAwayWriteResult
    66:66:io.netty.handler.codec.http2.Http2ConnectionEncoder access$100(io.netty.handler.codec.http2.Http2ConnectionHandler) -> access$100
    66:66:io.netty.buffer.ByteBuf access$200(io.netty.handler.codec.http2.Http2Connection) -> access$200
    66:66:io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder access$302(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder) -> access$302
    66:66:io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder access$300(io.netty.handler.codec.http2.Http2ConnectionHandler) -> access$300
    66:66:io.netty.buffer.ByteBuf access$500() -> access$500
    66:66:io.netty.handler.codec.http2.Http2Settings access$600(io.netty.handler.codec.http2.Http2ConnectionHandler) -> access$600
    66:66:io.netty.handler.codec.http2.Http2ConnectionDecoder access$700(io.netty.handler.codec.http2.Http2ConnectionHandler) -> access$700
    66:66:void access$800(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelFuture) -> access$800
    66:66:void access$900(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelFuture) -> access$900
    66:66:void access$1000(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> access$1000
    66:66:void access$1100(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelFuture) -> access$1100
    69:74:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2ConnectionHandler$1 -> io.netty.handler.codec.http2.Http2ConnectionHandler$1:
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> this$0
    594:594:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler) -> <init>
    597:598:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    594:594:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.Http2ConnectionHandler$2 -> io.netty.handler.codec.http2.Http2ConnectionHandler$2:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> this$0
    733:733:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    736:737:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    733:733:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.Http2ConnectionHandler$3 -> io.netty.handler.codec.http2.Http2ConnectionHandler$3:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.handler.codec.http2.Http2Stream val$stream -> val$stream
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> this$0
    778:778:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream) -> <init>
    781:782:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    778:778:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.Http2ConnectionHandler$4 -> io.netty.handler.codec.http2.Http2ConnectionHandler$4:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    int val$lastStreamId -> val$lastStreamId
    long val$errorCode -> val$errorCode
    io.netty.buffer.ByteBuf val$debugData -> val$debugData
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> this$0
    820:820:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> <init>
    823:824:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    820:820:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.Http2ConnectionHandler$5 -> io.netty.handler.codec.http2.Http2ConnectionHandler$5:
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State -> $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Exception$ShutdownHint -> $SwitchMap$io$netty$handler$codec$http2$Http2Exception$ShutdownHint
    556:647:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder -> io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder:
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> this$0
    209:209:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler) -> <init>
    void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    211:211:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    212:212:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    216:222:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    228:228:boolean prefaceSent() -> prefaceSent
    209:209:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.handler.codec.http2.Http2ConnectionHandler$1) -> <init>
io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener -> io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener:
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    io.netty.channel.ChannelPromise promise -> promise
    io.netty.util.concurrent.ScheduledFuture timeoutTask -> timeoutTask
    921:925:void <init>(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    928:937:void <init>(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise,long,java.util.concurrent.TimeUnit) -> <init>
    941:945:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    916:916:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener$1 -> io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener$1:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener this$0 -> this$0
    931:931:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    934:935:void run() -> run
io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder -> io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder:
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> this$0
    386:386:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler) -> <init>
    390:394:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    386:386:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.handler.codec.http2.Http2ConnectionHandler$1) -> <init>
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder -> io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder:
    io.netty.buffer.ByteBuf clientPrefaceString -> clientPrefaceString
    boolean prefaceSent -> prefaceSent
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> this$0
    236:241:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    245:245:boolean prefaceSent() -> prefaceSent
    251:259:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    264:265:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    269:271:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    278:279:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    285:289:void cleanup() -> cleanup
    298:330:boolean readClientPrefaceString(io.netty.buffer.ByteBuf) -> readClientPrefaceString
    342:354:boolean verifyFirstFrameIsSettings(io.netty.buffer.ByteBuf) -> verifyFirstFrameIsSettings
    361:383:void sendPreface(io.netty.channel.ChannelHandlerContext) -> sendPreface
io.netty.handler.codec.http2.Http2ConnectionPrefaceAndSettingsFrameWrittenEvent -> io.netty.handler.codec.http2.Http2ConnectionPrefaceAndSettingsFrameWrittenEvent:
    io.netty.handler.codec.http2.Http2ConnectionPrefaceAndSettingsFrameWrittenEvent INSTANCE -> INSTANCE
    29:30:void <init>() -> <init>
    26:26:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2DataWriter -> io.netty.handler.codec.http2.Http2DataWriter:
    io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> writeData
io.netty.handler.codec.http2.Http2Error -> io.netty.handler.codec.http2.Http2Error:
    io.netty.handler.codec.http2.Http2Error NO_ERROR -> NO_ERROR
    io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR -> PROTOCOL_ERROR
    io.netty.handler.codec.http2.Http2Error INTERNAL_ERROR -> INTERNAL_ERROR
    io.netty.handler.codec.http2.Http2Error FLOW_CONTROL_ERROR -> FLOW_CONTROL_ERROR
    io.netty.handler.codec.http2.Http2Error SETTINGS_TIMEOUT -> SETTINGS_TIMEOUT
    io.netty.handler.codec.http2.Http2Error STREAM_CLOSED -> STREAM_CLOSED
    io.netty.handler.codec.http2.Http2Error FRAME_SIZE_ERROR -> FRAME_SIZE_ERROR
    io.netty.handler.codec.http2.Http2Error REFUSED_STREAM -> REFUSED_STREAM
    io.netty.handler.codec.http2.Http2Error CANCEL -> CANCEL
    io.netty.handler.codec.http2.Http2Error COMPRESSION_ERROR -> COMPRESSION_ERROR
    io.netty.handler.codec.http2.Http2Error CONNECT_ERROR -> CONNECT_ERROR
    io.netty.handler.codec.http2.Http2Error ENHANCE_YOUR_CALM -> ENHANCE_YOUR_CALM
    io.netty.handler.codec.http2.Http2Error INADEQUATE_SECURITY -> INADEQUATE_SECURITY
    io.netty.handler.codec.http2.Http2Error HTTP_1_1_REQUIRED -> HTTP_1_1_REQUIRED
    long code -> code
    io.netty.handler.codec.http2.Http2Error[] INT_TO_ENUM_MAP -> INT_TO_ENUM_MAP
    io.netty.handler.codec.http2.Http2Error[] $VALUES -> $VALUES
    23:23:io.netty.handler.codec.http2.Http2Error[] values() -> values
    23:23:io.netty.handler.codec.http2.Http2Error valueOf(java.lang.String) -> valueOf
    51:53:void <init>(java.lang.String,int,long) -> <init>
    59:59:long code() -> code
    23:49:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2Exception -> io.netty.handler.codec.http2.Http2Exception:
    io.netty.handler.codec.http2.Http2Error error -> error
    io.netty.handler.codec.http2.Http2Exception$ShutdownHint shutdownHint -> shutdownHint
    37:38:void <init>(io.netty.handler.codec.http2.Http2Error) -> <init>
    40:43:void <init>(io.netty.handler.codec.http2.Http2Error,io.netty.handler.codec.http2.Http2Exception$ShutdownHint) -> <init>
    46:47:void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String) -> <init>
    50:53:void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String,io.netty.handler.codec.http2.Http2Exception$ShutdownHint) -> <init>
    56:57:void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Throwable) -> <init>
    60:63:void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Throwable,io.netty.handler.codec.http2.Http2Exception$ShutdownHint) -> <init>
    66:66:io.netty.handler.codec.http2.Http2Error error() -> error
    73:73:io.netty.handler.codec.http2.Http2Exception$ShutdownHint shutdownHint() -> shutdownHint
    85:85:io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[]) -> connectionError
    99:99:io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> connectionError
    111:111:io.netty.handler.codec.http2.Http2Exception closedStreamError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[]) -> closedStreamError
    127:129:io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[]) -> streamError
    147:149:io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> streamError
    169:171:io.netty.handler.codec.http2.Http2Exception headerListSizeError(int,io.netty.handler.codec.http2.Http2Error,boolean,java.lang.String,java.lang.Object[]) -> headerListSizeError
    181:181:boolean isStreamError(io.netty.handler.codec.http2.Http2Exception) -> isStreamError
io.netty.handler.codec.http2.Http2Exception$ClosedStreamCreationException -> io.netty.handler.codec.http2.Http2Exception$ClosedStreamCreationException:
    224:225:void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String) -> <init>
io.netty.handler.codec.http2.Http2Exception$CompositeStreamException -> io.netty.handler.codec.http2.Http2Exception$CompositeStreamException:
    java.util.List exceptions -> exceptions
    277:279:void <init>(io.netty.handler.codec.http2.Http2Error,int) -> <init>
    282:283:void add(io.netty.handler.codec.http2.Http2Exception$StreamException) -> add
    287:287:java.util.Iterator iterator() -> iterator
io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException -> io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException:
    boolean decode -> decode
    260:262:void <init>(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,boolean) -> <init>
    265:265:boolean duringDecode() -> duringDecode
io.netty.handler.codec.http2.Http2Exception$ShutdownHint -> io.netty.handler.codec.http2.Http2Exception$ShutdownHint:
    io.netty.handler.codec.http2.Http2Exception$ShutdownHint NO_SHUTDOWN -> NO_SHUTDOWN
    io.netty.handler.codec.http2.Http2Exception$ShutdownHint GRACEFUL_SHUTDOWN -> GRACEFUL_SHUTDOWN
    io.netty.handler.codec.http2.Http2Exception$ShutdownHint HARD_SHUTDOWN -> HARD_SHUTDOWN
    io.netty.handler.codec.http2.Http2Exception$ShutdownHint[] $VALUES -> $VALUES
    197:197:io.netty.handler.codec.http2.Http2Exception$ShutdownHint[] values() -> values
    197:197:io.netty.handler.codec.http2.Http2Exception$ShutdownHint valueOf(java.lang.String) -> valueOf
    197:197:void <init>(java.lang.String,int) -> <init>
    197:210:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2Exception$StreamException -> io.netty.handler.codec.http2.Http2Exception$StreamException:
    int streamId -> streamId
    240:242:void <init>(int,io.netty.handler.codec.http2.Http2Error,java.lang.String) -> <init>
    245:247:void <init>(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Throwable) -> <init>
    250:250:int streamId() -> streamId
io.netty.handler.codec.http2.Http2Flags -> io.netty.handler.codec.http2.Http2Flags:
    short value -> value
    33:34:void <init>() -> <init>
    36:38:void <init>(short) -> <init>
    44:44:short value() -> value
    52:52:boolean endOfStream() -> endOfStream
    60:60:boolean endOfHeaders() -> endOfHeaders
    68:68:boolean priorityPresent() -> priorityPresent
    76:76:boolean ack() -> ack
    84:84:boolean paddingPresent() -> paddingPresent
    92:92:int getNumPriorityBytes() -> getNumPriorityBytes
    100:100:int getPaddingPresenceFieldLength() -> getPaddingPresenceFieldLength
    107:107:io.netty.handler.codec.http2.Http2Flags endOfStream(boolean) -> endOfStream
    114:114:io.netty.handler.codec.http2.Http2Flags endOfHeaders(boolean) -> endOfHeaders
    121:121:io.netty.handler.codec.http2.Http2Flags priorityPresent(boolean) -> priorityPresent
    128:128:io.netty.handler.codec.http2.Http2Flags paddingPresent(boolean) -> paddingPresent
    135:135:io.netty.handler.codec.http2.Http2Flags ack(boolean) -> ack
    145:150:io.netty.handler.codec.http2.Http2Flags setFlag(boolean,short) -> setFlag
    159:159:boolean isFlagSet(short) -> isFlagSet
    164:167:int hashCode() -> hashCode
    172:182:boolean equals(java.lang.Object) -> equals
    187:205:java.lang.String toString() -> toString
io.netty.handler.codec.http2.Http2FlowController -> io.netty.handler.codec.http2.Http2FlowController:
    void channelHandlerContext(io.netty.channel.ChannelHandlerContext) -> channelHandlerContext
    void initialWindowSize(int) -> initialWindowSize
    int initialWindowSize() -> initialWindowSize
    int windowSize(io.netty.handler.codec.http2.Http2Stream) -> windowSize
    void incrementWindowSize(io.netty.handler.codec.http2.Http2Stream,int) -> incrementWindowSize
io.netty.handler.codec.http2.Http2FrameListener -> io.netty.handler.codec.http2.Http2FrameListener:
    int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
io.netty.handler.codec.http2.Http2FrameListenerDecorator -> io.netty.handler.codec.http2.Http2FrameListenerDecorator:
    io.netty.handler.codec.http2.Http2FrameListener listener -> listener
    29:31:void <init>(io.netty.handler.codec.http2.Http2FrameListener) -> <init>
    36:36:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    42:43:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    48:49:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    54:55:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    59:60:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    64:65:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    69:70:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    74:75:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    79:80:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    85:86:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    91:92:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    97:98:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    103:104:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
io.netty.handler.codec.http2.Http2FrameLogger -> io.netty.handler.codec.http2.Http2FrameLogger:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.internal.logging.InternalLogLevel level -> level
    47:48:void <init>(io.netty.handler.logging.LogLevel) -> <init>
    58:61:void <init>(io.netty.util.internal.logging.InternalLogLevel,io.netty.util.internal.logging.InternalLogger) -> <init>
    65:67:void logData(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> logData
    71:73:void logHeaders(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> logHeaders
    77:80:void logHeaders(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> logHeaders
    84:86:void logPriority(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> logPriority
    89:91:void logRstStream(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,long) -> logRstStream
    94:95:void logSettingsAck(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext) -> logSettingsAck
    98:99:void logSettings(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> logSettings
    102:104:void logPing(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> logPing
    107:109:void logPingAck(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> logPingAck
    113:115:void logPushPromise(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> logPushPromise
    119:121:void logGoAway(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> logGoAway
    125:127:void logWindowsUpdate(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,int) -> logWindowsUpdate
    131:133:void logUnknownFrame(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> logUnknownFrame
    136:147:java.lang.String toString(io.netty.buffer.ByteBuf) -> toString
io.netty.handler.codec.http2.Http2FrameLogger$Direction -> io.netty.handler.codec.http2.Http2FrameLogger$Direction:
    io.netty.handler.codec.http2.Http2FrameLogger$Direction INBOUND -> INBOUND
    io.netty.handler.codec.http2.Http2FrameLogger$Direction OUTBOUND -> OUTBOUND
    io.netty.handler.codec.http2.Http2FrameLogger$Direction[] $VALUES -> $VALUES
    37:37:io.netty.handler.codec.http2.Http2FrameLogger$Direction[] values() -> values
    37:37:io.netty.handler.codec.http2.Http2FrameLogger$Direction valueOf(java.lang.String) -> valueOf
    37:37:void <init>(java.lang.String,int) -> <init>
    37:39:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2FrameReader -> io.netty.handler.codec.http2.Http2FrameReader:
    void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readFrame
    io.netty.handler.codec.http2.Http2FrameReader$Configuration configuration() -> configuration
    void close() -> close
io.netty.handler.codec.http2.Http2FrameReader$Configuration -> io.netty.handler.codec.http2.Http2FrameReader$Configuration:
    io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration headersConfiguration() -> headersConfiguration
    io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy() -> frameSizePolicy
io.netty.handler.codec.http2.Http2FrameSizePolicy -> io.netty.handler.codec.http2.Http2FrameSizePolicy:
    void maxFrameSize(int) -> maxFrameSize
    int maxFrameSize() -> maxFrameSize
io.netty.handler.codec.http2.Http2FrameWriter -> io.netty.handler.codec.http2.Http2FrameWriter:
    io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> writeRstStream
    io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> writeSettings
    io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> writeSettingsAck
    io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writePing
    io.netty.channel.ChannelFuture writePushPromise(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int,io.netty.channel.ChannelPromise) -> writePushPromise
    io.netty.channel.ChannelFuture writeGoAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writeGoAway
    io.netty.channel.ChannelFuture writeWindowUpdate(io.netty.channel.ChannelHandlerContext,int,int,io.netty.channel.ChannelPromise) -> writeWindowUpdate
    io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writeFrame
    io.netty.handler.codec.http2.Http2FrameWriter$Configuration configuration() -> configuration
    void close() -> close
io.netty.handler.codec.http2.Http2FrameWriter$Configuration -> io.netty.handler.codec.http2.Http2FrameWriter$Configuration:
    io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration headersConfiguration() -> headersConfiguration
    io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy() -> frameSizePolicy
io.netty.handler.codec.http2.Http2Headers -> io.netty.handler.codec.http2.Http2Headers:
    java.util.Iterator iterator() -> iterator
    io.netty.handler.codec.http2.Http2Headers method(java.lang.CharSequence) -> method
    io.netty.handler.codec.http2.Http2Headers scheme(java.lang.CharSequence) -> scheme
    io.netty.handler.codec.http2.Http2Headers authority(java.lang.CharSequence) -> authority
    io.netty.handler.codec.http2.Http2Headers path(java.lang.CharSequence) -> path
    io.netty.handler.codec.http2.Http2Headers status(java.lang.CharSequence) -> status
    java.lang.CharSequence method() -> method
    java.lang.CharSequence scheme() -> scheme
    java.lang.CharSequence authority() -> authority
    java.lang.CharSequence path() -> path
    java.lang.CharSequence status() -> status
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName -> io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName:
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName METHOD -> METHOD
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName SCHEME -> SCHEME
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName AUTHORITY -> AUTHORITY
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName PATH -> PATH
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName STATUS -> STATUS
    io.netty.util.AsciiString value -> value
    io.netty.handler.codec.http2.CharSequenceMap PSEUDO_HEADERS -> PSEUDO_HEADERS
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] $VALUES -> $VALUES
    34:34:io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] values() -> values
    34:34:io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName valueOf(java.lang.String) -> valueOf
    68:70:void <init>(java.lang.String,int,java.lang.String) -> <init>
    74:74:io.netty.util.AsciiString value() -> value
    34:66:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2HeadersDecoder -> io.netty.handler.codec.http2.Http2HeadersDecoder:
    io.netty.handler.codec.http2.Http2Headers decodeHeaders(int,io.netty.buffer.ByteBuf) -> decodeHeaders
    io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration configuration() -> configuration
io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration -> io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration:
    void maxHeaderTableSize(long) -> maxHeaderTableSize
    long maxHeaderTableSize() -> maxHeaderTableSize
    void maxHeaderListSize(long,long) -> maxHeaderListSize
    long maxHeaderListSize() -> maxHeaderListSize
    long maxHeaderListSizeGoAway() -> maxHeaderListSizeGoAway
io.netty.handler.codec.http2.Http2HeadersEncoder -> io.netty.handler.codec.http2.Http2HeadersEncoder:
    io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector NEVER_SENSITIVE -> NEVER_SENSITIVE
    io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector ALWAYS_SENSITIVE -> ALWAYS_SENSITIVE
    void encodeHeaders(int,io.netty.handler.codec.http2.Http2Headers,io.netty.buffer.ByteBuf) -> encodeHeaders
    io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration configuration() -> configuration
    93:103:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2HeadersEncoder$1 -> io.netty.handler.codec.http2.Http2HeadersEncoder$1:
    93:93:void <init>() -> <init>
    96:96:boolean isSensitive(java.lang.CharSequence,java.lang.CharSequence) -> isSensitive
io.netty.handler.codec.http2.Http2HeadersEncoder$2 -> io.netty.handler.codec.http2.Http2HeadersEncoder$2:
    103:103:void <init>() -> <init>
    106:106:boolean isSensitive(java.lang.CharSequence,java.lang.CharSequence) -> isSensitive
io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration -> io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration:
    void maxHeaderTableSize(long) -> maxHeaderTableSize
    void maxHeaderListSize(long) -> maxHeaderListSize
io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector -> io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector:
    boolean isSensitive(java.lang.CharSequence,java.lang.CharSequence) -> isSensitive
io.netty.handler.codec.http2.Http2InboundFrameLogger -> io.netty.handler.codec.http2.Http2InboundFrameLogger:
    io.netty.handler.codec.http2.Http2FrameReader reader -> reader
    io.netty.handler.codec.http2.Http2FrameLogger logger -> logger
    33:36:void <init>(io.netty.handler.codec.http2.Http2FrameReader,io.netty.handler.codec.http2.Http2FrameLogger) -> <init>
    41:136:void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> readFrame
    140:141:void close() -> close
    145:145:io.netty.handler.codec.http2.Http2FrameReader$Configuration configuration() -> configuration
    29:29:io.netty.handler.codec.http2.Http2FrameLogger access$000(io.netty.handler.codec.http2.Http2InboundFrameLogger) -> access$000
io.netty.handler.codec.http2.Http2InboundFrameLogger$1 -> io.netty.handler.codec.http2.Http2InboundFrameLogger$1:
    io.netty.handler.codec.http2.Http2FrameListener val$listener -> val$listener
    io.netty.handler.codec.http2.Http2InboundFrameLogger this$0 -> this$0
    41:41:void <init>(io.netty.handler.codec.http2.Http2InboundFrameLogger,io.netty.handler.codec.http2.Http2FrameListener) -> <init>
    47:48:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    55:57:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    63:67:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    72:74:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    79:81:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    85:87:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    92:94:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    98:100:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    104:106:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    111:113:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    118:120:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    125:127:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    132:134:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
io.netty.handler.codec.http2.Http2LifecycleManager -> io.netty.handler.codec.http2.Http2LifecycleManager:
    void closeStreamLocal(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStreamLocal
    void closeStreamRemote(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStreamRemote
    void closeStream(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStream
    io.netty.channel.ChannelFuture resetStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> resetStream
    io.netty.channel.ChannelFuture goAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> goAway
    void onError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> onError
io.netty.handler.codec.http2.Http2LocalFlowController -> io.netty.handler.codec.http2.Http2LocalFlowController:
    io.netty.handler.codec.http2.Http2LocalFlowController frameWriter(io.netty.handler.codec.http2.Http2FrameWriter) -> frameWriter
    void receiveFlowControlledFrame(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,int,boolean) -> receiveFlowControlledFrame
    boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream,int) -> consumeBytes
    int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream) -> unconsumedBytes
io.netty.handler.codec.http2.Http2NoMoreStreamIdsException -> io.netty.handler.codec.http2.Http2NoMoreStreamIdsException:
    30:31:void <init>() -> <init>
io.netty.handler.codec.http2.Http2OutboundFrameLogger -> io.netty.handler.codec.http2.Http2OutboundFrameLogger:
    io.netty.handler.codec.http2.Http2FrameWriter writer -> writer
    io.netty.handler.codec.http2.Http2FrameLogger logger -> logger
    35:38:void <init>(io.netty.handler.codec.http2.Http2FrameWriter,io.netty.handler.codec.http2.Http2FrameLogger) -> <init>
    43:44:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> writeData
    50:51:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    58:60:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    74:75:io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> writeRstStream
    81:82:io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> writeSettings
    87:88:io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> writeSettingsAck
    94:99:io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writePing
    105:106:io.netty.channel.ChannelFuture writePushPromise(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int,io.netty.channel.ChannelPromise) -> writePushPromise
    112:113:io.netty.channel.ChannelFuture writeGoAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writeGoAway
    119:120:io.netty.channel.ChannelFuture writeWindowUpdate(io.netty.channel.ChannelHandlerContext,int,int,io.netty.channel.ChannelPromise) -> writeWindowUpdate
    126:127:io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> writeFrame
    132:133:void close() -> close
    137:137:io.netty.handler.codec.http2.Http2FrameWriter$Configuration configuration() -> configuration
io.netty.handler.codec.http2.Http2PromisedRequestVerifier -> io.netty.handler.codec.http2.Http2PromisedRequestVerifier:
    io.netty.handler.codec.http2.Http2PromisedRequestVerifier ALWAYS_VERIFY -> ALWAYS_VERIFY
    boolean isAuthoritative(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Headers) -> isAuthoritative
    boolean isCacheable(io.netty.handler.codec.http2.Http2Headers) -> isCacheable
    boolean isSafe(io.netty.handler.codec.http2.Http2Headers) -> isSafe
    58:58:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2PromisedRequestVerifier$1 -> io.netty.handler.codec.http2.Http2PromisedRequestVerifier$1:
    58:58:void <init>() -> <init>
    61:61:boolean isAuthoritative(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Headers) -> isAuthoritative
    66:66:boolean isCacheable(io.netty.handler.codec.http2.Http2Headers) -> isCacheable
    71:71:boolean isSafe(io.netty.handler.codec.http2.Http2Headers) -> isSafe
io.netty.handler.codec.http2.Http2RemoteFlowController -> io.netty.handler.codec.http2.Http2RemoteFlowController:
    io.netty.channel.ChannelHandlerContext channelHandlerContext() -> channelHandlerContext
    void addFlowControlled(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> addFlowControlled
    boolean hasFlowControlled(io.netty.handler.codec.http2.Http2Stream) -> hasFlowControlled
    void writePendingBytes() -> writePendingBytes
    void listener(io.netty.handler.codec.http2.Http2RemoteFlowController$Listener) -> listener
    boolean isWritable(io.netty.handler.codec.http2.Http2Stream) -> isWritable
    void channelWritabilityChanged() -> channelWritabilityChanged
    void updateDependencyTree(int,int,short,boolean) -> updateDependencyTree
io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled -> io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled:
    int size() -> size
    void error(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> error
    void writeComplete() -> writeComplete
    void write(io.netty.channel.ChannelHandlerContext,int) -> write
    boolean merge(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> merge
io.netty.handler.codec.http2.Http2RemoteFlowController$Listener -> io.netty.handler.codec.http2.Http2RemoteFlowController$Listener:
    void writabilityChanged(io.netty.handler.codec.http2.Http2Stream) -> writabilityChanged
io.netty.handler.codec.http2.Http2Settings -> io.netty.handler.codec.http2.Http2Settings:
    java.lang.Long FALSE -> FALSE
    java.lang.Long TRUE -> TRUE
    56:57:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    75:76:java.lang.Long put(char,java.lang.Long) -> put
    83:83:java.lang.Long headerTableSize() -> headerTableSize
    92:93:io.netty.handler.codec.http2.Http2Settings headerTableSize(long) -> headerTableSize
    100:104:java.lang.Boolean pushEnabled() -> pushEnabled
    111:112:io.netty.handler.codec.http2.Http2Settings pushEnabled(boolean) -> pushEnabled
    119:119:java.lang.Long maxConcurrentStreams() -> maxConcurrentStreams
    128:129:io.netty.handler.codec.http2.Http2Settings maxConcurrentStreams(long) -> maxConcurrentStreams
    136:136:java.lang.Integer initialWindowSize() -> initialWindowSize
    145:146:io.netty.handler.codec.http2.Http2Settings initialWindowSize(int) -> initialWindowSize
    153:153:java.lang.Integer maxFrameSize() -> maxFrameSize
    162:163:io.netty.handler.codec.http2.Http2Settings maxFrameSize(int) -> maxFrameSize
    170:170:java.lang.Long maxHeaderListSize() -> maxHeaderListSize
    179:180:io.netty.handler.codec.http2.Http2Settings maxHeaderListSize(long) -> maxHeaderListSize
    198:202:java.lang.Integer getIntValue(char) -> getIntValue
    206:244:void verifyStandardSetting(int,java.lang.Long) -> verifyStandardSetting
    248:263:java.lang.String keyToString(char) -> keyToString
    268:268:io.netty.handler.codec.http2.Http2Settings defaultSettings() -> defaultSettings
    45:45:java.lang.Object put(char,java.lang.Object) -> put
    52:53:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2Stream -> io.netty.handler.codec.http2.Http2Stream:
    int id() -> id
    io.netty.handler.codec.http2.Http2Stream$State state() -> state
    io.netty.handler.codec.http2.Http2Stream open(boolean) -> open
    io.netty.handler.codec.http2.Http2Stream close() -> close
    io.netty.handler.codec.http2.Http2Stream closeLocalSide() -> closeLocalSide
    io.netty.handler.codec.http2.Http2Stream closeRemoteSide() -> closeRemoteSide
    boolean isResetSent() -> isResetSent
    io.netty.handler.codec.http2.Http2Stream resetSent() -> resetSent
    java.lang.Object setProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey,java.lang.Object) -> setProperty
    java.lang.Object getProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey) -> getProperty
    java.lang.Object removeProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey) -> removeProperty
    io.netty.handler.codec.http2.Http2Stream headersSent(boolean) -> headersSent
    boolean isHeadersSent() -> isHeadersSent
    boolean isTrailersSent() -> isTrailersSent
    io.netty.handler.codec.http2.Http2Stream headersReceived(boolean) -> headersReceived
    boolean isHeadersReceived() -> isHeadersReceived
    boolean isTrailersReceived() -> isTrailersReceived
    io.netty.handler.codec.http2.Http2Stream pushPromiseSent() -> pushPromiseSent
    boolean isPushPromiseSent() -> isPushPromiseSent
io.netty.handler.codec.http2.Http2Stream$State -> io.netty.handler.codec.http2.Http2Stream$State:
    io.netty.handler.codec.http2.Http2Stream$State IDLE -> IDLE
    io.netty.handler.codec.http2.Http2Stream$State RESERVED_LOCAL -> RESERVED_LOCAL
    io.netty.handler.codec.http2.Http2Stream$State RESERVED_REMOTE -> RESERVED_REMOTE
    io.netty.handler.codec.http2.Http2Stream$State OPEN -> OPEN
    io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_LOCAL -> HALF_CLOSED_LOCAL
    io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_REMOTE -> HALF_CLOSED_REMOTE
    io.netty.handler.codec.http2.Http2Stream$State CLOSED -> CLOSED
    boolean localSideOpen -> localSideOpen
    boolean remoteSideOpen -> remoteSideOpen
    io.netty.handler.codec.http2.Http2Stream$State[] $VALUES -> $VALUES
    29:29:io.netty.handler.codec.http2.Http2Stream$State[] values() -> values
    29:29:io.netty.handler.codec.http2.Http2Stream$State valueOf(java.lang.String) -> valueOf
    41:44:void <init>(java.lang.String,int,boolean,boolean) -> <init>
    51:51:boolean localSideOpen() -> localSideOpen
    59:59:boolean remoteSideOpen() -> remoteSideOpen
    29:36:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2StreamVisitor -> io.netty.handler.codec.http2.Http2StreamVisitor:
    boolean visit(io.netty.handler.codec.http2.Http2Stream) -> visit
io.netty.handler.codec.http2.ReadOnlyHttp2Headers -> io.netty.handler.codec.http2.ReadOnlyHttp2Headers:
    io.netty.util.AsciiString[] pseudoHeaders -> pseudoHeaders
    io.netty.util.AsciiString[] otherHeaders -> otherHeaders
    boolean $assertionsDisabled -> $assertionsDisabled
    108:109:io.netty.handler.codec.http2.ReadOnlyHttp2Headers serverHeaders(boolean,io.netty.util.AsciiString,io.netty.util.AsciiString[]) -> serverHeaders
    113:123:void <init>(boolean,io.netty.util.AsciiString[],io.netty.util.AsciiString[]) -> <init>
    126:126:java.lang.IllegalArgumentException newInvalidArraySizeException() -> newInvalidArraySizeException
    131:153:void validateHeaders(io.netty.util.AsciiString[],io.netty.util.AsciiString[]) -> validateHeaders
    156:173:io.netty.util.AsciiString get0(java.lang.CharSequence) -> get0
    178:178:java.lang.CharSequence get(java.lang.CharSequence) -> get
    199:218:java.util.List getAll(java.lang.CharSequence) -> getAll
    426:426:boolean contains(java.lang.CharSequence) -> contains
    431:453:boolean contains(java.lang.CharSequence,java.lang.CharSequence) -> contains
    511:511:int size() -> size
    516:516:boolean isEmpty() -> isEmpty
    521:534:java.util.Set names() -> names
    539:539:io.netty.handler.codec.http2.Http2Headers add(java.lang.CharSequence,java.lang.CharSequence) -> add
    544:544:io.netty.handler.codec.http2.Http2Headers add(java.lang.CharSequence,java.lang.Iterable) -> add
    619:619:io.netty.handler.codec.http2.Http2Headers set(java.lang.CharSequence,java.lang.CharSequence) -> set
    624:624:io.netty.handler.codec.http2.Http2Headers set(java.lang.CharSequence,java.lang.Iterable) -> set
    704:704:boolean remove(java.lang.CharSequence) -> remove
    709:709:io.netty.handler.codec.http2.Http2Headers clear() -> clear
    714:714:java.util.Iterator iterator() -> iterator
    724:724:io.netty.handler.codec.http2.Http2Headers method(java.lang.CharSequence) -> method
    729:729:io.netty.handler.codec.http2.Http2Headers scheme(java.lang.CharSequence) -> scheme
    734:734:io.netty.handler.codec.http2.Http2Headers authority(java.lang.CharSequence) -> authority
    739:739:io.netty.handler.codec.http2.Http2Headers path(java.lang.CharSequence) -> path
    744:744:io.netty.handler.codec.http2.Http2Headers status(java.lang.CharSequence) -> status
    749:749:java.lang.CharSequence method() -> method
    754:754:java.lang.CharSequence scheme() -> scheme
    759:759:java.lang.CharSequence authority() -> authority
    764:764:java.lang.CharSequence path() -> path
    769:769:java.lang.CharSequence status() -> status
    774:781:java.lang.String toString() -> toString
    43:43:io.netty.handler.codec.Headers clear() -> clear
    43:43:boolean remove(java.lang.Object) -> remove
    43:43:io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> set
    43:43:io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object) -> set
    43:43:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> add
    43:43:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> add
    43:43:boolean contains(java.lang.Object,java.lang.Object) -> contains
    43:43:boolean contains(java.lang.Object) -> contains
    43:43:java.util.List getAll(java.lang.Object) -> getAll
    43:43:java.lang.Object get(java.lang.Object) -> get
    43:43:io.netty.util.AsciiString[] access$100(io.netty.handler.codec.http2.ReadOnlyHttp2Headers) -> access$100
    43:43:io.netty.util.AsciiString[] access$200(io.netty.handler.codec.http2.ReadOnlyHttp2Headers) -> access$200
    43:43:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.ReadOnlyHttp2Headers$1 -> io.netty.handler.codec.http2.ReadOnlyHttp2Headers$1:
io.netty.handler.codec.http2.ReadOnlyHttp2Headers$ReadOnlyIterator -> io.netty.handler.codec.http2.ReadOnlyHttp2Headers$ReadOnlyIterator:
    int i -> i
    io.netty.util.AsciiString[] current -> current
    io.netty.util.AsciiString key -> key
    io.netty.util.AsciiString value -> value
    io.netty.handler.codec.http2.ReadOnlyHttp2Headers this$0 -> this$0
    836:839:void <init>(io.netty.handler.codec.http2.ReadOnlyHttp2Headers) -> <init>
    845:845:boolean hasNext() -> hasNext
    850:860:java.util.Map$Entry next() -> next
    865:865:java.lang.CharSequence getKey() -> getKey
    870:870:java.lang.CharSequence getValue() -> getValue
    875:875:java.lang.CharSequence setValue(java.lang.CharSequence) -> setValue
    880:880:void remove() -> remove
    885:885:java.lang.String toString() -> toString
    836:836:java.lang.Object setValue(java.lang.Object) -> setValue
    836:836:java.lang.Object getValue() -> getValue
    836:836:java.lang.Object getKey() -> getKey
    836:836:java.lang.Object next() -> next
    836:836:void <init>(io.netty.handler.codec.http2.ReadOnlyHttp2Headers,io.netty.handler.codec.http2.ReadOnlyHttp2Headers$1) -> <init>
io.netty.handler.codec.http2.StreamBufferingEncoder -> io.netty.handler.codec.http2.StreamBufferingEncoder:
    java.util.TreeMap pendingStreams -> pendingStreams
    int maxConcurrentStreams -> maxConcurrentStreams
    boolean closed -> closed
    111:112:void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder) -> <init>
    106:129:void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder,int) -> <init>
    141:141:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    149:167:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> writeHeaders
    173:189:io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> writeRstStream
    195:205:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> writeData
    212:219:void remoteSettings(io.netty.handler.codec.http2.Http2Settings) -> remoteSettings
    224:237:void close() -> close
    240:249:void tryCreatePendingStreams() -> tryCreatePendingStreams
    252:261:void cancelGoAwayStreams(int,long,io.netty.buffer.ByteBuf) -> cancelGoAwayStreams
    267:267:boolean canCreateStream() -> canCreateStream
    271:271:boolean isExistingStream(int) -> isExistingStream
    59:59:void access$000(io.netty.handler.codec.http2.StreamBufferingEncoder,int,long,io.netty.buffer.ByteBuf) -> access$000
    59:59:void access$100(io.netty.handler.codec.http2.StreamBufferingEncoder) -> access$100
io.netty.handler.codec.http2.StreamBufferingEncoder$1 -> io.netty.handler.codec.http2.StreamBufferingEncoder$1:
    io.netty.handler.codec.http2.StreamBufferingEncoder this$0 -> this$0
    117:117:void <init>(io.netty.handler.codec.http2.StreamBufferingEncoder) -> <init>
    121:122:void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
    126:127:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
io.netty.handler.codec.http2.StreamBufferingEncoder$DataFrame -> io.netty.handler.codec.http2.StreamBufferingEncoder$DataFrame:
    io.netty.buffer.ByteBuf data -> data
    int padding -> padding
    boolean endOfStream -> endOfStream
    io.netty.handler.codec.http2.StreamBufferingEncoder this$0 -> this$0
    348:353:void <init>(io.netty.handler.codec.http2.StreamBufferingEncoder,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> <init>
    357:359:void release(java.lang.Throwable) -> release
    363:364:void send(io.netty.channel.ChannelHandlerContext,int) -> send
io.netty.handler.codec.http2.StreamBufferingEncoder$Frame -> io.netty.handler.codec.http2.StreamBufferingEncoder$Frame:
    io.netty.channel.ChannelPromise promise -> promise
    300:302:void <init>(io.netty.channel.ChannelPromise) -> <init>
    308:313:void release(java.lang.Throwable) -> release
    void send(io.netty.channel.ChannelHandlerContext,int) -> send
io.netty.handler.codec.http2.StreamBufferingEncoder$HeadersFrame -> io.netty.handler.codec.http2.StreamBufferingEncoder$HeadersFrame:
    io.netty.handler.codec.http2.Http2Headers headers -> headers
    int streamDependency -> streamDependency
    short weight -> weight
    boolean exclusive -> exclusive
    int padding -> padding
    boolean endOfStream -> endOfStream
    io.netty.handler.codec.http2.StreamBufferingEncoder this$0 -> this$0
    327:335:void <init>(io.netty.handler.codec.http2.StreamBufferingEncoder,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> <init>
    339:340:void send(io.netty.channel.ChannelHandlerContext,int) -> send
io.netty.handler.codec.http2.StreamBufferingEncoder$Http2ChannelClosedException -> io.netty.handler.codec.http2.StreamBufferingEncoder$Http2ChannelClosedException:
    68:69:void <init>() -> <init>
io.netty.handler.codec.http2.StreamBufferingEncoder$Http2GoAwayException -> io.netty.handler.codec.http2.StreamBufferingEncoder$Http2GoAwayException:
    int lastStreamId -> lastStreamId
    long errorCode -> errorCode
    byte[] debugData -> debugData
    83:87:void <init>(int,long,byte[]) -> <init>
io.netty.handler.codec.http2.StreamBufferingEncoder$PendingStream -> io.netty.handler.codec.http2.StreamBufferingEncoder$PendingStream:
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    int streamId -> streamId
    java.util.Queue frames -> frames
    277:282:void <init>(io.netty.channel.ChannelHandlerContext,int) -> <init>
    285:288:void sendFrames() -> sendFrames
    291:294:void close(java.lang.Throwable) -> close
io.netty.handler.codec.http2.StreamByteDistributor -> io.netty.handler.codec.http2.StreamByteDistributor:
    void updateStreamableBytes(io.netty.handler.codec.http2.StreamByteDistributor$StreamState) -> updateStreamableBytes
    void updateDependencyTree(int,int,short,boolean) -> updateDependencyTree
    boolean distribute(int,io.netty.handler.codec.http2.StreamByteDistributor$Writer) -> distribute
io.netty.handler.codec.http2.StreamByteDistributor$StreamState -> io.netty.handler.codec.http2.StreamByteDistributor$StreamState:
    io.netty.handler.codec.http2.Http2Stream stream() -> stream
    int pendingBytes() -> pendingBytes
    boolean hasFrame() -> hasFrame
    int windowSize() -> windowSize
io.netty.handler.codec.http2.StreamByteDistributor$Writer -> io.netty.handler.codec.http2.StreamByteDistributor$Writer:
    void write(io.netty.handler.codec.http2.Http2Stream,int) -> write
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor -> io.netty.handler.codec.http2.WeightedFairQueueByteDistributor:
    int INITIAL_CHILDREN_MAP_SIZE -> INITIAL_CHILDREN_MAP_SIZE
    io.netty.handler.codec.http2.Http2Connection$PropertyKey stateKey -> stateKey
    io.netty.util.collection.IntObjectMap stateOnlyMap -> stateOnlyMap
    io.netty.util.internal.PriorityQueue stateOnlyRemovalQueue -> stateOnlyRemovalQueue
    io.netty.handler.codec.http2.Http2Connection connection -> connection
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State connectionState -> connectionState
    int allocationQuantum -> allocationQuantum
    int maxStateOnlySize -> maxStateOnlySize
    boolean $assertionsDisabled -> $assertionsDisabled
    95:96:void <init>(io.netty.handler.codec.http2.Http2Connection) -> <init>
    91:189:void <init>(io.netty.handler.codec.http2.Http2Connection,int) -> <init>
    193:195:void updateStreamableBytes(io.netty.handler.codec.http2.StreamByteDistributor$StreamState) -> updateStreamableBytes
    199:256:void updateDependencyTree(int,int,short,boolean) -> updateDependencyTree
    261:276:boolean distribute(int,io.netty.handler.codec.http2.StreamByteDistributor$Writer) -> distribute
    291:304:int distribute(int,io.netty.handler.codec.http2.StreamByteDistributor$Writer,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> distribute
    318:341:int distributeToChildren(int,io.netty.handler.codec.http2.StreamByteDistributor$Writer,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> distributeToChildren
    347:347:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State state(io.netty.handler.codec.http2.Http2Stream) -> state
    351:352:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State state(int) -> state
    385:393:void notifyParentChanged(java.util.List) -> notifyParentChanged
    58:58:io.netty.util.collection.IntObjectMap access$000(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> access$000
    58:58:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State access$100(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> access$100
    58:58:io.netty.util.internal.PriorityQueue access$200(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> access$200
    58:58:io.netty.handler.codec.http2.Http2Connection$PropertyKey access$300(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> access$300
    58:58:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State access$400(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor,io.netty.handler.codec.http2.Http2Stream) -> access$400
    58:58:int access$500(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> access$500
    57:68:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$1 -> io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$1:
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor this$0 -> this$0
    118:118:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> <init>
    121:143:void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    147:150:void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    154:155:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    162:187:void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$2 -> io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$2:
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State -> $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State
    132:132:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$ParentChangedEvent -> io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$ParentChangedEvent:
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State state -> state
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State oldParent -> oldParent
    798:801:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> <init>
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State -> io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State:
    io.netty.handler.codec.http2.Http2Stream stream -> stream
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State parent -> parent
    io.netty.util.collection.IntObjectMap children -> children
    io.netty.util.internal.PriorityQueue pseudoTimeQueue -> pseudoTimeQueue
    int streamId -> streamId
    int streamableBytes -> streamableBytes
    int dependencyTreeDepth -> dependencyTreeDepth
    int activeCountForTree -> activeCountForTree
    int pseudoTimeQueueIndex -> pseudoTimeQueueIndex
    int stateOnlyQueueIndex -> stateOnlyQueueIndex
    long pseudoTimeToWrite -> pseudoTimeToWrite
    long pseudoTime -> pseudoTime
    long totalQueuedWeights -> totalQueuedWeights
    byte flags -> flags
    short weight -> weight
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor this$0 -> this$0
    483:484:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor,int) -> <init>
    487:488:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor,io.netty.handler.codec.http2.Http2Stream) -> <init>
    491:492:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor,io.netty.handler.codec.http2.Http2Stream,int) -> <init>
    459:498:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor,int,io.netty.handler.codec.http2.Http2Stream,int) -> <init>
    501:508:boolean isDescendantOf(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> isDescendantOf
    512:513:void takeChild(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,boolean,java.util.List) -> takeChild
    521:550:void takeChild(java.util.Iterator,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,boolean,java.util.List) -> takeChild
    556:569:void removeChild(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> removeChild
    577:585:io.netty.util.collection.IntObjectMap removeAllChildrenExcept(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> removeAllChildrenExcept
    590:597:void setParent(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> setParent
    600:603:void initChildrenIfEmpty() -> initChildrenIfEmpty
    606:607:void initChildren() -> initChildren
    610:616:void write(int,io.netty.handler.codec.http2.StreamByteDistributor$Writer) -> write
    619:642:void activeCountChangeForTree(int) -> activeCountChangeForTree
    645:656:void updateStreamableBytes(int,boolean) -> updateStreamableBytes
    662:666:void updatePseudoTime(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,int,long) -> updatePseudoTime
    674:676:void offerAndInitializePseudoTime(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> offerAndInitializePseudoTime
    679:681:void offerPseudoTimeQueue(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> offerPseudoTimeQueue
    687:690:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State pollPseudoTimeQueue() -> pollPseudoTimeQueue
    694:697:void removePseudoTimeQueue(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> removePseudoTimeQueue
    700:700:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State peekPseudoTimeQueue() -> peekPseudoTimeQueue
    704:706:void close() -> close
    709:709:boolean wasStreamReservedOrActivated() -> wasStreamReservedOrActivated
    713:714:void setStreamReservedOrActivated() -> setStreamReservedOrActivated
    717:717:boolean isActive() -> isActive
    721:722:void setActive() -> setActive
    725:726:void unsetActive() -> unsetActive
    729:729:boolean isDistributing() -> isDistributing
    733:734:void setDistributing() -> setDistributing
    737:738:void unsetDistributing() -> unsetDistributing
    742:742:int priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue) -> priorityQueueIndex
    747:752:void priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue,int) -> priorityQueueIndex
    757:759:java.lang.String toString() -> toString
    763:783:void toString(java.lang.StringBuilder) -> toString
    449:449:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$StateOnlyComparator -> io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$StateOnlyComparator:
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$StateOnlyComparator INSTANCE -> INSTANCE
    408:409:void <init>() -> <init>
    414:428:int compare(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> compare
    403:403:int compare(java.lang.Object,java.lang.Object) -> compare
    406:406:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$StatePseudoTimeComparator -> io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$StatePseudoTimeComparator:
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$StatePseudoTimeComparator INSTANCE -> INSTANCE
    437:438:void <init>() -> <init>
    442:442:int compare(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> compare
    432:432:int compare(java.lang.Object,java.lang.Object) -> compare
    435:435:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.AbstractSocksMessage -> io.netty.handler.codec.socksx.AbstractSocksMessage:
    io.netty.handler.codec.DecoderResult decoderResult -> decoderResult
    24:26:void <init>() -> <init>
    30:30:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    35:39:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
io.netty.handler.codec.socksx.SocksMessage -> io.netty.handler.codec.socksx.SocksMessage:
    io.netty.handler.codec.socksx.SocksVersion version() -> version
io.netty.handler.codec.socksx.SocksVersion -> io.netty.handler.codec.socksx.SocksVersion:
    io.netty.handler.codec.socksx.SocksVersion SOCKS4a -> SOCKS4a
    io.netty.handler.codec.socksx.SocksVersion SOCKS5 -> SOCKS5
    io.netty.handler.codec.socksx.SocksVersion UNKNOWN -> UNKNOWN
    byte b -> b
    io.netty.handler.codec.socksx.SocksVersion[] $VALUES -> $VALUES
    22:22:io.netty.handler.codec.socksx.SocksVersion[] values() -> values
    22:22:io.netty.handler.codec.socksx.SocksVersion valueOf(java.lang.String) -> valueOf
    54:56:void <init>(java.lang.String,int,byte) -> <init>
    62:62:byte byteValue() -> byteValue
    22:34:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.AbstractSocks4Message -> io.netty.handler.codec.socksx.v4.AbstractSocks4Message:
    25:25:void <init>() -> <init>
    28:28:io.netty.handler.codec.socksx.SocksVersion version() -> version
io.netty.handler.codec.socksx.v4.DefaultSocks4CommandRequest -> io.netty.handler.codec.socksx.v4.DefaultSocks4CommandRequest:
    io.netty.handler.codec.socksx.v4.Socks4CommandType type -> type
    java.lang.String dstAddr -> dstAddr
    int dstPort -> dstPort
    java.lang.String userId -> userId
    52:70:void <init>(io.netty.handler.codec.socksx.v4.Socks4CommandType,java.lang.String,int,java.lang.String) -> <init>
    74:74:io.netty.handler.codec.socksx.v4.Socks4CommandType type() -> type
    79:79:java.lang.String dstAddr() -> dstAddr
    84:84:int dstPort() -> dstPort
    89:89:java.lang.String userId() -> userId
    94:114:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v4.DefaultSocks4CommandResponse -> io.netty.handler.codec.socksx.v4.DefaultSocks4CommandResponse:
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus status -> status
    java.lang.String dstAddr -> dstAddr
    int dstPort -> dstPort
    37:38:void <init>(io.netty.handler.codec.socksx.v4.Socks4CommandStatus) -> <init>
    47:64:void <init>(io.netty.handler.codec.socksx.v4.Socks4CommandStatus,java.lang.String,int) -> <init>
    68:68:io.netty.handler.codec.socksx.v4.Socks4CommandStatus status() -> status
    73:73:java.lang.String dstAddr() -> dstAddr
    78:78:int dstPort() -> dstPort
    83:99:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder -> io.netty.handler.codec.socksx.v4.Socks4ClientDecoder:
    43:45:void <init>() -> <init>
    50:79:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    82:91:void fail(java.util.List,java.lang.Exception) -> fail
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$1 -> io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$socksx$v4$Socks4ClientDecoder$State -> $SwitchMap$io$netty$handler$codec$socksx$v4$Socks4ClientDecoder$State
    50:50:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State -> io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State:
    io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State START -> START
    io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State SUCCESS -> SUCCESS
    io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State FAILURE -> FAILURE
    io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State[] $VALUES -> $VALUES
    36:36:io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State[] values() -> values
    36:36:io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State valueOf(java.lang.String) -> valueOf
    36:36:void <init>(java.lang.String,int) -> <init>
    36:39:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.Socks4ClientEncoder -> io.netty.handler.codec.socksx.v4.Socks4ClientEncoder:
    io.netty.handler.codec.socksx.v4.Socks4ClientEncoder INSTANCE -> INSTANCE
    byte[] IPv4_DOMAIN_MARKER -> IPv4_DOMAIN_MARKER
    39:39:void <init>() -> <init>
    43:57:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.socksx.v4.Socks4CommandRequest,io.netty.buffer.ByteBuf) -> encode
    29:29:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf) -> encode
    35:37:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.Socks4CommandRequest -> io.netty.handler.codec.socksx.v4.Socks4CommandRequest:
    io.netty.handler.codec.socksx.v4.Socks4CommandType type() -> type
    java.lang.String userId() -> userId
    java.lang.String dstAddr() -> dstAddr
    int dstPort() -> dstPort
io.netty.handler.codec.socksx.v4.Socks4CommandResponse -> io.netty.handler.codec.socksx.v4.Socks4CommandResponse:
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus status() -> status
io.netty.handler.codec.socksx.v4.Socks4CommandStatus -> io.netty.handler.codec.socksx.v4.Socks4CommandStatus:
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus SUCCESS -> SUCCESS
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus REJECTED_OR_FAILED -> REJECTED_OR_FAILED
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus IDENTD_UNREACHABLE -> IDENTD_UNREACHABLE
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus IDENTD_AUTH_FAILURE -> IDENTD_AUTH_FAILURE
    byte byteValue -> byteValue
    java.lang.String name -> name
    java.lang.String text -> text
    29:40:io.netty.handler.codec.socksx.v4.Socks4CommandStatus valueOf(byte) -> valueOf
    48:49:void <init>(int) -> <init>
    51:58:void <init>(int,java.lang.String) -> <init>
    70:70:int hashCode() -> hashCode
    75:79:boolean equals(java.lang.Object) -> equals
    84:84:int compareTo(io.netty.handler.codec.socksx.v4.Socks4CommandStatus) -> compareTo
    89:93:java.lang.String toString() -> toString
    21:21:int compareTo(java.lang.Object) -> compareTo
    23:26:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.Socks4CommandType -> io.netty.handler.codec.socksx.v4.Socks4CommandType:
    io.netty.handler.codec.socksx.v4.Socks4CommandType CONNECT -> CONNECT
    io.netty.handler.codec.socksx.v4.Socks4CommandType BIND -> BIND
    byte byteValue -> byteValue
    java.lang.String name -> name
    java.lang.String text -> text
    45:51:void <init>(int,java.lang.String) -> <init>
    54:54:byte byteValue() -> byteValue
    59:59:int hashCode() -> hashCode
    64:68:boolean equals(java.lang.Object) -> equals
    73:73:int compareTo(io.netty.handler.codec.socksx.v4.Socks4CommandType) -> compareTo
    78:82:java.lang.String toString() -> toString
    21:21:int compareTo(java.lang.Object) -> compareTo
    23:24:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.Socks4Message -> io.netty.handler.codec.socksx.v4.Socks4Message:
io.netty.handler.codec.socksx.v5.AbstractSocks5Message -> io.netty.handler.codec.socksx.v5.AbstractSocks5Message:
    25:25:void <init>() -> <init>
    28:28:io.netty.handler.codec.socksx.SocksVersion version() -> version
io.netty.handler.codec.socksx.v5.DefaultSocks5CommandRequest -> io.netty.handler.codec.socksx.v5.DefaultSocks5CommandRequest:
    io.netty.handler.codec.socksx.v5.Socks5CommandType type -> type
    io.netty.handler.codec.socksx.v5.Socks5AddressType dstAddrType -> dstAddrType
    java.lang.String dstAddr -> dstAddr
    int dstPort -> dstPort
    35:70:void <init>(io.netty.handler.codec.socksx.v5.Socks5CommandType,io.netty.handler.codec.socksx.v5.Socks5AddressType,java.lang.String,int) -> <init>
    74:74:io.netty.handler.codec.socksx.v5.Socks5CommandType type() -> type
    79:79:io.netty.handler.codec.socksx.v5.Socks5AddressType dstAddrType() -> dstAddrType
    84:84:java.lang.String dstAddr() -> dstAddr
    89:89:int dstPort() -> dstPort
    94:114:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.DefaultSocks5CommandResponse -> io.netty.handler.codec.socksx.v5.DefaultSocks5CommandResponse:
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus status -> status
    io.netty.handler.codec.socksx.v5.Socks5AddressType bndAddrType -> bndAddrType
    java.lang.String bndAddr -> bndAddr
    int bndPort -> bndPort
    39:71:void <init>(io.netty.handler.codec.socksx.v5.Socks5CommandStatus,io.netty.handler.codec.socksx.v5.Socks5AddressType,java.lang.String,int) -> <init>
    75:75:io.netty.handler.codec.socksx.v5.Socks5CommandStatus status() -> status
    80:80:io.netty.handler.codec.socksx.v5.Socks5AddressType bndAddrType() -> bndAddrType
    85:85:java.lang.String bndAddr() -> bndAddr
    90:90:int bndPort() -> bndPort
    95:115:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.DefaultSocks5InitialRequest -> io.netty.handler.codec.socksx.v5.DefaultSocks5InitialRequest:
    java.util.List authMethods -> authMethods
    52:70:void <init>(java.lang.Iterable) -> <init>
    74:74:java.util.List authMethods() -> authMethods
    79:92:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.DefaultSocks5InitialResponse -> io.netty.handler.codec.socksx.v5.DefaultSocks5InitialResponse:
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod authMethod -> authMethod
    28:33:void <init>(io.netty.handler.codec.socksx.v5.Socks5AuthMethod) -> <init>
    37:37:io.netty.handler.codec.socksx.v5.Socks5AuthMethod authMethod() -> authMethod
    42:55:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.DefaultSocks5PasswordAuthRequest -> io.netty.handler.codec.socksx.v5.DefaultSocks5PasswordAuthRequest:
    java.lang.String username -> username
    java.lang.String password -> password
    29:46:void <init>(java.lang.String,java.lang.String) -> <init>
    50:50:java.lang.String username() -> username
    55:55:java.lang.String password() -> password
    60:73:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.DefaultSocks5PasswordAuthResponse -> io.netty.handler.codec.socksx.v5.DefaultSocks5PasswordAuthResponse:
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus status -> status
    28:34:void <init>(io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus) -> <init>
    38:38:io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus status() -> status
    43:56:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.Socks5AddressDecoder -> io.netty.handler.codec.socksx.v5.Socks5AddressDecoder:
    io.netty.handler.codec.socksx.v5.Socks5AddressDecoder DEFAULT -> DEFAULT
    java.lang.String decodeAddress(io.netty.handler.codec.socksx.v5.Socks5AddressType,io.netty.buffer.ByteBuf) -> decodeAddress
    32:32:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5AddressDecoder$1 -> io.netty.handler.codec.socksx.v5.Socks5AddressDecoder$1:
    32:32:void <init>() -> <init>
    38:58:java.lang.String decodeAddress(io.netty.handler.codec.socksx.v5.Socks5AddressType,io.netty.buffer.ByteBuf) -> decodeAddress
io.netty.handler.codec.socksx.v5.Socks5AddressEncoder -> io.netty.handler.codec.socksx.v5.Socks5AddressEncoder:
    io.netty.handler.codec.socksx.v5.Socks5AddressEncoder DEFAULT -> DEFAULT
    void encodeAddress(io.netty.handler.codec.socksx.v5.Socks5AddressType,java.lang.String,io.netty.buffer.ByteBuf) -> encodeAddress
    32:32:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5AddressEncoder$1 -> io.netty.handler.codec.socksx.v5.Socks5AddressEncoder$1:
    32:32:void <init>() -> <init>
    35:60:void encodeAddress(io.netty.handler.codec.socksx.v5.Socks5AddressType,java.lang.String,io.netty.buffer.ByteBuf) -> encodeAddress
io.netty.handler.codec.socksx.v5.Socks5AddressType -> io.netty.handler.codec.socksx.v5.Socks5AddressType:
    io.netty.handler.codec.socksx.v5.Socks5AddressType IPv4 -> IPv4
    io.netty.handler.codec.socksx.v5.Socks5AddressType DOMAIN -> DOMAIN
    io.netty.handler.codec.socksx.v5.Socks5AddressType IPv6 -> IPv6
    byte byteValue -> byteValue
    java.lang.String name -> name
    java.lang.String text -> text
    29:38:io.netty.handler.codec.socksx.v5.Socks5AddressType valueOf(byte) -> valueOf
    46:47:void <init>(int) -> <init>
    49:56:void <init>(int,java.lang.String) -> <init>
    59:59:byte byteValue() -> byteValue
    64:64:int hashCode() -> hashCode
    69:73:boolean equals(java.lang.Object) -> equals
    78:78:int compareTo(io.netty.handler.codec.socksx.v5.Socks5AddressType) -> compareTo
    83:87:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
    24:26:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5AuthMethod -> io.netty.handler.codec.socksx.v5.Socks5AuthMethod:
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod NO_AUTH -> NO_AUTH
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod GSSAPI -> GSSAPI
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod PASSWORD -> PASSWORD
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod UNACCEPTED -> UNACCEPTED
    byte byteValue -> byteValue
    java.lang.String name -> name
    java.lang.String text -> text
    34:45:io.netty.handler.codec.socksx.v5.Socks5AuthMethod valueOf(byte) -> valueOf
    53:54:void <init>(int) -> <init>
    56:63:void <init>(int,java.lang.String) -> <init>
    66:66:byte byteValue() -> byteValue
    71:71:int hashCode() -> hashCode
    76:80:boolean equals(java.lang.Object) -> equals
    85:85:int compareTo(io.netty.handler.codec.socksx.v5.Socks5AuthMethod) -> compareTo
    90:94:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
    24:31:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5ClientEncoder -> io.netty.handler.codec.socksx.v5.Socks5ClientEncoder:
    io.netty.handler.codec.socksx.v5.Socks5ClientEncoder DEFAULT -> DEFAULT
    io.netty.handler.codec.socksx.v5.Socks5AddressEncoder addressEncoder -> addressEncoder
    44:45:void <init>() -> <init>
    50:56:void <init>(io.netty.handler.codec.socksx.v5.Socks5AddressEncoder) -> <init>
    67:76:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.socksx.v5.Socks5Message,io.netty.buffer.ByteBuf) -> encode
    79:94:void encodeAuthMethodRequest(io.netty.handler.codec.socksx.v5.Socks5InitialRequest,io.netty.buffer.ByteBuf) -> encodeAuthMethodRequest
    97:106:void encodePasswordAuthRequest(io.netty.handler.codec.socksx.v5.Socks5PasswordAuthRequest,io.netty.buffer.ByteBuf) -> encodePasswordAuthRequest
    109:117:void encodeCommandRequest(io.netty.handler.codec.socksx.v5.Socks5CommandRequest,io.netty.buffer.ByteBuf) -> encodeCommandRequest
    33:33:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf) -> encode
    36:36:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5CommandRequest -> io.netty.handler.codec.socksx.v5.Socks5CommandRequest:
    io.netty.handler.codec.socksx.v5.Socks5CommandType type() -> type
    io.netty.handler.codec.socksx.v5.Socks5AddressType dstAddrType() -> dstAddrType
    java.lang.String dstAddr() -> dstAddr
    int dstPort() -> dstPort
io.netty.handler.codec.socksx.v5.Socks5CommandResponse -> io.netty.handler.codec.socksx.v5.Socks5CommandResponse:
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus status() -> status
io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder -> io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder:
    io.netty.handler.codec.socksx.v5.Socks5AddressDecoder addressDecoder -> addressDecoder
    46:47:void <init>() -> <init>
    50:56:void <init>(io.netty.handler.codec.socksx.v5.Socks5AddressDecoder) -> <init>
    61:92:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    95:105:void fail(java.util.List,java.lang.Exception) -> fail
io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$1 -> io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$socksx$v5$Socks5CommandResponseDecoder$State -> $SwitchMap$io$netty$handler$codec$socksx$v5$Socks5CommandResponseDecoder$State
    61:61:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State -> io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State:
    io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State INIT -> INIT
    io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State SUCCESS -> SUCCESS
    io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State FAILURE -> FAILURE
    io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State[] $VALUES -> $VALUES
    37:37:io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State[] values() -> values
    37:37:io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State valueOf(java.lang.String) -> valueOf
    37:37:void <init>(java.lang.String,int) -> <init>
    37:40:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5CommandStatus -> io.netty.handler.codec.socksx.v5.Socks5CommandStatus:
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus SUCCESS -> SUCCESS
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus FAILURE -> FAILURE
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus FORBIDDEN -> FORBIDDEN
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus NETWORK_UNREACHABLE -> NETWORK_UNREACHABLE
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus HOST_UNREACHABLE -> HOST_UNREACHABLE
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus CONNECTION_REFUSED -> CONNECTION_REFUSED
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus TTL_EXPIRED -> TTL_EXPIRED
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus COMMAND_UNSUPPORTED -> COMMAND_UNSUPPORTED
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus ADDRESS_UNSUPPORTED -> ADDRESS_UNSUPPORTED
    byte byteValue -> byteValue
    java.lang.String name -> name
    java.lang.String text -> text
    35:56:io.netty.handler.codec.socksx.v5.Socks5CommandStatus valueOf(byte) -> valueOf
    64:65:void <init>(int) -> <init>
    67:74:void <init>(int,java.lang.String) -> <init>
    86:86:int hashCode() -> hashCode
    91:95:boolean equals(java.lang.Object) -> equals
    100:100:int compareTo(io.netty.handler.codec.socksx.v5.Socks5CommandStatus) -> compareTo
    105:109:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
    24:32:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5CommandType -> io.netty.handler.codec.socksx.v5.Socks5CommandType:
    io.netty.handler.codec.socksx.v5.Socks5CommandType CONNECT -> CONNECT
    io.netty.handler.codec.socksx.v5.Socks5CommandType BIND -> BIND
    io.netty.handler.codec.socksx.v5.Socks5CommandType UDP_ASSOCIATE -> UDP_ASSOCIATE
    byte byteValue -> byteValue
    java.lang.String name -> name
    java.lang.String text -> text
    49:56:void <init>(int,java.lang.String) -> <init>
    59:59:byte byteValue() -> byteValue
    64:64:int hashCode() -> hashCode
    69:73:boolean equals(java.lang.Object) -> equals
    78:78:int compareTo(io.netty.handler.codec.socksx.v5.Socks5CommandType) -> compareTo
    83:87:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
    24:26:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5InitialRequest -> io.netty.handler.codec.socksx.v5.Socks5InitialRequest:
    java.util.List authMethods() -> authMethods
io.netty.handler.codec.socksx.v5.Socks5InitialResponse -> io.netty.handler.codec.socksx.v5.Socks5InitialResponse:
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod authMethod() -> authMethod
io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder -> io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder:
    44:45:void <init>() -> <init>
    50:77:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    80:89:void fail(java.util.List,java.lang.Exception) -> fail
io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$1 -> io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$socksx$v5$Socks5InitialResponseDecoder$State -> $SwitchMap$io$netty$handler$codec$socksx$v5$Socks5InitialResponseDecoder$State
    50:50:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State -> io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State:
    io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State INIT -> INIT
    io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State SUCCESS -> SUCCESS
    io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State FAILURE -> FAILURE
    io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State[] $VALUES -> $VALUES
    37:37:io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State[] values() -> values
    37:37:io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State valueOf(java.lang.String) -> valueOf
    37:37:void <init>(java.lang.String,int) -> <init>
    37:40:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5Message -> io.netty.handler.codec.socksx.v5.Socks5Message:
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthRequest -> io.netty.handler.codec.socksx.v5.Socks5PasswordAuthRequest:
    java.lang.String username() -> username
    java.lang.String password() -> password
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponse -> io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponse:
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus status() -> status
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder -> io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder:
    43:44:void <init>() -> <init>
    49:74:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    77:86:void fail(java.util.List,java.lang.Exception) -> fail
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$1 -> io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$socksx$v5$Socks5PasswordAuthResponseDecoder$State -> $SwitchMap$io$netty$handler$codec$socksx$v5$Socks5PasswordAuthResponseDecoder$State
    49:49:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State -> io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State:
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State INIT -> INIT
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State SUCCESS -> SUCCESS
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State FAILURE -> FAILURE
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State[] $VALUES -> $VALUES
    36:36:io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State[] values() -> values
    36:36:io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State valueOf(java.lang.String) -> valueOf
    36:36:void <init>(java.lang.String,int) -> <init>
    36:39:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus -> io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus:
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus SUCCESS -> SUCCESS
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus FAILURE -> FAILURE
    byte byteValue -> byteValue
    java.lang.String name -> name
    java.lang.String text -> text
    28:35:io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus valueOf(byte) -> valueOf
    43:44:void <init>(int) -> <init>
    46:53:void <init>(int,java.lang.String) -> <init>
    65:65:int hashCode() -> hashCode
    70:74:boolean equals(java.lang.Object) -> equals
    79:79:int compareTo(io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus) -> compareTo
    84:88:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
    24:25:void <clinit>() -> <clinit>
io.netty.handler.logging.LogLevel -> io.netty.handler.logging.LogLevel:
    io.netty.handler.logging.LogLevel TRACE -> TRACE
    io.netty.handler.logging.LogLevel DEBUG -> DEBUG
    io.netty.handler.logging.LogLevel INFO -> INFO
    io.netty.handler.logging.LogLevel WARN -> WARN
    io.netty.handler.logging.LogLevel ERROR -> ERROR
    io.netty.util.internal.logging.InternalLogLevel internalLevel -> internalLevel
    io.netty.handler.logging.LogLevel[] $VALUES -> $VALUES
    23:23:io.netty.handler.logging.LogLevel[] values() -> values
    23:23:io.netty.handler.logging.LogLevel valueOf(java.lang.String) -> valueOf
    32:34:void <init>(java.lang.String,int,io.netty.util.internal.logging.InternalLogLevel) -> <init>
    44:44:io.netty.util.internal.logging.InternalLogLevel toInternalLevel() -> toInternalLevel
    23:28:void <clinit>() -> <clinit>
io.netty.handler.logging.LoggingHandler -> io.netty.handler.logging.LoggingHandler:
    io.netty.handler.logging.LogLevel DEFAULT_LEVEL -> DEFAULT_LEVEL
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.internal.logging.InternalLogLevel internalLevel -> internalLevel
    io.netty.handler.logging.LogLevel level -> level
    55:56:void <init>() -> <init>
    64:72:void <init>(io.netty.handler.logging.LogLevel) -> <init>
    140:144:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    148:152:void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    156:160:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    164:168:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    172:176:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    180:184:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    188:192:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    198:202:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    206:210:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    214:218:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    222:226:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    230:234:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    238:242:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    246:250:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    254:258:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    262:266:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    274:279:java.lang.String format(io.netty.channel.ChannelHandlerContext,java.lang.String) -> format
    289:294:java.lang.String format(io.netty.channel.ChannelHandlerContext,java.lang.String,java.lang.Object) -> format
    307:317:java.lang.String format(io.netty.channel.ChannelHandlerContext,java.lang.String,java.lang.Object,java.lang.Object) -> format
    324:337:java.lang.String formatByteBuf(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.buffer.ByteBuf) -> formatByteBuf
    345:362:java.lang.String formatByteBufHolder(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.buffer.ByteBufHolder) -> formatByteBufHolder
    370:373:java.lang.String formatSimple(io.netty.channel.ChannelHandlerContext,java.lang.String,java.lang.Object) -> formatSimple
    43:43:void <clinit>() -> <clinit>
io.netty.handler.proxy.HttpProxyHandler -> io.netty.handler.proxy.HttpProxyHandler:
    io.netty.handler.codec.http.HttpClientCodec codec -> codec
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.CharSequence authorization -> authorization
    io.netty.handler.codec.http.HttpResponseStatus status -> status
    io.netty.handler.codec.http.HttpHeaders headers -> headers
    54:55:void <init>(java.net.SocketAddress) -> <init>
    46:63:void <init>(java.net.SocketAddress,io.netty.handler.codec.http.HttpHeaders) -> <init>
    66:67:void <init>(java.net.SocketAddress,java.lang.String,java.lang.String) -> <init>
    46:90:void <init>(java.net.SocketAddress,java.lang.String,java.lang.String,io.netty.handler.codec.http.HttpHeaders) -> <init>
    94:94:java.lang.String protocol() -> protocol
    99:99:java.lang.String authScheme() -> authScheme
    112:115:void addCodec(io.netty.channel.ChannelHandlerContext) -> addCodec
    119:120:void removeEncoder(io.netty.channel.ChannelHandlerContext) -> removeEncoder
    124:125:void removeDecoder(io.netty.channel.ChannelHandlerContext) -> removeDecoder
    129:146:java.lang.Object newInitialMessage(io.netty.channel.ChannelHandlerContext) -> newInitialMessage
    151:168:boolean handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleResponse
io.netty.handler.proxy.ProxyConnectException -> io.netty.handler.proxy.ProxyConnectException:
    24:24:void <init>() -> <init>
    27:28:void <init>(java.lang.String) -> <init>
    35:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.netty.handler.proxy.ProxyConnectionEvent -> io.netty.handler.proxy.ProxyConnectionEvent:
    java.lang.String protocol -> protocol
    java.lang.String authScheme -> authScheme
    java.net.SocketAddress proxyAddress -> proxyAddress
    java.net.SocketAddress destinationAddress -> destinationAddress
    java.lang.String strVal -> strVal
    35:53:void <init>(java.lang.String,java.lang.String,java.net.SocketAddress,java.net.SocketAddress) -> <init>
    87:103:java.lang.String toString() -> toString
io.netty.handler.proxy.ProxyHandler -> io.netty.handler.proxy.ProxyHandler:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.net.SocketAddress proxyAddress -> proxyAddress
    java.net.SocketAddress destinationAddress -> destinationAddress
    long connectTimeoutMillis -> connectTimeoutMillis
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    io.netty.channel.PendingWriteQueue pendingWrites -> pendingWrites
    boolean finished -> finished
    boolean suppressChannelReadComplete -> suppressChannelReadComplete
    boolean flushedPrematurely -> flushedPrematurely
    io.netty.handler.proxy.ProxyHandler$LazyChannelPromise connectPromise -> connectPromise
    io.netty.util.concurrent.ScheduledFuture connectTimeoutFuture -> connectTimeoutFuture
    io.netty.channel.ChannelFutureListener writeListener -> writeListener
    54:77:void <init>(java.net.SocketAddress) -> <init>
    java.lang.String protocol() -> protocol
    java.lang.String authScheme() -> authScheme
    102:102:java.net.SocketAddress destinationAddress() -> destinationAddress
    142:153:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    void addCodec(io.netty.channel.ChannelHandlerContext) -> addCodec
    void removeEncoder(io.netty.channel.ChannelHandlerContext) -> removeEncoder
    void removeDecoder(io.netty.channel.ChannelHandlerContext) -> removeDecoder
    175:182:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    186:188:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    195:213:void sendInitialMessage(io.netty.channel.ChannelHandlerContext) -> sendInitialMessage
    java.lang.Object newInitialMessage(io.netty.channel.ChannelHandlerContext) -> newInitialMessage
    227:228:void sendToProxyServer(java.lang.Object) -> sendToProxyServer
    232:238:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    242:248:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    252:273:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    boolean handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleResponse
    285:312:void setConnectSuccess() -> setConnectSuccess
    316:322:boolean safeRemoveDecoder() -> safeRemoveDecoder
    327:333:boolean safeRemoveEncoder() -> safeRemoveEncoder
    337:351:void setConnectFailure(java.lang.Throwable) -> setConnectFailure
    354:358:void failPendingWritesAndClose(java.lang.Throwable) -> failPendingWritesAndClose
    361:365:void cancelConnectTimeoutFuture() -> cancelConnectTimeoutFuture
    372:388:java.lang.String exceptionMessage(java.lang.String) -> exceptionMessage
    393:400:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    404:410:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    414:420:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    423:426:void readIfNeeded(io.netty.channel.ChannelHandlerContext) -> readIfNeeded
    429:433:void writePendingWrites() -> writePendingWrites
    436:440:void failPendingWrites(java.lang.Throwable) -> failPendingWrites
    443:448:void addPendingWrite(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> addPendingWrite
    38:38:void access$100(io.netty.handler.proxy.ProxyHandler,java.lang.Throwable) -> access$100
    38:38:io.netty.handler.proxy.ProxyHandler$LazyChannelPromise access$200(io.netty.handler.proxy.ProxyHandler) -> access$200
    38:38:io.netty.channel.ChannelHandlerContext access$300(io.netty.handler.proxy.ProxyHandler) -> access$300
    40:40:void <clinit>() -> <clinit>
io.netty.handler.proxy.ProxyHandler$1 -> io.netty.handler.proxy.ProxyHandler$1:
    io.netty.handler.proxy.ProxyHandler this$0 -> this$0
    63:63:void <init>(io.netty.handler.proxy.ProxyHandler) -> <init>
    66:69:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    63:63:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.proxy.ProxyHandler$2 -> io.netty.handler.proxy.ProxyHandler$2:
    io.netty.handler.proxy.ProxyHandler this$0 -> this$0
    197:197:void <init>(io.netty.handler.proxy.ProxyHandler) -> <init>
    200:203:void run() -> run
io.netty.handler.proxy.ProxyHandler$LazyChannelPromise -> io.netty.handler.proxy.ProxyHandler$LazyChannelPromise:
    io.netty.handler.proxy.ProxyHandler this$0 -> this$0
    450:450:void <init>(io.netty.handler.proxy.ProxyHandler) -> <init>
    453:456:io.netty.util.concurrent.EventExecutor executor() -> executor
    450:450:void <init>(io.netty.handler.proxy.ProxyHandler,io.netty.handler.proxy.ProxyHandler$1) -> <init>
io.netty.handler.proxy.Socks4ProxyHandler -> io.netty.handler.proxy.Socks4ProxyHandler:
    java.lang.String username -> username
    java.lang.String decoderName -> decoderName
    java.lang.String encoderName -> encoderName
    42:43:void <init>(java.net.SocketAddress) -> <init>
    46:51:void <init>(java.net.SocketAddress,java.lang.String) -> <init>
    55:55:java.lang.String protocol() -> protocol
    60:60:java.lang.String authScheme() -> authScheme
    69:79:void addCodec(io.netty.channel.ChannelHandlerContext) -> addCodec
    83:85:void removeEncoder(io.netty.channel.ChannelHandlerContext) -> removeEncoder
    89:91:void removeDecoder(io.netty.channel.ChannelHandlerContext) -> removeDecoder
    95:103:java.lang.Object newInitialMessage(io.netty.channel.ChannelHandlerContext) -> newInitialMessage
    108:114:boolean handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleResponse
io.netty.handler.proxy.Socks5ProxyHandler -> io.netty.handler.proxy.Socks5ProxyHandler:
    io.netty.handler.codec.socksx.v5.Socks5InitialRequest INIT_REQUEST_NO_AUTH -> INIT_REQUEST_NO_AUTH
    io.netty.handler.codec.socksx.v5.Socks5InitialRequest INIT_REQUEST_PASSWORD -> INIT_REQUEST_PASSWORD
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String decoderName -> decoderName
    java.lang.String encoderName -> encoderName
    63:64:void <init>(java.net.SocketAddress) -> <init>
    67:76:void <init>(java.net.SocketAddress,java.lang.String,java.lang.String) -> <init>
    80:80:java.lang.String protocol() -> protocol
    85:85:java.lang.String authScheme() -> authScheme
    98:108:void addCodec(io.netty.channel.ChannelHandlerContext) -> addCodec
    112:113:void removeEncoder(io.netty.channel.ChannelHandlerContext) -> removeEncoder
    117:121:void removeDecoder(io.netty.channel.ChannelHandlerContext) -> removeDecoder
    125:125:java.lang.Object newInitialMessage(io.netty.channel.ChannelHandlerContext) -> newInitialMessage
    130:171:boolean handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleResponse
    176:181:io.netty.handler.codec.socksx.v5.Socks5AuthMethod socksAuthMethod() -> socksAuthMethod
    185:205:void sendConnectCommand(io.netty.channel.ChannelHandlerContext) -> sendConnectCommand
    50:54:void <clinit>() -> <clinit>
io.netty.handler.ssl.AbstractSniHandler -> io.netty.handler.ssl.AbstractSniHandler:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    boolean handshakeFailed -> handshakeFailed
    boolean suppressRead -> suppressRead
    boolean readPending -> readPending
    43:43:void <init>() -> <init>
    57:223:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    226:256:void select(io.netty.channel.ChannelHandlerContext,java.lang.String) -> select
    259:265:void fireSniCompletionEvent(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.util.concurrent.Future) -> fireSniCompletionEvent
    io.netty.util.concurrent.Future lookup(io.netty.channel.ChannelHandlerContext,java.lang.String) -> lookup
    void onLookupComplete(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.util.concurrent.Future) -> onLookupComplete
    285:290:void read(io.netty.channel.ChannelHandlerContext) -> read
    294:295:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    300:301:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    305:306:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    310:311:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    315:316:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    320:321:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    325:326:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    43:43:boolean access$002(io.netty.handler.ssl.AbstractSniHandler,boolean) -> access$002
    43:43:void access$100(io.netty.handler.ssl.AbstractSniHandler,io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.util.concurrent.Future) -> access$100
    43:43:boolean access$200(io.netty.handler.ssl.AbstractSniHandler) -> access$200
    43:43:boolean access$202(io.netty.handler.ssl.AbstractSniHandler,boolean) -> access$202
    48:49:void <clinit>() -> <clinit>
io.netty.handler.ssl.AbstractSniHandler$1 -> io.netty.handler.ssl.AbstractSniHandler$1:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    java.lang.String val$hostname -> val$hostname
    io.netty.handler.ssl.AbstractSniHandler this$0 -> this$0
    232:232:void <init>(io.netty.handler.ssl.AbstractSniHandler,io.netty.channel.ChannelHandlerContext,java.lang.String) -> <init>
    236:253:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.ssl.ApplicationProtocolAccessor -> io.netty.handler.ssl.ApplicationProtocolAccessor:
    java.lang.String getNegotiatedApplicationProtocol() -> getNegotiatedApplicationProtocol
io.netty.handler.ssl.ApplicationProtocolConfig -> io.netty.handler.ssl.ApplicationProtocolConfig:
    io.netty.handler.ssl.ApplicationProtocolConfig DISABLED -> DISABLED
    java.util.List supportedProtocols -> supportedProtocols
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol -> protocol
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorBehavior -> selectorBehavior
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedBehavior -> selectedBehavior
    50:51:void <init>(io.netty.handler.ssl.ApplicationProtocolConfig$Protocol,io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior,io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior,java.lang.Iterable) -> <init>
    74:86:void <init>(io.netty.handler.ssl.ApplicationProtocolConfig$Protocol,io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior,io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior,java.util.List) -> <init>
    91:96:void <init>() -> <init>
    162:162:java.util.List supportedProtocols() -> supportedProtocols
    169:169:io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> protocol
    176:176:io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> selectorFailureBehavior
    183:183:io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> selectedListenerFailureBehavior
    34:34:void <clinit>() -> <clinit>
io.netty.handler.ssl.ApplicationProtocolConfig$Protocol -> io.netty.handler.ssl.ApplicationProtocolConfig$Protocol:
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol NONE -> NONE
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol NPN -> NPN
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol ALPN -> ALPN
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol NPN_AND_ALPN -> NPN_AND_ALPN
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol[] $VALUES -> $VALUES
    101:101:io.netty.handler.ssl.ApplicationProtocolConfig$Protocol[] values() -> values
    101:101:io.netty.handler.ssl.ApplicationProtocolConfig$Protocol valueOf(java.lang.String) -> valueOf
    101:101:void <init>(java.lang.String,int) -> <init>
    101:102:void <clinit>() -> <clinit>
io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior -> io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior:
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior ACCEPT -> ACCEPT
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior FATAL_ALERT -> FATAL_ALERT
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior CHOOSE_MY_LAST_PROTOCOL -> CHOOSE_MY_LAST_PROTOCOL
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior[] $VALUES -> $VALUES
    137:137:io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior[] values() -> values
    137:137:io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior valueOf(java.lang.String) -> valueOf
    137:137:void <init>(java.lang.String,int) -> <init>
    137:155:void <clinit>() -> <clinit>
io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior -> io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior:
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior FATAL_ALERT -> FATAL_ALERT
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior NO_ADVERTISE -> NO_ADVERTISE
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior CHOOSE_MY_LAST_PROTOCOL -> CHOOSE_MY_LAST_PROTOCOL
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior[] $VALUES -> $VALUES
    108:108:io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior[] values() -> values
    108:108:io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior valueOf(java.lang.String) -> valueOf
    108:108:void <init>(java.lang.String,int) -> <init>
    108:131:void <clinit>() -> <clinit>
io.netty.handler.ssl.ApplicationProtocolNegotiator -> io.netty.handler.ssl.ApplicationProtocolNegotiator:
    java.util.List protocols() -> protocols
io.netty.handler.ssl.ApplicationProtocolUtil -> io.netty.handler.ssl.ApplicationProtocolUtil:
    31:31:java.util.List toList(java.lang.Iterable) -> toList
    35:51:java.util.List toList(int,java.lang.Iterable) -> toList
io.netty.handler.ssl.CipherSuiteConverter -> io.netty.handler.ssl.CipherSuiteConverter:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.regex.Pattern JAVA_CIPHERSUITE_PATTERN -> JAVA_CIPHERSUITE_PATTERN
    java.util.regex.Pattern OPENSSL_CIPHERSUITE_PATTERN -> OPENSSL_CIPHERSUITE_PATTERN
    java.util.regex.Pattern JAVA_AES_CBC_PATTERN -> JAVA_AES_CBC_PATTERN
    java.util.regex.Pattern JAVA_AES_PATTERN -> JAVA_AES_PATTERN
    java.util.regex.Pattern OPENSSL_AES_CBC_PATTERN -> OPENSSL_AES_CBC_PATTERN
    java.util.regex.Pattern OPENSSL_AES_PATTERN -> OPENSSL_AES_PATTERN
    java.util.concurrent.ConcurrentMap j2o -> j2o
    java.util.concurrent.ConcurrentMap o2j -> o2j
    129:148:java.lang.String toOpenSsl(java.lang.Iterable) -> toOpenSsl
    158:162:java.lang.String toOpenSsl(java.lang.String) -> toOpenSsl
    167:185:java.lang.String cacheFromJava(java.lang.String) -> cacheFromJava
    189:202:java.lang.String toOpenSslUncached(java.lang.String) -> toOpenSslUncached
    207:226:java.lang.String toOpenSslHandshakeAlgo(java.lang.String) -> toOpenSslHandshakeAlgo
    230:258:java.lang.String toOpenSslBulkCipher(java.lang.String) -> toOpenSslBulkCipher
    268:268:java.lang.String toOpenSslHmacAlgo(java.lang.String) -> toOpenSslHmacAlgo
    278:293:java.lang.String toJava(java.lang.String,java.lang.String) -> toJava
    297:319:java.util.Map cacheFromOpenSsl(java.lang.String) -> cacheFromOpenSsl
    323:352:java.lang.String toJavaUncached(java.lang.String) -> toJavaUncached
    356:368:java.lang.String toJavaHandshakeAlgo(java.lang.String,boolean) -> toJavaHandshakeAlgo
    373:413:java.lang.String toJavaBulkCipher(java.lang.String,boolean) -> toJavaBulkCipher
    423:423:java.lang.String toJavaHmacAlgo(java.lang.String) -> toJavaHmacAlgo
    426:426:void <init>() -> <init>
    36:96:void <clinit>() -> <clinit>
io.netty.handler.ssl.CipherSuiteFilter -> io.netty.handler.ssl.CipherSuiteFilter:
    java.lang.String[] filterCipherSuites(java.lang.Iterable,java.util.List,java.util.Set) -> filterCipherSuites
io.netty.handler.ssl.ClientAuth -> io.netty.handler.ssl.ClientAuth:
    io.netty.handler.ssl.ClientAuth NONE -> NONE
    io.netty.handler.ssl.ClientAuth OPTIONAL -> OPTIONAL
    io.netty.handler.ssl.ClientAuth REQUIRE -> REQUIRE
    io.netty.handler.ssl.ClientAuth[] $VALUES -> $VALUES
    23:23:io.netty.handler.ssl.ClientAuth[] values() -> values
    23:23:io.netty.handler.ssl.ClientAuth valueOf(java.lang.String) -> valueOf
    23:23:void <init>(java.lang.String,int) -> <init>
    23:37:void <clinit>() -> <clinit>
io.netty.handler.ssl.Conscrypt -> io.netty.handler.ssl.Conscrypt:
    java.lang.Class ENGINES_CLASS -> ENGINES_CLASS
    35:35:boolean isAvailable() -> isAvailable
    39:39:boolean isEngineSupported(javax.net.ssl.SSLEngine) -> isEngineSupported
    45:52:java.lang.Class getEnginesClass() -> getEnginesClass
    58:61:boolean isConscryptEngine(javax.net.ssl.SSLEngine,java.lang.Class) -> isConscryptEngine
    66:66:java.lang.reflect.Method getIsConscryptMethod(java.lang.Class) -> getIsConscryptMethod
    29:29:void <clinit>() -> <clinit>
io.netty.handler.ssl.ConscryptAlpnSslEngine -> io.netty.handler.ssl.ConscryptAlpnSslEngine:
    boolean USE_BUFFER_ALLOCATOR -> USE_BUFFER_ALLOCATOR
    49:49:io.netty.handler.ssl.ConscryptAlpnSslEngine newClientEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> newClientEngine
    54:54:io.netty.handler.ssl.ConscryptAlpnSslEngine newServerEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> newServerEngine
    58:75:void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,java.util.List) -> <init>
    87:89:int calculateOutNetBufSize(int,int) -> calculateOutNetBufSize
    93:93:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],java.nio.ByteBuffer[]) -> unwrap
    43:43:void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,java.util.List,io.netty.handler.ssl.ConscryptAlpnSslEngine$1) -> <init>
    44:44:void <clinit>() -> <clinit>
io.netty.handler.ssl.ConscryptAlpnSslEngine$1 -> io.netty.handler.ssl.ConscryptAlpnSslEngine$1:
io.netty.handler.ssl.ConscryptAlpnSslEngine$BufferAllocatorAdapter -> io.netty.handler.ssl.ConscryptAlpnSslEngine$BufferAllocatorAdapter:
    io.netty.buffer.ByteBufAllocator alloc -> alloc
    160:162:void <init>(io.netty.buffer.ByteBufAllocator) -> <init>
io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine -> io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener protocolListener -> protocolListener
    101:113:void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1 -> io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1:
    io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine this$0 -> this$0
    103:103:void <init>(io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine) -> <init>
io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine -> io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector protocolSelector -> protocolSelector
    130:144:void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine$1 -> io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine$1:
    io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine this$0 -> this$0
    133:133:void <init>(io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine) -> <init>
io.netty.handler.ssl.IdentityCipherSuiteFilter -> io.netty.handler.ssl.IdentityCipherSuiteFilter:
    io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE -> INSTANCE
    28:28:void <init>() -> <init>
    33:43:java.lang.String[] filterCipherSuites(java.lang.Iterable,java.util.List,java.util.Set) -> filterCipherSuites
    26:26:void <clinit>() -> <clinit>
io.netty.handler.ssl.Java7SslParametersUtils -> io.netty.handler.ssl.Java7SslParametersUtils:
    33:34:void setAlgorithmConstraints(javax.net.ssl.SSLParameters,java.lang.Object) -> setAlgorithmConstraints
io.netty.handler.ssl.Java8SslUtils -> io.netty.handler.ssl.Java8SslUtils:
    33:47:java.util.List getSniHostNames(javax.net.ssl.SSLParameters) -> getSniHostNames
    51:56:void setSniHostNames(javax.net.ssl.SSLParameters,java.util.List) -> setSniHostNames
    59:59:boolean getUseCipherSuitesOrder(javax.net.ssl.SSLParameters) -> getUseCipherSuitesOrder
    63:64:void setUseCipherSuitesOrder(javax.net.ssl.SSLParameters,boolean) -> setUseCipherSuitesOrder
    68:69:void setSNIMatchers(javax.net.ssl.SSLParameters,java.util.Collection) -> setSNIMatchers
io.netty.handler.ssl.Java9SslEngine -> io.netty.handler.ssl.Java9SslEngine:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener selectionListener -> selectionListener
    io.netty.handler.ssl.Java9SslEngine$AlpnSelector alpnSelector -> alpnSelector
    boolean $assertionsDisabled -> $assertionsDisabled
    81:93:void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> <init>
    96:119:javax.net.ssl.SSLEngineResult verifyProtocolSelection(javax.net.ssl.SSLEngineResult) -> verifyProtocolSelection
    124:124:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    129:129:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer) -> wrap
    134:134:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    139:139:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    144:144:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    149:149:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    155:155:void setNegotiatedApplicationProtocol(java.lang.String) -> setNegotiatedApplicationProtocol
    159:163:java.lang.String getNegotiatedApplicationProtocol() -> getNegotiatedApplicationProtocol
    169:169:java.lang.String getApplicationProtocol() -> getApplicationProtocol
    173:173:java.lang.String getHandshakeApplicationProtocol() -> getHandshakeApplicationProtocol
    177:178:void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction) -> setHandshakeApplicationProtocolSelector
    181:181:java.util.function.BiFunction getHandshakeApplicationProtocolSelector() -> getHandshakeApplicationProtocolSelector
    33:33:void <clinit>() -> <clinit>
io.netty.handler.ssl.Java9SslEngine$AlpnSelector -> io.netty.handler.ssl.Java9SslEngine$AlpnSelector:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector selector -> selector
    boolean called -> called
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.handler.ssl.Java9SslEngine this$0 -> this$0
    41:43:void <init>(io.netty.handler.ssl.Java9SslEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector) -> <init>
    47:58:java.lang.String apply(javax.net.ssl.SSLEngine,java.util.List) -> apply
    63:77:void checkUnsupported() -> checkUnsupported
    37:37:java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
    37:37:void <clinit>() -> <clinit>
io.netty.handler.ssl.Java9SslUtils -> io.netty.handler.ssl.Java9SslUtils:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.reflect.Method SET_APPLICATION_PROTOCOLS -> SET_APPLICATION_PROTOCOLS
    java.lang.reflect.Method GET_APPLICATION_PROTOCOL -> GET_APPLICATION_PROTOCOL
    java.lang.reflect.Method GET_HANDSHAKE_APPLICATION_PROTOCOL -> GET_HANDSHAKE_APPLICATION_PROTOCOL
    java.lang.reflect.Method SET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR -> SET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR
    java.lang.reflect.Method GET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR -> GET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR
    113:114:void <init>() -> <init>
    117:117:boolean supportsAlpn() -> supportsAlpn
    122:126:java.lang.String getApplicationProtocol(javax.net.ssl.SSLEngine) -> getApplicationProtocol
    132:136:java.lang.String getHandshakeApplicationProtocol(javax.net.ssl.SSLEngine) -> getHandshakeApplicationProtocol
    141:152:void setApplicationProtocols(javax.net.ssl.SSLEngine,java.util.List) -> setApplicationProtocols
    157:163:void setHandshakeApplicationProtocolSelector(javax.net.ssl.SSLEngine,java.util.function.BiFunction) -> setHandshakeApplicationProtocolSelector
    167:172:java.util.function.BiFunction getHandshakeApplicationProtocolSelector(javax.net.ssl.SSLEngine) -> getHandshakeApplicationProtocolSelector
    34:111:void <clinit>() -> <clinit>
io.netty.handler.ssl.Java9SslUtils$1 -> io.netty.handler.ssl.Java9SslUtils$1:
    52:52:void <init>() -> <init>
    55:55:java.lang.reflect.Method run() -> run
    52:52:java.lang.Object run() -> run
io.netty.handler.ssl.Java9SslUtils$2 -> io.netty.handler.ssl.Java9SslUtils$2:
    59:59:void <init>() -> <init>
    62:62:java.lang.reflect.Method run() -> run
    59:59:java.lang.Object run() -> run
io.netty.handler.ssl.Java9SslUtils$3 -> io.netty.handler.ssl.Java9SslUtils$3:
    67:67:void <init>() -> <init>
    70:70:java.lang.reflect.Method run() -> run
    67:67:java.lang.Object run() -> run
io.netty.handler.ssl.Java9SslUtils$4 -> io.netty.handler.ssl.Java9SslUtils$4:
    76:76:void <init>() -> <init>
    79:79:java.lang.reflect.Method run() -> run
    76:76:java.lang.Object run() -> run
io.netty.handler.ssl.Java9SslUtils$5 -> io.netty.handler.ssl.Java9SslUtils$5:
    82:82:void <init>() -> <init>
    85:85:java.lang.String apply(javax.net.ssl.SSLEngine,java.util.List) -> apply
    82:82:java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
io.netty.handler.ssl.Java9SslUtils$6 -> io.netty.handler.ssl.Java9SslUtils$6:
    90:90:void <init>() -> <init>
    93:93:java.lang.reflect.Method run() -> run
    90:90:java.lang.Object run() -> run
io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator -> io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator:
    boolean AVAILABLE -> AVAILABLE
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory ALPN_WRAPPER -> ALPN_WRAPPER
    58:59:void <init>(boolean,java.lang.Iterable) -> <init>
    78:81:void <init>(boolean,boolean,java.lang.Iterable) -> <init>
    104:105:void <init>(io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.Iterable) -> <init>
    149:149:boolean jdkAlpnSupported() -> jdkAlpnSupported
    28:28:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> wrapperFactory
    28:28:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> protocolListenerFactory
    28:28:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> protocolSelectorFactory
    28:28:java.util.List protocols() -> protocols
    30:34:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1 -> io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1:
io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$AlpnWrapper -> io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$AlpnWrapper:
    129:129:void <init>() -> <init>
    133:144:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
    129:129:void <init>(io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1) -> <init>
io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$FailureWrapper -> io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$FailureWrapper:
    118:118:void <init>() -> <init>
    122:122:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
    118:118:void <init>(io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1) -> <init>
io.netty.handler.ssl.JdkApplicationProtocolNegotiator -> io.netty.handler.ssl.JdkApplicationProtocolNegotiator:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> wrapperFactory
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> protocolSelectorFactory
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> protocolListenerFactory
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory -> io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory:
    49:49:void <init>() -> <init>
    54:54:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
    javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener -> io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener:
    void unsupported() -> unsupported
    void selected(java.lang.String) -> selected
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory -> io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener newListener(javax.net.ssl.SSLEngine,java.util.List) -> newListener
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector -> io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector:
    void unsupported() -> unsupported
    java.lang.String select(java.util.List) -> select
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory -> io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector newSelector(javax.net.ssl.SSLEngine,java.util.Set) -> newSelector
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory -> io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory:
    javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator -> io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator:
    java.util.List protocols -> protocols
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory selectorFactory -> selectorFactory
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory listenerFactory -> listenerFactory
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory -> wrapperFactory
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory FAIL_SELECTOR_FACTORY -> FAIL_SELECTOR_FACTORY
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory NO_FAIL_SELECTOR_FACTORY -> NO_FAIL_SELECTOR_FACTORY
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory FAIL_SELECTION_LISTENER_FACTORY -> FAIL_SELECTION_LISTENER_FACTORY
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory NO_FAIL_SELECTION_LISTENER_FACTORY -> NO_FAIL_SELECTION_LISTENER_FACTORY
    47:48:void <init>(io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.Iterable) -> <init>
    72:77:void <init>(io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.util.List) -> <init>
    81:81:java.util.List protocols() -> protocols
    86:86:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> protocolSelectorFactory
    91:91:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> protocolListenerFactory
    96:96:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> wrapperFactory
    99:121:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$1 -> io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$1:
    99:99:void <init>() -> <init>
    102:102:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector newSelector(javax.net.ssl.SSLEngine,java.util.Set) -> newSelector
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$2 -> io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$2:
    106:106:void <init>() -> <init>
    109:109:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector newSelector(javax.net.ssl.SSLEngine,java.util.Set) -> newSelector
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$3 -> io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$3:
    114:114:void <init>() -> <init>
    117:117:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener newListener(javax.net.ssl.SSLEngine,java.util.List) -> newListener
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$4 -> io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$4:
    122:122:void <init>() -> <init>
    125:125:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener newListener(javax.net.ssl.SSLEngine,java.util.List) -> newListener
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelectionListener -> io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelectionListener:
    201:202:void <init>(io.netty.handler.ssl.JdkSslEngine,java.util.List) -> <init>
    206:206:void noSelectedMatchFound(java.lang.String) -> noSelectedMatchFound
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelector -> io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelector:
    162:163:void <init>(io.netty.handler.ssl.JdkSslEngine,java.util.Set) -> <init>
    167:167:java.lang.String noSelectMatchFound() -> noSelectMatchFound
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelectionListener -> io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelectionListener:
    io.netty.handler.ssl.JdkSslEngine engineWrapper -> engineWrapper
    java.util.List supportedProtocols -> supportedProtocols
    175:178:void <init>(io.netty.handler.ssl.JdkSslEngine,java.util.List) -> <init>
    182:183:void unsupported() -> unsupported
    187:192:void selected(java.lang.String) -> selected
    196:196:void noSelectedMatchFound(java.lang.String) -> noSelectedMatchFound
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector -> io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector:
    io.netty.handler.ssl.JdkSslEngine engineWrapper -> engineWrapper
    java.util.Set supportedProtocols -> supportedProtocols
    133:136:void <init>(io.netty.handler.ssl.JdkSslEngine,java.util.Set) -> <init>
    140:141:void unsupported() -> unsupported
    145:151:java.lang.String select(java.util.List) -> select
    155:156:java.lang.String noSelectMatchFound() -> noSelectMatchFound
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator -> io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator:
    io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator INSTANCE -> INSTANCE
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory DEFAULT_SSL_ENGINE_WRAPPER_FACTORY -> DEFAULT_SSL_ENGINE_WRAPPER_FACTORY
    38:39:void <init>() -> <init>
    43:43:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> wrapperFactory
    48:48:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> protocolSelectorFactory
    53:53:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> protocolListenerFactory
    58:58:java.util.List protocols() -> protocols
    28:30:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator$1 -> io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator$1:
    30:30:void <init>() -> <init>
    34:34:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator -> io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory NPN_WRAPPER -> NPN_WRAPPER
    64:65:void <init>(boolean,java.lang.Iterable) -> <init>
    84:87:void <init>(boolean,boolean,java.lang.Iterable) -> <init>
    110:111:void <init>(io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.Iterable) -> <init>
    25:25:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> wrapperFactory
    25:25:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> protocolListenerFactory
    25:25:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> protocolSelectorFactory
    25:25:java.util.List protocols() -> protocols
    27:27:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator$1 -> io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator$1:
    27:33:void <init>() -> <init>
    38:38:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
io.netty.handler.ssl.JdkSslClientContext -> io.netty.handler.ssl.JdkSslClientContext:
    47:48:void <init>() -> <init>
    87:89:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory) -> <init>
    168:169:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long) -> <init>
    175:179:void <init>(java.security.Provider,java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long) -> <init>
    270:273:void <init>(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long) -> <init>
    281:305:javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long) -> newSSLContext
io.netty.handler.ssl.JdkSslContext -> io.netty.handler.ssl.JdkSslContext:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String[] DEFAULT_PROTOCOLS -> DEFAULT_PROTOCOLS
    java.util.List DEFAULT_CIPHERS -> DEFAULT_CIPHERS
    java.util.Set SUPPORTED_CIPHERS -> SUPPORTED_CIPHERS
    java.lang.String[] protocols -> protocols
    java.lang.String[] cipherSuites -> cipherSuites
    java.util.List unmodifiableCipherSuites -> unmodifiableCipherSuites
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator apn -> apn
    io.netty.handler.ssl.ClientAuth clientAuth -> clientAuth
    javax.net.ssl.SSLContext sslContext -> sslContext
    boolean isClient -> isClient
    163:172:void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean) -> <init>
    178:178:javax.net.ssl.SSLContext context() -> context
    183:183:boolean isClient() -> isClient
    191:194:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    215:215:javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator) -> newEngine
    220:220:javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newEngine
    225:247:javax.net.ssl.SSLEngine configureAndWrapEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator) -> configureAndWrapEngine
    263:316:io.netty.handler.ssl.JdkApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig,boolean) -> toNegotiator
    56:120:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkSslContext$1 -> io.netty.handler.ssl.JdkSslContext$1:
    int[] $SwitchMap$io$netty$handler$ssl$ClientAuth -> $SwitchMap$io$netty$handler$ssl$ClientAuth
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectorFailureBehavior -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectorFailureBehavior
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectedListenerFailureBehavior -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectedListenerFailureBehavior
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol
    229:282:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkSslEngine -> io.netty.handler.ssl.JdkSslEngine:
    javax.net.ssl.SSLEngine engine -> engine
    java.lang.String applicationProtocol -> applicationProtocol
    31:33:void <init>(javax.net.ssl.SSLEngine) -> <init>
    37:37:java.lang.String getNegotiatedApplicationProtocol() -> getNegotiatedApplicationProtocol
    41:42:void setNegotiatedApplicationProtocol(java.lang.String) -> setNegotiatedApplicationProtocol
    46:46:javax.net.ssl.SSLSession getSession() -> getSession
    50:50:javax.net.ssl.SSLEngine getWrappedEngine() -> getWrappedEngine
    55:56:void closeInbound() -> closeInbound
    60:61:void closeOutbound() -> closeOutbound
    65:65:java.lang.String getPeerHost() -> getPeerHost
    70:70:int getPeerPort() -> getPeerPort
    75:75:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    80:80:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer) -> wrap
    85:85:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    90:90:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    95:95:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    100:100:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    105:105:java.lang.Runnable getDelegatedTask() -> getDelegatedTask
    110:110:boolean isInboundDone() -> isInboundDone
    115:115:boolean isOutboundDone() -> isOutboundDone
    120:120:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    125:125:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    130:131:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    135:135:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    140:140:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    145:146:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    150:150:javax.net.ssl.SSLSession getHandshakeSession() -> getHandshakeSession
    155:156:void beginHandshake() -> beginHandshake
    160:160:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus() -> getHandshakeStatus
    165:166:void setUseClientMode(boolean) -> setUseClientMode
    170:170:boolean getUseClientMode() -> getUseClientMode
    175:176:void setNeedClientAuth(boolean) -> setNeedClientAuth
    180:180:boolean getNeedClientAuth() -> getNeedClientAuth
    185:186:void setWantClientAuth(boolean) -> setWantClientAuth
    190:190:boolean getWantClientAuth() -> getWantClientAuth
    195:196:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    200:200:boolean getEnableSessionCreation() -> getEnableSessionCreation
    205:205:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    210:211:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
io.netty.handler.ssl.JdkSslServerContext -> io.netty.handler.ssl.JdkSslServerContext:
    237:240:void <init>(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean) -> <init>
    247:278:javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long) -> newSSLContext
io.netty.handler.ssl.JettyAlpnSslEngine -> io.netty.handler.ssl.JettyAlpnSslEngine:
    boolean available -> available
    37:37:boolean isAvailable() -> isAvailable
    41:50:boolean initAvailable() -> initAvailable
    55:55:io.netty.handler.ssl.JettyAlpnSslEngine newClientEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> newClientEngine
    60:60:io.netty.handler.ssl.JettyAlpnSslEngine newServerEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> newServerEngine
    64:65:void <init>(javax.net.ssl.SSLEngine) -> <init>
    33:33:void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JettyAlpnSslEngine$1) -> <init>
    34:34:void <clinit>() -> <clinit>
io.netty.handler.ssl.JettyAlpnSslEngine$1 -> io.netty.handler.ssl.JettyAlpnSslEngine$1:
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine -> io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine:
    69:94:void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
    99:103:void closeInbound() -> closeInbound
    108:112:void closeOutbound() -> closeOutbound
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1 -> io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator val$applicationNegotiator -> val$applicationNegotiator
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener val$protocolListener -> val$protocolListener
    io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine this$0 -> this$0
    74:74:void <init>(io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener) -> <init>
io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine -> io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine:
    117:137:void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
    142:146:void closeInbound() -> closeInbound
    151:155:void closeOutbound() -> closeOutbound
io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine$1 -> io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine$1:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector val$protocolSelector -> val$protocolSelector
    io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine this$0 -> this$0
    122:122:void <init>(io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector) -> <init>
io.netty.handler.ssl.JettyNpnSslEngine -> io.netty.handler.ssl.JettyNpnSslEngine:
    boolean available -> available
    38:39:boolean isAvailable() -> isAvailable
    43:53:void updateAvailability() -> updateAvailability
    56:109:void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> <init>
    113:115:void closeInbound() -> closeInbound
    119:121:void closeOutbound() -> closeOutbound
io.netty.handler.ssl.JettyNpnSslEngine$1 -> io.netty.handler.ssl.JettyNpnSslEngine$1:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener val$protocolListener -> val$protocolListener
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator val$applicationNegotiator -> val$applicationNegotiator
    io.netty.handler.ssl.JettyNpnSslEngine this$0 -> this$0
    63:63:void <init>(io.netty.handler.ssl.JettyNpnSslEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
io.netty.handler.ssl.JettyNpnSslEngine$2 -> io.netty.handler.ssl.JettyNpnSslEngine$2:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector val$protocolSelector -> val$protocolSelector
    io.netty.handler.ssl.JettyNpnSslEngine this$0 -> this$0
    87:87:void <init>(io.netty.handler.ssl.JettyNpnSslEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector) -> <init>
io.netty.handler.ssl.NotSslRecordException -> io.netty.handler.ssl.NotSslRecordException:
    33:34:void <init>() -> <init>
    37:38:void <init>(java.lang.String) -> <init>
io.netty.handler.ssl.OpenSsl -> io.netty.handler.ssl.OpenSsl:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.Throwable UNAVAILABILITY_CAUSE -> UNAVAILABILITY_CAUSE
    java.util.List DEFAULT_CIPHERS -> DEFAULT_CIPHERS
    java.util.Set AVAILABLE_CIPHER_SUITES -> AVAILABLE_CIPHER_SUITES
    java.util.Set AVAILABLE_OPENSSL_CIPHER_SUITES -> AVAILABLE_OPENSSL_CIPHER_SUITES
    java.util.Set AVAILABLE_JAVA_CIPHER_SUITES -> AVAILABLE_JAVA_CIPHER_SUITES
    boolean SUPPORTS_KEYMANAGER_FACTORY -> SUPPORTS_KEYMANAGER_FACTORY
    boolean SUPPORTS_HOSTNAME_VALIDATION -> SUPPORTS_HOSTNAME_VALIDATION
    boolean USE_KEYMANAGER_FACTORY -> USE_KEYMANAGER_FACTORY
    boolean SUPPORTS_OCSP -> SUPPORTS_OCSP
    java.util.Set SUPPORTED_PROTOCOLS_SET -> SUPPORTED_PROTOCOLS_SET
    boolean $assertionsDisabled -> $assertionsDisabled
    248:263:boolean doesSupportOcsp() -> doesSupportOcsp
    266:274:boolean doesSupportProtocol(int) -> doesSupportProtocol
    285:285:boolean isAvailable() -> isAvailable
    293:293:boolean isAlpnSupported() -> isAlpnSupported
    300:300:boolean isOcspSupported() -> isOcspSupported
    308:308:int version() -> version
    326:330:void ensureAvailability() -> ensureAvailability
    339:339:java.lang.Throwable unavailabilityCause() -> unavailabilityCause
    355:355:java.util.Set availableOpenSslCipherSuites() -> availableOpenSslCipherSuites
    363:363:java.util.Set availableJavaCipherSuites() -> availableJavaCipherSuites
    371:375:boolean isCipherSuiteAvailable(java.lang.String) -> isCipherSuiteAvailable
    394:394:boolean useKeyManagerFactory() -> useKeyManagerFactory
    398:399:long memoryAddress(io.netty.buffer.ByteBuf) -> memoryAddress
    402:402:void <init>() -> <init>
    405:423:void loadTcNative() -> loadTcNative
    426:426:boolean initializeTcNative() -> initializeTcNative
    430:433:void releaseIfNeeded(io.netty.util.ReferenceCounted) -> releaseIfNeeded
    56:245:void <clinit>() -> <clinit>
io.netty.handler.ssl.OpenSsl$1 -> io.netty.handler.ssl.OpenSsl$1:
    155:155:void <init>() -> <init>
    158:158:java.lang.Boolean run() -> run
    155:155:java.lang.Object run() -> run
io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator -> io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator:
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> protocol
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> selectorFailureBehavior
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> selectedListenerFailureBehavior
io.netty.handler.ssl.OpenSslClientContext -> io.netty.handler.ssl.OpenSslClientContext:
    io.netty.handler.ssl.OpenSslSessionContext sessionContext -> sessionContext
    45:46:void <init>() -> <init>
    176:180:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    188:200:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long,boolean) -> <init>
    204:204:io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> sessionContext
    209:209:io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager() -> keyMaterialManager
    36:36:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
io.netty.handler.ssl.OpenSslContext -> io.netty.handler.ssl.OpenSslContext:
    34:36:void <init>(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,int,java.security.cert.Certificate[],io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    43:45:void <init>(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,int,java.security.cert.Certificate[],io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    49:49:javax.net.ssl.SSLEngine newEngine0(io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> newEngine0
    55:57:void finalize() -> finalize
io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator -> io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator:
    io.netty.handler.ssl.ApplicationProtocolConfig config -> config
    30:32:void <init>(io.netty.handler.ssl.ApplicationProtocolConfig) -> <init>
    36:36:java.util.List protocols() -> protocols
    41:41:io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> protocol
    46:46:io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> selectorFailureBehavior
    51:51:io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> selectedListenerFailureBehavior
io.netty.handler.ssl.OpenSslEngine -> io.netty.handler.ssl.OpenSslEngine:
    32:33:void <init>(io.netty.handler.ssl.OpenSslContext,io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> <init>
    38:40:void finalize() -> finalize
io.netty.handler.ssl.OpenSslEngineMap -> io.netty.handler.ssl.OpenSslEngineMap:
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine remove(long) -> remove
    void add(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> add
io.netty.handler.ssl.OpenSslExtendedKeyMaterialManager -> io.netty.handler.ssl.OpenSslExtendedKeyMaterialManager:
    javax.net.ssl.X509ExtendedKeyManager keyManager -> keyManager
    26:28:void <init>(javax.net.ssl.X509ExtendedKeyManager,java.lang.String) -> <init>
    38:38:java.lang.String chooseServerAlias(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String) -> chooseServerAlias
io.netty.handler.ssl.OpenSslJavaxX509Certificate -> io.netty.handler.ssl.OpenSslJavaxX509Certificate:
    byte[] bytes -> bytes
    javax.security.cert.X509Certificate wrapped -> wrapped
    35:37:void <init>(byte[]) -> <init>
    41:42:void checkValidity() -> checkValidity
    46:47:void checkValidity(java.util.Date) -> checkValidity
    51:51:int getVersion() -> getVersion
    56:56:java.math.BigInteger getSerialNumber() -> getSerialNumber
    61:61:java.security.Principal getIssuerDN() -> getIssuerDN
    66:66:java.security.Principal getSubjectDN() -> getSubjectDN
    71:71:java.util.Date getNotBefore() -> getNotBefore
    76:76:java.util.Date getNotAfter() -> getNotAfter
    81:81:java.lang.String getSigAlgName() -> getSigAlgName
    86:86:java.lang.String getSigAlgOID() -> getSigAlgOID
    91:91:byte[] getSigAlgParams() -> getSigAlgParams
    96:96:byte[] getEncoded() -> getEncoded
    103:104:void verify(java.security.PublicKey) -> verify
    110:111:void verify(java.security.PublicKey,java.lang.String) -> verify
    115:115:java.lang.String toString() -> toString
    120:120:java.security.PublicKey getPublicKey() -> getPublicKey
    124:132:javax.security.cert.X509Certificate unwrap() -> unwrap
io.netty.handler.ssl.OpenSslKeyMaterialManager -> io.netty.handler.ssl.OpenSslKeyMaterialManager:
    java.util.Map KEY_TYPES -> KEY_TYPES
    javax.net.ssl.X509KeyManager keyManager -> keyManager
    java.lang.String password -> password
    68:71:void <init>(javax.net.ssl.X509KeyManager,java.lang.String) -> <init>
    74:86:void setKeyMaterial(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> setKeyMaterial
    131:169:void setKeyMaterial(long,java.lang.String) -> setKeyMaterial
    177:177:java.lang.String chooseServerAlias(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String) -> chooseServerAlias
    54:63:void <clinit>() -> <clinit>
io.netty.handler.ssl.OpenSslServerContext -> io.netty.handler.ssl.OpenSslServerContext:
    io.netty.handler.ssl.OpenSslServerSessionContext sessionContext -> sessionContext
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager -> keyMaterialManager
    335:338:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    347:362:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    366:366:io.netty.handler.ssl.OpenSslServerSessionContext sessionContext() -> sessionContext
    371:371:io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager() -> keyMaterialManager
    38:38:io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> sessionContext
    38:38:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
io.netty.handler.ssl.OpenSslServerSessionContext -> io.netty.handler.ssl.OpenSslServerSessionContext:
    29:30:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
    34:44:void setSessionTimeout(int) -> setSessionTimeout
    48:53:int getSessionTimeout() -> getSessionTimeout
    59:69:void setSessionCacheSize(int) -> setSessionCacheSize
    73:78:int getSessionCacheSize() -> getSessionCacheSize
    84:93:void setSessionCacheEnabled(boolean) -> setSessionCacheEnabled
    116:121:boolean setSessionIdContext(byte[]) -> setSessionIdContext
io.netty.handler.ssl.OpenSslSessionContext -> io.netty.handler.ssl.OpenSslSessionContext:
    java.util.Enumeration EMPTY -> EMPTY
    io.netty.handler.ssl.OpenSslSessionStats stats -> stats
    io.netty.handler.ssl.ReferenceCountedOpenSslContext context -> context
    43:46:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
    50:53:javax.net.ssl.SSLSession getSession(byte[]) -> getSession
    58:58:java.util.Enumeration getIds() -> getIds
    34:34:void <clinit>() -> <clinit>
io.netty.handler.ssl.OpenSslSessionContext$1 -> io.netty.handler.ssl.OpenSslSessionContext$1:
io.netty.handler.ssl.OpenSslSessionContext$EmptyEnumeration -> io.netty.handler.ssl.OpenSslSessionContext$EmptyEnumeration:
    126:126:void <init>() -> <init>
    129:129:boolean hasMoreElements() -> hasMoreElements
    134:134:byte[] nextElement() -> nextElement
    126:126:java.lang.Object nextElement() -> nextElement
    126:126:void <init>(io.netty.handler.ssl.OpenSslSessionContext$1) -> <init>
io.netty.handler.ssl.OpenSslSessionStats -> io.netty.handler.ssl.OpenSslSessionStats:
    io.netty.handler.ssl.ReferenceCountedOpenSslContext context -> context
    36:38:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
io.netty.handler.ssl.OpenSslX509Certificate -> io.netty.handler.ssl.OpenSslX509Certificate:
    byte[] bytes -> bytes
    java.security.cert.X509Certificate wrapped -> wrapped
    39:41:void <init>(byte[]) -> <init>
    45:46:void checkValidity() -> checkValidity
    50:51:void checkValidity(java.util.Date) -> checkValidity
    55:55:int getVersion() -> getVersion
    60:60:java.math.BigInteger getSerialNumber() -> getSerialNumber
    65:65:java.security.Principal getIssuerDN() -> getIssuerDN
    70:70:java.security.Principal getSubjectDN() -> getSubjectDN
    75:75:java.util.Date getNotBefore() -> getNotBefore
    80:80:java.util.Date getNotAfter() -> getNotAfter
    85:85:byte[] getTBSCertificate() -> getTBSCertificate
    90:90:byte[] getSignature() -> getSignature
    95:95:java.lang.String getSigAlgName() -> getSigAlgName
    100:100:java.lang.String getSigAlgOID() -> getSigAlgOID
    105:105:byte[] getSigAlgParams() -> getSigAlgParams
    110:110:boolean[] getIssuerUniqueID() -> getIssuerUniqueID
    115:115:boolean[] getSubjectUniqueID() -> getSubjectUniqueID
    120:120:boolean[] getKeyUsage() -> getKeyUsage
    125:125:int getBasicConstraints() -> getBasicConstraints
    130:130:byte[] getEncoded() -> getEncoded
    137:138:void verify(java.security.PublicKey) -> verify
    144:145:void verify(java.security.PublicKey,java.lang.String) -> verify
    149:149:java.lang.String toString() -> toString
    154:154:java.security.PublicKey getPublicKey() -> getPublicKey
    159:159:boolean hasUnsupportedCriticalExtension() -> hasUnsupportedCriticalExtension
    164:164:java.util.Set getCriticalExtensionOIDs() -> getCriticalExtensionOIDs
    169:169:java.util.Set getNonCriticalExtensionOIDs() -> getNonCriticalExtensionOIDs
    174:174:byte[] getExtensionValue(java.lang.String) -> getExtensionValue
    178:187:java.security.cert.X509Certificate unwrap() -> unwrap
io.netty.handler.ssl.PemEncoded -> io.netty.handler.ssl.PemEncoded:
    boolean isSensitive() -> isSensitive
    io.netty.handler.ssl.PemEncoded retain() -> retain
io.netty.handler.ssl.PemPrivateKey -> io.netty.handler.ssl.PemPrivateKey:
    byte[] BEGIN_PRIVATE_KEY -> BEGIN_PRIVATE_KEY
    byte[] END_PRIVATE_KEY -> END_PRIVATE_KEY
    io.netty.buffer.ByteBuf content -> content
    59:89:io.netty.handler.ssl.PemEncoded toPEM(io.netty.buffer.ByteBufAllocator,boolean,java.security.PrivateKey) -> toPEM
    121:121:boolean isSensitive() -> isSensitive
    126:131:io.netty.buffer.ByteBuf content() -> content
    156:157:io.netty.handler.ssl.PemPrivateKey touch() -> touch
    162:163:io.netty.handler.ssl.PemPrivateKey touch(java.lang.Object) -> touch
    168:168:io.netty.handler.ssl.PemPrivateKey retain() -> retain
    173:173:io.netty.handler.ssl.PemPrivateKey retain(int) -> retain
    180:181:void deallocate() -> deallocate
    185:185:byte[] getEncoded() -> getEncoded
    190:190:java.lang.String getAlgorithm() -> getAlgorithm
    195:195:java.lang.String getFormat() -> getFormat
    206:207:void destroy() -> destroy
    217:217:boolean isDestroyed() -> isDestroyed
    43:43:io.netty.util.ReferenceCounted touch() -> touch
    43:43:io.netty.util.ReferenceCounted retain(int) -> retain
    43:43:io.netty.util.ReferenceCounted retain() -> retain
    43:43:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    43:43:io.netty.handler.ssl.PemEncoded retain() -> retain
    46:47:void <clinit>() -> <clinit>
io.netty.handler.ssl.PemReader -> io.netty.handler.ssl.PemReader:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.regex.Pattern CERT_PATTERN -> CERT_PATTERN
    java.util.regex.Pattern KEY_PATTERN -> KEY_PATTERN
    61:69:io.netty.buffer.ByteBuf[] readCertificates(java.io.File) -> readCertificates
    76:101:io.netty.buffer.ByteBuf[] readCertificates(java.io.InputStream) -> readCertificates
    106:114:io.netty.buffer.ByteBuf readPrivateKey(java.io.File) -> readPrivateKey
    121:135:io.netty.buffer.ByteBuf readPrivateKey(java.io.InputStream) -> readPrivateKey
    139:151:java.lang.String readContent(java.io.InputStream) -> readContent
    157:161:void safeClose(java.io.InputStream) -> safeClose
    165:169:void safeClose(java.io.OutputStream) -> safeClose
    171:171:void <init>() -> <init>
    46:53:void <clinit>() -> <clinit>
io.netty.handler.ssl.PemValue -> io.netty.handler.ssl.PemValue:
    io.netty.buffer.ByteBuf content -> content
    boolean sensitive -> sensitive
    37:40:void <init>(io.netty.buffer.ByteBuf,boolean) -> <init>
    44:44:boolean isSensitive() -> isSensitive
    49:54:io.netty.buffer.ByteBuf content() -> content
    79:79:io.netty.handler.ssl.PemValue touch() -> touch
    84:85:io.netty.handler.ssl.PemValue touch(java.lang.Object) -> touch
    90:90:io.netty.handler.ssl.PemValue retain() -> retain
    95:95:io.netty.handler.ssl.PemValue retain(int) -> retain
    100:104:void deallocate() -> deallocate
    31:31:io.netty.util.ReferenceCounted touch() -> touch
    31:31:io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:io.netty.util.ReferenceCounted retain() -> retain
    31:31:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:io.netty.handler.ssl.PemEncoded retain() -> retain
io.netty.handler.ssl.PemX509Certificate -> io.netty.handler.ssl.PemX509Certificate:
    byte[] BEGIN_CERT -> BEGIN_CERT
    byte[] END_CERT -> END_CERT
    io.netty.buffer.ByteBuf content -> content
    58:96:io.netty.handler.ssl.PemEncoded toPEM(io.netty.buffer.ByteBufAllocator,boolean,java.security.cert.X509Certificate[]) -> toPEM
    108:116:io.netty.buffer.ByteBuf append(io.netty.buffer.ByteBufAllocator,boolean,io.netty.handler.ssl.PemEncoded,int,io.netty.buffer.ByteBuf) -> append
    126:148:io.netty.buffer.ByteBuf append(io.netty.buffer.ByteBufAllocator,boolean,java.security.cert.X509Certificate,int,io.netty.buffer.ByteBuf) -> append
    152:152:io.netty.buffer.ByteBuf newBuffer(io.netty.buffer.ByteBufAllocator,boolean,int) -> newBuffer
    184:184:boolean isSensitive() -> isSensitive
    189:189:int refCnt() -> refCnt
    194:199:io.netty.buffer.ByteBuf content() -> content
    224:225:io.netty.handler.ssl.PemX509Certificate retain() -> retain
    230:231:io.netty.handler.ssl.PemX509Certificate retain(int) -> retain
    236:237:io.netty.handler.ssl.PemX509Certificate touch() -> touch
    242:243:io.netty.handler.ssl.PemX509Certificate touch(java.lang.Object) -> touch
    248:248:boolean release() -> release
    253:253:boolean release(int) -> release
    258:258:byte[] getEncoded() -> getEncoded
    263:263:boolean hasUnsupportedCriticalExtension() -> hasUnsupportedCriticalExtension
    268:268:java.util.Set getCriticalExtensionOIDs() -> getCriticalExtensionOIDs
    273:273:java.util.Set getNonCriticalExtensionOIDs() -> getNonCriticalExtensionOIDs
    278:278:byte[] getExtensionValue(java.lang.String) -> getExtensionValue
    283:283:void checkValidity() -> checkValidity
    288:288:void checkValidity(java.util.Date) -> checkValidity
    293:293:int getVersion() -> getVersion
    298:298:java.math.BigInteger getSerialNumber() -> getSerialNumber
    303:303:java.security.Principal getIssuerDN() -> getIssuerDN
    308:308:java.security.Principal getSubjectDN() -> getSubjectDN
    313:313:java.util.Date getNotBefore() -> getNotBefore
    318:318:java.util.Date getNotAfter() -> getNotAfter
    323:323:byte[] getTBSCertificate() -> getTBSCertificate
    328:328:byte[] getSignature() -> getSignature
    333:333:java.lang.String getSigAlgName() -> getSigAlgName
    338:338:java.lang.String getSigAlgOID() -> getSigAlgOID
    343:343:byte[] getSigAlgParams() -> getSigAlgParams
    348:348:boolean[] getIssuerUniqueID() -> getIssuerUniqueID
    353:353:boolean[] getSubjectUniqueID() -> getSubjectUniqueID
    358:358:boolean[] getKeyUsage() -> getKeyUsage
    363:363:int getBasicConstraints() -> getBasicConstraints
    368:368:void verify(java.security.PublicKey) -> verify
    373:373:void verify(java.security.PublicKey,java.lang.String) -> verify
    378:378:java.security.PublicKey getPublicKey() -> getPublicKey
    383:390:boolean equals(java.lang.Object) -> equals
    395:395:int hashCode() -> hashCode
    400:400:java.lang.String toString() -> toString
    47:47:io.netty.handler.ssl.PemEncoded retain() -> retain
    47:47:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    47:47:io.netty.util.ReferenceCounted touch() -> touch
    47:47:io.netty.util.ReferenceCounted retain(int) -> retain
    47:47:io.netty.util.ReferenceCounted retain() -> retain
    49:50:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext -> io.netty.handler.ssl.ReferenceCountedOpenSslClientContext:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.handler.ssl.OpenSslSessionContext sessionContext -> sessionContext
    59:71:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long,boolean) -> <init>
    75:75:io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager() -> keyMaterialManager
    80:80:io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> sessionContext
    89:151:io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory) -> newSessionContext
    48:48:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    49:50:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback -> io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback:
    javax.net.ssl.X509ExtendedTrustManager manager -> manager
    214:216:void <init>(io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509ExtendedTrustManager) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslCertificateRequestedCallback -> io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslCertificateRequestedCallback:
    io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyManagerHolder -> keyManagerHolder
    229:232:void <init>(io.netty.handler.ssl.OpenSslEngineMap,io.netty.handler.ssl.OpenSslKeyMaterialManager) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientSessionContext -> io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientSessionContext:
    157:158:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
    162:165:void setSessionTimeout(int) -> setSessionTimeout
    169:169:int getSessionTimeout() -> getSessionTimeout
    174:177:void setSessionCacheSize(int) -> setSessionCacheSize
    181:181:int getSessionCacheSize() -> getSessionCacheSize
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$TrustManagerVerifyCallback -> io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$TrustManagerVerifyCallback:
    javax.net.ssl.X509TrustManager manager -> manager
    199:201:void <init>(io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509TrustManager) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslContext -> io.netty.handler.ssl.ReferenceCountedOpenSslContext:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    boolean JDK_REJECT_CLIENT_INITIATED_RENEGOTIATION -> JDK_REJECT_CLIENT_INITIATED_RENEGOTIATION
    int DEFAULT_BIO_NON_APPLICATION_BUFFER_SIZE -> DEFAULT_BIO_NON_APPLICATION_BUFFER_SIZE
    java.lang.Integer DH_KEY_LENGTH -> DH_KEY_LENGTH
    io.netty.util.ResourceLeakDetector leakDetector -> leakDetector
    long ctx -> ctx
    java.util.List unmodifiableCiphers -> unmodifiableCiphers
    long sessionCacheSize -> sessionCacheSize
    long sessionTimeout -> sessionTimeout
    io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator apn -> apn
    int mode -> mode
    io.netty.util.ResourceLeakTracker leak -> leak
    io.netty.util.AbstractReferenceCounted refCnt -> refCnt
    java.security.cert.Certificate[] keyCertChain -> keyCertChain
    io.netty.handler.ssl.ClientAuth clientAuth -> clientAuth
    java.lang.String[] protocols -> protocols
    boolean enableOcsp -> enableOcsp
    io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    java.util.concurrent.locks.ReadWriteLock ctxLock -> ctxLock
    boolean rejectRemoteInitiatedRenegotiation -> rejectRemoteInitiatedRenegotiation
    int bioNonApplicationBufferSize -> bioNonApplicationBufferSize
    io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator NONE_PROTOCOL_NEGOTIATOR -> NONE_PROTOCOL_NEGOTIATOR
    207:209:void <init>(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,int,java.security.cert.Certificate[],io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,boolean) -> <init>
    125:338:void <init>(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,int,java.security.cert.Certificate[],io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,boolean) -> <init>
    341:347:int opensslSelectorFailureBehavior(io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior) -> opensslSelectorFailureBehavior
    368:368:io.netty.handler.ssl.ApplicationProtocolNegotiator applicationProtocolNegotiator() -> applicationProtocolNegotiator
    373:373:boolean isClient() -> isClient
    378:378:javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newEngine
    383:383:io.netty.handler.ssl.SslHandler newHandler(io.netty.buffer.ByteBufAllocator,boolean) -> newHandler
    392:392:javax.net.ssl.SSLEngine newEngine0(io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> newEngine0
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager() -> keyMaterialManager
    402:402:javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator) -> newEngine
    445:445:boolean getRejectRemoteInitiatedRenegotiation() -> getRejectRemoteInitiatedRenegotiation
    461:461:int getBioNonApplicationBufferSize() -> getBioNonApplicationBufferSize
    io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> sessionContext
    499:513:void destroy() -> destroy
    524:529:javax.net.ssl.X509TrustManager chooseTrustManager(javax.net.ssl.TrustManager[]) -> chooseTrustManager
    533:538:javax.net.ssl.X509KeyManager chooseX509KeyManager(javax.net.ssl.KeyManager[]) -> chooseX509KeyManager
    550:581:io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig) -> toNegotiator
    586:586:boolean useExtendedTrustManager(javax.net.ssl.X509TrustManager) -> useExtendedTrustManager
    590:590:boolean useExtendedKeyManager(javax.net.ssl.X509KeyManager) -> useExtendedKeyManager
    595:595:int refCnt() -> refCnt
    600:601:io.netty.util.ReferenceCounted retain() -> retain
    606:607:io.netty.util.ReferenceCounted retain(int) -> retain
    612:613:io.netty.util.ReferenceCounted touch() -> touch
    618:619:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    624:624:boolean release() -> release
    629:629:boolean release(int) -> release
    722:753:void setKeyMaterial(long,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String) -> setKeyMaterial
    756:759:void freeBio(long) -> freeBio
    766:775:long toBIO(java.security.PrivateKey) -> toBIO
    784:797:long toBIO(java.security.cert.X509Certificate[]) -> toBIO
    805:827:long toBIO(io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.PemEncoded) -> toBIO
    833:841:long newBIO(io.netty.buffer.ByteBuf) -> newBIO
    75:75:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    75:75:io.netty.util.ResourceLeakTracker access$000(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> access$000
    75:75:void access$100(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> access$100
    76:201:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslContext$1 -> io.netty.handler.ssl.ReferenceCountedOpenSslContext$1:
    87:87:void <init>() -> <init>
    90:90:java.lang.Boolean run() -> run
    87:87:java.lang.Object run() -> run
io.netty.handler.ssl.ReferenceCountedOpenSslContext$2 -> io.netty.handler.ssl.ReferenceCountedOpenSslContext$2:
    95:95:void <init>() -> <init>
    98:99:java.lang.Integer run() -> run
    95:95:java.lang.Object run() -> run
io.netty.handler.ssl.ReferenceCountedOpenSslContext$3 -> io.netty.handler.ssl.ReferenceCountedOpenSslContext$3:
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.handler.ssl.ReferenceCountedOpenSslContext this$0 -> this$0
    125:125:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
    128:132:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    137:142:void deallocate() -> deallocate
    125:125:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslContext$4 -> io.netty.handler.ssl.ReferenceCountedOpenSslContext$4:
    157:157:void <init>() -> <init>
    160:160:io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> protocol
    165:165:java.util.List protocols() -> protocols
    170:170:io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> selectorFailureBehavior
    175:175:io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> selectedListenerFailureBehavior
io.netty.handler.ssl.ReferenceCountedOpenSslContext$5 -> io.netty.handler.ssl.ReferenceCountedOpenSslContext$5:
    183:183:void <init>() -> <init>
    186:186:java.lang.String run() -> run
    183:183:java.lang.Object run() -> run
io.netty.handler.ssl.ReferenceCountedOpenSslContext$6 -> io.netty.handler.ssl.ReferenceCountedOpenSslContext$6:
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectorFailureBehavior -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectorFailureBehavior
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectedListenerFailureBehavior -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectedListenerFailureBehavior
    291:560:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier -> io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier:
    io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    635:637:void <init>(io.netty.handler.ssl.OpenSslEngineMap) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslContext$DefaultOpenSslEngineMap -> io.netty.handler.ssl.ReferenceCountedOpenSslContext$DefaultOpenSslEngineMap:
    java.util.Map engines -> engines
    700:701:void <init>() -> <init>
    705:705:io.netty.handler.ssl.ReferenceCountedOpenSslEngine remove(long) -> remove
    710:711:void add(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> add
    700:700:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext$1) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslEngine -> io.netty.handler.ssl.ReferenceCountedOpenSslEngine:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    javax.net.ssl.SSLException BEGIN_HANDSHAKE_ENGINE_CLOSED -> BEGIN_HANDSHAKE_ENGINE_CLOSED
    javax.net.ssl.SSLException HANDSHAKE_ENGINE_CLOSED -> HANDSHAKE_ENGINE_CLOSED
    javax.net.ssl.SSLException RENEGOTIATION_UNSUPPORTED -> RENEGOTIATION_UNSUPPORTED
    io.netty.util.ResourceLeakDetector leakDetector -> leakDetector
    int[] OPENSSL_OP_NO_PROTOCOLS -> OPENSSL_OP_NO_PROTOCOLS
    int MAX_PLAINTEXT_LENGTH -> MAX_PLAINTEXT_LENGTH
    int MAX_RECORD_SIZE -> MAX_RECORD_SIZE
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater DESTROYED_UPDATER -> DESTROYED_UPDATER
    javax.net.ssl.SSLEngineResult NEED_UNWRAP_OK -> NEED_UNWRAP_OK
    javax.net.ssl.SSLEngineResult NEED_UNWRAP_CLOSED -> NEED_UNWRAP_CLOSED
    javax.net.ssl.SSLEngineResult NEED_WRAP_OK -> NEED_WRAP_OK
    javax.net.ssl.SSLEngineResult NEED_WRAP_CLOSED -> NEED_WRAP_CLOSED
    javax.net.ssl.SSLEngineResult CLOSED_NOT_HANDSHAKING -> CLOSED_NOT_HANDSHAKING
    long ssl -> ssl
    long networkBIO -> networkBIO
    boolean certificateSet -> certificateSet
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState handshakeState -> handshakeState
    boolean renegotiationPending -> renegotiationPending
    boolean receivedShutdown -> receivedShutdown
    int destroyed -> destroyed
    java.lang.String applicationProtocol -> applicationProtocol
    io.netty.util.ResourceLeakTracker leak -> leak
    io.netty.util.AbstractReferenceCounted refCnt -> refCnt
    io.netty.handler.ssl.ClientAuth clientAuth -> clientAuth
    long lastAccessed -> lastAccessed
    java.lang.String endPointIdentificationAlgorithm -> endPointIdentificationAlgorithm
    java.lang.Object algorithmConstraints -> algorithmConstraints
    java.util.List sniHostNames -> sniHostNames
    java.util.Collection matchers -> matchers
    boolean isInboundDone -> isInboundDone
    boolean outboundClosed -> outboundClosed
    boolean jdkCompatibilityMode -> jdkCompatibilityMode
    boolean clientMode -> clientMode
    io.netty.buffer.ByteBufAllocator alloc -> alloc
    io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator apn -> apn
    boolean rejectRemoteInitiatedRenegotiation -> rejectRemoteInitiatedRenegotiation
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$OpenSslSession session -> session
    java.security.cert.Certificate[] localCerts -> localCerts
    java.nio.ByteBuffer[] singleSrcBuffer -> singleSrcBuffer
    java.nio.ByteBuffer[] singleDstBuffer -> singleDstBuffer
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager -> keyMaterialManager
    boolean enableOcsp -> enableOcsp
    int maxWrapOverhead -> maxWrapOverhead
    int maxWrapBufferSize -> maxWrapBufferSize
    javax.net.ssl.SSLHandshakeException handshakeException -> handshakeException
    boolean $assertionsDisabled -> $assertionsDisabled
    165:302:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext,io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean) -> <init>
    342:342:int refCnt() -> refCnt
    347:348:io.netty.util.ReferenceCounted retain() -> retain
    353:354:io.netty.util.ReferenceCounted retain(int) -> retain
    359:360:io.netty.util.ReferenceCounted touch() -> touch
    365:366:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    371:371:boolean release() -> release
    376:376:boolean release(int) -> release
    385:390:javax.net.ssl.SSLSession getHandshakeSession() -> getHandshakeSession
    400:400:long sslPointer() -> sslPointer
    407:417:void shutdown() -> shutdown
    425:452:int writePlaintextData(java.nio.ByteBuffer,int) -> writePlaintextData
    459:479:io.netty.buffer.ByteBuf writeEncryptedData(java.nio.ByteBuffer,int) -> writeEncryptedData
    487:509:int readPlaintextData(java.nio.ByteBuffer) -> readPlaintextData
    523:523:int maxEncryptedPacketLength() -> maxEncryptedPacketLength
    531:531:int maxEncryptedPacketLength0() -> maxEncryptedPacketLength0
    540:540:int calculateMaxLengthForWrap(int,int) -> calculateMaxLengthForWrap
    544:544:int sslPending() -> sslPending
    551:557:void calculateMaxWrapOverhead() -> calculateMaxWrapOverhead
    564:564:int sslPending0() -> sslPending0
    568:568:boolean isBytesAvailableEnoughForWrap(int,int,int) -> isBytesAvailableEnoughForWrap
    575:820:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    824:824:javax.net.ssl.SSLEngineResult newResult(javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> newResult
    832:842:javax.net.ssl.SSLEngineResult newResult(javax.net.ssl.SSLEngineResult$Status,javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> newResult
    847:847:javax.net.ssl.SSLEngineResult newResultMayFinishHandshake(javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> newResultMayFinishHandshake
    854:854:javax.net.ssl.SSLEngineResult newResultMayFinishHandshake(javax.net.ssl.SSLEngineResult$Status,javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> newResultMayFinishHandshake
    862:863:javax.net.ssl.SSLException shutdownWithError(java.lang.String) -> shutdownWithError
    867:876:javax.net.ssl.SSLException shutdownWithError(java.lang.String,java.lang.String) -> shutdownWithError
    884:1106:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int) -> unwrap
    1110:1124:javax.net.ssl.SSLEngineResult sslReadErrorResult(int,int,int) -> sslReadErrorResult
    1128:1131:void closeAll() -> closeAll
    1137:1143:void rejectRemoteInitiatedRenegotiation() -> rejectRemoteInitiatedRenegotiation
    1146:1146:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],java.nio.ByteBuffer[]) -> unwrap
    1150:1151:java.nio.ByteBuffer[] singleSrcBuffer(java.nio.ByteBuffer) -> singleSrcBuffer
    1155:1156:void resetSingleSrcBuffer() -> resetSingleSrcBuffer
    1159:1160:java.nio.ByteBuffer[] singleDstBuffer(java.nio.ByteBuffer) -> singleDstBuffer
    1164:1165:void resetSingleDstBuffer() -> resetSingleDstBuffer
    1171:1173:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    1180:1182:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    1189:1192:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    1199:1201:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    1209:1209:java.lang.Runnable getDelegatedTask() -> getDelegatedTask
    1214:1230:void closeInbound() -> closeInbound
    1234:1234:boolean isInboundDone() -> isInboundDone
    1239:1254:void closeOutbound() -> closeOutbound
    1261:1281:boolean doSSLShutdown() -> doSSLShutdown
    1288:1288:boolean isOutboundDone() -> isOutboundDone
    1293:1293:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    1299:1317:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    1323:1362:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    1366:1366:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    1371:1398:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    1404:1404:boolean isProtocolEnabled(int,int,java.lang.String) -> isProtocolEnabled
    1418:1486:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    1490:1490:javax.net.ssl.SSLSession getSession() -> getSession
    1495:1558:void beginHandshake() -> beginHandshake
    1561:1564:void checkEngineClosed(javax.net.ssl.SSLException) -> checkEngineClosed
    1568:1568:javax.net.ssl.SSLEngineResult$HandshakeStatus pendingStatus(int) -> pendingStatus
    1572:1572:boolean isEmpty(java.lang.Object[]) -> isEmpty
    1576:1576:boolean isEmpty(byte[]) -> isEmpty
    1580:1635:javax.net.ssl.SSLEngineResult$HandshakeStatus handshake() -> handshake
    1640:1645:javax.net.ssl.SSLEngineResult$HandshakeStatus mayFinishHandshake(javax.net.ssl.SSLEngineResult$HandshakeStatus) -> mayFinishHandshake
    1651:1651:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus() -> getHandshakeStatus
    1656:1656:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus(int) -> getHandshakeStatus
    1660:1661:boolean needPendingStatus() -> needPendingStatus
    1668:1673:java.lang.String toJavaCipherSuite(java.lang.String) -> toJavaCipherSuite
    1681:1693:java.lang.String toJavaCipherSuitePrefix(java.lang.String) -> toJavaCipherSuitePrefix
    1699:1702:void setUseClientMode(boolean) -> setUseClientMode
    1706:1706:boolean getUseClientMode() -> getUseClientMode
    1711:1712:void setNeedClientAuth(boolean) -> setNeedClientAuth
    1716:1716:boolean getNeedClientAuth() -> getNeedClientAuth
    1721:1722:void setWantClientAuth(boolean) -> setWantClientAuth
    1726:1726:boolean getWantClientAuth() -> getWantClientAuth
    1739:1762:void setClientAuth(io.netty.handler.ssl.ClientAuth) -> setClientAuth
    1766:1769:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    1773:1773:boolean getEnableSessionCreation() -> getEnableSessionCreation
    1778:1796:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    1801:1840:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
    1843:1843:boolean isDestroyed() -> isDestroyed
    1852:1852:java.lang.String getNegotiatedApplicationProtocol() -> getNegotiatedApplicationProtocol
    93:93:io.netty.util.ResourceLeakTracker access$000(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$000
    93:93:boolean access$100(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$100
    93:93:long access$200(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$200
    93:93:long access$300(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$300
    93:93:java.lang.String access$400(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String) -> access$400
    93:93:void access$500(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$500
    93:93:io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState access$602(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState) -> access$602
    93:93:boolean access$700(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$700
    93:93:boolean access$800(java.lang.Object[]) -> access$800
    93:93:boolean access$900(byte[]) -> access$900
    93:93:io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator access$1000(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$1000
    93:93:java.lang.String access$1102(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String) -> access$1102
    93:93:java.security.cert.Certificate[] access$1200(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$1200
    93:93:int access$1300() -> access$1300
    93:139:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$1 -> io.netty.handler.ssl.ReferenceCountedOpenSslEngine$1:
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0 -> this$0
    173:173:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> <init>
    176:180:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    185:190:void deallocate() -> deallocate
    173:173:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2 -> io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2:
    int[] $SwitchMap$io$netty$handler$ssl$ReferenceCountedOpenSslEngine$HandshakeState -> $SwitchMap$io$netty$handler$ssl$ReferenceCountedOpenSslEngine$HandshakeState
    int[] $SwitchMap$io$netty$handler$ssl$ClientAuth -> $SwitchMap$io$netty$handler$ssl$ClientAuth
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol
    385:2063:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState -> io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState:
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState NOT_STARTED -> NOT_STARTED
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState STARTED_IMPLICITLY -> STARTED_IMPLICITLY
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState STARTED_EXPLICITLY -> STARTED_EXPLICITLY
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState FINISHED -> FINISHED
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState[] $VALUES -> $VALUES
    146:146:io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState[] values() -> values
    146:146:io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState valueOf(java.lang.String) -> valueOf
    146:146:void <init>(java.lang.String,int) -> <init>
    146:162:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$OpenSslSession -> io.netty.handler.ssl.ReferenceCountedOpenSslEngine$OpenSslSession:
    io.netty.handler.ssl.OpenSslSessionContext sessionContext -> sessionContext
    javax.security.cert.X509Certificate[] x509PeerCerts -> x509PeerCerts
    java.security.cert.Certificate[] peerCerts -> peerCerts
    java.lang.String protocol -> protocol
    java.lang.String cipher -> cipher
    byte[] id -> id
    long creationTime -> creationTime
    int applicationBufferSize -> applicationBufferSize
    java.util.Map values -> values
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0 -> this$0
    1866:1873:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,io.netty.handler.ssl.OpenSslSessionContext) -> <init>
    1877:1882:byte[] getId() -> getId
    1887:1887:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    1892:1897:long getCreationTime() -> getCreationTime
    1902:1904:long getLastAccessedTime() -> getLastAccessedTime
    1909:1914:void invalidate() -> invalidate
    1918:1923:boolean isValid() -> isValid
    1928:1944:void putValue(java.lang.String,java.lang.Object) -> putValue
    1948:1954:java.lang.Object getValue(java.lang.String) -> getValue
    1959:1968:void removeValue(java.lang.String) -> removeValue
    1972:1976:java.lang.String[] getValueNames() -> getValueNames
    1980:1983:void notifyUnbound(java.lang.Object,java.lang.String) -> notifyUnbound
    1990:2005:void handshakeFinished() -> handshakeFinished
    2013:2046:void initPeerCerts() -> initPeerCerts
    2049:2054:void initCerts(byte[][],int) -> initCerts
    2060:2095:void selectApplicationProtocol() -> selectApplicationProtocol
    2100:2111:java.lang.String selectApplicationProtocol(java.util.List,io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior,java.lang.String) -> selectApplicationProtocol
    2119:2124:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    2129:2132:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    2137:2142:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    2147:2150:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    2155:2159:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    2164:2169:java.lang.String getCipherSuite() -> getCipherSuite
    2174:2184:java.lang.String getProtocol() -> getProtocol
    2189:2189:java.lang.String getPeerHost() -> getPeerHost
    2194:2194:int getPeerPort() -> getPeerPort
    2199:2199:int getPacketBufferSize() -> getPacketBufferSize
    2204:2204:int getApplicationBufferSize() -> getApplicationBufferSize
    2214:2217:void tryExpandApplicationBufferSize(int) -> tryExpandApplicationBufferSize
    1855:1855:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslServerContext -> io.netty.handler.ssl.ReferenceCountedOpenSslServerContext:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    byte[] ID -> ID
    io.netty.handler.ssl.OpenSslServerSessionContext sessionContext -> sessionContext
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager -> keyMaterialManager
    59:62:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    70:85:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    89:89:io.netty.handler.ssl.OpenSslServerSessionContext sessionContext() -> sessionContext
    94:94:io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager() -> keyMaterialManager
    108:189:io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory) -> newSessionContext
    46:46:io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> sessionContext
    46:46:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    47:49:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ExtendedTrustManagerVerifyCallback -> io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ExtendedTrustManagerVerifyCallback:
    javax.net.ssl.X509ExtendedTrustManager manager -> manager
    211:213:void <init>(io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509ExtendedTrustManager) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$OpenSslSniHostnameMatcher -> io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$OpenSslSniHostnameMatcher:
    io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    225:227:void <init>(io.netty.handler.ssl.OpenSslEngineMap) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext -> io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext:
    io.netty.handler.ssl.OpenSslServerSessionContext sessionContext -> sessionContext
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager -> keyMaterialManager
    97:97:void <init>() -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$TrustManagerVerifyCallback -> io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$TrustManagerVerifyCallback:
    javax.net.ssl.X509TrustManager manager -> manager
    196:198:void <init>(io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509TrustManager) -> <init>
io.netty.handler.ssl.SniCompletionEvent -> io.netty.handler.ssl.SniCompletionEvent:
    java.lang.String hostname -> hostname
    28:30:void <init>(java.lang.String) -> <init>
    33:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    38:39:void <init>(java.lang.Throwable) -> <init>
    50:52:java.lang.String toString() -> toString
io.netty.handler.ssl.SniHandler -> io.netty.handler.ssl.SniHandler:
    io.netty.handler.ssl.SniHandler$Selection EMPTY_SELECTION -> EMPTY_SELECTION
    io.netty.util.AsyncMapping mapping -> mapping
    io.netty.handler.ssl.SniHandler$Selection selection -> selection
    50:51:void <init>(io.netty.util.Mapping) -> <init>
    41:72:void <init>(io.netty.util.AsyncMapping) -> <init>
    96:96:io.netty.util.concurrent.Future lookup(io.netty.channel.ChannelHandlerContext,java.lang.String) -> lookup
    102:118:void onLookupComplete(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.util.concurrent.Future) -> onLookupComplete
    130:143:void replaceHandler(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.handler.ssl.SslContext) -> replaceHandler
    37:37:void <clinit>() -> <clinit>
io.netty.handler.ssl.SniHandler$1 -> io.netty.handler.ssl.SniHandler$1:
io.netty.handler.ssl.SniHandler$AsyncMappingAdapter -> io.netty.handler.ssl.SniHandler$AsyncMappingAdapter:
    io.netty.util.Mapping mapping -> mapping
    148:150:void <init>(io.netty.util.Mapping) -> <init>
    156:160:io.netty.util.concurrent.Future map(java.lang.String,io.netty.util.concurrent.Promise) -> map
    145:145:io.netty.util.concurrent.Future map(java.lang.Object,io.netty.util.concurrent.Promise) -> map
    145:145:void <init>(io.netty.util.Mapping,io.netty.handler.ssl.SniHandler$1) -> <init>
io.netty.handler.ssl.SniHandler$Selection -> io.netty.handler.ssl.SniHandler$Selection:
    io.netty.handler.ssl.SslContext context -> context
    java.lang.String hostname -> hostname
    168:171:void <init>(io.netty.handler.ssl.SslContext,java.lang.String) -> <init>
io.netty.handler.ssl.SslCloseCompletionEvent -> io.netty.handler.ssl.SslCloseCompletionEvent:
    io.netty.handler.ssl.SslCloseCompletionEvent SUCCESS -> SUCCESS
    28:28:void <init>() -> <init>
    35:36:void <init>(java.lang.Throwable) -> <init>
    23:23:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslCompletionEvent -> io.netty.handler.ssl.SslCompletionEvent:
    java.lang.Throwable cause -> cause
    24:26:void <init>() -> <init>
    28:30:void <init>(java.lang.Throwable) -> <init>
    44:44:java.lang.Throwable cause() -> cause
    49:51:java.lang.String toString() -> toString
io.netty.handler.ssl.SslContext -> io.netty.handler.ssl.SslContext:
    java.security.cert.CertificateFactory X509_CERT_FACTORY -> X509_CERT_FACTORY
    boolean startTls -> startTls
    105:105:io.netty.handler.ssl.SslProvider defaultServerProvider() -> defaultServerProvider
    114:114:io.netty.handler.ssl.SslProvider defaultClientProvider() -> defaultClientProvider
    118:121:io.netty.handler.ssl.SslProvider defaultProvider() -> defaultProvider
    406:432:io.netty.handler.ssl.SslContext newServerContextInternal(io.netty.handler.ssl.SslProvider,java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> newServerContextInternal
    437:440:void verifyNullSslContextProvider(io.netty.handler.ssl.SslProvider,java.security.Provider) -> verifyNullSslContextProvider
    762:786:io.netty.handler.ssl.SslContext newClientContextInternal(io.netty.handler.ssl.SslProvider,java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long,boolean) -> newClientContextInternal
    806:807:void <init>() -> <init>
    812:814:void <init>(boolean) -> <init>
    820:820:boolean isServer() -> isServer
    boolean isClient() -> isClient
    javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator) -> newEngine
    javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newEngine
    javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    905:905:io.netty.handler.ssl.SslHandler newHandler(io.netty.buffer.ByteBufAllocator) -> newHandler
    913:913:io.netty.handler.ssl.SslHandler newHandler(io.netty.buffer.ByteBufAllocator,boolean) -> newHandler
    974:986:java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[]) -> generateKeySpec
    1001:1004:java.security.KeyStore buildKeyStore(java.security.cert.X509Certificate[],java.security.PrivateKey,char[]) -> buildKeyStore
    1011:1014:java.security.PrivateKey toPrivateKey(java.io.File,java.lang.String) -> toPrivateKey
    1031:1045:java.security.PrivateKey getPrivateKeyFromByteBuffer(io.netty.buffer.ByteBuf,java.lang.String) -> getPrivateKeyFromByteBuffer
    1067:1070:java.security.cert.X509Certificate[] toX509Certificates(java.io.File) -> toX509Certificates
    1081:1104:java.security.cert.X509Certificate[] getCertificatesFromBuffers(io.netty.buffer.ByteBuf[]) -> getCertificatesFromBuffers
    1110:1126:javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory) -> buildTrustManagerFactory
    1131:1133:java.security.PrivateKey toPrivateKeyInternal(java.io.File,java.lang.String) -> toPrivateKeyInternal
    1139:1141:java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File) -> toX509CertificatesInternal
    1149:1153:javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory) -> buildKeyManagerFactory
    1161:1169:javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.cert.X509Certificate[],java.lang.String,java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory) -> buildKeyManagerFactory
    91:95:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslContext$1 -> io.netty.handler.ssl.SslContext$1:
    int[] $SwitchMap$io$netty$handler$ssl$SslProvider -> $SwitchMap$io$netty$handler$ssl$SslProvider
    410:410:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslContextBuilder -> io.netty.handler.ssl.SslContextBuilder:
    boolean forServer -> forServer
    io.netty.handler.ssl.SslProvider provider -> provider
    java.security.Provider sslContextProvider -> sslContextProvider
    java.security.cert.X509Certificate[] trustCertCollection -> trustCertCollection
    javax.net.ssl.TrustManagerFactory trustManagerFactory -> trustManagerFactory
    java.security.cert.X509Certificate[] keyCertChain -> keyCertChain
    java.security.PrivateKey key -> key
    java.lang.String keyPassword -> keyPassword
    javax.net.ssl.KeyManagerFactory keyManagerFactory -> keyManagerFactory
    java.lang.Iterable ciphers -> ciphers
    io.netty.handler.ssl.CipherSuiteFilter cipherFilter -> cipherFilter
    io.netty.handler.ssl.ApplicationProtocolConfig apn -> apn
    long sessionCacheSize -> sessionCacheSize
    long sessionTimeout -> sessionTimeout
    io.netty.handler.ssl.ClientAuth clientAuth -> clientAuth
    java.lang.String[] protocols -> protocols
    boolean startTls -> startTls
    boolean enableOcsp -> enableOcsp
    43:43:io.netty.handler.ssl.SslContextBuilder forClient() -> forClient
    118:118:io.netty.handler.ssl.SslContextBuilder forServer(java.security.PrivateKey,java.lang.String,java.security.cert.X509Certificate[]) -> forServer
    128:128:io.netty.handler.ssl.SslContextBuilder forServer(javax.net.ssl.KeyManagerFactory) -> forServer
    141:152:void <init>(boolean) -> <init>
    158:159:io.netty.handler.ssl.SslContextBuilder sslProvider(io.netty.handler.ssl.SslProvider) -> sslProvider
    209:211:io.netty.handler.ssl.SslContextBuilder trustManager(javax.net.ssl.TrustManagerFactory) -> trustManager
    308:328:io.netty.handler.ssl.SslContextBuilder keyManager(java.security.PrivateKey,java.lang.String,java.security.cert.X509Certificate[]) -> keyManager
    340:347:io.netty.handler.ssl.SslContextBuilder keyManager(javax.net.ssl.KeyManagerFactory) -> keyManager
    355:355:io.netty.handler.ssl.SslContextBuilder ciphers(java.lang.Iterable) -> ciphers
    364:367:io.netty.handler.ssl.SslContextBuilder ciphers(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter) -> ciphers
    374:375:io.netty.handler.ssl.SslContextBuilder applicationProtocolConfig(io.netty.handler.ssl.ApplicationProtocolConfig) -> applicationProtocolConfig
    440:446:io.netty.handler.ssl.SslContext build() -> build
io.netty.handler.ssl.SslHandler -> io.netty.handler.ssl.SslHandler:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.regex.Pattern IGNORABLE_CLASS_IN_STACK -> IGNORABLE_CLASS_IN_STACK
    java.util.regex.Pattern IGNORABLE_ERROR_MESSAGE -> IGNORABLE_ERROR_MESSAGE
    javax.net.ssl.SSLException SSLENGINE_CLOSED -> SSLENGINE_CLOSED
    javax.net.ssl.SSLException HANDSHAKE_TIMED_OUT -> HANDSHAKE_TIMED_OUT
    java.nio.channels.ClosedChannelException CHANNEL_CLOSED -> CHANNEL_CLOSED
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    javax.net.ssl.SSLEngine engine -> engine
    io.netty.handler.ssl.SslHandler$SslEngineType engineType -> engineType
    java.util.concurrent.Executor delegatedTaskExecutor -> delegatedTaskExecutor
    boolean jdkCompatibilityMode -> jdkCompatibilityMode
    java.nio.ByteBuffer[] singleBuffer -> singleBuffer
    boolean startTls -> startTls
    boolean sentFirstMessage -> sentFirstMessage
    boolean flushedBeforeHandshake -> flushedBeforeHandshake
    boolean readDuringHandshake -> readDuringHandshake
    boolean handshakeStarted -> handshakeStarted
    io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue pendingUnencryptedWrites -> pendingUnencryptedWrites
    io.netty.util.concurrent.Promise handshakePromise -> handshakePromise
    io.netty.handler.ssl.SslHandler$LazyChannelPromise sslClosePromise -> sslClosePromise
    boolean needsFlush -> needsFlush
    boolean outboundClosed -> outboundClosed
    int packetLength -> packetLength
    boolean firedChannelRead -> firedChannelRead
    long handshakeTimeoutMillis -> handshakeTimeoutMillis
    long closeNotifyFlushTimeoutMillis -> closeNotifyFlushTimeoutMillis
    long closeNotifyReadTimeoutMillis -> closeNotifyReadTimeoutMillis
    int wrapDataSize -> wrapDataSize
    boolean $assertionsDisabled -> $assertionsDisabled
    406:407:void <init>(javax.net.ssl.SSLEngine) -> <init>
    418:419:void <init>(javax.net.ssl.SSLEngine,boolean) -> <init>
    368:446:void <init>(javax.net.ssl.SSLEngine,boolean,java.util.concurrent.Executor) -> <init>
    579:579:javax.net.ssl.SSLEngine engine() -> engine
    588:593:java.lang.String applicationProtocol() -> applicationProtocol
    603:603:io.netty.util.concurrent.Future handshakeFuture() -> handshakeFuture
    656:665:void handlerRemoved0(io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    669:670:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    675:676:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    680:681:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    686:687:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    692:693:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    697:702:void read(io.netty.channel.ChannelHandlerContext) -> read
    705:705:java.lang.IllegalStateException newPendingWritesNullException() -> newPendingWritesNullException
    710:720:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    726:739:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    742:759:void wrapAndFlush(io.netty.channel.ChannelHandlerContext) -> wrapAndFlush
    763:838:void wrap(io.netty.channel.ChannelHandlerContext,boolean) -> wrap
    842:864:void finishWrap(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise,boolean,boolean) -> finishWrap
    873:941:boolean wrapNonAppData(io.netty.channel.ChannelHandlerContext,boolean) -> wrapNonAppData
    946:996:javax.net.ssl.SSLEngineResult wrap(io.netty.buffer.ByteBufAllocator,javax.net.ssl.SSLEngine,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> wrap
    1005:1011:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    1015:1032:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    1044:1098:boolean ignoreException(java.lang.Throwable) -> ignoreException
    1122:1167:void decodeJdkCompatible(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> decodeJdkCompatible
    1171:1175:void decodeNonJdkCompatible(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> decodeNonJdkCompatible
    1181:1189:void handleUnwrapThrowable(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> handleUnwrapThrowable
    1193:1198:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    1203:1210:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    1214:1219:void readIfNeeded(io.netty.channel.ChannelHandlerContext) -> readIfNeeded
    1222:1225:void flushIfNeeded(io.netty.channel.ChannelHandlerContext) -> flushIfNeeded
    1231:1232:void unwrapNonAppData(io.netty.channel.ChannelHandlerContext) -> unwrapNonAppData
    1239:1386:int unwrap(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,int,int) -> unwrap
    1390:1391:java.nio.ByteBuffer toByteBuffer(io.netty.buffer.ByteBuf,int,int) -> toByteBuffer
    1401:1455:void runDelegatedTasks() -> runDelegatedTasks
    1465:1469:boolean setHandshakeSuccessIfStillHandshaking() -> setHandshakeSuccessIfStillHandshaking
    1476:1487:void setHandshakeSuccess() -> setHandshakeSuccess
    1493:1494:void setHandshakeFailure(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> setHandshakeFailure
    1503:1526:void setHandshakeFailure(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,boolean,boolean) -> setHandshakeFailure
    1529:1532:void releaseAndFailAll(java.lang.Throwable) -> releaseAndFailAll
    1535:1538:void notifyHandshakeFailure(java.lang.Throwable,boolean) -> notifyHandshakeFailure
    1541:1550:void notifyClosePromise(java.lang.Throwable) -> notifyClosePromise
    1554:1581:void closeOutboundAndChannel(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise,boolean) -> closeOutboundAndChannel
    1584:1590:void flush(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> flush
    1594:1600:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    1603:1612:void startHandshakeProcessing() -> startHandshakeProcessing
    1663:1703:void handshake(io.netty.util.concurrent.Promise) -> handshake
    1706:1734:void applyHandshakeTimeout(io.netty.util.concurrent.Promise) -> applyHandshakeTimeout
    1737:1739:void forceFlush(io.netty.channel.ChannelHandlerContext) -> forceFlush
    1746:1750:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    1755:1830:void safeClose(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise) -> safeClose
    1839:1840:void addCloseListener(io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise) -> addCloseListener
    1847:1851:io.netty.buffer.ByteBuf allocate(io.netty.channel.ChannelHandlerContext,int) -> allocate
    1860:1860:io.netty.buffer.ByteBuf allocateOutNetBuf(io.netty.channel.ChannelHandlerContext,int,int) -> allocateOutNetBuf
    1913:1926:boolean attemptCopyToCumulation(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int) -> attemptCopyToCumulation
    165:165:javax.net.ssl.SSLEngine access$100(io.netty.handler.ssl.SslHandler) -> access$100
    165:165:java.nio.ByteBuffer[] access$200(io.netty.handler.ssl.SslHandler) -> access$200
    165:165:java.nio.ByteBuffer access$300(io.netty.buffer.ByteBuf,int,int) -> access$300
    165:165:boolean access$502(io.netty.handler.ssl.SslHandler,boolean) -> access$502
    165:165:void access$600(io.netty.handler.ssl.SslHandler,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> access$600
    165:165:io.netty.util.internal.logging.InternalLogger access$700() -> access$700
    165:165:io.netty.channel.ChannelHandlerContext access$800(io.netty.handler.ssl.SslHandler) -> access$800
    165:165:javax.net.ssl.SSLException access$1000() -> access$1000
    165:165:void access$1100(io.netty.handler.ssl.SslHandler,java.lang.Throwable,boolean) -> access$1100
    165:165:void access$1200(io.netty.handler.ssl.SslHandler,java.lang.Throwable) -> access$1200
    165:165:void access$1300(io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise) -> access$1300
    165:165:long access$1400(io.netty.handler.ssl.SslHandler) -> access$1400
    165:165:io.netty.handler.ssl.SslHandler$LazyChannelPromise access$1500(io.netty.handler.ssl.SslHandler) -> access$1500
    165:165:boolean access$1600(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int) -> access$1600
    165:184:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslHandler$1 -> io.netty.handler.ssl.SslHandler$1:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.handler.ssl.SslHandler this$0 -> this$0
    628:637:void run() -> run
io.netty.handler.ssl.SslHandler$2 -> io.netty.handler.ssl.SslHandler$2:
    java.util.List val$tasks -> val$tasks
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.netty.handler.ssl.SslHandler this$0 -> this$0
    1426:1426:void <init>(io.netty.handler.ssl.SslHandler,java.util.List,java.util.concurrent.CountDownLatch) -> <init>
    1430:1438:void run() -> run
io.netty.handler.ssl.SslHandler$4 -> io.netty.handler.ssl.SslHandler$4:
    io.netty.util.concurrent.Promise val$newHandshakePromise -> val$newHandshakePromise
    io.netty.handler.ssl.SslHandler this$0 -> this$0
    1668:1668:void <init>(io.netty.handler.ssl.SslHandler,io.netty.util.concurrent.Promise) -> <init>
    1671:1676:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.ssl.SslHandler$5 -> io.netty.handler.ssl.SslHandler$5:
    io.netty.util.concurrent.Promise val$promise -> val$promise
    io.netty.handler.ssl.SslHandler this$0 -> this$0
    1713:1713:void <init>(io.netty.handler.ssl.SslHandler,io.netty.util.concurrent.Promise) -> <init>
    1716:1724:void run() -> run
io.netty.handler.ssl.SslHandler$6 -> io.netty.handler.ssl.SslHandler$6:
    java.util.concurrent.ScheduledFuture val$timeoutFuture -> val$timeoutFuture
    io.netty.handler.ssl.SslHandler this$0 -> this$0
    1728:1728:void <init>(io.netty.handler.ssl.SslHandler,java.util.concurrent.ScheduledFuture) -> <init>
    1731:1732:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.ssl.SslHandler$7 -> io.netty.handler.ssl.SslHandler$7:
    io.netty.channel.ChannelFuture val$flushFuture -> val$flushFuture
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.handler.ssl.SslHandler this$0 -> this$0
    1765:1765:void <init>(io.netty.handler.ssl.SslHandler,io.netty.channel.ChannelFuture,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    1769:1774:void run() -> run
io.netty.handler.ssl.SslHandler$8 -> io.netty.handler.ssl.SslHandler$8:
    java.util.concurrent.ScheduledFuture val$timeoutFuture -> val$timeoutFuture
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.handler.ssl.SslHandler this$0 -> this$0
    1784:1784:void <init>(io.netty.handler.ssl.SslHandler,java.util.concurrent.ScheduledFuture,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    1788:1828:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    1784:1784:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.ssl.SslHandler$8$1 -> io.netty.handler.ssl.SslHandler$8$1:
    long val$closeNotifyReadTimeout -> val$closeNotifyReadTimeout
    io.netty.handler.ssl.SslHandler$8 this$1 -> this$1
    1800:1800:void <init>(io.netty.handler.ssl.SslHandler$8,long) -> <init>
    1803:1811:void run() -> run
io.netty.handler.ssl.SslHandler$8$2 -> io.netty.handler.ssl.SslHandler$8$2:
    java.util.concurrent.ScheduledFuture val$closeNotifyReadTimeoutFuture -> val$closeNotifyReadTimeoutFuture
    io.netty.handler.ssl.SslHandler$8 this$1 -> this$1
    1818:1818:void <init>(io.netty.handler.ssl.SslHandler$8,java.util.concurrent.ScheduledFuture) -> <init>
    1821:1825:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.ssl.SslHandler$9 -> io.netty.handler.ssl.SslHandler$9:
    int[] $SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus -> $SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus
    int[] $SwitchMap$javax$net$ssl$SSLEngineResult$Status -> $SwitchMap$javax$net$ssl$SSLEngineResult$Status
    807:983:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslHandler$LazyChannelPromise -> io.netty.handler.ssl.SslHandler$LazyChannelPromise:
    io.netty.handler.ssl.SslHandler this$0 -> this$0
    1929:1929:void <init>(io.netty.handler.ssl.SslHandler) -> <init>
    1933:1936:io.netty.util.concurrent.EventExecutor executor() -> executor
    1941:1951:void checkDeadLock() -> checkDeadLock
    1929:1929:void <init>(io.netty.handler.ssl.SslHandler,io.netty.handler.ssl.SslHandler$1) -> <init>
io.netty.handler.ssl.SslHandler$SslEngineType -> io.netty.handler.ssl.SslHandler$SslEngineType:
    io.netty.handler.ssl.SslHandler$SslEngineType TCNATIVE -> TCNATIVE
    io.netty.handler.ssl.SslHandler$SslEngineType CONSCRYPT -> CONSCRYPT
    io.netty.handler.ssl.SslHandler$SslEngineType JDK -> JDK
    boolean wantsDirectBuffer -> wantsDirectBuffer
    io.netty.handler.codec.ByteToMessageDecoder$Cumulator cumulator -> cumulator
    io.netty.handler.ssl.SslHandler$SslEngineType[] $VALUES -> $VALUES
    193:193:io.netty.handler.ssl.SslHandler$SslEngineType[] values() -> values
    193:193:io.netty.handler.ssl.SslHandler$SslEngineType valueOf(java.lang.String) -> valueOf
    315:315:io.netty.handler.ssl.SslHandler$SslEngineType forEngine(javax.net.ssl.SSLEngine) -> forEngine
    319:322:void <init>(java.lang.String,int,boolean,io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    javax.net.ssl.SSLEngineResult unwrap(io.netty.handler.ssl.SslHandler,io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf) -> unwrap
    int calculateWrapBufferCapacity(io.netty.handler.ssl.SslHandler,int,int) -> calculateWrapBufferCapacity
    int calculatePendingData(io.netty.handler.ssl.SslHandler,int) -> calculatePendingData
    boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> jdkCompatibilityMode
    193:193:void <init>(java.lang.String,int,boolean,io.netty.handler.codec.ByteToMessageDecoder$Cumulator,io.netty.handler.ssl.SslHandler$1) -> <init>
    193:287:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslHandler$SslEngineType$1 -> io.netty.handler.ssl.SslHandler$SslEngineType$1:
    194:194:void <init>(java.lang.String,int,boolean,io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    198:220:javax.net.ssl.SSLEngineResult unwrap(io.netty.handler.ssl.SslHandler,io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf) -> unwrap
    230:230:int calculateWrapBufferCapacity(io.netty.handler.ssl.SslHandler,int,int) -> calculateWrapBufferCapacity
    236:237:int calculatePendingData(io.netty.handler.ssl.SslHandler,int) -> calculatePendingData
    242:242:boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> jdkCompatibilityMode
io.netty.handler.ssl.SslHandler$SslEngineType$2 -> io.netty.handler.ssl.SslHandler$SslEngineType$2:
    245:245:void <init>(java.lang.String,int,boolean,io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    249:269:javax.net.ssl.SSLEngineResult unwrap(io.netty.handler.ssl.SslHandler,io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf) -> unwrap
    274:274:int calculateWrapBufferCapacity(io.netty.handler.ssl.SslHandler,int,int) -> calculateWrapBufferCapacity
    279:279:int calculatePendingData(io.netty.handler.ssl.SslHandler,int) -> calculatePendingData
    284:284:boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> jdkCompatibilityMode
io.netty.handler.ssl.SslHandler$SslEngineType$3 -> io.netty.handler.ssl.SslHandler$SslEngineType$3:
    287:287:void <init>(java.lang.String,int,boolean,io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    291:295:javax.net.ssl.SSLEngineResult unwrap(io.netty.handler.ssl.SslHandler,io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf) -> unwrap
    300:300:int calculateWrapBufferCapacity(io.netty.handler.ssl.SslHandler,int,int) -> calculateWrapBufferCapacity
    305:305:int calculatePendingData(io.netty.handler.ssl.SslHandler,int) -> calculatePendingData
    310:310:boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> jdkCompatibilityMode
io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue -> io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue:
    io.netty.handler.ssl.SslHandler this$0 -> this$0
    1870:1872:void <init>(io.netty.handler.ssl.SslHandler,io.netty.channel.Channel,int) -> <init>
    1876:1887:io.netty.buffer.ByteBuf compose(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> compose
    1892:1903:io.netty.buffer.ByteBuf composeFirst(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf) -> composeFirst
    1908:1908:io.netty.buffer.ByteBuf removeEmptyValue() -> removeEmptyValue
io.netty.handler.ssl.SslHandshakeCompletionEvent -> io.netty.handler.ssl.SslHandshakeCompletionEvent:
    io.netty.handler.ssl.SslHandshakeCompletionEvent SUCCESS -> SUCCESS
    30:30:void <init>() -> <init>
    37:38:void <init>(java.lang.Throwable) -> <init>
    25:25:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslProvider -> io.netty.handler.ssl.SslProvider:
    io.netty.handler.ssl.SslProvider JDK -> JDK
    io.netty.handler.ssl.SslProvider OPENSSL -> OPENSSL
    io.netty.handler.ssl.SslProvider OPENSSL_REFCNT -> OPENSSL_REFCNT
    io.netty.handler.ssl.SslProvider[] $VALUES -> $VALUES
    25:25:io.netty.handler.ssl.SslProvider[] values() -> values
    25:25:io.netty.handler.ssl.SslProvider valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:37:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslUtils -> io.netty.handler.ssl.SslUtils:
    java.lang.String[] DEFAULT_CIPHER_SUITES -> DEFAULT_CIPHER_SUITES
    106:111:void addIfSupported(java.util.Set,java.util.List,java.lang.String[]) -> addIfSupported
    114:122:void useFallbackCiphersIfDefaultIsEmpty(java.util.List,java.lang.Iterable) -> useFallbackCiphersIfDefaultIsEmpty
    125:126:void useFallbackCiphersIfDefaultIsEmpty(java.util.List,java.lang.String[]) -> useFallbackCiphersIfDefaultIsEmpty
    132:136:javax.net.ssl.SSLHandshakeException toSSLHandshakeException(java.lang.Throwable) -> toSSLHandshakeException
    157:205:int getEncryptedPacketLength(io.netty.buffer.ByteBuf,int) -> getEncryptedPacketLength
    211:212:int unsignedShortBE(io.netty.buffer.ByteBuf,int) -> unsignedShortBE
    218:219:short shortBE(io.netty.buffer.ByteBuf,int) -> shortBE
    223:223:short unsignedByte(byte) -> unsignedByte
    228:228:int unsignedShortBE(java.nio.ByteBuffer,int) -> unsignedShortBE
    233:234:short shortBE(java.nio.ByteBuffer,int) -> shortBE
    238:258:int getEncryptedPacketLength(java.nio.ByteBuffer[],int) -> getEncryptedPacketLength
    262:310:int getEncryptedPacketLength(java.nio.ByteBuffer) -> getEncryptedPacketLength
    316:321:void notifyHandshakeFailure(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,boolean) -> notifyHandshakeFailure
    327:330:void zeroout(io.netty.buffer.ByteBuf) -> zeroout
    336:338:void zerooutAndRelease(io.netty.buffer.ByteBuf) -> zerooutAndRelease
    346:349:io.netty.buffer.ByteBuf toBase64(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf) -> toBase64
    87:87:void <clinit>() -> <clinit>
io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator -> io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator:
    java.security.Provider PROVIDER -> PROVIDER
    47:59:java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date) -> generate
    43:43:void <clinit>() -> <clinit>
io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator:
    47:79:java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date) -> generate
io.netty.handler.ssl.util.SelfSignedCertificate -> io.netty.handler.ssl.util.SelfSignedCertificate:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Date DEFAULT_NOT_BEFORE -> DEFAULT_NOT_BEFORE
    java.util.Date DEFAULT_NOT_AFTER -> DEFAULT_NOT_AFTER
    java.io.File certificate -> certificate
    java.io.File privateKey -> privateKey
    java.security.cert.X509Certificate cert -> cert
    java.security.PrivateKey key -> key
    79:80:void <init>() -> <init>
    88:89:void <init>(java.util.Date,java.util.Date) -> <init>
    110:111:void <init>(java.lang.String,java.util.Date,java.util.Date) -> <init>
    134:182:void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date) -> <init>
    202:202:java.security.cert.X509Certificate cert() -> cert
    216:218:void delete() -> delete
    223:286:java.lang.String[] newSelfSignedCertificate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate) -> newSelfSignedCertificate
    290:293:void safeDelete(java.io.File) -> safeDelete
    297:301:void safeClose(java.io.File,java.io.OutputStream) -> safeClose
    61:67:void <clinit>() -> <clinit>
io.netty.handler.ssl.util.ThreadLocalInsecureRandom -> io.netty.handler.ssl.util.ThreadLocalInsecureRandom:
    java.security.SecureRandom INSTANCE -> INSTANCE
    35:35:java.security.SecureRandom current() -> current
    38:38:void <init>() -> <init>
    42:42:java.lang.String getAlgorithm() -> getAlgorithm
    46:46:void setSeed(byte[]) -> setSeed
    49:49:void setSeed(long) -> setSeed
    53:54:void nextBytes(byte[]) -> nextBytes
    58:60:byte[] generateSeed(int) -> generateSeed
    65:65:int nextInt() -> nextInt
    70:70:int nextInt(int) -> nextInt
    75:75:boolean nextBoolean() -> nextBoolean
    80:80:long nextLong() -> nextLong
    85:85:float nextFloat() -> nextFloat
    90:90:double nextDouble() -> nextDouble
    95:95:double nextGaussian() -> nextGaussian
    99:99:java.util.Random random() -> random
    32:32:void <clinit>() -> <clinit>
io.netty.handler.stream.ChunkedFile -> io.netty.handler.stream.ChunkedFile:
    java.io.RandomAccessFile file -> file
    long startOffset -> startOffset
    long endOffset -> endOffset
    int chunkSize -> chunkSize
    long offset -> offset
    84:108:void <init>(java.io.RandomAccessFile,long,long,int) -> <init>
    114:114:long startOffset() -> startOffset
    121:121:long endOffset() -> endOffset
    133:133:boolean isEndOfInput() -> isEndOfInput
    138:139:void close() -> close
    149:167:io.netty.buffer.ByteBuf readChunk(io.netty.buffer.ByteBufAllocator) -> readChunk
    174:174:long length() -> length
    179:179:long progress() -> progress
    34:34:java.lang.Object readChunk(io.netty.buffer.ByteBufAllocator) -> readChunk
io.netty.handler.stream.ChunkedInput -> io.netty.handler.stream.ChunkedInput:
    boolean isEndOfInput() -> isEndOfInput
    void close() -> close
    java.lang.Object readChunk(io.netty.buffer.ByteBufAllocator) -> readChunk
    long length() -> length
    long progress() -> progress
io.netty.handler.stream.ChunkedWriteHandler -> io.netty.handler.stream.ChunkedWriteHandler:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Queue queue -> queue
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    io.netty.handler.stream.ChunkedWriteHandler$PendingWrite currentWrite -> currentWrite
    73:78:void <init>() -> <init>
    93:94:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    100:128:void resumeTransfer() -> resumeTransfer
    132:133:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    137:138:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    142:144:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    148:153:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    157:193:void discard(java.lang.Throwable) -> discard
    196:318:void doFlush(io.netty.channel.ChannelHandlerContext) -> doFlush
    322:328:void closeInput(io.netty.handler.stream.ChunkedInput) -> closeInput
    68:68:void access$000(io.netty.handler.stream.ChunkedWriteHandler,io.netty.channel.ChannelHandlerContext) -> access$000
    68:68:io.netty.util.internal.logging.InternalLogger access$100() -> access$100
    70:71:void <clinit>() -> <clinit>
io.netty.handler.stream.ChunkedWriteHandler$1 -> io.netty.handler.stream.ChunkedWriteHandler$1:
    io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    io.netty.handler.stream.ChunkedWriteHandler this$0 -> this$0
    114:114:void <init>(io.netty.handler.stream.ChunkedWriteHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    119:125:void run() -> run
io.netty.handler.stream.ChunkedWriteHandler$2 -> io.netty.handler.stream.ChunkedWriteHandler$2:
    io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite -> val$currentWrite
    io.netty.handler.stream.ChunkedInput val$chunks -> val$chunks
    io.netty.handler.stream.ChunkedWriteHandler this$0 -> this$0
    264:264:void <init>(io.netty.handler.stream.ChunkedWriteHandler,io.netty.handler.stream.ChunkedWriteHandler$PendingWrite,io.netty.handler.stream.ChunkedInput) -> <init>
    267:270:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    264:264:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.stream.ChunkedWriteHandler$3 -> io.netty.handler.stream.ChunkedWriteHandler$3:
    java.lang.Object val$pendingMessage -> val$pendingMessage
    io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite -> val$currentWrite
    io.netty.handler.stream.ChunkedInput val$chunks -> val$chunks
    io.netty.handler.stream.ChunkedWriteHandler this$0 -> this$0
    273:273:void <init>(io.netty.handler.stream.ChunkedWriteHandler,java.lang.Object,io.netty.handler.stream.ChunkedWriteHandler$PendingWrite,io.netty.handler.stream.ChunkedInput) -> <init>
    276:282:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    273:273:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.stream.ChunkedWriteHandler$4 -> io.netty.handler.stream.ChunkedWriteHandler$4:
    java.lang.Object val$pendingMessage -> val$pendingMessage
    io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite -> val$currentWrite
    io.netty.handler.stream.ChunkedInput val$chunks -> val$chunks
    io.netty.channel.Channel val$channel -> val$channel
    io.netty.handler.stream.ChunkedWriteHandler this$0 -> this$0
    285:285:void <init>(io.netty.handler.stream.ChunkedWriteHandler,java.lang.Object,io.netty.handler.stream.ChunkedWriteHandler$PendingWrite,io.netty.handler.stream.ChunkedInput,io.netty.channel.Channel) -> <init>
    288:297:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    285:285:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.stream.ChunkedWriteHandler$PendingWrite -> io.netty.handler.stream.ChunkedWriteHandler$PendingWrite:
    java.lang.Object msg -> msg
    io.netty.channel.ChannelPromise promise -> promise
    334:337:void <init>(java.lang.Object,io.netty.channel.ChannelPromise) -> <init>
    340:342:void fail(java.lang.Throwable) -> fail
    345:356:void success(long) -> success
    359:362:void progress(long,long) -> progress
io.netty.handler.timeout.IdleState -> io.netty.handler.timeout.IdleState:
    io.netty.handler.timeout.IdleState READER_IDLE -> READER_IDLE
    io.netty.handler.timeout.IdleState WRITER_IDLE -> WRITER_IDLE
    io.netty.handler.timeout.IdleState ALL_IDLE -> ALL_IDLE
    io.netty.handler.timeout.IdleState[] $VALUES -> $VALUES
    24:24:io.netty.handler.timeout.IdleState[] values() -> values
    24:24:io.netty.handler.timeout.IdleState valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:36:void <clinit>() -> <clinit>
io.netty.handler.timeout.IdleStateEvent -> io.netty.handler.timeout.IdleStateEvent:
    io.netty.handler.timeout.IdleStateEvent FIRST_READER_IDLE_STATE_EVENT -> FIRST_READER_IDLE_STATE_EVENT
    io.netty.handler.timeout.IdleStateEvent READER_IDLE_STATE_EVENT -> READER_IDLE_STATE_EVENT
    io.netty.handler.timeout.IdleStateEvent FIRST_WRITER_IDLE_STATE_EVENT -> FIRST_WRITER_IDLE_STATE_EVENT
    io.netty.handler.timeout.IdleStateEvent WRITER_IDLE_STATE_EVENT -> WRITER_IDLE_STATE_EVENT
    io.netty.handler.timeout.IdleStateEvent FIRST_ALL_IDLE_STATE_EVENT -> FIRST_ALL_IDLE_STATE_EVENT
    io.netty.handler.timeout.IdleStateEvent ALL_IDLE_STATE_EVENT -> ALL_IDLE_STATE_EVENT
    io.netty.handler.timeout.IdleState state -> state
    boolean first -> first
    41:44:void <init>(io.netty.handler.timeout.IdleState,boolean) -> <init>
    50:50:io.netty.handler.timeout.IdleState state() -> state
    25:30:void <clinit>() -> <clinit>
io.netty.handler.timeout.IdleStateHandler -> io.netty.handler.timeout.IdleStateHandler:
    long MIN_TIMEOUT_NANOS -> MIN_TIMEOUT_NANOS
    io.netty.channel.ChannelFutureListener writeListener -> writeListener
    boolean observeOutput -> observeOutput
    long readerIdleTimeNanos -> readerIdleTimeNanos
    long writerIdleTimeNanos -> writerIdleTimeNanos
    long allIdleTimeNanos -> allIdleTimeNanos
    java.util.concurrent.ScheduledFuture readerIdleTimeout -> readerIdleTimeout
    long lastReadTime -> lastReadTime
    boolean firstReaderIdleEvent -> firstReaderIdleEvent
    java.util.concurrent.ScheduledFuture writerIdleTimeout -> writerIdleTimeout
    long lastWriteTime -> lastWriteTime
    boolean firstWriterIdleEvent -> firstWriterIdleEvent
    java.util.concurrent.ScheduledFuture allIdleTimeout -> allIdleTimeout
    boolean firstAllIdleEvent -> firstAllIdleEvent
    byte state -> state
    boolean reading -> reading
    long lastChangeCheckTimeStamp -> lastChangeCheckTimeStamp
    int lastMessageHashCode -> lastMessageHashCode
    long lastPendingWriteBytes -> lastPendingWriteBytes
    154:156:void <init>(int,int,int) -> <init>
    164:165:void <init>(long,long,long,java.util.concurrent.TimeUnit) -> <init>
    102:213:void <init>(boolean,long,long,long,java.util.concurrent.TimeUnit) -> <init>
    241:249:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    253:254:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    259:263:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    270:272:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    276:278:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    282:287:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    291:296:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    301:306:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    311:333:void initialize(io.netty.channel.ChannelHandlerContext) -> initialize
    339:339:long ticksInNanos() -> ticksInNanos
    346:346:java.util.concurrent.ScheduledFuture schedule(io.netty.channel.ChannelHandlerContext,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    350:364:void destroy() -> destroy
    371:372:void channelIdle(io.netty.channel.ChannelHandlerContext,io.netty.handler.timeout.IdleStateEvent) -> channelIdle
    378:386:io.netty.handler.timeout.IdleStateEvent newIdleStateEvent(io.netty.handler.timeout.IdleState,boolean) -> newIdleStateEvent
    394:404:void initOutputChanged(io.netty.channel.ChannelHandlerContext) -> initOutputChanged
    414:449:boolean hasOutputChanged(io.netty.channel.ChannelHandlerContext,boolean) -> hasOutputChanged
    98:98:long access$002(io.netty.handler.timeout.IdleStateHandler,long) -> access$002
    98:98:boolean access$102(io.netty.handler.timeout.IdleStateHandler,boolean) -> access$102
    98:98:boolean access$202(io.netty.handler.timeout.IdleStateHandler,boolean) -> access$202
    98:98:long access$300(io.netty.handler.timeout.IdleStateHandler) -> access$300
    98:98:boolean access$400(io.netty.handler.timeout.IdleStateHandler) -> access$400
    98:98:long access$500(io.netty.handler.timeout.IdleStateHandler) -> access$500
    98:98:java.util.concurrent.ScheduledFuture access$602(io.netty.handler.timeout.IdleStateHandler,java.util.concurrent.ScheduledFuture) -> access$602
    98:98:boolean access$700(io.netty.handler.timeout.IdleStateHandler) -> access$700
    98:98:boolean access$702(io.netty.handler.timeout.IdleStateHandler,boolean) -> access$702
    98:98:long access$000(io.netty.handler.timeout.IdleStateHandler) -> access$000
    98:98:long access$800(io.netty.handler.timeout.IdleStateHandler) -> access$800
    98:98:java.util.concurrent.ScheduledFuture access$902(io.netty.handler.timeout.IdleStateHandler,java.util.concurrent.ScheduledFuture) -> access$902
    98:98:boolean access$100(io.netty.handler.timeout.IdleStateHandler) -> access$100
    98:98:boolean access$1000(io.netty.handler.timeout.IdleStateHandler,io.netty.channel.ChannelHandlerContext,boolean) -> access$1000
    98:98:long access$1100(io.netty.handler.timeout.IdleStateHandler) -> access$1100
    98:98:java.util.concurrent.ScheduledFuture access$1202(io.netty.handler.timeout.IdleStateHandler,java.util.concurrent.ScheduledFuture) -> access$1202
    98:98:boolean access$200(io.netty.handler.timeout.IdleStateHandler) -> access$200
    99:99:void <clinit>() -> <clinit>
io.netty.handler.timeout.IdleStateHandler$1 -> io.netty.handler.timeout.IdleStateHandler$1:
    io.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    102:102:void <init>(io.netty.handler.timeout.IdleStateHandler) -> <init>
    105:107:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    102:102:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.timeout.IdleStateHandler$2 -> io.netty.handler.timeout.IdleStateHandler$2:
    int[] $SwitchMap$io$netty$handler$timeout$IdleState -> $SwitchMap$io$netty$handler$timeout$IdleState
    378:378:void <clinit>() -> <clinit>
io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask -> io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask:
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    456:458:void <init>(io.netty.channel.ChannelHandlerContext) -> <init>
    462:467:void run() -> run
    void run(io.netty.channel.ChannelHandlerContext) -> run
io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask -> io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask:
    io.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    542:544:void <init>(io.netty.handler.timeout.IdleStateHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    549:576:void run(io.netty.channel.ChannelHandlerContext) -> run
io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask -> io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask:
    io.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    474:476:void <init>(io.netty.handler.timeout.IdleStateHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    480:502:void run(io.netty.channel.ChannelHandlerContext) -> run
io.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask -> io.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask:
    io.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    507:509:void <init>(io.netty.handler.timeout.IdleStateHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    514:537:void run(io.netty.channel.ChannelHandlerContext) -> run
io.netty.resolver.AbstractAddressResolver -> io.netty.resolver.AbstractAddressResolver:
    io.netty.util.concurrent.EventExecutor executor -> executor
    io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    45:48:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    55:58:void <init>(io.netty.util.concurrent.EventExecutor,java.lang.Class) -> <init>
    65:65:io.netty.util.concurrent.EventExecutor executor() -> executor
    70:70:boolean isSupported(java.net.SocketAddress) -> isSupported
    75:81:boolean isResolved(java.net.SocketAddress) -> isResolved
    boolean doIsResolved(java.net.SocketAddress) -> doIsResolved
    92:111:io.netty.util.concurrent.Future resolve(java.net.SocketAddress) -> resolve
    void doResolve(java.net.SocketAddress,io.netty.util.concurrent.Promise) -> doResolve
    207:207:void close() -> close
io.netty.resolver.AddressResolver -> io.netty.resolver.AddressResolver:
    boolean isSupported(java.net.SocketAddress) -> isSupported
    boolean isResolved(java.net.SocketAddress) -> isResolved
    io.netty.util.concurrent.Future resolve(java.net.SocketAddress) -> resolve
    void close() -> close
io.netty.resolver.AddressResolverGroup -> io.netty.resolver.AddressResolverGroup:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Map resolvers -> resolvers
    43:46:void <init>() -> <init>
    55:89:io.netty.resolver.AddressResolver getResolver(io.netty.util.concurrent.EventExecutor) -> getResolver
    io.netty.resolver.AddressResolver newResolver(io.netty.util.concurrent.EventExecutor) -> newResolver
    104:116:void close() -> close
    36:36:java.util.Map access$000(io.netty.resolver.AddressResolverGroup) -> access$000
    38:38:void <clinit>() -> <clinit>
io.netty.resolver.AddressResolverGroup$1 -> io.netty.resolver.AddressResolverGroup$1:
    io.netty.util.concurrent.EventExecutor val$executor -> val$executor
    io.netty.resolver.AddressResolver val$newResolver -> val$newResolver
    io.netty.resolver.AddressResolverGroup this$0 -> this$0
    75:75:void <init>(io.netty.resolver.AddressResolverGroup,io.netty.util.concurrent.EventExecutor,io.netty.resolver.AddressResolver) -> <init>
    78:82:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.DefaultAddressResolverGroup -> io.netty.resolver.DefaultAddressResolverGroup:
    io.netty.resolver.DefaultAddressResolverGroup INSTANCE -> INSTANCE
    32:32:void <init>() -> <init>
    36:36:io.netty.resolver.AddressResolver newResolver(io.netty.util.concurrent.EventExecutor) -> newResolver
    30:30:void <clinit>() -> <clinit>
io.netty.resolver.DefaultHostsFileEntriesResolver -> io.netty.resolver.DefaultHostsFileEntriesResolver:
    java.util.Map inet4Entries -> inet4Entries
    java.util.Map inet6Entries -> inet6Entries
    36:37:void <init>() -> <init>
    40:43:void <init>(io.netty.resolver.HostsFileEntries) -> <init>
    47:60:java.net.InetAddress address(java.lang.String,io.netty.resolver.ResolvedAddressTypes) -> address
    66:66:java.lang.String normalize(java.lang.String) -> normalize
io.netty.resolver.DefaultHostsFileEntriesResolver$1 -> io.netty.resolver.DefaultHostsFileEntriesResolver$1:
    int[] $SwitchMap$io$netty$resolver$ResolvedAddressTypes -> $SwitchMap$io$netty$resolver$ResolvedAddressTypes
    48:48:void <clinit>() -> <clinit>
io.netty.resolver.DefaultNameResolver -> io.netty.resolver.DefaultNameResolver:
    37:38:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    43:47:void doResolve(java.lang.String,io.netty.util.concurrent.Promise) -> doResolve
    52:56:void doResolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> doResolveAll
io.netty.resolver.HostsFileEntries -> io.netty.resolver.HostsFileEntries:
    io.netty.resolver.HostsFileEntries EMPTY -> EMPTY
    java.util.Map inet4Entries -> inet4Entries
    java.util.Map inet6Entries -> inet6Entries
    43:46:void <init>(java.util.Map,java.util.Map) -> <init>
    53:53:java.util.Map inet4Entries() -> inet4Entries
    61:61:java.util.Map inet6Entries() -> inet6Entries
    35:38:void <clinit>() -> <clinit>
io.netty.resolver.HostsFileEntriesResolver -> io.netty.resolver.HostsFileEntriesResolver:
    io.netty.resolver.HostsFileEntriesResolver DEFAULT -> DEFAULT
    java.net.InetAddress address(java.lang.String,io.netty.resolver.ResolvedAddressTypes) -> address
    31:31:void <clinit>() -> <clinit>
io.netty.resolver.HostsFileParser -> io.netty.resolver.HostsFileParser:
    java.util.regex.Pattern WHITESPACES -> WHITESPACES
    io.netty.util.internal.logging.InternalLogger logger -> logger
    57:65:java.io.File locateHostsFile() -> locateHostsFile
    74:79:io.netty.resolver.HostsFileEntries parseSilently() -> parseSilently
    101:105:io.netty.resolver.HostsFileEntries parse(java.io.File) -> parse
    117:184:io.netty.resolver.HostsFileEntries parse(java.io.Reader) -> parse
    191:192:void <init>() -> <init>
    51:53:void <clinit>() -> <clinit>
io.netty.resolver.InetNameResolver -> io.netty.resolver.InetNameResolver:
    io.netty.resolver.AddressResolver addressResolver -> addressResolver
    37:38:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    45:54:io.netty.resolver.AddressResolver asAddressResolver() -> asAddressResolver
io.netty.resolver.InetSocketAddressResolver -> io.netty.resolver.InetSocketAddressResolver:
    io.netty.resolver.NameResolver nameResolver -> nameResolver
    43:45:void <init>(io.netty.util.concurrent.EventExecutor,io.netty.resolver.NameResolver) -> <init>
    49:49:boolean doIsResolved(java.net.InetSocketAddress) -> doIsResolved
    57:68:void doResolve(java.net.InetSocketAddress,io.netty.util.concurrent.Promise) -> doResolve
    96:97:void close() -> close
    32:32:void doResolve(java.net.SocketAddress,io.netty.util.concurrent.Promise) -> doResolve
    32:32:boolean doIsResolved(java.net.SocketAddress) -> doIsResolved
io.netty.resolver.InetSocketAddressResolver$1 -> io.netty.resolver.InetSocketAddressResolver$1:
    io.netty.util.concurrent.Promise val$promise -> val$promise
    java.net.InetSocketAddress val$unresolvedAddress -> val$unresolvedAddress
    io.netty.resolver.InetSocketAddressResolver this$0 -> this$0
    58:58:void <init>(io.netty.resolver.InetSocketAddressResolver,io.netty.util.concurrent.Promise,java.net.InetSocketAddress) -> <init>
    61:66:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.NameResolver -> io.netty.resolver.NameResolver:
    io.netty.util.concurrent.Future resolve(java.lang.String) -> resolve
    io.netty.util.concurrent.Future resolve(java.lang.String,io.netty.util.concurrent.Promise) -> resolve
    io.netty.util.concurrent.Future resolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> resolveAll
    void close() -> close
io.netty.resolver.NoopAddressResolver -> io.netty.resolver.NoopAddressResolver:
    35:36:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    40:40:boolean doIsResolved(java.net.SocketAddress) -> doIsResolved
    45:46:void doResolve(java.net.SocketAddress,io.netty.util.concurrent.Promise) -> doResolve
io.netty.resolver.NoopAddressResolverGroup -> io.netty.resolver.NoopAddressResolverGroup:
    io.netty.resolver.NoopAddressResolverGroup INSTANCE -> INSTANCE
    32:32:void <init>() -> <init>
    36:36:io.netty.resolver.AddressResolver newResolver(io.netty.util.concurrent.EventExecutor) -> newResolver
    30:30:void <clinit>() -> <clinit>
io.netty.resolver.ResolvedAddressTypes -> io.netty.resolver.ResolvedAddressTypes:
    io.netty.resolver.ResolvedAddressTypes IPV4_ONLY -> IPV4_ONLY
    io.netty.resolver.ResolvedAddressTypes IPV6_ONLY -> IPV6_ONLY
    io.netty.resolver.ResolvedAddressTypes IPV4_PREFERRED -> IPV4_PREFERRED
    io.netty.resolver.ResolvedAddressTypes IPV6_PREFERRED -> IPV6_PREFERRED
    io.netty.resolver.ResolvedAddressTypes[] $VALUES -> $VALUES
    23:23:io.netty.resolver.ResolvedAddressTypes[] values() -> values
    23:23:io.netty.resolver.ResolvedAddressTypes valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    23:40:void <clinit>() -> <clinit>
io.netty.resolver.SimpleNameResolver -> io.netty.resolver.SimpleNameResolver:
    io.netty.util.concurrent.EventExecutor executor -> executor
    40:42:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    49:49:io.netty.util.concurrent.EventExecutor executor() -> executor
    54:55:io.netty.util.concurrent.Future resolve(java.lang.String) -> resolve
    60:66:io.netty.util.concurrent.Future resolve(java.lang.String,io.netty.util.concurrent.Promise) -> resolve
    78:84:io.netty.util.concurrent.Future resolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> resolveAll
    void doResolve(java.lang.String,io.netty.util.concurrent.Promise) -> doResolve
    void doResolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> doResolveAll
    99:99:void close() -> close
io.netty.resolver.dns.BiDnsQueryLifecycleObserver -> io.netty.resolver.dns.BiDnsQueryLifecycleObserver:
    io.netty.resolver.dns.DnsQueryLifecycleObserver a -> a
    io.netty.resolver.dns.DnsQueryLifecycleObserver b -> b
    41:44:void <init>(io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.resolver.dns.DnsQueryLifecycleObserver) -> <init>
    49:53:void queryWritten(java.net.InetSocketAddress,io.netty.channel.ChannelFuture) -> queryWritten
    58:62:void queryCancelled(int) -> queryCancelled
    67:71:io.netty.resolver.dns.DnsQueryLifecycleObserver queryRedirected(java.util.List) -> queryRedirected
    77:81:io.netty.resolver.dns.DnsQueryLifecycleObserver queryCNAMEd(io.netty.handler.codec.dns.DnsQuestion) -> queryCNAMEd
    87:91:io.netty.resolver.dns.DnsQueryLifecycleObserver queryNoAnswer(io.netty.handler.codec.dns.DnsResponseCode) -> queryNoAnswer
    97:101:void queryFailed(java.lang.Throwable) -> queryFailed
    106:110:void querySucceed() -> querySucceed
io.netty.resolver.dns.BiDnsQueryLifecycleObserverFactory -> io.netty.resolver.dns.BiDnsQueryLifecycleObserverFactory:
    io.netty.resolver.dns.DnsQueryLifecycleObserverFactory a -> a
    io.netty.resolver.dns.DnsQueryLifecycleObserverFactory b -> b
    36:39:void <init>(io.netty.resolver.dns.DnsQueryLifecycleObserverFactory,io.netty.resolver.dns.DnsQueryLifecycleObserverFactory) -> <init>
    43:44:io.netty.resolver.dns.DnsQueryLifecycleObserver newDnsQueryLifecycleObserver(io.netty.handler.codec.dns.DnsQuestion) -> newDnsQueryLifecycleObserver
io.netty.resolver.dns.DefaultDnsCache -> io.netty.resolver.dns.DefaultDnsCache:
    java.util.concurrent.ConcurrentMap resolveCache -> resolveCache
    int minTtl -> minTtl
    int maxTtl -> maxTtl
    int negativeTtl -> negativeTtl
    boolean $assertionsDisabled -> $assertionsDisabled
    53:54:void <init>() -> <init>
    42:70:void <init>(int,int,int) -> <init>
    100:106:void clear() -> clear
    125:125:boolean emptyAdditionals(io.netty.handler.codec.dns.DnsRecord[]) -> emptyAdditionals
    130:134:java.util.List get(java.lang.String,io.netty.handler.codec.dns.DnsRecord[]) -> get
    138:147:java.util.List cachedEntries(java.lang.String) -> cachedEntries
    153:176:io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],java.net.InetAddress,long,io.netty.channel.EventLoop) -> cache
    181:201:io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],java.lang.Throwable,io.netty.channel.EventLoop) -> cache
    205:209:void cancelExpiration(java.util.List) -> cancelExpiration
    215:226:void scheduleCacheExpiration(java.util.List,io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry,int,io.netty.channel.EventLoop) -> scheduleCacheExpiration
    230:236:java.lang.String toString() -> toString
    40:40:java.util.concurrent.ConcurrentMap access$000(io.netty.resolver.dns.DefaultDnsCache) -> access$000
    39:39:void <clinit>() -> <clinit>
io.netty.resolver.dns.DefaultDnsCache$1 -> io.netty.resolver.dns.DefaultDnsCache$1:
    java.util.List val$entries -> val$entries
    io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry val$e -> val$e
    io.netty.resolver.dns.DefaultDnsCache this$0 -> this$0
    215:215:void <init>(io.netty.resolver.dns.DefaultDnsCache,java.util.List,io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry) -> <init>
    218:224:void run() -> run
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry -> io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry:
    java.lang.String hostname -> hostname
    java.net.InetAddress address -> address
    java.lang.Throwable cause -> cause
    io.netty.util.concurrent.ScheduledFuture expirationFuture -> expirationFuture
    boolean $assertionsDisabled -> $assertionsDisabled
    245:249:void <init>(java.lang.String,java.net.InetAddress) -> <init>
    251:255:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    259:259:java.net.InetAddress address() -> address
    264:264:java.lang.Throwable cause() -> cause
    268:268:java.lang.String hostname() -> hostname
    272:274:void scheduleExpiration(io.netty.channel.EventLoop,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> scheduleExpiration
    277:281:void cancelExpiration() -> cancelExpiration
    285:288:java.lang.String toString() -> toString
    239:239:void <clinit>() -> <clinit>
io.netty.resolver.dns.DefaultDnsServerAddressStreamProvider -> io.netty.resolver.dns.DefaultDnsServerAddressStreamProvider:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.resolver.dns.DefaultDnsServerAddressStreamProvider INSTANCE -> INSTANCE
    java.util.List DEFAULT_NAME_SERVER_LIST -> DEFAULT_NAME_SERVER_LIST
    java.net.InetSocketAddress[] DEFAULT_NAME_SERVER_ARRAY -> DEFAULT_NAME_SERVER_ARRAY
    io.netty.resolver.dns.DnsServerAddresses DEFAULT_NAME_SERVERS -> DEFAULT_NAME_SERVERS
    149:150:void <init>() -> <init>
    154:154:io.netty.resolver.dns.DnsServerAddressStream nameServerAddressStream(java.lang.String) -> nameServerAddressStream
    178:178:io.netty.resolver.dns.DnsServerAddresses defaultAddresses() -> defaultAddresses
    186:186:java.net.InetSocketAddress[] defaultAddressArray() -> defaultAddressArray
    48:147:void <clinit>() -> <clinit>
io.netty.resolver.dns.DefaultDnsServerAddresses -> io.netty.resolver.dns.DefaultDnsServerAddresses:
    java.net.InetSocketAddress[] addresses -> addresses
    java.lang.String strVal -> strVal
    26:40:void <init>(java.lang.String,java.net.InetSocketAddress[]) -> <init>
    44:44:java.lang.String toString() -> toString
io.netty.resolver.dns.DnsAddressResolverGroup -> io.netty.resolver.dns.DnsAddressResolverGroup:
    io.netty.channel.ChannelFactory channelFactory -> channelFactory
    io.netty.resolver.dns.DnsServerAddressStreamProvider nameServerProvider -> nameServerProvider
    java.util.concurrent.ConcurrentMap resolvesInProgress -> resolvesInProgress
    java.util.concurrent.ConcurrentMap resolveAllsInProgress -> resolveAllsInProgress
    48:62:void <init>(io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider) -> <init>
    67:73:io.netty.resolver.AddressResolver newResolver(io.netty.util.concurrent.EventExecutor) -> newResolver
    84:90:io.netty.resolver.AddressResolver newResolver(io.netty.channel.EventLoop,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider) -> newResolver
    101:104:io.netty.resolver.NameResolver newNameResolver(io.netty.channel.EventLoop,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider) -> newNameResolver
    114:114:io.netty.resolver.AddressResolver newAddressResolver(io.netty.channel.EventLoop,io.netty.resolver.NameResolver) -> newAddressResolver
io.netty.resolver.dns.DnsCache -> io.netty.resolver.dns.DnsCache:
    void clear() -> clear
    java.util.List get(java.lang.String,io.netty.handler.codec.dns.DnsRecord[]) -> get
    io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],java.net.InetAddress,long,io.netty.channel.EventLoop) -> cache
    io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],java.lang.Throwable,io.netty.channel.EventLoop) -> cache
io.netty.resolver.dns.DnsCacheEntry -> io.netty.resolver.dns.DnsCacheEntry:
    java.net.InetAddress address() -> address
    java.lang.Throwable cause() -> cause
io.netty.resolver.dns.DnsNameResolver -> io.netty.resolver.dns.DnsNameResolver:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.net.InetAddress LOCALHOST_ADDRESS -> LOCALHOST_ADDRESS
    io.netty.handler.codec.dns.DnsRecord[] EMPTY_ADDITIONALS -> EMPTY_ADDITIONALS
    io.netty.handler.codec.dns.DnsRecordType[] IPV4_ONLY_RESOLVED_RECORD_TYPES -> IPV4_ONLY_RESOLVED_RECORD_TYPES
    io.netty.channel.socket.InternetProtocolFamily[] IPV4_ONLY_RESOLVED_PROTOCOL_FAMILIES -> IPV4_ONLY_RESOLVED_PROTOCOL_FAMILIES
    io.netty.handler.codec.dns.DnsRecordType[] IPV4_PREFERRED_RESOLVED_RECORD_TYPES -> IPV4_PREFERRED_RESOLVED_RECORD_TYPES
    io.netty.channel.socket.InternetProtocolFamily[] IPV4_PREFERRED_RESOLVED_PROTOCOL_FAMILIES -> IPV4_PREFERRED_RESOLVED_PROTOCOL_FAMILIES
    io.netty.handler.codec.dns.DnsRecordType[] IPV6_ONLY_RESOLVED_RECORD_TYPES -> IPV6_ONLY_RESOLVED_RECORD_TYPES
    io.netty.channel.socket.InternetProtocolFamily[] IPV6_ONLY_RESOLVED_PROTOCOL_FAMILIES -> IPV6_ONLY_RESOLVED_PROTOCOL_FAMILIES
    io.netty.handler.codec.dns.DnsRecordType[] IPV6_PREFERRED_RESOLVED_RECORD_TYPES -> IPV6_PREFERRED_RESOLVED_RECORD_TYPES
    io.netty.channel.socket.InternetProtocolFamily[] IPV6_PREFERRED_RESOLVED_PROTOCOL_FAMILIES -> IPV6_PREFERRED_RESOLVED_PROTOCOL_FAMILIES
    io.netty.resolver.ResolvedAddressTypes DEFAULT_RESOLVE_ADDRESS_TYPES -> DEFAULT_RESOLVE_ADDRESS_TYPES
    java.lang.String[] DEFAULT_SEARCH_DOMAINS -> DEFAULT_SEARCH_DOMAINS
    int DEFAULT_NDOTS -> DEFAULT_NDOTS
    io.netty.handler.codec.dns.DatagramDnsResponseDecoder DECODER -> DECODER
    io.netty.handler.codec.dns.DatagramDnsQueryEncoder ENCODER -> ENCODER
    io.netty.util.concurrent.Future channelFuture -> channelFuture
    io.netty.channel.socket.DatagramChannel ch -> ch
    io.netty.resolver.dns.DnsQueryContextManager queryContextManager -> queryContextManager
    io.netty.resolver.dns.DnsCache resolveCache -> resolveCache
    io.netty.resolver.dns.DnsCache authoritativeDnsServerCache -> authoritativeDnsServerCache
    io.netty.util.concurrent.FastThreadLocal nameServerAddrStream -> nameServerAddrStream
    long queryTimeoutMillis -> queryTimeoutMillis
    int maxQueriesPerResolve -> maxQueriesPerResolve
    io.netty.resolver.ResolvedAddressTypes resolvedAddressTypes -> resolvedAddressTypes
    io.netty.channel.socket.InternetProtocolFamily[] resolvedInternetProtocolFamilies -> resolvedInternetProtocolFamilies
    boolean recursionDesired -> recursionDesired
    int maxPayloadSize -> maxPayloadSize
    boolean optResourceEnabled -> optResourceEnabled
    io.netty.resolver.HostsFileEntriesResolver hostsFileEntriesResolver -> hostsFileEntriesResolver
    io.netty.resolver.dns.DnsServerAddressStreamProvider dnsServerAddressStreamProvider -> dnsServerAddressStreamProvider
    java.lang.String[] searchDomains -> searchDomains
    int ndots -> ndots
    boolean supportsAAAARecords -> supportsAAAARecords
    boolean supportsARecords -> supportsARecords
    io.netty.channel.socket.InternetProtocolFamily preferredAddressType -> preferredAddressType
    io.netty.handler.codec.dns.DnsRecordType[] resolveRecordTypes -> resolveRecordTypes
    boolean decodeIdn -> decodeIdn
    io.netty.resolver.dns.DnsQueryLifecycleObserverFactory dnsQueryLifecycleObserverFactory -> dnsQueryLifecycleObserverFactory
    boolean $assertionsDisabled -> $assertionsDisabled
    152:306:void <init>(io.netty.channel.EventLoop,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsQueryLifecycleObserverFactory,long,io.netty.resolver.ResolvedAddressTypes,boolean,int,boolean,int,boolean,io.netty.resolver.HostsFileEntriesResolver,io.netty.resolver.dns.DnsServerAddressStreamProvider,java.lang.String[],int,boolean) -> <init>
    310:310:int dnsRedirectPort(java.net.InetAddress) -> dnsRedirectPort
    314:314:io.netty.resolver.dns.DnsQueryLifecycleObserverFactory dnsQueryLifecycleObserverFactory() -> dnsQueryLifecycleObserverFactory
    323:323:io.netty.resolver.dns.DnsServerAddressStream uncachedRedirectDnsServerStream(java.util.List) -> uncachedRedirectDnsServerStream
    337:337:io.netty.resolver.dns.DnsCache authoritativeDnsServerCache() -> authoritativeDnsServerCache
    345:345:long queryTimeoutMillis() -> queryTimeoutMillis
    357:357:io.netty.channel.socket.InternetProtocolFamily[] resolvedInternetProtocolFamiliesUnsafe() -> resolvedInternetProtocolFamiliesUnsafe
    361:361:java.lang.String[] searchDomains() -> searchDomains
    365:365:int ndots() -> ndots
    369:369:boolean supportsAAAARecords() -> supportsAAAARecords
    373:373:boolean supportsARecords() -> supportsARecords
    377:377:io.netty.channel.socket.InternetProtocolFamily preferredAddressType() -> preferredAddressType
    381:381:io.netty.handler.codec.dns.DnsRecordType[] resolveRecordTypes() -> resolveRecordTypes
    385:385:boolean isDecodeIdn() -> isDecodeIdn
    393:393:boolean isRecursionDesired() -> isRecursionDesired
    401:401:int maxQueriesPerResolve() -> maxQueriesPerResolve
    408:408:int maxPayloadSize() -> maxPayloadSize
    416:416:boolean isOptResourceEnabled() -> isOptResourceEnabled
    434:437:void close() -> close
    441:441:io.netty.channel.EventLoop executor() -> executor
    445:455:java.net.InetAddress resolveHostsFileEntry(java.lang.String) -> resolveHostsFileEntry
    527:528:void doResolve(java.lang.String,io.netty.util.concurrent.Promise) -> doResolve
    562:562:java.net.InetAddress loopbackAddress() -> loopbackAddress
    573:596:void doResolve(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> doResolve
    602:637:boolean doResolveCached(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> doResolveCached
    641:644:void trySuccess(io.netty.util.concurrent.Promise,java.lang.Object) -> trySuccess
    647:650:void tryFailure(io.netty.util.concurrent.Promise,java.lang.Throwable) -> tryFailure
    656:658:void doResolveUncached(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> doResolveUncached
    692:693:void doResolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> doResolveAll
    703:726:void doResolveAll(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> doResolveAll
    732:768:boolean doResolveAllCached(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> doResolveAllCached
    813:815:void doResolveAllUncached(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> doResolveAllUncached
    818:823:java.lang.String hostname(java.lang.String) -> hostname
    900:900:boolean isTransportOrTimeoutError(java.lang.Throwable) -> isTransportOrTimeoutError
    924:932:io.netty.util.concurrent.Future query0(java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,io.netty.handler.codec.dns.DnsRecord[],io.netty.channel.ChannelPromise,io.netty.util.concurrent.Promise) -> query0
    938:938:io.netty.util.concurrent.Promise cast(io.netty.util.concurrent.Promise) -> cast
    74:74:io.netty.util.concurrent.EventExecutor executor() -> executor
    75:75:io.netty.resolver.dns.DnsServerAddressStreamProvider access$000(io.netty.resolver.dns.DnsNameResolver) -> access$000
    75:75:io.netty.handler.codec.dns.DatagramDnsResponseDecoder access$100() -> access$100
    75:75:io.netty.handler.codec.dns.DatagramDnsQueryEncoder access$200() -> access$200
    75:75:void access$400(io.netty.util.concurrent.Promise,java.lang.Object) -> access$400
    75:75:io.netty.util.internal.logging.InternalLogger access$500() -> access$500
    74:144:void <clinit>() -> <clinit>
io.netty.resolver.dns.DnsNameResolver$1 -> io.netty.resolver.dns.DnsNameResolver$1:
    io.netty.resolver.dns.DnsNameResolver this$0 -> this$0
    161:161:void <init>(io.netty.resolver.dns.DnsNameResolver) -> <init>
    164:164:io.netty.resolver.dns.DnsServerAddressStream initialValue() -> initialValue
    161:161:java.lang.Object initialValue() -> initialValue
io.netty.resolver.dns.DnsNameResolver$2 -> io.netty.resolver.dns.DnsNameResolver$2:
    io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler val$responseHandler -> val$responseHandler
    io.netty.resolver.dns.DnsNameResolver this$0 -> this$0
    289:289:void <init>(io.netty.resolver.dns.DnsNameResolver,io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler) -> <init>
    292:293:void initChannel(io.netty.channel.socket.DatagramChannel) -> initChannel
    289:289:void initChannel(io.netty.channel.Channel) -> initChannel
io.netty.resolver.dns.DnsNameResolver$3 -> io.netty.resolver.dns.DnsNameResolver$3:
    io.netty.resolver.dns.DnsCache val$resolveCache -> val$resolveCache
    io.netty.resolver.dns.DnsNameResolver this$0 -> this$0
    300:300:void <init>(io.netty.resolver.dns.DnsNameResolver,io.netty.resolver.dns.DnsCache) -> <init>
    303:304:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    300:300:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsNameResolver$4 -> io.netty.resolver.dns.DnsNameResolver$4:
    int[] $SwitchMap$io$netty$resolver$ResolvedAddressTypes -> $SwitchMap$io$netty$resolver$ResolvedAddressTypes
    251:251:void <clinit>() -> <clinit>
io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler -> io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler:
    io.netty.util.concurrent.Promise channelActivePromise -> channelActivePromise
    io.netty.resolver.dns.DnsNameResolver this$0 -> this$0
    945:947:void <init>(io.netty.resolver.dns.DnsNameResolver,io.netty.util.concurrent.Promise) -> <init>
    952:969:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    973:975:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    979:980:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    941:941:io.netty.util.concurrent.Promise access$300(io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler) -> access$300
io.netty.resolver.dns.DnsNameResolver$ListResolverContext -> io.netty.resolver.dns.DnsNameResolver$ListResolverContext:
    774:775:void <init>(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> <init>
    781:781:io.netty.resolver.dns.DnsNameResolverContext newResolverContext(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> newResolverContext
    789:805:boolean finishResolve(java.lang.Class,java.util.List,io.netty.util.concurrent.Promise) -> finishResolve
io.netty.resolver.dns.DnsNameResolver$SingleResolverContext -> io.netty.resolver.dns.DnsNameResolver$SingleResolverContext:
    663:664:void <init>(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> <init>
    670:670:io.netty.resolver.dns.DnsNameResolverContext newResolverContext(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> newResolverContext
    678:686:boolean finishResolve(java.lang.Class,java.util.List,io.netty.util.concurrent.Promise) -> finishResolve
io.netty.resolver.dns.DnsNameResolverBuilder -> io.netty.resolver.dns.DnsNameResolverBuilder:
    io.netty.channel.EventLoop eventLoop -> eventLoop
    io.netty.channel.ChannelFactory channelFactory -> channelFactory
    io.netty.resolver.dns.DnsCache resolveCache -> resolveCache
    io.netty.resolver.dns.DnsCache authoritativeDnsServerCache -> authoritativeDnsServerCache
    java.lang.Integer minTtl -> minTtl
    java.lang.Integer maxTtl -> maxTtl
    java.lang.Integer negativeTtl -> negativeTtl
    long queryTimeoutMillis -> queryTimeoutMillis
    io.netty.resolver.ResolvedAddressTypes resolvedAddressTypes -> resolvedAddressTypes
    boolean recursionDesired -> recursionDesired
    int maxQueriesPerResolve -> maxQueriesPerResolve
    boolean traceEnabled -> traceEnabled
    int maxPayloadSize -> maxPayloadSize
    boolean optResourceEnabled -> optResourceEnabled
    io.netty.resolver.HostsFileEntriesResolver hostsFileEntriesResolver -> hostsFileEntriesResolver
    io.netty.resolver.dns.DnsServerAddressStreamProvider dnsServerAddressStreamProvider -> dnsServerAddressStreamProvider
    io.netty.resolver.dns.DnsQueryLifecycleObserverFactory dnsQueryLifecycleObserverFactory -> dnsQueryLifecycleObserverFactory
    java.lang.String[] searchDomains -> searchDomains
    int ndots -> ndots
    boolean decodeIdn -> decodeIdn
    46:69:void <init>(io.netty.channel.EventLoop) -> <init>
    78:79:io.netty.resolver.dns.DnsNameResolverBuilder channelFactory(io.netty.channel.ChannelFactory) -> channelFactory
    100:101:io.netty.resolver.dns.DnsNameResolverBuilder resolveCache(io.netty.resolver.dns.DnsCache) -> resolveCache
    122:123:io.netty.resolver.dns.DnsNameResolverBuilder authoritativeDnsServerCache(io.netty.resolver.dns.DnsCache) -> authoritativeDnsServerCache
    162:163:io.netty.resolver.dns.DnsNameResolverBuilder queryTimeoutMillis(long) -> queryTimeoutMillis
    216:217:io.netty.resolver.dns.DnsNameResolverBuilder recursionDesired(boolean) -> recursionDesired
    227:228:io.netty.resolver.dns.DnsNameResolverBuilder maxQueriesPerResolve(int) -> maxQueriesPerResolve
    263:264:io.netty.resolver.dns.DnsNameResolverBuilder optResourceEnabled(boolean) -> optResourceEnabled
    273:274:io.netty.resolver.dns.DnsNameResolverBuilder hostsFileEntriesResolver(io.netty.resolver.HostsFileEntriesResolver) -> hostsFileEntriesResolver
    283:285:io.netty.resolver.dns.DnsNameResolverBuilder nameServerProvider(io.netty.resolver.dns.DnsServerAddressStreamProvider) -> nameServerProvider
    295:313:io.netty.resolver.dns.DnsNameResolverBuilder searchDomains(java.lang.Iterable) -> searchDomains
    324:325:io.netty.resolver.dns.DnsNameResolverBuilder ndots(int) -> ndots
    329:329:io.netty.resolver.dns.DnsCache newCache() -> newCache
    350:361:io.netty.resolver.dns.DnsNameResolver build() -> build
io.netty.resolver.dns.DnsNameResolverContext -> io.netty.resolver.dns.DnsNameResolverContext:
    io.netty.util.concurrent.FutureListener RELEASE_RESPONSE -> RELEASE_RESPONSE
    java.lang.RuntimeException NXDOMAIN_QUERY_FAILED_EXCEPTION -> NXDOMAIN_QUERY_FAILED_EXCEPTION
    java.lang.RuntimeException CNAME_NOT_FOUND_QUERY_FAILED_EXCEPTION -> CNAME_NOT_FOUND_QUERY_FAILED_EXCEPTION
    java.lang.RuntimeException NO_MATCHING_RECORD_QUERY_FAILED_EXCEPTION -> NO_MATCHING_RECORD_QUERY_FAILED_EXCEPTION
    java.lang.RuntimeException UNRECOGNIZED_TYPE_QUERY_FAILED_EXCEPTION -> UNRECOGNIZED_TYPE_QUERY_FAILED_EXCEPTION
    java.lang.RuntimeException NAME_SERVERS_EXHAUSTED_EXCEPTION -> NAME_SERVERS_EXHAUSTED_EXCEPTION
    io.netty.resolver.dns.DnsNameResolver parent -> parent
    io.netty.resolver.dns.DnsServerAddressStream nameServerAddrs -> nameServerAddrs
    java.lang.String hostname -> hostname
    io.netty.resolver.dns.DnsCache resolveCache -> resolveCache
    int maxAllowedQueries -> maxAllowedQueries
    io.netty.channel.socket.InternetProtocolFamily[] resolvedInternetProtocolFamilies -> resolvedInternetProtocolFamilies
    io.netty.handler.codec.dns.DnsRecord[] additionals -> additionals
    java.util.Set queriesInProgress -> queriesInProgress
    java.util.List resolvedEntries -> resolvedEntries
    int allowedQueries -> allowedQueries
    boolean triedCNAME -> triedCNAME
    boolean $assertionsDisabled -> $assertionsDisabled
    103:125:void <init>(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> <init>
    128:157:void resolve(io.netty.util.concurrent.Promise) -> resolve
    160:165:boolean hasNDots() -> hasNDots
    186:191:void doSearchDomainQuery(java.lang.String,io.netty.util.concurrent.FutureListener) -> doSearchDomainQuery
    194:205:void internalResolve(io.netty.util.concurrent.Promise) -> internalResolve
    212:217:void addNameServerToCache(io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServer,java.net.InetAddress,long) -> addNameServerToCache
    224:258:io.netty.resolver.dns.DnsServerAddressStream getNameServersFromCache(java.lang.String) -> getNameServersFromCache
    295:297:void query(io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion,io.netty.util.concurrent.Promise,java.lang.Throwable) -> query
    305:350:void query(io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise,java.lang.Throwable) -> query
    357:386:void onResponse(io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> onResponse
    394:438:boolean handleRedirect(io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> handleRedirect
    446:455:io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServerList extractAuthoritativeNameServers(java.lang.String,io.netty.handler.codec.dns.DnsResponse) -> extractAuthoritativeNameServers
    464:522:void onResponseAorAAAA(io.netty.handler.codec.dns.DnsRecordType,io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> onResponseAorAAAA
    525:542:java.net.InetAddress parseAddress(io.netty.handler.codec.dns.DnsRecord,java.lang.String) -> parseAddress
    549:550:void onResponseCNAME(io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> onResponseCNAME
    558:578:void onResponseCNAME(io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,java.util.Map,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> onResponseCNAME
    581:607:java.util.Map buildAliasMap(io.netty.handler.codec.dns.DnsResponse) -> buildAliasMap
    617:664:void tryToFinishResolve(io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise,java.lang.Throwable) -> tryToFinishResolve
    667:679:boolean gotPreferredAddress() -> gotPreferredAddress
    683:730:void finishResolve(io.netty.util.concurrent.Promise,java.lang.Throwable) -> finishResolve
    boolean finishResolve(java.lang.Class,java.util.List,io.netty.util.concurrent.Promise) -> finishResolve
    io.netty.resolver.dns.DnsNameResolverContext newResolverContext(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> newResolverContext
    740:747:java.lang.String decodeDomainName(io.netty.buffer.ByteBuf) -> decodeDomainName
    752:753:io.netty.resolver.dns.DnsServerAddressStream getNameServers(java.lang.String) -> getNameServers
    758:783:void followCname(java.lang.String,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> followCname
    787:792:boolean query(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,io.netty.resolver.dns.DnsServerAddressStream,io.netty.util.concurrent.Promise,java.lang.Throwable) -> query
    797:800:io.netty.handler.codec.dns.DnsQuestion newQuestion(java.lang.String,io.netty.handler.codec.dns.DnsRecordType) -> newQuestion
    60:60:java.lang.String access$000(io.netty.resolver.dns.DnsNameResolverContext) -> access$000
    60:60:void access$100(io.netty.resolver.dns.DnsNameResolverContext,java.lang.String,io.netty.util.concurrent.FutureListener) -> access$100
    60:60:void access$200(io.netty.resolver.dns.DnsNameResolverContext,io.netty.util.concurrent.Promise) -> access$200
    60:60:io.netty.resolver.dns.DnsNameResolver access$400(io.netty.resolver.dns.DnsNameResolverContext) -> access$400
    60:60:java.util.Set access$500(io.netty.resolver.dns.DnsNameResolverContext) -> access$500
    60:60:int access$600(io.netty.resolver.dns.DnsNameResolverContext) -> access$600
    60:60:void access$700(io.netty.resolver.dns.DnsNameResolverContext,io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion,io.netty.util.concurrent.Promise,java.lang.Throwable) -> access$700
    60:90:void <clinit>() -> <clinit>
io.netty.resolver.dns.DnsNameResolverContext$1 -> io.netty.resolver.dns.DnsNameResolverContext$1:
    66:66:void <init>() -> <init>
    69:72:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsNameResolverContext$2 -> io.netty.resolver.dns.DnsNameResolverContext$2:
    int searchDomainIdx -> searchDomainIdx
    int val$initialSearchDomainIdx -> val$initialSearchDomainIdx
    io.netty.util.concurrent.Promise val$promise -> val$promise
    java.lang.String[] val$searchDomains -> val$searchDomains
    boolean val$startWithoutSearchDomain -> val$startWithoutSearchDomain
    io.netty.resolver.dns.DnsNameResolverContext this$0 -> this$0
    136:137:void <init>(io.netty.resolver.dns.DnsNameResolverContext,int,io.netty.util.concurrent.Promise,java.lang.String[],boolean) -> <init>
    140:154:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsNameResolverContext$3 -> io.netty.resolver.dns.DnsNameResolverContext$3:
    io.netty.util.concurrent.Promise val$promise -> val$promise
    io.netty.resolver.dns.DnsQueryLifecycleObserver val$queryLifecycleObserver -> val$queryLifecycleObserver
    io.netty.resolver.dns.DnsServerAddressStream val$nameServerAddrStream -> val$nameServerAddrStream
    int val$nameServerAddrStreamIndex -> val$nameServerAddrStreamIndex
    io.netty.handler.codec.dns.DnsQuestion val$question -> val$question
    io.netty.resolver.dns.DnsNameResolverContext this$0 -> this$0
    321:321:void <init>(io.netty.resolver.dns.DnsNameResolverContext,io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion) -> <init>
    324:348:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServer -> io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServer:
    int dots -> dots
    java.lang.String nsName -> nsName
    java.lang.String domainName -> domainName
    io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServer next -> next
    boolean removed -> removed
    897:901:void <init>(int,java.lang.String,java.lang.String) -> <init>
    907:907:boolean isRootServer() -> isRootServer
    914:914:java.lang.String domainName() -> domainName
io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServerList -> io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServerList:
    java.lang.String questionName -> questionName
    io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServer head -> head
    int count -> count
    815:817:void <init>(java.lang.String) -> <init>
    820:867:void add(io.netty.handler.codec.dns.DnsRecord) -> add
    872:881:io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServer remove(java.lang.String) -> remove
    885:885:int size() -> size
io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable -> io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable:
    java.util.List entries -> entries
    io.netty.resolver.dns.DnsNameResolverContext this$0 -> this$0
    264:266:void <init>(io.netty.resolver.dns.DnsNameResolverContext,java.util.List) -> <init>
    270:270:java.util.Iterator iterator() -> iterator
    261:261:java.util.List access$300(io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable) -> access$300
io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable$1 -> io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable$1:
    java.util.Iterator entryIterator -> entryIterator
    io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable this$1 -> this$1
    270:271:void <init>(io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable) -> <init>
    275:275:boolean hasNext() -> hasNext
    280:281:java.net.InetSocketAddress next() -> next
    286:287:void remove() -> remove
    270:270:java.lang.Object next() -> next
io.netty.resolver.dns.DnsNameResolverContext$SearchDomainUnknownHostException -> io.netty.resolver.dns.DnsNameResolverContext$SearchDomainUnknownHostException:
    172:177:void <init>(java.lang.Throwable,java.lang.String) -> <init>
    181:181:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.netty.resolver.dns.DnsNameResolverException -> io.netty.resolver.dns.DnsNameResolverException:
    java.net.InetSocketAddress remoteAddress -> remoteAddress
    io.netty.handler.codec.dns.DnsQuestion question -> question
    37:40:void <init>(java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,java.lang.String) -> <init>
    44:47:void <init>(java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,java.lang.String,java.lang.Throwable) -> <init>
    50:50:java.net.InetSocketAddress validateRemoteAddress(java.net.InetSocketAddress) -> validateRemoteAddress
    54:54:io.netty.handler.codec.dns.DnsQuestion validateQuestion(io.netty.handler.codec.dns.DnsQuestion) -> validateQuestion
    73:74:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.netty.resolver.dns.DnsNameResolverTimeoutException -> io.netty.resolver.dns.DnsNameResolverTimeoutException:
    33:34:void <init>(java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,java.lang.String) -> <init>
io.netty.resolver.dns.DnsQueryContext -> io.netty.resolver.dns.DnsQueryContext:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.resolver.dns.DnsNameResolver parent -> parent
    io.netty.util.concurrent.Promise promise -> promise
    int id -> id
    io.netty.handler.codec.dns.DnsQuestion question -> question
    io.netty.handler.codec.dns.DnsRecord[] additionals -> additionals
    io.netty.handler.codec.dns.DnsRecord optResource -> optResource
    java.net.InetSocketAddress nameServerAddr -> nameServerAddr
    boolean recursionDesired -> recursionDesired
    io.netty.util.concurrent.ScheduledFuture timeoutFuture -> timeoutFuture
    61:78:void <init>(io.netty.resolver.dns.DnsNameResolver,java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise) -> <init>
    81:81:java.net.InetSocketAddress nameServerAddr() -> nameServerAddr
    85:85:io.netty.handler.codec.dns.DnsQuestion question() -> question
    89:110:void query(io.netty.channel.ChannelPromise) -> query
    113:129:void sendQuery(io.netty.handler.codec.dns.DnsQuery,io.netty.channel.ChannelPromise) -> sendQuery
    132:143:void writeQuery(io.netty.handler.codec.dns.DnsQuery,io.netty.channel.ChannelPromise) -> writeQuery
    146:166:void onQueryWriteCompletion(io.netty.channel.ChannelFuture) -> onQueryWriteCompletion
    169:181:void finish(io.netty.channel.AddressedEnvelope) -> finish
    184:202:void setSuccess(io.netty.channel.AddressedEnvelope) -> setSuccess
    205:224:void setFailure(java.lang.String,java.lang.Throwable) -> setFailure
    42:42:void access$000(io.netty.resolver.dns.DnsQueryContext,io.netty.handler.codec.dns.DnsQuery,io.netty.channel.ChannelPromise) -> access$000
    42:42:io.netty.util.concurrent.Promise access$100(io.netty.resolver.dns.DnsQueryContext) -> access$100
    42:42:void access$200(io.netty.resolver.dns.DnsQueryContext,io.netty.channel.ChannelFuture) -> access$200
    42:42:void access$300(io.netty.resolver.dns.DnsQueryContext,java.lang.String,java.lang.Throwable) -> access$300
    44:44:void <clinit>() -> <clinit>
io.netty.resolver.dns.DnsQueryContext$1 -> io.netty.resolver.dns.DnsQueryContext$1:
    io.netty.resolver.dns.DnsQueryContext this$0 -> this$0
    72:72:void <init>(io.netty.resolver.dns.DnsQueryContext,int,int,int) -> <init>
io.netty.resolver.dns.DnsQueryContext$2 -> io.netty.resolver.dns.DnsQueryContext$2:
    io.netty.handler.codec.dns.DnsQuery val$query -> val$query
    io.netty.channel.ChannelPromise val$writePromise -> val$writePromise
    io.netty.resolver.dns.DnsQueryContext this$0 -> this$0
    116:116:void <init>(io.netty.resolver.dns.DnsQueryContext,io.netty.handler.codec.dns.DnsQuery,io.netty.channel.ChannelPromise) -> <init>
    119:126:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsQueryContext$3 -> io.netty.resolver.dns.DnsQueryContext$3:
    io.netty.channel.ChannelFuture val$writeFuture -> val$writeFuture
    io.netty.resolver.dns.DnsQueryContext this$0 -> this$0
    136:136:void <init>(io.netty.resolver.dns.DnsQueryContext,io.netty.channel.ChannelFuture) -> <init>
    139:140:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    136:136:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsQueryContext$4 -> io.netty.resolver.dns.DnsQueryContext$4:
    long val$queryTimeoutMillis -> val$queryTimeoutMillis
    io.netty.resolver.dns.DnsQueryContext this$0 -> this$0
    154:154:void <init>(io.netty.resolver.dns.DnsQueryContext,long) -> <init>
    157:163:void run() -> run
io.netty.resolver.dns.DnsQueryContextManager -> io.netty.resolver.dns.DnsQueryContextManager:
    java.util.Map map -> map
    32:38:void <init>() -> <init>
    42:61:int add(io.netty.resolver.dns.DnsQueryContext) -> add
    65:75:io.netty.resolver.dns.DnsQueryContext get(java.net.InetSocketAddress,int) -> get
    79:86:io.netty.resolver.dns.DnsQueryContext remove(java.net.InetSocketAddress,int) -> remove
    90:92:io.netty.util.collection.IntObjectMap getContextMap(java.net.InetSocketAddress) -> getContextMap
    96:126:io.netty.util.collection.IntObjectMap getOrCreateContextMap(java.net.InetSocketAddress) -> getOrCreateContextMap
    130:135:java.net.Inet6Address toCompactAddress(java.net.Inet4Address) -> toCompactAddress
    140:145:java.net.Inet4Address toIPv4Address(java.net.Inet6Address) -> toIPv4Address
io.netty.resolver.dns.DnsQueryLifecycleObserver -> io.netty.resolver.dns.DnsQueryLifecycleObserver:
    void queryWritten(java.net.InetSocketAddress,io.netty.channel.ChannelFuture) -> queryWritten
    void queryCancelled(int) -> queryCancelled
    io.netty.resolver.dns.DnsQueryLifecycleObserver queryRedirected(java.util.List) -> queryRedirected
    io.netty.resolver.dns.DnsQueryLifecycleObserver queryCNAMEd(io.netty.handler.codec.dns.DnsQuestion) -> queryCNAMEd
    io.netty.resolver.dns.DnsQueryLifecycleObserver queryNoAnswer(io.netty.handler.codec.dns.DnsResponseCode) -> queryNoAnswer
    void queryFailed(java.lang.Throwable) -> queryFailed
    void querySucceed() -> querySucceed
io.netty.resolver.dns.DnsQueryLifecycleObserverFactory -> io.netty.resolver.dns.DnsQueryLifecycleObserverFactory:
    io.netty.resolver.dns.DnsQueryLifecycleObserver newDnsQueryLifecycleObserver(io.netty.handler.codec.dns.DnsQuestion) -> newDnsQueryLifecycleObserver
io.netty.resolver.dns.DnsServerAddressStream -> io.netty.resolver.dns.DnsServerAddressStream:
    java.net.InetSocketAddress next() -> next
    int size() -> size
    io.netty.resolver.dns.DnsServerAddressStream duplicate() -> duplicate
io.netty.resolver.dns.DnsServerAddressStreamProvider -> io.netty.resolver.dns.DnsServerAddressStreamProvider:
    io.netty.resolver.dns.DnsServerAddressStream nameServerAddressStream(java.lang.String) -> nameServerAddressStream
io.netty.resolver.dns.DnsServerAddressStreamProviders -> io.netty.resolver.dns.DnsServerAddressStreamProviders:
    io.netty.resolver.dns.DnsServerAddressStreamProvider DEFAULT_DNS_SERVER_ADDRESS_STREAM_PROVIDER -> DEFAULT_DNS_SERVER_ADDRESS_STREAM_PROVIDER
    45:45:io.netty.resolver.dns.DnsServerAddressStreamProvider platformDefault() -> platformDefault
    28:32:void <clinit>() -> <clinit>
io.netty.resolver.dns.DnsServerAddresses -> io.netty.resolver.dns.DnsServerAddresses:
    33:33:void <init>() -> <init>
    69:69:io.netty.resolver.dns.DnsServerAddresses sequential(java.lang.Iterable) -> sequential
    77:77:io.netty.resolver.dns.DnsServerAddresses sequential(java.net.InetSocketAddress[]) -> sequential
    81:85:io.netty.resolver.dns.DnsServerAddresses sequential0(java.net.InetSocketAddress[]) -> sequential0
    129:129:io.netty.resolver.dns.DnsServerAddresses rotational(java.lang.Iterable) -> rotational
    143:147:io.netty.resolver.dns.DnsServerAddresses rotational0(java.net.InetSocketAddress[]) -> rotational0
    154:161:io.netty.resolver.dns.DnsServerAddresses singleton(java.net.InetSocketAddress) -> singleton
    165:190:java.net.InetSocketAddress[] sanitize(java.lang.Iterable) -> sanitize
    194:213:java.net.InetSocketAddress[] sanitize(java.net.InetSocketAddress[]) -> sanitize
    io.netty.resolver.dns.DnsServerAddressStream stream() -> stream
io.netty.resolver.dns.DnsServerAddresses$1 -> io.netty.resolver.dns.DnsServerAddresses$1:
    85:85:void <init>(java.lang.String,java.net.InetSocketAddress[]) -> <init>
    88:88:io.netty.resolver.dns.DnsServerAddressStream stream() -> stream
io.netty.resolver.dns.InflightNameResolver -> io.netty.resolver.dns.InflightNameResolver:
    io.netty.util.concurrent.EventExecutor executor -> executor
    io.netty.resolver.NameResolver delegate -> delegate
    java.util.concurrent.ConcurrentMap resolvesInProgress -> resolvesInProgress
    java.util.concurrent.ConcurrentMap resolveAllsInProgress -> resolveAllsInProgress
    41:47:void <init>(io.netty.util.concurrent.EventExecutor,io.netty.resolver.NameResolver,java.util.concurrent.ConcurrentMap,java.util.concurrent.ConcurrentMap) -> <init>
    51:51:io.netty.util.concurrent.Future resolve(java.lang.String) -> resolve
    61:62:void close() -> close
    66:66:io.netty.util.concurrent.Promise resolve(java.lang.String,io.netty.util.concurrent.Promise) -> resolve
    71:71:io.netty.util.concurrent.Promise resolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> resolveAll
    78:116:io.netty.util.concurrent.Promise resolve(java.util.concurrent.ConcurrentMap,java.lang.String,io.netty.util.concurrent.Promise,boolean) -> resolve
    120:125:void transferResult(io.netty.util.concurrent.Future,io.netty.util.concurrent.Promise) -> transferResult
    129:129:java.lang.String toString() -> toString
    32:32:io.netty.util.concurrent.Future resolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> resolveAll
    32:32:io.netty.util.concurrent.Future resolve(java.lang.String,io.netty.util.concurrent.Promise) -> resolve
    32:32:void access$000(io.netty.util.concurrent.Future,io.netty.util.concurrent.Promise) -> access$000
io.netty.resolver.dns.InflightNameResolver$1 -> io.netty.resolver.dns.InflightNameResolver$1:
    io.netty.util.concurrent.Promise val$promise -> val$promise
    io.netty.resolver.dns.InflightNameResolver this$0 -> this$0
    84:84:void <init>(io.netty.resolver.dns.InflightNameResolver,io.netty.util.concurrent.Promise) -> <init>
    87:88:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.InflightNameResolver$2 -> io.netty.resolver.dns.InflightNameResolver$2:
    java.util.concurrent.ConcurrentMap val$resolveMap -> val$resolveMap
    java.lang.String val$inetHost -> val$inetHost
    io.netty.resolver.dns.InflightNameResolver this$0 -> this$0
    106:106:void <init>(io.netty.resolver.dns.InflightNameResolver,java.util.concurrent.ConcurrentMap,java.lang.String) -> <init>
    109:110:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.NoopDnsQueryLifecycleObserver -> io.netty.resolver.dns.NoopDnsQueryLifecycleObserver:
    io.netty.resolver.dns.NoopDnsQueryLifecycleObserver INSTANCE -> INSTANCE
    28:29:void <init>() -> <init>
    33:33:void queryWritten(java.net.InetSocketAddress,io.netty.channel.ChannelFuture) -> queryWritten
    37:37:void queryCancelled(int) -> queryCancelled
    41:41:io.netty.resolver.dns.DnsQueryLifecycleObserver queryRedirected(java.util.List) -> queryRedirected
    46:46:io.netty.resolver.dns.DnsQueryLifecycleObserver queryCNAMEd(io.netty.handler.codec.dns.DnsQuestion) -> queryCNAMEd
    51:51:io.netty.resolver.dns.DnsQueryLifecycleObserver queryNoAnswer(io.netty.handler.codec.dns.DnsResponseCode) -> queryNoAnswer
    56:56:void queryFailed(java.lang.Throwable) -> queryFailed
    60:60:void querySucceed() -> querySucceed
    26:26:void <clinit>() -> <clinit>
io.netty.resolver.dns.NoopDnsQueryLifecycleObserverFactory -> io.netty.resolver.dns.NoopDnsQueryLifecycleObserverFactory:
    io.netty.resolver.dns.NoopDnsQueryLifecycleObserverFactory INSTANCE -> INSTANCE
    25:26:void <init>() -> <init>
    30:30:io.netty.resolver.dns.DnsQueryLifecycleObserver newDnsQueryLifecycleObserver(io.netty.handler.codec.dns.DnsQuestion) -> newDnsQueryLifecycleObserver
    23:23:void <clinit>() -> <clinit>
io.netty.resolver.dns.RotationalDnsServerAddresses -> io.netty.resolver.dns.RotationalDnsServerAddresses:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater startIdxUpdater -> startIdxUpdater
    int startIdx -> startIdx
    31:32:void <init>(java.net.InetSocketAddress[]) -> <init>
    37:45:io.netty.resolver.dns.DnsServerAddressStream stream() -> stream
    24:25:void <clinit>() -> <clinit>
io.netty.resolver.dns.SequentialDnsServerAddressStream -> io.netty.resolver.dns.SequentialDnsServerAddressStream:
    java.net.InetSocketAddress[] addresses -> addresses
    int i -> i
    26:29:void <init>(java.net.InetSocketAddress[],int) -> <init>
    33:40:java.net.InetSocketAddress next() -> next
    45:45:int size() -> size
    50:50:io.netty.resolver.dns.SequentialDnsServerAddressStream duplicate() -> duplicate
    55:55:java.lang.String toString() -> toString
    59:69:java.lang.String toString(java.lang.String,int,java.net.InetSocketAddress[]) -> toString
    21:21:io.netty.resolver.dns.DnsServerAddressStream duplicate() -> duplicate
io.netty.resolver.dns.SingletonDnsServerAddresses -> io.netty.resolver.dns.SingletonDnsServerAddresses:
    java.net.InetSocketAddress address -> address
    io.netty.resolver.dns.DnsServerAddressStream stream -> stream
    25:49:void <init>(java.net.InetSocketAddress) -> <init>
    53:53:io.netty.resolver.dns.DnsServerAddressStream stream() -> stream
    58:58:java.lang.String toString() -> toString
    21:21:java.net.InetSocketAddress access$000(io.netty.resolver.dns.SingletonDnsServerAddresses) -> access$000
io.netty.resolver.dns.SingletonDnsServerAddresses$1 -> io.netty.resolver.dns.SingletonDnsServerAddresses$1:
    io.netty.resolver.dns.SingletonDnsServerAddresses this$0 -> this$0
    25:25:void <init>(io.netty.resolver.dns.SingletonDnsServerAddresses) -> <init>
    28:28:java.net.InetSocketAddress next() -> next
    33:33:int size() -> size
    38:38:io.netty.resolver.dns.DnsServerAddressStream duplicate() -> duplicate
    43:43:java.lang.String toString() -> toString
io.netty.resolver.dns.TraceDnsQueryLifeCycleObserverFactory -> io.netty.resolver.dns.TraceDnsQueryLifeCycleObserverFactory:
    io.netty.util.internal.logging.InternalLogger DEFAULT_LOGGER -> DEFAULT_LOGGER
    io.netty.util.internal.logging.InternalLogLevel DEFAULT_LEVEL -> DEFAULT_LEVEL
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.internal.logging.InternalLogLevel level -> level
    33:34:void <init>() -> <init>
    36:39:void <init>(io.netty.util.internal.logging.InternalLogger,io.netty.util.internal.logging.InternalLogLevel) -> <init>
    43:43:io.netty.resolver.dns.DnsQueryLifecycleObserver newDnsQueryLifecycleObserver(io.netty.handler.codec.dns.DnsQuestion) -> newDnsQueryLifecycleObserver
    26:28:void <clinit>() -> <clinit>
io.netty.resolver.dns.TraceDnsQueryLifecycleObserver -> io.netty.resolver.dns.TraceDnsQueryLifecycleObserver:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.internal.logging.InternalLogLevel level -> level
    io.netty.handler.codec.dns.DnsQuestion question -> question
    java.net.InetSocketAddress dnsServerAddress -> dnsServerAddress
    35:39:void <init>(io.netty.handler.codec.dns.DnsQuestion,io.netty.util.internal.logging.InternalLogger,io.netty.util.internal.logging.InternalLogLevel) -> <init>
    43:44:void queryWritten(java.net.InetSocketAddress,io.netty.channel.ChannelFuture) -> queryWritten
    48:55:void queryCancelled(int) -> queryCancelled
    59:60:io.netty.resolver.dns.DnsQueryLifecycleObserver queryRedirected(java.util.List) -> queryRedirected
    65:66:io.netty.resolver.dns.DnsQueryLifecycleObserver queryCNAMEd(io.netty.handler.codec.dns.DnsQuestion) -> queryCNAMEd
    71:72:io.netty.resolver.dns.DnsQueryLifecycleObserver queryNoAnswer(io.netty.handler.codec.dns.DnsResponseCode) -> queryNoAnswer
    77:82:void queryFailed(java.lang.Throwable) -> queryFailed
    86:86:void querySucceed() -> querySucceed
io.netty.resolver.dns.UnixResolverDnsServerAddressStreamProvider -> io.netty.resolver.dns.UnixResolverDnsServerAddressStreamProvider:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.resolver.dns.DnsServerAddresses defaultNameServerAddresses -> defaultNameServerAddresses
    java.util.Map domainToNameServerStreamMap -> domainToNameServerStreamMap
    66:72:io.netty.resolver.dns.DnsServerAddressStreamProvider parseSilently() -> parseSilently
    89:108:void <init>(java.io.File,java.io.File[]) -> <init>
    124:126:void <init>(java.lang.String,java.lang.String) -> <init>
    131:142:io.netty.resolver.dns.DnsServerAddressStream nameServerAddressStream(java.lang.String) -> nameServerAddressStream
    146:146:boolean mayOverrideNameServers() -> mayOverrideNameServers
    150:221:java.util.Map parse(java.io.File[]) -> parse
    228:229:void putIfAbsent(java.util.Map,java.lang.String,java.util.List) -> putIfAbsent
    234:240:void putIfAbsent(java.util.Map,java.lang.String,io.netty.resolver.dns.DnsServerAddresses) -> putIfAbsent
    250:250:int parseEtcResolverFirstNdots() -> parseEtcResolverFirstNdots
    262:285:int parseEtcResolverFirstNdots(java.io.File) -> parseEtcResolverFirstNdots
    46:47:void <clinit>() -> <clinit>
io.netty.util.AbstractConstant -> io.netty.util.AbstractConstant:
    java.util.concurrent.atomic.AtomicLong uniqueIdGenerator -> uniqueIdGenerator
    int id -> id
    java.lang.String name -> name
    long uniquifier -> uniquifier
    33:37:void <init>(int,java.lang.String) -> <init>
    41:41:java.lang.String name() -> name
    46:46:int id() -> id
    51:51:java.lang.String toString() -> toString
    56:56:int hashCode() -> hashCode
    61:61:boolean equals(java.lang.Object) -> equals
    66:86:int compareTo(io.netty.util.AbstractConstant) -> compareTo
    23:23:int compareTo(java.lang.Object) -> compareTo
    25:25:void <clinit>() -> <clinit>
io.netty.util.AbstractReferenceCounted -> io.netty.util.AbstractReferenceCounted:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater refCntUpdater -> refCntUpdater
    int refCnt -> refCnt
    25:30:void <init>() -> <init>
    34:34:int refCnt() -> refCnt
    41:42:void setRefCnt(int) -> setRefCnt
    46:46:io.netty.util.ReferenceCounted retain() -> retain
    51:51:io.netty.util.ReferenceCounted retain(int) -> retain
    55:61:io.netty.util.ReferenceCounted retain0(int) -> retain0
    66:66:io.netty.util.ReferenceCounted touch() -> touch
    71:71:boolean release() -> release
    76:76:boolean release(int) -> release
    80:89:boolean release0(int) -> release0
    void deallocate() -> deallocate
    27:28:void <clinit>() -> <clinit>
io.netty.util.AsciiString -> io.netty.util.AsciiString:
    io.netty.util.AsciiString EMPTY_STRING -> EMPTY_STRING
    byte[] value -> value
    int offset -> offset
    int length -> length
    int hash -> hash
    java.lang.String string -> string
    io.netty.util.HashingStrategy CASE_INSENSITIVE_HASHER -> CASE_INSENSITIVE_HASHER
    io.netty.util.HashingStrategy CASE_SENSITIVE_HASHER -> CASE_SENSITIVE_HASHER
    87:88:void <init>(byte[],boolean) -> <init>
    95:108:void <init>(byte[],int,int,boolean) -> <init>
    210:211:void <init>(java.lang.CharSequence) -> <init>
    217:229:void <init>(java.lang.CharSequence,int,int) -> <init>
    260:260:int forEachByte(io.netty.util.ByteProcessor) -> forEachByte
    271:275:int forEachByte(int,int,io.netty.util.ByteProcessor) -> forEachByte
    279:285:int forEachByte0(int,int,io.netty.util.ByteProcessor) -> forEachByte0
    326:333:byte byteAt(int) -> byteAt
    340:340:boolean isEmpty() -> isEmpty
    348:348:int length() -> length
    368:368:byte[] array() -> array
    377:377:int arrayOffset() -> arrayOffset
    422:422:char charAt(int) -> charAt
    450:465:int compareTo(java.lang.CharSequence) -> compareTo
    526:545:boolean contentEqualsIgnoreCase(java.lang.CharSequence) -> contentEqualsIgnoreCase
    623:623:io.netty.util.AsciiString subSequence(int,int) -> subSequence
    636:649:io.netty.util.AsciiString subSequence(int,int,boolean) -> subSequence
    726:740:int indexOf(char,int) -> indexOf
    1016:1033:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
    1043:1054:io.netty.util.AsciiString trim() -> trim
    1064:1076:boolean contentEquals(java.lang.CharSequence) -> contentEquals
    1153:1158:int hashCode() -> hashCode
    1163:1173:boolean equals(java.lang.Object) -> equals
    1182:1187:java.lang.String toString() -> toString
    1195:1195:java.lang.String toString(int) -> toString
    1202:1214:java.lang.String toString(int,int) -> toString
    1416:1416:io.netty.util.AsciiString of(java.lang.CharSequence) -> of
    1426:1428:io.netty.util.AsciiString cached(java.lang.String) -> cached
    1437:1444:int hashCode(java.lang.CharSequence) -> hashCode
    1466:1485:boolean contentEqualsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> contentEqualsIgnoreCase
    1528:1548:boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence) -> contentEquals
    1826:1843:int indexOf(java.lang.CharSequence,char,int) -> indexOf
    1847:1847:boolean equalsIgnoreCase(byte,byte) -> equalsIgnoreCase
    1851:1851:boolean equalsIgnoreCase(char,char) -> equalsIgnoreCase
    1855:1855:byte toLowerCase(byte) -> toLowerCase
    1859:1859:char toLowerCase(char) -> toLowerCase
    1871:1871:boolean isUpperCase(byte) -> isUpperCase
    1875:1875:boolean isUpperCase(char) -> isUpperCase
    1879:1879:byte c2b(char) -> c2b
    1883:1883:char b2c(byte) -> b2c
    47:47:java.lang.CharSequence subSequence(int,int) -> subSequence
    47:47:int compareTo(java.lang.Object) -> compareTo
    48:1398:void <clinit>() -> <clinit>
io.netty.util.AsciiString$1 -> io.netty.util.AsciiString$1:
    1386:1386:void <init>() -> <init>
    1389:1389:int hashCode(java.lang.CharSequence) -> hashCode
    1394:1394:boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> equals
    1386:1386:boolean equals(java.lang.Object,java.lang.Object) -> equals
    1386:1386:int hashCode(java.lang.Object) -> hashCode
io.netty.util.AsciiString$2 -> io.netty.util.AsciiString$2:
    1399:1399:void <init>() -> <init>
    1402:1402:int hashCode(java.lang.CharSequence) -> hashCode
    1407:1407:boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> equals
    1399:1399:boolean equals(java.lang.Object,java.lang.Object) -> equals
    1399:1399:int hashCode(java.lang.Object) -> hashCode
io.netty.util.AsyncMapping -> io.netty.util.AsyncMapping:
    io.netty.util.concurrent.Future map(java.lang.Object,io.netty.util.concurrent.Promise) -> map
io.netty.util.Attribute -> io.netty.util.Attribute:
    java.lang.Object get() -> get
    void set(java.lang.Object) -> set
io.netty.util.AttributeKey -> io.netty.util.AttributeKey:
    io.netty.util.ConstantPool pool -> pool
    39:39:io.netty.util.AttributeKey valueOf(java.lang.String) -> valueOf
    64:65:void <init>(int,java.lang.String) -> <init>
    25:25:void <init>(int,java.lang.String,io.netty.util.AttributeKey$1) -> <init>
    27:27:void <clinit>() -> <clinit>
io.netty.util.AttributeKey$1 -> io.netty.util.AttributeKey$1:
    27:27:void <init>() -> <init>
    30:30:io.netty.util.AttributeKey newConstant(int,java.lang.String) -> newConstant
    27:27:io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
io.netty.util.AttributeMap -> io.netty.util.AttributeMap:
    io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
io.netty.util.BooleanSupplier -> io.netty.util.BooleanSupplier:
    io.netty.util.BooleanSupplier FALSE_SUPPLIER -> FALSE_SUPPLIER
    io.netty.util.BooleanSupplier TRUE_SUPPLIER -> TRUE_SUPPLIER
    boolean get() -> get
    32:42:void <clinit>() -> <clinit>
io.netty.util.BooleanSupplier$1 -> io.netty.util.BooleanSupplier$1:
    32:32:void <init>() -> <init>
    35:35:boolean get() -> get
io.netty.util.BooleanSupplier$2 -> io.netty.util.BooleanSupplier$2:
    42:42:void <init>() -> <init>
    45:45:boolean get() -> get
io.netty.util.ByteProcessor -> io.netty.util.ByteProcessor:
    io.netty.util.ByteProcessor FIND_NUL -> FIND_NUL
    io.netty.util.ByteProcessor FIND_NON_NUL -> FIND_NON_NUL
    io.netty.util.ByteProcessor FIND_CR -> FIND_CR
    io.netty.util.ByteProcessor FIND_NON_CR -> FIND_NON_CR
    io.netty.util.ByteProcessor FIND_LF -> FIND_LF
    io.netty.util.ByteProcessor FIND_NON_LF -> FIND_NON_LF
    io.netty.util.ByteProcessor FIND_SEMI_COLON -> FIND_SEMI_COLON
    io.netty.util.ByteProcessor FIND_COMMA -> FIND_COMMA
    io.netty.util.ByteProcessor FIND_CRLF -> FIND_CRLF
    io.netty.util.ByteProcessor FIND_NON_CRLF -> FIND_NON_CRLF
    io.netty.util.ByteProcessor FIND_LINEAR_WHITESPACE -> FIND_LINEAR_WHITESPACE
    io.netty.util.ByteProcessor FIND_NON_LINEAR_WHITESPACE -> FIND_NON_LINEAR_WHITESPACE
    boolean process(byte) -> process
    56:126:void <clinit>() -> <clinit>
io.netty.util.ByteProcessor$1 -> io.netty.util.ByteProcessor$1:
    96:96:void <init>() -> <init>
    99:99:boolean process(byte) -> process
io.netty.util.ByteProcessor$2 -> io.netty.util.ByteProcessor$2:
    106:106:void <init>() -> <init>
    109:109:boolean process(byte) -> process
io.netty.util.ByteProcessor$3 -> io.netty.util.ByteProcessor$3:
    116:116:void <init>() -> <init>
    119:119:boolean process(byte) -> process
io.netty.util.ByteProcessor$4 -> io.netty.util.ByteProcessor$4:
    126:126:void <init>() -> <init>
    129:129:boolean process(byte) -> process
io.netty.util.ByteProcessor$IndexNotOfProcessor -> io.netty.util.ByteProcessor$IndexNotOfProcessor:
    byte byteToNotFind -> byteToNotFind
    43:45:void <init>(byte) -> <init>
    49:49:boolean process(byte) -> process
io.netty.util.ByteProcessor$IndexOfProcessor -> io.netty.util.ByteProcessor$IndexOfProcessor:
    byte byteToFind -> byteToFind
    27:29:void <init>(byte) -> <init>
    33:33:boolean process(byte) -> process
io.netty.util.CharsetUtil -> io.netty.util.CharsetUtil:
    java.nio.charset.Charset UTF_16 -> UTF_16
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset[] CHARSETS -> CHARSETS
    88:91:java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction) -> encoder
    112:123:java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset) -> encoder
    144:147:java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction) -> decoder
    168:179:java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset) -> decoder
    37:65:void <clinit>() -> <clinit>
io.netty.util.Constant -> io.netty.util.Constant:
io.netty.util.ConstantPool -> io.netty.util.ConstantPool:
    java.util.concurrent.ConcurrentMap constants -> constants
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    30:34:void <init>() -> <init>
    40:47:io.netty.util.Constant valueOf(java.lang.Class,java.lang.String) -> valueOf
    59:60:io.netty.util.Constant valueOf(java.lang.String) -> valueOf
    69:78:io.netty.util.Constant getOrCreate(java.lang.String) -> getOrCreate
    85:86:boolean exists(java.lang.String) -> exists
    94:95:io.netty.util.Constant newInstance(java.lang.String) -> newInstance
    104:113:io.netty.util.Constant createOrThrow(java.lang.String) -> createOrThrow
    117:123:java.lang.String checkNotNullAndNotEmpty(java.lang.String) -> checkNotNullAndNotEmpty
    io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
    130:130:int nextId() -> nextId
io.netty.util.DefaultAttributeMap -> io.netty.util.DefaultAttributeMap:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater updater -> updater
    int BUCKET_SIZE -> BUCKET_SIZE
    int MASK -> MASK
    java.util.concurrent.atomic.AtomicReferenceArray attributes -> attributes
    26:26:void <init>() -> <init>
    42:88:io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    93:120:boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
    124:124:int index(io.netty.util.AttributeKey) -> index
    29:30:void <clinit>() -> <clinit>
io.netty.util.DefaultAttributeMap$DefaultAttribute -> io.netty.util.DefaultAttributeMap$DefaultAttribute:
    io.netty.util.DefaultAttributeMap$DefaultAttribute head -> head
    io.netty.util.AttributeKey key -> key
    io.netty.util.DefaultAttributeMap$DefaultAttribute prev -> prev
    io.netty.util.DefaultAttributeMap$DefaultAttribute next -> next
    boolean removed -> removed
    143:146:void <init>(io.netty.util.DefaultAttributeMap$DefaultAttribute,io.netty.util.AttributeKey) -> <init>
    149:152:void <init>() -> <init>
    128:128:io.netty.util.DefaultAttributeMap$DefaultAttribute access$002(io.netty.util.DefaultAttributeMap$DefaultAttribute,io.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$002
    128:128:io.netty.util.DefaultAttributeMap$DefaultAttribute access$102(io.netty.util.DefaultAttributeMap$DefaultAttribute,io.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$102
    128:128:io.netty.util.DefaultAttributeMap$DefaultAttribute access$000(io.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$000
    128:128:io.netty.util.AttributeKey access$200(io.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$200
    128:128:boolean access$300(io.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$300
io.netty.util.HashingStrategy -> io.netty.util.HashingStrategy:
    io.netty.util.HashingStrategy JAVA_HASHER -> JAVA_HASHER
    int hashCode(java.lang.Object) -> hashCode
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    62:62:void <clinit>() -> <clinit>
io.netty.util.HashingStrategy$1 -> io.netty.util.HashingStrategy$1:
    62:62:void <init>() -> <init>
    65:65:int hashCode(java.lang.Object) -> hashCode
    70:70:boolean equals(java.lang.Object,java.lang.Object) -> equals
io.netty.util.IllegalReferenceCountException -> io.netty.util.IllegalReferenceCountException:
    27:27:void <init>() -> <init>
    30:31:void <init>(int) -> <init>
    34:35:void <init>(int,int) -> <init>
    38:39:void <init>(java.lang.String) -> <init>
io.netty.util.IntSupplier -> io.netty.util.IntSupplier:
    int get() -> get
io.netty.util.Mapping -> io.netty.util.Mapping:
    java.lang.Object map(java.lang.Object) -> map
io.netty.util.NetUtil -> io.netty.util.NetUtil:
    java.net.Inet4Address LOCALHOST4 -> LOCALHOST4
    java.net.Inet6Address LOCALHOST6 -> LOCALHOST6
    java.net.InetAddress LOCALHOST -> LOCALHOST
    java.net.NetworkInterface LOOPBACK_IF -> LOOPBACK_IF
    int SOMAXCONN -> SOMAXCONN
    boolean IPV4_PREFERRED -> IPV4_PREFERRED
    boolean IPV6_ADDRESSES_PREFERRED -> IPV6_ADDRESSES_PREFERRED
    io.netty.util.internal.logging.InternalLogger logger -> logger
    314:334:java.lang.Integer sysctlGetInt(java.lang.String) -> sysctlGetInt
    347:347:boolean isIpV4StackPreferred() -> isIpV4StackPreferred
    358:358:boolean isIpV6AddressesPreferred() -> isIpV6AddressesPreferred
    366:382:byte[] createByteArrayFromIpAddressString(java.lang.String) -> createByteArrayFromIpAddressString
    386:386:int decimalDigit(java.lang.String,int) -> decimalDigit
    390:400:byte ipv4WordToByte(java.lang.String,int,int) -> ipv4WordToByte
    406:410:byte[] validIpV4ToBytes(java.lang.String) -> validIpV4ToBytes
    418:426:java.lang.String intToIpAddress(int) -> intToIpAddress
    436:436:java.lang.String bytesToIpAddress(byte[]) -> bytesToIpAddress
    446:460:java.lang.String bytesToIpAddress(byte[],int,int) -> bytesToIpAddress
    465:579:boolean isValidIpV6Address(java.lang.String) -> isValidIpV6Address
    585:596:boolean isValidIpV4Word(java.lang.CharSequence,int,int) -> isValidIpV4Word
    600:600:boolean isValidHexChar(char) -> isValidHexChar
    604:604:boolean isValidNumericChar(char) -> isValidNumericChar
    608:608:boolean isValidIPv4MappedChar(char) -> isValidIPv4MappedChar
    615:615:boolean isValidIPv4MappedSeparators(byte,byte,boolean) -> isValidIPv4MappedSeparators
    619:622:boolean isValidIPv4Mapped(byte[],int,int,int) -> isValidIPv4Mapped
    632:632:boolean isValidIpV4Address(java.lang.String) -> isValidIpV4Address
    637:643:boolean isValidIpV4Address(java.lang.String,int,int) -> isValidIpV4Address
    698:885:byte[] getIPv6ByName(java.lang.CharSequence,boolean) -> getIPv6ByName
    896:907:java.lang.String toSocketAddressString(java.net.InetSocketAddress) -> toSocketAddressString
    914:916:java.lang.String toSocketAddressString(java.lang.String,int) -> toSocketAddressString
    920:930:java.lang.StringBuilder newSocketAddressStringBuilder(java.lang.String,java.lang.String,boolean) -> newSocketAddressStringBuilder
    946:946:java.lang.String toAddressString(java.net.InetAddress) -> toAddressString
    974:981:java.lang.String toAddressString(java.net.InetAddress,boolean) -> toAddressString
    985:1068:java.lang.String toAddressString(byte[],int,boolean) -> toAddressString
    1083:1083:boolean inRangeEndExclusive(int,int,int) -> inRangeEndExclusive
    1089:1091:void <init>() -> <init>
    51:51:io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    51:51:java.lang.Integer access$100(java.lang.String) -> access$100
    123:305:void <clinit>() -> <clinit>
io.netty.util.NetUtil$1 -> io.netty.util.NetUtil$1:
    251:251:void <init>() -> <init>
    258:302:java.lang.Integer run() -> run
    251:251:java.lang.Object run() -> run
io.netty.util.NettyRuntime -> io.netty.util.NettyRuntime:
    io.netty.util.NettyRuntime$AvailableProcessorsHolder holder -> holder
    98:98:int availableProcessors() -> availableProcessors
    76:76:void <clinit>() -> <clinit>
io.netty.util.NettyRuntime$AvailableProcessorsHolder -> io.netty.util.NettyRuntime$AvailableProcessorsHolder:
    int availableProcessors -> availableProcessors
    32:32:void <init>() -> <init>
    44:54:void setAvailableProcessors(int) -> setAvailableProcessors
    65:72:int availableProcessors() -> availableProcessors
io.netty.util.Recycler -> io.netty.util.Recycler:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.Recycler$Handle NOOP_HANDLE -> NOOP_HANDLE
    java.util.concurrent.atomic.AtomicInteger ID_GENERATOR -> ID_GENERATOR
    int OWN_THREAD_ID -> OWN_THREAD_ID
    int DEFAULT_INITIAL_MAX_CAPACITY_PER_THREAD -> DEFAULT_INITIAL_MAX_CAPACITY_PER_THREAD
    int DEFAULT_MAX_CAPACITY_PER_THREAD -> DEFAULT_MAX_CAPACITY_PER_THREAD
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    int MAX_SHARED_CAPACITY_FACTOR -> MAX_SHARED_CAPACITY_FACTOR
    int MAX_DELAYED_QUEUES_PER_THREAD -> MAX_DELAYED_QUEUES_PER_THREAD
    int LINK_CAPACITY -> LINK_CAPACITY
    int RATIO -> RATIO
    int maxCapacityPerThread -> maxCapacityPerThread
    int maxSharedCapacityFactor -> maxSharedCapacityFactor
    int ratioMask -> ratioMask
    int maxDelayedQueuesPerThread -> maxDelayedQueuesPerThread
    io.netty.util.concurrent.FastThreadLocal threadLocal -> threadLocal
    io.netty.util.concurrent.FastThreadLocal DELAYED_RECYCLED -> DELAYED_RECYCLED
    120:121:void <init>() -> <init>
    124:125:void <init>(int) -> <init>
    128:129:void <init>(int,int) -> <init>
    111:143:void <init>(int,int,int,int) -> <init>
    147:156:java.lang.Object get() -> get
    164:174:boolean recycle(java.lang.Object,io.netty.util.Recycler$Handle) -> recycle
    178:178:int threadLocalCapacity() -> threadLocalCapacity
    182:182:int threadLocalSize() -> threadLocalSize
    java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
    39:39:int access$000(io.netty.util.Recycler) -> access$000
    39:39:int access$100(io.netty.util.Recycler) -> access$100
    39:39:int access$200(io.netty.util.Recycler) -> access$200
    39:39:int access$300(io.netty.util.Recycler) -> access$300
    39:39:int access$800() -> access$800
    39:39:java.util.concurrent.atomic.AtomicInteger access$900() -> access$900
    39:39:int access$1600() -> access$1600
    39:39:int access$2000() -> access$2000
    39:39:io.netty.util.concurrent.FastThreadLocal access$2100() -> access$2100
    41:213:void <clinit>() -> <clinit>
io.netty.util.Recycler$1 -> io.netty.util.Recycler$1:
    44:44:void <init>() -> <init>
    48:48:void recycle(java.lang.Object) -> recycle
io.netty.util.Recycler$2 -> io.netty.util.Recycler$2:
    io.netty.util.Recycler this$0 -> this$0
    111:111:void <init>(io.netty.util.Recycler) -> <init>
    114:115:io.netty.util.Recycler$Stack initialValue() -> initialValue
    111:111:java.lang.Object initialValue() -> initialValue
io.netty.util.Recycler$3 -> io.netty.util.Recycler$3:
    214:214:void <init>() -> <init>
    217:217:java.util.Map initialValue() -> initialValue
    214:214:java.lang.Object initialValue() -> initialValue
io.netty.util.Recycler$DefaultHandle -> io.netty.util.Recycler$DefaultHandle:
    int lastRecycledId -> lastRecycledId
    int recycleId -> recycleId
    boolean hasBeenRecycled -> hasBeenRecycled
    io.netty.util.Recycler$Stack stack -> stack
    java.lang.Object value -> value
    200:202:void <init>(io.netty.util.Recycler$Stack) -> <init>
    206:210:void recycle(java.lang.Object) -> recycle
    191:191:java.lang.Object access$402(io.netty.util.Recycler$DefaultHandle,java.lang.Object) -> access$402
    191:191:java.lang.Object access$400(io.netty.util.Recycler$DefaultHandle) -> access$400
    191:191:io.netty.util.Recycler$Stack access$500(io.netty.util.Recycler$DefaultHandle) -> access$500
    191:191:int access$1102(io.netty.util.Recycler$DefaultHandle,int) -> access$1102
    191:191:io.netty.util.Recycler$Stack access$502(io.netty.util.Recycler$DefaultHandle,io.netty.util.Recycler$Stack) -> access$502
    191:191:int access$1500(io.netty.util.Recycler$DefaultHandle) -> access$1500
    191:191:int access$1502(io.netty.util.Recycler$DefaultHandle,int) -> access$1502
    191:191:int access$1100(io.netty.util.Recycler$DefaultHandle) -> access$1100
io.netty.util.Recycler$Handle -> io.netty.util.Recycler$Handle:
    void recycle(java.lang.Object) -> recycle
io.netty.util.Recycler$Stack -> io.netty.util.Recycler$Stack:
    io.netty.util.Recycler parent -> parent
    java.lang.ref.WeakReference threadRef -> threadRef
    java.util.concurrent.atomic.AtomicInteger availableSharedCapacity -> availableSharedCapacity
    int maxDelayedQueues -> maxDelayedQueues
    int maxCapacity -> maxCapacity
    int ratioMask -> ratioMask
    io.netty.util.Recycler$DefaultHandle[] elements -> elements
    int size -> size
    int handleRecycleCount -> handleRecycleCount
    io.netty.util.Recycler$WeakOrderQueue cursor -> cursor
    io.netty.util.Recycler$WeakOrderQueue prev -> prev
    io.netty.util.Recycler$WeakOrderQueue head -> head
    434:447:void <init>(io.netty.util.Recycler,java.lang.Thread,int,int,int,int) -> <init>
    451:453:void setHead(io.netty.util.Recycler$WeakOrderQueue) -> setHead
    456:467:int increaseCapacity(int) -> increaseCapacity
    472:488:io.netty.util.Recycler$DefaultHandle pop() -> pop
    493:500:boolean scavenge() -> scavenge
    505:550:boolean scavengeSome() -> scavengeSome
    554:564:void push(io.netty.util.Recycler$DefaultHandle) -> push
    567:583:void pushNow(io.netty.util.Recycler$DefaultHandle) -> pushNow
    589:609:void pushLater(io.netty.util.Recycler$DefaultHandle,java.lang.Thread) -> pushLater
    612:619:boolean dropHandle(io.netty.util.Recycler$DefaultHandle) -> dropHandle
    623:623:io.netty.util.Recycler$DefaultHandle newHandle() -> newHandle
    412:412:io.netty.util.Recycler$DefaultHandle[] access$600(io.netty.util.Recycler$Stack) -> access$600
    412:412:int access$700(io.netty.util.Recycler$Stack) -> access$700
    412:412:int access$702(io.netty.util.Recycler$Stack,int) -> access$702
io.netty.util.Recycler$WeakOrderQueue -> io.netty.util.Recycler$WeakOrderQueue:
    io.netty.util.Recycler$WeakOrderQueue DUMMY -> DUMMY
    io.netty.util.Recycler$WeakOrderQueue$Link head -> head
    io.netty.util.Recycler$WeakOrderQueue$Link tail -> tail
    io.netty.util.Recycler$WeakOrderQueue next -> next
    java.lang.ref.WeakReference owner -> owner
    int id -> id
    java.util.concurrent.atomic.AtomicInteger availableSharedCapacity -> availableSharedCapacity
    boolean $assertionsDisabled -> $assertionsDisabled
    241:247:void <init>() -> <init>
    241:257:void <init>(io.netty.util.Recycler$Stack,java.lang.Thread) -> <init>
    260:264:io.netty.util.Recycler$WeakOrderQueue newQueue(io.netty.util.Recycler$Stack,java.lang.Thread) -> newQueue
    268:270:void setNext(io.netty.util.Recycler$WeakOrderQueue) -> setNext
    277:278:io.netty.util.Recycler$WeakOrderQueue allocate(io.netty.util.Recycler$Stack,java.lang.Thread) -> allocate
    282:291:boolean reserveSpace(java.util.concurrent.atomic.AtomicInteger,int) -> reserveSpace
    295:297:void reclaimSpace(int) -> reclaimSpace
    300:319:void add(io.netty.util.Recycler$DefaultHandle) -> add
    322:322:boolean hasFinalData() -> hasFinalData
    328:391:boolean transfer(io.netty.util.Recycler$Stack) -> transfer
    398:409:void finalize() -> finalize
    223:223:void access$1700(io.netty.util.Recycler$WeakOrderQueue,io.netty.util.Recycler$WeakOrderQueue) -> access$1700
    223:223:io.netty.util.Recycler$WeakOrderQueue access$1800(io.netty.util.Recycler$WeakOrderQueue) -> access$1800
    223:223:java.lang.ref.WeakReference access$1900(io.netty.util.Recycler$WeakOrderQueue) -> access$1900
    223:225:void <clinit>() -> <clinit>
io.netty.util.Recycler$WeakOrderQueue$Link -> io.netty.util.Recycler$WeakOrderQueue$Link:
    io.netty.util.Recycler$DefaultHandle[] elements -> elements
    int readIndex -> readIndex
    io.netty.util.Recycler$WeakOrderQueue$Link next -> next
    229:230:void <init>() -> <init>
    229:229:void <init>(io.netty.util.Recycler$1) -> <init>
    229:229:io.netty.util.Recycler$WeakOrderQueue$Link access$1202(io.netty.util.Recycler$WeakOrderQueue$Link,io.netty.util.Recycler$WeakOrderQueue$Link) -> access$1202
    229:229:io.netty.util.Recycler$DefaultHandle[] access$1300(io.netty.util.Recycler$WeakOrderQueue$Link) -> access$1300
    229:229:int access$1400(io.netty.util.Recycler$WeakOrderQueue$Link) -> access$1400
    229:229:io.netty.util.Recycler$WeakOrderQueue$Link access$1200(io.netty.util.Recycler$WeakOrderQueue$Link) -> access$1200
    229:229:int access$1402(io.netty.util.Recycler$WeakOrderQueue$Link,int) -> access$1402
io.netty.util.ReferenceCountUtil -> io.netty.util.ReferenceCountUtil:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    39:42:java.lang.Object retain(java.lang.Object) -> retain
    51:54:java.lang.Object retain(java.lang.Object,int) -> retain
    63:66:java.lang.Object touch(java.lang.Object) -> touch
    76:79:java.lang.Object touch(java.lang.Object,java.lang.Object) -> touch
    87:90:boolean release(java.lang.Object) -> release
    98:101:boolean release(java.lang.Object,int) -> release
    113:117:void safeRelease(java.lang.Object) -> safeRelease
    203:203:void <init>() -> <init>
    27:31:void <clinit>() -> <clinit>
io.netty.util.ReferenceCounted -> io.netty.util.ReferenceCounted:
    int refCnt() -> refCnt
    io.netty.util.ReferenceCounted retain() -> retain
    io.netty.util.ReferenceCounted retain(int) -> retain
    io.netty.util.ReferenceCounted touch() -> touch
    io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    boolean release() -> release
    boolean release(int) -> release
io.netty.util.ResourceLeakDetector -> io.netty.util.ResourceLeakDetector:
    io.netty.util.ResourceLeakDetector$Level DEFAULT_LEVEL -> DEFAULT_LEVEL
    int TARGET_RECORDS -> TARGET_RECORDS
    io.netty.util.ResourceLeakDetector$Level level -> level
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.ConcurrentMap allLeaks -> allLeaks
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    java.util.concurrent.ConcurrentMap reportedLeaks -> reportedLeaks
    java.lang.String resourceType -> resourceType
    int samplingInterval -> samplingInterval
    java.util.concurrent.atomic.AtomicReference excludedMethods -> excludedMethods
    141:141:boolean isEnabled() -> isEnabled
    148:152:void setLevel(io.netty.util.ResourceLeakDetector$Level) -> setLevel
    158:158:io.netty.util.ResourceLeakDetector$Level getLevel() -> getLevel
    197:198:void <init>(java.lang.Class,int,long) -> <init>
    207:208:void <init>(java.lang.Class,int) -> <init>
    162:223:void <init>(java.lang.String,int,long) -> <init>
    245:245:io.netty.util.ResourceLeakTracker track(java.lang.Object) -> track
    250:263:io.netty.util.ResourceLeakDetector$DefaultResourceLeak track0(java.lang.Object) -> track0
    269:275:void clearRefQueue() -> clearRefQueue
    278:304:void reportLeak() -> reportLeak
    311:315:void reportTracedLeak(java.lang.String,java.lang.String) -> reportTracedLeak
    322:328:void reportUntracedLeak(java.lang.String) -> reportUntracedLeak
    528:549:void addExclusions(java.lang.Class,java.lang.String[]) -> addExclusions
    40:40:io.netty.util.ResourceLeakDetector$Level access$000() -> access$000
    40:40:int access$200() -> access$200
    40:40:java.util.concurrent.atomic.AtomicReference access$500() -> access$500
    44:524:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetector$DefaultResourceLeak -> io.netty.util.ResourceLeakDetector$DefaultResourceLeak:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater headUpdater -> headUpdater
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater droppedRecordsUpdater -> droppedRecordsUpdater
    io.netty.util.ResourceLeakDetector$Record head -> head
    int droppedRecords -> droppedRecords
    java.util.concurrent.ConcurrentMap allLeaks -> allLeaks
    int trackedHash -> trackedHash
    boolean $assertionsDisabled -> $assertionsDisabled
    363:374:void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,java.util.concurrent.ConcurrentMap) -> <init>
    378:379:void record() -> record
    383:384:void record(java.lang.Object) -> record
    414:439:void record0(java.lang.Object) -> record0
    442:443:boolean dispose() -> dispose
    449:455:boolean close() -> close
    461:467:boolean close(java.lang.Object) -> close
    472:520:java.lang.String toString() -> toString
    337:349:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetector$LeakEntry -> io.netty.util.ResourceLeakDetector$LeakEntry:
    io.netty.util.ResourceLeakDetector$LeakEntry INSTANCE -> INSTANCE
    int HASH -> HASH
    613:614:void <init>() -> <init>
    618:618:int hashCode() -> hashCode
    623:623:boolean equals(java.lang.Object) -> equals
    610:611:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetector$Level -> io.netty.util.ResourceLeakDetector$Level:
    io.netty.util.ResourceLeakDetector$Level DISABLED -> DISABLED
    io.netty.util.ResourceLeakDetector$Level SIMPLE -> SIMPLE
    io.netty.util.ResourceLeakDetector$Level ADVANCED -> ADVANCED
    io.netty.util.ResourceLeakDetector$Level PARANOID -> PARANOID
    io.netty.util.ResourceLeakDetector$Level[] $VALUES -> $VALUES
    54:54:io.netty.util.ResourceLeakDetector$Level[] values() -> values
    54:54:io.netty.util.ResourceLeakDetector$Level valueOf(java.lang.String) -> valueOf
    54:54:void <init>(java.lang.String,int) -> <init>
    82:88:io.netty.util.ResourceLeakDetector$Level parseLevel(java.lang.String) -> parseLevel
    54:73:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetector$Record -> io.netty.util.ResourceLeakDetector$Record:
    io.netty.util.ResourceLeakDetector$Record BOTTOM -> BOTTOM
    java.lang.String hintString -> hintString
    io.netty.util.ResourceLeakDetector$Record next -> next
    int pos -> pos
    560:565:void <init>(io.netty.util.ResourceLeakDetector$Record,java.lang.Object) -> <init>
    567:571:void <init>(io.netty.util.ResourceLeakDetector$Record) -> <init>
    574:578:void <init>() -> <init>
    582:605:java.lang.String toString() -> toString
    551:551:io.netty.util.ResourceLeakDetector$Record access$100() -> access$100
    551:551:int access$300(io.netty.util.ResourceLeakDetector$Record) -> access$300
    551:551:io.netty.util.ResourceLeakDetector$Record access$400(io.netty.util.ResourceLeakDetector$Record) -> access$400
    554:554:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetectorFactory -> io.netty.util.ResourceLeakDetectorFactory:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.ResourceLeakDetectorFactory factoryInstance -> factoryInstance
    32:32:void <init>() -> <init>
    43:43:io.netty.util.ResourceLeakDetectorFactory instance() -> instance
    65:65:io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class) -> newResourceLeakDetector
    io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int,long) -> newResourceLeakDetector
    93:93:io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int) -> newResourceLeakDetector
    32:32:io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    33:35:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory -> io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory:
    java.lang.reflect.Constructor obsoleteCustomClassConstructor -> obsoleteCustomClassConstructor
    java.lang.reflect.Constructor customClassConstructor -> customClassConstructor
    103:122:void <init>() -> <init>
    126:138:java.lang.reflect.Constructor obsoleteCustomClassConstructor(java.lang.String) -> obsoleteCustomClassConstructor
    143:155:java.lang.reflect.Constructor customClassConstructor(java.lang.String) -> customClassConstructor
    162:181:io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int,long) -> newResourceLeakDetector
    186:203:io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int) -> newResourceLeakDetector
io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory$1 -> io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory$1:
    io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory this$0 -> this$0
    106:106:void <init>(io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory) -> <init>
    109:109:java.lang.String run() -> run
    106:106:java.lang.Object run() -> run
io.netty.util.ResourceLeakHint -> io.netty.util.ResourceLeakHint:
    java.lang.String toHintString() -> toHintString
io.netty.util.ResourceLeakTracker -> io.netty.util.ResourceLeakTracker:
    void record() -> record
    void record(java.lang.Object) -> record
    boolean close(java.lang.Object) -> close
io.netty.util.Signal -> io.netty.util.Signal:
    io.netty.util.ConstantPool pool -> pool
    io.netty.util.Signal$SignalConstant constant -> constant
    45:45:io.netty.util.Signal valueOf(java.lang.Class,java.lang.String) -> valueOf
    53:55:void <init>(int,java.lang.String) -> <init>
    62:65:void expect(io.netty.util.Signal) -> expect
    69:69:java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    74:74:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    84:84:java.lang.String name() -> name
    89:89:boolean equals(java.lang.Object) -> equals
    94:94:int hashCode() -> hashCode
    99:103:int compareTo(io.netty.util.Signal) -> compareTo
    108:108:java.lang.String toString() -> toString
    23:23:int compareTo(java.lang.Object) -> compareTo
    23:23:void <init>(int,java.lang.String,io.netty.util.Signal$1) -> <init>
    27:27:void <clinit>() -> <clinit>
io.netty.util.Signal$1 -> io.netty.util.Signal$1:
    27:27:void <init>() -> <init>
    30:30:io.netty.util.Signal newConstant(int,java.lang.String) -> newConstant
    27:27:io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
io.netty.util.Signal$SignalConstant -> io.netty.util.Signal$SignalConstant:
    113:114:void <init>(int,java.lang.String) -> <init>
io.netty.util.ThreadDeathWatcher -> io.netty.util.ThreadDeathWatcher:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    java.util.Queue pendingEntries -> pendingEntries
    io.netty.util.ThreadDeathWatcher$Watcher watcher -> watcher
    java.util.concurrent.atomic.AtomicBoolean started -> started
    java.lang.Thread watcherThread -> watcherThread
    75:86:void watch(java.lang.Thread,java.lang.Runnable) -> watch
    92:100:void unwatch(java.lang.Thread,java.lang.Runnable) -> unwatch
    103:117:void schedule(java.lang.Thread,java.lang.Runnable,boolean) -> schedule
    142:142:void <init>() -> <init>
    41:41:java.util.Queue access$100() -> access$100
    41:41:java.util.concurrent.atomic.AtomicBoolean access$200() -> access$200
    41:41:io.netty.util.internal.logging.InternalLogger access$300() -> access$300
    43:64:void <clinit>() -> <clinit>
io.netty.util.ThreadDeathWatcher$1 -> io.netty.util.ThreadDeathWatcher$1:
io.netty.util.ThreadDeathWatcher$Entry -> io.netty.util.ThreadDeathWatcher$Entry:
    java.lang.Thread thread -> thread
    java.lang.Runnable task -> task
    boolean isWatch -> isWatch
    233:237:void <init>(java.lang.Thread,java.lang.Runnable,boolean) -> <init>
    241:241:int hashCode() -> hashCode
    246:255:boolean equals(java.lang.Object) -> equals
io.netty.util.ThreadDeathWatcher$Watcher -> io.netty.util.ThreadDeathWatcher$Watcher:
    java.util.List watchees -> watchees
    boolean $assertionsDisabled -> $assertionsDisabled
    144:146:void <init>() -> <init>
    151:193:void run() -> run
    197:208:void fetchWatchees() -> fetchWatchees
    211:225:void notifyWatchees() -> notifyWatchees
    144:144:void <init>(io.netty.util.ThreadDeathWatcher$1) -> <init>
    144:144:void <clinit>() -> <clinit>
io.netty.util.UncheckedBooleanSupplier -> io.netty.util.UncheckedBooleanSupplier:
    io.netty.util.UncheckedBooleanSupplier FALSE_SUPPLIER -> FALSE_SUPPLIER
    io.netty.util.UncheckedBooleanSupplier TRUE_SUPPLIER -> TRUE_SUPPLIER
    boolean get() -> get
    32:42:void <clinit>() -> <clinit>
io.netty.util.UncheckedBooleanSupplier$1 -> io.netty.util.UncheckedBooleanSupplier$1:
    32:32:void <init>() -> <init>
    35:35:boolean get() -> get
io.netty.util.UncheckedBooleanSupplier$2 -> io.netty.util.UncheckedBooleanSupplier$2:
    42:42:void <init>() -> <init>
    45:45:boolean get() -> get
io.netty.util.collection.CharObjectHashMap -> io.netty.util.collection.CharObjectHashMap:
    java.lang.Object NULL_VALUE -> NULL_VALUE
    int maxSize -> maxSize
    float loadFactor -> loadFactor
    char[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    int mask -> mask
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.lang.Iterable entries -> entries
    boolean $assertionsDisabled -> $assertionsDisabled
    72:73:void <init>() -> <init>
    76:77:void <init>(int) -> <init>
    62:100:void <init>(int,float) -> <init>
    103:104:java.lang.Object toExternal(java.lang.Object) -> toExternal
    109:109:java.lang.Object toInternal(java.lang.Object) -> toInternal
    114:115:java.lang.Object get(char) -> get
    120:141:java.lang.Object put(char,java.lang.Object) -> put
    148:165:void putAll(java.util.Map) -> putAll
    169:176:java.lang.Object remove(char) -> remove
    181:181:int size() -> size
    186:186:boolean isEmpty() -> isEmpty
    191:194:void clear() -> clear
    198:198:boolean containsKey(char) -> containsKey
    204:211:boolean containsValue(java.lang.Object) -> containsValue
    216:216:java.lang.Iterable entries() -> entries
    221:221:java.util.Collection values() -> values
    256:267:int hashCode() -> hashCode
    272:297:boolean equals(java.lang.Object) -> equals
    302:302:boolean containsKey(java.lang.Object) -> containsKey
    307:307:java.lang.Object get(java.lang.Object) -> get
    312:312:java.lang.Object put(java.lang.Character,java.lang.Object) -> put
    317:317:java.lang.Object remove(java.lang.Object) -> remove
    322:322:java.util.Set keySet() -> keySet
    327:327:java.util.Set entrySet() -> entrySet
    331:331:char objectToKey(java.lang.Object) -> objectToKey
    341:355:int indexOf(char) -> indexOf
    365:365:int hashIndex(char) -> hashIndex
    372:372:int hashCode(char) -> hashCode
    380:380:int probeNext(int) -> probeNext
    387:397:void growSize() -> growSize
    407:434:boolean removeAt(int) -> removeAt
    442:443:int calcMaxSize(int) -> calcMaxSize
    452:484:void rehash(int) -> rehash
    488:505:java.lang.String toString() -> toString
    513:513:java.lang.String keyToString(char) -> keyToString
    37:37:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    37:37:int access$300(io.netty.util.collection.CharObjectHashMap) -> access$300
    37:37:java.util.Set access$500(io.netty.util.collection.CharObjectHashMap) -> access$500
    37:37:java.lang.Object[] access$600(io.netty.util.collection.CharObjectHashMap) -> access$600
    37:37:boolean access$700(io.netty.util.collection.CharObjectHashMap,int) -> access$700
    37:37:char[] access$800(io.netty.util.collection.CharObjectHashMap) -> access$800
    37:37:java.lang.Object access$900(java.lang.Object) -> access$900
    37:37:java.lang.Object access$1000(java.lang.Object) -> access$1000
    37:49:void <clinit>() -> <clinit>
io.netty.util.collection.CharObjectHashMap$1 -> io.netty.util.collection.CharObjectHashMap$1:
    io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    64:64:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    67:67:java.util.Iterator iterator() -> iterator
io.netty.util.collection.CharObjectHashMap$2 -> io.netty.util.collection.CharObjectHashMap$2:
    io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    221:221:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    224:224:java.util.Iterator iterator() -> iterator
    246:246:int size() -> size
io.netty.util.collection.CharObjectHashMap$2$1 -> io.netty.util.collection.CharObjectHashMap$2$1:
    io.netty.util.collection.CharObjectHashMap$PrimitiveIterator iter -> iter
    io.netty.util.collection.CharObjectHashMap$2 this$1 -> this$1
    224:225:void <init>(io.netty.util.collection.CharObjectHashMap$2) -> <init>
    229:229:boolean hasNext() -> hasNext
    234:234:java.lang.Object next() -> next
    239:239:void remove() -> remove
io.netty.util.collection.CharObjectHashMap$EntrySet -> io.netty.util.collection.CharObjectHashMap$EntrySet:
    io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    519:519:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    522:522:java.util.Iterator iterator() -> iterator
    527:527:int size() -> size
    519:519:void <init>(io.netty.util.collection.CharObjectHashMap,io.netty.util.collection.CharObjectHashMap$1) -> <init>
io.netty.util.collection.CharObjectHashMap$KeySet -> io.netty.util.collection.CharObjectHashMap$KeySet:
    io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    534:534:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    537:537:int size() -> size
    542:542:boolean contains(java.lang.Object) -> contains
    547:547:boolean remove(java.lang.Object) -> remove
    552:560:boolean retainAll(java.util.Collection) -> retainAll
    565:566:void clear() -> clear
    570:570:java.util.Iterator iterator() -> iterator
    534:534:void <init>(io.netty.util.collection.CharObjectHashMap,io.netty.util.collection.CharObjectHashMap$1) -> <init>
io.netty.util.collection.CharObjectHashMap$KeySet$1 -> io.netty.util.collection.CharObjectHashMap$KeySet$1:
    java.util.Iterator iter -> iter
    io.netty.util.collection.CharObjectHashMap$KeySet this$1 -> this$1
    570:571:void <init>(io.netty.util.collection.CharObjectHashMap$KeySet) -> <init>
    575:575:boolean hasNext() -> hasNext
    580:580:java.lang.Character next() -> next
    585:586:void remove() -> remove
    570:570:java.lang.Object next() -> next
io.netty.util.collection.CharObjectHashMap$MapEntry -> io.netty.util.collection.CharObjectHashMap$MapEntry:
    int entryIndex -> entryIndex
    io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    693:695:void <init>(io.netty.util.collection.CharObjectHashMap,int) -> <init>
    699:700:java.lang.Character getKey() -> getKey
    705:706:java.lang.Object getValue() -> getValue
    711:714:java.lang.Object setValue(java.lang.Object) -> setValue
    718:721:void verifyExists() -> verifyExists
    690:690:java.lang.Object getKey() -> getKey
io.netty.util.collection.CharObjectHashMap$MapIterator -> io.netty.util.collection.CharObjectHashMap$MapIterator:
    io.netty.util.collection.CharObjectHashMap$PrimitiveIterator iter -> iter
    io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    662:663:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    667:667:boolean hasNext() -> hasNext
    672:678:java.util.Map$Entry next() -> next
    683:684:void remove() -> remove
    662:662:java.lang.Object next() -> next
    662:662:void <init>(io.netty.util.collection.CharObjectHashMap,io.netty.util.collection.CharObjectHashMap$1) -> <init>
io.netty.util.collection.CharObjectHashMap$PrimitiveIterator -> io.netty.util.collection.CharObjectHashMap$PrimitiveIterator:
    int prevIndex -> prevIndex
    int nextIndex -> nextIndex
    int entryIndex -> entryIndex
    io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    594:597:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    600:602:void scanNext() -> scanNext
    606:609:boolean hasNext() -> hasNext
    614:623:io.netty.util.collection.CharObjectMap$PrimitiveEntry next() -> next
    628:638:void remove() -> remove
    645:645:char key() -> key
    650:650:java.lang.Object value() -> value
    594:594:java.lang.Object next() -> next
    594:594:void <init>(io.netty.util.collection.CharObjectHashMap,io.netty.util.collection.CharObjectHashMap$1) -> <init>
    594:594:int access$1100(io.netty.util.collection.CharObjectHashMap$PrimitiveIterator) -> access$1100
io.netty.util.collection.CharObjectMap -> io.netty.util.collection.CharObjectMap:
    java.lang.Object get(char) -> get
io.netty.util.collection.CharObjectMap$PrimitiveEntry -> io.netty.util.collection.CharObjectMap$PrimitiveEntry:
    char key() -> key
    java.lang.Object value() -> value
io.netty.util.collection.IntCollections -> io.netty.util.collection.IntCollections:
    io.netty.util.collection.IntObjectMap EMPTY_MAP -> EMPTY_MAP
    39:39:io.netty.util.collection.IntObjectMap emptyMap() -> emptyMap
    29:29:void <clinit>() -> <clinit>
io.netty.util.collection.IntCollections$1 -> io.netty.util.collection.IntCollections$1:
io.netty.util.collection.IntCollections$EmptyMap -> io.netty.util.collection.IntCollections$EmptyMap:
    52:52:void <init>() -> <init>
    55:55:java.lang.Object get(int) -> get
    60:60:java.lang.Object put(int,java.lang.Object) -> put
    65:65:java.lang.Object remove(int) -> remove
    70:70:int size() -> size
    75:75:boolean isEmpty() -> isEmpty
    80:80:boolean containsKey(java.lang.Object) -> containsKey
    86:86:void clear() -> clear
    90:90:java.util.Set keySet() -> keySet
    95:95:boolean containsKey(int) -> containsKey
    100:100:boolean containsValue(java.lang.Object) -> containsValue
    105:105:java.lang.Iterable entries() -> entries
    110:110:java.lang.Object get(java.lang.Object) -> get
    115:115:java.lang.Object put(java.lang.Integer,java.lang.Object) -> put
    120:120:java.lang.Object remove(java.lang.Object) -> remove
    125:125:void putAll(java.util.Map) -> putAll
    130:130:java.util.Collection values() -> values
    135:135:java.util.Set entrySet() -> entrySet
    52:52:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    52:52:void <init>(io.netty.util.collection.IntCollections$1) -> <init>
io.netty.util.collection.IntObjectHashMap -> io.netty.util.collection.IntObjectHashMap:
    java.lang.Object NULL_VALUE -> NULL_VALUE
    int maxSize -> maxSize
    float loadFactor -> loadFactor
    int[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    int mask -> mask
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.lang.Iterable entries -> entries
    boolean $assertionsDisabled -> $assertionsDisabled
    72:73:void <init>() -> <init>
    76:77:void <init>(int) -> <init>
    62:100:void <init>(int,float) -> <init>
    103:104:java.lang.Object toExternal(java.lang.Object) -> toExternal
    109:109:java.lang.Object toInternal(java.lang.Object) -> toInternal
    114:115:java.lang.Object get(int) -> get
    120:141:java.lang.Object put(int,java.lang.Object) -> put
    148:165:void putAll(java.util.Map) -> putAll
    169:176:java.lang.Object remove(int) -> remove
    181:181:int size() -> size
    186:186:boolean isEmpty() -> isEmpty
    191:194:void clear() -> clear
    198:198:boolean containsKey(int) -> containsKey
    204:211:boolean containsValue(java.lang.Object) -> containsValue
    216:216:java.lang.Iterable entries() -> entries
    221:221:java.util.Collection values() -> values
    256:267:int hashCode() -> hashCode
    272:297:boolean equals(java.lang.Object) -> equals
    302:302:boolean containsKey(java.lang.Object) -> containsKey
    307:307:java.lang.Object get(java.lang.Object) -> get
    312:312:java.lang.Object put(java.lang.Integer,java.lang.Object) -> put
    317:317:java.lang.Object remove(java.lang.Object) -> remove
    322:322:java.util.Set keySet() -> keySet
    327:327:java.util.Set entrySet() -> entrySet
    331:331:int objectToKey(java.lang.Object) -> objectToKey
    341:355:int indexOf(int) -> indexOf
    365:365:int hashIndex(int) -> hashIndex
    372:372:int hashCode(int) -> hashCode
    380:380:int probeNext(int) -> probeNext
    387:397:void growSize() -> growSize
    407:434:boolean removeAt(int) -> removeAt
    442:443:int calcMaxSize(int) -> calcMaxSize
    452:484:void rehash(int) -> rehash
    488:505:java.lang.String toString() -> toString
    513:513:java.lang.String keyToString(int) -> keyToString
    37:37:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    37:37:int access$300(io.netty.util.collection.IntObjectHashMap) -> access$300
    37:37:java.util.Set access$500(io.netty.util.collection.IntObjectHashMap) -> access$500
    37:37:java.lang.Object[] access$600(io.netty.util.collection.IntObjectHashMap) -> access$600
    37:37:boolean access$700(io.netty.util.collection.IntObjectHashMap,int) -> access$700
    37:37:int[] access$800(io.netty.util.collection.IntObjectHashMap) -> access$800
    37:37:java.lang.Object access$900(java.lang.Object) -> access$900
    37:37:java.lang.Object access$1000(java.lang.Object) -> access$1000
    37:49:void <clinit>() -> <clinit>
io.netty.util.collection.IntObjectHashMap$1 -> io.netty.util.collection.IntObjectHashMap$1:
    io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    64:64:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    67:67:java.util.Iterator iterator() -> iterator
io.netty.util.collection.IntObjectHashMap$2 -> io.netty.util.collection.IntObjectHashMap$2:
    io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    221:221:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    224:224:java.util.Iterator iterator() -> iterator
    246:246:int size() -> size
io.netty.util.collection.IntObjectHashMap$2$1 -> io.netty.util.collection.IntObjectHashMap$2$1:
    io.netty.util.collection.IntObjectHashMap$PrimitiveIterator iter -> iter
    io.netty.util.collection.IntObjectHashMap$2 this$1 -> this$1
    224:225:void <init>(io.netty.util.collection.IntObjectHashMap$2) -> <init>
    229:229:boolean hasNext() -> hasNext
    234:234:java.lang.Object next() -> next
    239:239:void remove() -> remove
io.netty.util.collection.IntObjectHashMap$EntrySet -> io.netty.util.collection.IntObjectHashMap$EntrySet:
    io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    519:519:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    522:522:java.util.Iterator iterator() -> iterator
    527:527:int size() -> size
    519:519:void <init>(io.netty.util.collection.IntObjectHashMap,io.netty.util.collection.IntObjectHashMap$1) -> <init>
io.netty.util.collection.IntObjectHashMap$KeySet -> io.netty.util.collection.IntObjectHashMap$KeySet:
    io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    534:534:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    537:537:int size() -> size
    542:542:boolean contains(java.lang.Object) -> contains
    547:547:boolean remove(java.lang.Object) -> remove
    552:560:boolean retainAll(java.util.Collection) -> retainAll
    565:566:void clear() -> clear
    570:570:java.util.Iterator iterator() -> iterator
    534:534:void <init>(io.netty.util.collection.IntObjectHashMap,io.netty.util.collection.IntObjectHashMap$1) -> <init>
io.netty.util.collection.IntObjectHashMap$KeySet$1 -> io.netty.util.collection.IntObjectHashMap$KeySet$1:
    java.util.Iterator iter -> iter
    io.netty.util.collection.IntObjectHashMap$KeySet this$1 -> this$1
    570:571:void <init>(io.netty.util.collection.IntObjectHashMap$KeySet) -> <init>
    575:575:boolean hasNext() -> hasNext
    580:580:java.lang.Integer next() -> next
    585:586:void remove() -> remove
    570:570:java.lang.Object next() -> next
io.netty.util.collection.IntObjectHashMap$MapEntry -> io.netty.util.collection.IntObjectHashMap$MapEntry:
    int entryIndex -> entryIndex
    io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    693:695:void <init>(io.netty.util.collection.IntObjectHashMap,int) -> <init>
    699:700:java.lang.Integer getKey() -> getKey
    705:706:java.lang.Object getValue() -> getValue
    711:714:java.lang.Object setValue(java.lang.Object) -> setValue
    718:721:void verifyExists() -> verifyExists
    690:690:java.lang.Object getKey() -> getKey
io.netty.util.collection.IntObjectHashMap$MapIterator -> io.netty.util.collection.IntObjectHashMap$MapIterator:
    io.netty.util.collection.IntObjectHashMap$PrimitiveIterator iter -> iter
    io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    662:663:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    667:667:boolean hasNext() -> hasNext
    672:678:java.util.Map$Entry next() -> next
    683:684:void remove() -> remove
    662:662:java.lang.Object next() -> next
    662:662:void <init>(io.netty.util.collection.IntObjectHashMap,io.netty.util.collection.IntObjectHashMap$1) -> <init>
io.netty.util.collection.IntObjectHashMap$PrimitiveIterator -> io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:
    int prevIndex -> prevIndex
    int nextIndex -> nextIndex
    int entryIndex -> entryIndex
    io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    594:597:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    600:602:void scanNext() -> scanNext
    606:609:boolean hasNext() -> hasNext
    614:623:io.netty.util.collection.IntObjectMap$PrimitiveEntry next() -> next
    628:638:void remove() -> remove
    645:645:int key() -> key
    650:650:java.lang.Object value() -> value
    594:594:java.lang.Object next() -> next
    594:594:void <init>(io.netty.util.collection.IntObjectHashMap,io.netty.util.collection.IntObjectHashMap$1) -> <init>
    594:594:int access$1100(io.netty.util.collection.IntObjectHashMap$PrimitiveIterator) -> access$1100
io.netty.util.collection.IntObjectMap -> io.netty.util.collection.IntObjectMap:
    java.lang.Object get(int) -> get
    java.lang.Object put(int,java.lang.Object) -> put
    java.lang.Object remove(int) -> remove
    java.lang.Iterable entries() -> entries
    boolean containsKey(int) -> containsKey
io.netty.util.collection.IntObjectMap$PrimitiveEntry -> io.netty.util.collection.IntObjectMap$PrimitiveEntry:
    int key() -> key
    java.lang.Object value() -> value
io.netty.util.concurrent.AbstractEventExecutor -> io.netty.util.concurrent.AbstractEventExecutor:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    long DEFAULT_SHUTDOWN_QUIET_PERIOD -> DEFAULT_SHUTDOWN_QUIET_PERIOD
    long DEFAULT_SHUTDOWN_TIMEOUT -> DEFAULT_SHUTDOWN_TIMEOUT
    io.netty.util.concurrent.EventExecutorGroup parent -> parent
    java.util.Collection selfCollection -> selfCollection
    43:44:void <init>() -> <init>
    40:48:void <init>(io.netty.util.concurrent.EventExecutorGroup) -> <init>
    52:52:io.netty.util.concurrent.EventExecutorGroup parent() -> parent
    57:57:io.netty.util.concurrent.EventExecutor next() -> next
    62:62:boolean inEventLoop() -> inEventLoop
    67:67:java.util.Iterator iterator() -> iterator
    72:72:io.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    void shutdown() -> shutdown
    88:89:java.util.List shutdownNow() -> shutdownNow
    94:94:io.netty.util.concurrent.Promise newPromise() -> newPromise
    99:99:io.netty.util.concurrent.ProgressivePromise newProgressivePromise() -> newProgressivePromise
    104:104:io.netty.util.concurrent.Future newSucceededFuture(java.lang.Object) -> newSucceededFuture
    109:109:io.netty.util.concurrent.Future newFailedFuture(java.lang.Throwable) -> newFailedFuture
    114:114:io.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    119:119:io.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    124:124:io.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    129:129:java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    134:134:java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    140:140:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    145:145:io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    150:150:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    155:155:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    163:167:void safeExecute(java.lang.Runnable) -> safeExecute
    33:33:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    33:33:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    33:33:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    33:33:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    33:33:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    33:33:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    33:33:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    34:34:void <clinit>() -> <clinit>
io.netty.util.concurrent.AbstractEventExecutorGroup -> io.netty.util.concurrent.AbstractEventExecutorGroup:
    32:32:void <init>() -> <init>
    35:35:io.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    40:40:io.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    45:45:io.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    50:50:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    55:55:io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    60:60:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    65:65:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    70:70:io.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    void shutdown() -> shutdown
    86:87:java.util.List shutdownNow() -> shutdownNow
    93:93:java.util.List invokeAll(java.util.Collection) -> invokeAll
    99:99:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    104:104:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    110:110:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    115:116:void execute(java.lang.Runnable) -> execute
    32:32:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    32:32:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    32:32:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    32:32:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    32:32:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    32:32:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    32:32:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
io.netty.util.concurrent.AbstractFuture -> io.netty.util.concurrent.AbstractFuture:
    28:28:void <init>() -> <init>
    32:41:java.lang.Object get() -> get
    46:56:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
io.netty.util.concurrent.AbstractScheduledEventExecutor -> io.netty.util.concurrent.AbstractScheduledEventExecutor:
    java.util.Comparator SCHEDULED_FUTURE_TASK_COMPARATOR -> SCHEDULED_FUTURE_TASK_COMPARATOR
    io.netty.util.internal.PriorityQueue scheduledTaskQueue -> scheduledTaskQueue
    boolean $assertionsDisabled -> $assertionsDisabled
    43:44:void <init>() -> <init>
    47:48:void <init>(io.netty.util.concurrent.EventExecutorGroup) -> <init>
    51:51:long nanoTime() -> nanoTime
    55:61:io.netty.util.internal.PriorityQueue scheduledTaskQueue() -> scheduledTaskQueue
    65:65:boolean isNullOrEmpty(java.util.Queue) -> isNullOrEmpty
    74:88:void cancelScheduledTasks() -> cancelScheduledTasks
    94:94:java.lang.Runnable pollScheduledTask() -> pollScheduledTask
    102:114:java.lang.Runnable pollScheduledTask(long) -> pollScheduledTask
    121:126:long nextScheduledTaskNano() -> nextScheduledTaskNano
    130:134:io.netty.util.concurrent.ScheduledFutureTask peekScheduledTask() -> peekScheduledTask
    141:143:boolean hasScheduledTasks() -> hasScheduledTasks
    148:154:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    159:165:io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    170:183:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    188:201:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    205:216:io.netty.util.concurrent.ScheduledFuture schedule(io.netty.util.concurrent.ScheduledFutureTask) -> schedule
    220:230:void removeScheduled(io.netty.util.concurrent.ScheduledFutureTask) -> removeScheduled
    31:31:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    31:31:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    31:31:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    31:31:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    31:33:void <clinit>() -> <clinit>
io.netty.util.concurrent.AbstractScheduledEventExecutor$1 -> io.netty.util.concurrent.AbstractScheduledEventExecutor$1:
    34:34:void <init>() -> <init>
    37:37:int compare(io.netty.util.concurrent.ScheduledFutureTask,io.netty.util.concurrent.ScheduledFutureTask) -> compare
    34:34:int compare(java.lang.Object,java.lang.Object) -> compare
io.netty.util.concurrent.AbstractScheduledEventExecutor$2 -> io.netty.util.concurrent.AbstractScheduledEventExecutor$2:
    io.netty.util.concurrent.ScheduledFutureTask val$task -> val$task
    io.netty.util.concurrent.AbstractScheduledEventExecutor this$0 -> this$0
    208:208:void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor,io.netty.util.concurrent.ScheduledFutureTask) -> <init>
    211:212:void run() -> run
io.netty.util.concurrent.AbstractScheduledEventExecutor$3 -> io.netty.util.concurrent.AbstractScheduledEventExecutor$3:
    io.netty.util.concurrent.ScheduledFutureTask val$task -> val$task
    io.netty.util.concurrent.AbstractScheduledEventExecutor this$0 -> this$0
    223:223:void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor,io.netty.util.concurrent.ScheduledFutureTask) -> <init>
    226:227:void run() -> run
io.netty.util.concurrent.BlockingOperationException -> io.netty.util.concurrent.BlockingOperationException:
    28:28:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
io.netty.util.concurrent.CompleteFuture -> io.netty.util.concurrent.CompleteFuture:
    io.netty.util.concurrent.EventExecutor executor -> executor
    33:35:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    41:41:io.netty.util.concurrent.EventExecutor executor() -> executor
    46:50:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    55:64:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    70:70:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    76:76:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    81:84:io.netty.util.concurrent.Future await() -> await
    89:92:boolean await(long,java.util.concurrent.TimeUnit) -> await
    97:97:io.netty.util.concurrent.Future sync() -> sync
    102:102:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    107:110:boolean await(long) -> await
    115:115:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    120:120:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    125:125:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    130:130:boolean isDone() -> isDone
    135:135:boolean isCancellable() -> isCancellable
    140:140:boolean isCancelled() -> isCancelled
    145:145:boolean cancel(boolean) -> cancel
io.netty.util.concurrent.DefaultEventExecutorChooserFactory -> io.netty.util.concurrent.DefaultEventExecutorChooserFactory:
    io.netty.util.concurrent.DefaultEventExecutorChooserFactory INSTANCE -> INSTANCE
    30:30:void <init>() -> <init>
    35:38:io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser newChooser(io.netty.util.concurrent.EventExecutor[]) -> newChooser
    43:43:boolean isPowerOfTwo(int) -> isPowerOfTwo
    28:28:void <clinit>() -> <clinit>
io.netty.util.concurrent.DefaultEventExecutorChooserFactory$GenericEventExecutorChooser -> io.netty.util.concurrent.DefaultEventExecutorChooserFactory$GenericEventExecutorChooser:
    java.util.concurrent.atomic.AtomicInteger idx -> idx
    io.netty.util.concurrent.EventExecutor[] executors -> executors
    61:66:void <init>(io.netty.util.concurrent.EventExecutor[]) -> <init>
    70:70:io.netty.util.concurrent.EventExecutor next() -> next
io.netty.util.concurrent.DefaultEventExecutorChooserFactory$PowerOfTwoEventExecutorChooser -> io.netty.util.concurrent.DefaultEventExecutorChooserFactory$PowerOfTwoEventExecutorChooser:
    java.util.concurrent.atomic.AtomicInteger idx -> idx
    io.netty.util.concurrent.EventExecutor[] executors -> executors
    47:52:void <init>(io.netty.util.concurrent.EventExecutor[]) -> <init>
    56:56:io.netty.util.concurrent.EventExecutor next() -> next
io.netty.util.concurrent.DefaultFutureListeners -> io.netty.util.concurrent.DefaultFutureListeners:
    io.netty.util.concurrent.GenericFutureListener[] listeners -> listeners
    int size -> size
    int progressiveSize -> progressiveSize
    28:39:void <init>(io.netty.util.concurrent.GenericFutureListener,io.netty.util.concurrent.GenericFutureListener) -> <init>
    42:53:void add(io.netty.util.concurrent.GenericFutureListener) -> add
    56:73:void remove(io.netty.util.concurrent.GenericFutureListener) -> remove
    76:76:io.netty.util.concurrent.GenericFutureListener[] listeners() -> listeners
    80:80:int size() -> size
    84:84:int progressiveSize() -> progressiveSize
io.netty.util.concurrent.DefaultProgressivePromise -> io.netty.util.concurrent.DefaultProgressivePromise:
    30:31:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    33:33:void <init>() -> <init>
    37:53:io.netty.util.concurrent.ProgressivePromise setProgress(long,long) -> setProgress
    58:68:boolean tryProgress(long,long) -> tryProgress
    73:74:io.netty.util.concurrent.ProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    79:80:io.netty.util.concurrent.ProgressivePromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    85:86:io.netty.util.concurrent.ProgressivePromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    91:92:io.netty.util.concurrent.ProgressivePromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    97:98:io.netty.util.concurrent.ProgressivePromise sync() -> sync
    103:104:io.netty.util.concurrent.ProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    109:110:io.netty.util.concurrent.ProgressivePromise await() -> await
    115:116:io.netty.util.concurrent.ProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    121:122:io.netty.util.concurrent.ProgressivePromise setSuccess(java.lang.Object) -> setSuccess
    127:128:io.netty.util.concurrent.ProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    19:19:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    19:19:io.netty.util.concurrent.Promise sync() -> sync
    19:19:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    19:19:io.netty.util.concurrent.Promise await() -> await
    19:19:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    19:19:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    19:19:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    19:19:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    19:19:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    19:19:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    19:19:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    19:19:io.netty.util.concurrent.Future await() -> await
    19:19:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    19:19:io.netty.util.concurrent.Future sync() -> sync
    19:19:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    19:19:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    19:19:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    19:19:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    19:19:io.netty.util.concurrent.ProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    19:19:io.netty.util.concurrent.ProgressiveFuture await() -> await
    19:19:io.netty.util.concurrent.ProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    19:19:io.netty.util.concurrent.ProgressiveFuture sync() -> sync
    19:19:io.netty.util.concurrent.ProgressiveFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    19:19:io.netty.util.concurrent.ProgressiveFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    19:19:io.netty.util.concurrent.ProgressiveFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    19:19:io.netty.util.concurrent.ProgressiveFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
io.netty.util.concurrent.DefaultPromise -> io.netty.util.concurrent.DefaultPromise:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.internal.logging.InternalLogger rejectedExecutionLogger -> rejectedExecutionLogger
    int MAX_LISTENER_STACK_DEPTH -> MAX_LISTENER_STACK_DEPTH
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater RESULT_UPDATER -> RESULT_UPDATER
    io.netty.util.Signal SUCCESS -> SUCCESS
    io.netty.util.Signal UNCANCELLABLE -> UNCANCELLABLE
    io.netty.util.concurrent.DefaultPromise$CauseHolder CANCELLATION_CAUSE_HOLDER -> CANCELLATION_CAUSE_HOLDER
    java.lang.Object result -> result
    io.netty.util.concurrent.EventExecutor executor -> executor
    java.lang.Object listeners -> listeners
    short waiters -> waiters
    boolean notifyingListeners -> notifyingListeners
    80:82:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    87:90:void <init>() -> <init>
    94:98:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    103:107:boolean trySuccess(java.lang.Object) -> trySuccess
    112:116:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    121:125:boolean tryFailure(java.lang.Throwable) -> tryFailure
    130:134:boolean setUncancellable() -> setUncancellable
    139:140:boolean isSuccess() -> isSuccess
    145:145:boolean isCancellable() -> isCancellable
    150:151:java.lang.Throwable cause() -> cause
    156:166:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    171:186:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    191:197:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    202:213:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    218:238:io.netty.util.concurrent.Promise await() -> await
    243:268:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    273:273:boolean await(long,java.util.concurrent.TimeUnit) -> await
    278:278:boolean await(long) -> await
    284:287:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    294:297:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    304:308:java.lang.Object getNow() -> getNow
    313:318:boolean cancel(boolean) -> cancel
    323:323:boolean isCancelled() -> isCancelled
    328:328:boolean isDone() -> isDone
    333:335:io.netty.util.concurrent.Promise sync() -> sync
    340:342:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    347:347:java.lang.String toString() -> toString
    351:373:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    385:385:io.netty.util.concurrent.EventExecutor executor() -> executor
    389:393:void checkDeadLock() -> checkDeadLock
    406:410:void notifyListener(io.netty.util.concurrent.EventExecutor,io.netty.util.concurrent.Future,io.netty.util.concurrent.GenericFutureListener) -> notifyListener
    413:434:void notifyListeners() -> notifyListeners
    444:464:void notifyListenerWithStackOverFlowProtection(io.netty.util.concurrent.EventExecutor,io.netty.util.concurrent.Future,io.netty.util.concurrent.GenericFutureListener) -> notifyListenerWithStackOverFlowProtection
    468:492:void notifyListenersNow() -> notifyListenersNow
    497:502:void notifyListeners0(io.netty.util.concurrent.DefaultFutureListeners) -> notifyListeners0
    507:511:void notifyListener0(io.netty.util.concurrent.Future,io.netty.util.concurrent.GenericFutureListener) -> notifyListener0
    514:521:void addListener0(io.netty.util.concurrent.GenericFutureListener) -> addListener0
    524:529:void removeListener0(io.netty.util.concurrent.GenericFutureListener) -> removeListener0
    532:532:boolean setSuccess0(java.lang.Object) -> setSuccess0
    536:536:boolean setFailure0(java.lang.Throwable) -> setFailure0
    540:545:boolean setValue0(java.lang.Object) -> setValue0
    549:552:void checkNotifyWaiters() -> checkNotifyWaiters
    555:559:void incWaiters() -> incWaiters
    562:563:void decWaiters() -> decWaiters
    566:572:void rethrowIfFailed() -> rethrowIfFailed
    575:622:boolean await0(long,boolean) -> await0
    639:676:void notifyProgressiveListeners(long,long) -> notifyProgressiveListeners
    683:719:java.lang.Object progressiveListeners() -> progressiveListeners
    725:731:void notifyProgressiveListeners0(io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> notifyProgressiveListeners0
    737:741:void notifyProgressiveListener0(io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> notifyProgressiveListener0
    744:744:boolean isCancelled0(java.lang.Object) -> isCancelled0
    748:748:boolean isDone0(java.lang.Object) -> isDone0
    760:764:void safeExecute(io.netty.util.concurrent.EventExecutor,java.lang.Runnable) -> safeExecute
    34:34:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    34:34:io.netty.util.concurrent.Future await() -> await
    34:34:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    34:34:io.netty.util.concurrent.Future sync() -> sync
    34:34:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    34:34:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    34:34:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    34:34:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    34:34:void access$000(io.netty.util.concurrent.DefaultPromise) -> access$000
    34:34:void access$100(io.netty.util.concurrent.Future,io.netty.util.concurrent.GenericFutureListener) -> access$100
    34:34:void access$200(io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> access$200
    34:34:void access$300(io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> access$300
    35:45:void <clinit>() -> <clinit>
io.netty.util.concurrent.DefaultPromise$1 -> io.netty.util.concurrent.DefaultPromise$1:
    io.netty.util.concurrent.DefaultPromise this$0 -> this$0
    428:428:void <init>(io.netty.util.concurrent.DefaultPromise) -> <init>
    431:432:void run() -> run
io.netty.util.concurrent.DefaultPromise$2 -> io.netty.util.concurrent.DefaultPromise$2:
    io.netty.util.concurrent.Future val$future -> val$future
    io.netty.util.concurrent.GenericFutureListener val$listener -> val$listener
    458:458:void <init>(io.netty.util.concurrent.Future,io.netty.util.concurrent.GenericFutureListener) -> <init>
    461:462:void run() -> run
io.netty.util.concurrent.DefaultPromise$3 -> io.netty.util.concurrent.DefaultPromise$3:
    io.netty.util.concurrent.ProgressiveFuture val$self -> val$self
    io.netty.util.concurrent.GenericProgressiveFutureListener[] val$array -> val$array
    long val$progress -> val$progress
    long val$total -> val$total
    io.netty.util.concurrent.DefaultPromise this$0 -> this$0
    659:659:void <init>(io.netty.util.concurrent.DefaultPromise,io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> <init>
    662:663:void run() -> run
io.netty.util.concurrent.DefaultPromise$4 -> io.netty.util.concurrent.DefaultPromise$4:
    io.netty.util.concurrent.ProgressiveFuture val$self -> val$self
    io.netty.util.concurrent.GenericProgressiveFutureListener val$l -> val$l
    long val$progress -> val$progress
    long val$total -> val$total
    io.netty.util.concurrent.DefaultPromise this$0 -> this$0
    668:668:void <init>(io.netty.util.concurrent.DefaultPromise,io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> <init>
    671:672:void run() -> run
io.netty.util.concurrent.DefaultPromise$CauseHolder -> io.netty.util.concurrent.DefaultPromise$CauseHolder:
    java.lang.Throwable cause -> cause
    753:755:void <init>(java.lang.Throwable) -> <init>
io.netty.util.concurrent.DefaultThreadFactory -> io.netty.util.concurrent.DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolId -> poolId
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    java.lang.String prefix -> prefix
    boolean daemon -> daemon
    int priority -> priority
    java.lang.ThreadGroup threadGroup -> threadGroup
    39:40:void <init>(java.lang.Class) -> <init>
    55:56:void <init>(java.lang.Class,int) -> <init>
    63:64:void <init>(java.lang.Class,boolean,int) -> <init>
    67:81:java.lang.String toPoolName(java.lang.Class) -> toPoolName
    32:99:void <init>(java.lang.String,boolean,int,java.lang.ThreadGroup) -> <init>
    102:104:void <init>(java.lang.String,boolean,int) -> <init>
    108:120:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    124:124:java.lang.Thread newThread(java.lang.Runnable,java.lang.String) -> newThread
    30:30:void <clinit>() -> <clinit>
io.netty.util.concurrent.EventExecutor -> io.netty.util.concurrent.EventExecutor:
    boolean inEventLoop() -> inEventLoop
    boolean inEventLoop(java.lang.Thread) -> inEventLoop
    io.netty.util.concurrent.Promise newPromise() -> newPromise
    io.netty.util.concurrent.Future newSucceededFuture(java.lang.Object) -> newSucceededFuture
    io.netty.util.concurrent.Future newFailedFuture(java.lang.Throwable) -> newFailedFuture
io.netty.util.concurrent.EventExecutorChooserFactory -> io.netty.util.concurrent.EventExecutorChooserFactory:
    io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser newChooser(io.netty.util.concurrent.EventExecutor[]) -> newChooser
io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser -> io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser:
    io.netty.util.concurrent.EventExecutor next() -> next
io.netty.util.concurrent.EventExecutorGroup -> io.netty.util.concurrent.EventExecutorGroup:
    boolean isShuttingDown() -> isShuttingDown
    io.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    void shutdown() -> shutdown
    io.netty.util.concurrent.EventExecutor next() -> next
    io.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    io.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    io.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
io.netty.util.concurrent.FailedFuture -> io.netty.util.concurrent.FailedFuture:
    java.lang.Throwable cause -> cause
    36:41:void <init>(io.netty.util.concurrent.EventExecutor,java.lang.Throwable) -> <init>
    45:45:java.lang.Throwable cause() -> cause
    50:50:boolean isSuccess() -> isSuccess
    55:56:io.netty.util.concurrent.Future sync() -> sync
    61:62:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    67:67:java.lang.Object getNow() -> getNow
io.netty.util.concurrent.FastThreadLocal -> io.netty.util.concurrent.FastThreadLocal:
    int variablesToRemoveIndex -> variablesToRemoveIndex
    int index -> index
    54:73:void removeAll() -> removeAll
    79:83:int size() -> size
    94:95:void destroy() -> destroy
    99:109:void addToVariablesToRemove(io.netty.util.internal.InternalThreadLocalMap,io.netty.util.concurrent.FastThreadLocal) -> addToVariablesToRemove
    114:123:void removeFromVariablesToRemove(io.netty.util.internal.InternalThreadLocalMap,io.netty.util.concurrent.FastThreadLocal) -> removeFromVariablesToRemove
    127:129:void <init>() -> <init>
    135:135:java.lang.Object get() -> get
    144:149:java.lang.Object get(io.netty.util.internal.InternalThreadLocalMap) -> get
    153:162:java.lang.Object initialize(io.netty.util.internal.InternalThreadLocalMap) -> initialize
    169:174:void set(java.lang.Object) -> set
    180:187:void set(io.netty.util.internal.InternalThreadLocalMap,java.lang.Object) -> set
    193:193:boolean isSet() -> isSet
    201:201:boolean isSet(io.netty.util.internal.InternalThreadLocalMap) -> isSet
    207:208:void remove() -> remove
    217:231:void remove(io.netty.util.internal.InternalThreadLocalMap) -> remove
    237:237:java.lang.Object initialValue() -> initialValue
    243:243:void onRemoval(java.lang.Object) -> onRemoval
    46:46:void <clinit>() -> <clinit>
io.netty.util.concurrent.FastThreadLocalRunnable -> io.netty.util.concurrent.FastThreadLocalRunnable:
    java.lang.Runnable runnable -> runnable
    23:25:void <init>(java.lang.Runnable) -> <init>
    30:34:void run() -> run
    37:37:java.lang.Runnable wrap(java.lang.Runnable) -> wrap
io.netty.util.concurrent.FastThreadLocalThread -> io.netty.util.concurrent.FastThreadLocalThread:
    boolean cleanupFastThreadLocals -> cleanupFastThreadLocals
    io.netty.util.internal.InternalThreadLocalMap threadLocalMap -> threadLocalMap
    30:32:void <init>() -> <init>
    55:57:void <init>(java.lang.Runnable,java.lang.String) -> <init>
    60:62:void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String) -> <init>
    74:74:io.netty.util.internal.InternalThreadLocalMap threadLocalMap() -> threadLocalMap
    82:83:void setThreadLocalMap(io.netty.util.internal.InternalThreadLocalMap) -> setThreadLocalMap
    90:90:boolean willCleanupFastThreadLocals() -> willCleanupFastThreadLocals
io.netty.util.concurrent.Future -> io.netty.util.concurrent.Future:
    boolean isSuccess() -> isSuccess
    boolean isCancellable() -> isCancellable
    java.lang.Throwable cause() -> cause
    io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    io.netty.util.concurrent.Future await() -> await
    boolean await(long,java.util.concurrent.TimeUnit) -> await
    boolean await(long) -> await
    boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    java.lang.Object getNow() -> getNow
    boolean cancel(boolean) -> cancel
io.netty.util.concurrent.FutureListener -> io.netty.util.concurrent.FutureListener:
io.netty.util.concurrent.GenericFutureListener -> io.netty.util.concurrent.GenericFutureListener:
    void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.util.concurrent.GenericProgressiveFutureListener -> io.netty.util.concurrent.GenericProgressiveFutureListener:
    void operationProgressed(io.netty.util.concurrent.ProgressiveFuture,long,long) -> operationProgressed
io.netty.util.concurrent.GlobalEventExecutor -> io.netty.util.concurrent.GlobalEventExecutor:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    long SCHEDULE_QUIET_PERIOD_INTERVAL -> SCHEDULE_QUIET_PERIOD_INTERVAL
    io.netty.util.concurrent.GlobalEventExecutor INSTANCE -> INSTANCE
    java.util.concurrent.BlockingQueue taskQueue -> taskQueue
    io.netty.util.concurrent.ScheduledFutureTask quietPeriodTask -> quietPeriodTask
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    io.netty.util.concurrent.GlobalEventExecutor$TaskRunner taskRunner -> taskRunner
    java.util.concurrent.atomic.AtomicBoolean started -> started
    java.lang.Thread thread -> thread
    io.netty.util.concurrent.Future terminationFuture -> terminationFuture
    43:66:void <init>() -> <init>
    74:108:java.lang.Runnable takeTask() -> takeTask
    112:118:void fetchFromScheduledTaskQueue() -> fetchFromScheduledTaskQueue
    135:139:void addTask(java.lang.Runnable) -> addTask
    143:143:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    148:148:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    153:153:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    159:159:void shutdown() -> shutdown
    164:164:boolean isShuttingDown() -> isShuttingDown
    169:169:boolean isShutdown() -> isShutdown
    174:174:boolean isTerminated() -> isTerminated
    179:179:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    205:213:void execute(java.lang.Runnable) -> execute
    216:231:void startThread() -> startThread
    35:35:io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    35:35:java.util.concurrent.atomic.AtomicBoolean access$100(io.netty.util.concurrent.GlobalEventExecutor) -> access$100
    37:41:void <clinit>() -> <clinit>
io.netty.util.concurrent.GlobalEventExecutor$1 -> io.netty.util.concurrent.GlobalEventExecutor$1:
    io.netty.util.concurrent.GlobalEventExecutor this$0 -> this$0
    45:45:void <init>(io.netty.util.concurrent.GlobalEventExecutor) -> <init>
    49:49:void run() -> run
io.netty.util.concurrent.GlobalEventExecutor$TaskRunner -> io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.util.concurrent.GlobalEventExecutor this$0 -> this$0
    233:233:void <init>(io.netty.util.concurrent.GlobalEventExecutor) -> <init>
    237:280:void run() -> run
    233:233:void <clinit>() -> <clinit>
io.netty.util.concurrent.ImmediateEventExecutor -> io.netty.util.concurrent.ImmediateEventExecutor:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.concurrent.ImmediateEventExecutor INSTANCE -> INSTANCE
    io.netty.util.concurrent.FastThreadLocal DELAYED_RUNNABLES -> DELAYED_RUNNABLES
    io.netty.util.concurrent.FastThreadLocal RUNNING -> RUNNING
    io.netty.util.concurrent.Future terminationFuture -> terminationFuture
    54:57:void <init>() -> <init>
    61:61:boolean inEventLoop() -> inEventLoop
    66:66:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    71:71:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    76:76:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    81:81:void shutdown() -> shutdown
    85:85:boolean isShuttingDown() -> isShuttingDown
    90:90:boolean isShutdown() -> isShutdown
    95:95:boolean isTerminated() -> isTerminated
    100:100:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    105:129:void execute(java.lang.Runnable) -> execute
    133:133:io.netty.util.concurrent.Promise newPromise() -> newPromise
    138:138:io.netty.util.concurrent.ProgressivePromise newProgressivePromise() -> newProgressivePromise
    33:47:void <clinit>() -> <clinit>
io.netty.util.concurrent.ImmediateEventExecutor$1 -> io.netty.util.concurrent.ImmediateEventExecutor$1:
    38:38:void <init>() -> <init>
    41:41:java.util.Queue initialValue() -> initialValue
    38:38:java.lang.Object initialValue() -> initialValue
io.netty.util.concurrent.ImmediateEventExecutor$2 -> io.netty.util.concurrent.ImmediateEventExecutor$2:
    47:47:void <init>() -> <init>
    50:50:java.lang.Boolean initialValue() -> initialValue
    47:47:java.lang.Object initialValue() -> initialValue
io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise -> io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise:
    154:155:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    160:160:void checkDeadLock() -> checkDeadLock
io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise -> io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise:
    143:144:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    149:149:void checkDeadLock() -> checkDeadLock
io.netty.util.concurrent.ImmediateExecutor -> io.netty.util.concurrent.ImmediateExecutor:
    io.netty.util.concurrent.ImmediateExecutor INSTANCE -> INSTANCE
    26:28:void <init>() -> <init>
    32:36:void execute(java.lang.Runnable) -> execute
    24:24:void <clinit>() -> <clinit>
io.netty.util.concurrent.MultithreadEventExecutorGroup -> io.netty.util.concurrent.MultithreadEventExecutorGroup:
    io.netty.util.concurrent.EventExecutor[] children -> children
    java.util.Set readonlyChildren -> readonlyChildren
    java.util.concurrent.atomic.AtomicInteger terminatedChildren -> terminatedChildren
    io.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser chooser -> chooser
    47:48:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    58:59:void <init>(int,java.util.concurrent.Executor,java.lang.Object[]) -> <init>
    35:129:void <init>(int,java.util.concurrent.Executor,io.netty.util.concurrent.EventExecutorChooserFactory,java.lang.Object[]) -> <init>
    132:132:java.util.concurrent.ThreadFactory newDefaultThreadFactory() -> newDefaultThreadFactory
    137:137:io.netty.util.concurrent.EventExecutor next() -> next
    142:142:java.util.Iterator iterator() -> iterator
    150:150:int executorCount() -> executorCount
    io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    162:165:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    170:170:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    176:179:void shutdown() -> shutdown
    183:188:boolean isShuttingDown() -> isShuttingDown
    193:198:boolean isShutdown() -> isShutdown
    203:208:boolean isTerminated() -> isTerminated
    214:226:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    31:31:java.util.concurrent.atomic.AtomicInteger access$000(io.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$000
    31:31:io.netty.util.concurrent.EventExecutor[] access$100(io.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$100
    31:31:io.netty.util.concurrent.Promise access$200(io.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$200
io.netty.util.concurrent.MultithreadEventExecutorGroup$1 -> io.netty.util.concurrent.MultithreadEventExecutorGroup$1:
    io.netty.util.concurrent.MultithreadEventExecutorGroup this$0 -> this$0
    113:113:void <init>(io.netty.util.concurrent.MultithreadEventExecutorGroup) -> <init>
    116:119:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.util.concurrent.OrderedEventExecutor -> io.netty.util.concurrent.OrderedEventExecutor:
io.netty.util.concurrent.ProgressiveFuture -> io.netty.util.concurrent.ProgressiveFuture:
io.netty.util.concurrent.ProgressivePromise -> io.netty.util.concurrent.ProgressivePromise:
    boolean tryProgress(long,long) -> tryProgress
io.netty.util.concurrent.Promise -> io.netty.util.concurrent.Promise:
    io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    boolean trySuccess(java.lang.Object) -> trySuccess
    io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    boolean tryFailure(java.lang.Throwable) -> tryFailure
    boolean setUncancellable() -> setUncancellable
    io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
io.netty.util.concurrent.PromiseAggregator -> io.netty.util.concurrent.PromiseAggregator:
    io.netty.util.concurrent.Promise aggregatePromise -> aggregatePromise
    boolean failPending -> failPending
    java.util.Set pendingPromises -> pendingPromises
    45:51:void <init>(io.netty.util.concurrent.Promise,boolean) -> <init>
    58:59:void <init>(io.netty.util.concurrent.Promise) -> <init>
    66:90:io.netty.util.concurrent.PromiseAggregator add(io.netty.util.concurrent.Promise[]) -> add
    95:113:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.util.concurrent.PromiseCombiner -> io.netty.util.concurrent.PromiseCombiner:
    int expectedCount -> expectedCount
    int doneCount -> doneCount
    boolean doneAdding -> doneAdding
    io.netty.util.concurrent.Promise aggregatePromise -> aggregatePromise
    java.lang.Throwable cause -> cause
    io.netty.util.concurrent.GenericFutureListener listener -> listener
    32:38:void <init>() -> <init>
    61:62:void add(io.netty.util.concurrent.Promise) -> add
    72:75:void add(io.netty.util.concurrent.Future) -> add
    115:123:void finish(io.netty.util.concurrent.Promise) -> finish
    126:126:boolean tryPromise() -> tryPromise
    130:133:void checkAddAllowed() -> checkAddAllowed
    32:32:int access$004(io.netty.util.concurrent.PromiseCombiner) -> access$004
    32:32:java.lang.Throwable access$100(io.netty.util.concurrent.PromiseCombiner) -> access$100
    32:32:java.lang.Throwable access$102(io.netty.util.concurrent.PromiseCombiner,java.lang.Throwable) -> access$102
    32:32:int access$000(io.netty.util.concurrent.PromiseCombiner) -> access$000
    32:32:int access$200(io.netty.util.concurrent.PromiseCombiner) -> access$200
    32:32:boolean access$300(io.netty.util.concurrent.PromiseCombiner) -> access$300
    32:32:boolean access$400(io.netty.util.concurrent.PromiseCombiner) -> access$400
io.netty.util.concurrent.PromiseCombiner$1 -> io.netty.util.concurrent.PromiseCombiner$1:
    io.netty.util.concurrent.PromiseCombiner this$0 -> this$0
    38:38:void <init>(io.netty.util.concurrent.PromiseCombiner) -> <init>
    41:48:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.util.concurrent.PromiseNotifier -> io.netty.util.concurrent.PromiseNotifier:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.concurrent.Promise[] promises -> promises
    boolean logNotifyFailure -> logNotifyFailure
    44:45:void <init>(io.netty.util.concurrent.Promise[]) -> <init>
    54:63:void <init>(boolean,io.netty.util.concurrent.Promise[]) -> <init>
    67:83:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
    33:33:void <clinit>() -> <clinit>
io.netty.util.concurrent.PromiseTask -> io.netty.util.concurrent.PromiseTask:
    java.util.concurrent.Callable task -> task
    24:24:java.util.concurrent.Callable toCallable(java.lang.Runnable,java.lang.Object) -> toCallable
    51:52:void <init>(io.netty.util.concurrent.EventExecutor,java.lang.Runnable,java.lang.Object) -> <init>
    55:57:void <init>(io.netty.util.concurrent.EventExecutor,java.util.concurrent.Callable) -> <init>
    61:61:int hashCode() -> hashCode
    66:66:boolean equals(java.lang.Object) -> equals
    72:79:void run() -> run
    83:83:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    87:88:io.netty.util.concurrent.Promise setFailureInternal(java.lang.Throwable) -> setFailureInternal
    93:93:boolean tryFailure(java.lang.Throwable) -> tryFailure
    102:102:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    106:107:io.netty.util.concurrent.Promise setSuccessInternal(java.lang.Object) -> setSuccessInternal
    112:112:boolean trySuccess(java.lang.Object) -> trySuccess
    121:121:boolean setUncancellable() -> setUncancellable
    125:125:boolean setUncancellableInternal() -> setUncancellableInternal
    130:135:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
io.netty.util.concurrent.PromiseTask$RunnableAdapter -> io.netty.util.concurrent.PromiseTask$RunnableAdapter:
    java.lang.Runnable task -> task
    java.lang.Object result -> result
    31:34:void <init>(java.lang.Runnable,java.lang.Object) -> <init>
    38:39:java.lang.Object call() -> call
    44:44:java.lang.String toString() -> toString
io.netty.util.concurrent.RejectedExecutionHandler -> io.netty.util.concurrent.RejectedExecutionHandler:
    void rejected(java.lang.Runnable,io.netty.util.concurrent.SingleThreadEventExecutor) -> rejected
io.netty.util.concurrent.RejectedExecutionHandlers -> io.netty.util.concurrent.RejectedExecutionHandlers:
    io.netty.util.concurrent.RejectedExecutionHandler REJECT -> REJECT
    41:41:io.netty.util.concurrent.RejectedExecutionHandler reject() -> reject
    28:28:void <clinit>() -> <clinit>
io.netty.util.concurrent.RejectedExecutionHandlers$1 -> io.netty.util.concurrent.RejectedExecutionHandlers$1:
    28:28:void <init>() -> <init>
    31:31:void rejected(java.lang.Runnable,io.netty.util.concurrent.SingleThreadEventExecutor) -> rejected
io.netty.util.concurrent.ScheduledFuture -> io.netty.util.concurrent.ScheduledFuture:
io.netty.util.concurrent.ScheduledFutureTask -> io.netty.util.concurrent.ScheduledFutureTask:
    java.util.concurrent.atomic.AtomicLong nextTaskId -> nextTaskId
    long START_TIME -> START_TIME
    long id -> id
    long deadlineNanos -> deadlineNanos
    long periodNanos -> periodNanos
    int queueIndex -> queueIndex
    boolean $assertionsDisabled -> $assertionsDisabled
    34:34:long nanoTime() -> nanoTime
    38:38:long deadlineNanos(long) -> deadlineNanos
    52:53:void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor,java.lang.Runnable,java.lang.Object,long) -> <init>
    41:65:void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor,java.util.concurrent.Callable,long,long) -> <init>
    41:74:void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor,java.util.concurrent.Callable,long) -> <init>
    78:78:io.netty.util.concurrent.EventExecutor executor() -> executor
    82:82:long deadlineNanos() -> deadlineNanos
    86:86:long delayNanos() -> delayNanos
    90:90:long delayNanos(long) -> delayNanos
    95:95:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    100:115:int compareTo(java.util.concurrent.Delayed) -> compareTo
    121:152:void run() -> run
    156:160:boolean cancel(boolean) -> cancel
    164:164:boolean cancelWithoutRemove(boolean) -> cancelWithoutRemove
    169:178:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    183:183:int priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue) -> priorityQueueIndex
    188:189:void priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue,int) -> priorityQueueIndex
    28:28:int compareTo(java.lang.Object) -> compareTo
    28:31:void <clinit>() -> <clinit>
io.netty.util.concurrent.SingleThreadEventExecutor -> io.netty.util.concurrent.SingleThreadEventExecutor:
    int DEFAULT_MAX_PENDING_EXECUTOR_TASKS -> DEFAULT_MAX_PENDING_EXECUTOR_TASKS
    io.netty.util.internal.logging.InternalLogger logger -> logger
    int ST_NOT_STARTED -> ST_NOT_STARTED
    int ST_STARTED -> ST_STARTED
    int ST_SHUTTING_DOWN -> ST_SHUTTING_DOWN
    int ST_SHUTDOWN -> ST_SHUTDOWN
    int ST_TERMINATED -> ST_TERMINATED
    java.lang.Runnable WAKEUP_TASK -> WAKEUP_TASK
    java.lang.Runnable NOOP_TASK -> NOOP_TASK
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater STATE_UPDATER -> STATE_UPDATER
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater PROPERTIES_UPDATER -> PROPERTIES_UPDATER
    java.util.Queue taskQueue -> taskQueue
    java.lang.Thread thread -> thread
    io.netty.util.concurrent.ThreadProperties threadProperties -> threadProperties
    java.util.concurrent.Executor executor -> executor
    boolean interrupted -> interrupted
    java.util.concurrent.Semaphore threadLock -> threadLock
    java.util.Set shutdownHooks -> shutdownHooks
    boolean addTaskWakesUp -> addTaskWakesUp
    int maxPendingTasks -> maxPendingTasks
    io.netty.util.concurrent.RejectedExecutionHandler rejectedExecutionHandler -> rejectedExecutionHandler
    long lastExecutionTime -> lastExecutionTime
    int state -> state
    long gracefulShutdownQuietPeriod -> gracefulShutdownQuietPeriod
    long gracefulShutdownTimeout -> gracefulShutdownTimeout
    long gracefulShutdownStartTime -> gracefulShutdownStartTime
    io.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    long SCHEDULE_PURGE_INTERVAL -> SCHEDULE_PURGE_INTERVAL
    boolean $assertionsDisabled -> $assertionsDisabled
    117:118:void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory,boolean) -> <init>
    133:134:void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory,boolean,int,io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    145:146:void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor,boolean) -> <init>
    90:167:void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor,boolean,int,io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    174:174:java.util.Queue newTaskQueue() -> newTaskQueue
    184:184:java.util.Queue newTaskQueue(int) -> newTaskQueue
    191:197:void interruptThread() -> interruptThread
    203:204:java.lang.Runnable pollTask() -> pollTask
    209:213:java.lang.Runnable pollTaskFrom(java.util.Queue) -> pollTaskFrom
    227:270:java.lang.Runnable takeTask() -> takeTask
    274:284:boolean fetchFromScheduledTaskQueue() -> fetchFromScheduledTaskQueue
    291:292:java.lang.Runnable peekTask() -> peekTask
    299:300:boolean hasTasks() -> hasTasks
    310:310:int pendingTasks() -> pendingTasks
    318:324:void addTask(java.lang.Runnable) -> addTask
    327:330:boolean offerTask(java.lang.Runnable) -> offerTask
    337:340:boolean removeTask(java.lang.Runnable) -> removeTask
    349:364:boolean runAllTasks() -> runAllTasks
    375:383:boolean runAllTasksFrom(java.util.Queue) -> runAllTasksFrom
    393:426:boolean runAllTasks(long) -> runAllTasks
    433:433:void afterRunningAllTasks() -> afterRunningAllTasks
    438:443:long delayNanos(long) -> delayNanos
    454:455:void updateLastExecutionTime() -> updateLastExecutionTime
    void run() -> run
    467:467:void cleanup() -> cleanup
    470:475:void wakeup(boolean) -> wakeup
    479:479:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    486:496:void addShutdownHook(java.lang.Runnable) -> addShutdownHook
    502:512:void removeShutdownHook(java.lang.Runnable) -> removeShutdownHook
    515:535:boolean runShutdownHooks() -> runShutdownHooks
    540:604:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    609:609:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    615:666:void shutdown() -> shutdown
    670:670:boolean isShuttingDown() -> isShuttingDown
    675:675:boolean isShutdown() -> isShutdown
    680:680:boolean isTerminated() -> isTerminated
    687:738:boolean confirmShutdown() -> confirmShutdown
    743:755:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    760:778:void execute(java.lang.Runnable) -> execute
    782:783:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    789:790:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    796:797:java.util.List invokeAll(java.util.Collection) -> invokeAll
    803:804:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    808:811:void throwIfInEventLoop(java.lang.String) -> throwIfInEventLoop
    819:835:io.netty.util.concurrent.ThreadProperties threadProperties() -> threadProperties
    840:840:boolean wakesUpForTask(java.lang.Runnable) -> wakesUpForTask
    844:844:void reject() -> reject
    853:854:void reject(java.lang.Runnable) -> reject
    861:871:void startThread() -> startThread
    874:931:void doStartThread() -> doStartThread
    49:49:java.util.Set access$000(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$000
    49:49:java.lang.Thread access$102(io.netty.util.concurrent.SingleThreadEventExecutor,java.lang.Thread) -> access$102
    49:49:boolean access$200(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$200
    49:49:java.lang.Thread access$100(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$100
    49:49:io.netty.util.internal.logging.InternalLogger access$300() -> access$300
    49:49:int access$400(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$400
    49:49:java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$500() -> access$500
    49:49:long access$600(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$600
    49:49:java.util.concurrent.Semaphore access$700(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$700
    49:49:java.util.Queue access$800(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$800
    49:49:io.netty.util.concurrent.Promise access$900(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$900
    49:858:void <clinit>() -> <clinit>
io.netty.util.concurrent.SingleThreadEventExecutor$1 -> io.netty.util.concurrent.SingleThreadEventExecutor$1:
    63:63:void <init>() -> <init>
    67:67:void run() -> run
io.netty.util.concurrent.SingleThreadEventExecutor$2 -> io.netty.util.concurrent.SingleThreadEventExecutor$2:
    69:69:void <init>() -> <init>
    73:73:void run() -> run
io.netty.util.concurrent.SingleThreadEventExecutor$3 -> io.netty.util.concurrent.SingleThreadEventExecutor$3:
    java.lang.Runnable val$task -> val$task
    io.netty.util.concurrent.SingleThreadEventExecutor this$0 -> this$0
    489:489:void <init>(io.netty.util.concurrent.SingleThreadEventExecutor,java.lang.Runnable) -> <init>
    492:493:void run() -> run
io.netty.util.concurrent.SingleThreadEventExecutor$4 -> io.netty.util.concurrent.SingleThreadEventExecutor$4:
    java.lang.Runnable val$task -> val$task
    io.netty.util.concurrent.SingleThreadEventExecutor this$0 -> this$0
    505:505:void <init>(io.netty.util.concurrent.SingleThreadEventExecutor,java.lang.Runnable) -> <init>
    508:509:void run() -> run
io.netty.util.concurrent.SingleThreadEventExecutor$5 -> io.netty.util.concurrent.SingleThreadEventExecutor$5:
    io.netty.util.concurrent.SingleThreadEventExecutor this$0 -> this$0
    875:875:void <init>(io.netty.util.concurrent.SingleThreadEventExecutor) -> <init>
    878:929:void run() -> run
io.netty.util.concurrent.SingleThreadEventExecutor$DefaultThreadProperties -> io.netty.util.concurrent.SingleThreadEventExecutor$DefaultThreadProperties:
    java.lang.Thread t -> t
    936:938:void <init>(java.lang.Thread) -> <init>
io.netty.util.concurrent.SucceededFuture -> io.netty.util.concurrent.SucceededFuture:
    java.lang.Object result -> result
    32:34:void <init>(io.netty.util.concurrent.EventExecutor,java.lang.Object) -> <init>
    38:38:java.lang.Throwable cause() -> cause
    43:43:boolean isSuccess() -> isSuccess
    48:48:java.lang.Object getNow() -> getNow
io.netty.util.concurrent.ThreadPerTaskExecutor -> io.netty.util.concurrent.ThreadPerTaskExecutor:
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    24:29:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    33:34:void execute(java.lang.Runnable) -> execute
io.netty.util.concurrent.ThreadProperties -> io.netty.util.concurrent.ThreadProperties:
io.netty.util.concurrent.UnaryPromiseNotifier -> io.netty.util.concurrent.UnaryPromiseNotifier:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.concurrent.Promise promise -> promise
    26:28:void <init>(io.netty.util.concurrent.Promise) -> <init>
    32:33:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
    36:50:void cascadeTo(io.netty.util.concurrent.Future,io.netty.util.concurrent.Promise) -> cascadeTo
    23:23:void <clinit>() -> <clinit>
io.netty.util.internal.AppendableCharSequence -> io.netty.util.internal.AppendableCharSequence:
    char[] chars -> chars
    int pos -> pos
    25:30:void <init>(int) -> <init>
    32:38:void <init>(char[]) -> <init>
    42:42:int length() -> length
    47:50:char charAt(int) -> charAt
    61:61:char charAtUnsafe(int) -> charAtUnsafe
    66:66:io.netty.util.internal.AppendableCharSequence subSequence(int,int) -> subSequence
    71:77:io.netty.util.internal.AppendableCharSequence append(char) -> append
    82:82:io.netty.util.internal.AppendableCharSequence append(java.lang.CharSequence) -> append
    87:106:io.netty.util.internal.AppendableCharSequence append(java.lang.CharSequence,int,int) -> append
    114:115:void reset() -> reset
    119:119:java.lang.String toString() -> toString
    139:139:java.lang.String subStringUnsafe(int,int) -> subStringUnsafe
    143:157:char[] expand(char[],int,int) -> expand
    21:21:java.lang.CharSequence subSequence(int,int) -> subSequence
    21:21:java.lang.Appendable append(char) -> append
    21:21:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    21:21:java.lang.Appendable append(java.lang.CharSequence) -> append
io.netty.util.internal.Cleaner -> io.netty.util.internal.Cleaner:
    void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
io.netty.util.internal.CleanerJava6 -> io.netty.util.internal.CleanerJava6:
    long CLEANER_FIELD_OFFSET -> CLEANER_FIELD_OFFSET
    java.lang.reflect.Method CLEAN_METHOD -> CLEAN_METHOD
    io.netty.util.internal.logging.InternalLogger logger -> logger
    32:32:void <init>() -> <init>
    69:69:boolean isSupported() -> isSupported
    74:85:void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
    36:66:void <clinit>() -> <clinit>
io.netty.util.internal.CleanerJava9 -> io.netty.util.internal.CleanerJava9:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.reflect.Method INVOKE_CLEANER -> INVOKE_CLEANER
    28:28:void <init>() -> <init>
    71:71:boolean isSupported() -> isSupported
    77:81:void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
    29:68:void <clinit>() -> <clinit>
io.netty.util.internal.ConstantTimeUtils -> io.netty.util.internal.ConstantTimeUtils:
    37:43:int equalsConstantTime(int,int) -> equalsConstantTime
    62:69:int equalsConstantTime(long,long) -> equalsConstantTime
    96:101:int equalsConstantTime(byte[],int,byte[],int,int) -> equalsConstantTime
    120:129:int equalsConstantTime(java.lang.CharSequence,java.lang.CharSequence) -> equalsConstantTime
io.netty.util.internal.DefaultPriorityQueue -> io.netty.util.internal.DefaultPriorityQueue:
    io.netty.util.internal.PriorityQueueNode[] EMPTY_ARRAY -> EMPTY_ARRAY
    java.util.Comparator comparator -> comparator
    io.netty.util.internal.PriorityQueueNode[] queue -> queue
    int size -> size
    39:42:void <init>(java.util.Comparator,int) -> <init>
    46:46:int size() -> size
    51:51:boolean isEmpty() -> isEmpty
    56:60:boolean contains(java.lang.Object) -> contains
    65:65:boolean containsTyped(io.netty.util.internal.PriorityQueueNode) -> containsTyped
    70:78:void clear() -> clear
    82:83:void clearIgnoringIndexes() -> clearIgnoringIndexes
    87:102:boolean offer(io.netty.util.internal.PriorityQueueNode) -> offer
    107:119:io.netty.util.internal.PriorityQueueNode poll() -> poll
    124:124:io.netty.util.internal.PriorityQueueNode peek() -> peek
    132:136:boolean remove(java.lang.Object) -> remove
    141:164:boolean removeTyped(io.netty.util.internal.PriorityQueueNode) -> removeTyped
    169:187:void priorityChanged(io.netty.util.internal.PriorityQueueNode) -> priorityChanged
    191:191:java.lang.Object[] toArray() -> toArray
    197:204:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    212:212:java.util.Iterator iterator() -> iterator
    239:239:boolean contains(io.netty.util.internal.PriorityQueueNode,int) -> contains
    243:271:void bubbleDown(int,io.netty.util.internal.PriorityQueueNode) -> bubbleDown
    274:295:void bubbleUp(int,io.netty.util.internal.PriorityQueueNode) -> bubbleUp
    31:31:java.lang.Object peek() -> peek
    31:31:java.lang.Object poll() -> poll
    31:31:boolean offer(java.lang.Object) -> offer
    31:31:void priorityChanged(java.lang.Object) -> priorityChanged
    31:31:boolean containsTyped(java.lang.Object) -> containsTyped
    31:31:boolean removeTyped(java.lang.Object) -> removeTyped
    31:31:int access$100(io.netty.util.internal.DefaultPriorityQueue) -> access$100
    31:31:io.netty.util.internal.PriorityQueueNode[] access$200(io.netty.util.internal.DefaultPriorityQueue) -> access$200
    33:33:void <clinit>() -> <clinit>
io.netty.util.internal.DefaultPriorityQueue$1 -> io.netty.util.internal.DefaultPriorityQueue$1:
io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator -> io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator:
    int index -> index
    io.netty.util.internal.DefaultPriorityQueue this$0 -> this$0
    215:215:void <init>(io.netty.util.internal.DefaultPriorityQueue) -> <init>
    220:220:boolean hasNext() -> hasNext
    225:229:io.netty.util.internal.PriorityQueueNode next() -> next
    234:234:void remove() -> remove
    215:215:java.lang.Object next() -> next
    215:215:void <init>(io.netty.util.internal.DefaultPriorityQueue,io.netty.util.internal.DefaultPriorityQueue$1) -> <init>
io.netty.util.internal.EmptyArrays -> io.netty.util.internal.EmptyArrays:
    int[] EMPTY_INTS -> EMPTY_INTS
    byte[] EMPTY_BYTES -> EMPTY_BYTES
    char[] EMPTY_CHARS -> EMPTY_CHARS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    java.lang.Class[] EMPTY_CLASSES -> EMPTY_CLASSES
    java.lang.String[] EMPTY_STRINGS -> EMPTY_STRINGS
    io.netty.util.AsciiString[] EMPTY_ASCII_STRINGS -> EMPTY_ASCII_STRINGS
    java.lang.StackTraceElement[] EMPTY_STACK_TRACE -> EMPTY_STACK_TRACE
    java.nio.ByteBuffer[] EMPTY_BYTE_BUFFERS -> EMPTY_BYTE_BUFFERS
    java.security.cert.Certificate[] EMPTY_CERTIFICATES -> EMPTY_CERTIFICATES
    java.security.cert.X509Certificate[] EMPTY_X509_CERTIFICATES -> EMPTY_X509_CERTIFICATES
    javax.security.cert.X509Certificate[] EMPTY_JAVAX_X509_CERTIFICATES -> EMPTY_JAVAX_X509_CERTIFICATES
    27:38:void <clinit>() -> <clinit>
io.netty.util.internal.EmptyPriorityQueue -> io.netty.util.internal.EmptyPriorityQueue:
    io.netty.util.internal.PriorityQueue INSTANCE -> INSTANCE
    26:27:void <init>() -> <init>
    34:34:io.netty.util.internal.EmptyPriorityQueue instance() -> instance
    39:39:boolean removeTyped(java.lang.Object) -> removeTyped
    44:44:boolean containsTyped(java.lang.Object) -> containsTyped
    49:49:void priorityChanged(java.lang.Object) -> priorityChanged
    53:53:int size() -> size
    58:58:boolean isEmpty() -> isEmpty
    63:63:boolean contains(java.lang.Object) -> contains
    68:68:java.util.Iterator iterator() -> iterator
    73:73:java.lang.Object[] toArray() -> toArray
    78:81:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    86:86:boolean add(java.lang.Object) -> add
    91:91:boolean remove(java.lang.Object) -> remove
    96:96:boolean containsAll(java.util.Collection) -> containsAll
    101:101:boolean addAll(java.util.Collection) -> addAll
    106:106:boolean removeAll(java.util.Collection) -> removeAll
    111:111:boolean retainAll(java.util.Collection) -> retainAll
    116:116:void clear() -> clear
    120:120:void clearIgnoringIndexes() -> clearIgnoringIndexes
    124:124:boolean equals(java.lang.Object) -> equals
    129:129:int hashCode() -> hashCode
    134:134:boolean offer(java.lang.Object) -> offer
    139:139:java.lang.Object remove() -> remove
    144:144:java.lang.Object poll() -> poll
    149:149:java.lang.Object element() -> element
    154:154:java.lang.Object peek() -> peek
    159:159:java.lang.String toString() -> toString
    24:24:void <clinit>() -> <clinit>
io.netty.util.internal.IntegerHolder -> io.netty.util.internal.IntegerHolder:
io.netty.util.internal.InternalThreadLocalMap -> io.netty.util.internal.InternalThreadLocalMap:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    int STRING_BUILDER_INITIAL_SIZE -> STRING_BUILDER_INITIAL_SIZE
    int STRING_BUILDER_MAX_SIZE -> STRING_BUILDER_MAX_SIZE
    java.lang.Object UNSET -> UNSET
    58:62:io.netty.util.internal.InternalThreadLocalMap getIfSet() -> getIfSet
    66:70:io.netty.util.internal.InternalThreadLocalMap get() -> get
    75:79:io.netty.util.internal.InternalThreadLocalMap fastGet(io.netty.util.concurrent.FastThreadLocalThread) -> fastGet
    83:89:io.netty.util.internal.InternalThreadLocalMap slowGet() -> slowGet
    93:99:void remove() -> remove
    102:103:void destroy() -> destroy
    106:111:int nextVariableIndex() -> nextVariableIndex
    123:124:void <init>() -> <init>
    127:129:java.lang.Object[] newIndexedVariableTable() -> newIndexedVariableTable
    133:177:int size() -> size
    181:190:java.lang.StringBuilder stringBuilder() -> stringBuilder
    194:198:java.util.Map charsetEncoderCache() -> charsetEncoderCache
    202:206:java.util.Map charsetDecoderCache() -> charsetDecoderCache
    215:222:java.util.ArrayList arrayList(int) -> arrayList
    226:226:int futureListenerStackDepth() -> futureListenerStackDepth
    230:231:void setFutureListenerStackDepth(int) -> setFutureListenerStackDepth
    234:238:io.netty.util.internal.ThreadLocalRandom random() -> random
    242:246:java.util.Map typeParameterMatcherGetCache() -> typeParameterMatcherGetCache
    250:254:java.util.Map typeParameterMatcherFindCache() -> typeParameterMatcherFindCache
    266:271:java.util.Map handlerSharableCache() -> handlerSharableCache
    283:284:java.lang.Object indexedVariable(int) -> indexedVariable
    291:298:boolean setIndexedVariable(int,java.lang.Object) -> setIndexedVariable
    303:317:void expandIndexedVariableTableAndSet(int,java.lang.Object) -> expandIndexedVariableTableAndSet
    320:326:java.lang.Object removeIndexedVariable(int) -> removeIndexedVariable
    331:332:boolean isIndexedVariableSet(int) -> isIndexedVariableSet
    40:55:void <clinit>() -> <clinit>
io.netty.util.internal.LongAdderCounter -> io.netty.util.internal.LongAdderCounter:
    20:20:void <init>() -> <init>
    24:24:long value() -> value
io.netty.util.internal.LongCounter -> io.netty.util.internal.LongCounter:
    void add(long) -> add
    void increment() -> increment
    long value() -> value
io.netty.util.internal.MacAddressUtil -> io.netty.util.internal.MacAddressUtil:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    49:130:byte[] bestAvailableMac() -> bestAvailableMac
    138:146:byte[] defaultMachineId() -> defaultMachineId
    157:185:byte[] parseMAC(java.lang.String) -> parseMAC
    189:192:void validateMacSeparator(char) -> validateMacSeparator
    199:203:java.lang.String formatAddress(byte[]) -> formatAddress
    211:248:int compareAddresses(byte[],byte[]) -> compareAddresses
    257:257:int compareAddresses(java.net.InetAddress,java.net.InetAddress) -> compareAddresses
    261:274:int scoreAddress(java.net.InetAddress) -> scoreAddress
    277:277:void <init>() -> <init>
    35:35:void <clinit>() -> <clinit>
io.netty.util.internal.MathUtil -> io.netty.util.internal.MathUtil:
    boolean $assertionsDisabled -> $assertionsDisabled
    22:23:void <init>() -> <init>
    35:36:int findNextPositivePowerOfTwo(int) -> findNextPositivePowerOfTwo
    52:52:int safeFindNextPositivePowerOfTwo(int) -> safeFindNextPositivePowerOfTwo
    64:64:boolean isOutOfBounds(int,int,int) -> isOutOfBounds
    93:93:int compare(long,long) -> compare
    20:20:void <clinit>() -> <clinit>
io.netty.util.internal.NativeLibraryLoader -> io.netty.util.internal.NativeLibraryLoader:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.io.File WORKDIR -> WORKDIR
    boolean DELETE_NATIVE_LIB_AFTER_LOADING -> DELETE_NATIVE_LIB_AFTER_LOADING
    boolean $assertionsDisabled -> $assertionsDisabled
    82:95:void loadFirstAvailable(java.lang.ClassLoader,java.lang.String[]) -> loadFirstAvailable
    104:112:java.lang.String calculatePackagePrefix() -> calculatePackagePrefix
    120:219:void load(java.lang.String,java.lang.ClassLoader) -> load
    228:251:void loadLibrary(java.lang.ClassLoader,java.lang.String,boolean) -> loadLibrary
    255:280:void loadLibraryByHelper(java.lang.Class,java.lang.String,boolean) -> loadLibraryByHelper
    292:325:java.lang.Class tryToLoadClass(java.lang.ClassLoader,java.lang.Class) -> tryToLoadClass
    337:359:byte[] classToByteArray(java.lang.Class) -> classToByteArray
    364:371:void closeQuietly(java.io.Closeable) -> closeQuietly
    373:375:void <init>() -> <init>
    43:72:void <clinit>() -> <clinit>
io.netty.util.internal.NativeLibraryLoader$1 -> io.netty.util.internal.NativeLibraryLoader$1:
    java.lang.Class val$helper -> val$helper
    java.lang.String val$name -> val$name
    boolean val$absolute -> val$absolute
    255:255:void <init>(java.lang.Class,java.lang.String,boolean) -> <init>
    261:265:java.lang.Object run() -> run
io.netty.util.internal.NativeLibraryLoader$2 -> io.netty.util.internal.NativeLibraryLoader$2:
    java.lang.ClassLoader val$loader -> val$loader
    java.lang.Class val$helper -> val$helper
    byte[] val$classBinary -> val$classBinary
    301:301:void <init>(java.lang.ClassLoader,java.lang.Class,byte[]) -> <init>
    307:313:java.lang.Class run() -> run
    301:301:java.lang.Object run() -> run
io.netty.util.internal.NativeLibraryLoader$NoexecVolumeDetector -> io.netty.util.internal.NativeLibraryLoader$NoexecVolumeDetector:
    380:410:boolean canExecuteExecutable(java.io.File) -> canExecuteExecutable
    377:377:boolean access$000(java.io.File) -> access$000
io.netty.util.internal.NativeLibraryUtil -> io.netty.util.internal.NativeLibraryUtil:
    35:40:void loadLibrary(java.lang.String,boolean) -> loadLibrary
    42:44:void <init>() -> <init>
io.netty.util.internal.ObjectUtil -> io.netty.util.internal.ObjectUtil:
    30:33:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    41:44:int checkPositive(int,java.lang.String) -> checkPositive
    52:55:long checkPositive(long,java.lang.String) -> checkPositive
    63:66:int checkPositiveOrZero(int,java.lang.String) -> checkPositiveOrZero
    98:98:int intValue(java.lang.Integer,int) -> intValue
io.netty.util.internal.OutOfDirectMemoryError -> io.netty.util.internal.OutOfDirectMemoryError:
    28:29:void <init>(java.lang.String) -> <init>
io.netty.util.internal.PlatformDependent -> io.netty.util.internal.PlatformDependent:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.regex.Pattern MAX_DIRECT_MEMORY_SIZE_ARG_PATTERN -> MAX_DIRECT_MEMORY_SIZE_ARG_PATTERN
    boolean IS_WINDOWS -> IS_WINDOWS
    boolean IS_OSX -> IS_OSX
    boolean MAYBE_SUPER_USER -> MAYBE_SUPER_USER
    boolean CAN_ENABLE_TCP_NODELAY_BY_DEFAULT -> CAN_ENABLE_TCP_NODELAY_BY_DEFAULT
    boolean HAS_UNSAFE -> HAS_UNSAFE
    boolean DIRECT_BUFFER_PREFERRED -> DIRECT_BUFFER_PREFERRED
    long MAX_DIRECT_MEMORY -> MAX_DIRECT_MEMORY
    long BYTE_ARRAY_BASE_OFFSET -> BYTE_ARRAY_BASE_OFFSET
    java.io.File TMPDIR -> TMPDIR
    int BIT_MODE -> BIT_MODE
    java.lang.String NORMALIZED_ARCH -> NORMALIZED_ARCH
    java.lang.String NORMALIZED_OS -> NORMALIZED_OS
    int ADDRESS_SIZE -> ADDRESS_SIZE
    boolean USE_DIRECT_BUFFER_NO_CLEANER -> USE_DIRECT_BUFFER_NO_CLEANER
    java.util.concurrent.atomic.AtomicLong DIRECT_MEMORY_COUNTER -> DIRECT_MEMORY_COUNTER
    long DIRECT_MEMORY_LIMIT -> DIRECT_MEMORY_LIMIT
    io.netty.util.internal.PlatformDependent$ThreadLocalRandomProvider RANDOM_PROVIDER -> RANDOM_PROVIDER
    io.netty.util.internal.Cleaner CLEANER -> CLEANER
    int UNINITIALIZED_ARRAY_ALLOCATION_THRESHOLD -> UNINITIALIZED_ARRAY_ALLOCATION_THRESHOLD
    boolean BIG_ENDIAN_NATIVE_ORDER -> BIG_ENDIAN_NATIVE_ORDER
    io.netty.util.internal.Cleaner NOOP -> NOOP
    boolean $assertionsDisabled -> $assertionsDisabled
    196:196:boolean hasDirectBufferNoCleanerConstructor() -> hasDirectBufferNoCleanerConstructor
    200:201:byte[] allocateUninitializedArray(int) -> allocateUninitializedArray
    208:208:boolean isAndroid() -> isAndroid
    215:215:boolean isWindows() -> isWindows
    222:222:boolean isOsx() -> isOsx
    230:230:boolean maybeSuperUser() -> maybeSuperUser
    237:237:int javaVersion() -> javaVersion
    244:244:boolean canEnableTcpNoDelayByDefault() -> canEnableTcpNoDelayByDefault
    252:252:boolean hasUnsafe() -> hasUnsafe
    268:268:boolean isUnaligned() -> isUnaligned
    276:276:boolean directBufferPreferred() -> directBufferPreferred
    283:283:long maxDirectMemory() -> maxDirectMemory
    290:290:java.io.File tmpdir() -> tmpdir
    324:329:void throwException(java.lang.Throwable) -> throwException
    333:333:void throwException0(java.lang.Throwable) -> throwException0
    340:340:java.util.concurrent.ConcurrentMap newConcurrentHashMap() -> newConcurrentHashMap
    347:350:io.netty.util.internal.LongCounter newLongCounter() -> newLongCounter
    388:389:void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
    392:392:long directBufferAddress(java.nio.ByteBuffer) -> directBufferAddress
    408:408:byte getByte(long) -> getByte
    412:412:short getShort(long) -> getShort
    416:416:int getInt(long) -> getInt
    420:420:long getLong(long) -> getLong
    424:424:byte getByte(byte[],int) -> getByte
    428:428:short getShort(byte[],int) -> getShort
    432:432:int getInt(byte[],int) -> getInt
    436:436:long getLong(byte[],int) -> getLong
    440:450:long getLongSafe(byte[],int) -> getLongSafe
    461:467:int getIntSafe(byte[],int) -> getIntSafe
    474:477:short getShortSafe(byte[],int) -> getShortSafe
    484:495:int hashCodeAsciiCompute(java.lang.CharSequence,int,int) -> hashCodeAsciiCompute
    502:512:int hashCodeAsciiSanitizeInt(java.lang.CharSequence,int) -> hashCodeAsciiSanitizeInt
    519:525:int hashCodeAsciiSanitizeShort(java.lang.CharSequence,int) -> hashCodeAsciiSanitizeShort
    532:532:int hashCodeAsciiSanitizeByte(char) -> hashCodeAsciiSanitizeByte
    536:537:void putByte(long,byte) -> putByte
    540:541:void putShort(long,short) -> putShort
    544:545:void putInt(long,int) -> putInt
    548:549:void putLong(long,long) -> putLong
    552:553:void putByte(byte[],int,byte) -> putByte
    556:557:void putShort(byte[],int,short) -> putShort
    560:561:void putInt(byte[],int,int) -> putInt
    564:565:void putLong(byte[],int,long) -> putLong
    568:569:void copyMemory(long,long,long) -> copyMemory
    572:573:void copyMemory(byte[],int,long,long) -> copyMemory
    576:577:void copyMemory(long,byte[],int,long) -> copyMemory
    580:581:void setMemory(byte[],int,long,byte) -> setMemory
    584:585:void setMemory(long,long,byte) -> setMemory
    592:600:java.nio.ByteBuffer allocateDirectNoCleaner(int) -> allocateDirectNoCleaner
    609:618:java.nio.ByteBuffer reallocateDirectNoCleaner(java.nio.ByteBuffer,int) -> reallocateDirectNoCleaner
    627:632:void freeDirectNoCleaner(java.nio.ByteBuffer) -> freeDirectNoCleaner
    635:648:void incrementMemoryCounter(int) -> incrementMemoryCounter
    651:655:void decrementMemoryCounter(int) -> decrementMemoryCounter
    658:658:boolean useDirectBufferNoCleaner() -> useDirectBufferNoCleaner
    673:675:boolean equals(byte[],int,byte[],int,int) -> equals
    686:688:boolean isZero(byte[],int,int) -> isZero
    713:715:int equalsConstantTime(byte[],int,byte[],int,int) -> equalsConstantTime
    728:730:int hashCodeAscii(byte[],int,int) -> hashCodeAscii
    744:819:int hashCodeAscii(java.lang.CharSequence) -> hashCodeAscii
    874:874:java.util.Queue newMpscQueue() -> newMpscQueue
    882:882:java.util.Queue newMpscQueue(int) -> newMpscQueue
    898:898:java.util.Queue newFixedMpscQueue(int) -> newFixedMpscQueue
    905:905:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    919:919:java.lang.ClassLoader getSystemClassLoader() -> getSystemClassLoader
    937:937:java.util.Random threadLocalRandom() -> threadLocalRandom
    941:945:boolean isWindows0() -> isWindows0
    949:956:boolean isOsx0() -> isOsx0
    960:965:boolean maybeSuperUser0() -> maybeSuperUser0
    969:985:boolean hasUnsafe0() -> hasUnsafe0
    990:1049:long maxDirectMemory0() -> maxDirectMemory0
    1055:1108:java.io.File tmpdir0() -> tmpdir0
    1113:1127:java.io.File toDirectory(java.lang.String) -> toDirectory
    1133:1170:int bitMode0() -> bitMode0
    1175:1178:int addressSize0() -> addressSize0
    1182:1185:long byteArrayBaseOffset0() -> byteArrayBaseOffset0
    1189:1195:boolean equalsSafe(byte[],int,byte[],int,int) -> equalsSafe
    1199:1205:boolean isZeroSafe(byte[],int,int) -> isZeroSafe
    1212:1239:int hashCodeAsciiSafe(byte[],int,int) -> hashCodeAsciiSafe
    1244:1244:java.lang.String normalizedArch() -> normalizedArch
    1248:1248:java.lang.String normalizedOs() -> normalizedOs
    1252:1252:java.lang.String normalize(java.lang.String) -> normalize
    1256:1294:java.lang.String normalizeArch(java.lang.String) -> normalizeArch
    1298:1333:java.lang.String normalizeOs(java.lang.String) -> normalizeOs
    1364:1366:void <init>() -> <init>
    67:67:io.netty.util.internal.logging.InternalLogger access$100() -> access$100
    67:193:void <clinit>() -> <clinit>
io.netty.util.internal.PlatformDependent$1 -> io.netty.util.internal.PlatformDependent$1:
    108:108:void <init>() -> <init>
    112:112:void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
io.netty.util.internal.PlatformDependent$2 -> io.netty.util.internal.PlatformDependent$2:
    117:117:void <init>() -> <init>
    120:120:java.util.Random current() -> current
io.netty.util.internal.PlatformDependent$3 -> io.netty.util.internal.PlatformDependent$3:
    124:124:void <init>() -> <init>
    127:127:java.util.Random current() -> current
io.netty.util.internal.PlatformDependent$AtomicLongCounter -> io.netty.util.internal.PlatformDependent$AtomicLongCounter:
    1336:1336:void <init>() -> <init>
    1341:1342:void add(long) -> add
    1346:1347:void increment() -> increment
    1356:1356:long value() -> value
    1336:1336:void <init>(io.netty.util.internal.PlatformDependent$1) -> <init>
io.netty.util.internal.PlatformDependent$Mpsc -> io.netty.util.internal.PlatformDependent$Mpsc:
    boolean USE_MPSC_CHUNKED_ARRAY_QUEUE -> USE_MPSC_CHUNKED_ARRAY_QUEUE
    857:858:java.util.Queue newMpscQueue(int) -> newMpscQueue
    863:863:java.util.Queue newMpscQueue() -> newMpscQueue
    830:851:void <clinit>() -> <clinit>
io.netty.util.internal.PlatformDependent$Mpsc$1 -> io.netty.util.internal.PlatformDependent$Mpsc$1:
    835:835:void <init>() -> <init>
    839:839:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent$ThreadLocalRandomProvider -> io.netty.util.internal.PlatformDependent$ThreadLocalRandomProvider:
    java.util.Random current() -> current
io.netty.util.internal.PlatformDependent0 -> io.netty.util.internal.PlatformDependent0:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    long ADDRESS_FIELD_OFFSET -> ADDRESS_FIELD_OFFSET
    long BYTE_ARRAY_BASE_OFFSET -> BYTE_ARRAY_BASE_OFFSET
    java.lang.reflect.Constructor DIRECT_BUFFER_CONSTRUCTOR -> DIRECT_BUFFER_CONSTRUCTOR
    boolean IS_EXPLICIT_NO_UNSAFE -> IS_EXPLICIT_NO_UNSAFE
    java.lang.reflect.Method ALLOCATE_ARRAY_METHOD -> ALLOCATE_ARRAY_METHOD
    int JAVA_VERSION -> JAVA_VERSION
    boolean IS_ANDROID -> IS_ANDROID
    java.lang.Throwable UNSAFE_UNAVAILABILITY_CAUSE -> UNSAFE_UNAVAILABILITY_CAUSE
    java.lang.Object INTERNAL_UNSAFE -> INTERNAL_UNSAFE
    sun.misc.Unsafe UNSAFE -> UNSAFE
    boolean UNALIGNED -> UNALIGNED
    boolean $assertionsDisabled -> $assertionsDisabled
    368:368:boolean isExplicitNoUnsafe() -> isExplicitNoUnsafe
    372:393:boolean explicitNoUnsafe0() -> explicitNoUnsafe0
    397:397:boolean isUnaligned() -> isUnaligned
    401:401:boolean hasUnsafe() -> hasUnsafe
    409:409:boolean unalignedAccess() -> unalignedAccess
    414:415:void throwException(java.lang.Throwable) -> throwException
    418:418:boolean hasDirectBufferNoCleanerConstructor() -> hasDirectBufferNoCleanerConstructor
    422:422:java.nio.ByteBuffer reallocateDirectNoCleaner(java.nio.ByteBuffer,int) -> reallocateDirectNoCleaner
    426:426:java.nio.ByteBuffer allocateDirectNoCleaner(int) -> allocateDirectNoCleaner
    430:430:boolean hasAllocateArrayMethod() -> hasAllocateArrayMethod
    435:439:byte[] allocateUninitializedArray(int) -> allocateUninitializedArray
    444:453:java.nio.ByteBuffer newDirectBuffer(long,int) -> newDirectBuffer
    458:458:long directBufferAddress(java.nio.ByteBuffer) -> directBufferAddress
    462:462:long byteArrayBaseOffset() -> byteArrayBaseOffset
    466:466:java.lang.Object getObject(java.lang.Object,long) -> getObject
    474:474:long getLong(java.lang.Object,long) -> getLong
    478:478:long objectFieldOffset(java.lang.reflect.Field) -> objectFieldOffset
    482:482:byte getByte(long) -> getByte
    486:486:short getShort(long) -> getShort
    490:490:int getInt(long) -> getInt
    494:494:long getLong(long) -> getLong
    498:498:byte getByte(byte[],int) -> getByte
    502:502:short getShort(byte[],int) -> getShort
    506:506:int getInt(byte[],int) -> getInt
    510:510:long getLong(byte[],int) -> getLong
    514:515:void putByte(long,byte) -> putByte
    518:519:void putShort(long,short) -> putShort
    522:523:void putInt(long,int) -> putInt
    526:527:void putLong(long,long) -> putLong
    530:531:void putByte(byte[],int,byte) -> putByte
    534:535:void putShort(byte[],int,short) -> putShort
    538:539:void putInt(byte[],int,int) -> putInt
    542:543:void putLong(byte[],int,long) -> putLong
    547:554:void copyMemory(long,long,long) -> copyMemory
    558:565:void copyMemory(java.lang.Object,long,java.lang.Object,long,long) -> copyMemory
    568:569:void setMemory(long,long,byte) -> setMemory
    572:573:void setMemory(java.lang.Object,long,long,byte) -> setMemory
    576:600:boolean equals(byte[],int,byte[],int,int) -> equals
    604:640:int equalsConstantTime(byte[],int,byte[],int,int) -> equalsConstantTime
    645:667:boolean isZero(byte[],int,int) -> isZero
    671:699:int hashCodeAscii(byte[],int,int) -> hashCodeAscii
    706:708:int hashCodeAsciiCompute(long,int) -> hashCodeAsciiCompute
    714:714:int hashCodeAsciiSanitize(int) -> hashCodeAsciiSanitize
    718:718:int hashCodeAsciiSanitize(short) -> hashCodeAsciiSanitize
    722:722:int hashCodeAsciiSanitize(byte) -> hashCodeAsciiSanitize
    726:729:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    752:755:java.lang.ClassLoader getSystemClassLoader() -> getSystemClassLoader
    765:765:int addressSize() -> addressSize
    773:774:void freeMemory(long) -> freeMemory
    781:781:boolean isAndroid() -> isAndroid
    787:797:boolean isAndroid0() -> isAndroid0
    801:801:int javaVersion() -> javaVersion
    807:815:int javaVersion0() -> javaVersion0
    820:820:int majorVersionFromJavaSpecificationVersion() -> majorVersionFromJavaSpecificationVersion
    825:835:int majorVersion(java.lang.String) -> majorVersion
    839:840:void <init>() -> <init>
    36:365:void <clinit>() -> <clinit>
io.netty.util.internal.PlatformDependent0$1 -> io.netty.util.internal.PlatformDependent0$1:
    82:82:void <init>() -> <init>
    86:102:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$10 -> io.netty.util.internal.PlatformDependent0$10:
    755:755:void <init>() -> <init>
    758:758:java.lang.ClassLoader run() -> run
    755:755:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$2 -> io.netty.util.internal.PlatformDependent0$2:
    sun.misc.Unsafe val$finalUnsafe -> val$finalUnsafe
    125:125:void <init>(sun.misc.Unsafe) -> <init>
    129:135:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$3 -> io.netty.util.internal.PlatformDependent0$3:
    sun.misc.Unsafe val$finalUnsafe -> val$finalUnsafe
    java.nio.ByteBuffer val$direct -> val$direct
    154:154:void <init>(sun.misc.Unsafe,java.nio.ByteBuffer) -> <init>
    158:172:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$4 -> io.netty.util.internal.PlatformDependent0$4:
    java.nio.ByteBuffer val$direct -> val$direct
    215:215:void <init>(java.nio.ByteBuffer) -> <init>
    219:229:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$5 -> io.netty.util.internal.PlatformDependent0$5:
    263:263:void <init>() -> <init>
    267:284:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$6 -> io.netty.util.internal.PlatformDependent0$6:
    303:303:void <init>() -> <init>
    309:314:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$7 -> io.netty.util.internal.PlatformDependent0$7:
    java.lang.Object val$finalInternalUnsafe -> val$finalInternalUnsafe
    321:321:void <init>(java.lang.Object) -> <init>
    325:330:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$8 -> io.netty.util.internal.PlatformDependent0$8:
    java.lang.Class val$clazz -> val$clazz
    729:729:void <init>(java.lang.Class) -> <init>
    732:732:java.lang.ClassLoader run() -> run
    729:729:java.lang.Object run() -> run
io.netty.util.internal.PriorityQueue -> io.netty.util.internal.PriorityQueue:
    boolean removeTyped(java.lang.Object) -> removeTyped
    boolean containsTyped(java.lang.Object) -> containsTyped
    void priorityChanged(java.lang.Object) -> priorityChanged
    void clearIgnoringIndexes() -> clearIgnoringIndexes
io.netty.util.internal.PriorityQueueNode -> io.netty.util.internal.PriorityQueueNode:
    int priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue) -> priorityQueueIndex
    void priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue,int) -> priorityQueueIndex
io.netty.util.internal.PromiseNotificationUtil -> io.netty.util.internal.PromiseNotificationUtil:
    32:42:void tryCancel(io.netty.util.concurrent.Promise,io.netty.util.internal.logging.InternalLogger) -> tryCancel
    48:58:void trySuccess(io.netty.util.concurrent.Promise,java.lang.Object,io.netty.util.internal.logging.InternalLogger) -> trySuccess
    64:74:void tryFailure(io.netty.util.concurrent.Promise,java.lang.Throwable,io.netty.util.internal.logging.InternalLogger) -> tryFailure
io.netty.util.internal.ReadOnlyIterator -> io.netty.util.internal.ReadOnlyIterator:
    java.util.Iterator iterator -> iterator
    24:29:void <init>(java.util.Iterator) -> <init>
    33:33:boolean hasNext() -> hasNext
    38:38:java.lang.Object next() -> next
    43:43:void remove() -> remove
io.netty.util.internal.RecyclableArrayList -> io.netty.util.internal.RecyclableArrayList:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    boolean insertSinceRecycled -> insertSinceRecycled
    io.netty.util.Recycler$Handle handle -> handle
    56:58:io.netty.util.internal.RecyclableArrayList newInstance(int) -> newInstance
    64:65:void <init>(io.netty.util.Recycler$Handle) -> <init>
    68:70:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    74:79:boolean addAll(java.util.Collection) -> addAll
    84:89:boolean addAll(int,java.util.Collection) -> addAll
    93:109:void checkNullElements(java.util.Collection) -> checkNullElements
    113:120:boolean add(java.lang.Object) -> add
    125:130:void add(int,java.lang.Object) -> add
    134:139:java.lang.Object set(int,java.lang.Object) -> set
    153:156:boolean recycle() -> recycle
    30:30:void <init>(io.netty.util.Recycler$Handle,io.netty.util.internal.RecyclableArrayList$1) -> <init>
    36:36:void <clinit>() -> <clinit>
io.netty.util.internal.RecyclableArrayList$1 -> io.netty.util.internal.RecyclableArrayList$1:
    36:36:void <init>() -> <init>
    39:39:io.netty.util.internal.RecyclableArrayList newObject(io.netty.util.Recycler$Handle) -> newObject
    36:36:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.util.internal.ReflectionUtil -> io.netty.util.internal.ReflectionUtil:
    31:36:java.lang.Throwable trySetAccessible(java.lang.reflect.AccessibleObject) -> trySetAccessible
    44:47:java.lang.RuntimeException handleInaccessibleObjectException(java.lang.RuntimeException) -> handleInaccessibleObjectException
io.netty.util.internal.SocketUtils -> io.netty.util.internal.SocketUtils:
    65:75:void bind(java.net.Socket,java.net.SocketAddress) -> bind
    80:87:boolean connect(java.nio.channels.SocketChannel,java.net.SocketAddress) -> connect
    93:103:void bind(java.nio.channels.SocketChannel,java.net.SocketAddress) -> bind
    107:114:java.nio.channels.SocketChannel accept(java.nio.channels.ServerSocketChannel) -> accept
    120:130:void bind(java.nio.channels.DatagramChannel,java.net.SocketAddress) -> bind
    133:133:java.net.SocketAddress localSocketAddress(java.net.ServerSocket) -> localSocketAddress
    143:150:java.net.InetAddress addressByName(java.lang.String) -> addressByName
    156:163:java.net.InetAddress[] allAddressesByName(java.lang.String) -> allAddressesByName
    168:168:java.net.InetSocketAddress socketAddress(java.lang.String,int) -> socketAddress
    177:177:java.util.Enumeration addressesFromNetworkInterface(java.net.NetworkInterface) -> addressesFromNetworkInterface
    203:210:byte[] hardwareAddressFromNetworkInterface(java.net.NetworkInterface) -> hardwareAddressFromNetworkInterface
io.netty.util.internal.SocketUtils$10 -> io.netty.util.internal.SocketUtils$10:
    java.lang.String val$hostname -> val$hostname
    int val$port -> val$port
    168:168:void <init>(java.lang.String,int) -> <init>
    171:171:java.net.InetSocketAddress run() -> run
    168:168:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$11 -> io.netty.util.internal.SocketUtils$11:
    java.net.NetworkInterface val$intf -> val$intf
    177:177:void <init>(java.net.NetworkInterface) -> <init>
    180:180:java.util.Enumeration run() -> run
    177:177:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$13 -> io.netty.util.internal.SocketUtils$13:
    java.net.NetworkInterface val$intf -> val$intf
    203:203:void <init>(java.net.NetworkInterface) -> <init>
    206:206:byte[] run() -> run
    203:203:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$2 -> io.netty.util.internal.SocketUtils$2:
    java.net.Socket val$socket -> val$socket
    java.net.SocketAddress val$bindpoint -> val$bindpoint
    65:65:void <init>(java.net.Socket,java.net.SocketAddress) -> <init>
    68:69:java.lang.Void run() -> run
    65:65:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$3 -> io.netty.util.internal.SocketUtils$3:
    java.nio.channels.SocketChannel val$socketChannel -> val$socketChannel
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    80:80:void <init>(java.nio.channels.SocketChannel,java.net.SocketAddress) -> <init>
    83:83:java.lang.Boolean run() -> run
    80:80:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$4 -> io.netty.util.internal.SocketUtils$4:
    java.nio.channels.SocketChannel val$socketChannel -> val$socketChannel
    java.net.SocketAddress val$address -> val$address
    93:93:void <init>(java.nio.channels.SocketChannel,java.net.SocketAddress) -> <init>
    96:97:java.lang.Void run() -> run
    93:93:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$5 -> io.netty.util.internal.SocketUtils$5:
    java.nio.channels.ServerSocketChannel val$serverSocketChannel -> val$serverSocketChannel
    107:107:void <init>(java.nio.channels.ServerSocketChannel) -> <init>
    110:110:java.nio.channels.SocketChannel run() -> run
    107:107:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$6 -> io.netty.util.internal.SocketUtils$6:
    java.nio.channels.DatagramChannel val$networkChannel -> val$networkChannel
    java.net.SocketAddress val$address -> val$address
    120:120:void <init>(java.nio.channels.DatagramChannel,java.net.SocketAddress) -> <init>
    123:124:java.lang.Void run() -> run
    120:120:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$7 -> io.netty.util.internal.SocketUtils$7:
    java.net.ServerSocket val$socket -> val$socket
    133:133:void <init>(java.net.ServerSocket) -> <init>
    136:136:java.net.SocketAddress run() -> run
    133:133:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$8 -> io.netty.util.internal.SocketUtils$8:
    java.lang.String val$hostname -> val$hostname
    143:143:void <init>(java.lang.String) -> <init>
    146:146:java.net.InetAddress run() -> run
    143:143:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$9 -> io.netty.util.internal.SocketUtils$9:
    java.lang.String val$hostname -> val$hostname
    156:156:void <init>(java.lang.String) -> <init>
    159:159:java.net.InetAddress[] run() -> run
    156:156:java.lang.Object run() -> run
io.netty.util.internal.StringUtil -> io.netty.util.internal.StringUtil:
    java.lang.String NEWLINE -> NEWLINE
    java.lang.String[] BYTE2HEX_PAD -> BYTE2HEX_PAD
    java.lang.String[] BYTE2HEX_NOPAD -> BYTE2HEX_NOPAD
    boolean $assertionsDisabled -> $assertionsDisabled
    68:70:void <init>() -> <init>
    78:82:java.lang.String substringAfter(java.lang.String,char) -> substringAfter
    101:101:java.lang.String byteToHexStringPadded(int) -> byteToHexStringPadded
    225:234:int decodeHexNibble(char) -> decodeHexNibble
    241:247:byte decodeHexByte(java.lang.CharSequence,int) -> decodeHexByte
    282:285:java.lang.String simpleClassName(java.lang.Object) -> simpleClassName
    294:299:java.lang.String simpleClassName(java.lang.Class) -> simpleClassName
    325:399:java.lang.CharSequence escapeCsv(java.lang.CharSequence,boolean) -> escapeCsv
    448:508:java.util.List unescapeCsvFields(java.lang.CharSequence) -> unescapeCsvFields
    532:532:java.lang.IllegalArgumentException newInvalidEscapedCsvFieldException(java.lang.CharSequence,int) -> newInvalidEscapedCsvFieldException
    546:546:boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    557:562:int indexOfNonWhiteSpace(java.lang.CharSequence,int) -> indexOfNonWhiteSpace
    574:574:boolean isSurrogate(char) -> isSurrogate
    578:578:boolean isDoubleQuote(char) -> isDoubleQuote
    589:590:boolean endsWith(java.lang.CharSequence,char) -> endsWith
    601:607:java.lang.CharSequence trimOws(java.lang.CharSequence) -> trimOws
    614:618:int indexOfFirstNonOwsChar(java.lang.CharSequence,int) -> indexOfFirstNonOwsChar
    625:629:int indexOfLastNonOwsChar(java.lang.CharSequence,int,int) -> indexOfLastNonOwsChar
    633:633:boolean isOws(char) -> isOws
    27:66:void <clinit>() -> <clinit>
io.netty.util.internal.SystemPropertyUtil -> io.netty.util.internal.SystemPropertyUtil:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    36:36:boolean contains(java.lang.String) -> contains
    46:46:java.lang.String get(java.lang.String) -> get
    59:86:java.lang.String get(java.lang.String,java.lang.String) -> get
    99:122:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    135:152:int getInt(java.lang.String,int) -> getInt
    165:182:long getLong(java.lang.String,long) -> getLong
    185:187:void <init>() -> <init>
    29:29:void <clinit>() -> <clinit>
io.netty.util.internal.SystemPropertyUtil$1 -> io.netty.util.internal.SystemPropertyUtil$1:
    java.lang.String val$key -> val$key
    71:71:void <init>(java.lang.String) -> <init>
    74:74:java.lang.String run() -> run
    71:71:java.lang.Object run() -> run
io.netty.util.internal.ThreadLocalRandom -> io.netty.util.internal.ThreadLocalRandom:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.atomic.AtomicLong seedUniquifier -> seedUniquifier
    long initialSeedUniquifier -> initialSeedUniquifier
    java.lang.Thread seedGeneratorThread -> seedGeneratorThread
    java.util.concurrent.BlockingQueue seedQueue -> seedQueue
    long seedGeneratorStartTime -> seedGeneratorStartTime
    long seedGeneratorEndTime -> seedGeneratorEndTime
    long rnd -> rnd
    boolean initialized -> initialized
    128:193:long getInitialSeedUniquifier() -> getInitialSeedUniquifier
    198:217:long newSeed() -> newSeed
    223:225:long mix64(long) -> mix64
    255:257:void <init>() -> <init>
    265:265:io.netty.util.internal.ThreadLocalRandom current() -> current
    275:279:void setSeed(long) -> setSeed
    282:283:int next(int) -> next
    61:61:long access$002(long) -> access$002
    61:61:java.util.concurrent.BlockingQueue access$100() -> access$100
    61:61:io.netty.util.internal.logging.InternalLogger access$200() -> access$200
    63:120:void <clinit>() -> <clinit>
io.netty.util.internal.ThreadLocalRandom$1 -> io.netty.util.internal.ThreadLocalRandom$1:
    84:84:void <init>(java.lang.String) -> <init>
    87:99:void run() -> run
io.netty.util.internal.ThreadLocalRandom$2 -> io.netty.util.internal.ThreadLocalRandom$2:
    102:102:void <init>() -> <init>
    105:106:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
io.netty.util.internal.ThrowableUtil -> io.netty.util.internal.ThrowableUtil:
    java.lang.reflect.Method addSupressedMethod -> addSupressedMethod
    30:37:java.lang.reflect.Method getAddSuppressed() -> getAddSuppressed
    47:48:java.lang.Throwable unknownStackTrace(java.lang.Throwable,java.lang.Class,java.lang.String) -> unknownStackTrace
    58:69:java.lang.String stackTraceToString(java.lang.Throwable) -> stackTraceToString
    74:74:boolean haveSuppressed() -> haveSuppressed
    78:88:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    91:93:void addSuppressedAndClear(java.lang.Throwable,java.util.List) -> addSuppressedAndClear
    96:99:void addSuppressed(java.lang.Throwable,java.util.List) -> addSuppressed
    27:27:void <clinit>() -> <clinit>
io.netty.util.internal.TypeParameterMatcher -> io.netty.util.internal.TypeParameterMatcher:
    io.netty.util.internal.TypeParameterMatcher NOOP -> NOOP
    38:50:io.netty.util.internal.TypeParameterMatcher get(java.lang.Class) -> get
    57:72:io.netty.util.internal.TypeParameterMatcher find(java.lang.Object,java.lang.Class,java.lang.String) -> find
    78:140:java.lang.Class find0(java.lang.Object,java.lang.Class,java.lang.String) -> find0
    146:146:java.lang.Class fail(java.lang.Class,java.lang.String) -> fail
    boolean match(java.lang.Object) -> match
    165:165:void <init>() -> <init>
    29:29:void <clinit>() -> <clinit>
io.netty.util.internal.TypeParameterMatcher$1 -> io.netty.util.internal.TypeParameterMatcher$1:
    29:29:void <init>() -> <init>
    32:32:boolean match(java.lang.Object) -> match
io.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher -> io.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher:
    java.lang.Class type -> type
    155:157:void <init>(java.lang.Class) -> <init>
    161:161:boolean match(java.lang.Object) -> match
io.netty.util.internal.UnpaddedInternalThreadLocalMap -> io.netty.util.internal.UnpaddedInternalThreadLocalMap:
    java.lang.ThreadLocal slowThreadLocalMap -> slowThreadLocalMap
    java.util.concurrent.atomic.AtomicInteger nextIndex -> nextIndex
    java.lang.Object[] indexedVariables -> indexedVariables
    int futureListenerStackDepth -> futureListenerStackDepth
    int localChannelReaderStackDepth -> localChannelReaderStackDepth
    java.util.Map handlerSharableCache -> handlerSharableCache
    io.netty.util.internal.IntegerHolder counterHashCode -> counterHashCode
    io.netty.util.internal.ThreadLocalRandom random -> random
    java.util.Map typeParameterMatcherGetCache -> typeParameterMatcherGetCache
    java.util.Map typeParameterMatcherFindCache -> typeParameterMatcherFindCache
    java.lang.StringBuilder stringBuilder -> stringBuilder
    java.util.Map charsetEncoderCache -> charsetEncoderCache
    java.util.Map charsetDecoderCache -> charsetDecoderCache
    java.util.ArrayList arrayList -> arrayList
    58:60:void <init>(java.lang.Object[]) -> <init>
    35:36:void <clinit>() -> <clinit>
io.netty.util.internal.logging.AbstractInternalLogger -> io.netty.util.internal.logging.AbstractInternalLogger:
    java.lang.String name -> name
    39:44:void <init>(java.lang.String) -> <init>
    48:48:java.lang.String name() -> name
    53:65:boolean isEnabled(io.netty.util.internal.logging.InternalLogLevel) -> isEnabled
    96:115:void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Throwable) -> log
    142:161:void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String) -> log
    188:207:void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object,java.lang.Object) -> log
    211:230:void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[]) -> log
    238:238:java.lang.String toString() -> toString
io.netty.util.internal.logging.AbstractInternalLogger$1 -> io.netty.util.internal.logging.AbstractInternalLogger$1:
    int[] $SwitchMap$io$netty$util$internal$logging$InternalLogLevel -> $SwitchMap$io$netty$util$internal$logging$InternalLogLevel
    53:53:void <clinit>() -> <clinit>
io.netty.util.internal.logging.FormattingTuple -> io.netty.util.internal.logging.FormattingTuple:
    java.lang.String message -> message
    java.lang.Throwable throwable -> throwable
    50:53:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    56:56:java.lang.String getMessage() -> getMessage
    60:60:java.lang.Throwable getThrowable() -> getThrowable
io.netty.util.internal.logging.InternalLogLevel -> io.netty.util.internal.logging.InternalLogLevel:
    io.netty.util.internal.logging.InternalLogLevel TRACE -> TRACE
    io.netty.util.internal.logging.InternalLogLevel DEBUG -> DEBUG
    io.netty.util.internal.logging.InternalLogLevel INFO -> INFO
    io.netty.util.internal.logging.InternalLogLevel WARN -> WARN
    io.netty.util.internal.logging.InternalLogLevel ERROR -> ERROR
    io.netty.util.internal.logging.InternalLogLevel[] $VALUES -> $VALUES
    21:21:io.netty.util.internal.logging.InternalLogLevel[] values() -> values
    21:21:io.netty.util.internal.logging.InternalLogLevel valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:41:void <clinit>() -> <clinit>
io.netty.util.internal.logging.InternalLogger -> io.netty.util.internal.logging.InternalLogger:
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    boolean isEnabled(io.netty.util.internal.logging.InternalLogLevel) -> isEnabled
    void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String) -> log
    void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[]) -> log
    void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Throwable) -> log
io.netty.util.internal.logging.InternalLoggerFactory -> io.netty.util.internal.logging.InternalLoggerFactory:
    io.netty.util.internal.logging.InternalLoggerFactory defaultFactory -> defaultFactory
    34:34:void <init>() -> <init>
    42:53:io.netty.util.internal.logging.InternalLoggerFactory newDefaultFactory(java.lang.String) -> newDefaultFactory
    61:64:io.netty.util.internal.logging.InternalLoggerFactory getDefaultFactory() -> getDefaultFactory
    81:81:io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class) -> getInstance
    88:88:io.netty.util.internal.logging.InternalLogger getInstance(java.lang.String) -> getInstance
    io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
io.netty.util.internal.logging.JdkLogger -> io.netty.util.internal.logging.JdkLogger:
    java.util.logging.Logger logger -> logger
    java.lang.String SELF -> SELF
    java.lang.String SUPER -> SUPER
    57:59:void <init>(java.util.logging.Logger) -> <init>
    68:68:boolean isTraceEnabled() -> isTraceEnabled
    79:82:void trace(java.lang.String) -> trace
    100:104:void trace(java.lang.String,java.lang.Object) -> trace
    124:128:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    146:150:void trace(java.lang.String,java.lang.Object[]) -> trace
    162:165:void trace(java.lang.String,java.lang.Throwable) -> trace
    174:174:boolean isDebugEnabled() -> isDebugEnabled
    185:188:void debug(java.lang.String) -> debug
    205:209:void debug(java.lang.String,java.lang.Object) -> debug
    229:233:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    251:255:void debug(java.lang.String,java.lang.Object[]) -> debug
    267:270:void debug(java.lang.String,java.lang.Throwable) -> debug
    279:279:boolean isInfoEnabled() -> isInfoEnabled
    290:293:void info(java.lang.String) -> info
    310:314:void info(java.lang.String,java.lang.Object) -> info
    334:338:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    356:360:void info(java.lang.String,java.lang.Object[]) -> info
    373:376:void info(java.lang.String,java.lang.Throwable) -> info
    386:386:boolean isWarnEnabled() -> isWarnEnabled
    397:400:void warn(java.lang.String) -> warn
    418:422:void warn(java.lang.String,java.lang.Object) -> warn
    442:446:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    464:468:void warn(java.lang.String,java.lang.Object[]) -> warn
    481:484:void warn(java.lang.String,java.lang.Throwable) -> warn
    493:493:boolean isErrorEnabled() -> isErrorEnabled
    504:507:void error(java.lang.String) -> error
    525:529:void error(java.lang.String,java.lang.Object) -> error
    549:553:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    571:575:void error(java.lang.String,java.lang.Object[]) -> error
    588:591:void error(java.lang.String,java.lang.Throwable) -> error
    602:607:void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable) -> log
    619:646:void fillCallerData(java.lang.String,java.util.logging.LogRecord) -> fillCallerData
    609:610:void <clinit>() -> <clinit>
io.netty.util.internal.logging.JdkLoggerFactory -> io.netty.util.internal.logging.JdkLoggerFactory:
    io.netty.util.internal.logging.InternalLoggerFactory INSTANCE -> INSTANCE
    34:35:void <init>() -> <init>
    39:39:io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
    28:28:void <clinit>() -> <clinit>
io.netty.util.internal.logging.Log4JLogger -> io.netty.util.internal.logging.Log4JLogger:
    org.apache.log4j.Logger logger -> logger
    java.lang.String FQCN -> FQCN
    boolean traceCapable -> traceCapable
    66:69:void <init>(org.apache.log4j.Logger) -> <init>
    73:76:boolean isTraceCapable() -> isTraceCapable
    87:90:boolean isTraceEnabled() -> isTraceEnabled
    102:103:void trace(java.lang.String) -> trace
    121:126:void trace(java.lang.String,java.lang.Object) -> trace
    146:151:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    169:174:void trace(java.lang.String,java.lang.Object[]) -> trace
    186:187:void trace(java.lang.String,java.lang.Throwable) -> trace
    196:196:boolean isDebugEnabled() -> isDebugEnabled
    207:208:void debug(java.lang.String) -> debug
    226:230:void debug(java.lang.String,java.lang.Object) -> debug
    250:254:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    271:275:void debug(java.lang.String,java.lang.Object[]) -> debug
    287:288:void debug(java.lang.String,java.lang.Throwable) -> debug
    297:297:boolean isInfoEnabled() -> isInfoEnabled
    308:309:void info(java.lang.String) -> info
    326:330:void info(java.lang.String,java.lang.Object) -> info
    350:354:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    372:376:void info(java.lang.String,java.lang.Object[]) -> info
    389:390:void info(java.lang.String,java.lang.Throwable) -> info
    399:399:boolean isWarnEnabled() -> isWarnEnabled
    410:411:void warn(java.lang.String) -> warn
    429:433:void warn(java.lang.String,java.lang.Object) -> warn
    453:457:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    475:479:void warn(java.lang.String,java.lang.Object[]) -> warn
    492:493:void warn(java.lang.String,java.lang.Throwable) -> warn
    502:502:boolean isErrorEnabled() -> isErrorEnabled
    513:514:void error(java.lang.String) -> error
    532:536:void error(java.lang.String,java.lang.Object) -> error
    556:560:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    578:582:void error(java.lang.String,java.lang.Object[]) -> error
    595:596:void error(java.lang.String,java.lang.Throwable) -> error
    59:59:void <clinit>() -> <clinit>
io.netty.util.internal.logging.Log4JLoggerFactory -> io.netty.util.internal.logging.Log4JLoggerFactory:
    io.netty.util.internal.logging.InternalLoggerFactory INSTANCE -> INSTANCE
    33:34:void <init>() -> <init>
    38:38:io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
    27:27:void <clinit>() -> <clinit>
io.netty.util.internal.logging.MessageFormatter -> io.netty.util.internal.logging.MessageFormatter:
    133:133:io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object) -> format
    157:157:io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object) -> format
    172:219:io.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[]) -> arrayFormat
    225:272:void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Set) -> deeplyAppendParameter
    276:285:void safeObjectAppend(java.lang.StringBuilder,java.lang.Object) -> safeObjectAppend
    288:305:void objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Set) -> objectArrayAppend
    308:316:void booleanArrayAppend(java.lang.StringBuilder,boolean[]) -> booleanArrayAppend
    319:327:void byteArrayAppend(java.lang.StringBuilder,byte[]) -> byteArrayAppend
    330:338:void charArrayAppend(java.lang.StringBuilder,char[]) -> charArrayAppend
    341:349:void shortArrayAppend(java.lang.StringBuilder,short[]) -> shortArrayAppend
    352:360:void intArrayAppend(java.lang.StringBuilder,int[]) -> intArrayAppend
    363:371:void longArrayAppend(java.lang.StringBuilder,long[]) -> longArrayAppend
    374:382:void floatArrayAppend(java.lang.StringBuilder,float[]) -> floatArrayAppend
    385:393:void doubleArrayAppend(java.lang.StringBuilder,double[]) -> doubleArrayAppend
io.netty.util.internal.logging.Slf4JLogger -> io.netty.util.internal.logging.Slf4JLogger:
    org.slf4j.Logger logger -> logger
    30:32:void <init>(org.slf4j.Logger) -> <init>
    36:36:boolean isTraceEnabled() -> isTraceEnabled
    41:42:void trace(java.lang.String) -> trace
    46:47:void trace(java.lang.String,java.lang.Object) -> trace
    51:52:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    56:57:void trace(java.lang.String,java.lang.Object[]) -> trace
    61:62:void trace(java.lang.String,java.lang.Throwable) -> trace
    66:66:boolean isDebugEnabled() -> isDebugEnabled
    71:72:void debug(java.lang.String) -> debug
    76:77:void debug(java.lang.String,java.lang.Object) -> debug
    81:82:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    86:87:void debug(java.lang.String,java.lang.Object[]) -> debug
    91:92:void debug(java.lang.String,java.lang.Throwable) -> debug
    96:96:boolean isInfoEnabled() -> isInfoEnabled
    101:102:void info(java.lang.String) -> info
    106:107:void info(java.lang.String,java.lang.Object) -> info
    111:112:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    116:117:void info(java.lang.String,java.lang.Object[]) -> info
    121:122:void info(java.lang.String,java.lang.Throwable) -> info
    126:126:boolean isWarnEnabled() -> isWarnEnabled
    131:132:void warn(java.lang.String) -> warn
    136:137:void warn(java.lang.String,java.lang.Object) -> warn
    141:142:void warn(java.lang.String,java.lang.Object[]) -> warn
    146:147:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    151:152:void warn(java.lang.String,java.lang.Throwable) -> warn
    156:156:boolean isErrorEnabled() -> isErrorEnabled
    161:162:void error(java.lang.String) -> error
    166:167:void error(java.lang.String,java.lang.Object) -> error
    171:172:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    176:177:void error(java.lang.String,java.lang.Object[]) -> error
    181:182:void error(java.lang.String,java.lang.Throwable) -> error
io.netty.util.internal.logging.Slf4JLoggerFactory -> io.netty.util.internal.logging.Slf4JLoggerFactory:
    io.netty.util.internal.logging.InternalLoggerFactory INSTANCE -> INSTANCE
    boolean $assertionsDisabled -> $assertionsDisabled
    35:36:void <init>() -> <init>
    38:43:void <init>(boolean) -> <init>
    47:47:io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
    26:29:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue -> io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:
    java.lang.Object JUMP -> JUMP
    183:196:void <init>(int) -> <init>
    201:201:java.util.Iterator iterator() -> iterator
    215:236:int size() -> size
    247:247:boolean isEmpty() -> isEmpty
    253:253:java.lang.String toString() -> toString
    259:310:boolean offer(java.lang.Object) -> offer
    322:355:java.lang.Object poll() -> poll
    367:387:java.lang.Object peek() -> peek
    395:426:int offerSlowPath(long,long,long) -> offerSlowPath
    long availableInQueue(long,long) -> availableInQueue
    438:441:java.lang.Object[] getNextBuffer(java.lang.Object[],long) -> getNextBuffer
    446:446:long nextArrayOffset(long) -> nextArrayOffset
    451:459:java.lang.Object newBufferPoll(java.lang.Object[],long) -> newBufferPoll
    464:470:java.lang.Object newBufferPeek(java.lang.Object[],long) -> newBufferPeek
    475:477:long newBufferAndOffset(java.lang.Object[],long) -> newBufferAndOffset
    680:709:void resize(long,java.lang.Object[],long,java.lang.Object) -> resize
    int getNextBufferSize(java.lang.Object[]) -> getNextBufferSize
    long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
    171:171:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields -> io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields:
    long P_LIMIT_OFFSET -> P_LIMIT_OFFSET
    long producerLimit -> producerLimit
    long producerMask -> producerMask
    java.lang.Object[] producerBuffer -> producerBuffer
    122:122:void <init>() -> <init>
    145:145:long lvProducerLimit() -> lvProducerLimit
    150:150:boolean casProducerLimit(long,long) -> casProducerLimit
    155:156:void soProducerLimit(long) -> soProducerLimit
    130:137:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields -> io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields:
    long C_INDEX_OFFSET -> C_INDEX_OFFSET
    long consumerMask -> consumerMask
    java.lang.Object[] consumerBuffer -> consumerBuffer
    long consumerIndex -> consumerIndex
    82:82:void <init>() -> <init>
    106:106:long lvConsumerIndex() -> lvConsumerIndex
    111:112:void soConsumerIndex(long) -> soConsumerIndex
    90:97:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad1 -> io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad1:
    32:32:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad2 -> io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad2:
    75:75:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad3 -> io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad3:
    115:115:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields -> io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields:
    long P_INDEX_OFFSET -> P_INDEX_OFFSET
    long producerIndex -> producerIndex
    39:39:void <init>() -> <init>
    61:61:long lvProducerIndex() -> lvProducerIndex
    66:67:void soProducerIndex(long) -> soProducerIndex
    71:71:boolean casProducerIndex(long,long) -> casProducerIndex
    47:54:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.CircularArrayOffsetCalculator -> io.netty.util.internal.shaded.org.jctools.queues.CircularArrayOffsetCalculator:
    14:14:java.lang.Object[] allocate(int) -> allocate
    24:24:long calcElementOffset(long,long) -> calcElementOffset
io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue -> io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:
    long mask -> mask
    java.lang.Object[] buffer -> buffer
    42:46:void <init>(int) -> <init>
    55:55:long calcElementOffset(long,long) -> calcElementOffset
    64:64:long calcElementOffset(long) -> calcElementOffset
    70:70:java.util.Iterator iterator() -> iterator
    76:76:int size() -> size
    82:82:boolean isEmpty() -> isEmpty
    88:88:java.lang.String toString() -> toString
    94:98:void clear() -> clear
io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueueL0Pad -> io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueueL0Pad:
    22:22:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil -> io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil:
    29:50:int size(io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue) -> size
    60:60:boolean isEmpty(io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue) -> isEmpty
io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue -> io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue:
    long lvConsumerIndex() -> lvConsumerIndex
    long lvProducerIndex() -> lvProducerIndex
io.netty.util.internal.shaded.org.jctools.queues.LinkedArrayQueueUtil -> io.netty.util.internal.shaded.org.jctools.queues.LinkedArrayQueueUtil:
    14:14:int length(java.lang.Object[]) -> length
    24:24:long modifiedCalcElementOffset(long,long) -> modifiedCalcElementOffset
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue -> io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue:
    199:200:void <init>(int) -> <init>
    269:307:boolean offer(java.lang.Object) -> offer
    365:395:java.lang.Object poll() -> poll
    411:436:java.lang.Object peek() -> peek
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField -> io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField:
    long C_INDEX_OFFSET -> C_INDEX_OFFSET
    long consumerIndex -> consumerIndex
    151:152:void <init>(int) -> <init>
    156:156:long lpConsumerIndex() -> lpConsumerIndex
    162:162:long lvConsumerIndex() -> lvConsumerIndex
    167:168:void soConsumerIndex(long) -> soConsumerIndex
    138:145:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL1Pad -> io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL1Pad:
    28:29:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL2Pad -> io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL2Pad:
    125:126:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL3Pad -> io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL3Pad:
    178:179:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueMidPad -> io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueMidPad:
    76:77:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField -> io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField:
    long P_INDEX_OFFSET -> P_INDEX_OFFSET
    long producerIndex -> producerIndex
    54:55:void <init>(int) -> <init>
    60:60:long lvProducerIndex() -> lvProducerIndex
    65:65:boolean casProducerIndex(long,long) -> casProducerIndex
    41:48:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField -> io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField:
    long P_LIMIT_OFFSET -> P_LIMIT_OFFSET
    long producerLimit -> producerLimit
    103:105:void <init>(int) -> <init>
    109:109:long lvProducerLimit() -> lvProducerLimit
    114:115:void soProducerLimit(long) -> soProducerLimit
    89:96:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue -> io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue:
    64:65:void <init>(int,int) -> <init>
    70:70:long availableInQueue(long,long) -> availableInQueue
    82:82:int getNextBufferSize(java.lang.Object[]) -> getNextBufferSize
    88:88:long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueColdProducerFields -> io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueColdProducerFields:
    long maxQueueCapacity -> maxQueueCapacity
    30:35:void <init>(int,int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue -> io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue:
    34:35:void <init>(int) -> <init>
    41:41:long availableInQueue(long,long) -> availableInQueue
    77:77:int getNextBufferSize(java.lang.Object[]) -> getNextBufferSize
    83:83:long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue -> io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue:
    java.util.concurrent.atomic.AtomicReferenceArray buffer -> buffer
    int mask -> mask
    33:37:void <init>(int) -> <init>
    42:42:java.util.Iterator iterator() -> iterator
    48:48:java.lang.String toString() -> toString
    54:58:void clear() -> clear
    62:62:int calcElementOffset(long,int) -> calcElementOffset
    67:67:int calcElementOffset(long) -> calcElementOffset
    72:72:java.lang.Object lvElement(java.util.concurrent.atomic.AtomicReferenceArray,int) -> lvElement
    87:88:void spElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object) -> spElement
    97:98:void soElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object) -> soElement
    128:128:int size() -> size
    134:134:boolean isEmpty() -> isEmpty
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue -> io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:
    java.lang.Object JUMP -> JUMP
    163:176:void <init>(int) -> <init>
    180:180:java.util.Iterator iterator() -> iterator
    192:207:int size() -> size
    214:214:boolean isEmpty() -> isEmpty
    219:219:java.lang.String toString() -> toString
    224:263:boolean offer(java.lang.Object) -> offer
    274:296:java.lang.Object poll() -> poll
    307:321:java.lang.Object peek() -> peek
    329:350:int offerSlowPath(long,long,long) -> offerSlowPath
    long availableInQueue(long,long) -> availableInQueue
    360:363:java.util.concurrent.atomic.AtomicReferenceArray getNextBuffer(java.util.concurrent.atomic.AtomicReferenceArray,long) -> getNextBuffer
    367:367:int nextArrayOffset(long) -> nextArrayOffset
    371:380:java.lang.Object newBufferPoll(java.util.concurrent.atomic.AtomicReferenceArray,long) -> newBufferPoll
    384:390:java.lang.Object newBufferPeek(java.util.concurrent.atomic.AtomicReferenceArray,long) -> newBufferPeek
    394:397:int newBufferAndOffset(java.util.concurrent.atomic.AtomicReferenceArray,long) -> newBufferAndOffset
    562:585:void resize(long,java.util.concurrent.atomic.AtomicReferenceArray,long,java.lang.Object) -> resize
    int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray) -> getNextBufferSize
    long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
    157:157:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueColdProducerFields -> io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueColdProducerFields:
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_LIMIT_UPDATER -> P_LIMIT_UPDATER
    long producerLimit -> producerLimit
    long producerMask -> producerMask
    java.util.concurrent.atomic.AtomicReferenceArray producerBuffer -> producerBuffer
    121:121:void <init>() -> <init>
    132:132:long lvProducerLimit() -> lvProducerLimit
    136:136:boolean casProducerLimit(long,long) -> casProducerLimit
    140:141:void soProducerLimit(long) -> soProducerLimit
    123:123:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueConsumerFields -> io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueConsumerFields:
    java.util.concurrent.atomic.AtomicLongFieldUpdater C_INDEX_UPDATER -> C_INDEX_UPDATER
    long consumerMask -> consumerMask
    java.util.concurrent.atomic.AtomicReferenceArray consumerBuffer -> consumerBuffer
    long consumerIndex -> consumerIndex
    86:86:void <init>() -> <init>
    98:98:long lvConsumerIndex() -> lvConsumerIndex
    102:103:void soConsumerIndex(long) -> soConsumerIndex
    88:88:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad1 -> io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad1:
    40:40:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad2 -> io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad2:
    75:75:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad3 -> io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad3:
    110:110:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields -> io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields:
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_INDEX_UPDATER -> P_INDEX_UPDATER
    long producerIndex -> producerIndex
    51:51:void <init>() -> <init>
    59:59:long lvProducerIndex() -> lvProducerIndex
    63:64:void soProducerIndex(long) -> soProducerIndex
    67:67:boolean casProducerIndex(long,long) -> casProducerIndex
    53:53:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedAtomicArrayQueueUtil -> io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedAtomicArrayQueueUtil:
    13:13:java.lang.Object lvElement(java.util.concurrent.atomic.AtomicReferenceArray,int) -> lvElement
    33:34:void soElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object) -> soElement
    43:43:java.util.concurrent.atomic.AtomicReferenceArray allocate(int) -> allocate
    48:48:int length(java.util.concurrent.atomic.AtomicReferenceArray) -> length
    56:56:int modifiedCalcElementOffset(long,long) -> modifiedCalcElementOffset
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:
    176:177:void <init>(int) -> <init>
    240:274:boolean offer(java.lang.Object) -> offer
    329:353:java.lang.Object poll() -> poll
    368:387:java.lang.Object peek() -> peek
    173:173:void clear() -> clear
    173:173:java.lang.String toString() -> toString
    173:173:java.util.Iterator iterator() -> iterator
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueConsumerIndexField -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueConsumerIndexField:
    java.util.concurrent.atomic.AtomicLongFieldUpdater C_INDEX_UPDATER -> C_INDEX_UPDATER
    long consumerIndex -> consumerIndex
    126:127:void <init>(int) -> <init>
    130:130:long lpConsumerIndex() -> lpConsumerIndex
    135:135:long lvConsumerIndex() -> lvConsumerIndex
    139:140:void soConsumerIndex(long) -> soConsumerIndex
    121:121:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL1Pad -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL1Pad:
    32:33:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL2Pad -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL2Pad:
    111:112:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL3Pad -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL3Pad:
    154:155:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueMidPad -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueMidPad:
    71:72:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueProducerIndexField -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueProducerIndexField:
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_INDEX_UPDATER -> P_INDEX_UPDATER
    long producerIndex -> producerIndex
    47:48:void <init>(int) -> <init>
    52:52:long lvProducerIndex() -> lvProducerIndex
    56:56:boolean casProducerIndex(long,long) -> casProducerIndex
    42:42:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueProducerLimitField -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueProducerLimitField:
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_LIMIT_UPDATER -> P_LIMIT_UPDATER
    long producerLimit -> producerLimit
    87:89:void <init>(int) -> <init>
    92:92:long lvProducerLimit() -> lvProducerLimit
    96:97:void soProducerLimit(long) -> soProducerLimit
    81:81:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscChunkedAtomicArrayQueue -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscChunkedAtomicArrayQueue:
    77:78:void <init>(int,int) -> <init>
    82:82:long availableInQueue(long,long) -> availableInQueue
    92:92:int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray) -> getNextBufferSize
    97:97:long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscChunkedAtomicArrayQueueColdProducerFields -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscChunkedAtomicArrayQueueColdProducerFields:
    long maxQueueCapacity -> maxQueueCapacity
    42:46:void <init>(int,int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscGrowableAtomicArrayQueue -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscGrowableAtomicArrayQueue:
    54:55:void <init>(int,int) -> <init>
    59:62:int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray) -> getNextBufferSize
    67:67:long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscUnboundedAtomicArrayQueue -> io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscUnboundedAtomicArrayQueue:
    46:47:void <init>(int) -> <init>
    51:51:long availableInQueue(long,long) -> availableInQueue
    81:81:int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray) -> getNextBufferSize
    86:86:long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
io.netty.util.internal.shaded.org.jctools.util.Pow2 -> io.netty.util.internal.shaded.org.jctools.util.Pow2:
    29:36:int roundToPowerOfTwo(int) -> roundToPowerOfTwo
io.netty.util.internal.shaded.org.jctools.util.RangeUtil -> io.netty.util.internal.shaded.org.jctools.util.RangeUtil:
    21:26:long checkPositive(long,java.lang.String) -> checkPositive
    41:46:int checkLessThan(int,int,java.lang.String) -> checkLessThan
    51:56:int checkLessThanOrEqual(int,long,java.lang.String) -> checkLessThanOrEqual
    61:66:int checkGreaterThanOrEqual(int,int,java.lang.String) -> checkGreaterThanOrEqual
io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess -> io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess:
    boolean SUPPORTS_GET_AND_SET -> SUPPORTS_GET_AND_SET
    sun.misc.Unsafe UNSAFE -> UNSAFE
    46:81:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess -> io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess:
    long REF_ARRAY_BASE -> REF_ARRAY_BASE
    int REF_ELEMENT_SHIFT -> REF_ELEMENT_SHIFT
    65:66:void spElement(java.lang.Object[],long,java.lang.Object) -> spElement
    77:78:void soElement(java.lang.Object[],long,java.lang.Object) -> soElement
    103:103:java.lang.Object lvElement(java.lang.Object[],long) -> lvElement
    40:54:void <clinit>() -> <clinit>
io.reactivex.Flowable -> io.reactivex.Flowable:
    int BUFFER_SIZE -> BUFFER_SIZE
    59:59:void <init>() -> <init>
    138:138:int bufferSize() -> bufferSize
    1783:1783:io.reactivex.Flowable empty() -> empty
    8461:8461:io.reactivex.Flowable flatMap(io.reactivex.functions.Function) -> flatMap
    8613:8624:io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int,int) -> flatMap
    13091:13091:io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer) -> subscribe
    13163:13172:io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer) -> subscribe
    13179:13185:void subscribe(org.reactivestreams.Subscriber) -> subscribe
    13228:13247:void subscribe(io.reactivex.FlowableSubscriber) -> subscribe
    void subscribeActual(org.reactivestreams.Subscriber) -> subscribeActual
    63:64:void <clinit>() -> <clinit>
io.reactivex.FlowableSubscriber -> io.reactivex.FlowableSubscriber:
io.reactivex.Single -> io.reactivex.Single:
    60:60:void <init>() -> <init>
    2484:2486:java.lang.Object blockingGet() -> blockingGet
    3089:3105:void subscribe(io.reactivex.SingleObserver) -> subscribe
    void subscribeActual(io.reactivex.SingleObserver) -> subscribeActual
    3403:3406:io.reactivex.Flowable toFlowable() -> toFlowable
io.reactivex.SingleObserver -> io.reactivex.SingleObserver:
    void onSubscribe(io.reactivex.disposables.Disposable) -> onSubscribe
    void onSuccess(java.lang.Object) -> onSuccess
    void onError(java.lang.Throwable) -> onError
io.reactivex.SingleSource -> io.reactivex.SingleSource:
    void subscribe(io.reactivex.SingleObserver) -> subscribe
io.reactivex.disposables.Disposable -> io.reactivex.disposables.Disposable:
    void dispose() -> dispose
io.reactivex.exceptions.CompositeException -> io.reactivex.exceptions.CompositeException:
    java.util.List exceptions -> exceptions
    java.lang.String message -> message
    java.lang.Throwable cause -> cause
    53:55:void <init>(java.lang.Throwable[]) -> <init>
    64:87:void <init>(java.lang.Iterable) -> <init>
    96:96:java.util.List getExceptions() -> getExceptions
    102:102:java.lang.String getMessage() -> getMessage
    108:144:java.lang.Throwable getCause() -> getCause
    159:160:void printStackTrace() -> printStackTrace
    164:165:void printStackTrace(java.io.PrintStream) -> printStackTrace
    169:170:void printStackTrace(java.io.PrintWriter) -> printStackTrace
    180:192:void printStackTrace(io.reactivex.exceptions.CompositeException$PrintStreamOrWriter) -> printStackTrace
    195:203:void appendStackTrace(java.lang.StringBuilder,java.lang.Throwable,java.lang.String) -> appendStackTrace
    250:263:java.util.List getListOfCauses(java.lang.Throwable) -> getListOfCauses
    282:292:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain -> io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain:
    239:239:void <init>() -> <init>
    245:245:java.lang.String getMessage() -> getMessage
io.reactivex.exceptions.CompositeException$PrintStreamOrWriter -> io.reactivex.exceptions.CompositeException$PrintStreamOrWriter:
    205:205:void <init>() -> <init>
    void println(java.lang.Object) -> println
io.reactivex.exceptions.CompositeException$WrappedPrintStream -> io.reactivex.exceptions.CompositeException$WrappedPrintStream:
    java.io.PrintStream printStream -> printStream
    216:218:void <init>(java.io.PrintStream) -> <init>
    222:223:void println(java.lang.Object) -> println
io.reactivex.exceptions.CompositeException$WrappedPrintWriter -> io.reactivex.exceptions.CompositeException$WrappedPrintWriter:
    java.io.PrintWriter printWriter -> printWriter
    229:231:void <init>(java.io.PrintWriter) -> <init>
    235:236:void println(java.lang.Object) -> println
io.reactivex.exceptions.Exceptions -> io.reactivex.exceptions.Exceptions:
    68:75:void throwIfFatal(java.lang.Throwable) -> throwIfFatal
io.reactivex.exceptions.MissingBackpressureException -> io.reactivex.exceptions.MissingBackpressureException:
    26:28:void <init>() -> <init>
    35:36:void <init>(java.lang.String) -> <init>
io.reactivex.exceptions.OnErrorNotImplementedException -> io.reactivex.exceptions.OnErrorNotImplementedException:
    52:53:void <init>(java.lang.Throwable) -> <init>
io.reactivex.exceptions.ProtocolViolationException -> io.reactivex.exceptions.ProtocolViolationException:
    34:35:void <init>(java.lang.String) -> <init>
io.reactivex.exceptions.UndeliverableException -> io.reactivex.exceptions.UndeliverableException:
    34:35:void <init>(java.lang.Throwable) -> <init>
io.reactivex.functions.Action -> io.reactivex.functions.Action:
    void run() -> run
io.reactivex.functions.BiFunction -> io.reactivex.functions.BiFunction:
    java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
io.reactivex.functions.BiPredicate -> io.reactivex.functions.BiPredicate:
io.reactivex.functions.BooleanSupplier -> io.reactivex.functions.BooleanSupplier:
    boolean getAsBoolean() -> getAsBoolean
io.reactivex.functions.Consumer -> io.reactivex.functions.Consumer:
    void accept(java.lang.Object) -> accept
io.reactivex.functions.Function -> io.reactivex.functions.Function:
    java.lang.Object apply(java.lang.Object) -> apply
io.reactivex.functions.LongConsumer -> io.reactivex.functions.LongConsumer:
io.reactivex.functions.Predicate -> io.reactivex.functions.Predicate:
io.reactivex.internal.disposables.DisposableHelper -> io.reactivex.internal.disposables.DisposableHelper:
    io.reactivex.internal.disposables.DisposableHelper DISPOSED -> DISPOSED
    io.reactivex.internal.disposables.DisposableHelper[] $VALUES -> $VALUES
    27:27:io.reactivex.internal.disposables.DisposableHelper[] values() -> values
    27:27:io.reactivex.internal.disposables.DisposableHelper valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    141:150:boolean validate(io.reactivex.disposables.Disposable,io.reactivex.disposables.Disposable) -> validate
    157:158:void reportDisposableSet() -> reportDisposableSet
    180:180:void dispose() -> dispose
    27:31:void <clinit>() -> <clinit>
io.reactivex.internal.functions.Functions -> io.reactivex.internal.functions.Functions:
    io.reactivex.functions.Function IDENTITY -> IDENTITY
    java.lang.Runnable EMPTY_RUNNABLE -> EMPTY_RUNNABLE
    io.reactivex.functions.Action EMPTY_ACTION -> EMPTY_ACTION
    io.reactivex.functions.Consumer EMPTY_CONSUMER -> EMPTY_CONSUMER
    io.reactivex.functions.Consumer ERROR_CONSUMER -> ERROR_CONSUMER
    io.reactivex.functions.Consumer ON_ERROR_MISSING -> ON_ERROR_MISSING
    io.reactivex.functions.LongConsumer EMPTY_LONG_CONSUMER -> EMPTY_LONG_CONSUMER
    io.reactivex.functions.Predicate ALWAYS_TRUE -> ALWAYS_TRUE
    io.reactivex.functions.Predicate ALWAYS_FALSE -> ALWAYS_FALSE
    java.util.concurrent.Callable NULL_SUPPLIER -> NULL_SUPPLIER
    java.util.Comparator NATURAL_COMPARATOR -> NATURAL_COMPARATOR
    io.reactivex.functions.Consumer REQUEST_MAX -> REQUEST_MAX
    81:514:void <clinit>() -> <clinit>
io.reactivex.internal.functions.Functions$EmptyAction -> io.reactivex.internal.functions.Functions$EmptyAction:
    674:674:void <init>() -> <init>
    676:676:void run() -> run
    680:680:java.lang.String toString() -> toString
io.reactivex.internal.functions.Functions$EmptyConsumer -> io.reactivex.internal.functions.Functions$EmptyConsumer:
    684:684:void <init>() -> <init>
    686:686:void accept(java.lang.Object) -> accept
    690:690:java.lang.String toString() -> toString
io.reactivex.internal.functions.Functions$EmptyLongConsumer -> io.reactivex.internal.functions.Functions$EmptyLongConsumer:
    708:708:void <init>() -> <init>
io.reactivex.internal.functions.Functions$EmptyRunnable -> io.reactivex.internal.functions.Functions$EmptyRunnable:
    664:664:void <init>() -> <init>
    666:666:void run() -> run
    670:670:java.lang.String toString() -> toString
io.reactivex.internal.functions.Functions$ErrorConsumer -> io.reactivex.internal.functions.Functions$ErrorConsumer:
    694:694:void <init>() -> <init>
    697:698:void accept(java.lang.Throwable) -> accept
    694:694:void accept(java.lang.Object) -> accept
io.reactivex.internal.functions.Functions$FalsePredicate -> io.reactivex.internal.functions.Functions$FalsePredicate:
    720:720:void <init>() -> <init>
io.reactivex.internal.functions.Functions$Identity -> io.reactivex.internal.functions.Functions$Identity:
    652:652:void <init>() -> <init>
    655:655:java.lang.Object apply(java.lang.Object) -> apply
    660:660:java.lang.String toString() -> toString
io.reactivex.internal.functions.Functions$MaxRequestSubscription -> io.reactivex.internal.functions.Functions$MaxRequestSubscription:
    742:742:void <init>() -> <init>
    745:746:void accept(org.reactivestreams.Subscription) -> accept
    742:742:void accept(java.lang.Object) -> accept
io.reactivex.internal.functions.Functions$NaturalObjectComparator -> io.reactivex.internal.functions.Functions$NaturalObjectComparator:
    734:734:void <init>() -> <init>
    738:738:int compare(java.lang.Object,java.lang.Object) -> compare
io.reactivex.internal.functions.Functions$NullCallable -> io.reactivex.internal.functions.Functions$NullCallable:
    727:727:void <init>() -> <init>
    730:730:java.lang.Object call() -> call
io.reactivex.internal.functions.Functions$OnErrorMissingConsumer -> io.reactivex.internal.functions.Functions$OnErrorMissingConsumer:
    701:701:void <init>() -> <init>
    704:705:void accept(java.lang.Throwable) -> accept
    701:701:void accept(java.lang.Object) -> accept
io.reactivex.internal.functions.Functions$TruePredicate -> io.reactivex.internal.functions.Functions$TruePredicate:
    713:713:void <init>() -> <init>
io.reactivex.internal.functions.ObjectHelper -> io.reactivex.internal.functions.ObjectHelper:
    io.reactivex.functions.BiPredicate EQUALS -> EQUALS
    38:41:java.lang.Object requireNonNull(java.lang.Object,java.lang.String) -> requireNonNull
    104:107:int verifyPositive(int,java.lang.String) -> verifyPositive
    83:83:void <clinit>() -> <clinit>
io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate -> io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate:
    125:125:void <init>() -> <init>
io.reactivex.internal.fuseable.FuseToFlowable -> io.reactivex.internal.fuseable.FuseToFlowable:
    io.reactivex.Flowable fuseToFlowable() -> fuseToFlowable
io.reactivex.internal.fuseable.QueueFuseable -> io.reactivex.internal.fuseable.QueueFuseable:
    int requestFusion(int) -> requestFusion
io.reactivex.internal.fuseable.QueueSubscription -> io.reactivex.internal.fuseable.QueueSubscription:
io.reactivex.internal.fuseable.ScalarCallable -> io.reactivex.internal.fuseable.ScalarCallable:
    java.lang.Object call() -> call
io.reactivex.internal.fuseable.SimplePlainQueue -> io.reactivex.internal.fuseable.SimplePlainQueue:
    java.lang.Object poll() -> poll
io.reactivex.internal.fuseable.SimpleQueue -> io.reactivex.internal.fuseable.SimpleQueue:
    boolean offer(java.lang.Object) -> offer
    java.lang.Object poll() -> poll
    boolean isEmpty() -> isEmpty
    void clear() -> clear
io.reactivex.internal.observers.BlockingMultiObserver -> io.reactivex.internal.observers.BlockingMultiObserver:
    java.lang.Object value -> value
    java.lang.Throwable error -> error
    io.reactivex.disposables.Disposable d -> d
    boolean cancelled -> cancelled
    38:39:void <init>() -> <init>
    42:47:void dispose() -> dispose
    51:55:void onSubscribe(io.reactivex.disposables.Disposable) -> onSubscribe
    59:61:void onSuccess(java.lang.Object) -> onSuccess
    65:67:void onError(java.lang.Throwable) -> onError
    80:93:java.lang.Object blockingGet() -> blockingGet
io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream -> io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream:
    io.reactivex.Flowable source -> source
    41:43:void <init>(io.reactivex.Flowable) -> <init>
io.reactivex.internal.operators.flowable.FlowableEmpty -> io.reactivex.internal.operators.flowable.FlowableEmpty:
    io.reactivex.Flowable INSTANCE -> INSTANCE
    29:30:void <init>() -> <init>
    34:35:void subscribeActual(org.reactivestreams.Subscriber) -> subscribeActual
    39:39:java.lang.Object call() -> call
    27:27:void <clinit>() -> <clinit>
io.reactivex.internal.operators.flowable.FlowableFlatMap -> io.reactivex.internal.operators.flowable.FlowableFlatMap:
    io.reactivex.functions.Function mapper -> mapper
    boolean delayErrors -> delayErrors
    int maxConcurrency -> maxConcurrency
    int bufferSize -> bufferSize
    41:46:void <init>(io.reactivex.Flowable,io.reactivex.functions.Function,boolean,int,int) -> <init>
    50:54:void subscribeActual(org.reactivestreams.Subscriber) -> subscribeActual
    59:59:io.reactivex.FlowableSubscriber subscribe(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean,int,int) -> subscribe
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber -> io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber:
    long id -> id
    io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber parent -> parent
    int limit -> limit
    int bufferSize -> bufferSize
    boolean done -> done
    io.reactivex.internal.fuseable.SimpleQueue queue -> queue
    long produced -> produced
    int fusionMode -> fusionMode
    626:631:void <init>(io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber,long) -> <init>
    634:656:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    659:664:void onNext(java.lang.Object) -> onNext
    667:669:void onError(java.lang.Throwable) -> onError
    672:674:void onComplete() -> onComplete
    677:686:void requestMore(long) -> requestMore
    690:691:void dispose() -> dispose
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber -> io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber:
    org.reactivestreams.Subscriber actual -> actual
    io.reactivex.functions.Function mapper -> mapper
    boolean delayErrors -> delayErrors
    int maxConcurrency -> maxConcurrency
    int bufferSize -> bufferSize
    io.reactivex.internal.fuseable.SimplePlainQueue queue -> queue
    boolean done -> done
    io.reactivex.internal.util.AtomicThrowable errs -> errs
    boolean cancelled -> cancelled
    java.util.concurrent.atomic.AtomicReference subscribers -> subscribers
    io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber[] EMPTY -> EMPTY
    io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber[] CANCELLED -> CANCELLED
    java.util.concurrent.atomic.AtomicLong requested -> requested
    org.reactivestreams.Subscription upstream -> upstream
    long uniqueId -> uniqueId
    long lastId -> lastId
    int lastIndex -> lastIndex
    int scalarEmitted -> scalarEmitted
    int scalarLimit -> scalarLimit
    76:106:void <init>(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean,int,int) -> <init>
    110:121:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    127:166:void onNext(java.lang.Object) -> onNext
    170:182:boolean addInner(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber) -> addInner
    187:213:void removeInner(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber) -> removeInner
    217:226:io.reactivex.internal.fuseable.SimpleQueue getMainQueue() -> getMainQueue
    230:266:void tryEmitScalar(java.lang.Object) -> tryEmitScalar
    269:274:io.reactivex.internal.fuseable.SimpleQueue getInnerQueue(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber) -> getInnerQueue
    278:314:void tryEmit(java.lang.Object,io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber) -> tryEmit
    319:329:void onError(java.lang.Throwable) -> onError
    334:339:void onComplete() -> onComplete
    343:347:void request(long) -> request
    351:362:void cancel() -> cancel
    365:368:void drain() -> drain
    371:555:void drainLoop() -> drainLoop
    558:570:boolean checkTerminate() -> checkTerminate
    574:578:void clearScalarQueue() -> clearScalarQueue
    581:594:void disposeAll() -> disposeAll
    597:609:void innerError(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber,java.lang.Throwable) -> innerError
    82:84:void <clinit>() -> <clinit>
io.reactivex.internal.operators.flowable.FlowableInternalHelper -> io.reactivex.internal.operators.flowable.FlowableInternalHelper:
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax -> io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax:
    io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax INSTANCE -> INSTANCE
    io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax[] $VALUES -> $VALUES
    216:216:io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax[] values() -> values
    216:216:io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax valueOf(java.lang.String) -> valueOf
    216:216:void <init>(java.lang.String,int) -> <init>
    220:221:void accept(org.reactivestreams.Subscription) -> accept
    216:216:void accept(java.lang.Object) -> accept
    216:217:void <clinit>() -> <clinit>
io.reactivex.internal.operators.flowable.FlowableScalarXMap -> io.reactivex.internal.operators.flowable.FlowableScalarXMap:
    50:98:boolean tryScalarXMapSubscribe(org.reactivestreams.Publisher,org.reactivestreams.Subscriber,io.reactivex.functions.Function) -> tryScalarXMapSubscribe
    112:112:io.reactivex.Flowable scalarXMap(java.lang.Object,io.reactivex.functions.Function) -> scalarXMap
io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable -> io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable:
    java.lang.Object value -> value
    io.reactivex.functions.Function mapper -> mapper
    128:131:void <init>(java.lang.Object,io.reactivex.functions.Function) -> <init>
    138:162:void subscribeActual(org.reactivestreams.Subscriber) -> subscribeActual
io.reactivex.internal.operators.single.SingleToFlowable -> io.reactivex.internal.operators.single.SingleToFlowable:
    io.reactivex.SingleSource source -> source
    31:33:void <init>(io.reactivex.SingleSource) -> <init>
    37:38:void subscribeActual(org.reactivestreams.Subscriber) -> subscribeActual
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver -> io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver:
    io.reactivex.disposables.Disposable d -> d
    49:50:void <init>(org.reactivestreams.Subscriber) -> <init>
    54:59:void onSubscribe(io.reactivex.disposables.Disposable) -> onSubscribe
    63:64:void onSuccess(java.lang.Object) -> onSuccess
    68:69:void onError(java.lang.Throwable) -> onError
    73:75:void cancel() -> cancel
io.reactivex.internal.queue.SpscArrayQueue -> io.reactivex.internal.queue.SpscArrayQueue:
    java.lang.Integer MAX_LOOK_AHEAD_STEP -> MAX_LOOK_AHEAD_STEP
    int mask -> mask
    java.util.concurrent.atomic.AtomicLong producerIndex -> producerIndex
    long producerLookAhead -> producerLookAhead
    java.util.concurrent.atomic.AtomicLong consumerIndex -> consumerIndex
    int lookAheadStep -> lookAheadStep
    51:56:void <init>(int) -> <init>
    60:77:boolean offer(java.lang.Object) -> offer
    89:98:java.lang.Object poll() -> poll
    103:103:boolean isEmpty() -> isEmpty
    107:108:void soProducerIndex(long) -> soProducerIndex
    111:112:void soConsumerIndex(long) -> soConsumerIndex
    117:118:void clear() -> clear
    121:121:int calcElementOffset(long,int) -> calcElementOffset
    125:125:int calcElementOffset(long) -> calcElementOffset
    129:130:void soElement(int,java.lang.Object) -> soElement
    133:133:java.lang.Object lvElement(int) -> lvElement
    43:43:void <clinit>() -> <clinit>
io.reactivex.internal.queue.SpscLinkedArrayQueue -> io.reactivex.internal.queue.SpscLinkedArrayQueue:
    int MAX_LOOK_AHEAD_STEP -> MAX_LOOK_AHEAD_STEP
    java.util.concurrent.atomic.AtomicLong producerIndex -> producerIndex
    int producerLookAheadStep -> producerLookAheadStep
    long producerLookAhead -> producerLookAhead
    int producerMask -> producerMask
    java.util.concurrent.atomic.AtomicReferenceArray producerBuffer -> producerBuffer
    int consumerMask -> consumerMask
    java.util.concurrent.atomic.AtomicReferenceArray consumerBuffer -> consumerBuffer
    java.util.concurrent.atomic.AtomicLong consumerIndex -> consumerIndex
    java.lang.Object HAS_NEXT -> HAS_NEXT
    34:59:void <init>(int) -> <init>
    68:89:boolean offer(java.lang.Object) -> offer
    95:97:boolean writeToQueue(java.util.concurrent.atomic.AtomicReferenceArray,java.lang.Object,long,int) -> writeToQueue
    102:111:void resize(java.util.concurrent.atomic.AtomicReferenceArray,long,int,java.lang.Object,long) -> resize
    114:115:void soNext(java.util.concurrent.atomic.AtomicReferenceArray,java.util.concurrent.atomic.AtomicReferenceArray) -> soNext
    118:121:java.util.concurrent.atomic.AtomicReferenceArray lvNextBufferAndUnlink(java.util.concurrent.atomic.AtomicReferenceArray,int) -> lvNextBufferAndUnlink
    133:147:java.lang.Object poll() -> poll
    152:159:java.lang.Object newBufferPoll(java.util.concurrent.atomic.AtomicReferenceArray,long,int) -> newBufferPoll
    184:185:void clear() -> clear
    207:207:boolean isEmpty() -> isEmpty
    211:212:void adjustLookAheadStep(int) -> adjustLookAheadStep
    215:215:long lvProducerIndex() -> lvProducerIndex
    219:219:long lvConsumerIndex() -> lvConsumerIndex
    223:223:long lpProducerIndex() -> lpProducerIndex
    227:227:long lpConsumerIndex() -> lpConsumerIndex
    231:232:void soProducerIndex(long) -> soProducerIndex
    235:236:void soConsumerIndex(long) -> soConsumerIndex
    239:239:int calcWrappedOffset(long,int) -> calcWrappedOffset
    242:242:int calcDirectOffset(int) -> calcDirectOffset
    245:246:void soElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object) -> soElement
    249:249:java.lang.Object lvElement(java.util.concurrent.atomic.AtomicReferenceArray,int) -> lvElement
    33:46:void <clinit>() -> <clinit>
io.reactivex.internal.schedulers.NonBlockingThread -> io.reactivex.internal.schedulers.NonBlockingThread:
io.reactivex.internal.subscribers.LambdaSubscriber -> io.reactivex.internal.subscribers.LambdaSubscriber:
    io.reactivex.functions.Consumer onNext -> onNext
    io.reactivex.functions.Consumer onError -> onError
    io.reactivex.functions.Action onComplete -> onComplete
    io.reactivex.functions.Consumer onSubscribe -> onSubscribe
    41:46:void <init>(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer) -> <init>
    50:59:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    63:72:void onNext(java.lang.Object) -> onNext
    76:87:void onError(java.lang.Throwable) -> onError
    91:100:void onComplete() -> onComplete
    104:105:void dispose() -> dispose
    109:109:boolean isDisposed() -> isDisposed
    114:115:void request(long) -> request
    119:120:void cancel() -> cancel
io.reactivex.internal.subscribers.StrictSubscriber -> io.reactivex.internal.subscribers.StrictSubscriber:
    org.reactivestreams.Subscriber actual -> actual
    io.reactivex.internal.util.AtomicThrowable error -> error
    java.util.concurrent.atomic.AtomicLong requested -> requested
    java.util.concurrent.atomic.AtomicReference s -> s
    java.util.concurrent.atomic.AtomicBoolean once -> once
    boolean done -> done
    56:62:void <init>(org.reactivestreams.Subscriber) -> <init>
    66:72:void request(long) -> request
    76:79:void cancel() -> cancel
    83:93:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    97:98:void onNext(java.lang.Object) -> onNext
    102:104:void onError(java.lang.Throwable) -> onError
    108:110:void onComplete() -> onComplete
io.reactivex.internal.subscriptions.BasicIntQueueSubscription -> io.reactivex.internal.subscriptions.BasicIntQueueSubscription:
    25:25:void <init>() -> <init>
    32:32:boolean offer(java.lang.Object) -> offer
io.reactivex.internal.subscriptions.DeferredScalarSubscription -> io.reactivex.internal.subscriptions.DeferredScalarSubscription:
    org.reactivestreams.Subscriber actual -> actual
    java.lang.Object value -> value
    69:71:void <init>(org.reactivestreams.Subscriber) -> <init>
    75:102:void request(long) -> request
    111:146:void complete(java.lang.Object) -> complete
    153:157:int requestFusion(int) -> requestFusion
    163:169:java.lang.Object poll() -> poll
    174:174:boolean isEmpty() -> isEmpty
    179:181:void clear() -> clear
    185:187:void cancel() -> cancel
io.reactivex.internal.subscriptions.EmptySubscription -> io.reactivex.internal.subscriptions.EmptySubscription:
    io.reactivex.internal.subscriptions.EmptySubscription INSTANCE -> INSTANCE
    io.reactivex.internal.subscriptions.EmptySubscription[] $VALUES -> $VALUES
    24:24:io.reactivex.internal.subscriptions.EmptySubscription[] values() -> values
    24:24:io.reactivex.internal.subscriptions.EmptySubscription valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    30:31:void request(long) -> request
    35:35:void cancel() -> cancel
    39:39:java.lang.String toString() -> toString
    53:55:void error(java.lang.Throwable,org.reactivestreams.Subscriber) -> error
    67:69:void complete(org.reactivestreams.Subscriber) -> complete
    73:73:java.lang.Object poll() -> poll
    77:77:boolean isEmpty() -> isEmpty
    82:82:void clear() -> clear
    85:85:int requestFusion(int) -> requestFusion
    89:89:boolean offer(java.lang.Object) -> offer
    24:26:void <clinit>() -> <clinit>
io.reactivex.internal.subscriptions.ScalarSubscription -> io.reactivex.internal.subscriptions.ScalarSubscription:
    java.lang.Object value -> value
    org.reactivestreams.Subscriber subscriber -> subscriber
    42:45:void <init>(org.reactivestreams.Subscriber,java.lang.Object) -> <init>
    49:61:void request(long) -> request
    65:66:void cancel() -> cancel
    78:78:boolean offer(java.lang.Object) -> offer
    89:93:java.lang.Object poll() -> poll
    98:98:boolean isEmpty() -> isEmpty
    103:104:void clear() -> clear
    108:108:int requestFusion(int) -> requestFusion
io.reactivex.internal.subscriptions.SubscriptionHelper -> io.reactivex.internal.subscriptions.SubscriptionHelper:
    io.reactivex.internal.subscriptions.SubscriptionHelper CANCELLED -> CANCELLED
    io.reactivex.internal.subscriptions.SubscriptionHelper[] $VALUES -> $VALUES
    28:28:io.reactivex.internal.subscriptions.SubscriptionHelper[] values() -> values
    28:28:io.reactivex.internal.subscriptions.SubscriptionHelper valueOf(java.lang.String) -> valueOf
    28:28:void <init>(java.lang.String,int) -> <init>
    39:39:void request(long) -> request
    44:44:void cancel() -> cancel
    54:63:boolean validate(org.reactivestreams.Subscription,org.reactivestreams.Subscription) -> validate
    71:72:void reportSubscriptionSet() -> reportSubscriptionSet
    80:84:boolean validate(long) -> validate
    140:148:boolean setOnce(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription) -> setOnce
    184:194:boolean cancel(java.util.concurrent.atomic.AtomicReference) -> cancel
    207:214:boolean deferredSetOnce(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicLong,org.reactivestreams.Subscription) -> deferredSetOnce
    225:241:void deferredRequest(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicLong,long) -> deferredRequest
    28:33:void <clinit>() -> <clinit>
io.reactivex.internal.util.AtomicThrowable -> io.reactivex.internal.util.AtomicThrowable:
    24:24:void <init>() -> <init>
    35:35:boolean addThrowable(java.lang.Throwable) -> addThrowable
    44:44:java.lang.Throwable terminate() -> terminate
io.reactivex.internal.util.BackpressureHelper -> io.reactivex.internal.util.BackpressureHelper:
    35:39:long addCap(long,long) -> addCap
    67:75:long add(java.util.concurrent.atomic.AtomicLong,long) -> add
io.reactivex.internal.util.BlockingHelper -> io.reactivex.internal.util.BlockingHelper:
    57:62:void verifyNonBlocking() -> verifyNonBlocking
io.reactivex.internal.util.ExceptionHelper -> io.reactivex.internal.util.ExceptionHelper:
    java.lang.Throwable TERMINATED -> TERMINATED
    39:45:java.lang.RuntimeException wrapOrThrow(java.lang.Throwable) -> wrapOrThrow
    56:72:boolean addThrowable(java.util.concurrent.atomic.AtomicReference,java.lang.Throwable) -> addThrowable
    76:80:java.lang.Throwable terminate(java.util.concurrent.atomic.AtomicReference) -> terminate
    52:52:void <clinit>() -> <clinit>
io.reactivex.internal.util.ExceptionHelper$Termination -> io.reactivex.internal.util.ExceptionHelper$Termination:
    129:130:void <init>() -> <init>
    134:134:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.reactivex.internal.util.HalfSerializer -> io.reactivex.internal.util.HalfSerializer:
    44:55:void onNext(org.reactivestreams.Subscriber,java.lang.Object,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable) -> onNext
    68:75:void onError(org.reactivestreams.Subscriber,java.lang.Throwable,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable) -> onError
    86:94:void onComplete(org.reactivestreams.Subscriber,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable) -> onComplete
io.reactivex.internal.util.Pow2 -> io.reactivex.internal.util.Pow2:
    34:34:int roundToPowerOfTwo(int) -> roundToPowerOfTwo
io.reactivex.plugins.RxJavaPlugins -> io.reactivex.plugins.RxJavaPlugins:
    io.reactivex.functions.Consumer errorHandler -> errorHandler
    io.reactivex.functions.Function onFlowableAssembly -> onFlowableAssembly
    io.reactivex.functions.BiFunction onFlowableSubscribe -> onFlowableSubscribe
    io.reactivex.functions.BiFunction onSingleSubscribe -> onSingleSubscribe
    io.reactivex.functions.BooleanSupplier onBeforeBlocking -> onBeforeBlocking
    boolean failNonBlockingScheduler -> failNonBlockingScheduler
    167:167:boolean isFailOnNonBlockingScheduler() -> isFailOnNonBlockingScheduler
    360:383:void onError(java.lang.Throwable) -> onError
    395:422:boolean isBug(java.lang.Throwable) -> isBug
    426:429:void uncaught(java.lang.Throwable) -> uncaught
    921:925:org.reactivestreams.Subscriber onSubscribe(io.reactivex.Flowable,org.reactivestreams.Subscriber) -> onSubscribe
    955:959:io.reactivex.SingleObserver onSubscribe(io.reactivex.Single,io.reactivex.SingleObserver) -> onSubscribe
    1019:1023:io.reactivex.Flowable onAssembly(io.reactivex.Flowable) -> onAssembly
    1162:1170:boolean onBeforeBlocking() -> onBeforeBlocking
    1270:1272:java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object) -> apply
    1290:1292:java.lang.Object apply(io.reactivex.functions.BiFunction,java.lang.Object,java.lang.Object) -> apply
io.reactivex.processors.FlowableProcessor -> io.reactivex.processors.FlowableProcessor:
    29:29:void <init>() -> <init>
io.reactivex.processors.UnicastProcessor -> io.reactivex.processors.UnicastProcessor:
    io.reactivex.internal.queue.SpscLinkedArrayQueue queue -> queue
    java.util.concurrent.atomic.AtomicReference onTerminate -> onTerminate
    boolean delayError -> delayError
    boolean done -> done
    java.lang.Throwable error -> error
    java.util.concurrent.atomic.AtomicReference actual -> actual
    boolean cancelled -> cancelled
    java.util.concurrent.atomic.AtomicBoolean once -> once
    io.reactivex.internal.subscriptions.BasicIntQueueSubscription wip -> wip
    java.util.concurrent.atomic.AtomicLong requested -> requested
    boolean enableOperatorFusion -> enableOperatorFusion
    78:78:io.reactivex.processors.UnicastProcessor create() -> create
    150:151:void <init>(int) -> <init>
    172:180:void <init>(int,java.lang.Runnable,boolean) -> <init>
    183:187:void doTerminate() -> doTerminate
    190:231:void drainRegular(org.reactivestreams.Subscriber) -> drainRegular
    234:273:void drainFused(org.reactivestreams.Subscriber) -> drainFused
    276:300:void drain() -> drain
    303:328:boolean checkTerminated(boolean,boolean,boolean,org.reactivestreams.Subscriber,io.reactivex.internal.queue.SpscLinkedArrayQueue) -> checkTerminated
    333:338:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    342:350:void onNext(java.lang.Object) -> onNext
    354:367:void onError(java.lang.Throwable) -> onError
    371:380:void onComplete() -> onComplete
    384:396:void subscribeActual(org.reactivestreams.Subscriber) -> subscribeActual
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription -> io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription:
    io.reactivex.processors.UnicastProcessor this$0 -> this$0
    398:398:void <init>(io.reactivex.processors.UnicastProcessor) -> <init>
    406:406:java.lang.Object poll() -> poll
    411:411:boolean isEmpty() -> isEmpty
    416:417:void clear() -> clear
    421:425:int requestFusion(int) -> requestFusion
    430:434:void request(long) -> request
    438:451:void cancel() -> cancel
io.reactivex.subjects.SingleSubject -> io.reactivex.subjects.SingleSubject:
    java.util.concurrent.atomic.AtomicReference observers -> observers
    io.reactivex.subjects.SingleSubject$SingleDisposable[] EMPTY -> EMPTY
    io.reactivex.subjects.SingleSubject$SingleDisposable[] TERMINATED -> TERMINATED
    java.util.concurrent.atomic.AtomicBoolean once -> once
    java.lang.Object value -> value
    java.lang.Throwable error -> error
    118:118:io.reactivex.subjects.SingleSubject create() -> create
    122:125:void <init>() -> <init>
    129:132:void onSubscribe(io.reactivex.disposables.Disposable) -> onSubscribe
    137:144:void onSuccess(java.lang.Object) -> onSuccess
    149:158:void onError(java.lang.Throwable) -> onError
    162:176:void subscribeActual(io.reactivex.SingleObserver) -> subscribeActual
    180:193:boolean add(io.reactivex.subjects.SingleSubject$SingleDisposable) -> add
    199:229:void remove(io.reactivex.subjects.SingleSubject$SingleDisposable) -> remove
    101:104:void <clinit>() -> <clinit>
io.reactivex.subjects.SingleSubject$SingleDisposable -> io.reactivex.subjects.SingleSubject$SingleDisposable:
    io.reactivex.SingleObserver actual -> actual
    294:297:void <init>(io.reactivex.SingleObserver,io.reactivex.subjects.SingleSubject) -> <init>
    301:305:void dispose() -> dispose
    309:309:boolean isDisposed() -> isDisposed
io.vertx.core.AbstractVerticle -> io.vertx.core.AbstractVerticle:
    io.vertx.core.Vertx vertx -> vertx
    io.vertx.core.Context context -> context
    36:36:void <init>() -> <init>
    66:68:void init(io.vertx.core.Vertx,io.vertx.core.Context) -> init
    106:108:void start(io.vertx.core.Future) -> start
    120:122:void stop(io.vertx.core.Future) -> stop
    130:130:void start() -> start
    138:138:void stop() -> stop
io.vertx.core.AsyncResult -> io.vertx.core.AsyncResult:
    java.lang.Object result() -> result
    java.lang.Throwable cause() -> cause
    boolean succeeded() -> succeeded
    boolean failed() -> failed
    70:73:io.vertx.core.AsyncResult map(java.util.function.Function) -> map
    111:111:io.vertx.core.AsyncResult map(java.lang.Object) -> map
    111:111:java.lang.Object lambda$map$0(java.lang.Object,java.lang.Object) -> lambda$map$0
io.vertx.core.AsyncResult$1 -> io.vertx.core.AsyncResult$1:
    java.util.function.Function val$mapper -> val$mapper
    io.vertx.core.AsyncResult this$0 -> this$0
    73:73:void <init>(io.vertx.core.AsyncResult,java.util.function.Function) -> <init>
    76:79:java.lang.Object result() -> result
    85:85:java.lang.Throwable cause() -> cause
    90:90:boolean succeeded() -> succeeded
    95:95:boolean failed() -> failed
io.vertx.core.Closeable -> io.vertx.core.Closeable:
    void close(io.vertx.core.Handler) -> close
io.vertx.core.CompositeFuture -> io.vertx.core.CompositeFuture:
    io.vertx.core.CompositeFuture setHandler(io.vertx.core.Handler) -> setHandler
    28:28:io.vertx.core.Future setHandler(io.vertx.core.Handler) -> setHandler
io.vertx.core.Context -> io.vertx.core.Context:
    69:69:boolean isOnWorkerThread() -> isOnWorkerThread
    void runOnContext(io.vertx.core.Handler) -> runOnContext
    void addCloseHook(io.vertx.core.Closeable) -> addCloseHook
    void removeCloseHook(io.vertx.core.Closeable) -> removeCloseHook
io.vertx.core.DeploymentOptions -> io.vertx.core.DeploymentOptions:
    java.lang.String DEFAULT_ISOLATION_GROUP -> DEFAULT_ISOLATION_GROUP
    io.vertx.core.json.JsonObject config -> config
    boolean worker -> worker
    boolean multiThreaded -> multiThreaded
    java.lang.String isolationGroup -> isolationGroup
    java.lang.String workerPoolName -> workerPoolName
    int workerPoolSize -> workerPoolSize
    long maxWorkerExecuteTime -> maxWorkerExecuteTime
    boolean ha -> ha
    java.util.List extraClasspath -> extraClasspath
    int instances -> instances
    java.util.List isolatedClasses -> isolatedClasses
    52:62:void <init>() -> <init>
    121:121:io.vertx.core.json.JsonObject getConfig() -> getConfig
    141:141:boolean isWorker() -> isWorker
    163:163:boolean isMultiThreaded() -> isMultiThreaded
    183:183:java.lang.String getIsolationGroup() -> getIsolationGroup
    203:203:boolean isHa() -> isHa
    225:225:java.util.List getExtraClasspath() -> getExtraClasspath
    246:246:int getInstances() -> getInstances
    267:267:java.util.List getIsolatedClasses() -> getIsolatedClasses
    285:285:java.lang.String getWorkerPoolName() -> getWorkerPoolName
    310:310:int getWorkerPoolSize() -> getWorkerPoolSize
    338:338:long getMaxWorkerExecuteTime() -> getMaxWorkerExecuteTime
    361:363:io.vertx.core.json.JsonObject toJson() -> toJson
    368:382:boolean equals(java.lang.Object) -> equals
    388:399:int hashCode() -> hashCode
    33:33:void <clinit>() -> <clinit>
io.vertx.core.DeploymentOptionsConverter -> io.vertx.core.DeploymentOptionsConverter:
    76:101:void toJson(io.vertx.core.DeploymentOptions,io.vertx.core.json.JsonObject) -> toJson
    88:88:void lambda$toJson$3(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$3
    81:81:void lambda$toJson$2(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$2
io.vertx.core.Future -> io.vertx.core.Future:
    io.vertx.core.spi.FutureFactory factory -> factory
    51:51:io.vertx.core.Future future() -> future
    61:61:io.vertx.core.Future succeededFuture() -> succeededFuture
    72:72:io.vertx.core.Future succeededFuture(java.lang.Object) -> succeededFuture
    83:83:io.vertx.core.Future failedFuture(java.lang.Throwable) -> failedFuture
    94:94:io.vertx.core.Future failedFuture(java.lang.String) -> failedFuture
    boolean isComplete() -> isComplete
    io.vertx.core.Future setHandler(io.vertx.core.Handler) -> setHandler
    void complete(java.lang.Object) -> complete
    void complete() -> complete
    void fail(java.lang.Throwable) -> fail
    void fail(java.lang.String) -> fail
    boolean tryComplete(java.lang.Object) -> tryComplete
    boolean tryFail(java.lang.Throwable) -> tryFail
    boolean succeeded() -> succeeded
    293:311:io.vertx.core.Future map(java.util.function.Function) -> map
    325:333:io.vertx.core.Future map(java.lang.Object) -> map
    void handle(io.vertx.core.AsyncResult) -> handle
    28:28:io.vertx.core.AsyncResult map(java.lang.Object) -> map
    28:28:io.vertx.core.AsyncResult map(java.util.function.Function) -> map
    28:28:void handle(java.lang.Object) -> handle
    327:332:void lambda$map$3(io.vertx.core.Future,java.lang.Object,io.vertx.core.AsyncResult) -> lambda$map$3
    298:310:void lambda$map$2(java.util.function.Function,io.vertx.core.Future,io.vertx.core.AsyncResult) -> lambda$map$2
    471:471:void <clinit>() -> <clinit>
io.vertx.core.Handler -> io.vertx.core.Handler:
    void handle(java.lang.Object) -> handle
io.vertx.core.MultiMap -> io.vertx.core.MultiMap:
    43:43:io.vertx.core.MultiMap caseInsensitiveMultiMap() -> caseInsensitiveMultiMap
    java.lang.String get(java.lang.CharSequence) -> get
    java.lang.String get(java.lang.String) -> get
    java.util.List getAll(java.lang.String) -> getAll
    java.util.List getAll(java.lang.CharSequence) -> getAll
    java.util.List entries() -> entries
    boolean contains(java.lang.CharSequence) -> contains
    boolean isEmpty() -> isEmpty
    java.util.Set names() -> names
    io.vertx.core.MultiMap add(java.lang.String,java.lang.String) -> add
    io.vertx.core.MultiMap add(java.lang.String,java.lang.Iterable) -> add
    io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap) -> addAll
    io.vertx.core.MultiMap set(java.lang.String,java.lang.String) -> set
    io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.CharSequence) -> set
    io.vertx.core.MultiMap set(java.lang.String,java.lang.Iterable) -> set
    io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.Iterable) -> set
    io.vertx.core.MultiMap setAll(io.vertx.core.MultiMap) -> setAll
    int size() -> size
io.vertx.core.ServiceHelper -> io.vertx.core.ServiceHelper:
    21:21:void <init>() -> <init>
    24:28:java.lang.Object loadFactory(java.lang.Class) -> loadFactory
    32:36:java.lang.Object loadFactoryOrNull(java.lang.Class) -> loadFactoryOrNull
    42:42:java.util.Collection loadFactories(java.lang.Class) -> loadFactories
    46:67:java.util.Collection loadFactories(java.lang.Class,java.lang.ClassLoader) -> loadFactories
io.vertx.core.TimeoutStream -> io.vertx.core.TimeoutStream:
    io.vertx.core.TimeoutStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.TimeoutStream handler(io.vertx.core.Handler) -> handler
    io.vertx.core.TimeoutStream pause() -> pause
    io.vertx.core.TimeoutStream resume() -> resume
    io.vertx.core.TimeoutStream endHandler(io.vertx.core.Handler) -> endHandler
    27:27:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    27:27:io.vertx.core.streams.ReadStream resume() -> resume
    27:27:io.vertx.core.streams.ReadStream pause() -> pause
    27:27:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    27:27:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.Verticle -> io.vertx.core.Verticle:
    void init(io.vertx.core.Vertx,io.vertx.core.Context) -> init
    void start(io.vertx.core.Future) -> start
    void stop(io.vertx.core.Future) -> stop
io.vertx.core.Vertx -> io.vertx.core.Vertx:
    io.vertx.core.spi.VertxFactory factory -> factory
    88:88:io.vertx.core.Vertx vertx(io.vertx.core.VertxOptions) -> vertx
    109:109:io.vertx.core.Context currentContext() -> currentContext
    io.vertx.core.Context getOrCreateContext() -> getOrCreateContext
    io.vertx.core.net.NetServer createNetServer(io.vertx.core.net.NetServerOptions) -> createNetServer
    io.vertx.core.http.HttpServer createHttpServer() -> createHttpServer
    io.vertx.core.file.FileSystem fileSystem() -> fileSystem
    io.vertx.core.eventbus.EventBus eventBus() -> eventBus
    long setTimer(long,io.vertx.core.Handler) -> setTimer
    long setPeriodic(long,io.vertx.core.Handler) -> setPeriodic
    boolean cancelTimer(long) -> cancelTimer
    void runOnContext(io.vertx.core.Handler) -> runOnContext
    void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler) -> deployVerticle
    void executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler) -> executeBlocking
    io.vertx.core.Handler exceptionHandler() -> exceptionHandler
    584:584:void <clinit>() -> <clinit>
io.vertx.core.VertxException -> io.vertx.core.VertxException:
    31:32:void <init>(java.lang.String) -> <init>
    41:42:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    50:51:void <init>(java.lang.Throwable) -> <init>
io.vertx.core.VertxOptions -> io.vertx.core.VertxOptions:
    int DEFAULT_EVENT_LOOP_POOL_SIZE -> DEFAULT_EVENT_LOOP_POOL_SIZE
    java.lang.String DEFAULT_CLUSTER_PUBLIC_HOST -> DEFAULT_CLUSTER_PUBLIC_HOST
    boolean DEFAULT_FILE_CACHING_ENABLED -> DEFAULT_FILE_CACHING_ENABLED
    int eventLoopPoolSize -> eventLoopPoolSize
    int workerPoolSize -> workerPoolSize
    int internalBlockingPoolSize -> internalBlockingPoolSize
    long blockedThreadCheckInterval -> blockedThreadCheckInterval
    long maxEventLoopExecuteTime -> maxEventLoopExecuteTime
    long maxWorkerExecuteTime -> maxWorkerExecuteTime
    io.vertx.core.spi.cluster.ClusterManager clusterManager -> clusterManager
    boolean haEnabled -> haEnabled
    int quorumSize -> quorumSize
    java.lang.String haGroup -> haGroup
    io.vertx.core.metrics.MetricsOptions metricsOptions -> metricsOptions
    long warningExceptionTime -> warningExceptionTime
    io.vertx.core.eventbus.EventBusOptions eventBusOptions -> eventBusOptions
    io.vertx.core.dns.AddressResolverOptions addressResolverOptions -> addressResolverOptions
    boolean fileResolverCachingEnabled -> fileResolverCachingEnabled
    boolean preferNativeTransport -> preferNativeTransport
    131:152:void <init>() -> <init>
    193:193:int getEventLoopPoolSize() -> getEventLoopPoolSize
    218:218:int getWorkerPoolSize() -> getWorkerPoolSize
    241:241:boolean isClustered() -> isClustered
    251:252:io.vertx.core.VertxOptions setClustered(boolean) -> setClustered
    391:391:long getBlockedThreadCheckInterval() -> getBlockedThreadCheckInterval
    419:419:long getMaxEventLoopExecuteTime() -> getMaxEventLoopExecuteTime
    429:433:io.vertx.core.VertxOptions setMaxEventLoopExecuteTime(long) -> setMaxEventLoopExecuteTime
    447:447:long getMaxWorkerExecuteTime() -> getMaxWorkerExecuteTime
    474:474:io.vertx.core.spi.cluster.ClusterManager getClusterManager() -> getClusterManager
    501:501:int getInternalBlockingPoolSize() -> getInternalBlockingPoolSize
    524:524:boolean isHAEnabled() -> isHAEnabled
    544:544:int getQuorumSize() -> getQuorumSize
    567:567:java.lang.String getHAGroup() -> getHAGroup
    586:586:io.vertx.core.metrics.MetricsOptions getMetricsOptions() -> getMetricsOptions
    606:606:long getWarningExceptionTime() -> getWarningExceptionTime
    627:627:io.vertx.core.eventbus.EventBusOptions getEventBusOptions() -> getEventBusOptions
    646:646:io.vertx.core.dns.AddressResolverOptions getAddressResolverOptions() -> getAddressResolverOptions
    664:664:boolean isFileResolverCachingEnabled() -> isFileResolverCachingEnabled
    682:682:boolean getPreferNativeTransport() -> getPreferNativeTransport
    698:721:boolean equals(java.lang.Object) -> equals
    726:742:int hashCode() -> hashCode
    747:763:java.lang.String toString() -> toString
    37:117:void <clinit>() -> <clinit>
io.vertx.core.buffer.Buffer -> io.vertx.core.buffer.Buffer:
    io.vertx.core.spi.BufferFactory factory -> factory
    47:47:io.vertx.core.buffer.Buffer buffer() -> buffer
    60:60:io.vertx.core.buffer.Buffer buffer(int) -> buffer
    70:70:io.vertx.core.buffer.Buffer buffer(java.lang.String) -> buffer
    81:81:io.vertx.core.buffer.Buffer buffer(java.lang.String,java.lang.String) -> buffer
    92:92:io.vertx.core.buffer.Buffer buffer(byte[]) -> buffer
    114:114:io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf) -> buffer
    java.lang.String toString() -> toString
    byte getByte(int) -> getByte
    short getUnsignedByte(int) -> getUnsignedByte
    int getInt(int) -> getInt
    long getUnsignedInt(int) -> getUnsignedInt
    long getLong(int) -> getLong
    double getDouble(int) -> getDouble
    float getFloat(int) -> getFloat
    short getShort(int) -> getShort
    int getUnsignedShort(int) -> getUnsignedShort
    byte[] getBytes() -> getBytes
    byte[] getBytes(int,int) -> getBytes
    io.vertx.core.buffer.Buffer getBuffer(int,int) -> getBuffer
    io.vertx.core.buffer.Buffer appendBuffer(io.vertx.core.buffer.Buffer) -> appendBuffer
    io.vertx.core.buffer.Buffer appendBytes(byte[]) -> appendBytes
    io.vertx.core.buffer.Buffer appendByte(byte) -> appendByte
    io.vertx.core.buffer.Buffer appendInt(int) -> appendInt
    io.vertx.core.buffer.Buffer appendUnsignedInt(long) -> appendUnsignedInt
    io.vertx.core.buffer.Buffer appendLong(long) -> appendLong
    io.vertx.core.buffer.Buffer appendShort(short) -> appendShort
    io.vertx.core.buffer.Buffer appendUnsignedShort(int) -> appendUnsignedShort
    io.vertx.core.buffer.Buffer appendFloat(float) -> appendFloat
    io.vertx.core.buffer.Buffer appendDouble(double) -> appendDouble
    io.vertx.core.buffer.Buffer setInt(int,int) -> setInt
    io.vertx.core.buffer.Buffer setBytes(int,java.nio.ByteBuffer) -> setBytes
    int length() -> length
    io.vertx.core.buffer.Buffer copy() -> copy
    io.vertx.core.buffer.Buffer slice(int,int) -> slice
    io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    697:697:void <clinit>() -> <clinit>
io.vertx.core.buffer.impl.BufferFactoryImpl -> io.vertx.core.buffer.impl.BufferFactoryImpl:
    21:21:void <init>() -> <init>
    25:25:io.vertx.core.buffer.Buffer buffer(int) -> buffer
    30:30:io.vertx.core.buffer.Buffer buffer() -> buffer
    35:35:io.vertx.core.buffer.Buffer buffer(java.lang.String) -> buffer
    40:40:io.vertx.core.buffer.Buffer buffer(java.lang.String,java.lang.String) -> buffer
    45:45:io.vertx.core.buffer.Buffer buffer(byte[]) -> buffer
    50:50:io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf) -> buffer
io.vertx.core.buffer.impl.BufferImpl -> io.vertx.core.buffer.impl.BufferImpl:
    io.netty.buffer.ByteBuf buffer -> buffer
    36:37:void <init>() -> <init>
    39:41:void <init>(int) -> <init>
    43:45:void <init>(byte[]) -> <init>
    48:49:void <init>(java.lang.String,java.lang.String) -> <init>
    52:53:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    56:57:void <init>(java.lang.String) -> <init>
    59:61:void <init>(io.netty.buffer.ByteBuf) -> <init>
    64:64:java.lang.String toString() -> toString
    87:87:byte getByte(int) -> getByte
    91:91:short getUnsignedByte(int) -> getUnsignedByte
    95:95:int getInt(int) -> getInt
    103:103:long getUnsignedInt(int) -> getUnsignedInt
    111:111:long getLong(int) -> getLong
    119:119:double getDouble(int) -> getDouble
    123:123:float getFloat(int) -> getFloat
    127:127:short getShort(int) -> getShort
    135:135:int getUnsignedShort(int) -> getUnsignedShort
    159:161:byte[] getBytes() -> getBytes
    165:168:byte[] getBytes(int,int) -> getBytes
    194:194:io.vertx.core.buffer.Buffer getBuffer(int,int) -> getBuffer
    209:210:io.vertx.core.buffer.Buffer appendBuffer(io.vertx.core.buffer.Buffer) -> appendBuffer
    221:222:io.vertx.core.buffer.Buffer appendBytes(byte[]) -> appendBytes
    231:232:io.vertx.core.buffer.Buffer appendByte(byte) -> appendByte
    241:242:io.vertx.core.buffer.Buffer appendInt(int) -> appendInt
    251:252:io.vertx.core.buffer.Buffer appendUnsignedInt(long) -> appendUnsignedInt
    271:272:io.vertx.core.buffer.Buffer appendLong(long) -> appendLong
    281:282:io.vertx.core.buffer.Buffer appendShort(short) -> appendShort
    291:292:io.vertx.core.buffer.Buffer appendUnsignedShort(int) -> appendUnsignedShort
    301:302:io.vertx.core.buffer.Buffer appendFloat(float) -> appendFloat
    306:307:io.vertx.core.buffer.Buffer appendDouble(double) -> appendDouble
    331:333:io.vertx.core.buffer.Buffer setInt(int,int) -> setInt
    428:430:io.vertx.core.buffer.impl.BufferImpl setBytes(int,java.nio.ByteBuffer) -> setBytes
    454:454:int length() -> length
    458:458:io.vertx.core.buffer.Buffer copy() -> copy
    466:466:io.vertx.core.buffer.Buffer slice(int,int) -> slice
    472:472:io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    489:500:void ensureWritable(int,int) -> ensureWritable
    504:507:boolean equals(java.lang.Object) -> equals
    512:512:int hashCode() -> hashCode
    31:31:io.vertx.core.buffer.Buffer setBytes(int,java.nio.ByteBuffer) -> setBytes
io.vertx.core.datagram.DatagramSocket -> io.vertx.core.datagram.DatagramSocket:
    io.vertx.core.datagram.DatagramSocket pause() -> pause
    io.vertx.core.datagram.DatagramSocket resume() -> resume
    io.vertx.core.datagram.DatagramSocket endHandler(io.vertx.core.Handler) -> endHandler
    io.vertx.core.datagram.DatagramSocket handler(io.vertx.core.Handler) -> handler
    io.vertx.core.datagram.DatagramSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    40:40:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    40:40:io.vertx.core.streams.ReadStream resume() -> resume
    40:40:io.vertx.core.streams.ReadStream pause() -> pause
    40:40:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    40:40:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.dns.AddressResolverOptions -> io.vertx.core.dns.AddressResolverOptions:
    java.util.List DEFAULT_SERVERS -> DEFAULT_SERVERS
    java.util.List DEFAULT_SEACH_DOMAINS -> DEFAULT_SEACH_DOMAINS
    int DEFAULT_NDOTS -> DEFAULT_NDOTS
    boolean DEFAULT_ROTATE_SERVERS -> DEFAULT_ROTATE_SERVERS
    java.lang.String hostsPath -> hostsPath
    io.vertx.core.buffer.Buffer hostsValue -> hostsValue
    java.util.List servers -> servers
    boolean optResourceEnabled -> optResourceEnabled
    int cacheMinTimeToLive -> cacheMinTimeToLive
    int cacheMaxTimeToLive -> cacheMaxTimeToLive
    int cacheNegativeTimeToLive -> cacheNegativeTimeToLive
    long queryTimeout -> queryTimeout
    int maxQueries -> maxQueries
    boolean rdFlag -> rdFlag
    java.util.List searchDomains -> searchDomains
    int ndots -> ndots
    boolean rotateServers -> rotateServers
    101:113:void <init>() -> <init>
    140:140:java.lang.String getHostsPath() -> getHostsPath
    160:160:io.vertx.core.buffer.Buffer getHostsValue() -> getHostsValue
    182:182:java.util.List getServers() -> getServers
    217:217:boolean isOptResourceEnabled() -> isOptResourceEnabled
    236:236:int getCacheMinTimeToLive() -> getCacheMinTimeToLive
    258:258:int getCacheMaxTimeToLive() -> getCacheMaxTimeToLive
    280:280:int getCacheNegativeTimeToLive() -> getCacheNegativeTimeToLive
    303:303:long getQueryTimeout() -> getQueryTimeout
    324:324:int getMaxQueries() -> getMaxQueries
    345:345:boolean getRdFlag() -> getRdFlag
    363:363:java.util.List getSearchDomains() -> getSearchDomains
    397:397:int getNdots() -> getNdots
    419:419:boolean isRotateServers() -> isRotateServers
    435:448:boolean equals(java.lang.Object) -> equals
    453:464:int hashCode() -> hashCode
    468:470:io.vertx.core.json.JsonObject toJson() -> toJson
    35:85:void <clinit>() -> <clinit>
io.vertx.core.dns.AddressResolverOptionsConverter -> io.vertx.core.dns.AddressResolverOptionsConverter:
    82:107:void toJson(io.vertx.core.dns.AddressResolverOptions,io.vertx.core.json.JsonObject) -> toJson
    104:104:void lambda$toJson$3(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$3
    99:99:void lambda$toJson$2(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$2
io.vertx.core.eventbus.DeliveryOptions -> io.vertx.core.eventbus.DeliveryOptions:
    long timeout -> timeout
    java.lang.String codecName -> codecName
    io.vertx.core.MultiMap headers -> headers
    40:48:void <init>() -> <init>
    108:108:long getSendTimeout() -> getSendTimeout
    132:132:java.lang.String getCodecName() -> getCodecName
    183:183:io.vertx.core.MultiMap getHeaders() -> getHeaders
io.vertx.core.eventbus.EventBus -> io.vertx.core.eventbus.EventBus:
    io.vertx.core.eventbus.MessageConsumer localConsumer(java.lang.String) -> localConsumer
    void start(io.vertx.core.Handler) -> start
io.vertx.core.eventbus.EventBusOptions -> io.vertx.core.eventbus.EventBusOptions:
    boolean clustered -> clustered
    java.lang.String clusterPublicHost -> clusterPublicHost
    int clusterPublicPort -> clusterPublicPort
    long clusterPingInterval -> clusterPingInterval
    long clusterPingReplyInterval -> clusterPingReplyInterval
    io.vertx.core.http.ClientAuth DEFAULT_CLIENT_AUTH -> DEFAULT_CLIENT_AUTH
    int port -> port
    java.lang.String host -> host
    int acceptBacklog -> acceptBacklog
    io.vertx.core.http.ClientAuth clientAuth -> clientAuth
    int reconnectAttempts -> reconnectAttempts
    long reconnectInterval -> reconnectInterval
    int connectTimeout -> connectTimeout
    boolean trustAll -> trustAll
    30:109:void <init>() -> <init>
    154:156:io.vertx.core.json.JsonObject toJson() -> toJson
    164:164:io.vertx.core.http.ClientAuth getClientAuth() -> getClientAuth
    186:186:int getAcceptBacklog() -> getAcceptBacklog
    207:207:java.lang.String getHost() -> getHost
    228:228:int getPort() -> getPort
    252:252:int getReconnectAttempts() -> getReconnectAttempts
    273:273:long getReconnectInterval() -> getReconnectInterval
    290:291:io.vertx.core.eventbus.EventBusOptions addCrlPath(java.lang.String) -> addCrlPath
    296:297:io.vertx.core.eventbus.EventBusOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    302:303:io.vertx.core.eventbus.EventBusOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    308:309:io.vertx.core.eventbus.EventBusOptions setIdleTimeout(int) -> setIdleTimeout
    321:322:io.vertx.core.eventbus.EventBusOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    327:328:io.vertx.core.eventbus.EventBusOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    333:334:io.vertx.core.eventbus.EventBusOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    339:340:io.vertx.core.eventbus.EventBusOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    345:346:io.vertx.core.eventbus.EventBusOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    351:352:io.vertx.core.eventbus.EventBusOptions setSoLinger(int) -> setSoLinger
    357:358:io.vertx.core.eventbus.EventBusOptions setSsl(boolean) -> setSsl
    363:364:io.vertx.core.eventbus.EventBusOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    369:370:io.vertx.core.eventbus.EventBusOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    381:382:io.vertx.core.eventbus.EventBusOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    387:388:io.vertx.core.eventbus.EventBusOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    393:394:io.vertx.core.eventbus.EventBusOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    399:400:io.vertx.core.eventbus.EventBusOptions setReuseAddress(boolean) -> setReuseAddress
    405:406:io.vertx.core.eventbus.EventBusOptions setReusePort(boolean) -> setReusePort
    411:412:io.vertx.core.eventbus.EventBusOptions setSendBufferSize(int) -> setSendBufferSize
    417:418:io.vertx.core.eventbus.EventBusOptions setTrafficClass(int) -> setTrafficClass
    427:427:boolean isClustered() -> isClustered
    437:438:io.vertx.core.eventbus.EventBusOptions setClustered(boolean) -> setClustered
    458:458:boolean isTrustAll() -> isTrustAll
    466:466:int getConnectTimeout() -> getConnectTimeout
    490:490:long getClusterPingInterval() -> getClusterPingInterval
    516:516:long getClusterPingReplyInterval() -> getClusterPingReplyInterval
    541:541:java.lang.String getClusterPublicHost() -> getClusterPublicHost
    569:569:int getClusterPublicPort() -> getClusterPublicPort
    27:27:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> setReusePort
    27:27:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> setTrafficClass
    27:27:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> setReuseAddress
    27:27:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    27:27:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> setSendBufferSize
    27:27:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    27:27:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> addCrlPath
    27:27:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    27:27:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    27:27:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    27:27:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    27:27:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    27:27:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    27:27:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    27:27:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> setSsl
    27:27:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> setIdleTimeout
    27:27:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    27:27:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> setSoLinger
    27:27:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    27:27:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    27:27:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> setReusePort
    27:27:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> setTrafficClass
    27:27:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> setReuseAddress
    27:27:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    27:27:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> setSendBufferSize
    56:56:void <clinit>() -> <clinit>
io.vertx.core.eventbus.EventBusOptionsConverter -> io.vertx.core.eventbus.EventBusOptionsConverter:
    170:249:void toJson(io.vertx.core.eventbus.EventBusOptions,io.vertx.core.json.JsonObject) -> toJson
    199:199:void lambda$toJson$7(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$7
    194:194:void lambda$toJson$6(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$6
    189:189:void lambda$toJson$5(io.vertx.core.json.JsonArray,io.vertx.core.buffer.Buffer) -> lambda$toJson$5
    184:184:void lambda$toJson$4(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$4
io.vertx.core.eventbus.Message -> io.vertx.core.eventbus.Message:
    java.lang.String address() -> address
    io.vertx.core.MultiMap headers() -> headers
    java.lang.Object body() -> body
io.vertx.core.eventbus.MessageCodec -> io.vertx.core.eventbus.MessageCodec:
    void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
    java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    java.lang.Object transform(java.lang.Object) -> transform
    java.lang.String name() -> name
    byte systemCodecID() -> systemCodecID
io.vertx.core.eventbus.MessageConsumer -> io.vertx.core.eventbus.MessageConsumer:
    io.vertx.core.eventbus.MessageConsumer exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.eventbus.MessageConsumer handler(io.vertx.core.Handler) -> handler
    io.vertx.core.eventbus.MessageConsumer pause() -> pause
    io.vertx.core.eventbus.MessageConsumer resume() -> resume
    io.vertx.core.eventbus.MessageConsumer endHandler(io.vertx.core.Handler) -> endHandler
    void unregister() -> unregister
    32:32:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    32:32:io.vertx.core.streams.ReadStream resume() -> resume
    32:32:io.vertx.core.streams.ReadStream pause() -> pause
    32:32:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    32:32:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.eventbus.ReplyException -> io.vertx.core.eventbus.ReplyException:
    io.vertx.core.eventbus.ReplyFailure failureType -> failureType
    int failureCode -> failureCode
    37:40:void <init>(io.vertx.core.eventbus.ReplyFailure,int,java.lang.String) -> <init>
    49:50:void <init>(io.vertx.core.eventbus.ReplyFailure,java.lang.String) -> <init>
    67:67:io.vertx.core.eventbus.ReplyFailure failureType() -> failureType
    76:76:int failureCode() -> failureCode
    81:82:java.lang.String toString() -> toString
io.vertx.core.eventbus.ReplyFailure -> io.vertx.core.eventbus.ReplyFailure:
    io.vertx.core.eventbus.ReplyFailure TIMEOUT -> TIMEOUT
    io.vertx.core.eventbus.ReplyFailure NO_HANDLERS -> NO_HANDLERS
    io.vertx.core.eventbus.ReplyFailure RECIPIENT_FAILURE -> RECIPIENT_FAILURE
    io.vertx.core.eventbus.ReplyFailure[] $VALUES -> $VALUES
    21:21:io.vertx.core.eventbus.ReplyFailure[] values() -> values
    21:21:io.vertx.core.eventbus.ReplyFailure valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    40:44:io.vertx.core.eventbus.ReplyFailure fromInt(int) -> fromInt
    49:53:int toInt() -> toInt
    21:37:void <clinit>() -> <clinit>
io.vertx.core.eventbus.ReplyFailure$1 -> io.vertx.core.eventbus.ReplyFailure$1:
    int[] $SwitchMap$io$vertx$core$eventbus$ReplyFailure -> $SwitchMap$io$vertx$core$eventbus$ReplyFailure
    49:49:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.CodecManager -> io.vertx.core.eventbus.impl.CodecManager:
    io.vertx.core.eventbus.MessageCodec PING_MESSAGE_CODEC -> PING_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec NULL_MESSAGE_CODEC -> NULL_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec STRING_MESSAGE_CODEC -> STRING_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec BUFFER_MESSAGE_CODEC -> BUFFER_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec JSON_OBJECT_MESSAGE_CODEC -> JSON_OBJECT_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec JSON_ARRAY_MESSAGE_CODEC -> JSON_ARRAY_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec BYTE_ARRAY_MESSAGE_CODEC -> BYTE_ARRAY_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec INT_MESSAGE_CODEC -> INT_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec LONG_MESSAGE_CODEC -> LONG_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec FLOAT_MESSAGE_CODEC -> FLOAT_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec DOUBLE_MESSAGE_CODEC -> DOUBLE_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec BOOLEAN_MESSAGE_CODEC -> BOOLEAN_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec SHORT_MESSAGE_CODEC -> SHORT_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec CHAR_MESSAGE_CODEC -> CHAR_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec BYTE_MESSAGE_CODEC -> BYTE_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec REPLY_EXCEPTION_MESSAGE_CODEC -> REPLY_EXCEPTION_MESSAGE_CODEC
    io.vertx.core.eventbus.MessageCodec[] systemCodecs -> systemCodecs
    java.util.concurrent.ConcurrentMap userCodecMap -> userCodecMap
    java.util.concurrent.ConcurrentMap defaultCodecMap -> defaultCodecMap
    49:56:void <init>() -> <init>
    60:104:io.vertx.core.eventbus.MessageCodec lookupCodec(java.lang.Object,java.lang.String) -> lookupCodec
    108:108:io.vertx.core.eventbus.MessageCodec getCodec(java.lang.String) -> getCodec
    150:150:io.vertx.core.eventbus.MessageCodec[] systemCodecs() -> systemCodecs
    160:164:io.vertx.core.eventbus.MessageCodec[] codecs(io.vertx.core.eventbus.MessageCodec[]) -> codecs
    31:46:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.EventBusImpl -> io.vertx.core.eventbus.impl.EventBusImpl:
    io.vertx.core.logging.Logger log -> log
    java.util.List interceptors -> interceptors
    java.util.concurrent.atomic.AtomicLong replySequence -> replySequence
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.spi.metrics.EventBusMetrics metrics -> metrics
    java.util.concurrent.ConcurrentMap handlerMap -> handlerMap
    io.vertx.core.eventbus.impl.CodecManager codecManager -> codecManager
    boolean started -> started
    54:66:void <init>(io.vertx.core.impl.VertxInternal) -> <init>
    81:86:void start(io.vertx.core.Handler) -> start
    90:90:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object) -> send
    105:106:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler) -> send
    163:165:io.vertx.core.eventbus.MessageConsumer localConsumer(java.lang.String) -> localConsumer
    202:210:void close(io.vertx.core.Handler) -> close
    219:219:io.vertx.core.spi.metrics.EventBusMetrics getMetrics() -> getMetrics
    223:227:io.vertx.core.eventbus.impl.MessageImpl createMessage(boolean,java.lang.String,io.vertx.core.MultiMap,java.lang.Object,java.lang.String) -> createMessage
    232:235:void addRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,boolean,boolean) -> addRegistration
    240:241:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler) -> addRegistration
    245:275:boolean addLocalRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,boolean,boolean) -> addLocalRegistration
    279:281:void removeRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,io.vertx.core.Handler) -> removeRegistration
    285:286:void removeRegistration(io.vertx.core.eventbus.impl.HandlerHolder,java.lang.String,io.vertx.core.Handler) -> removeRegistration
    289:311:io.vertx.core.eventbus.impl.HandlerHolder removeLocalRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration) -> removeLocalRegistration
    329:334:void sendOrPub(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl) -> sendOrPub
    337:337:io.vertx.core.Handler convertHandler(io.vertx.core.Handler) -> convertHandler
    354:359:void callCompletionHandlerAsync(io.vertx.core.Handler) -> callCompletionHandlerAsync
    362:372:void deliverMessageLocally(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl) -> deliverMessageLocally
    375:375:boolean isMessageLocal(io.vertx.core.eventbus.impl.MessageImpl) -> isMessageLocal
    379:405:boolean deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl) -> deliverMessageLocally
    410:413:void checkStarted() -> checkStarted
    416:416:java.lang.String generateReplyAddress() -> generateReplyAddress
    422:432:io.vertx.core.eventbus.impl.HandlerRegistration createReplyHandlerRegistration(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler) -> createReplyHandlerRegistration
    438:442:void sendOrPubInternal(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler) -> sendOrPubInternal
    512:517:void unregisterAll() -> unregisterAll
    522:541:void deliverToHandler(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.impl.HandlerHolder) -> deliverToHandler
    582:584:void finalize() -> finalize
    582:582:void lambda$finalize$4(io.vertx.core.AsyncResult) -> lambda$finalize$4
    532:540:void lambda$deliverToHandler$3(io.vertx.core.eventbus.impl.HandlerHolder,io.vertx.core.eventbus.Message,java.lang.Void) -> lambda$deliverToHandler$3
    356:357:void lambda$callCompletionHandlerAsync$2(io.vertx.core.Handler,java.lang.Void) -> lambda$callCompletionHandlerAsync$2
    339:350:void lambda$convertHandler$1(io.vertx.core.Handler,io.vertx.core.eventbus.Message) -> lambda$convertHandler$1
    208:208:void lambda$close$0(io.vertx.core.Handler,java.lang.Void) -> lambda$close$0
    50:50:java.util.List access$000(io.vertx.core.eventbus.impl.EventBusImpl) -> access$000
    50:50:io.vertx.core.logging.Logger access$100() -> access$100
    52:52:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry -> io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:
    java.lang.String address -> address
    io.vertx.core.eventbus.impl.HandlerRegistration handler -> handler
    io.vertx.core.eventbus.impl.EventBusImpl this$0 -> this$0
    547:550:void <init>(io.vertx.core.eventbus.impl.EventBusImpl,java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration) -> <init>
    554:560:boolean equals(java.lang.Object) -> equals
    565:567:int hashCode() -> hashCode
    572:573:void close(io.vertx.core.Handler) -> close
io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl -> io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:
    io.vertx.core.eventbus.impl.MessageImpl message -> message
    io.vertx.core.eventbus.DeliveryOptions options -> options
    io.vertx.core.eventbus.impl.HandlerRegistration handlerRegistration -> handlerRegistration
    java.util.Iterator iter -> iter
    io.vertx.core.eventbus.impl.EventBusImpl this$0 -> this$0
    451:456:void <init>(io.vertx.core.eventbus.impl.EventBusImpl,io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.eventbus.impl.HandlerRegistration) -> <init>
    465:475:void next() -> next
io.vertx.core.eventbus.impl.HandlerHolder -> io.vertx.core.eventbus.impl.HandlerHolder:
    io.vertx.core.spi.metrics.EventBusMetrics metrics -> metrics
    io.vertx.core.Context context -> context
    io.vertx.core.eventbus.impl.HandlerRegistration handler -> handler
    boolean replyHandler -> replyHandler
    boolean localOnly -> localOnly
    boolean removed -> removed
    30:36:void <init>(io.vertx.core.spi.metrics.EventBusMetrics,io.vertx.core.eventbus.impl.HandlerRegistration,boolean,boolean,io.vertx.core.Context) -> <init>
    40:50:void setRemoved() -> setRemoved
    55:55:boolean isRemoved() -> isRemoved
    60:64:boolean equals(java.lang.Object) -> equals
    69:69:int hashCode() -> hashCode
    73:73:io.vertx.core.Context getContext() -> getContext
    77:77:io.vertx.core.eventbus.impl.HandlerRegistration getHandler() -> getHandler
    81:81:boolean isReplyHandler() -> isReplyHandler
    85:85:boolean isLocalOnly() -> isLocalOnly
io.vertx.core.eventbus.impl.HandlerRegistration -> io.vertx.core.eventbus.impl.HandlerRegistration:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.Vertx vertx -> vertx
    io.vertx.core.spi.metrics.EventBusMetrics metrics -> metrics
    io.vertx.core.eventbus.impl.EventBusImpl eventBus -> eventBus
    java.lang.String address -> address
    java.lang.String repliedAddress -> repliedAddress
    boolean localOnly -> localOnly
    io.vertx.core.Handler asyncResultHandler -> asyncResultHandler
    long timeoutID -> timeoutID
    boolean registered -> registered
    io.vertx.core.Handler handler -> handler
    io.vertx.core.Context handlerContext -> handlerContext
    io.vertx.core.AsyncResult result -> result
    io.vertx.core.Handler completionHandler -> completionHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.Handler discardHandler -> discardHandler
    int maxBufferedMessages -> maxBufferedMessages
    java.util.Queue pending -> pending
    boolean paused -> paused
    java.lang.Object metric -> metric
    50:81:void <init>(io.vertx.core.Vertx,io.vertx.core.spi.metrics.EventBusMetrics,io.vertx.core.eventbus.impl.EventBusImpl,java.lang.String,java.lang.String,boolean,io.vertx.core.Handler,long) -> <init>
    116:117:void unregister() -> unregister
    121:123:void unregister(io.vertx.core.Handler) -> unregister
    126:128:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String) -> sendAsyncResultFailure
    131:150:void doUnregister(io.vertx.core.Handler) -> doUnregister
    153:156:void callCompletionHandlerAsync(io.vertx.core.Handler) -> callCompletionHandlerAsync
    159:160:void setHandlerContext(io.vertx.core.Context) -> setHandlerContext
    163:175:void setResult(io.vertx.core.AsyncResult) -> setResult
    180:201:void handle(io.vertx.core.eventbus.Message) -> handle
    206:234:void deliver(io.vertx.core.Handler,io.vertx.core.eventbus.Message) -> deliver
    238:251:void checkNextTick() -> checkNextTick
    262:270:io.vertx.core.eventbus.MessageConsumer handler(io.vertx.core.Handler) -> handler
    285:288:io.vertx.core.eventbus.MessageConsumer pause() -> pause
    293:297:io.vertx.core.eventbus.MessageConsumer resume() -> resume
    302:309:io.vertx.core.eventbus.MessageConsumer endHandler(io.vertx.core.Handler) -> endHandler
    314:314:io.vertx.core.eventbus.MessageConsumer exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    318:318:io.vertx.core.Handler getHandler() -> getHandler
    322:322:java.lang.Object getMetric() -> getMetric
    37:37:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    37:37:io.vertx.core.streams.ReadStream resume() -> resume
    37:37:io.vertx.core.streams.ReadStream pause() -> pause
    37:37:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    37:37:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    37:37:void handle(java.lang.Object) -> handle
    305:305:void lambda$endHandler$7(io.vertx.core.Context,io.vertx.core.Handler,java.lang.Void) -> lambda$endHandler$7
    305:305:void lambda$null$6(io.vertx.core.Handler,java.lang.Void) -> lambda$null$6
    242:249:void lambda$checkNextTick$5(java.lang.Void) -> lambda$checkNextTick$5
    169:169:void lambda$setResult$4(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void) -> lambda$setResult$4
    154:154:void lambda$callCompletionHandlerAsync$3(io.vertx.core.Handler,java.lang.Void) -> lambda$callCompletionHandlerAsync$3
    138:142:void lambda$doUnregister$2(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$doUnregister$2
    75:79:void lambda$new$0(io.vertx.core.spi.metrics.EventBusMetrics,java.lang.String,long,java.lang.String,java.lang.Long) -> lambda$new$0
    39:39:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.Handlers -> io.vertx.core.eventbus.impl.Handlers:
    java.util.concurrent.atomic.AtomicInteger pos -> pos
    java.util.List list -> list
    21:24:void <init>() -> <init>
    28:42:io.vertx.core.eventbus.impl.HandlerHolder choose() -> choose
io.vertx.core.eventbus.impl.MessageImpl -> io.vertx.core.eventbus.impl.MessageImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.eventbus.MessageCodec messageCodec -> messageCodec
    io.vertx.core.eventbus.impl.EventBusImpl bus -> bus
    java.lang.String address -> address
    java.lang.String replyAddress -> replyAddress
    io.vertx.core.MultiMap headers -> headers
    java.lang.Object sentBody -> sentBody
    java.lang.Object receivedBody -> receivedBody
    boolean send -> send
    41:42:void <init>() -> <init>
    46:54:void <init>(java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.Object,io.vertx.core.eventbus.MessageCodec,boolean,io.vertx.core.eventbus.impl.EventBusImpl) -> <init>
    56:73:void <init>(io.vertx.core.eventbus.impl.MessageImpl) -> <init>
    76:76:io.vertx.core.eventbus.impl.MessageImpl copyBeforeReceive() -> copyBeforeReceive
    81:81:java.lang.String address() -> address
    87:90:io.vertx.core.MultiMap headers() -> headers
    95:98:java.lang.Object body() -> body
    138:138:boolean isSend() -> isSend
    142:143:void setReplyAddress(java.lang.String) -> setReplyAddress
    146:146:io.vertx.core.eventbus.MessageCodec codec() -> codec
    150:151:void setBus(io.vertx.core.eventbus.impl.EventBusImpl) -> setBus
    160:160:boolean isLocal() -> isLocal
    30:30:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo -> io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo:
    java.lang.String nodeId -> nodeId
    io.vertx.core.net.impl.ServerID serverID -> serverID
    28:29:void <init>() -> <init>
    31:34:void <init>(java.lang.String,io.vertx.core.net.impl.ServerID) -> <init>
    38:44:boolean equals(java.lang.Object) -> equals
    49:51:int hashCode() -> hashCode
    56:56:java.lang.String toString() -> toString
io.vertx.core.eventbus.impl.clustered.ClusteredEventBus -> io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.buffer.Buffer PONG -> PONG
    io.vertx.core.spi.cluster.ClusterManager clusterManager -> clusterManager
    io.vertx.core.impl.HAManager haManager -> haManager
    java.util.concurrent.ConcurrentMap connections -> connections
    io.vertx.core.Context sendNoContext -> sendNoContext
    io.vertx.core.eventbus.EventBusOptions options -> options
    io.vertx.core.spi.cluster.AsyncMultiMap subs -> subs
    java.util.Set ownSubs -> ownSubs
    io.vertx.core.net.impl.ServerID serverID -> serverID
    io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo nodeInfo -> nodeInfo
    io.vertx.core.net.NetServer server -> server
    76:96:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.VertxOptions,io.vertx.core.spi.cluster.ClusterManager,io.vertx.core.impl.HAManager) -> <init>
    99:103:io.vertx.core.net.NetServerOptions getServerOptions() -> getServerOptions
    107:117:void setCertOptions(io.vertx.core.net.TCPSSLOptions,io.vertx.core.net.KeyCertOptions) -> setCertOptions
    120:131:void setTrustOptions(io.vertx.core.net.TCPSSLOptions,io.vertx.core.net.TrustOptions) -> setTrustOptions
    135:168:void start(io.vertx.core.Handler) -> start
    172:193:void close(io.vertx.core.Handler) -> close
    197:201:io.vertx.core.eventbus.impl.MessageImpl createMessage(boolean,java.lang.String,io.vertx.core.MultiMap,java.lang.Object,java.lang.String) -> createMessage
    208:215:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler) -> addRegistration
    220:226:void removeRegistration(io.vertx.core.eventbus.impl.HandlerHolder,java.lang.String,io.vertx.core.Handler) -> removeRegistration
    235:259:void sendOrPub(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl) -> sendOrPub
    264:264:java.lang.String generateReplyAddress() -> generateReplyAddress
    269:270:boolean isMessageLocal(io.vertx.core.eventbus.impl.MessageImpl) -> isMessageLocal
    274:289:void setClusterViewChangedHandler(io.vertx.core.impl.HAManager) -> setClusterViewChangedHandler
    293:298:int getClusterPublicPort(io.vertx.core.eventbus.EventBusOptions,int) -> getClusterPublicPort
    303:307:java.lang.String getClusterPublicHost(io.vertx.core.eventbus.EventBusOptions) -> getClusterPublicHost
    311:311:io.vertx.core.Handler getServerHandler() -> getServerHandler
    343:378:void sendToSubs(io.vertx.core.spi.cluster.ChoosableIterable,io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl) -> sendToSubs
    402:416:void sendRemote(io.vertx.core.net.impl.ServerID,io.vertx.core.eventbus.impl.MessageImpl) -> sendRemote
    419:435:void removeSub(java.lang.String,io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo,io.vertx.core.Handler) -> removeSub
    438:438:java.util.concurrent.ConcurrentMap connections() -> connections
    442:442:io.vertx.core.impl.VertxInternal vertx() -> vertx
    446:446:io.vertx.core.eventbus.EventBusOptions options() -> options
    420:434:void lambda$removeSub$11(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$removeSub$11
    312:339:void lambda$getServerHandler$10(io.vertx.core.net.NetSocket) -> lambda$getServerHandler$10
    275:288:void lambda$setClusterViewChangedHandler$9(java.util.Set) -> lambda$setClusterViewChangedHandler$9
    284:287:void lambda$null$8(io.vertx.core.AsyncResult) -> lambda$null$8
    283:283:boolean lambda$null$51267305$1(java.util.Set,io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo) -> lambda$null$51267305$1
    276:281:void lambda$null$7(java.lang.String) -> lambda$null$7
    277:280:void lambda$null$6(io.vertx.core.AsyncResult) -> lambda$null$6
    254:255:void lambda$sendOrPub$5(java.lang.String,io.vertx.core.Handler,java.lang.Void) -> lambda$sendOrPub$5
    237:250:void lambda$sendOrPub$4(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl,java.lang.String,io.vertx.core.AsyncResult) -> lambda$sendOrPub$4
    173:191:void lambda$close$3(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$close$3
    175:185:void lambda$null$2(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$null$2
    136:167:void lambda$start$1(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$start$1
    142:159:void lambda$null$0(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$null$0
    63:63:io.vertx.core.eventbus.impl.CodecManager access$000(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus) -> access$000
    63:63:io.vertx.core.spi.metrics.EventBusMetrics access$100(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus) -> access$100
    63:63:io.vertx.core.spi.metrics.EventBusMetrics access$200(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus) -> access$200
    63:63:io.vertx.core.buffer.Buffer access$300() -> access$300
    63:63:boolean access$400(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus,io.vertx.core.eventbus.impl.MessageImpl) -> access$400
    65:70:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1 -> io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:
    int size -> size
    io.vertx.core.parsetools.RecordParser val$parser -> val$parser
    io.vertx.core.net.NetSocket val$socket -> val$socket
    io.vertx.core.eventbus.impl.clustered.ClusteredEventBus this$0 -> this$0
    313:314:void <init>(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus,io.vertx.core.parsetools.RecordParser,io.vertx.core.net.NetSocket) -> <init>
    317:335:void handle(io.vertx.core.buffer.Buffer) -> handle
    313:313:void handle(java.lang.Object) -> handle
io.vertx.core.eventbus.impl.clustered.ClusteredMessage -> io.vertx.core.eventbus.impl.clustered.ClusteredMessage:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.net.impl.ServerID sender -> sender
    io.vertx.core.buffer.Buffer wireBuffer -> wireBuffer
    int bodyPos -> bodyPos
    int headersPos -> headersPos
    boolean fromWire -> fromWire
    44:45:void <init>() -> <init>
    49:51:void <init>(io.vertx.core.net.impl.ServerID,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.Object,io.vertx.core.eventbus.MessageCodec,boolean,io.vertx.core.eventbus.impl.EventBusImpl) -> <init>
    54:62:void <init>(io.vertx.core.eventbus.impl.clustered.ClusteredMessage) -> <init>
    65:65:io.vertx.core.eventbus.impl.clustered.ClusteredMessage copyBeforeReceive() -> copyBeforeReceive
    71:80:io.vertx.core.MultiMap headers() -> headers
    86:90:java.lang.Object body() -> body
    99:121:io.vertx.core.buffer.Buffer encodeToWire() -> encodeToWire
    125:178:void readFromWire(io.vertx.core.buffer.Buffer,io.vertx.core.eventbus.impl.CodecManager) -> readFromWire
    181:183:void decodeBody() -> decodeBody
    186:200:void encodeHeaders(io.vertx.core.buffer.Buffer) -> encodeHeaders
    203:224:void decodeHeaders() -> decodeHeaders
    227:228:void writeBody(io.vertx.core.buffer.Buffer) -> writeBody
    231:234:void writeString(io.vertx.core.buffer.Buffer,java.lang.String) -> writeString
    241:241:boolean isFromWire() -> isFromWire
    245:245:boolean isLocal() -> isLocal
    32:32:io.vertx.core.eventbus.impl.MessageImpl copyBeforeReceive() -> copyBeforeReceive
    34:34:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.clustered.ConnectionHolder -> io.vertx.core.eventbus.impl.clustered.ConnectionHolder:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.eventbus.impl.clustered.ClusteredEventBus eventBus -> eventBus
    io.vertx.core.net.NetClient client -> client
    io.vertx.core.net.impl.ServerID serverID -> serverID
    io.vertx.core.Vertx vertx -> vertx
    io.vertx.core.spi.metrics.EventBusMetrics metrics -> metrics
    java.util.Queue pending -> pending
    io.vertx.core.net.NetSocket socket -> socket
    boolean connected -> connected
    long timeoutID -> timeoutID
    long pingTimeoutID -> pingTimeoutID
    48:60:void <init>(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus,io.vertx.core.net.impl.ServerID,io.vertx.core.eventbus.EventBusOptions) -> <init>
    63:74:void connect() -> connect
    78:93:void writeMessage(io.vertx.core.eventbus.impl.clustered.ClusteredMessage) -> writeMessage
    96:113:void close() -> close
    116:129:void schedulePing() -> schedulePing
    132:156:void connected(io.vertx.core.net.NetSocket) -> connected
    138:140:void lambda$connected$5(io.vertx.core.buffer.Buffer) -> lambda$connected$5
    135:135:void lambda$connected$4(java.lang.Void) -> lambda$connected$4
    134:134:void lambda$connected$3(java.lang.Throwable) -> lambda$connected$3
    119:128:void lambda$schedulePing$2(io.vertx.core.eventbus.EventBusOptions,java.lang.Long) -> lambda$schedulePing$2
    121:123:void lambda$null$1(java.lang.Long) -> lambda$null$1
    67:73:void lambda$connect$0(io.vertx.core.AsyncResult) -> lambda$connect$0
    35:35:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec -> io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Boolean) -> encodeToWire
    29:29:java.lang.Boolean decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    35:35:java.lang.Boolean transform(java.lang.Boolean) -> transform
    40:40:java.lang.String name() -> name
    45:45:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.BufferMessageCodec -> io.vertx.core.eventbus.impl.codecs.BufferMessageCodec:
    20:20:void <init>() -> <init>
    24:26:void encodeToWire(io.vertx.core.buffer.Buffer,io.vertx.core.buffer.Buffer) -> encodeToWire
    30:32:io.vertx.core.buffer.Buffer decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    37:37:io.vertx.core.buffer.Buffer transform(io.vertx.core.buffer.Buffer) -> transform
    42:42:java.lang.String name() -> name
    47:47:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec -> io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec:
    20:20:void <init>() -> <init>
    24:26:void encodeToWire(io.vertx.core.buffer.Buffer,byte[]) -> encodeToWire
    30:32:byte[] decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    37:39:byte[] transform(byte[]) -> transform
    44:44:java.lang.String name() -> name
    49:49:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.ByteMessageCodec -> io.vertx.core.eventbus.impl.codecs.ByteMessageCodec:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Byte) -> encodeToWire
    29:29:java.lang.Byte decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    35:35:java.lang.Byte transform(java.lang.Byte) -> transform
    40:40:java.lang.String name() -> name
    45:45:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.CharMessageCodec -> io.vertx.core.eventbus.impl.codecs.CharMessageCodec:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Character) -> encodeToWire
    29:29:java.lang.Character decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    35:35:java.lang.Character transform(java.lang.Character) -> transform
    40:40:java.lang.String name() -> name
    45:45:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec -> io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Double) -> encodeToWire
    29:29:java.lang.Double decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    35:35:java.lang.Double transform(java.lang.Double) -> transform
    40:40:java.lang.String name() -> name
    45:45:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.FloatMessageCodec -> io.vertx.core.eventbus.impl.codecs.FloatMessageCodec:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Float) -> encodeToWire
    29:29:java.lang.Float decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    35:35:java.lang.Float transform(java.lang.Float) -> transform
    40:40:java.lang.String name() -> name
    45:45:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.IntMessageCodec -> io.vertx.core.eventbus.impl.codecs.IntMessageCodec:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Integer) -> encodeToWire
    29:29:java.lang.Integer decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    35:35:java.lang.Integer transform(java.lang.Integer) -> transform
    40:40:java.lang.String name() -> name
    45:45:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec -> io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec:
    21:21:void <init>() -> <init>
    25:28:void encodeToWire(io.vertx.core.buffer.Buffer,io.vertx.core.json.JsonArray) -> encodeToWire
    32:34:io.vertx.core.json.JsonArray decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    39:39:io.vertx.core.json.JsonArray transform(io.vertx.core.json.JsonArray) -> transform
    44:44:java.lang.String name() -> name
    49:49:byte systemCodecID() -> systemCodecID
    21:21:java.lang.Object transform(java.lang.Object) -> transform
    21:21:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    21:21:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec -> io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec:
    21:21:void <init>() -> <init>
    25:28:void encodeToWire(io.vertx.core.buffer.Buffer,io.vertx.core.json.JsonObject) -> encodeToWire
    32:34:io.vertx.core.json.JsonObject decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    39:39:io.vertx.core.json.JsonObject transform(io.vertx.core.json.JsonObject) -> transform
    44:44:java.lang.String name() -> name
    49:49:byte systemCodecID() -> systemCodecID
    21:21:java.lang.Object transform(java.lang.Object) -> transform
    21:21:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    21:21:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.LongMessageCodec -> io.vertx.core.eventbus.impl.codecs.LongMessageCodec:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Long) -> encodeToWire
    29:29:java.lang.Long decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    35:35:java.lang.Long transform(java.lang.Long) -> transform
    40:40:java.lang.String name() -> name
    45:45:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.NullMessageCodec -> io.vertx.core.eventbus.impl.codecs.NullMessageCodec:
    20:20:void <init>() -> <init>
    24:24:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.String) -> encodeToWire
    28:28:java.lang.String decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    33:33:java.lang.String transform(java.lang.String) -> transform
    38:38:java.lang.String name() -> name
    43:43:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.PingMessageCodec -> io.vertx.core.eventbus.impl.codecs.PingMessageCodec:
    20:20:void <init>() -> <init>
    24:24:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.String) -> encodeToWire
    28:28:java.lang.String decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    33:33:java.lang.String transform(java.lang.String) -> transform
    38:38:java.lang.String name() -> name
    43:43:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec -> io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec:
    23:23:void <init>() -> <init>
    27:37:void encodeToWire(io.vertx.core.buffer.Buffer,io.vertx.core.eventbus.ReplyException) -> encodeToWire
    41:57:io.vertx.core.eventbus.ReplyException decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    62:62:io.vertx.core.eventbus.ReplyException transform(io.vertx.core.eventbus.ReplyException) -> transform
    67:67:java.lang.String name() -> name
    72:72:byte systemCodecID() -> systemCodecID
    23:23:java.lang.Object transform(java.lang.Object) -> transform
    23:23:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    23:23:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.ShortMessageCodec -> io.vertx.core.eventbus.impl.codecs.ShortMessageCodec:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Short) -> encodeToWire
    29:29:java.lang.Short decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    35:35:java.lang.Short transform(java.lang.Short) -> transform
    40:40:java.lang.String name() -> name
    45:45:byte systemCodecID() -> systemCodecID
    20:20:java.lang.Object transform(java.lang.Object) -> transform
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.eventbus.impl.codecs.StringMessageCodec -> io.vertx.core.eventbus.impl.codecs.StringMessageCodec:
    21:21:void <init>() -> <init>
    25:28:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.String) -> encodeToWire
    32:35:java.lang.String decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    41:41:java.lang.String transform(java.lang.String) -> transform
    46:46:java.lang.String name() -> name
    51:51:byte systemCodecID() -> systemCodecID
    21:21:java.lang.Object transform(java.lang.Object) -> transform
    21:21:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> decodeFromWire
    21:21:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> encodeToWire
io.vertx.core.file.AsyncFile -> io.vertx.core.file.AsyncFile:
    io.vertx.core.file.AsyncFile handler(io.vertx.core.Handler) -> handler
    io.vertx.core.file.AsyncFile pause() -> pause
    io.vertx.core.file.AsyncFile resume() -> resume
    io.vertx.core.file.AsyncFile endHandler(io.vertx.core.Handler) -> endHandler
    io.vertx.core.file.AsyncFile exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    void close(io.vertx.core.Handler) -> close
    32:32:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    32:32:io.vertx.core.streams.ReadStream resume() -> resume
    32:32:io.vertx.core.streams.ReadStream pause() -> pause
    32:32:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    32:32:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.file.CopyOptions -> io.vertx.core.file.CopyOptions:
    boolean replaceExisting -> replaceExisting
    boolean copyAttributes -> copyAttributes
    boolean atomicMove -> atomicMove
    boolean nofollowLinks -> nofollowLinks
    45:54:void <init>() -> <init>
io.vertx.core.file.FileSystem -> io.vertx.core.file.FileSystem:
    io.vertx.core.file.FileSystem deleteRecursive(java.lang.String,boolean,io.vertx.core.Handler) -> deleteRecursive
    io.vertx.core.buffer.Buffer readFileBlocking(java.lang.String) -> readFileBlocking
    io.vertx.core.file.FileSystem open(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.Handler) -> open
io.vertx.core.file.FileSystemException -> io.vertx.core.file.FileSystemException:
    24:25:void <init>(java.lang.String) -> <init>
    32:33:void <init>(java.lang.Throwable) -> <init>
io.vertx.core.file.OpenOptions -> io.vertx.core.file.OpenOptions:
    java.lang.String DEFAULT_PERMS -> DEFAULT_PERMS
    java.lang.String perms -> perms
    boolean read -> read
    boolean write -> write
    boolean create -> create
    boolean createNew -> createNew
    boolean dsync -> dsync
    boolean sync -> sync
    boolean deleteOnClose -> deleteOnClose
    boolean truncateExisting -> truncateExisting
    boolean sparse -> sparse
    boolean append -> append
    41:58:void <init>() -> <init>
    95:95:java.lang.String getPerms() -> getPerms
    115:115:boolean isRead() -> isRead
    135:135:boolean isWrite() -> isWrite
    155:155:boolean isCreate() -> isCreate
    175:175:boolean isCreateNew() -> isCreateNew
    195:195:boolean isDeleteOnClose() -> isDeleteOnClose
    215:215:boolean isTruncateExisting() -> isTruncateExisting
    235:235:boolean isSparse() -> isSparse
    254:254:boolean isSync() -> isSync
    273:273:boolean isDsync() -> isDsync
    290:290:boolean isAppend() -> isAppend
    25:25:void <clinit>() -> <clinit>
io.vertx.core.file.impl.AsyncFileImpl -> io.vertx.core.file.impl.AsyncFileImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    java.nio.channels.AsynchronousFileChannel ch -> ch
    io.vertx.core.impl.ContextImpl context -> context
    boolean closed -> closed
    java.lang.Runnable closedDeferred -> closedDeferred
    long writesOutstanding -> writesOutstanding
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    long writePos -> writePos
    int maxWrites -> maxWrites
    int lwm -> lwm
    int readBufferSize -> readBufferSize
    boolean paused -> paused
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler endHandler -> endHandler
    long readPos -> readPos
    boolean readInProgress -> readInProgress
    67:104:void <init>(io.vertx.core.impl.VertxInternal,java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.impl.ContextImpl) -> <init>
    113:114:void close(io.vertx.core.Handler) -> close
    123:131:io.vertx.core.file.AsyncFile read(io.vertx.core.buffer.Buffer,int,long,int,io.vertx.core.Handler) -> read
    216:218:io.vertx.core.file.AsyncFile exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    223:228:io.vertx.core.file.AsyncFile handler(io.vertx.core.Handler) -> handler
    233:235:io.vertx.core.file.AsyncFile endHandler(io.vertx.core.Handler) -> endHandler
    240:242:io.vertx.core.file.AsyncFile pause() -> pause
    247:254:io.vertx.core.file.AsyncFile resume() -> resume
    291:297:void handleException(java.lang.Throwable) -> handleException
    320:342:void doRead() -> doRead
    345:349:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    352:357:void handleEnd() -> handleEnd
    417:448:void doRead(io.vertx.core.buffer.Buffer,int,java.nio.ByteBuffer,long,io.vertx.core.Handler) -> doRead
    451:452:void check() -> check
    455:458:void checkClosed() -> checkClosed
    461:465:void checkContext() -> checkContext
    468:477:void doClose(io.vertx.core.Handler) -> doClose
    480:489:void closeInternal(io.vertx.core.Handler) -> closeInternal
    52:52:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    52:52:io.vertx.core.streams.ReadStream resume() -> resume
    52:52:io.vertx.core.streams.ReadStream pause() -> pause
    52:52:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    52:52:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    487:487:void lambda$closeInternal$5(io.vertx.core.Handler) -> lambda$closeInternal$5
    471:476:void lambda$doClose$4(io.vertx.core.Future) -> lambda$doClose$4
    324:340:void lambda$doRead$2(io.vertx.core.AsyncResult) -> lambda$doRead$2
    52:52:io.vertx.core.impl.ContextImpl access$100(io.vertx.core.file.impl.AsyncFileImpl) -> access$100
    52:52:void access$400(io.vertx.core.file.impl.AsyncFileImpl,io.vertx.core.buffer.Buffer,int,java.nio.ByteBuffer,long,io.vertx.core.Handler) -> access$400
    54:54:void <clinit>() -> <clinit>
io.vertx.core.file.impl.AsyncFileImpl$2 -> io.vertx.core.file.impl.AsyncFileImpl$2:
    long pos -> pos
    long val$position -> val$position
    java.nio.ByteBuffer val$buff -> val$buff
    io.vertx.core.buffer.Buffer val$writeBuff -> val$writeBuff
    int val$offset -> val$offset
    io.vertx.core.Handler val$handler -> val$handler
    io.vertx.core.file.impl.AsyncFileImpl this$0 -> this$0
    417:419:void <init>(io.vertx.core.file.impl.AsyncFileImpl,long,java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler) -> <init>
    422:427:void done() -> done
    430:442:void completed(java.lang.Integer,java.lang.Object) -> completed
    445:446:void failed(java.lang.Throwable,java.lang.Object) -> failed
    417:417:void completed(java.lang.Object,java.lang.Object) -> completed
    445:445:void lambda$failed$1(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void) -> lambda$failed$1
    423:426:void lambda$done$0(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void) -> lambda$done$0
io.vertx.core.file.impl.FileSystemImpl -> io.vertx.core.file.impl.FileSystemImpl:
    io.vertx.core.file.CopyOptions DEFAULT_OPTIONS -> DEFAULT_OPTIONS
    io.vertx.core.impl.VertxInternal vertx -> vertx
    71:73:void <init>(io.vertx.core.impl.VertxInternal) -> <init>
    223:224:io.vertx.core.file.FileSystem deleteRecursive(java.lang.String,boolean,io.vertx.core.Handler) -> deleteRecursive
    296:296:io.vertx.core.buffer.Buffer readFileBlocking(java.lang.String) -> readFileBlocking
    310:311:io.vertx.core.file.FileSystem open(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.Handler) -> open
    614:615:io.vertx.core.file.impl.FileSystemImpl$BlockingAction deleteInternal(java.lang.String,boolean,io.vertx.core.Handler) -> deleteInternal
    731:732:io.vertx.core.file.impl.FileSystemImpl$BlockingAction readFileInternal(java.lang.String,io.vertx.core.Handler) -> readFileInternal
    763:765:io.vertx.core.file.impl.FileSystemImpl$BlockingAction openInternal(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.Handler) -> openInternal
    774:774:io.vertx.core.file.AsyncFile doOpen(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.impl.ContextImpl) -> doOpen
    67:67:void <clinit>() -> <clinit>
io.vertx.core.file.impl.FileSystemImpl$10 -> io.vertx.core.file.impl.FileSystemImpl$10:
    java.lang.String val$path -> val$path
    boolean val$recursive -> val$recursive
    io.vertx.core.file.impl.FileSystemImpl this$0 -> this$0
    615:615:void <init>(io.vertx.core.file.impl.FileSystemImpl,io.vertx.core.Handler,java.lang.String,boolean) -> <init>
    618:640:java.lang.Void perform() -> perform
    615:615:java.lang.Object perform() -> perform
io.vertx.core.file.impl.FileSystemImpl$10$1 -> io.vertx.core.file.impl.FileSystemImpl$10$1:
    io.vertx.core.file.impl.FileSystemImpl$10 this$1 -> this$1
    620:620:void <init>(io.vertx.core.file.impl.FileSystemImpl$10) -> <init>
    622:623:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    626:630:java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException) -> postVisitDirectory
    620:620:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    620:620:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
io.vertx.core.file.impl.FileSystemImpl$13 -> io.vertx.core.file.impl.FileSystemImpl$13:
    java.lang.String val$path -> val$path
    io.vertx.core.file.impl.FileSystemImpl this$0 -> this$0
    732:732:void <init>(io.vertx.core.file.impl.FileSystemImpl,io.vertx.core.Handler,java.lang.String) -> <init>
    735:740:io.vertx.core.buffer.Buffer perform() -> perform
    732:732:java.lang.Object perform() -> perform
io.vertx.core.file.impl.FileSystemImpl$15 -> io.vertx.core.file.impl.FileSystemImpl$15:
    java.lang.String val$p -> val$p
    io.vertx.core.file.OpenOptions val$options -> val$options
    io.vertx.core.file.impl.FileSystemImpl this$0 -> this$0
    765:765:void <init>(io.vertx.core.file.impl.FileSystemImpl,io.vertx.core.Handler,java.lang.String,io.vertx.core.file.OpenOptions) -> <init>
    767:768:io.vertx.core.file.AsyncFile perform() -> perform
    765:765:java.lang.Object perform() -> perform
io.vertx.core.file.impl.FileSystemImpl$BlockingAction -> io.vertx.core.file.impl.FileSystemImpl$BlockingAction:
    io.vertx.core.Handler handler -> handler
    io.vertx.core.impl.ContextImpl context -> context
    io.vertx.core.file.impl.FileSystemImpl this$0 -> this$0
    831:834:void <init>(io.vertx.core.file.impl.FileSystemImpl,io.vertx.core.Handler) -> <init>
    839:840:void run() -> run
io.vertx.core.file.impl.WindowsFileSystem -> io.vertx.core.file.impl.WindowsFileSystem:
    io.vertx.core.logging.Logger log -> log
    33:34:void <init>(io.vertx.core.impl.VertxInternal) -> <init>
    37:40:void logInternal(java.lang.String) -> logInternal
    70:71:io.vertx.core.file.AsyncFile doOpen(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.impl.ContextImpl) -> doOpen
    30:30:void <clinit>() -> <clinit>
io.vertx.core.http.CaseInsensitiveHeaders -> io.vertx.core.http.CaseInsensitiveHeaders:
    io.vertx.core.http.CaseInsensitiveHeaders$MapEntry[] entries -> entries
    io.vertx.core.http.CaseInsensitiveHeaders$MapEntry head -> head
    36:50:int hash(java.lang.String) -> hash
    55:59:io.vertx.core.MultiMap set0(java.lang.Iterable) -> set0
    64:64:io.vertx.core.MultiMap setAll(io.vertx.core.MultiMap) -> setAll
    74:74:int size() -> size
    78:98:boolean eq(java.lang.String,java.lang.String) -> eq
    102:102:int index(int) -> index
    105:110:void <init>() -> <init>
    114:117:io.vertx.core.MultiMap add(java.lang.String,java.lang.String) -> add
    122:127:io.vertx.core.MultiMap add(java.lang.String,java.lang.Iterable) -> add
    132:135:io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap) -> addAll
    148:155:void add0(int,int,java.lang.String,java.lang.String) -> add0
    159:163:io.vertx.core.MultiMap remove(java.lang.String) -> remove
    167:200:void remove0(int,int,java.lang.String) -> remove0
    204:208:io.vertx.core.MultiMap set(java.lang.String,java.lang.String) -> set
    213:226:io.vertx.core.MultiMap set(java.lang.String,java.lang.Iterable) -> set
    231:235:io.vertx.core.MultiMap clear() -> clear
    240:252:java.lang.String get(java.lang.String) -> get
    257:270:java.util.List getAll(java.lang.String) -> getAll
    275:280:void forEach(java.util.function.Consumer) -> forEach
    284:292:java.util.List entries() -> entries
    297:297:java.util.Iterator iterator() -> iterator
    302:302:boolean contains(java.lang.String) -> contains
    307:307:boolean isEmpty() -> isEmpty
    313:320:java.util.Set names() -> names
    325:325:java.lang.String get(java.lang.CharSequence) -> get
    330:330:java.util.List getAll(java.lang.CharSequence) -> getAll
    335:335:boolean contains(java.lang.CharSequence) -> contains
    354:354:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.CharSequence) -> set
    359:364:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.Iterable) -> set
    369:369:io.vertx.core.MultiMap remove(java.lang.CharSequence) -> remove
    373:377:java.lang.String toString() -> toString
io.vertx.core.http.CaseInsensitiveHeaders$MapEntry -> io.vertx.core.http.CaseInsensitiveHeaders$MapEntry:
    int hash -> hash
    java.lang.String key -> key
    java.lang.String value -> value
    io.vertx.core.http.CaseInsensitiveHeaders$MapEntry next -> next
    io.vertx.core.http.CaseInsensitiveHeaders$MapEntry before -> before
    io.vertx.core.http.CaseInsensitiveHeaders$MapEntry after -> after
    387:391:void <init>(int,java.lang.String,java.lang.String) -> <init>
    394:396:void remove() -> remove
    399:403:void addBefore(io.vertx.core.http.CaseInsensitiveHeaders$MapEntry) -> addBefore
    407:407:java.lang.String getKey() -> getKey
    412:412:java.lang.String getValue() -> getValue
    417:420:java.lang.String setValue(java.lang.String) -> setValue
    425:425:java.lang.String toString() -> toString
    380:380:java.lang.Object setValue(java.lang.Object) -> setValue
    380:380:java.lang.Object getValue() -> getValue
    380:380:java.lang.Object getKey() -> getKey
io.vertx.core.http.ClientAuth -> io.vertx.core.http.ClientAuth:
    io.vertx.core.http.ClientAuth NONE -> NONE
    io.vertx.core.http.ClientAuth REQUEST -> REQUEST
    io.vertx.core.http.ClientAuth REQUIRED -> REQUIRED
    io.vertx.core.http.ClientAuth[] $VALUES -> $VALUES
    21:21:io.vertx.core.http.ClientAuth[] values() -> values
    21:21:io.vertx.core.http.ClientAuth valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    21:38:void <clinit>() -> <clinit>
io.vertx.core.http.ConnectionPoolTooBusyException -> io.vertx.core.http.ConnectionPoolTooBusyException:
    34:35:void <init>(java.lang.String) -> <init>
io.vertx.core.http.GoAway -> io.vertx.core.http.GoAway:
    long errorCode -> errorCode
    int lastStreamId -> lastStreamId
    io.vertx.core.buffer.Buffer debugData -> debugData
    30:31:void <init>() -> <init>
    51:52:io.vertx.core.http.GoAway setErrorCode(long) -> setErrorCode
    70:71:io.vertx.core.http.GoAway setLastStreamId(int) -> setLastStreamId
    88:89:io.vertx.core.http.GoAway setDebugData(io.vertx.core.buffer.Buffer) -> setDebugData
io.vertx.core.http.Http2Settings -> io.vertx.core.http.Http2Settings:
    java.util.Map DEFAULT_EXTRA_SETTINGS -> DEFAULT_EXTRA_SETTINGS
    long headerTableSize -> headerTableSize
    boolean pushEnabled -> pushEnabled
    long maxConcurrentStreams -> maxConcurrentStreams
    int initialWindowSize -> initialWindowSize
    int maxFrameSize -> maxFrameSize
    long maxHeaderListSize -> maxHeaderListSize
    java.util.Map extraSettings -> extraSettings
    80:88:void <init>() -> <init>
    105:113:void <init>(io.vertx.core.http.Http2Settings) -> <init>
    119:119:long getHeaderTableSize() -> getHeaderTableSize
    129:134:io.vertx.core.http.Http2Settings setHeaderTableSize(long) -> setHeaderTableSize
    141:141:boolean isPushEnabled() -> isPushEnabled
    151:152:io.vertx.core.http.Http2Settings setPushEnabled(boolean) -> setPushEnabled
    159:159:long getMaxConcurrentStreams() -> getMaxConcurrentStreams
    169:174:io.vertx.core.http.Http2Settings setMaxConcurrentStreams(long) -> setMaxConcurrentStreams
    181:181:int getInitialWindowSize() -> getInitialWindowSize
    191:194:io.vertx.core.http.Http2Settings setInitialWindowSize(int) -> setInitialWindowSize
    201:201:int getMaxFrameSize() -> getMaxFrameSize
    211:216:io.vertx.core.http.Http2Settings setMaxFrameSize(int) -> setMaxFrameSize
    223:223:long getMaxHeaderListSize() -> getMaxHeaderListSize
    233:237:io.vertx.core.http.Http2Settings setMaxHeaderListSize(long) -> setMaxHeaderListSize
    245:245:java.util.Map getExtraSettings() -> getExtraSettings
    293:322:io.vertx.core.http.Http2Settings set(int,long) -> set
    327:338:boolean equals(java.lang.Object) -> equals
    343:349:int hashCode() -> hashCode
    354:354:java.lang.String toString() -> toString
    358:360:io.vertx.core.json.JsonObject toJson() -> toJson
    67:67:void <clinit>() -> <clinit>
io.vertx.core.http.Http2SettingsConverter -> io.vertx.core.http.Http2SettingsConverter:
    51:57:void toJson(io.vertx.core.http.Http2Settings,io.vertx.core.json.JsonObject) -> toJson
io.vertx.core.http.HttpClient -> io.vertx.core.http.HttpClient:
io.vertx.core.http.HttpClientOptions -> io.vertx.core.http.HttpClientOptions:
    io.vertx.core.http.HttpVersion DEFAULT_PROTOCOL_VERSION -> DEFAULT_PROTOCOL_VERSION
    java.util.List DEFAULT_ALPN_VERSIONS -> DEFAULT_ALPN_VERSIONS
    boolean verifyHost -> verifyHost
    int maxPoolSize -> maxPoolSize
    boolean keepAlive -> keepAlive
    int pipeliningLimit -> pipeliningLimit
    boolean pipelining -> pipelining
    int http2MaxPoolSize -> http2MaxPoolSize
    int http2MultiplexingLimit -> http2MultiplexingLimit
    int http2ConnectionWindowSize -> http2ConnectionWindowSize
    boolean tryUseCompression -> tryUseCompression
    int maxWebsocketFrameSize -> maxWebsocketFrameSize
    int maxWebsocketMessageSize -> maxWebsocketMessageSize
    java.lang.String defaultHost -> defaultHost
    int defaultPort -> defaultPort
    io.vertx.core.http.HttpVersion protocolVersion -> protocolVersion
    int maxChunkSize -> maxChunkSize
    int maxInitialLineLength -> maxInitialLineLength
    int maxHeaderSize -> maxHeaderSize
    int maxWaitQueueSize -> maxWaitQueueSize
    io.vertx.core.http.Http2Settings initialSettings -> initialSettings
    java.util.List alpnVersions -> alpnVersions
    boolean http2ClearTextUpgrade -> http2ClearTextUpgrade
    boolean sendUnmaskedFrames -> sendUnmaskedFrames
    int maxRedirects -> maxRedirects
    boolean forceSni -> forceSni
    int decoderInitialBufferSize -> decoderInitialBufferSize
    153:186:void <init>() -> <init>
    153:220:void <init>(io.vertx.core.http.HttpClientOptions) -> <init>
    239:241:io.vertx.core.json.JsonObject toJson() -> toJson
    245:270:void init() -> init
    274:275:io.vertx.core.http.HttpClientOptions setSendBufferSize(int) -> setSendBufferSize
    280:281:io.vertx.core.http.HttpClientOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    286:287:io.vertx.core.http.HttpClientOptions setReuseAddress(boolean) -> setReuseAddress
    292:293:io.vertx.core.http.HttpClientOptions setReusePort(boolean) -> setReusePort
    298:299:io.vertx.core.http.HttpClientOptions setTrafficClass(int) -> setTrafficClass
    304:305:io.vertx.core.http.HttpClientOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    310:311:io.vertx.core.http.HttpClientOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    316:317:io.vertx.core.http.HttpClientOptions setSoLinger(int) -> setSoLinger
    322:323:io.vertx.core.http.HttpClientOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    328:329:io.vertx.core.http.HttpClientOptions setIdleTimeout(int) -> setIdleTimeout
    334:335:io.vertx.core.http.HttpClientOptions setSsl(boolean) -> setSsl
    346:347:io.vertx.core.http.HttpClientOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    352:352:io.vertx.core.http.HttpClientOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    363:363:io.vertx.core.http.HttpClientOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    368:369:io.vertx.core.http.HttpClientOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    374:374:io.vertx.core.http.HttpClientOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    379:379:io.vertx.core.http.HttpClientOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    384:385:io.vertx.core.http.HttpClientOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    401:401:io.vertx.core.http.HttpClientOptions setTcpFastOpen(boolean) -> setTcpFastOpen
    406:406:io.vertx.core.http.HttpClientOptions setTcpCork(boolean) -> setTcpCork
    411:411:io.vertx.core.http.HttpClientOptions setTcpQuickAck(boolean) -> setTcpQuickAck
    416:416:io.vertx.core.http.HttpClientOptions addCrlPath(java.lang.String) -> addCrlPath
    421:421:io.vertx.core.http.HttpClientOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    426:427:io.vertx.core.http.HttpClientOptions setConnectTimeout(int) -> setConnectTimeout
    432:433:io.vertx.core.http.HttpClientOptions setTrustAll(boolean) -> setTrustAll
    442:442:int getMaxPoolSize() -> getMaxPoolSize
    464:464:int getHttp2MultiplexingLimit() -> getHttp2MultiplexingLimit
    492:492:int getHttp2MaxPoolSize() -> getHttp2MaxPoolSize
    513:513:int getHttp2ConnectionWindowSize() -> getHttp2ConnectionWindowSize
    537:537:boolean isKeepAlive() -> isKeepAlive
    557:557:boolean isPipelining() -> isPipelining
    575:575:int getPipeliningLimit() -> getPipeliningLimit
    598:598:boolean isVerifyHost() -> isVerifyHost
    618:618:boolean isTryUseCompression() -> isTryUseCompression
    638:638:boolean isSendUnmaskedFrames() -> isSendUnmaskedFrames
    661:661:int getMaxWebsocketFrameSize() -> getMaxWebsocketFrameSize
    681:681:int getMaxWebsocketMessageSize() -> getMaxWebsocketMessageSize
    701:701:java.lang.String getDefaultHost() -> getDefaultHost
    720:720:int getDefaultPort() -> getDefaultPort
    739:739:io.vertx.core.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    771:771:int getMaxChunkSize() -> getMaxChunkSize
    778:778:int getMaxInitialLineLength() -> getMaxInitialLineLength
    796:796:int getMaxHeaderSize() -> getMaxHeaderSize
    826:826:int getMaxWaitQueueSize() -> getMaxWaitQueueSize
    833:833:io.vertx.core.http.Http2Settings getInitialSettings() -> getInitialSettings
    849:849:io.vertx.core.http.HttpClientOptions setUseAlpn(boolean) -> setUseAlpn
    854:854:io.vertx.core.http.HttpClientOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    859:859:io.vertx.core.http.HttpClientOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    864:864:io.vertx.core.http.HttpClientOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    872:872:java.util.List getAlpnVersions() -> getAlpnVersions
    896:896:boolean isHttp2ClearTextUpgrade() -> isHttp2ClearTextUpgrade
    915:915:int getMaxRedirects() -> getMaxRedirects
    933:933:boolean isForceSni() -> isForceSni
    949:949:io.vertx.core.http.HttpClientOptions setMetricsName(java.lang.String) -> setMetricsName
    953:953:io.vertx.core.http.HttpClientOptions setProxyOptions(io.vertx.core.net.ProxyOptions) -> setProxyOptions
    958:958:io.vertx.core.http.HttpClientOptions setLocalAddress(java.lang.String) -> setLocalAddress
    963:963:io.vertx.core.http.HttpClientOptions setLogActivity(boolean) -> setLogActivity
    969:969:int getDecoderInitialBufferSize() -> getDecoderInitialBufferSize
    984:1012:boolean equals(java.lang.Object) -> equals
    1017:1039:int hashCode() -> hashCode
    29:29:io.vertx.core.net.ClientOptionsBase setTcpQuickAck(boolean) -> setTcpQuickAck
    29:29:io.vertx.core.net.ClientOptionsBase setTcpCork(boolean) -> setTcpCork
    29:29:io.vertx.core.net.ClientOptionsBase setTcpFastOpen(boolean) -> setTcpFastOpen
    29:29:io.vertx.core.net.ClientOptionsBase addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    29:29:io.vertx.core.net.ClientOptionsBase addCrlPath(java.lang.String) -> addCrlPath
    29:29:io.vertx.core.net.ClientOptionsBase addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    29:29:io.vertx.core.net.ClientOptionsBase setTrafficClass(int) -> setTrafficClass
    29:29:io.vertx.core.net.ClientOptionsBase setReusePort(boolean) -> setReusePort
    29:29:io.vertx.core.net.ClientOptionsBase setReuseAddress(boolean) -> setReuseAddress
    29:29:io.vertx.core.net.ClientOptionsBase setReceiveBufferSize(int) -> setReceiveBufferSize
    29:29:io.vertx.core.net.ClientOptionsBase setSendBufferSize(int) -> setSendBufferSize
    29:29:io.vertx.core.net.ClientOptionsBase setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    29:29:io.vertx.core.net.ClientOptionsBase setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    29:29:io.vertx.core.net.ClientOptionsBase setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    29:29:io.vertx.core.net.ClientOptionsBase setUseAlpn(boolean) -> setUseAlpn
    29:29:io.vertx.core.net.ClientOptionsBase setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    29:29:io.vertx.core.net.ClientOptionsBase setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    29:29:io.vertx.core.net.ClientOptionsBase setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    29:29:io.vertx.core.net.ClientOptionsBase setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    29:29:io.vertx.core.net.ClientOptionsBase setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    29:29:io.vertx.core.net.ClientOptionsBase setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    29:29:io.vertx.core.net.ClientOptionsBase setSsl(boolean) -> setSsl
    29:29:io.vertx.core.net.ClientOptionsBase setIdleTimeout(int) -> setIdleTimeout
    29:29:io.vertx.core.net.ClientOptionsBase setUsePooledBuffers(boolean) -> setUsePooledBuffers
    29:29:io.vertx.core.net.ClientOptionsBase setSoLinger(int) -> setSoLinger
    29:29:io.vertx.core.net.ClientOptionsBase setTcpKeepAlive(boolean) -> setTcpKeepAlive
    29:29:io.vertx.core.net.ClientOptionsBase setTcpNoDelay(boolean) -> setTcpNoDelay
    29:29:io.vertx.core.net.ClientOptionsBase setLogActivity(boolean) -> setLogActivity
    29:29:io.vertx.core.net.ClientOptionsBase setLocalAddress(java.lang.String) -> setLocalAddress
    29:29:io.vertx.core.net.ClientOptionsBase setProxyOptions(io.vertx.core.net.ProxyOptions) -> setProxyOptions
    29:29:io.vertx.core.net.ClientOptionsBase setMetricsName(java.lang.String) -> setMetricsName
    29:29:io.vertx.core.net.ClientOptionsBase setConnectTimeout(int) -> setConnectTimeout
    29:29:io.vertx.core.net.ClientOptionsBase setTrustAll(boolean) -> setTrustAll
    29:29:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> setReusePort
    29:29:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> setTrafficClass
    29:29:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> setReuseAddress
    29:29:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    29:29:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> setSendBufferSize
    29:29:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> setLogActivity
    29:29:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> setTcpQuickAck
    29:29:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> setTcpCork
    29:29:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> setTcpFastOpen
    29:29:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    29:29:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    29:29:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    29:29:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> setUseAlpn
    29:29:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    29:29:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> addCrlPath
    29:29:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    29:29:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    29:29:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    29:29:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    29:29:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    29:29:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    29:29:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    29:29:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> setSsl
    29:29:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> setIdleTimeout
    29:29:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    29:29:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> setSoLinger
    29:29:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    29:29:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    29:29:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> setReusePort
    29:29:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> setLogActivity
    29:29:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> setTrafficClass
    29:29:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> setReuseAddress
    29:29:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    29:29:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> setSendBufferSize
    101:126:void <clinit>() -> <clinit>
io.vertx.core.http.HttpClientOptionsConverter -> io.vertx.core.http.HttpClientOptionsConverter:
    113:148:void toJson(io.vertx.core.http.HttpClientOptions,io.vertx.core.json.JsonObject) -> toJson
    115:115:void lambda$toJson$1(io.vertx.core.json.JsonArray,io.vertx.core.http.HttpVersion) -> lambda$toJson$1
io.vertx.core.http.HttpClientRequest -> io.vertx.core.http.HttpClientRequest:
    io.vertx.core.http.HttpClientRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.HttpClientRequest handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.HttpClientRequest pause() -> pause
    io.vertx.core.http.HttpClientRequest resume() -> resume
    io.vertx.core.http.HttpClientRequest endHandler(io.vertx.core.Handler) -> endHandler
    io.vertx.core.http.HttpMethod method() -> method
    java.lang.String absoluteURI() -> absoluteURI
    io.vertx.core.http.HttpClientRequest setHost(java.lang.String) -> setHost
    io.vertx.core.MultiMap headers() -> headers
    void end() -> end
    54:54:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    54:54:io.vertx.core.streams.ReadStream resume() -> resume
    54:54:io.vertx.core.streams.ReadStream pause() -> pause
    54:54:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    54:54:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.HttpClientResponse -> io.vertx.core.http.HttpClientResponse:
    io.vertx.core.http.HttpClientResponse resume() -> resume
    io.vertx.core.http.HttpClientResponse exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.HttpClientResponse handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.HttpClientResponse pause() -> pause
    io.vertx.core.http.HttpClientResponse endHandler(io.vertx.core.Handler) -> endHandler
    io.vertx.core.http.HttpVersion version() -> version
    int statusCode() -> statusCode
    java.lang.String statusMessage() -> statusMessage
    io.vertx.core.MultiMap headers() -> headers
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.CharSequence) -> getHeader
    java.lang.String getTrailer(java.lang.String) -> getTrailer
    io.vertx.core.MultiMap trailers() -> trailers
    java.util.List cookies() -> cookies
    io.vertx.core.http.HttpClientResponse bodyHandler(io.vertx.core.Handler) -> bodyHandler
    io.vertx.core.http.HttpClientResponse customFrameHandler(io.vertx.core.Handler) -> customFrameHandler
    io.vertx.core.net.NetSocket netSocket() -> netSocket
    io.vertx.core.http.HttpClientRequest request() -> request
    38:38:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    38:38:io.vertx.core.streams.ReadStream resume() -> resume
    38:38:io.vertx.core.streams.ReadStream pause() -> pause
    38:38:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    38:38:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.HttpConnection -> io.vertx.core.http.HttpConnection:
io.vertx.core.http.HttpFrame -> io.vertx.core.http.HttpFrame:
io.vertx.core.http.HttpHeaders -> io.vertx.core.http.HttpHeaders:
    java.lang.CharSequence ACCEPT -> ACCEPT
    java.lang.CharSequence ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.CharSequence ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.CharSequence ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.CharSequence ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.CharSequence ACCEPT_PATCH -> ACCEPT_PATCH
    java.lang.CharSequence ACCESS_CONTROL_ALLOW_CREDENTIALS -> ACCESS_CONTROL_ALLOW_CREDENTIALS
    java.lang.CharSequence ACCESS_CONTROL_ALLOW_HEADERS -> ACCESS_CONTROL_ALLOW_HEADERS
    java.lang.CharSequence ACCESS_CONTROL_ALLOW_METHODS -> ACCESS_CONTROL_ALLOW_METHODS
    java.lang.CharSequence ACCESS_CONTROL_ALLOW_ORIGIN -> ACCESS_CONTROL_ALLOW_ORIGIN
    java.lang.CharSequence ACCESS_CONTROL_EXPOSE_HEADERS -> ACCESS_CONTROL_EXPOSE_HEADERS
    java.lang.CharSequence ACCESS_CONTROL_MAX_AGE -> ACCESS_CONTROL_MAX_AGE
    java.lang.CharSequence ACCESS_CONTROL_REQUEST_HEADERS -> ACCESS_CONTROL_REQUEST_HEADERS
    java.lang.CharSequence ACCESS_CONTROL_REQUEST_METHOD -> ACCESS_CONTROL_REQUEST_METHOD
    java.lang.CharSequence AGE -> AGE
    java.lang.CharSequence ALLOW -> ALLOW
    java.lang.CharSequence AUTHORIZATION -> AUTHORIZATION
    java.lang.CharSequence CACHE_CONTROL -> CACHE_CONTROL
    java.lang.CharSequence CONNECTION -> CONNECTION
    java.lang.CharSequence CONTENT_BASE -> CONTENT_BASE
    java.lang.CharSequence CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.CharSequence CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.CharSequence CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.CharSequence CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.CharSequence CONTENT_TRANSFER_ENCODING -> CONTENT_TRANSFER_ENCODING
    java.lang.CharSequence CONTENT_MD5 -> CONTENT_MD5
    java.lang.CharSequence CONTENT_RANGE -> CONTENT_RANGE
    java.lang.CharSequence CONTENT_TYPE -> CONTENT_TYPE
    java.lang.CharSequence COOKIE -> COOKIE
    java.lang.CharSequence DATE -> DATE
    java.lang.CharSequence ETAG -> ETAG
    java.lang.CharSequence EXPECT -> EXPECT
    java.lang.CharSequence EXPIRES -> EXPIRES
    java.lang.CharSequence FROM -> FROM
    java.lang.CharSequence HOST -> HOST
    java.lang.CharSequence IF_MATCH -> IF_MATCH
    java.lang.CharSequence IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.CharSequence IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.CharSequence LAST_MODIFIED -> LAST_MODIFIED
    java.lang.CharSequence LOCATION -> LOCATION
    java.lang.CharSequence ORIGIN -> ORIGIN
    java.lang.CharSequence PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.CharSequence PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.CharSequence REFERER -> REFERER
    java.lang.CharSequence RETRY_AFTER -> RETRY_AFTER
    java.lang.CharSequence SERVER -> SERVER
    java.lang.CharSequence TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.CharSequence USER_AGENT -> USER_AGENT
    java.lang.CharSequence SET_COOKIE -> SET_COOKIE
    java.lang.CharSequence APPLICATION_X_WWW_FORM_URLENCODED -> APPLICATION_X_WWW_FORM_URLENCODED
    java.lang.CharSequence CHUNKED -> CHUNKED
    java.lang.CharSequence CLOSE -> CLOSE
    java.lang.CharSequence CONTINUE -> CONTINUE
    java.lang.CharSequence IDENTITY -> IDENTITY
    java.lang.CharSequence KEEP_ALIVE -> KEEP_ALIVE
    java.lang.CharSequence UPGRADE -> UPGRADE
    java.lang.CharSequence WEBSOCKET -> WEBSOCKET
    java.lang.CharSequence DEFLATE_GZIP -> DEFLATE_GZIP
    java.lang.CharSequence TEXT_HTML -> TEXT_HTML
    java.lang.CharSequence GET -> GET
    327:327:java.lang.CharSequence createOptimized(java.lang.String) -> createOptimized
    27:319:void <clinit>() -> <clinit>
io.vertx.core.http.HttpMethod -> io.vertx.core.http.HttpMethod:
    io.vertx.core.http.HttpMethod OPTIONS -> OPTIONS
    io.vertx.core.http.HttpMethod GET -> GET
    io.vertx.core.http.HttpMethod HEAD -> HEAD
    io.vertx.core.http.HttpMethod POST -> POST
    io.vertx.core.http.HttpMethod PUT -> PUT
    io.vertx.core.http.HttpMethod DELETE -> DELETE
    io.vertx.core.http.HttpMethod TRACE -> TRACE
    io.vertx.core.http.HttpMethod CONNECT -> CONNECT
    io.vertx.core.http.HttpMethod PATCH -> PATCH
    io.vertx.core.http.HttpMethod OTHER -> OTHER
    io.vertx.core.http.HttpMethod[] $VALUES -> $VALUES
    21:21:io.vertx.core.http.HttpMethod[] values() -> values
    21:21:io.vertx.core.http.HttpMethod valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    21:23:void <clinit>() -> <clinit>
io.vertx.core.http.HttpServer -> io.vertx.core.http.HttpServer:
    io.vertx.core.streams.ReadStream requestStream() -> requestStream
    io.vertx.core.http.HttpServer listen(int) -> listen
io.vertx.core.http.HttpServerFileUpload -> io.vertx.core.http.HttpServerFileUpload:
    io.vertx.core.http.HttpServerFileUpload exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.HttpServerFileUpload handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.HttpServerFileUpload endHandler(io.vertx.core.Handler) -> endHandler
    io.vertx.core.http.HttpServerFileUpload pause() -> pause
    io.vertx.core.http.HttpServerFileUpload resume() -> resume
    25:25:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    25:25:io.vertx.core.streams.ReadStream resume() -> resume
    25:25:io.vertx.core.streams.ReadStream pause() -> pause
    25:25:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    25:25:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.HttpServerOptions -> io.vertx.core.http.HttpServerOptions:
    java.util.List DEFAULT_ALPN_VERSIONS -> DEFAULT_ALPN_VERSIONS
    boolean compressionSupported -> compressionSupported
    int compressionLevel -> compressionLevel
    int maxWebsocketFrameSize -> maxWebsocketFrameSize
    int maxWebsocketMessageSize -> maxWebsocketMessageSize
    java.lang.String websocketSubProtocols -> websocketSubProtocols
    boolean handle100ContinueAutomatically -> handle100ContinueAutomatically
    int maxChunkSize -> maxChunkSize
    int maxInitialLineLength -> maxInitialLineLength
    int maxHeaderSize -> maxHeaderSize
    io.vertx.core.http.Http2Settings initialSettings -> initialSettings
    java.util.List alpnVersions -> alpnVersions
    int http2ConnectionWindowSize -> http2ConnectionWindowSize
    boolean decompressionSupported -> decompressionSupported
    boolean acceptUnmaskedFrames -> acceptUnmaskedFrames
    int decoderInitialBufferSize -> decoderInitialBufferSize
    129:132:void <init>() -> <init>
    140:156:void <init>(io.vertx.core.http.HttpServerOptions) -> <init>
    176:178:io.vertx.core.json.JsonObject toJson() -> toJson
    182:196:void init() -> init
    200:201:io.vertx.core.http.HttpServerOptions setSendBufferSize(int) -> setSendBufferSize
    206:207:io.vertx.core.http.HttpServerOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    212:213:io.vertx.core.http.HttpServerOptions setReuseAddress(boolean) -> setReuseAddress
    218:219:io.vertx.core.http.HttpServerOptions setReusePort(boolean) -> setReusePort
    224:225:io.vertx.core.http.HttpServerOptions setTrafficClass(int) -> setTrafficClass
    230:231:io.vertx.core.http.HttpServerOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    236:237:io.vertx.core.http.HttpServerOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    242:243:io.vertx.core.http.HttpServerOptions setSoLinger(int) -> setSoLinger
    248:249:io.vertx.core.http.HttpServerOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    254:255:io.vertx.core.http.HttpServerOptions setIdleTimeout(int) -> setIdleTimeout
    260:261:io.vertx.core.http.HttpServerOptions setSsl(boolean) -> setSsl
    266:267:io.vertx.core.http.HttpServerOptions setUseAlpn(boolean) -> setUseAlpn
    278:279:io.vertx.core.http.HttpServerOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    284:284:io.vertx.core.http.HttpServerOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    289:289:io.vertx.core.http.HttpServerOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    300:301:io.vertx.core.http.HttpServerOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    306:306:io.vertx.core.http.HttpServerOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    311:311:io.vertx.core.http.HttpServerOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    316:317:io.vertx.core.http.HttpServerOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    333:333:io.vertx.core.http.HttpServerOptions setTcpFastOpen(boolean) -> setTcpFastOpen
    338:338:io.vertx.core.http.HttpServerOptions setTcpCork(boolean) -> setTcpCork
    343:343:io.vertx.core.http.HttpServerOptions setTcpQuickAck(boolean) -> setTcpQuickAck
    348:348:io.vertx.core.http.HttpServerOptions addCrlPath(java.lang.String) -> addCrlPath
    353:353:io.vertx.core.http.HttpServerOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    358:359:io.vertx.core.http.HttpServerOptions setAcceptBacklog(int) -> setAcceptBacklog
    363:364:io.vertx.core.http.HttpServerOptions setPort(int) -> setPort
    369:370:io.vertx.core.http.HttpServerOptions setHost(java.lang.String) -> setHost
    376:377:io.vertx.core.http.HttpServerOptions setClientAuthRequired(boolean) -> setClientAuthRequired
    382:383:io.vertx.core.http.HttpServerOptions setClientAuth(io.vertx.core.http.ClientAuth) -> setClientAuth
    388:389:io.vertx.core.http.HttpServerOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    394:394:io.vertx.core.http.HttpServerOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    399:399:io.vertx.core.http.HttpServerOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    406:406:boolean isCompressionSupported() -> isCompressionSupported
    426:426:int getCompressionLevel() -> getCompressionLevel
    462:462:boolean isAcceptUnmaskedFrames() -> isAcceptUnmaskedFrames
    482:482:int getMaxWebsocketFrameSize() -> getMaxWebsocketFrameSize
    500:500:int getMaxWebsocketMessageSize() -> getMaxWebsocketMessageSize
    529:529:java.lang.String getWebsocketSubProtocols() -> getWebsocketSubProtocols
    536:536:boolean isHandle100ContinueAutomatically() -> isHandle100ContinueAutomatically
    564:564:int getMaxChunkSize() -> getMaxChunkSize
    572:572:int getMaxInitialLineLength() -> getMaxInitialLineLength
    590:590:int getMaxHeaderSize() -> getMaxHeaderSize
    608:608:io.vertx.core.http.Http2Settings getInitialSettings() -> getInitialSettings
    626:626:java.util.List getAlpnVersions() -> getAlpnVersions
    644:644:int getHttp2ConnectionWindowSize() -> getHttp2ConnectionWindowSize
    664:664:io.vertx.core.http.HttpServerOptions setLogActivity(boolean) -> setLogActivity
    668:668:io.vertx.core.http.HttpServerOptions setSni(boolean) -> setSni
    675:675:boolean isDecompressionSupported() -> isDecompressionSupported
    692:692:int getDecoderInitialBufferSize() -> getDecoderInitialBufferSize
    707:727:boolean equals(java.lang.Object) -> equals
    733:748:int hashCode() -> hashCode
    30:30:io.vertx.core.net.NetServerOptions setSni(boolean) -> setSni
    30:30:io.vertx.core.net.NetServerOptions setLogActivity(boolean) -> setLogActivity
    30:30:io.vertx.core.net.NetServerOptions setClientAuth(io.vertx.core.http.ClientAuth) -> setClientAuth
    30:30:io.vertx.core.net.NetServerOptions setClientAuthRequired(boolean) -> setClientAuthRequired
    30:30:io.vertx.core.net.NetServerOptions setHost(java.lang.String) -> setHost
    30:30:io.vertx.core.net.NetServerOptions setPort(int) -> setPort
    30:30:io.vertx.core.net.NetServerOptions setAcceptBacklog(int) -> setAcceptBacklog
    30:30:io.vertx.core.net.NetServerOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    30:30:io.vertx.core.net.NetServerOptions addCrlPath(java.lang.String) -> addCrlPath
    30:30:io.vertx.core.net.NetServerOptions setTcpQuickAck(boolean) -> setTcpQuickAck
    30:30:io.vertx.core.net.NetServerOptions setTcpCork(boolean) -> setTcpCork
    30:30:io.vertx.core.net.NetServerOptions setTcpFastOpen(boolean) -> setTcpFastOpen
    30:30:io.vertx.core.net.NetServerOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    30:30:io.vertx.core.net.NetServerOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    30:30:io.vertx.core.net.NetServerOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    30:30:io.vertx.core.net.NetServerOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    30:30:io.vertx.core.net.NetServerOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    30:30:io.vertx.core.net.NetServerOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    30:30:io.vertx.core.net.NetServerOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    30:30:io.vertx.core.net.NetServerOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    30:30:io.vertx.core.net.NetServerOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    30:30:io.vertx.core.net.NetServerOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    30:30:io.vertx.core.net.NetServerOptions setUseAlpn(boolean) -> setUseAlpn
    30:30:io.vertx.core.net.NetServerOptions setSsl(boolean) -> setSsl
    30:30:io.vertx.core.net.NetServerOptions setIdleTimeout(int) -> setIdleTimeout
    30:30:io.vertx.core.net.NetServerOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    30:30:io.vertx.core.net.NetServerOptions setSoLinger(int) -> setSoLinger
    30:30:io.vertx.core.net.NetServerOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    30:30:io.vertx.core.net.NetServerOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    30:30:io.vertx.core.net.NetServerOptions setTrafficClass(int) -> setTrafficClass
    30:30:io.vertx.core.net.NetServerOptions setReusePort(boolean) -> setReusePort
    30:30:io.vertx.core.net.NetServerOptions setReuseAddress(boolean) -> setReuseAddress
    30:30:io.vertx.core.net.NetServerOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    30:30:io.vertx.core.net.NetServerOptions setSendBufferSize(int) -> setSendBufferSize
    30:30:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> setReusePort
    30:30:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> setTrafficClass
    30:30:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> setReuseAddress
    30:30:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    30:30:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> setSendBufferSize
    30:30:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> setLogActivity
    30:30:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> setTcpQuickAck
    30:30:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> setTcpCork
    30:30:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> setTcpFastOpen
    30:30:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    30:30:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    30:30:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    30:30:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> setUseAlpn
    30:30:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    30:30:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> addCrlPath
    30:30:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    30:30:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    30:30:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    30:30:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    30:30:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    30:30:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    30:30:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    30:30:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> setSsl
    30:30:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> setIdleTimeout
    30:30:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    30:30:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> setSoLinger
    30:30:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    30:30:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    30:30:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> setReusePort
    30:30:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> setLogActivity
    30:30:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> setTrafficClass
    30:30:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> setReuseAddress
    30:30:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    30:30:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> setSendBufferSize
    82:82:void <clinit>() -> <clinit>
io.vertx.core.http.HttpServerOptionsConverter -> io.vertx.core.http.HttpServerOptionsConverter:
    83:106:void toJson(io.vertx.core.http.HttpServerOptions,io.vertx.core.json.JsonObject) -> toJson
    86:86:void lambda$toJson$1(io.vertx.core.json.JsonArray,io.vertx.core.http.HttpVersion) -> lambda$toJson$1
io.vertx.core.http.HttpServerRequest -> io.vertx.core.http.HttpServerRequest:
    io.vertx.core.http.HttpServerRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.HttpServerRequest handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.HttpServerRequest pause() -> pause
    io.vertx.core.http.HttpServerRequest resume() -> resume
    io.vertx.core.http.HttpServerRequest endHandler(io.vertx.core.Handler) -> endHandler
    java.lang.String rawMethod() -> rawMethod
    java.lang.String scheme() -> scheme
    java.lang.String uri() -> uri
    java.lang.String path() -> path
    java.lang.String query() -> query
    java.lang.String host() -> host
    io.vertx.core.http.HttpServerResponse response() -> response
    io.vertx.core.MultiMap headers() -> headers
    java.lang.String getHeader(java.lang.String) -> getHeader
    io.vertx.core.MultiMap params() -> params
    java.lang.String absoluteURI() -> absoluteURI
    206:211:io.vertx.core.http.HttpServerRequest bodyHandler(io.vertx.core.Handler) -> bodyHandler
    43:43:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    43:43:io.vertx.core.streams.ReadStream resume() -> resume
    43:43:io.vertx.core.streams.ReadStream pause() -> pause
    43:43:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    43:43:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    209:209:void lambda$bodyHandler$0(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void) -> lambda$bodyHandler$0
io.vertx.core.http.HttpServerResponse -> io.vertx.core.http.HttpServerResponse:
    io.vertx.core.http.HttpServerResponse setStatusCode(int) -> setStatusCode
    io.vertx.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.String) -> putHeader
    void end(io.vertx.core.buffer.Buffer) -> end
    void end() -> end
    void close() -> close
io.vertx.core.http.HttpVersion -> io.vertx.core.http.HttpVersion:
    io.vertx.core.http.HttpVersion HTTP_1_0 -> HTTP_1_0
    io.vertx.core.http.HttpVersion HTTP_1_1 -> HTTP_1_1
    io.vertx.core.http.HttpVersion HTTP_2 -> HTTP_2
    io.vertx.core.http.HttpVersion[] $VALUES -> $VALUES
    21:21:io.vertx.core.http.HttpVersion[] values() -> values
    21:21:io.vertx.core.http.HttpVersion valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    21:23:void <clinit>() -> <clinit>
io.vertx.core.http.RequestOptions -> io.vertx.core.http.RequestOptions:
    java.lang.String host -> host
    int port -> port
    boolean ssl -> ssl
    java.lang.String uri -> uri
    53:58:void <init>() -> <init>
    91:91:java.lang.String getHost() -> getHost
    100:101:io.vertx.core.http.RequestOptions setHost(java.lang.String) -> setHost
    110:110:int getPort() -> getPort
    119:120:io.vertx.core.http.RequestOptions setPort(int) -> setPort
    127:127:boolean isSsl() -> isSsl
    137:138:io.vertx.core.http.RequestOptions setSsl(boolean) -> setSsl
    145:145:java.lang.String getURI() -> getURI
    155:156:io.vertx.core.http.RequestOptions setURI(java.lang.String) -> setURI
io.vertx.core.http.ServerWebSocket -> io.vertx.core.http.ServerWebSocket:
    io.vertx.core.http.ServerWebSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.ServerWebSocket handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.ServerWebSocket pause() -> pause
    io.vertx.core.http.ServerWebSocket resume() -> resume
    io.vertx.core.http.ServerWebSocket endHandler(io.vertx.core.Handler) -> endHandler
    34:34:io.vertx.core.http.WebSocketBase endHandler(io.vertx.core.Handler) -> endHandler
    34:34:io.vertx.core.http.WebSocketBase resume() -> resume
    34:34:io.vertx.core.http.WebSocketBase pause() -> pause
    34:34:io.vertx.core.http.WebSocketBase handler(io.vertx.core.Handler) -> handler
    34:34:io.vertx.core.http.WebSocketBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    34:34:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    34:34:io.vertx.core.streams.ReadStream resume() -> resume
    34:34:io.vertx.core.streams.ReadStream pause() -> pause
    34:34:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    34:34:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.StreamResetException -> io.vertx.core.http.StreamResetException:
    long code -> code
    26:28:void <init>(long) -> <init>
io.vertx.core.http.WebSocket -> io.vertx.core.http.WebSocket:
    io.vertx.core.http.WebSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.WebSocket handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.WebSocket pause() -> pause
    io.vertx.core.http.WebSocket resume() -> resume
    io.vertx.core.http.WebSocket endHandler(io.vertx.core.Handler) -> endHandler
    23:23:io.vertx.core.http.WebSocketBase endHandler(io.vertx.core.Handler) -> endHandler
    23:23:io.vertx.core.http.WebSocketBase resume() -> resume
    23:23:io.vertx.core.http.WebSocketBase pause() -> pause
    23:23:io.vertx.core.http.WebSocketBase handler(io.vertx.core.Handler) -> handler
    23:23:io.vertx.core.http.WebSocketBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    23:23:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    23:23:io.vertx.core.streams.ReadStream resume() -> resume
    23:23:io.vertx.core.streams.ReadStream pause() -> pause
    23:23:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    23:23:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.WebSocketBase -> io.vertx.core.http.WebSocketBase:
    io.vertx.core.http.WebSocketBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.WebSocketBase handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.WebSocketBase pause() -> pause
    io.vertx.core.http.WebSocketBase resume() -> resume
    io.vertx.core.http.WebSocketBase endHandler(io.vertx.core.Handler) -> endHandler
    38:38:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    38:38:io.vertx.core.streams.ReadStream resume() -> resume
    38:38:io.vertx.core.streams.ReadStream pause() -> pause
    38:38:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    38:38:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.WebSocketFrame -> io.vertx.core.http.WebSocketFrame:
    io.vertx.core.spi.WebSocketFrameFactory factory -> factory
    46:46:io.vertx.core.http.WebSocketFrame binaryFrame(io.vertx.core.buffer.Buffer,boolean) -> binaryFrame
    57:57:io.vertx.core.http.WebSocketFrame textFrame(java.lang.String,boolean) -> textFrame
    67:67:io.vertx.core.http.WebSocketFrame pingFrame(io.vertx.core.buffer.Buffer) -> pingFrame
    77:77:io.vertx.core.http.WebSocketFrame pongFrame(io.vertx.core.buffer.Buffer) -> pongFrame
    88:88:io.vertx.core.http.WebSocketFrame continuationFrame(io.vertx.core.buffer.Buffer,boolean) -> continuationFrame
    io.vertx.core.buffer.Buffer binaryData() -> binaryData
    boolean isFinal() -> isFinal
    139:139:void <clinit>() -> <clinit>
io.vertx.core.http.WebsocketRejectedException -> io.vertx.core.http.WebsocketRejectedException:
    int status -> status
    24:26:void <init>(int) -> <init>
io.vertx.core.http.WebsocketVersion -> io.vertx.core.http.WebsocketVersion:
    io.vertx.core.http.WebsocketVersion V00 -> V00
    io.vertx.core.http.WebsocketVersion V07 -> V07
    io.vertx.core.http.WebsocketVersion V08 -> V08
    io.vertx.core.http.WebsocketVersion V13 -> V13
    io.vertx.core.http.WebsocketVersion[] $VALUES -> $VALUES
    21:21:io.vertx.core.http.WebsocketVersion[] values() -> values
    21:21:io.vertx.core.http.WebsocketVersion valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    21:23:void <clinit>() -> <clinit>
io.vertx.core.http.impl.AssembledFullHttpRequest -> io.vertx.core.http.impl.AssembledFullHttpRequest:
    33:34:void <init>(io.netty.handler.codec.http.HttpRequest,io.netty.handler.codec.http.LastHttpContent) -> <init>
    37:38:void <init>(io.netty.handler.codec.http.HttpRequest) -> <init>
    41:42:void <init>(io.netty.handler.codec.http.HttpRequest,io.netty.buffer.ByteBuf) -> <init>
    45:48:io.netty.handler.codec.http.LastHttpContent toLastContent(io.netty.buffer.ByteBuf) -> toLastContent
    54:55:io.vertx.core.http.impl.AssembledFullHttpRequest replace(io.netty.buffer.ByteBuf) -> replace
    60:61:io.vertx.core.http.impl.AssembledFullHttpRequest retainedDuplicate() -> retainedDuplicate
    66:67:io.vertx.core.http.impl.AssembledFullHttpRequest setUri(java.lang.String) -> setUri
    72:73:io.vertx.core.http.impl.AssembledFullHttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    78:79:io.vertx.core.http.impl.AssembledFullHttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    84:84:io.vertx.core.http.impl.AssembledFullHttpRequest duplicate() -> duplicate
    89:89:io.vertx.core.http.impl.AssembledFullHttpRequest copy() -> copy
    94:94:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    99:100:io.vertx.core.http.impl.AssembledFullHttpRequest retain() -> retain
    105:106:io.vertx.core.http.impl.AssembledFullHttpRequest retain(int) -> retain
    111:112:io.vertx.core.http.impl.AssembledFullHttpRequest touch(java.lang.Object) -> touch
    117:118:io.vertx.core.http.impl.AssembledFullHttpRequest touch() -> touch
    30:30:io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    30:30:io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    30:30:io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    30:30:io.vertx.core.http.impl.AssembledHttpRequest touch() -> touch
    30:30:io.vertx.core.http.impl.AssembledHttpRequest touch(java.lang.Object) -> touch
    30:30:io.vertx.core.http.impl.AssembledHttpRequest retain(int) -> retain
    30:30:io.vertx.core.http.impl.AssembledHttpRequest retain() -> retain
    30:30:io.netty.handler.codec.http.HttpContent replace(io.netty.buffer.ByteBuf) -> replace
    30:30:io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    30:30:io.vertx.core.http.impl.AssembledHttpRequest duplicate() -> duplicate
    30:30:io.vertx.core.http.impl.AssembledHttpRequest copy() -> copy
    30:30:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.HttpContent touch() -> touch
    30:30:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    30:30:io.netty.handler.codec.http.HttpContent retain() -> retain
    30:30:io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    30:30:io.netty.handler.codec.http.HttpContent copy() -> copy
    30:30:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    30:30:io.netty.buffer.ByteBufHolder touch() -> touch
    30:30:io.netty.buffer.ByteBufHolder retain(int) -> retain
    30:30:io.netty.buffer.ByteBufHolder retain() -> retain
    30:30:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    30:30:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    30:30:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    30:30:io.netty.buffer.ByteBufHolder copy() -> copy
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
    30:30:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    30:30:io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
    30:30:io.netty.handler.codec.http.FullHttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    30:30:io.netty.handler.codec.http.FullHttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    30:30:io.netty.handler.codec.http.FullHttpRequest touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.FullHttpRequest touch() -> touch
    30:30:io.netty.handler.codec.http.FullHttpRequest retain() -> retain
    30:30:io.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    30:30:io.netty.handler.codec.http.FullHttpRequest replace(io.netty.buffer.ByteBuf) -> replace
    30:30:io.netty.handler.codec.http.FullHttpRequest retainedDuplicate() -> retainedDuplicate
    30:30:io.netty.handler.codec.http.FullHttpRequest duplicate() -> duplicate
    30:30:io.netty.handler.codec.http.FullHttpRequest copy() -> copy
    30:30:io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    30:30:io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    30:30:io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    30:30:io.netty.handler.codec.http.FullHttpMessage replace(io.netty.buffer.ByteBuf) -> replace
    30:30:io.netty.handler.codec.http.FullHttpMessage retainedDuplicate() -> retainedDuplicate
    30:30:io.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    30:30:io.netty.handler.codec.http.FullHttpMessage copy() -> copy
    30:30:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.LastHttpContent touch() -> touch
    30:30:io.netty.handler.codec.http.LastHttpContent retain() -> retain
    30:30:io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    30:30:io.netty.handler.codec.http.LastHttpContent replace(io.netty.buffer.ByteBuf) -> replace
    30:30:io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    30:30:io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    30:30:io.netty.handler.codec.http.LastHttpContent copy() -> copy
io.vertx.core.http.impl.AssembledFullHttpResponse -> io.vertx.core.http.impl.AssembledFullHttpResponse:
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    28:30:void <init>(boolean,io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.handler.codec.http.HttpHeaders,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders) -> <init>
    34:34:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    39:40:io.vertx.core.http.impl.AssembledFullHttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    45:46:io.vertx.core.http.impl.AssembledFullHttpResponse retain(int) -> retain
    51:52:io.vertx.core.http.impl.AssembledFullHttpResponse retain() -> retain
    57:58:io.vertx.core.http.impl.AssembledFullHttpResponse duplicate() -> duplicate
    63:64:io.vertx.core.http.impl.AssembledFullHttpResponse copy() -> copy
    69:70:io.vertx.core.http.impl.AssembledFullHttpResponse retainedDuplicate() -> retainedDuplicate
    75:76:io.vertx.core.http.impl.AssembledFullHttpResponse replace(io.netty.buffer.ByteBuf) -> replace
    81:82:io.vertx.core.http.impl.AssembledFullHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    87:88:io.vertx.core.http.impl.AssembledFullHttpResponse touch() -> touch
    93:94:io.vertx.core.http.impl.AssembledFullHttpResponse touch(java.lang.Object) -> touch
    23:23:io.vertx.core.http.impl.AssembledHttpResponse touch(java.lang.Object) -> touch
    23:23:io.vertx.core.http.impl.AssembledHttpResponse touch() -> touch
    23:23:io.vertx.core.http.impl.AssembledHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    23:23:io.vertx.core.http.impl.AssembledHttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    23:23:io.vertx.core.http.impl.AssembledHttpResponse retain(int) -> retain
    23:23:io.vertx.core.http.impl.AssembledHttpResponse retain() -> retain
    23:23:io.netty.handler.codec.http.HttpContent replace(io.netty.buffer.ByteBuf) -> replace
    23:23:io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    23:23:io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    23:23:io.netty.handler.codec.http.HttpContent copy() -> copy
    23:23:io.netty.handler.codec.http.HttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    23:23:io.netty.handler.codec.http.HttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    23:23:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    23:23:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    23:23:io.netty.handler.codec.http.HttpContent touch() -> touch
    23:23:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    23:23:io.netty.handler.codec.http.HttpContent retain() -> retain
    23:23:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    23:23:io.netty.buffer.ByteBufHolder touch() -> touch
    23:23:io.netty.buffer.ByteBufHolder retain(int) -> retain
    23:23:io.netty.buffer.ByteBufHolder retain() -> retain
    23:23:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    23:23:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    23:23:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    23:23:io.netty.buffer.ByteBufHolder copy() -> copy
    23:23:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    23:23:io.netty.util.ReferenceCounted touch() -> touch
    23:23:io.netty.util.ReferenceCounted retain(int) -> retain
    23:23:io.netty.util.ReferenceCounted retain() -> retain
    23:23:io.netty.handler.codec.http.FullHttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    23:23:io.netty.handler.codec.http.FullHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    23:23:io.netty.handler.codec.http.FullHttpResponse touch(java.lang.Object) -> touch
    23:23:io.netty.handler.codec.http.FullHttpResponse touch() -> touch
    23:23:io.netty.handler.codec.http.FullHttpResponse retain() -> retain
    23:23:io.netty.handler.codec.http.FullHttpResponse retain(int) -> retain
    23:23:io.netty.handler.codec.http.FullHttpResponse replace(io.netty.buffer.ByteBuf) -> replace
    23:23:io.netty.handler.codec.http.FullHttpResponse retainedDuplicate() -> retainedDuplicate
    23:23:io.netty.handler.codec.http.FullHttpResponse duplicate() -> duplicate
    23:23:io.netty.handler.codec.http.FullHttpResponse copy() -> copy
    23:23:io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    23:23:io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    23:23:io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    23:23:io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    23:23:io.netty.handler.codec.http.FullHttpMessage replace(io.netty.buffer.ByteBuf) -> replace
    23:23:io.netty.handler.codec.http.FullHttpMessage retainedDuplicate() -> retainedDuplicate
    23:23:io.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    23:23:io.netty.handler.codec.http.FullHttpMessage copy() -> copy
    23:23:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    23:23:io.netty.handler.codec.http.LastHttpContent touch() -> touch
    23:23:io.netty.handler.codec.http.LastHttpContent retain() -> retain
    23:23:io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    23:23:io.netty.handler.codec.http.LastHttpContent replace(io.netty.buffer.ByteBuf) -> replace
    23:23:io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    23:23:io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    23:23:io.netty.handler.codec.http.LastHttpContent copy() -> copy
io.vertx.core.http.impl.AssembledHttpRequest -> io.vertx.core.http.impl.AssembledHttpRequest:
    io.netty.handler.codec.http.HttpRequest request -> request
    io.netty.handler.codec.http.HttpContent content -> content
    36:37:void <init>(io.netty.handler.codec.http.HttpRequest,io.netty.buffer.ByteBuf) -> <init>
    39:42:void <init>(io.netty.handler.codec.http.HttpRequest,io.netty.handler.codec.http.HttpContent) -> <init>
    46:46:io.vertx.core.http.impl.AssembledHttpRequest copy() -> copy
    51:51:io.vertx.core.http.impl.AssembledHttpRequest duplicate() -> duplicate
    56:56:io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    61:61:io.netty.handler.codec.http.HttpContent replace(io.netty.buffer.ByteBuf) -> replace
    66:67:io.vertx.core.http.impl.AssembledHttpRequest retain() -> retain
    72:73:io.vertx.core.http.impl.AssembledHttpRequest retain(int) -> retain
    78:79:io.vertx.core.http.impl.AssembledHttpRequest touch(java.lang.Object) -> touch
    84:85:io.vertx.core.http.impl.AssembledHttpRequest touch() -> touch
    90:90:io.netty.handler.codec.http.HttpMethod method() -> method
    95:95:io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    100:100:java.lang.String uri() -> uri
    105:105:java.lang.String getUri() -> getUri
    110:110:io.netty.handler.codec.http.HttpHeaders headers() -> headers
    115:115:io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    120:120:io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    125:125:io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    130:130:io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    135:135:io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    140:140:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    145:145:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    150:151:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    155:155:io.netty.buffer.ByteBuf content() -> content
    160:160:int refCnt() -> refCnt
    165:165:boolean release() -> release
    170:170:boolean release(int) -> release
    31:31:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    31:31:io.netty.handler.codec.http.HttpContent touch() -> touch
    31:31:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    31:31:io.netty.handler.codec.http.HttpContent retain() -> retain
    31:31:io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    31:31:io.netty.handler.codec.http.HttpContent copy() -> copy
    31:31:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    31:31:io.netty.buffer.ByteBufHolder touch() -> touch
    31:31:io.netty.buffer.ByteBufHolder retain(int) -> retain
    31:31:io.netty.buffer.ByteBufHolder retain() -> retain
    31:31:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    31:31:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    31:31:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    31:31:io.netty.buffer.ByteBufHolder copy() -> copy
    31:31:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:io.netty.util.ReferenceCounted touch() -> touch
    31:31:io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:io.netty.util.ReferenceCounted retain() -> retain
    31:31:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
io.vertx.core.http.impl.AssembledHttpResponse -> io.vertx.core.http.impl.AssembledHttpResponse:
    boolean head -> head
    io.netty.handler.codec.http.HttpResponseStatus status -> status
    io.netty.handler.codec.http.HttpVersion version -> version
    io.netty.handler.codec.http.HttpHeaders headers -> headers
    io.netty.buffer.ByteBuf content -> content
    io.netty.handler.codec.DecoderResult result -> result
    36:37:void <init>(boolean,io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.handler.codec.http.HttpHeaders) -> <init>
    33:45:void <init>(boolean,io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.handler.codec.http.HttpHeaders,io.netty.buffer.ByteBuf) -> <init>
    48:48:boolean head() -> head
    53:53:io.netty.handler.codec.http.HttpContent copy() -> copy
    58:58:io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    63:63:io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    68:68:io.netty.handler.codec.http.HttpContent replace(io.netty.buffer.ByteBuf) -> replace
    73:74:io.vertx.core.http.impl.AssembledHttpResponse retain() -> retain
    79:80:io.vertx.core.http.impl.AssembledHttpResponse retain(int) -> retain
    85:85:io.netty.handler.codec.http.HttpResponseStatus getStatus() -> getStatus
    90:91:io.vertx.core.http.impl.AssembledHttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    96:97:io.vertx.core.http.impl.AssembledHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    102:102:io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    107:107:io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    112:112:io.netty.handler.codec.http.HttpResponseStatus status() -> status
    117:118:io.vertx.core.http.impl.AssembledHttpResponse touch() -> touch
    123:124:io.vertx.core.http.impl.AssembledHttpResponse touch(java.lang.Object) -> touch
    129:129:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    134:134:io.netty.handler.codec.http.HttpHeaders headers() -> headers
    139:139:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    144:145:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    149:149:io.netty.buffer.ByteBuf content() -> content
    154:154:int refCnt() -> refCnt
    159:159:boolean release() -> release
    164:164:boolean release(int) -> release
    26:26:io.netty.handler.codec.http.HttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    26:26:io.netty.handler.codec.http.HttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    26:26:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    26:26:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    26:26:io.netty.handler.codec.http.HttpContent touch() -> touch
    26:26:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    26:26:io.netty.handler.codec.http.HttpContent retain() -> retain
    26:26:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    26:26:io.netty.buffer.ByteBufHolder touch() -> touch
    26:26:io.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:io.netty.buffer.ByteBufHolder retain() -> retain
    26:26:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    26:26:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    26:26:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:io.netty.buffer.ByteBufHolder copy() -> copy
    26:26:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:io.netty.util.ReferenceCounted touch() -> touch
    26:26:io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:io.netty.util.ReferenceCounted retain() -> retain
io.vertx.core.http.impl.AssembledLastHttpContent -> io.vertx.core.http.impl.AssembledLastHttpContent:
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    io.netty.handler.codec.DecoderResult result -> result
    34:35:void <init>(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders) -> <init>
    38:41:void <init>(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders,io.netty.handler.codec.DecoderResult) -> <init>
    45:45:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    50:50:io.netty.handler.codec.http.LastHttpContent copy() -> copy
    55:56:io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    61:62:io.netty.handler.codec.http.LastHttpContent retain() -> retain
    67:67:io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    72:72:io.netty.handler.codec.http.LastHttpContent replace(io.netty.buffer.ByteBuf) -> replace
    77:77:io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    82:82:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    87:87:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    92:93:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    97:98:io.vertx.core.http.impl.AssembledLastHttpContent touch() -> touch
    103:104:io.vertx.core.http.impl.AssembledLastHttpContent touch(java.lang.Object) -> touch
    27:27:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    27:27:io.netty.buffer.ByteBufHolder touch() -> touch
    27:27:io.netty.buffer.ByteBufHolder retain(int) -> retain
    27:27:io.netty.buffer.ByteBufHolder retain() -> retain
    27:27:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    27:27:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    27:27:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    27:27:io.netty.buffer.ByteBufHolder copy() -> copy
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
    27:27:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.http.LastHttpContent touch() -> touch
    27:27:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.http.HttpContent touch() -> touch
    27:27:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    27:27:io.netty.handler.codec.http.HttpContent retain() -> retain
    27:27:io.netty.handler.codec.http.HttpContent replace(io.netty.buffer.ByteBuf) -> replace
    27:27:io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    27:27:io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    27:27:io.netty.handler.codec.http.HttpContent copy() -> copy
io.vertx.core.http.impl.ConnectionManager -> io.vertx.core.http.impl.ConnectionManager:
    int maxWaitQueueSize -> maxWaitQueueSize
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    io.vertx.core.http.impl.HttpClientImpl client -> client
    java.util.Map connectionMap -> connectionMap
    java.util.Map endpointMap -> endpointMap
    io.vertx.core.http.HttpVersion version -> version
    long maxSize -> maxSize
    39:54:void <init>(io.vertx.core.http.impl.HttpClientImpl,io.vertx.core.spi.metrics.HttpClientMetrics,io.vertx.core.http.HttpVersion,long,int) -> <init>
    109:159:void getConnection(java.lang.String,boolean,int,java.lang.String,io.vertx.core.Handler,java.util.function.BiFunction,java.util.function.BiConsumer) -> getConnection
    162:166:void close() -> close
    112:124:io.vertx.core.http.impl.ConnectionManager$Endpoint lambda$getConnection$1(java.lang.String,int,boolean,java.lang.String,io.vertx.core.http.impl.ConnectionManager$EndpointKey,io.vertx.core.http.impl.ConnectionManager$EndpointKey) -> lambda$getConnection$1
    117:121:void lambda$null$0(java.lang.String,int,java.lang.Object,io.vertx.core.http.impl.ConnectionManager$EndpointKey,java.lang.Void) -> lambda$null$0
    34:34:io.vertx.core.spi.metrics.HttpClientMetrics access$100(io.vertx.core.http.impl.ConnectionManager) -> access$100
io.vertx.core.http.impl.ConnectionManager$1 -> io.vertx.core.http.impl.ConnectionManager$1:
    io.vertx.core.Handler val$connectionHandler -> val$connectionHandler
    io.vertx.core.http.impl.ConnectionManager$Endpoint val$endpoint -> val$endpoint
    java.lang.Object val$metric -> val$metric
    java.util.function.BiConsumer val$onFailure -> val$onFailure
    java.util.function.BiFunction val$onSuccess -> val$onSuccess
    io.vertx.core.http.impl.ConnectionManager this$0 -> this$0
    132:132:void <init>(io.vertx.core.http.impl.ConnectionManager,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionManager$Endpoint,java.lang.Object,java.util.function.BiConsumer,java.util.function.BiFunction) -> <init>
    135:140:void initConnection(io.vertx.core.impl.ContextInternal,io.vertx.core.http.impl.HttpClientConnection) -> initConnection
    143:147:void handleFailure(io.vertx.core.impl.ContextInternal,java.lang.Throwable) -> handleFailure
    150:153:boolean handleConnection(io.vertx.core.impl.ContextInternal,io.vertx.core.http.impl.HttpClientConnection) -> handleConnection
    132:132:boolean handleConnection(io.vertx.core.impl.ContextInternal,java.lang.Object) -> handleConnection
    132:132:void initConnection(io.vertx.core.impl.ContextInternal,java.lang.Object) -> initConnection
    137:138:void lambda$initConnection$0(io.vertx.core.Handler,io.vertx.core.http.impl.HttpClientConnection) -> lambda$initConnection$0
io.vertx.core.http.impl.ConnectionManager$Endpoint -> io.vertx.core.http.impl.ConnectionManager$Endpoint:
    io.vertx.core.http.impl.pool.Pool pool -> pool
    java.lang.Object metric -> metric
    io.vertx.core.http.impl.ConnectionManager this$0 -> this$0
    99:102:void <init>(io.vertx.core.http.impl.ConnectionManager,io.vertx.core.http.impl.pool.Pool,java.lang.Object) -> <init>
    94:94:java.lang.Object access$000(io.vertx.core.http.impl.ConnectionManager$Endpoint) -> access$000
    94:94:io.vertx.core.http.impl.pool.Pool access$200(io.vertx.core.http.impl.ConnectionManager$Endpoint) -> access$200
io.vertx.core.http.impl.ConnectionManager$EndpointKey -> io.vertx.core.http.impl.ConnectionManager$EndpointKey:
    boolean ssl -> ssl
    int port -> port
    java.lang.String peerHost -> peerHost
    java.lang.String host -> host
    63:74:void <init>(boolean,int,java.lang.String,java.lang.String) -> <init>
    78:81:boolean equals(java.lang.Object) -> equals
    86:90:int hashCode() -> hashCode
io.vertx.core.http.impl.FileStreamChannel -> io.vertx.core.http.impl.FileStreamChannel:
    java.net.SocketAddress LOCAL_ADDRESS -> LOCAL_ADDRESS
    java.net.SocketAddress REMOTE_ADDRESS -> REMOTE_ADDRESS
    io.netty.channel.ChannelMetadata METADATA -> METADATA
    io.netty.channel.ChannelConfig config -> config
    boolean active -> active
    boolean closed -> closed
    long bytesWritten -> bytesWritten
    io.vertx.core.http.impl.VertxHttp2Stream stream -> stream
    io.vertx.core.Handler drainHandler -> drainHandler
    52:96:void <init>(io.vertx.core.Future,io.vertx.core.http.impl.VertxHttp2Stream,long,long) -> <init>
    102:103:void doRegister() -> doRegister
    107:107:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    112:112:boolean isCompatible(io.netty.channel.EventLoop) -> isCompatible
    117:117:java.net.SocketAddress localAddress0() -> localAddress0
    122:122:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    127:127:void doBind(java.net.SocketAddress) -> doBind
    131:132:void doDisconnect() -> doDisconnect
    136:138:void doClose() -> doClose
    142:142:void doBeginRead() -> doBeginRead
    147:153:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    157:157:io.netty.channel.ChannelConfig config() -> config
    162:162:boolean isOpen() -> isOpen
    167:167:boolean isActive() -> isActive
    172:172:io.netty.channel.ChannelMetadata metadata() -> metadata
    97:98:void lambda$new$0(java.lang.Void) -> lambda$new$0
    46:46:long access$100(io.vertx.core.http.impl.FileStreamChannel) -> access$100
    48:50:void <clinit>() -> <clinit>
io.vertx.core.http.impl.FileStreamChannel$1 -> io.vertx.core.http.impl.FileStreamChannel$1:
    long val$offset -> val$offset
    long val$length -> val$length
    io.vertx.core.Future val$result -> val$result
    io.vertx.core.http.impl.FileStreamChannel this$0 -> this$0
    65:65:void <init>(io.vertx.core.http.impl.FileStreamChannel,long,long,io.vertx.core.Future) -> <init>
    68:90:void initChannel(io.netty.channel.Channel) -> initChannel
io.vertx.core.http.impl.FileStreamChannel$1$1 -> io.vertx.core.http.impl.FileStreamChannel$1$1:
    io.vertx.core.http.impl.FileStreamChannel$1 this$1 -> this$1
    70:70:void <init>(io.vertx.core.http.impl.FileStreamChannel$1) -> <init>
    73:84:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    87:88:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    76:82:void lambda$userEventTriggered$0(io.vertx.core.Future,io.netty.channel.ChannelFuture,io.netty.util.concurrent.Future) -> lambda$userEventTriggered$0
io.vertx.core.http.impl.FileStreamChannel$DefaultUnsafe -> io.vertx.core.http.impl.FileStreamChannel$DefaultUnsafe:
    io.vertx.core.http.impl.FileStreamChannel this$0 -> this$0
    182:182:void <init>(io.vertx.core.http.impl.FileStreamChannel) -> <init>
    185:186:void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    182:182:void <init>(io.vertx.core.http.impl.FileStreamChannel,io.vertx.core.http.impl.FileStreamChannel$1) -> <init>
io.vertx.core.http.impl.FileStreamChannel$Id -> io.vertx.core.http.impl.FileStreamChannel$Id:
    io.netty.channel.ChannelId INSTANCE -> INSTANCE
    193:193:void <init>() -> <init>
    197:197:java.lang.String asShortText() -> asShortText
    202:202:java.lang.String asLongText() -> asLongText
    207:211:int compareTo(io.netty.channel.ChannelId) -> compareTo
    216:216:int hashCode() -> hashCode
    221:221:boolean equals(java.lang.Object) -> equals
    226:226:java.lang.String toString() -> toString
    189:189:int compareTo(java.lang.Object) -> compareTo
    191:191:void <clinit>() -> <clinit>
io.vertx.core.http.impl.FileStreamChannel$StreamSocketAddress -> io.vertx.core.http.impl.FileStreamChannel$StreamSocketAddress:
    175:175:void <init>() -> <init>
    178:178:java.lang.String toString() -> toString
    175:175:void <init>(io.vertx.core.http.impl.FileStreamChannel$1) -> <init>
io.vertx.core.http.impl.FrameType -> io.vertx.core.http.impl.FrameType:
    io.vertx.core.http.impl.FrameType CONTINUATION -> CONTINUATION
    io.vertx.core.http.impl.FrameType TEXT -> TEXT
    io.vertx.core.http.impl.FrameType BINARY -> BINARY
    io.vertx.core.http.impl.FrameType CLOSE -> CLOSE
    io.vertx.core.http.impl.FrameType PING -> PING
    io.vertx.core.http.impl.FrameType PONG -> PONG
    io.vertx.core.http.impl.FrameType[] $VALUES -> $VALUES
    19:19:io.vertx.core.http.impl.FrameType[] values() -> values
    19:19:io.vertx.core.http.impl.FrameType valueOf(java.lang.String) -> valueOf
    19:19:void <init>(java.lang.String,int) -> <init>
    19:25:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HeadersAdaptor -> io.vertx.core.http.impl.HeadersAdaptor:
    io.netty.handler.codec.http.HttpHeaders headers -> headers
    28:30:void <init>(io.netty.handler.codec.http.HttpHeaders) -> <init>
    34:34:java.lang.String get(java.lang.String) -> get
    39:39:java.util.List getAll(java.lang.String) -> getAll
    44:44:java.util.List entries() -> entries
    49:49:boolean contains(java.lang.String) -> contains
    54:54:boolean isEmpty() -> isEmpty
    59:59:java.util.Set names() -> names
    64:65:io.vertx.core.MultiMap add(java.lang.String,java.lang.String) -> add
    70:71:io.vertx.core.MultiMap add(java.lang.String,java.lang.Iterable) -> add
    76:79:io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap) -> addAll
    84:87:io.vertx.core.MultiMap addAll(java.util.Map) -> addAll
    92:93:io.vertx.core.MultiMap set(java.lang.String,java.lang.String) -> set
    98:99:io.vertx.core.MultiMap set(java.lang.String,java.lang.Iterable) -> set
    104:108:io.vertx.core.MultiMap setAll(io.vertx.core.MultiMap) -> setAll
    113:114:io.vertx.core.MultiMap remove(java.lang.String) -> remove
    119:120:io.vertx.core.MultiMap clear() -> clear
    125:125:java.util.Iterator iterator() -> iterator
    130:130:int size() -> size
    135:138:io.vertx.core.MultiMap setAll(java.util.Map) -> setAll
    143:143:java.lang.String get(java.lang.CharSequence) -> get
    148:148:java.util.List getAll(java.lang.CharSequence) -> getAll
    153:153:boolean contains(java.lang.CharSequence) -> contains
    158:158:boolean contains(java.lang.String,java.lang.String,boolean) -> contains
    163:163:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    168:169:io.vertx.core.MultiMap add(java.lang.CharSequence,java.lang.CharSequence) -> add
    174:175:io.vertx.core.MultiMap add(java.lang.CharSequence,java.lang.Iterable) -> add
    180:181:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.CharSequence) -> set
    186:187:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.Iterable) -> set
    192:193:io.vertx.core.MultiMap remove(java.lang.CharSequence) -> remove
io.vertx.core.http.impl.Http1xClientConnection -> io.vertx.core.http.impl.Http1xClientConnection:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.http.impl.pool.ConnectionListener listener -> listener
    io.vertx.core.http.impl.HttpClientImpl client -> client
    boolean ssl -> ssl
    java.lang.String host -> host
    int port -> port
    java.lang.Object endpointMetric -> endpointMetric
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    io.vertx.core.http.HttpVersion version -> version
    io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker -> handshaker
    io.vertx.core.http.impl.WebSocketImpl ws -> ws
    java.util.Deque pending -> pending
    java.util.Deque inflight -> inflight
    io.vertx.core.http.impl.Http1xClientConnection$StreamImpl currentRequest -> currentRequest
    io.vertx.core.http.impl.Http1xClientConnection$StreamImpl currentResponse -> currentResponse
    boolean paused -> paused
    io.vertx.core.buffer.Buffer pausedChunk -> pausedChunk
    74:101:void <init>(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.http.HttpVersion,io.vertx.core.http.impl.HttpClientImpl,java.lang.Object,io.netty.channel.ChannelHandlerContext,boolean,java.lang.String,int,io.vertx.core.impl.ContextImpl,io.vertx.core.spi.metrics.HttpClientMetrics) -> <init>
    404:424:void handleResponse(io.netty.handler.codec.http.HttpResponse) -> handleResponse
    428:448:void handleResponseChunk(io.vertx.core.buffer.Buffer) -> handleResponseChunk
    451:459:void handleResponseEnd(io.netty.handler.codec.http.LastHttpContent) -> handleResponseEnd
    462:462:io.vertx.core.spi.metrics.HttpClientMetrics metrics() -> metrics
    467:502:void toWebSocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,int,io.vertx.core.Handler) -> toWebSocket
    612:619:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    622:624:void doPause() -> doPause
    627:638:void doResume() -> doResume
    641:644:void handleWsFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal) -> handleWsFrame
    648:651:void retryPending() -> retryPending
    654:683:void handleClosed() -> handleClosed
    686:686:io.vertx.core.impl.ContextImpl getContext() -> getContext
    691:703:void handleException(java.lang.Throwable) -> handleException
    707:716:void close() -> close
    720:729:void closeWithPayload(io.netty.buffer.ByteBuf) -> closeWithPayload
    733:742:void createStream(io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.Handler) -> createStream
    58:58:io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    631:636:void lambda$doResume$1(java.lang.Void) -> lambda$doResume$1
    494:498:void lambda$toWebSocket$0(io.netty.util.concurrent.Future) -> lambda$toWebSocket$0
    58:58:io.vertx.core.http.HttpVersion access$000(io.vertx.core.http.impl.Http1xClientConnection) -> access$000
    58:58:io.vertx.core.impl.ContextImpl access$100(io.vertx.core.http.impl.Http1xClientConnection) -> access$100
    58:58:io.vertx.core.http.impl.HttpClientImpl access$200(io.vertx.core.http.impl.Http1xClientConnection) -> access$200
    58:58:io.vertx.core.http.impl.Http1xClientConnection$StreamImpl access$300(io.vertx.core.http.impl.Http1xClientConnection) -> access$300
    58:58:io.vertx.core.spi.metrics.HttpClientMetrics access$400(io.vertx.core.http.impl.Http1xClientConnection) -> access$400
    58:58:java.lang.Object access$500(io.vertx.core.http.impl.Http1xClientConnection) -> access$500
    58:58:java.util.Deque access$600(io.vertx.core.http.impl.Http1xClientConnection) -> access$600
    58:58:io.vertx.core.http.impl.Http1xClientConnection$StreamImpl access$302(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.http.impl.Http1xClientConnection$StreamImpl) -> access$302
    58:58:java.util.Deque access$700(io.vertx.core.http.impl.Http1xClientConnection) -> access$700
    58:58:io.vertx.core.impl.VertxInternal access$800(io.vertx.core.http.impl.Http1xClientConnection) -> access$800
    58:58:io.netty.channel.ChannelHandlerContext access$900(io.vertx.core.http.impl.Http1xClientConnection) -> access$900
    58:58:io.vertx.core.impl.ContextImpl access$1000(io.vertx.core.http.impl.Http1xClientConnection) -> access$1000
    58:58:void access$1100(io.vertx.core.http.impl.Http1xClientConnection) -> access$1100
    58:58:io.netty.channel.ChannelHandlerContext access$1200(io.vertx.core.http.impl.Http1xClientConnection) -> access$1200
    58:58:io.vertx.core.buffer.Buffer access$1300(io.vertx.core.http.impl.Http1xClientConnection) -> access$1300
    58:58:io.vertx.core.buffer.Buffer access$1302(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.buffer.Buffer) -> access$1302
    58:58:io.vertx.core.http.impl.pool.ConnectionListener access$1400(io.vertx.core.http.impl.Http1xClientConnection) -> access$1400
    58:58:io.vertx.core.impl.VertxInternal access$1700(io.vertx.core.http.impl.Http1xClientConnection) -> access$1700
    58:58:io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker access$1800(io.vertx.core.http.impl.Http1xClientConnection) -> access$1800
    58:58:io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker access$1802(io.vertx.core.http.impl.Http1xClientConnection,io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker) -> access$1802
    58:58:io.netty.channel.ChannelHandlerContext access$1900(io.vertx.core.http.impl.Http1xClientConnection) -> access$1900
    58:58:io.vertx.core.Handler access$2000(io.vertx.core.http.impl.Http1xClientConnection) -> access$2000
    58:58:io.vertx.core.logging.Logger access$2100() -> access$2100
    58:58:io.vertx.core.impl.VertxInternal access$2200(io.vertx.core.http.impl.Http1xClientConnection) -> access$2200
    58:58:io.vertx.core.http.impl.WebSocketImpl access$2302(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.http.impl.WebSocketImpl) -> access$2302
    58:58:io.netty.channel.ChannelHandlerContext access$2400(io.vertx.core.http.impl.Http1xClientConnection) -> access$2400
    58:58:io.vertx.core.http.impl.WebSocketImpl access$2300(io.vertx.core.http.impl.Http1xClientConnection) -> access$2300
    60:60:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http1xClientConnection$HandshakeInboundHandler -> io.vertx.core.http.impl.Http1xClientConnection$HandshakeInboundHandler:
    boolean supportsContinuation -> supportsContinuation
    io.vertx.core.Handler wsConnect -> wsConnect
    io.vertx.core.impl.ContextImpl context -> context
    java.util.Queue buffered -> buffered
    io.netty.handler.codec.http.FullHttpResponse response -> response
    boolean handshaking -> handshaking
    io.vertx.core.http.impl.Http1xClientConnection this$0 -> this$0
    509:517:void <init>(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.Handler,boolean) -> <init>
    521:527:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    531:570:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    573:583:void handleException(java.lang.Exception) -> handleException
    586:607:void handshakeComplete(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse) -> handshakeComplete
    601:606:void lambda$handshakeComplete$1(io.vertx.core.http.impl.WebSocketImpl) -> lambda$handshakeComplete$1
    578:579:void lambda$handleException$0(io.vertx.core.Handler,java.lang.Exception) -> lambda$handleException$0
io.vertx.core.http.impl.Http1xClientConnection$StreamImpl -> io.vertx.core.http.impl.Http1xClientConnection$StreamImpl:
    io.vertx.core.http.impl.Http1xClientConnection conn -> conn
    io.vertx.core.Handler handler -> handler
    io.vertx.core.http.impl.HttpClientRequestImpl request -> request
    io.vertx.core.http.impl.HttpClientResponseImpl response -> response
    boolean requestEnded -> requestEnded
    boolean responseEnded -> responseEnded
    boolean reset -> reset
    boolean close -> close
    boolean upgraded -> upgraded
    115:119:void <init>(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.Handler) -> <init>
    123:123:int id() -> id
    128:128:io.vertx.core.http.HttpVersion version() -> version
    133:133:io.vertx.core.http.impl.HttpClientConnection connection() -> connection
    138:138:io.vertx.core.Context getContext() -> getContext
    142:149:io.netty.handler.codec.http.HttpRequest createRequest(io.vertx.core.http.HttpVersion,io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap) -> createRequest
    153:170:void prepareHeaders(io.netty.handler.codec.http.HttpRequest,java.lang.String,boolean) -> prepareHeaders
    173:176:void writeHead(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean) -> writeHead
    179:190:void writeHeadWithContent(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean,io.netty.buffer.ByteBuf,boolean) -> writeHeadWithContent
    194:203:void writeBuffer(io.netty.buffer.ByteBuf,boolean) -> writeBuffer
    207:207:void writeFrame(int,int,io.netty.buffer.ByteBuf) -> writeFrame
    212:213:void doSetWriteQueueMaxSize(int) -> doSetWriteQueueMaxSize
    217:217:boolean isNotWritable() -> isNotWritable
    222:223:void checkDrained() -> checkDrained
    227:228:void doPause() -> doPause
    232:233:void doResume() -> doResume
    237:248:void reset(long) -> reset
    251:261:void beginRequest() -> beginRequest
    265:283:void endRequest() -> endRequest
    287:331:io.vertx.core.net.NetSocket createNetSocket() -> createNetSocket
    335:357:io.vertx.core.http.impl.HttpClientResponseImpl beginResponse(io.netty.handler.codec.http.HttpResponse) -> beginResponse
    362:386:void endResponse(io.netty.handler.codec.http.LastHttpContent) -> endResponse
    389:398:void checkLifecycle() -> checkLifecycle
    328:328:void lambda$createNetSocket$0(io.vertx.core.net.impl.NetSocketImpl) -> lambda$createNetSocket$0
    103:103:io.vertx.core.http.impl.HttpClientRequestImpl access$1500(io.vertx.core.http.impl.Http1xClientConnection$StreamImpl) -> access$1500
    103:103:io.vertx.core.http.impl.HttpClientResponseImpl access$1600(io.vertx.core.http.impl.Http1xClientConnection$StreamImpl) -> access$1600
io.vertx.core.http.impl.Http1xClientConnection$StreamImpl$1 -> io.vertx.core.http.impl.Http1xClientConnection$StreamImpl$1:
    io.vertx.core.http.impl.Http1xClientConnection$StreamImpl this$0 -> this$0
    311:311:void <init>(io.vertx.core.http.impl.Http1xClientConnection$StreamImpl,io.vertx.core.net.impl.NetSocketImpl) -> <init>
    314:322:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    325:327:void handleMessage(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    311:311:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
io.vertx.core.http.impl.Http1xClientHandler -> io.vertx.core.http.impl.Http1xClientHandler:
    boolean closeFrameSent -> closeFrameSent
    io.vertx.core.impl.ContextImpl context -> context
    io.netty.channel.ChannelHandlerContext chctx -> chctx
    io.vertx.core.http.HttpVersion version -> version
    java.lang.String host -> host
    int port -> port
    boolean ssl -> ssl
    io.vertx.core.http.impl.HttpClientImpl client -> client
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    io.vertx.core.http.impl.pool.ConnectionListener listener -> listener
    java.lang.Object endpointMetric -> endpointMetric
    53:63:void <init>(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.vertx.core.http.HttpVersion,java.lang.String,int,boolean,io.vertx.core.http.impl.HttpClientImpl,java.lang.Object,io.vertx.core.spi.metrics.HttpClientMetrics) -> <init>
    67:77:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    80:80:io.netty.channel.ChannelHandlerContext context() -> context
    85:89:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    93:146:void handleMessage(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    32:32:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    71:74:void lambda$handlerAdded$0(io.vertx.core.http.impl.Http1xClientConnection) -> lambda$handlerAdded$0
io.vertx.core.http.impl.Http1xClientHandler$1 -> io.vertx.core.http.impl.Http1xClientHandler$1:
    int[] $SwitchMap$io$vertx$core$http$impl$FrameType -> $SwitchMap$io$vertx$core$http$impl$FrameType
    121:121:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http1xConnectionBase -> io.vertx.core.http.impl.Http1xConnectionBase:
    47:48:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.ChannelHandlerContext,io.vertx.core.impl.ContextImpl) -> <init>
    52:55:java.lang.Object encode(java.lang.Object) -> encode
    59:78:io.netty.handler.codec.http.websocketx.WebSocketFrame encodeFrame(java.lang.Object) -> encodeFrame
    void closeWithPayload(io.netty.buffer.ByteBuf) -> closeWithPayload
    86:86:io.vertx.core.http.impl.Http1xConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    91:91:io.vertx.core.http.impl.Http1xConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    96:96:io.vertx.core.http.HttpConnection goAway(long,int,io.vertx.core.buffer.Buffer) -> goAway
    101:101:io.vertx.core.http.HttpConnection goAwayHandler(io.vertx.core.Handler) -> goAwayHandler
    106:106:io.vertx.core.http.HttpConnection shutdownHandler(io.vertx.core.Handler) -> shutdownHandler
    111:111:io.vertx.core.http.HttpConnection shutdown() -> shutdown
    116:116:io.vertx.core.http.HttpConnection shutdown(long) -> shutdown
    121:121:io.vertx.core.http.Http2Settings settings() -> settings
    126:126:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings) -> updateSettings
    131:131:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings,io.vertx.core.Handler) -> updateSettings
    136:136:io.vertx.core.http.Http2Settings remoteSettings() -> remoteSettings
    141:141:io.vertx.core.http.HttpConnection remoteSettingsHandler(io.vertx.core.Handler) -> remoteSettingsHandler
    146:146:io.vertx.core.http.HttpConnection ping(io.vertx.core.buffer.Buffer,io.vertx.core.Handler) -> ping
    151:151:io.vertx.core.http.HttpConnection pingHandler(io.vertx.core.Handler) -> pingHandler
    44:44:io.vertx.core.net.impl.ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    44:44:io.vertx.core.net.impl.ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    44:44:io.vertx.core.http.HttpConnection exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    44:44:io.vertx.core.http.HttpConnection closeHandler(io.vertx.core.Handler) -> closeHandler
io.vertx.core.http.impl.Http1xConnectionBase$1 -> io.vertx.core.http.impl.Http1xConnectionBase$1:
    int[] $SwitchMap$io$vertx$core$http$impl$FrameType -> $SwitchMap$io$vertx$core$http$impl$FrameType
    64:64:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http1xOrH2CHandler -> io.vertx.core.http.impl.Http1xOrH2CHandler:
    java.lang.String HTTP_2_PREFACE -> HTTP_2_PREFACE
    byte[] HTTP_2_PREFACE_ARRAY -> HTTP_2_PREFACE_ARRAY
    int current -> current
    25:29:void <init>() -> <init>
    33:49:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    52:62:void end(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,boolean) -> end
    65:65:void configure(io.netty.channel.ChannelHandlerContext,boolean) -> configure
    69:71:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    28:28:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http1xServerConnection -> io.vertx.core.http.impl.Http1xServerConnection:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.Handler NULL_REQUEST_HANDLER -> NULL_REQUEST_HANDLER
    int CHANNEL_PAUSE_QUEUE_SIZE -> CHANNEL_PAUSE_QUEUE_SIZE
    java.util.Deque pending -> pending
    java.lang.String serverOrigin -> serverOrigin
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    io.vertx.core.http.HttpServerOptions options -> options
    io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker handshaker -> handshaker
    io.vertx.core.spi.metrics.HttpServerMetrics metrics -> metrics
    boolean requestFailed -> requestFailed
    java.lang.Object requestMetric -> requestMetric
    io.vertx.core.Handler requestHandler -> requestHandler
    io.vertx.core.Handler wsHandler -> wsHandler
    io.vertx.core.http.impl.HttpServerRequestImpl currentRequest -> currentRequest
    io.vertx.core.http.impl.HttpServerResponseImpl pendingResponse -> pendingResponse
    io.vertx.core.http.impl.ServerWebSocketImpl ws -> ws
    boolean channelPaused -> channelPaused
    boolean paused -> paused
    boolean sentCheck -> sentCheck
    long bytesRead -> bytesRead
    long bytesWritten -> bytesWritten
    boolean queueing -> queueing
    84:116:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.impl.SSLHelper,io.vertx.core.http.HttpServerOptions,io.netty.channel.ChannelHandlerContext,io.vertx.core.impl.ContextImpl,java.lang.String,io.vertx.core.spi.metrics.HttpServerMetrics) -> <init>
    120:120:io.vertx.core.spi.metrics.HttpServerMetrics metrics() -> metrics
    124:128:void pause() -> pause
    131:135:void resume() -> resume
    138:147:void handleMessage(java.lang.Object) -> handleMessage
    151:159:void enqueue(java.lang.Object) -> enqueue
    162:174:void responseComplete() -> responseComplete
    177:178:void requestHandler(io.vertx.core.Handler) -> requestHandler
    181:183:void wsHandler(io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.vertx.core.Handler) -> wsHandler
    186:186:java.lang.String getServerOrigin() -> getServerOrigin
    190:190:io.vertx.core.Vertx vertx() -> vertx
    195:204:void writeToChannel(java.lang.Object,io.netty.channel.ChannelPromise) -> writeToChannel
    207:234:io.vertx.core.http.ServerWebSocket upgrade(io.vertx.core.http.HttpServerRequest,io.netty.handler.codec.http.HttpRequest) -> upgrade
    238:277:io.vertx.core.net.NetSocket createNetSocket() -> createNetSocket
    281:285:void handleChunk(io.vertx.core.buffer.Buffer) -> handleChunk
    289:296:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    300:306:void close() -> close
    310:316:void closeWithPayload(io.netty.buffer.ByteBuf) -> closeWithPayload
    320:324:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl) -> handleWebsocketConnect
    327:328:void write100Continue() -> write100Continue
    331:348:void handleClosed() -> handleClosed
    351:351:io.vertx.core.impl.ContextImpl getContext() -> getContext
    356:369:void handleException(java.lang.Throwable) -> handleException
    372:373:void addFuture(io.vertx.core.Handler,io.netty.channel.ChannelFuture) -> addFuture
    377:377:boolean supportsFileRegion() -> supportsFileRegion
    381:381:io.netty.channel.ChannelFuture sendFile(java.io.RandomAccessFile,long,long) -> sendFile
    385:411:void handleError(io.netty.handler.codec.http.HttpObject) -> handleError
    414:441:boolean processMessage(java.lang.Object) -> processMessage
    445:459:void handleContent(java.lang.Object) -> handleContent
    462:468:void handleLastHttpContent() -> handleLastHttpContent
    471:477:void handleOther(java.lang.Object) -> handleOther
    481:510:void checkNextTick() -> checkNextTick
    513:529:long getBytes(java.lang.Object) -> getBytes
    76:76:io.vertx.core.http.HttpConnection pingHandler(io.vertx.core.Handler) -> pingHandler
    76:76:io.vertx.core.http.HttpConnection ping(io.vertx.core.buffer.Buffer,io.vertx.core.Handler) -> ping
    76:76:io.vertx.core.http.HttpConnection remoteSettingsHandler(io.vertx.core.Handler) -> remoteSettingsHandler
    76:76:io.vertx.core.http.Http2Settings remoteSettings() -> remoteSettings
    76:76:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings,io.vertx.core.Handler) -> updateSettings
    76:76:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings) -> updateSettings
    76:76:io.vertx.core.http.Http2Settings settings() -> settings
    76:76:io.vertx.core.http.HttpConnection shutdown(long) -> shutdown
    76:76:io.vertx.core.http.HttpConnection shutdown() -> shutdown
    76:76:io.vertx.core.http.HttpConnection shutdownHandler(io.vertx.core.Handler) -> shutdownHandler
    76:76:io.vertx.core.http.HttpConnection goAwayHandler(io.vertx.core.Handler) -> goAwayHandler
    76:76:io.vertx.core.http.HttpConnection goAway(long,int,io.vertx.core.buffer.Buffer) -> goAway
    76:76:io.vertx.core.http.impl.Http1xConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    76:76:io.vertx.core.http.impl.Http1xConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    76:76:io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    484:508:void lambda$checkNextTick$3(java.lang.Void) -> lambda$checkNextTick$3
    402:406:void lambda$handleError$2(io.netty.handler.codec.DecoderResult,io.netty.util.concurrent.Future) -> lambda$handleError$2
    273:273:void lambda$createNetSocket$1(java.util.Map,io.vertx.core.net.impl.NetSocketImpl) -> lambda$createNetSocket$1
    80:80:void lambda$static$0(io.vertx.core.http.HttpServerRequest) -> lambda$static$0
    76:76:void access$001(io.vertx.core.http.impl.Http1xServerConnection) -> access$001
    78:80:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http1xServerConnection$1 -> io.vertx.core.http.impl.Http1xServerConnection$1:
    io.vertx.core.http.impl.Http1xServerConnection this$0 -> this$0
    258:258:void <init>(io.vertx.core.http.impl.Http1xServerConnection,io.vertx.core.net.impl.NetSocketImpl) -> <init>
    261:266:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    270:272:void handleMessage(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    258:258:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
io.vertx.core.http.impl.Http1xServerHandler -> io.vertx.core.http.impl.Http1xServerHandler:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    io.vertx.core.http.HttpServerOptions options -> options
    java.lang.String serverOrigin -> serverOrigin
    io.vertx.core.spi.metrics.HttpServerMetrics metrics -> metrics
    io.vertx.core.net.impl.HandlerHolder holder -> holder
    47:53:void <init>(io.vertx.core.net.impl.SSLHelper,io.vertx.core.http.HttpServerOptions,java.lang.String,io.vertx.core.net.impl.HandlerHolder,io.vertx.core.spi.metrics.HttpServerMetrics) -> <init>
    57:76:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    80:81:void handleMessage(io.vertx.core.http.impl.Http1xServerConnection,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    87:112:io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker createHandshaker(io.vertx.core.http.impl.Http1xServerConnection,io.netty.channel.Channel,io.netty.handler.codec.http.HttpRequest) -> createHandshaker
    37:37:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    68:75:void lambda$handlerAdded$0(io.vertx.core.http.impl.Http1xServerConnection) -> lambda$handlerAdded$0
    39:39:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http2ClientConnection -> io.vertx.core.http.impl.Http2ClientConnection:
    io.vertx.core.http.impl.pool.ConnectionListener listener -> listener
    io.vertx.core.http.impl.HttpClientImpl client -> client
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    java.lang.Object queueMetric -> queueMetric
    54:59:void <init>(io.vertx.core.http.impl.pool.ConnectionListener,java.lang.Object,io.vertx.core.http.impl.HttpClientImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.http.impl.VertxHttp2ConnectionHandler,io.vertx.core.spi.metrics.HttpClientMetrics) -> <init>
    63:65:void onGoAwaySent(int,long,io.netty.buffer.ByteBuf) -> onGoAwaySent
    69:71:void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
    75:75:io.netty.channel.Channel channel() -> channel
    80:85:void concurrencyChanged(long) -> concurrencyChanged
    89:89:io.vertx.core.spi.metrics.HttpClientMetrics metrics() -> metrics
    94:95:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    100:113:void createStream(io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.Handler) -> createStream
    117:123:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    127:150:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    41:41:io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    132:145:void lambda$onPushPromiseRead$1(io.netty.handler.codec.http2.Http2Headers,int,io.vertx.core.Handler) -> lambda$onPushPromiseRead$1
    120:121:void lambda$onHeadersRead$0(io.vertx.core.http.impl.Http2ClientConnection$Http2ClientStream,io.netty.handler.codec.http2.Http2Headers,boolean) -> lambda$onHeadersRead$0
    41:41:io.vertx.core.http.impl.pool.ConnectionListener access$000(io.vertx.core.http.impl.Http2ClientConnection) -> access$000
    41:41:io.vertx.core.http.impl.HttpClientImpl access$100(io.vertx.core.http.impl.Http2ClientConnection) -> access$100
io.vertx.core.http.impl.Http2ClientConnection$Http2ClientStream -> io.vertx.core.http.impl.Http2ClientConnection$Http2ClientStream:
    io.vertx.core.http.impl.HttpClientRequestBase request -> request
    io.vertx.core.http.impl.HttpClientResponseImpl response -> response
    boolean requestEnded -> requestEnded
    boolean responseEnded -> responseEnded
    160:162:void <init>(io.vertx.core.http.impl.Http2ClientConnection,io.vertx.core.http.impl.HttpClientRequestBase,io.netty.handler.codec.http2.Http2Stream,boolean) -> <init>
    166:166:io.vertx.core.http.HttpVersion version() -> version
    171:171:int id() -> id
    176:189:void handleEnd(io.vertx.core.MultiMap) -> handleEnd
    193:194:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    198:206:void handleReset(long) -> handleReset
    212:224:void handleClose() -> handleClose
    228:231:void checkDrained() -> checkDrained
    235:240:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    244:245:void handleCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> handleCustomFrame
    248:277:void handleHeaders(io.netty.handler.codec.http2.Http2Headers,boolean) -> handleHeaders
    280:290:void handleException(java.lang.Throwable) -> handleException
    293:293:io.vertx.core.Handler pushHandler() -> pushHandler
    298:299:void writeHead(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean) -> writeHead
    303:334:void writeHeadWithContent(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean,io.netty.buffer.ByteBuf,boolean) -> writeHeadWithContent
    338:347:void writeBuffer(io.netty.buffer.ByteBuf,boolean) -> writeBuffer
    351:352:void writeFrame(int,int,io.netty.buffer.ByteBuf) -> writeFrame
    356:356:io.vertx.core.Context getContext() -> getContext
    361:361:void doSetWriteQueueMaxSize(int) -> doSetWriteQueueMaxSize
    365:365:boolean isNotWritable() -> isNotWritable
    370:370:void beginRequest() -> beginRequest
    374:378:void endRequest() -> endRequest
    382:390:void reset(long) -> reset
    394:394:io.vertx.core.http.impl.HttpClientConnection connection() -> connection
    399:399:io.vertx.core.net.NetSocket createNetSocket() -> createNetSocket
    287:288:void lambda$handleException$1(java.lang.Throwable) -> lambda$handleException$1
    282:283:void lambda$handleException$0(java.lang.Throwable) -> lambda$handleException$0
io.vertx.core.http.impl.Http2ConnectionBase -> io.vertx.core.http.impl.Http2ConnectionBase:
    io.netty.util.collection.IntObjectMap streams -> streams
    io.netty.channel.ChannelHandlerContext handlerContext -> handlerContext
    io.vertx.core.http.impl.VertxHttp2ConnectionHandler handler -> handler
    boolean shutdown -> shutdown
    io.vertx.core.Handler remoteSettingsHandler -> remoteSettingsHandler
    java.util.ArrayDeque updateSettingsHandlers -> updateSettingsHandlers
    java.util.ArrayDeque pongHandlers -> pongHandlers
    io.netty.handler.codec.http2.Http2Settings localSettings -> localSettings
    io.netty.handler.codec.http2.Http2Settings remoteSettings -> remoteSettings
    io.vertx.core.Handler goAwayHandler -> goAwayHandler
    io.vertx.core.Handler shutdownHandler -> shutdownHandler
    io.vertx.core.Handler pingHandler -> pingHandler
    boolean closed -> closed
    boolean goneAway -> goneAway
    int windowSize -> windowSize
    long maxConcurrentStreams -> maxConcurrentStreams
    59:71:io.netty.buffer.ByteBuf safeBuffer(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBufAllocator) -> safeBuffer
    74:97:void <init>(io.vertx.core.impl.ContextImpl,io.vertx.core.http.impl.VertxHttp2ConnectionHandler) -> <init>
    100:100:io.vertx.core.impl.VertxInternal vertx() -> vertx
    104:106:io.vertx.core.net.NetSocket toNetSocket(io.vertx.core.http.impl.VertxHttp2Stream) -> toNetSocket
    111:113:void handleClosed() -> handleClosed
    117:117:io.vertx.core.impl.ContextImpl getContext() -> getContext
    123:123:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    126:126:boolean isClosed() -> isClosed
    130:140:void onConnectionError(java.lang.Throwable) -> onConnectionError
    143:147:void onStreamError(int,java.lang.Throwable) -> onStreamError
    150:154:void onStreamwritabilityChanged(io.netty.handler.codec.http2.Http2Stream) -> onStreamwritabilityChanged
    157:164:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    167:171:void onGoAwaySent(int,long,io.netty.buffer.ByteBuf) -> onGoAwaySent
    174:185:void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
    192:192:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    196:197:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    201:206:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    209:209:void onConnect() -> onConnect
    212:212:void concurrencyChanged(long) -> concurrencyChanged
    217:240:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    244:251:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    255:262:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    267:267:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    271:271:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    275:275:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    280:287:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
    291:297:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    301:316:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    321:321:int getWindowSize() -> getWindowSize
    327:333:io.vertx.core.http.HttpConnection setWindowSize(int) -> setWindowSize
    339:346:io.vertx.core.http.HttpConnection goAway(long,int,io.vertx.core.buffer.Buffer) -> goAway
    351:352:io.vertx.core.http.HttpConnection goAwayHandler(io.vertx.core.Handler) -> goAwayHandler
    357:358:io.vertx.core.http.HttpConnection shutdownHandler(io.vertx.core.Handler) -> shutdownHandler
    363:368:io.vertx.core.http.HttpConnection shutdown(long) -> shutdown
    373:373:io.vertx.core.http.HttpConnection shutdown() -> shutdown
    378:378:io.vertx.core.http.impl.Http2ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    383:385:void close() -> close
    389:390:io.vertx.core.http.HttpConnection remoteSettingsHandler(io.vertx.core.Handler) -> remoteSettingsHandler
    405:405:io.vertx.core.http.Http2Settings remoteSettings() -> remoteSettings
    410:410:io.vertx.core.http.Http2Settings settings() -> settings
    415:415:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings) -> updateSettings
    420:422:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings,io.vertx.core.Handler) -> updateSettings
    426:454:void updateSettings(io.netty.handler.codec.http2.Http2Settings,io.vertx.core.Handler) -> updateSettings
    458:468:io.vertx.core.http.HttpConnection ping(io.vertx.core.buffer.Buffer,io.vertx.core.Handler) -> ping
    473:474:io.vertx.core.http.HttpConnection pingHandler(io.vertx.core.Handler) -> pingHandler
    479:479:io.vertx.core.http.impl.Http2ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    485:497:void checkShutdownHandler() -> checkShutdownHandler
    49:49:io.vertx.core.net.impl.ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    49:49:io.vertx.core.net.impl.ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    49:49:io.vertx.core.http.HttpConnection exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    49:49:io.vertx.core.http.HttpConnection closeHandler(io.vertx.core.Handler) -> closeHandler
    492:493:void lambda$checkShutdownHandler$14() -> lambda$checkShutdownHandler$14
    462:467:void lambda$ping$13(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$ping$13
    435:453:void lambda$updateSettings$12(io.netty.handler.codec.http2.Http2Settings,io.vertx.core.Handler,io.vertx.core.Context,io.netty.util.concurrent.Future) -> lambda$updateSettings$12
    449:450:void lambda$null$11(io.vertx.core.Handler,io.netty.util.concurrent.Future,java.lang.Void) -> lambda$null$11
    438:444:void lambda$null$10(io.netty.handler.codec.http2.Http2Settings,io.vertx.core.Handler,io.vertx.core.Context) -> lambda$null$10
    441:442:void lambda$null$9(io.vertx.core.Handler,java.lang.Void) -> lambda$null$9
    307:311:void lambda$onDataRead$8(io.vertx.core.buffer.Buffer,io.vertx.core.http.impl.VertxHttp2Stream,int[]) -> lambda$onDataRead$8
    294:295:void lambda$onRstStreamRead$7(io.vertx.core.http.impl.VertxHttp2Stream,long) -> lambda$onRstStreamRead$7
    284:285:void lambda$onUnknownFrame$6(io.vertx.core.http.impl.VertxHttp2Stream,byte,io.netty.handler.codec.http2.Http2Flags,io.vertx.core.buffer.Buffer) -> lambda$onUnknownFrame$6
    258:260:void lambda$onPingAckRead$5(io.netty.buffer.ByteBuf,io.netty.channel.ChannelHandlerContext,io.vertx.core.Handler) -> lambda$onPingAckRead$5
    248:249:void lambda$onPingRead$4(io.vertx.core.Handler,io.vertx.core.buffer.Buffer) -> lambda$onPingRead$4
    233:234:void lambda$onSettingsRead$3(io.vertx.core.Handler,io.netty.handler.codec.http2.Http2Settings) -> lambda$onSettingsRead$3
    180:181:void lambda$onGoAwayReceived$2(io.vertx.core.Handler,long,int,io.vertx.core.buffer.Buffer) -> lambda$onGoAwayReceived$2
    161:162:void lambda$onStreamClosed$1(io.vertx.core.http.impl.VertxHttp2Stream) -> lambda$onStreamClosed$1
    133:136:void lambda$onConnectionError$0(io.vertx.core.http.impl.VertxHttp2Stream,java.lang.Throwable,java.lang.Void) -> lambda$onConnectionError$0
io.vertx.core.http.impl.Http2HeadersAdaptor -> io.vertx.core.http.impl.Http2HeadersAdaptor:
    io.netty.handler.codec.http2.Http2Headers headers -> headers
    java.util.Set names -> names
    32:46:java.lang.CharSequence toLowerCase(java.lang.CharSequence) -> toLowerCase
    53:64:void <init>(io.netty.handler.codec.http2.Http2Headers) -> <init>
    68:69:java.lang.String get(java.lang.String) -> get
    74:87:java.util.List getAll(java.lang.String) -> getAll
    92:95:java.util.List entries() -> entries
    100:100:boolean contains(java.lang.String) -> contains
    105:105:boolean isEmpty() -> isEmpty
    110:132:java.util.Set names() -> names
    137:138:io.vertx.core.MultiMap add(java.lang.String,java.lang.String) -> add
    143:144:io.vertx.core.MultiMap add(java.lang.String,java.lang.Iterable) -> add
    149:152:io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap) -> addAll
    157:160:io.vertx.core.MultiMap addAll(java.util.Map) -> addAll
    165:166:io.vertx.core.MultiMap set(java.lang.String,java.lang.String) -> set
    171:172:io.vertx.core.MultiMap set(java.lang.String,java.lang.Iterable) -> set
    177:181:io.vertx.core.MultiMap setAll(io.vertx.core.MultiMap) -> setAll
    186:187:io.vertx.core.MultiMap remove(java.lang.String) -> remove
    192:193:io.vertx.core.MultiMap clear() -> clear
    198:198:java.util.Iterator iterator() -> iterator
    203:203:int size() -> size
    208:211:io.vertx.core.MultiMap setAll(java.util.Map) -> setAll
    216:217:java.lang.String get(java.lang.CharSequence) -> get
    222:223:java.util.List getAll(java.lang.CharSequence) -> getAll
    228:228:boolean contains(java.lang.CharSequence) -> contains
    233:234:io.vertx.core.MultiMap add(java.lang.CharSequence,java.lang.CharSequence) -> add
    239:240:io.vertx.core.MultiMap add(java.lang.CharSequence,java.lang.Iterable) -> add
    245:246:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.CharSequence) -> set
    251:252:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.Iterable) -> set
    257:258:io.vertx.core.MultiMap remove(java.lang.CharSequence) -> remove
    94:94:java.util.AbstractMap$SimpleEntry lambda$entries$0(java.lang.CharSequence) -> lambda$entries$0
    29:29:io.netty.handler.codec.http2.Http2Headers access$000(io.vertx.core.http.impl.Http2HeadersAdaptor) -> access$000
io.vertx.core.http.impl.Http2HeadersAdaptor$1 -> io.vertx.core.http.impl.Http2HeadersAdaptor$1:
    java.util.List val$all -> val$all
    io.vertx.core.http.impl.Http2HeadersAdaptor this$0 -> this$0
    76:76:void <init>(io.vertx.core.http.impl.Http2HeadersAdaptor,java.util.List) -> <init>
    79:79:java.lang.String get(int) -> get
    83:83:int size() -> size
    76:76:java.lang.Object get(int) -> get
io.vertx.core.http.impl.Http2HeadersAdaptor$2 -> io.vertx.core.http.impl.Http2HeadersAdaptor$2:
    io.vertx.core.http.impl.Http2HeadersAdaptor this$0 -> this$0
    111:111:void <init>(io.vertx.core.http.impl.Http2HeadersAdaptor) -> <init>
    114:115:java.util.Iterator iterator() -> iterator
    128:128:int size() -> size
io.vertx.core.http.impl.Http2HeadersAdaptor$2$1 -> io.vertx.core.http.impl.Http2HeadersAdaptor$2$1:
    java.util.Iterator val$it -> val$it
    io.vertx.core.http.impl.Http2HeadersAdaptor$2 this$1 -> this$1
    115:115:void <init>(io.vertx.core.http.impl.Http2HeadersAdaptor$2,java.util.Iterator) -> <init>
    118:118:boolean hasNext() -> hasNext
    122:122:java.lang.String next() -> next
    115:115:java.lang.Object next() -> next
io.vertx.core.http.impl.Http2ServerConnection -> io.vertx.core.http.impl.Http2ServerConnection:
    io.vertx.core.http.HttpServerOptions options -> options
    java.lang.String serverOrigin -> serverOrigin
    io.vertx.core.Handler requestHandler -> requestHandler
    io.vertx.core.spi.metrics.HttpServerMetrics metrics -> metrics
    java.lang.Long maxConcurrentStreams -> maxConcurrentStreams
    int concurrentStreams -> concurrentStreams
    java.util.ArrayDeque pendingPushes -> pendingPushes
    48:63:void <init>(io.vertx.core.impl.ContextImpl,java.lang.String,io.vertx.core.http.impl.VertxHttp2ConnectionHandler,io.vertx.core.http.HttpServerOptions,io.vertx.core.Handler,io.vertx.core.spi.metrics.HttpServerMetrics) -> <init>
    66:66:io.vertx.core.spi.metrics.HttpServerMetrics metrics() -> metrics
    70:94:boolean isMalformedRequest(io.netty.handler.codec.http2.Http2Headers) -> isMalformedRequest
    100:133:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    137:142:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    145:184:void sendPush(int,java.lang.String,io.vertx.core.http.HttpMethod,io.vertx.core.MultiMap,java.lang.String,io.vertx.core.Handler) -> sendPush
    187:189:void updateSettings(io.netty.handler.codec.http2.Http2Settings,io.vertx.core.Handler) -> updateSettings
    39:39:io.vertx.core.http.impl.Http2ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    39:39:io.vertx.core.http.HttpConnection pingHandler(io.vertx.core.Handler) -> pingHandler
    39:39:io.vertx.core.http.HttpConnection ping(io.vertx.core.buffer.Buffer,io.vertx.core.Handler) -> ping
    39:39:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings,io.vertx.core.Handler) -> updateSettings
    39:39:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings) -> updateSettings
    39:39:io.vertx.core.http.Http2Settings settings() -> settings
    39:39:io.vertx.core.http.Http2Settings remoteSettings() -> remoteSettings
    39:39:io.vertx.core.http.HttpConnection remoteSettingsHandler(io.vertx.core.Handler) -> remoteSettingsHandler
    39:39:void close() -> close
    39:39:io.vertx.core.http.impl.Http2ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    39:39:io.vertx.core.http.HttpConnection shutdown() -> shutdown
    39:39:io.vertx.core.http.HttpConnection shutdown(long) -> shutdown
    39:39:io.vertx.core.http.HttpConnection shutdownHandler(io.vertx.core.Handler) -> shutdownHandler
    39:39:io.vertx.core.http.HttpConnection goAwayHandler(io.vertx.core.Handler) -> goAwayHandler
    39:39:io.vertx.core.http.HttpConnection goAway(long,int,io.vertx.core.buffer.Buffer) -> goAway
    39:39:io.vertx.core.http.HttpConnection setWindowSize(int) -> setWindowSize
    39:39:int getWindowSize() -> getWindowSize
    39:39:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    39:39:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    39:39:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
    39:39:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    39:39:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    39:39:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    39:39:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    39:39:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    39:39:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    39:39:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    39:39:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    39:39:io.vertx.core.impl.ContextImpl getContext() -> getContext
    39:39:void handleClosed() -> handleClosed
    39:39:io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    157:157:void lambda$sendPush$1(io.netty.handler.codec.http2.Http2Headers,java.util.Map$Entry) -> lambda$sendPush$1
    119:126:void lambda$onHeadersRead$0(io.vertx.core.http.impl.Http2ServerRequestImpl,io.netty.channel.ChannelHandlerContext) -> lambda$onHeadersRead$0
    39:39:java.lang.Long access$000(io.vertx.core.http.impl.Http2ServerConnection) -> access$000
    39:39:int access$100(io.vertx.core.http.impl.Http2ServerConnection) -> access$100
    39:39:int access$108(io.vertx.core.http.impl.Http2ServerConnection) -> access$108
    39:39:io.vertx.core.impl.ContextImpl access$200(io.vertx.core.http.impl.Http2ServerConnection) -> access$200
    39:39:java.util.ArrayDeque access$300(io.vertx.core.http.impl.Http2ServerConnection) -> access$300
    39:39:io.vertx.core.impl.ContextImpl access$400(io.vertx.core.http.impl.Http2ServerConnection) -> access$400
    39:39:int access$110(io.vertx.core.http.impl.Http2ServerConnection) -> access$110
io.vertx.core.http.impl.Http2ServerConnection$1 -> io.vertx.core.http.impl.Http2ServerConnection$1:
    io.netty.handler.codec.http2.Http2Headers val$headers_ -> val$headers_
    io.vertx.core.http.HttpMethod val$method -> val$method
    java.lang.String val$path -> val$path
    io.vertx.core.Handler val$completionHandler -> val$completionHandler
    io.vertx.core.http.impl.Http2ServerConnection this$0 -> this$0
    159:159:void <init>(io.vertx.core.http.impl.Http2ServerConnection,io.netty.handler.codec.http2.Http2Headers,io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler) -> <init>
    162:182:void handle(io.vertx.core.AsyncResult) -> handle
    159:159:void handle(java.lang.Object) -> handle
    179:180:void lambda$handle$0(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$handle$0
io.vertx.core.http.impl.Http2ServerConnection$Push -> io.vertx.core.http.impl.Http2ServerConnection$Push:
    io.vertx.core.http.HttpMethod method -> method
    java.lang.String uri -> uri
    java.lang.String contentEncoding -> contentEncoding
    io.vertx.core.http.impl.Http2ServerResponseImpl response -> response
    io.vertx.core.Future completionHandler -> completionHandler
    io.vertx.core.http.impl.Http2ServerConnection this$0 -> this$0
    204:210:void <init>(io.vertx.core.http.impl.Http2ServerConnection,io.netty.handler.codec.http2.Http2Stream,java.lang.String,io.vertx.core.http.HttpMethod,java.lang.String,boolean,io.vertx.core.Handler) -> <init>
    214:214:void handleEnd(io.vertx.core.MultiMap) -> handleEnd
    218:218:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    222:225:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    229:234:void handleReset(long) -> handleReset
    238:241:void handleException(java.lang.Throwable) -> handleException
    245:258:void handleClose() -> handleClose
    261:265:void complete() -> complete
    253:254:void lambda$handleClose$0(io.vertx.core.http.impl.Http2ServerConnection$Push,java.lang.Void) -> lambda$handleClose$0
io.vertx.core.http.impl.Http2ServerRequestImpl -> io.vertx.core.http.impl.Http2ServerRequestImpl:
    io.vertx.core.logging.Logger log -> log
    java.lang.String serverOrigin -> serverOrigin
    io.vertx.core.http.impl.Http2ServerResponseImpl response -> response
    io.netty.handler.codec.http2.Http2Headers headers -> headers
    io.vertx.core.MultiMap headersMap -> headersMap
    io.vertx.core.MultiMap params -> params
    io.vertx.core.http.HttpMethod method -> method
    java.lang.String rawMethod -> rawMethod
    java.lang.String absoluteURI -> absoluteURI
    java.lang.String uri -> uri
    java.lang.String path -> path
    java.lang.String query -> query
    io.vertx.core.MultiMap attributes -> attributes
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler endHandler -> endHandler
    boolean ended -> ended
    long bytesRead -> bytesRead
    io.vertx.core.Handler uploadHandler -> uploadHandler
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder postRequestDecoder -> postRequestDecoder
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler customFrameHandler -> customFrameHandler
    io.vertx.core.net.NetSocket netSocket -> netSocket
    87:99:void <init>(io.vertx.core.http.impl.Http2ServerConnection,io.netty.handler.codec.http2.Http2Stream,io.vertx.core.spi.metrics.HttpServerMetrics,java.lang.String,io.netty.handler.codec.http2.Http2Headers,java.lang.String,boolean) -> <init>
    103:104:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    108:112:void handleException(java.lang.Throwable) -> handleException
    116:123:void handleClose() -> handleClose
    127:130:void handleCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> handleCustomFrame
    133:144:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    147:175:void handleEnd(io.vertx.core.MultiMap) -> handleEnd
    179:187:void handleReset(long) -> handleReset
    190:193:void checkEnded() -> checkEnded
    197:200:io.vertx.core.http.HttpServerRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    205:211:io.vertx.core.http.HttpServerRequest handler(io.vertx.core.Handler) -> handler
    216:219:io.vertx.core.http.HttpServerRequest pause() -> pause
    224:227:io.vertx.core.http.HttpServerRequest resume() -> resume
    232:238:io.vertx.core.http.HttpServerRequest endHandler(io.vertx.core.Handler) -> endHandler
    243:243:io.vertx.core.http.HttpVersion version() -> version
    248:254:io.vertx.core.http.HttpMethod method() -> method
    259:264:java.lang.String rawMethod() -> rawMethod
    269:269:boolean isSSL() -> isSSL
    274:282:java.lang.String uri() -> uri
    287:295:java.lang.String path() -> path
    300:308:java.lang.String query() -> query
    313:314:java.lang.String scheme() -> scheme
    319:320:java.lang.String host() -> host
    325:325:io.vertx.core.http.impl.Http2ServerResponseImpl response() -> response
    330:335:io.vertx.core.MultiMap headers() -> headers
    340:340:java.lang.String getHeader(java.lang.String) -> getHeader
    345:345:java.lang.String getHeader(java.lang.CharSequence) -> getHeader
    350:355:io.vertx.core.MultiMap params() -> params
    360:360:java.lang.String getParam(java.lang.String) -> getParam
    365:365:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    370:370:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    375:375:javax.net.ssl.SSLSession sslSession() -> sslSession
    380:380:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    385:397:java.lang.String absoluteURI() -> absoluteURI
    402:409:io.vertx.core.net.NetSocket netSocket() -> netSocket
    414:441:io.vertx.core.http.HttpServerRequest setExpectMultipart(boolean) -> setExpectMultipart
    446:448:boolean isExpectMultipart() -> isExpectMultipart
    453:459:io.vertx.core.http.HttpServerRequest uploadHandler(io.vertx.core.Handler) -> uploadHandler
    464:470:io.vertx.core.MultiMap formAttributes() -> formAttributes
    475:475:java.lang.String getFormAttribute(java.lang.String) -> getFormAttribute
    480:480:io.vertx.core.http.ServerWebSocket upgrade() -> upgrade
    485:487:boolean isEnded() -> isEnded
    492:495:io.vertx.core.http.HttpServerRequest customFrameHandler(io.vertx.core.Handler) -> customFrameHandler
    500:500:io.vertx.core.http.HttpConnection connection() -> connection
    55:55:void doResume() -> doResume
    55:55:void doPause() -> doPause
    55:55:io.vertx.core.http.HttpServerResponse response() -> response
    55:55:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    55:55:io.vertx.core.streams.ReadStream resume() -> resume
    55:55:io.vertx.core.streams.ReadStream pause() -> pause
    55:55:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    55:55:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    55:55:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    433:433:io.vertx.core.Handler lambda$setExpectMultipart$0() -> lambda$setExpectMultipart$0
    57:57:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http2ServerResponseImpl -> io.vertx.core.http.impl.Http2ServerResponseImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.http.impl.VertxHttp2Stream stream -> stream
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    io.vertx.core.http.impl.Http2ServerConnection conn -> conn
    boolean push -> push
    java.lang.Object metric -> metric
    java.lang.String host -> host
    io.netty.handler.codec.http2.Http2Headers headers -> headers
    io.vertx.core.http.impl.Http2HeadersAdaptor headersMap -> headersMap
    io.netty.handler.codec.http2.Http2Headers trailers -> trailers
    io.vertx.core.http.impl.Http2HeadersAdaptor trailedMap -> trailedMap
    boolean chunked -> chunked
    boolean headWritten -> headWritten
    boolean ended -> ended
    int statusCode -> statusCode
    java.lang.String statusMessage -> statusMessage
    io.vertx.core.Handler drainHandler -> drainHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler headersEndHandler -> headersEndHandler
    io.vertx.core.Handler bodyEndHandler -> bodyEndHandler
    io.vertx.core.Handler closeHandler -> closeHandler
    io.vertx.core.Handler endHandler -> endHandler
    long bytesWritten -> bytesWritten
    int numPush -> numPush
    boolean inHandler -> inHandler
    58:89:void <init>(io.vertx.core.http.impl.Http2ServerConnection,io.vertx.core.http.impl.VertxHttp2Stream,java.lang.Object,boolean,java.lang.String,java.lang.String) -> <init>
    58:110:void <init>(io.vertx.core.http.impl.Http2ServerConnection,io.vertx.core.http.impl.VertxHttp2Stream,io.vertx.core.http.HttpMethod,java.lang.String,boolean,java.lang.String) -> <init>
    113:114:void beginRequest() -> beginRequest
    117:118:boolean endRequest() -> endRequest
    122:124:void callReset(long) -> callReset
    127:130:void handleError(java.lang.Throwable) -> handleError
    133:134:void handleClose() -> handleClose
    137:140:void checkHeadWritten() -> checkHeadWritten
    144:150:io.vertx.core.http.HttpServerResponse exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    155:157:int getStatusCode() -> getStatusCode
    162:169:io.vertx.core.http.HttpServerResponse setStatusCode(int) -> setStatusCode
    174:179:java.lang.String getStatusMessage() -> getStatusMessage
    184:188:io.vertx.core.http.HttpServerResponse setStatusMessage(java.lang.String) -> setStatusMessage
    193:197:io.vertx.core.http.HttpServerResponse setChunked(boolean) -> setChunked
    202:204:boolean isChunked() -> isChunked
    209:214:io.vertx.core.MultiMap headers() -> headers
    219:223:io.vertx.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.String) -> putHeader
    228:232:io.vertx.core.http.HttpServerResponse putHeader(java.lang.CharSequence,java.lang.CharSequence) -> putHeader
    237:241:io.vertx.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.Iterable) -> putHeader
    246:250:io.vertx.core.http.HttpServerResponse putHeader(java.lang.CharSequence,java.lang.Iterable) -> putHeader
    255:260:io.vertx.core.MultiMap trailers() -> trailers
    265:269:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.String,java.lang.String) -> putTrailer
    274:278:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.CharSequence,java.lang.CharSequence) -> putTrailer
    283:287:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.String,java.lang.Iterable) -> putTrailer
    292:296:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.CharSequence,java.lang.Iterable) -> putTrailer
    301:307:io.vertx.core.http.HttpServerResponse closeHandler(io.vertx.core.Handler) -> closeHandler
    312:318:io.vertx.core.http.HttpServerResponse endHandler(io.vertx.core.Handler) -> endHandler
    323:328:io.vertx.core.http.HttpServerResponse writeContinue() -> writeContinue
    333:334:io.vertx.core.http.HttpServerResponse write(io.vertx.core.buffer.Buffer) -> write
    339:339:io.vertx.core.http.HttpServerResponse write(java.lang.String,java.lang.String) -> write
    344:344:io.vertx.core.http.HttpServerResponse write(java.lang.String) -> write
    348:349:io.vertx.core.http.impl.Http2ServerResponseImpl write(io.netty.buffer.ByteBuf) -> write
    354:355:void end(java.lang.String) -> end
    359:360:void end(java.lang.String,java.lang.String) -> end
    364:365:void end(io.vertx.core.buffer.Buffer) -> end
    369:370:void end() -> end
    373:376:void toNetSocket() -> toNetSocket
    379:382:void end(io.netty.buffer.ByteBuf) -> end
    385:397:boolean checkSendHeaders(boolean) -> checkSendHeaders
    402:428:void write(io.netty.buffer.ByteBuf,boolean) -> write
    432:438:io.vertx.core.http.HttpServerResponse writeCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> writeCustomFrame
    442:445:void checkEnded() -> checkEnded
    448:469:void handleEnded(boolean) -> handleEnded
    472:475:void writabilityChanged() -> writabilityChanged
    479:482:boolean writeQueueFull() -> writeQueueFull
    487:491:io.vertx.core.http.HttpServerResponse setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    496:502:io.vertx.core.http.HttpServerResponse drainHandler(io.vertx.core.Handler) -> drainHandler
    507:507:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long) -> sendFile
    512:577:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long,io.vertx.core.Handler) -> sendFile
    582:583:void close() -> close
    587:589:boolean ended() -> ended
    594:594:boolean closed() -> closed
    599:601:boolean headWritten() -> headWritten
    606:609:io.vertx.core.http.HttpServerResponse headersEndHandler(io.vertx.core.Handler) -> headersEndHandler
    614:617:io.vertx.core.http.HttpServerResponse bodyEndHandler(io.vertx.core.Handler) -> bodyEndHandler
    622:624:long bytesWritten() -> bytesWritten
    629:629:int streamId() -> streamId
    634:640:void reset(long) -> reset
    644:644:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.Handler) -> push
    649:649:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> push
    654:665:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> push
    670:670:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler) -> push
    48:48:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    48:48:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    48:48:void end(java.lang.Object) -> end
    48:48:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    48:48:io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    48:48:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    570:575:void lambda$sendFile$5(io.vertx.core.http.impl.FileStreamChannel,java.io.RandomAccessFile,io.vertx.core.Future,io.netty.channel.ChannelFuture) -> lambda$sendFile$5
    553:562:void lambda$sendFile$4(io.vertx.core.Handler,io.vertx.core.Context,io.vertx.core.AsyncResult) -> lambda$sendFile$4
    559:560:void lambda$null$3(io.vertx.core.Handler,java.lang.Void) -> lambda$null$3
    532:532:void lambda$sendFile$2(io.vertx.core.Handler,java.io.IOException,java.lang.Void) -> lambda$sendFile$2
    520:520:void lambda$sendFile$1(io.vertx.core.Handler,java.lang.Void) -> lambda$sendFile$1
    460:460:void lambda$handleEnded$0(java.lang.Void) -> lambda$handleEnded$0
    50:50:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpChannelConnector -> io.vertx.core.http.impl.HttpChannelConnector:
    io.vertx.core.http.impl.HttpClientImpl client -> client
    io.vertx.core.http.HttpClientOptions options -> options
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    io.vertx.core.http.HttpVersion version -> version
    long weight -> weight
    long http1Weight -> http1Weight
    long http2Weight -> http2Weight
    long http2MaxConcurrency -> http2MaxConcurrency
    long http1MaxConcurrency -> http1MaxConcurrency
    boolean ssl -> ssl
    java.lang.String peerHost -> peerHost
    java.lang.String host -> host
    int port -> port
    java.lang.Object metric -> metric
    68:84:void <init>(io.vertx.core.http.impl.HttpClientImpl,java.lang.Object,io.vertx.core.http.HttpVersion,boolean,java.lang.String,java.lang.String,int) -> <init>
    88:89:void close(io.vertx.core.http.impl.HttpClientConnection) -> close
    95:216:long connect(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl) -> connect
    220:221:void applyConnectionOptions(io.netty.bootstrap.Bootstrap) -> applyConnectionOptions
    224:227:void applyHttp2ConnectionOptions(io.netty.channel.ChannelPipeline) -> applyHttp2ConnectionOptions
    230:246:void applyHttp1xConnectionOptions(io.netty.channel.ChannelPipeline) -> applyHttp1xConnectionOptions
    249:254:void handshakeFailure(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,java.lang.Throwable,io.vertx.core.http.impl.pool.ConnectionListener) -> handshakeFailure
    263:280:void http1xConnected(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.http.HttpVersion,java.lang.String,int,boolean,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> http1xConnected
    287:319:void http2Connected(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> http2Connected
    322:329:void connectFailed(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.http.impl.pool.ConnectionListener,java.lang.Throwable) -> connectFailed
    44:44:void close(java.lang.Object) -> close
    311:315:void lambda$http2Connected$7(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.http.impl.Http2ClientConnection) -> lambda$http2Connected$7
    297:309:void lambda$http2Connected$6(io.vertx.core.http.impl.pool.ConnectionListener,io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,io.vertx.core.http.impl.Http2ClientConnection) -> lambda$http2Connected$6
    293:293:io.vertx.core.http.impl.Http2ClientConnection lambda$http2Connected$5(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.vertx.core.http.impl.VertxHttp2ConnectionHandler) -> lambda$http2Connected$5
    277:278:void lambda$http1xConnected$4(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.http.impl.Http1xClientConnection) -> lambda$http1xConnected$4
    274:275:void lambda$http1xConnected$3(io.vertx.core.http.impl.pool.ConnectionListener,io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,io.vertx.core.http.impl.Http1xClientConnection) -> lambda$http1xConnected$3
    196:212:void lambda$connect$2(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.vertx.core.AsyncResult) -> lambda$connect$2
    113:192:void lambda$connect$1(boolean,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> lambda$connect$1
    119:138:void lambda$null$0(io.netty.handler.ssl.SslHandler,boolean,io.netty.channel.Channel,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.netty.util.concurrent.Future) -> lambda$null$0
    44:44:java.lang.String access$000(io.vertx.core.http.impl.HttpChannelConnector) -> access$000
    44:44:int access$100(io.vertx.core.http.impl.HttpChannelConnector) -> access$100
    44:44:void access$200(io.vertx.core.http.impl.HttpChannelConnector,io.netty.channel.ChannelPipeline) -> access$200
    44:44:java.lang.String access$300(io.vertx.core.http.impl.HttpChannelConnector) -> access$300
    44:44:void access$400(io.vertx.core.http.impl.HttpChannelConnector,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.http.HttpVersion,java.lang.String,int,boolean,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> access$400
    44:44:void access$500(io.vertx.core.http.impl.HttpChannelConnector,io.netty.channel.ChannelPipeline) -> access$500
    44:44:void access$600(io.vertx.core.http.impl.HttpChannelConnector,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> access$600
io.vertx.core.http.impl.HttpChannelConnector$1 -> io.vertx.core.http.impl.HttpChannelConnector$1:
    io.netty.channel.ChannelPipeline val$pipeline -> val$pipeline
    io.vertx.core.http.impl.pool.ConnectionListener val$listener -> val$listener
    io.vertx.core.impl.ContextImpl val$context -> val$context
    io.netty.channel.Channel val$ch -> val$ch
    io.vertx.core.http.impl.HttpChannelConnector this$0 -> this$0
    176:176:void <init>(io.vertx.core.http.impl.HttpChannelConnector,io.vertx.core.http.Http2Settings,io.netty.channel.ChannelPipeline,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> <init>
    179:181:void upgradeTo(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse) -> upgradeTo
io.vertx.core.http.impl.HttpChannelConnector$1UpgradeRequestHandler -> io.vertx.core.http.impl.HttpChannelConnector$1UpgradeRequestHandler:
    io.netty.handler.codec.http.HttpClientCodec val$httpCodec -> val$httpCodec
    io.netty.channel.Channel val$ch -> val$ch
    io.vertx.core.http.impl.pool.ConnectionListener val$listener -> val$listener
    io.vertx.core.impl.ContextImpl val$context -> val$context
    io.vertx.core.http.impl.HttpChannelConnector this$0 -> this$0
    143:143:void <init>(io.vertx.core.http.impl.HttpChannelConnector,io.netty.handler.codec.http.HttpClientCodec,io.netty.channel.Channel,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl) -> <init>
    146:155:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    158:166:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    169:174:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
io.vertx.core.http.impl.HttpChunkContentCompressor -> io.vertx.core.http.impl.HttpChunkContentCompressor:
    27:39:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    42:43:void <init>(int) -> <init>
io.vertx.core.http.impl.HttpClientConnection -> io.vertx.core.http.impl.HttpClientConnection:
    io.netty.channel.Channel channel() -> channel
    void reportBytesWritten(long) -> reportBytesWritten
    void reportBytesRead(long) -> reportBytesRead
    void close() -> close
    void createStream(io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.Handler) -> createStream
    io.vertx.core.impl.ContextImpl getContext() -> getContext
io.vertx.core.http.impl.HttpClientImpl -> io.vertx.core.http.impl.HttpClientImpl:
    java.util.function.Function DEFAULT_HANDLER -> DEFAULT_HANDLER
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.http.HttpClientOptions options -> options
    io.vertx.core.impl.ContextImpl creatingContext -> creatingContext
    io.vertx.core.http.impl.ConnectionManager websocketCM -> websocketCM
    io.vertx.core.http.impl.ConnectionManager httpCM -> httpCM
    io.vertx.core.Closeable closeHook -> closeHook
    io.vertx.core.net.ProxyType proxyType -> proxyType
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    boolean keepAlive -> keepAlive
    boolean pipelining -> pipelining
    boolean closed -> closed
    java.util.function.Function redirectHandler -> redirectHandler
    65:164:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.HttpClientOptions) -> <init>
    167:167:io.vertx.core.spi.metrics.HttpClientMetrics metrics() -> metrics
    172:172:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> websocket
    177:178:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> websocket
    183:183:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    187:188:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    193:193:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.Handler) -> websocket
    198:198:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    203:203:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.Handler) -> websocket
    208:209:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> websocket
    214:214:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    219:220:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    225:225:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> websocket
    230:230:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    235:235:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler) -> websocket
    240:241:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler) -> websocket
    246:246:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    252:253:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    258:258:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler) -> websocket
    264:264:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    269:270:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler) -> websocket
    276:277:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler) -> websocket
    282:283:io.vertx.core.http.HttpClient websocketAbs(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocketAbs
    288:289:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    295:296:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    301:301:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler) -> websocket
    307:307:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    312:312:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.Handler) -> websocket
    317:317:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    322:322:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> websocket
    327:327:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    332:332:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler) -> websocket
    337:337:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    342:342:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler) -> websocket
    347:347:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    353:353:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(io.vertx.core.http.RequestOptions) -> websocketStream
    358:358:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(int,java.lang.String,java.lang.String) -> websocketStream
    363:363:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,java.lang.String) -> websocketStream
    368:368:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap) -> websocketStream
    373:373:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    378:378:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    383:383:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    388:388:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    393:393:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    400:422:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStreamAbs(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStreamAbs
    427:427:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    433:433:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    438:438:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    443:443:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String) -> websocketStream
    448:448:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    453:453:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    458:458:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    463:464:io.vertx.core.http.HttpClientRequest requestAbs(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler) -> requestAbs
    469:469:io.vertx.core.http.HttpClientRequest get(io.vertx.core.http.RequestOptions) -> get
    474:475:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> request
    480:480:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.Handler) -> request
    485:485:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String) -> request
    490:490:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler) -> request
    495:517:io.vertx.core.http.HttpClientRequest requestAbs(io.vertx.core.http.HttpMethod,java.lang.String) -> requestAbs
    522:522:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,int,java.lang.String,java.lang.String) -> request
    527:527:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> request
    532:532:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,io.vertx.core.http.RequestOptions) -> request
    537:537:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String) -> request
    542:542:io.vertx.core.http.HttpClientRequest get(int,java.lang.String,java.lang.String) -> get
    547:547:io.vertx.core.http.HttpClientRequest get(java.lang.String,java.lang.String) -> get
    552:552:io.vertx.core.http.HttpClientRequest get(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> get
    557:557:io.vertx.core.http.HttpClientRequest get(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> get
    562:562:io.vertx.core.http.HttpClientRequest get(java.lang.String,java.lang.String,io.vertx.core.Handler) -> get
    567:567:io.vertx.core.http.HttpClientRequest get(java.lang.String) -> get
    572:572:io.vertx.core.http.HttpClientRequest get(java.lang.String,io.vertx.core.Handler) -> get
    577:577:io.vertx.core.http.HttpClientRequest getAbs(java.lang.String) -> getAbs
    582:582:io.vertx.core.http.HttpClientRequest getAbs(java.lang.String,io.vertx.core.Handler) -> getAbs
    587:587:io.vertx.core.http.HttpClient getNow(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> getNow
    592:593:io.vertx.core.http.HttpClient getNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> getNow
    598:598:io.vertx.core.http.HttpClient getNow(java.lang.String,java.lang.String,io.vertx.core.Handler) -> getNow
    603:604:io.vertx.core.http.HttpClient getNow(java.lang.String,io.vertx.core.Handler) -> getNow
    609:609:io.vertx.core.http.HttpClientRequest post(io.vertx.core.http.RequestOptions) -> post
    614:614:io.vertx.core.http.HttpClientRequest post(int,java.lang.String,java.lang.String) -> post
    619:619:io.vertx.core.http.HttpClientRequest post(java.lang.String,java.lang.String) -> post
    624:624:io.vertx.core.http.HttpClientRequest post(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> post
    629:629:io.vertx.core.http.HttpClientRequest post(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> post
    634:634:io.vertx.core.http.HttpClientRequest post(java.lang.String,java.lang.String,io.vertx.core.Handler) -> post
    639:639:io.vertx.core.http.HttpClientRequest post(java.lang.String) -> post
    644:644:io.vertx.core.http.HttpClientRequest post(java.lang.String,io.vertx.core.Handler) -> post
    649:649:io.vertx.core.http.HttpClientRequest postAbs(java.lang.String) -> postAbs
    654:654:io.vertx.core.http.HttpClientRequest postAbs(java.lang.String,io.vertx.core.Handler) -> postAbs
    659:659:io.vertx.core.http.HttpClientRequest head(io.vertx.core.http.RequestOptions) -> head
    664:664:io.vertx.core.http.HttpClientRequest head(int,java.lang.String,java.lang.String) -> head
    669:669:io.vertx.core.http.HttpClientRequest head(java.lang.String,java.lang.String) -> head
    674:674:io.vertx.core.http.HttpClientRequest head(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> head
    679:679:io.vertx.core.http.HttpClientRequest head(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> head
    684:684:io.vertx.core.http.HttpClientRequest head(java.lang.String,java.lang.String,io.vertx.core.Handler) -> head
    689:689:io.vertx.core.http.HttpClientRequest head(java.lang.String) -> head
    694:694:io.vertx.core.http.HttpClientRequest head(java.lang.String,io.vertx.core.Handler) -> head
    699:699:io.vertx.core.http.HttpClientRequest headAbs(java.lang.String) -> headAbs
    704:704:io.vertx.core.http.HttpClientRequest headAbs(java.lang.String,io.vertx.core.Handler) -> headAbs
    709:709:io.vertx.core.http.HttpClient headNow(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> headNow
    714:715:io.vertx.core.http.HttpClient headNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> headNow
    720:720:io.vertx.core.http.HttpClient headNow(java.lang.String,java.lang.String,io.vertx.core.Handler) -> headNow
    725:726:io.vertx.core.http.HttpClient headNow(java.lang.String,io.vertx.core.Handler) -> headNow
    731:731:io.vertx.core.http.HttpClientRequest options(io.vertx.core.http.RequestOptions) -> options
    736:736:io.vertx.core.http.HttpClientRequest options(int,java.lang.String,java.lang.String) -> options
    741:741:io.vertx.core.http.HttpClientRequest options(java.lang.String,java.lang.String) -> options
    746:746:io.vertx.core.http.HttpClientRequest options(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> options
    751:751:io.vertx.core.http.HttpClientRequest options(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> options
    756:756:io.vertx.core.http.HttpClientRequest options(java.lang.String,java.lang.String,io.vertx.core.Handler) -> options
    761:761:io.vertx.core.http.HttpClientRequest options(java.lang.String) -> options
    766:766:io.vertx.core.http.HttpClientRequest options(java.lang.String,io.vertx.core.Handler) -> options
    771:771:io.vertx.core.http.HttpClientRequest optionsAbs(java.lang.String) -> optionsAbs
    776:776:io.vertx.core.http.HttpClientRequest optionsAbs(java.lang.String,io.vertx.core.Handler) -> optionsAbs
    781:781:io.vertx.core.http.HttpClient optionsNow(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> optionsNow
    786:787:io.vertx.core.http.HttpClient optionsNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> optionsNow
    792:792:io.vertx.core.http.HttpClient optionsNow(java.lang.String,java.lang.String,io.vertx.core.Handler) -> optionsNow
    797:798:io.vertx.core.http.HttpClient optionsNow(java.lang.String,io.vertx.core.Handler) -> optionsNow
    803:803:io.vertx.core.http.HttpClientRequest put(io.vertx.core.http.RequestOptions) -> put
    808:808:io.vertx.core.http.HttpClientRequest put(int,java.lang.String,java.lang.String) -> put
    813:813:io.vertx.core.http.HttpClientRequest put(java.lang.String,java.lang.String) -> put
    818:818:io.vertx.core.http.HttpClientRequest put(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> put
    823:823:io.vertx.core.http.HttpClientRequest put(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> put
    828:828:io.vertx.core.http.HttpClientRequest put(java.lang.String,java.lang.String,io.vertx.core.Handler) -> put
    833:833:io.vertx.core.http.HttpClientRequest put(java.lang.String) -> put
    838:838:io.vertx.core.http.HttpClientRequest put(java.lang.String,io.vertx.core.Handler) -> put
    843:843:io.vertx.core.http.HttpClientRequest putAbs(java.lang.String) -> putAbs
    848:848:io.vertx.core.http.HttpClientRequest putAbs(java.lang.String,io.vertx.core.Handler) -> putAbs
    853:853:io.vertx.core.http.HttpClientRequest delete(io.vertx.core.http.RequestOptions) -> delete
    858:858:io.vertx.core.http.HttpClientRequest delete(int,java.lang.String,java.lang.String) -> delete
    863:863:io.vertx.core.http.HttpClientRequest delete(java.lang.String,java.lang.String) -> delete
    868:868:io.vertx.core.http.HttpClientRequest delete(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> delete
    873:873:io.vertx.core.http.HttpClientRequest delete(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> delete
    878:878:io.vertx.core.http.HttpClientRequest delete(java.lang.String,java.lang.String,io.vertx.core.Handler) -> delete
    883:883:io.vertx.core.http.HttpClientRequest delete(java.lang.String) -> delete
    888:888:io.vertx.core.http.HttpClientRequest delete(java.lang.String,io.vertx.core.Handler) -> delete
    893:893:io.vertx.core.http.HttpClientRequest deleteAbs(java.lang.String) -> deleteAbs
    898:898:io.vertx.core.http.HttpClientRequest deleteAbs(java.lang.String,io.vertx.core.Handler) -> deleteAbs
    903:915:void close() -> close
    919:919:boolean isMetricsEnabled() -> isMetricsEnabled
    924:924:io.vertx.core.spi.metrics.Metrics getMetrics() -> getMetrics
    929:933:io.vertx.core.http.HttpClient redirectHandler(java.util.function.Function) -> redirectHandler
    938:938:java.util.function.Function redirectHandler() -> redirectHandler
    942:942:io.vertx.core.http.HttpClientOptions getOptions() -> getOptions
    951:961:void getConnectionForWebsocket(boolean,int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl) -> getConnectionForWebsocket
    967:968:void getConnectionForRequest(java.lang.String,boolean,int,java.lang.String,io.vertx.core.Handler,java.util.function.BiFunction,java.util.function.BiConsumer) -> getConnectionForRequest
    974:974:io.vertx.core.impl.VertxInternal getVertx() -> getVertx
    978:978:io.vertx.core.net.impl.SSLHelper getSslHelper() -> getSslHelper
    984:986:java.net.URL parseUrl(java.lang.String) -> parseUrl
    991:992:io.vertx.core.http.HttpClient requestNow(io.vertx.core.http.HttpMethod,io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> requestNow
    996:996:io.vertx.core.http.HttpClientRequest createRequest(io.vertx.core.http.HttpMethod,java.lang.String,int,java.lang.Boolean,java.lang.String,io.vertx.core.MultiMap) -> createRequest
    1000:1033:io.vertx.core.http.HttpClientRequest createRequest(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,int,java.lang.Boolean,java.lang.String,io.vertx.core.MultiMap) -> createRequest
    1037:1040:void checkClosed() -> checkClosed
    1136:1138:void finalize() -> finalize
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStreamAbs(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStreamAbs
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(int,java.lang.String,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(io.vertx.core.http.RequestOptions) -> websocketStream
    957:960:void lambda$getConnectionForWebsocket$5(io.vertx.core.Handler,io.vertx.core.impl.ContextInternal,java.lang.Throwable) -> lambda$getConnectionForWebsocket$5
    958:959:void lambda$null$4(io.vertx.core.Handler,java.lang.Throwable) -> lambda$null$4
    952:955:java.lang.Boolean lambda$getConnectionForWebsocket$3(io.vertx.core.Handler,io.vertx.core.impl.ContextInternal,io.vertx.core.http.impl.HttpClientConnection) -> lambda$getConnectionForWebsocket$3
    953:954:void lambda$null$2(io.vertx.core.Handler,io.vertx.core.http.impl.HttpClientConnection) -> lambda$null$2
    145:147:void lambda$new$1(io.vertx.core.Handler) -> lambda$new$1
    67:103:io.vertx.core.Future lambda$new$0(io.vertx.core.http.HttpClientResponse) -> lambda$new$0
    63:63:void access$000(io.vertx.core.http.impl.HttpClientImpl) -> access$000
    63:63:io.vertx.core.impl.VertxInternal access$100(io.vertx.core.http.impl.HttpClientImpl) -> access$100
    63:63:io.vertx.core.logging.Logger access$200() -> access$200
    63:63:io.vertx.core.http.HttpClientOptions access$300(io.vertx.core.http.impl.HttpClientImpl) -> access$300
    63:63:void access$400(io.vertx.core.http.impl.HttpClientImpl,boolean,int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl) -> access$400
    107:107:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpClientImpl$1 -> io.vertx.core.http.impl.HttpClientImpl$1:
    int[] $SwitchMap$io$vertx$core$http$HttpVersion -> $SwitchMap$io$vertx$core$http$HttpVersion
    129:129:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpClientImpl$WebSocketStream -> io.vertx.core.http.impl.HttpClientImpl$WebSocketStream:
    int port -> port
    java.lang.String host -> host
    java.lang.String requestURI -> requestURI
    io.vertx.core.MultiMap headers -> headers
    io.vertx.core.http.WebsocketVersion version -> version
    java.lang.String subProtocols -> subProtocols
    io.vertx.core.Handler handler -> handler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler endHandler -> endHandler
    java.lang.Boolean ssl -> ssl
    io.vertx.core.http.impl.HttpClientImpl this$0 -> this$0
    1055:1063:void <init>(io.vertx.core.http.impl.HttpClientImpl,int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,java.lang.Boolean) -> <init>
    1066:1076:void subscribe(io.vertx.core.Handler,io.vertx.core.Handler) -> subscribe
    1080:1081:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    1086:1111:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    1116:1117:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    1122:1122:io.vertx.core.streams.ReadStream pause() -> pause
    1127:1127:io.vertx.core.streams.ReadStream resume() -> resume
    1042:1042:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    1107:1109:void lambda$handler$2(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.Http1xClientConnection) -> lambda$handler$2
    1100:1102:void lambda$handler$1(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket) -> lambda$handler$1
    1068:1073:void lambda$subscribe$0(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$subscribe$0
io.vertx.core.http.impl.HttpClientRequestBase -> io.vertx.core.http.impl.HttpClientRequestBase:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.http.impl.HttpClientImpl client -> client
    io.vertx.core.http.HttpMethod method -> method
    java.lang.String uri -> uri
    java.lang.String path -> path
    java.lang.String host -> host
    int port -> port
    java.lang.String query -> query
    boolean ssl -> ssl
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    long currentTimeoutTimerId -> currentTimeoutTimerId
    long currentTimeoutMs -> currentTimeoutMs
    long lastDataReceived -> lastDataReceived
    java.lang.Throwable exceptionOccurred -> exceptionOccurred
    java.lang.Object metric -> metric
    38:53:void <init>(io.vertx.core.http.impl.HttpClientImpl,boolean,io.vertx.core.http.HttpMethod,java.lang.String,int,java.lang.String) -> <init>
    56:56:java.lang.Object metric() -> metric
    60:61:void metric(java.lang.Object) -> metric
    java.lang.Object getLock() -> getLock
    void doHandleResponse(io.vertx.core.http.impl.HttpClientResponseImpl,long) -> doHandleResponse
    void checkComplete() -> checkComplete
    68:71:java.lang.String hostHeader() -> hostHeader
    77:77:java.lang.String absoluteURI() -> absoluteURI
    81:81:java.lang.String query() -> query
    85:85:java.lang.String path() -> path
    89:89:java.lang.String uri() -> uri
    94:94:io.vertx.core.http.HttpMethod method() -> method
    99:107:io.vertx.core.http.HttpClientRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    111:113:io.vertx.core.Handler exceptionHandler() -> exceptionHandler
    118:123:io.vertx.core.http.HttpClientRequest setTimeout(long) -> setTimeout
    127:136:void handleException(java.lang.Throwable) -> handleException
    139:151:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl) -> handleResponse
    154:159:void cancelOutstandingTimeoutTimer() -> cancelOutstandingTimeoutTimer
    162:175:void handleTimeout(long) -> handleTimeout
    178:179:void timeout(long) -> timeout
    182:182:void handleResponseEnd() -> handleResponseEnd
    185:190:void dataReceived() -> dataReceived
    25:25:io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    25:25:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    25:25:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    121:121:void lambda$setTimeout$0(long,java.lang.Long) -> lambda$setTimeout$0
    27:27:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpClientRequestImpl -> io.vertx.core.http.impl.HttpClientRequestImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.Handler respHandler -> respHandler
    io.vertx.core.Handler endHandler -> endHandler
    boolean chunked -> chunked
    java.lang.String hostHeader -> hostHeader
    java.lang.String rawMethod -> rawMethod
    io.vertx.core.Handler continueHandler -> continueHandler
    io.vertx.core.http.impl.HttpClientStream stream -> stream
    java.lang.Object lock -> lock
    io.vertx.core.Handler drainHandler -> drainHandler
    io.vertx.core.Handler pushHandler -> pushHandler
    io.vertx.core.Handler connectionHandler -> connectionHandler
    io.vertx.core.Handler headersCompletionHandler -> headersCompletionHandler
    boolean completed -> completed
    io.vertx.core.Handler completionHandler -> completionHandler
    java.lang.Long reset -> reset
    io.netty.buffer.ByteBuf pendingChunks -> pendingChunks
    int pendingMaxSize -> pendingMaxSize
    int followRedirects -> followRedirects
    boolean connecting -> connecting
    long written -> written
    io.vertx.core.http.CaseInsensitiveHeaders headers -> headers
    67:80:void <init>(io.vertx.core.http.impl.HttpClientImpl,boolean,io.vertx.core.http.HttpMethod,java.lang.String,int,java.lang.String,io.vertx.core.impl.VertxInternal) -> <init>
    84:86:int streamId() -> streamId
    91:99:io.vertx.core.http.HttpClientRequest handler(io.vertx.core.Handler) -> handler
    104:104:io.vertx.core.http.HttpClientRequest pause() -> pause
    109:109:io.vertx.core.http.HttpClientRequest resume() -> resume
    114:122:io.vertx.core.http.HttpClientRequest setFollowRedirects(boolean) -> setFollowRedirects
    127:133:io.vertx.core.http.HttpClientRequest endHandler(io.vertx.core.Handler) -> endHandler
    142:152:io.vertx.core.http.impl.HttpClientRequestImpl setChunked(boolean) -> setChunked
    157:159:boolean isChunked() -> isChunked
    164:166:java.lang.String getRawMethod() -> getRawMethod
    171:174:io.vertx.core.http.HttpClientRequest setRawMethod(java.lang.String) -> setRawMethod
    179:182:io.vertx.core.http.HttpClientRequest setHost(java.lang.String) -> setHost
    187:189:java.lang.String getHost() -> getHost
    194:199:io.vertx.core.MultiMap headers() -> headers
    204:208:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.String) -> putHeader
    213:217:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.Iterable) -> putHeader
    222:230:io.vertx.core.http.HttpClientRequest setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    235:238:boolean writeQueueFull() -> writeQueueFull
    243:260:io.vertx.core.http.HttpClientRequest drainHandler(io.vertx.core.Handler) -> drainHandler
    265:271:io.vertx.core.http.HttpClientRequest continueHandler(io.vertx.core.Handler) -> continueHandler
    276:276:io.vertx.core.http.HttpClientRequest sendHead() -> sendHead
    281:291:io.vertx.core.http.HttpClientRequest sendHead(io.vertx.core.Handler) -> sendHead
    296:300:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.CharSequence) -> putHeader
    305:309:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.Iterable) -> putHeader
    314:317:io.vertx.core.http.HttpClientRequest pushHandler(io.vertx.core.Handler) -> pushHandler
    322:336:boolean reset(long) -> reset
    340:345:boolean tryComplete() -> tryComplete
    351:353:io.vertx.core.http.HttpConnection connection() -> connection
    358:361:io.vertx.core.http.HttpClientRequest connectionHandler(io.vertx.core.Handler) -> connectionHandler
    366:372:io.vertx.core.http.HttpClientRequest writeCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> writeCustomFrame
    376:385:void handleDrained() -> handleDrained
    388:429:void handleNextRequest(io.vertx.core.http.impl.HttpClientRequestImpl,long) -> handleNextRequest
    432:460:void doHandleResponse(io.vertx.core.http.impl.HttpClientResponseImpl,long) -> doHandleResponse
    464:464:java.lang.String hostHeader() -> hostHeader
    473:482:java.lang.Object getLock() -> getLock
    487:491:io.vertx.core.Handler checkConnect(io.vertx.core.http.HttpMethod,io.vertx.core.Handler) -> checkConnect
    495:496:io.vertx.core.Handler connectHandler(io.vertx.core.Handler) -> connectHandler
    617:663:void connect() -> connect
    666:668:void retry() -> retry
    672:722:void connected(io.vertx.core.http.impl.HttpClientStream,io.vertx.core.Handler) -> connected
    725:725:boolean contentLengthSet() -> contentLengthSet
    730:731:void end(java.lang.String) -> end
    735:737:void end(java.lang.String,java.lang.String) -> end
    741:742:void end(io.vertx.core.buffer.Buffer) -> end
    746:747:void end() -> end
    751:753:io.vertx.core.http.impl.HttpClientRequestImpl write(io.vertx.core.buffer.Buffer) -> write
    758:758:io.vertx.core.http.impl.HttpClientRequestImpl write(java.lang.String) -> write
    763:764:io.vertx.core.http.impl.HttpClientRequestImpl write(java.lang.String,java.lang.String) -> write
    768:773:void write(io.netty.buffer.ByteBuf,boolean) -> write
    776:832:void _write(io.netty.buffer.ByteBuf,boolean) -> _write
    835:838:void checkComplete() -> checkComplete
    841:844:void checkResponseHandler() -> checkResponseHandler
    847:849:io.vertx.core.Handler pushHandler() -> pushHandler
    46:46:void handleException(java.lang.Throwable) -> handleException
    46:46:io.vertx.core.http.HttpClientRequest setTimeout(long) -> setTimeout
    46:46:io.vertx.core.http.HttpClientRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    46:46:io.vertx.core.http.HttpMethod method() -> method
    46:46:java.lang.String uri() -> uri
    46:46:java.lang.String path() -> path
    46:46:java.lang.String query() -> query
    46:46:java.lang.String absoluteURI() -> absoluteURI
    46:46:io.vertx.core.http.HttpClientRequest write(java.lang.String,java.lang.String) -> write
    46:46:io.vertx.core.http.HttpClientRequest write(java.lang.String) -> write
    46:46:io.vertx.core.http.HttpClientRequest setChunked(boolean) -> setChunked
    46:46:io.vertx.core.http.HttpClientRequest write(io.vertx.core.buffer.Buffer) -> write
    46:46:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    46:46:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    46:46:void end(java.lang.Object) -> end
    46:46:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    46:46:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    46:46:io.vertx.core.streams.ReadStream resume() -> resume
    46:46:io.vertx.core.streams.ReadStream pause() -> pause
    46:46:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    657:660:void lambda$connect$10(io.vertx.core.impl.ContextInternal,java.lang.Throwable) -> lambda$connect$10
    658:659:void lambda$null$9(java.lang.Throwable) -> lambda$null$9
    641:655:java.lang.Boolean lambda$connect$8(io.vertx.core.impl.ContextInternal,io.vertx.core.http.impl.HttpClientConnection) -> lambda$connect$8
    646:654:void lambda$null$7(io.vertx.core.impl.ContextInternal,io.vertx.core.AsyncResult) -> lambda$null$7
    649:650:void lambda$null$6(io.vertx.core.http.impl.HttpClientStream) -> lambda$null$6
    498:613:void lambda$connectHandler$5(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse) -> lambda$connectHandler$5
    438:443:void lambda$doHandleResponse$4(long,io.vertx.core.AsyncResult) -> lambda$doHandleResponse$4
    424:427:void lambda$handleNextRequest$3(io.vertx.core.Future,java.lang.Void) -> lambda$handleNextRequest$3
    419:422:void lambda$handleNextRequest$2(io.vertx.core.Future,java.lang.Throwable) -> lambda$handleNextRequest$2
    403:411:void lambda$handleNextRequest$1(long,io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.AsyncResult) -> lambda$handleNextRequest$1
    249:254:void lambda$drainHandler$0(java.lang.Void) -> lambda$drainHandler$0
    46:46:io.vertx.core.impl.VertxInternal access$000(io.vertx.core.http.impl.HttpClientRequestImpl) -> access$000
    48:48:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpClientRequestImpl$1 -> io.vertx.core.http.impl.HttpClientRequestImpl$1:
    boolean resumed -> resumed
    io.vertx.core.http.HttpClientResponse val$resp -> val$resp
    io.vertx.core.net.NetSocket val$socket -> val$socket
    io.vertx.core.http.impl.HttpClientRequestImpl this$0 -> this$0
    505:505:void <init>(io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.http.HttpClientResponse,io.vertx.core.net.NetSocket) -> <init>
    510:510:io.vertx.core.http.HttpClientRequest request() -> request
    515:515:int statusCode() -> statusCode
    520:520:java.lang.String statusMessage() -> statusMessage
    525:525:io.vertx.core.MultiMap headers() -> headers
    530:530:java.lang.String getHeader(java.lang.String) -> getHeader
    535:535:java.lang.String getHeader(java.lang.CharSequence) -> getHeader
    540:540:java.lang.String getTrailer(java.lang.String) -> getTrailer
    545:545:io.vertx.core.MultiMap trailers() -> trailers
    550:550:java.util.List cookies() -> cookies
    555:555:io.vertx.core.http.HttpVersion version() -> version
    560:561:io.vertx.core.http.HttpClientResponse bodyHandler(io.vertx.core.Handler) -> bodyHandler
    566:567:io.vertx.core.http.HttpClientResponse customFrameHandler(io.vertx.core.Handler) -> customFrameHandler
    572:576:io.vertx.core.net.NetSocket netSocket() -> netSocket
    581:582:io.vertx.core.http.HttpClientResponse endHandler(io.vertx.core.Handler) -> endHandler
    587:588:io.vertx.core.http.HttpClientResponse handler(io.vertx.core.Handler) -> handler
    593:594:io.vertx.core.http.HttpClientResponse pause() -> pause
    599:600:io.vertx.core.http.HttpClientResponse resume() -> resume
    605:606:io.vertx.core.http.HttpClientResponse exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    505:505:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    505:505:io.vertx.core.streams.ReadStream resume() -> resume
    505:505:io.vertx.core.streams.ReadStream pause() -> pause
    505:505:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    505:505:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    505:505:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    574:574:void lambda$netSocket$0(io.vertx.core.net.NetSocket,java.lang.Void) -> lambda$netSocket$0
io.vertx.core.http.impl.HttpClientRequestPushPromise -> io.vertx.core.http.impl.HttpClientRequestPushPromise:
    io.vertx.core.http.impl.Http2ClientConnection conn -> conn
    io.vertx.core.http.impl.Http2ClientConnection$Http2ClientStream stream -> stream
    java.lang.String rawMethod -> rawMethod
    io.vertx.core.MultiMap headers -> headers
    io.vertx.core.Handler respHandler -> respHandler
    48:53:void <init>(io.vertx.core.http.impl.Http2ClientConnection,io.netty.handler.codec.http2.Http2Stream,io.vertx.core.http.impl.HttpClientImpl,boolean,io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,java.lang.String,int,io.vertx.core.MultiMap) -> <init>
    56:56:io.vertx.core.http.impl.Http2ClientConnection$Http2ClientStream getStream() -> getStream
    61:61:java.lang.Object getLock() -> getLock
    66:71:void doHandleResponse(io.vertx.core.http.impl.HttpClientResponseImpl,long) -> doHandleResponse
    75:75:void checkComplete() -> checkComplete
    79:82:io.vertx.core.http.HttpClientRequest handler(io.vertx.core.Handler) -> handler
    87:87:io.vertx.core.http.HttpConnection connection() -> connection
    92:92:io.vertx.core.http.HttpClientRequest connectionHandler(io.vertx.core.Handler) -> connectionHandler
    97:100:boolean reset(long) -> reset
    105:105:boolean isChunked() -> isChunked
    110:110:io.vertx.core.http.HttpMethod method() -> method
    115:115:java.lang.String getRawMethod() -> getRawMethod
    120:120:io.vertx.core.http.HttpClientRequest setRawMethod(java.lang.String) -> setRawMethod
    125:125:java.lang.String uri() -> uri
    130:130:java.lang.String getHost() -> getHost
    135:135:io.vertx.core.MultiMap headers() -> headers
    140:140:io.vertx.core.http.HttpClientRequest write(io.vertx.core.buffer.Buffer) -> write
    145:145:io.vertx.core.http.HttpClientRequest setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    150:150:io.vertx.core.http.HttpClientRequest drainHandler(io.vertx.core.Handler) -> drainHandler
    155:155:io.vertx.core.http.HttpClientRequest pause() -> pause
    160:160:io.vertx.core.http.HttpClientRequest resume() -> resume
    165:165:io.vertx.core.http.HttpClientRequest endHandler(io.vertx.core.Handler) -> endHandler
    170:170:io.vertx.core.http.HttpClientRequest setFollowRedirects(boolean) -> setFollowRedirects
    175:175:io.vertx.core.http.HttpClientRequest setChunked(boolean) -> setChunked
    180:180:io.vertx.core.http.HttpClientRequest setHost(java.lang.String) -> setHost
    185:185:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.String) -> putHeader
    190:190:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.CharSequence) -> putHeader
    195:195:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.Iterable) -> putHeader
    200:200:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.Iterable) -> putHeader
    205:205:io.vertx.core.http.HttpClientRequest write(java.lang.String) -> write
    210:210:io.vertx.core.http.HttpClientRequest write(java.lang.String,java.lang.String) -> write
    215:215:io.vertx.core.http.HttpClientRequest continueHandler(io.vertx.core.Handler) -> continueHandler
    220:220:io.vertx.core.http.HttpClientRequest sendHead() -> sendHead
    225:225:io.vertx.core.http.HttpClientRequest sendHead(io.vertx.core.Handler) -> sendHead
    230:230:void end(java.lang.String) -> end
    235:235:void end(java.lang.String,java.lang.String) -> end
    240:240:void end(io.vertx.core.buffer.Buffer) -> end
    245:245:io.vertx.core.http.HttpClientRequest pushHandler(io.vertx.core.Handler) -> pushHandler
    250:250:void end() -> end
    255:255:boolean writeQueueFull() -> writeQueueFull
    260:260:io.vertx.core.http.HttpClientRequest writeCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> writeCustomFrame
    29:29:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    29:29:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    29:29:void end(java.lang.Object) -> end
    29:29:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    29:29:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    29:29:io.vertx.core.streams.ReadStream resume() -> resume
    29:29:io.vertx.core.streams.ReadStream pause() -> pause
    29:29:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
io.vertx.core.http.impl.HttpClientResponseImpl -> io.vertx.core.http.impl.HttpClientResponseImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.http.HttpVersion version -> version
    int statusCode -> statusCode
    java.lang.String statusMessage -> statusMessage
    io.vertx.core.http.impl.HttpClientRequestBase request -> request
    io.vertx.core.http.impl.HttpClientConnection conn -> conn
    io.vertx.core.http.impl.HttpClientStream stream -> stream
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler customFrameHandler -> customFrameHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    boolean hasPausedEnd -> hasPausedEnd
    boolean paused -> paused
    io.vertx.core.buffer.Buffer pausedLastChunk -> pausedLastChunk
    io.vertx.core.MultiMap pausedTrailers -> pausedTrailers
    io.vertx.core.net.NetSocket netSocket -> netSocket
    long bytesRead -> bytesRead
    io.vertx.core.MultiMap headers -> headers
    io.vertx.core.MultiMap trailers -> trailers
    java.util.List cookies -> cookies
    67:75:void <init>(io.vertx.core.http.impl.HttpClientRequestBase,io.vertx.core.http.HttpVersion,io.vertx.core.http.impl.HttpClientStream,int,java.lang.String,io.vertx.core.MultiMap) -> <init>
    79:79:io.vertx.core.http.impl.HttpClientRequestBase request() -> request
    84:84:io.vertx.core.http.HttpVersion version() -> version
    89:89:int statusCode() -> statusCode
    94:94:java.lang.String statusMessage() -> statusMessage
    99:99:io.vertx.core.MultiMap headers() -> headers
    104:104:java.lang.String getHeader(java.lang.String) -> getHeader
    109:109:java.lang.String getHeader(java.lang.CharSequence) -> getHeader
    114:119:io.vertx.core.MultiMap trailers() -> trailers
    124:124:java.lang.String getTrailer(java.lang.String) -> getTrailer
    129:138:java.util.List cookies() -> cookies
    143:146:io.vertx.core.http.HttpClientResponse handler(io.vertx.core.Handler) -> handler
    151:154:io.vertx.core.http.HttpClientResponse endHandler(io.vertx.core.Handler) -> endHandler
    159:162:io.vertx.core.http.HttpClientResponse exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    167:173:io.vertx.core.http.HttpClientResponse pause() -> pause
    178:185:io.vertx.core.http.HttpClientResponse resume() -> resume
    190:193:io.vertx.core.http.HttpClientResponse bodyHandler(io.vertx.core.Handler) -> bodyHandler
    198:201:io.vertx.core.http.HttpClientResponse customFrameHandler(io.vertx.core.Handler) -> customFrameHandler
    205:213:void doResume() -> doResume
    216:225:void handleUnknowFrame(io.vertx.core.http.HttpFrame) -> handleUnknowFrame
    228:239:void handleChunk(io.vertx.core.buffer.Buffer) -> handleChunk
    242:264:void handleEnd(io.vertx.core.buffer.Buffer,io.vertx.core.MultiMap) -> handleEnd
    267:274:void handleException(java.lang.Throwable) -> handleException
    278:283:io.vertx.core.net.NetSocket netSocket() -> netSocket
    38:38:io.vertx.core.http.HttpClientRequest request() -> request
    38:38:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    38:38:io.vertx.core.streams.ReadStream resume() -> resume
    38:38:io.vertx.core.streams.ReadStream pause() -> pause
    38:38:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    38:38:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    38:38:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    208:208:void lambda$doResume$1(io.vertx.core.buffer.Buffer,io.vertx.core.MultiMap,java.lang.Void) -> lambda$doResume$1
    192:192:void lambda$bodyHandler$0(io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler,io.vertx.core.Handler,java.lang.Void) -> lambda$bodyHandler$0
    40:40:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpClientResponseImpl$1 -> io.vertx.core.http.impl.HttpClientResponseImpl$1:
io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler -> io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:
    io.vertx.core.buffer.Buffer body -> body
    286:286:void <init>() -> <init>
    291:292:void handle(io.vertx.core.buffer.Buffer) -> handle
    295:298:io.vertx.core.buffer.Buffer body() -> body
    302:305:void notifyHandler(io.vertx.core.Handler) -> notifyHandler
    286:286:void handle(java.lang.Object) -> handle
    286:286:void <init>(io.vertx.core.http.impl.HttpClientResponseImpl$1) -> <init>
io.vertx.core.http.impl.HttpClientStream -> io.vertx.core.http.impl.HttpClientStream:
    int id() -> id
    io.vertx.core.http.HttpVersion version() -> version
    io.vertx.core.http.impl.HttpClientConnection connection() -> connection
    io.vertx.core.Context getContext() -> getContext
    void writeHead(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean) -> writeHead
    void writeHeadWithContent(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean,io.netty.buffer.ByteBuf,boolean) -> writeHeadWithContent
    void writeBuffer(io.netty.buffer.ByteBuf,boolean) -> writeBuffer
    void writeFrame(int,int,io.netty.buffer.ByteBuf) -> writeFrame
    void doSetWriteQueueMaxSize(int) -> doSetWriteQueueMaxSize
    boolean isNotWritable() -> isNotWritable
    void checkDrained() -> checkDrained
    void doPause() -> doPause
    void doResume() -> doResume
    void reset(long) -> reset
    void beginRequest() -> beginRequest
    void endRequest() -> endRequest
    io.vertx.core.net.NetSocket createNetSocket() -> createNetSocket
io.vertx.core.http.impl.HttpFrameImpl -> io.vertx.core.http.impl.HttpFrameImpl:
    int type -> type
    int flags -> flags
    io.vertx.core.buffer.Buffer payload -> payload
    26:30:void <init>(int,int,io.vertx.core.buffer.Buffer) -> <init>
    34:34:int flags() -> flags
    39:39:int type() -> type
    44:44:io.vertx.core.buffer.Buffer payload() -> payload
io.vertx.core.http.impl.HttpHandlers -> io.vertx.core.http.impl.HttpHandlers:
    io.vertx.core.Handler requesthHandler -> requesthHandler
    io.vertx.core.Handler wsHandler -> wsHandler
    io.vertx.core.Handler connectionHandler -> connectionHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    37:42:void <init>(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler) -> <init>
    46:56:boolean equals(java.lang.Object) -> equals
    61:74:int hashCode() -> hashCode
io.vertx.core.http.impl.HttpServerFileUploadImpl -> io.vertx.core.http.impl.HttpServerFileUploadImpl:
    io.vertx.core.http.HttpServerRequest req -> req
    io.vertx.core.Vertx vertx -> vertx
    java.lang.String name -> name
    java.lang.String filename -> filename
    java.lang.String contentType -> contentType
    java.lang.String contentTransferEncoding -> contentTransferEncoding
    java.nio.charset.Charset charset -> charset
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.file.AsyncFile file -> file
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    long size -> size
    boolean paused -> paused
    io.vertx.core.buffer.Buffer pauseBuff -> pauseBuff
    boolean complete -> complete
    boolean lazyCalculateSize -> lazyCalculateSize
    57:69:void <init>(io.vertx.core.Vertx,io.vertx.core.http.HttpServerRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> <init>
    73:73:java.lang.String filename() -> filename
    78:78:java.lang.String name() -> name
    83:83:java.lang.String contentType() -> contentType
    88:88:java.lang.String contentTransferEncoding() -> contentTransferEncoding
    93:93:java.lang.String charset() -> charset
    98:98:long size() -> size
    103:104:io.vertx.core.http.HttpServerFileUpload handler(io.vertx.core.Handler) -> handler
    109:111:io.vertx.core.http.HttpServerFileUpload pause() -> pause
    116:127:io.vertx.core.http.HttpServerFileUpload resume() -> resume
    132:133:io.vertx.core.http.HttpServerFileUpload exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    138:139:io.vertx.core.http.HttpServerFileUpload endHandler(io.vertx.core.Handler) -> endHandler
    144:155:io.vertx.core.http.HttpServerFileUpload streamToFileSystem(java.lang.String) -> streamToFileSystem
    160:160:boolean isSizeAvailable() -> isSizeAvailable
    164:171:void receiveData(io.vertx.core.buffer.Buffer) -> receiveData
    174:184:void doReceiveData(io.vertx.core.buffer.Buffer) -> doReceiveData
    187:192:void complete() -> complete
    195:206:void handleComplete() -> handleComplete
    209:212:void notifyEndHandler() -> notifyEndHandler
    215:218:void notifyExceptionHandler(java.lang.Throwable) -> notifyExceptionHandler
    34:34:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    34:34:io.vertx.core.streams.ReadStream resume() -> resume
    34:34:io.vertx.core.streams.ReadStream pause() -> pause
    34:34:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    34:34:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    34:34:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    200:204:void lambda$handleComplete$1(io.vertx.core.AsyncResult) -> lambda$handleComplete$1
    146:154:void lambda$streamToFileSystem$0(io.vertx.core.AsyncResult) -> lambda$streamToFileSystem$0
io.vertx.core.http.impl.HttpServerImpl -> io.vertx.core.http.impl.HttpServerImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.Handler DEFAULT_EXCEPTION_HANDLER -> DEFAULT_EXCEPTION_HANDLER
    java.lang.String FLASH_POLICY_HANDLER_PROP_NAME -> FLASH_POLICY_HANDLER_PROP_NAME
    boolean USE_FLASH_POLICY_HANDLER -> USE_FLASH_POLICY_HANDLER
    java.lang.String DISABLE_WEBSOCKETS_PROP_NAME -> DISABLE_WEBSOCKETS_PROP_NAME
    boolean DISABLE_WEBSOCKETS -> DISABLE_WEBSOCKETS
    java.lang.String DISABLE_H2C_PROP_NAME -> DISABLE_H2C_PROP_NAME
    boolean DISABLE_HC2 -> DISABLE_HC2
    java.lang.String[] H2C_HANDLERS_TO_REMOVE -> H2C_HANDLERS_TO_REMOVE
    io.vertx.core.http.HttpServerOptions options -> options
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    io.vertx.core.impl.ContextImpl creatingContext -> creatingContext
    java.util.Map connectionMap -> connectionMap
    java.util.Map connectionMap2 -> connectionMap2
    io.vertx.core.net.impl.VertxEventLoopGroup availableWorkers -> availableWorkers
    io.vertx.core.net.impl.HandlerManager httpHandlerMgr -> httpHandlerMgr
    io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler wsStream -> wsStream
    io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler requestStream -> requestStream
    io.vertx.core.Handler connectionHandler -> connectionHandler
    java.lang.String serverOrigin -> serverOrigin
    io.netty.channel.group.ChannelGroup serverChannelGroup -> serverChannelGroup
    boolean listening -> listening
    io.vertx.core.net.impl.AsyncResolveConnectHelper bindFuture -> bindFuture
    io.vertx.core.net.impl.ServerID id -> id
    io.vertx.core.http.impl.HttpServerImpl actualServer -> actualServer
    int actualPort -> actualPort
    io.vertx.core.impl.ContextImpl listenContext -> listenContext
    io.vertx.core.spi.metrics.HttpServerMetrics metrics -> metrics
    boolean logEnabled -> logEnabled
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    114:153:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.HttpServerOptions) -> <init>
    157:158:io.vertx.core.http.HttpServer requestHandler(io.vertx.core.Handler) -> requestHandler
    163:163:io.vertx.core.streams.ReadStream requestStream() -> requestStream
    168:169:io.vertx.core.http.HttpServer websocketHandler(io.vertx.core.Handler) -> websocketHandler
    174:174:io.vertx.core.Handler requestHandler() -> requestHandler
    179:183:io.vertx.core.http.HttpServer connectionHandler(io.vertx.core.Handler) -> connectionHandler
    188:192:io.vertx.core.http.HttpServer exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    197:197:io.vertx.core.Handler websocketHandler() -> websocketHandler
    202:202:io.vertx.core.streams.ReadStream websocketStream() -> websocketStream
    207:207:io.vertx.core.http.HttpServer listen() -> listen
    212:212:io.vertx.core.http.HttpServer listen(io.vertx.core.Handler) -> listen
    217:217:io.vertx.core.http.HttpServer listen(int,java.lang.String) -> listen
    222:222:io.vertx.core.http.HttpServer listen(int) -> listen
    227:227:io.vertx.core.http.HttpServer listen(int,io.vertx.core.Handler) -> listen
    231:390:io.vertx.core.http.HttpServer listen(int,java.lang.String,io.vertx.core.Handler) -> listen
    394:424:io.vertx.core.http.impl.VertxHttp2ConnectionHandler setHandler(io.vertx.core.net.impl.HandlerHolder,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.Channel) -> setHandler
    428:468:void configureHttp1(io.netty.channel.ChannelPipeline,io.vertx.core.net.impl.HandlerHolder) -> configureHttp1
    471:477:void handleHttp1(io.netty.channel.Channel) -> handleHttp1
    480:485:void sendServiceUnavailable(io.netty.channel.Channel) -> sendServiceUnavailable
    488:495:void handleHttp2(io.netty.channel.Channel) -> handleHttp2
    498:501:void configureHttp2(io.netty.channel.ChannelPipeline) -> configureHttp2
    505:506:void close() -> close
    510:566:void close(io.vertx.core.Handler) -> close
    570:570:io.vertx.core.spi.metrics.Metrics getMetrics() -> getMetrics
    575:575:boolean isMetricsEnabled() -> isMetricsEnabled
    579:579:io.vertx.core.net.impl.SSLHelper getSslHelper() -> getSslHelper
    583:584:void applyConnectionOptions(io.netty.bootstrap.ServerBootstrap) -> applyConnectionOptions
    588:595:void addHandlers(io.vertx.core.http.impl.HttpServerImpl,io.vertx.core.impl.ContextImpl) -> addHandlers
    598:622:void actualClose(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler) -> actualClose
    626:626:int actualPort() -> actualPort
    630:634:void executeCloseDone(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Exception) -> executeCloseDone
    795:808:void sendError(java.lang.CharSequence,io.netty.handler.codec.http.HttpResponseStatus,io.netty.channel.Channel) -> sendError
    812:824:java.lang.String getWebSocketLocation(io.netty.channel.ChannelPipeline,io.netty.handler.codec.http.HttpRequest) -> getWebSocketLocation
    832:834:void finalize() -> finalize
    837:837:io.vertx.core.http.HttpServerOptions options() -> options
    632:632:void lambda$executeCloseDone$14(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void) -> lambda$executeCloseDone$14
    621:621:void lambda$actualClose$13(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.channel.group.ChannelGroupFuture,io.netty.util.concurrent.Future) -> lambda$actualClose$13
    517:528:void lambda$close$12(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$close$12
    465:466:void lambda$configureHttp1$11(io.netty.channel.ChannelPipeline,io.vertx.core.http.impl.Http1xServerConnection) -> lambda$configureHttp1$11
    462:463:void lambda$configureHttp1$10(io.netty.channel.ChannelPipeline,io.vertx.core.http.impl.Http1xServerConnection) -> lambda$configureHttp1$10
    422:423:void lambda$setHandler$9(io.vertx.core.http.impl.Http2ServerConnection) -> lambda$setHandler$9
    414:420:void lambda$setHandler$8(io.vertx.core.net.impl.HandlerHolder,io.vertx.core.http.impl.Http2ServerConnection) -> lambda$setHandler$8
    417:418:void lambda$null$7(io.vertx.core.net.impl.HandlerHolder,io.vertx.core.http.impl.Http2ServerConnection) -> lambda$null$7
    402:409:io.vertx.core.http.impl.Http2ServerConnection lambda$setHandler$6(io.vertx.core.net.impl.HandlerHolder,io.vertx.core.http.impl.VertxHttp2ConnectionHandler) -> lambda$setHandler$6
    374:388:void lambda$listen$5(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$listen$5
    382:382:void lambda$null$4(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void) -> lambda$null$4
    355:355:void lambda$listen$3(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void) -> lambda$listen$3
    342:351:void lambda$listen$2(int,java.lang.String,io.vertx.core.AsyncResult) -> lambda$listen$2
    242:242:boolean lambda$listen$1(io.vertx.core.http.HttpVersion) -> lambda$listen$1
    108:108:void lambda$static$0(java.lang.Throwable) -> lambda$static$0
    105:105:io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler access$100(io.vertx.core.http.impl.HttpServerImpl) -> access$100
    105:105:io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler access$200(io.vertx.core.http.impl.HttpServerImpl) -> access$200
    105:105:io.vertx.core.net.impl.SSLHelper access$300(io.vertx.core.http.impl.HttpServerImpl) -> access$300
    105:105:io.vertx.core.http.HttpServerOptions access$400(io.vertx.core.http.impl.HttpServerImpl) -> access$400
    105:105:io.vertx.core.impl.VertxInternal access$500(io.vertx.core.http.impl.HttpServerImpl) -> access$500
    105:105:boolean access$600(io.vertx.core.http.impl.HttpServerImpl) -> access$600
    105:105:void access$700(io.vertx.core.http.impl.HttpServerImpl,io.netty.channel.Channel) -> access$700
    105:105:void access$800(io.vertx.core.http.impl.HttpServerImpl,io.netty.channel.Channel) -> access$800
    105:105:io.vertx.core.net.impl.HandlerManager access$900(io.vertx.core.http.impl.HttpServerImpl) -> access$900
    105:105:io.vertx.core.logging.Logger access$1100() -> access$1100
    105:105:io.vertx.core.spi.metrics.HttpServerMetrics access$1200(io.vertx.core.http.impl.HttpServerImpl) -> access$1200
    105:105:boolean access$1300(io.vertx.core.http.impl.HttpServerImpl) -> access$1300
    105:105:java.lang.String[] access$1400() -> access$1400
    105:105:void access$1500(io.vertx.core.http.impl.HttpServerImpl,io.netty.channel.ChannelPipeline) -> access$1500
    105:105:io.vertx.core.http.impl.VertxHttp2ConnectionHandler access$1600(io.vertx.core.http.impl.HttpServerImpl,io.vertx.core.net.impl.HandlerHolder,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.Channel) -> access$1600
    107:115:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpServerImpl$1 -> io.vertx.core.http.impl.HttpServerImpl$1:
    io.vertx.core.http.impl.HttpServerImpl this$0 -> this$0
    255:255:void <init>(io.vertx.core.http.impl.HttpServerImpl) -> <init>
    258:335:void initChannel(io.netty.channel.Channel) -> initChannel
    275:291:void lambda$initChannel$1(io.netty.channel.ChannelPipeline,io.netty.channel.Channel,io.netty.util.concurrent.Future) -> lambda$initChannel$1
    289:289:void lambda$null$0(io.vertx.core.net.impl.HandlerHolder,io.netty.util.concurrent.Future) -> lambda$null$0
io.vertx.core.http.impl.HttpServerImpl$1$1 -> io.vertx.core.http.impl.HttpServerImpl$1$1:
    io.netty.handler.timeout.IdleStateHandler val$idle -> val$idle
    io.netty.channel.ChannelPipeline val$pipeline -> val$pipeline
    io.netty.channel.Channel val$ch -> val$ch
    io.vertx.core.http.impl.HttpServerImpl$1 this$1 -> this$1
    305:305:void <init>(io.vertx.core.http.impl.HttpServerImpl$1,io.netty.handler.timeout.IdleStateHandler,io.netty.channel.ChannelPipeline,io.netty.channel.Channel) -> <init>
    308:317:void configure(io.netty.channel.ChannelHandlerContext,boolean) -> configure
    321:324:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    328:331:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    330:330:void lambda$exceptionCaught$0(io.vertx.core.net.impl.HandlerHolder,java.lang.Throwable) -> lambda$exceptionCaught$0
io.vertx.core.http.impl.HttpServerImpl$2 -> io.vertx.core.http.impl.HttpServerImpl$2:
    int[] $SwitchMap$io$vertx$core$http$impl$FrameType -> $SwitchMap$io$vertx$core$http$impl$FrameType
    688:688:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpServerImpl$Http2UpgradeHandler -> io.vertx.core.http.impl.HttpServerImpl$Http2UpgradeHandler:
    io.netty.handler.codec.http2.Http2Settings settings -> settings
    io.vertx.core.http.impl.HttpServerImpl this$0 -> this$0
    915:915:void <init>(io.vertx.core.http.impl.HttpServerImpl) -> <init>
    921:985:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    966:969:void lambda$channelRead$0(io.netty.channel.ChannelPipeline,io.netty.util.concurrent.Future) -> lambda$channelRead$0
    915:915:void <init>(io.vertx.core.http.impl.HttpServerImpl,io.vertx.core.http.impl.HttpServerImpl$1) -> <init>
io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler -> io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler:
    io.vertx.core.Handler handler -> handler
    boolean paused -> paused
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.http.impl.HttpServerImpl this$0 -> this$0
    845:845:void <init>(io.vertx.core.http.impl.HttpServerImpl) -> <init>
    852:854:io.vertx.core.Handler handler() -> handler
    858:860:boolean isPaused() -> isPaused
    864:866:io.vertx.core.Handler endHandler() -> endHandler
    871:877:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    882:887:io.vertx.core.streams.ReadStream pause() -> pause
    892:897:io.vertx.core.streams.ReadStream resume() -> resume
    902:905:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    911:911:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    845:845:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    845:845:void <init>(io.vertx.core.http.impl.HttpServerImpl,io.vertx.core.http.impl.HttpServerImpl$1) -> <init>
io.vertx.core.http.impl.HttpServerImpl$ServerHandlerWithWebSockets -> io.vertx.core.http.impl.HttpServerImpl$ServerHandlerWithWebSockets:
    boolean closeFrameSent -> closeFrameSent
    io.netty.handler.codec.http.FullHttpRequest wsRequest -> wsRequest
    io.netty.handler.codec.http.HttpResponseStatus handshakeErrorStatus -> handshakeErrorStatus
    java.lang.String handshakeErrorMsg -> handshakeErrorMsg
    io.vertx.core.http.impl.HttpServerImpl this$0 -> this$0
    643:645:void <init>(io.vertx.core.http.impl.HttpServerImpl,io.vertx.core.net.impl.SSLHelper,io.vertx.core.http.HttpServerOptions,java.lang.String,io.vertx.core.net.impl.HandlerHolder,io.vertx.core.spi.metrics.HttpServerMetrics) -> <init>
    649:732:void handleMessage(io.vertx.core.http.impl.Http1xServerConnection,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    736:791:void handshake(io.vertx.core.http.impl.Http1xServerConnection,io.netty.handler.codec.http.FullHttpRequest,io.netty.channel.Channel,io.netty.channel.ChannelHandlerContext) -> handshake
    636:636:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    749:789:void lambda$handshake$1(io.netty.handler.codec.http.FullHttpRequest,io.vertx.core.http.impl.Http1xServerConnection,io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.vertx.core.net.impl.HandlerHolder,io.netty.channel.Channel,io.netty.channel.ChannelHandlerContext) -> lambda$handshake$1
    761:768:java.lang.String lambda$null$0(io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpRequest,io.vertx.core.http.impl.Http1xServerConnection) -> lambda$null$0
io.vertx.core.http.impl.HttpServerRequestImpl -> io.vertx.core.http.impl.HttpServerRequestImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.http.impl.Http1xServerConnection conn -> conn
    io.netty.handler.codec.http.HttpRequest request -> request
    io.vertx.core.http.HttpServerResponse response -> response
    io.vertx.core.http.HttpVersion version -> version
    io.vertx.core.http.HttpMethod method -> method
    java.lang.String rawMethod -> rawMethod
    java.lang.String uri -> uri
    java.lang.String path -> path
    java.lang.String query -> query
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.MultiMap params -> params
    io.vertx.core.MultiMap headers -> headers
    java.lang.String absoluteURI -> absoluteURI
    io.vertx.core.net.NetSocket netSocket -> netSocket
    io.vertx.core.Handler uploadHandler -> uploadHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.MultiMap attributes -> attributes
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder decoder -> decoder
    boolean ended -> ended
    91:95:void <init>(io.vertx.core.http.impl.Http1xServerConnection,io.netty.handler.codec.http.HttpRequest,io.vertx.core.http.HttpServerResponse) -> <init>
    99:110:io.vertx.core.http.HttpVersion version() -> version
    115:123:io.vertx.core.http.HttpMethod method() -> method
    128:131:java.lang.String rawMethod() -> rawMethod
    136:139:java.lang.String uri() -> uri
    144:147:java.lang.String path() -> path
    152:155:java.lang.String query() -> query
    160:160:java.lang.String host() -> host
    165:165:io.vertx.core.http.HttpServerResponse response() -> response
    170:173:io.vertx.core.MultiMap headers() -> headers
    178:178:java.lang.String getHeader(java.lang.String) -> getHeader
    183:183:java.lang.String getHeader(java.lang.CharSequence) -> getHeader
    188:191:io.vertx.core.MultiMap params() -> params
    196:196:java.lang.String getParam(java.lang.String) -> getParam
    201:207:io.vertx.core.http.HttpServerRequest handler(io.vertx.core.Handler) -> handler
    212:215:io.vertx.core.http.HttpServerRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    220:225:io.vertx.core.http.HttpServerRequest pause() -> pause
    230:235:io.vertx.core.http.HttpServerRequest resume() -> resume
    240:246:io.vertx.core.http.HttpServerRequest endHandler(io.vertx.core.Handler) -> endHandler
    251:251:java.lang.String scheme() -> scheme
    256:256:boolean isSSL() -> isSSL
    261:261:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    266:273:java.lang.String absoluteURI() -> absoluteURI
    278:278:javax.net.ssl.SSLSession sslSession() -> sslSession
    283:283:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    288:291:io.vertx.core.net.NetSocket netSocket() -> netSocket
    296:302:io.vertx.core.http.HttpServerRequest uploadHandler(io.vertx.core.Handler) -> uploadHandler
    307:307:io.vertx.core.MultiMap formAttributes() -> formAttributes
    312:312:java.lang.String getFormAttribute(java.lang.String) -> getFormAttribute
    317:317:io.vertx.core.http.ServerWebSocket upgrade() -> upgrade
    322:342:io.vertx.core.http.HttpServerRequest setExpectMultipart(boolean) -> setExpectMultipart
    347:349:boolean isExpectMultipart() -> isExpectMultipart
    354:354:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    359:361:boolean isEnded() -> isEnded
    366:366:io.vertx.core.http.HttpServerRequest customFrameHandler(io.vertx.core.Handler) -> customFrameHandler
    371:371:io.vertx.core.http.HttpConnection connection() -> connection
    375:387:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    390:420:void handleEnd() -> handleEnd
    423:428:void handleException(java.lang.Throwable) -> handleException
    431:433:void sendNotImplementedAndClose() -> sendNotImplementedAndClose
    436:439:void checkEnded() -> checkEnded
    444:447:io.vertx.core.MultiMap attributes() -> attributes
    452:452:java.lang.String urlDecode(java.lang.String) -> urlDecode
    58:58:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    58:58:io.vertx.core.streams.ReadStream resume() -> resume
    58:58:io.vertx.core.streams.ReadStream pause() -> pause
    58:58:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    58:58:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    58:58:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    334:334:io.vertx.core.Handler lambda$setExpectMultipart$0() -> lambda$setExpectMultipart$0
    60:60:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpServerResponseImpl -> io.vertx.core.http.impl.HttpServerResponseImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.http.impl.Http1xServerConnection conn -> conn
    io.netty.handler.codec.http.HttpResponseStatus status -> status
    io.netty.handler.codec.http.HttpVersion version -> version
    boolean keepAlive -> keepAlive
    boolean head -> head
    boolean headWritten -> headWritten
    boolean written -> written
    io.vertx.core.Handler drainHandler -> drainHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler closeHandler -> closeHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.Handler headersEndHandler -> headersEndHandler
    io.vertx.core.Handler bodyEndHandler -> bodyEndHandler
    boolean chunked -> chunked
    boolean closed -> closed
    io.vertx.core.http.impl.headers.VertxHttpHeaders headers -> headers
    io.vertx.core.MultiMap trailers -> trailers
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    java.lang.String statusMessage -> statusMessage
    long bytesWritten -> bytesWritten
    75:88:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.impl.Http1xServerConnection,io.netty.handler.codec.http.HttpRequest) -> <init>
    92:92:io.vertx.core.MultiMap headers() -> headers
    97:102:io.vertx.core.MultiMap trailers() -> trailers
    107:107:int getStatusCode() -> getStatusCode
    112:113:io.vertx.core.http.HttpServerResponse setStatusCode(int) -> setStatusCode
    118:118:java.lang.String getStatusMessage() -> getStatusMessage
    123:127:io.vertx.core.http.HttpServerResponse setStatusMessage(java.lang.String) -> setStatusMessage
    132:139:io.vertx.core.http.impl.HttpServerResponseImpl setChunked(boolean) -> setChunked
    144:146:boolean isChunked() -> isChunked
    151:155:io.vertx.core.http.impl.HttpServerResponseImpl putHeader(java.lang.String,java.lang.String) -> putHeader
    160:164:io.vertx.core.http.impl.HttpServerResponseImpl putHeader(java.lang.String,java.lang.Iterable) -> putHeader
    169:173:io.vertx.core.http.impl.HttpServerResponseImpl putTrailer(java.lang.String,java.lang.String) -> putTrailer
    178:182:io.vertx.core.http.impl.HttpServerResponseImpl putTrailer(java.lang.String,java.lang.Iterable) -> putTrailer
    187:191:io.vertx.core.http.HttpServerResponse putHeader(java.lang.CharSequence,java.lang.CharSequence) -> putHeader
    196:200:io.vertx.core.http.HttpServerResponse putHeader(java.lang.CharSequence,java.lang.Iterable) -> putHeader
    205:209:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.CharSequence,java.lang.CharSequence) -> putTrailer
    214:218:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.CharSequence,java.lang.Iterable) -> putTrailer
    223:227:io.vertx.core.http.HttpServerResponse setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    232:235:boolean writeQueueFull() -> writeQueueFull
    240:247:io.vertx.core.http.HttpServerResponse drainHandler(io.vertx.core.Handler) -> drainHandler
    252:258:io.vertx.core.http.HttpServerResponse exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    263:269:io.vertx.core.http.HttpServerResponse closeHandler(io.vertx.core.Handler) -> closeHandler
    274:280:io.vertx.core.http.HttpServerResponse endHandler(io.vertx.core.Handler) -> endHandler
    285:286:io.vertx.core.http.impl.HttpServerResponseImpl write(io.vertx.core.buffer.Buffer) -> write
    291:291:io.vertx.core.http.impl.HttpServerResponseImpl write(java.lang.String,java.lang.String) -> write
    296:296:io.vertx.core.http.impl.HttpServerResponseImpl write(java.lang.String) -> write
    301:302:io.vertx.core.http.HttpServerResponse writeContinue() -> writeContinue
    307:308:void end(java.lang.String) -> end
    312:313:void end(java.lang.String,java.lang.String) -> end
    317:320:void end(io.vertx.core.buffer.Buffer) -> end
    324:334:void close() -> close
    338:341:void end() -> end
    345:346:io.vertx.core.http.impl.HttpServerResponseImpl sendFile(java.lang.String,long,long) -> sendFile
    351:352:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long,io.vertx.core.Handler) -> sendFile
    357:359:boolean ended() -> ended
    364:366:boolean closed() -> closed
    371:373:boolean headWritten() -> headWritten
    378:380:long bytesWritten() -> bytesWritten
    385:388:io.vertx.core.http.HttpServerResponse headersEndHandler(io.vertx.core.Handler) -> headersEndHandler
    393:396:io.vertx.core.http.HttpServerResponse bodyEndHandler(io.vertx.core.Handler) -> bodyEndHandler
    400:423:void end0(io.netty.buffer.ByteBuf) -> end0
    426:501:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler) -> doSendFile
    504:507:void closeConnAfterWrite() -> closeConnAfterWrite
    510:515:void handleDrained() -> handleDrained
    518:523:void handleException(java.lang.Throwable) -> handleException
    526:540:void handleClosed() -> handleClosed
    543:549:void checkValid() -> checkValid
    552:569:void prepareHeaders(long) -> prepareHeaders
    572:590:io.vertx.core.http.impl.HttpServerResponseImpl write(io.netty.buffer.ByteBuf) -> write
    595:595:int streamId() -> streamId
    600:600:void reset(long) -> reset
    604:604:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> push
    609:609:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.Handler) -> push
    614:614:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler) -> push
    619:620:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> push
    625:625:io.vertx.core.http.HttpServerResponse writeCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> writeCustomFrame
    52:52:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long) -> sendFile
    52:52:io.vertx.core.http.HttpServerResponse write(java.lang.String) -> write
    52:52:io.vertx.core.http.HttpServerResponse write(java.lang.String,java.lang.String) -> write
    52:52:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.String,java.lang.Iterable) -> putTrailer
    52:52:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.String,java.lang.String) -> putTrailer
    52:52:io.vertx.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.Iterable) -> putHeader
    52:52:io.vertx.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.String) -> putHeader
    52:52:io.vertx.core.http.HttpServerResponse setChunked(boolean) -> setChunked
    52:52:io.vertx.core.http.HttpServerResponse write(io.vertx.core.buffer.Buffer) -> write
    52:52:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    52:52:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    52:52:void end(java.lang.Object) -> end
    52:52:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    52:52:io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    52:52:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    530:530:void lambda$handleClosed$6(java.lang.Void) -> lambda$handleClosed$6
    506:506:void lambda$closeConnAfterWrite$5(io.netty.util.concurrent.Future) -> lambda$closeConnAfterWrite$5
    483:489:void lambda$doSendFile$4(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$doSendFile$4
    488:488:void lambda$null$3(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void) -> lambda$null$3
    467:467:void lambda$doSendFile$2(io.vertx.core.Handler,java.io.IOException,java.lang.Void) -> lambda$doSendFile$2
    436:436:void lambda$doSendFile$1(io.vertx.core.Handler,java.lang.Void) -> lambda$doSendFile$1
    245:245:void lambda$drainHandler$0(java.lang.Void) -> lambda$drainHandler$0
    54:54:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpUtils -> io.vertx.core.http.impl.HttpUtils:
    io.vertx.core.http.impl.HttpUtils$CustomCompressor compressor -> compressor
    46:47:void <init>() -> <init>
    50:56:int indexOfSlash(java.lang.CharSequence,int) -> indexOfSlash
    60:60:boolean matches(java.lang.CharSequence,int,java.lang.String) -> matches
    64:79:boolean matches(java.lang.CharSequence,int,java.lang.String,boolean) -> matches
    94:150:java.lang.String removeDots(java.lang.CharSequence) -> removeDots
    157:157:java.net.URI resolveURIReference(java.lang.String,java.lang.String) -> resolveURIReference
    164:212:java.net.URI resolveURIReference(java.net.URI,java.lang.String) -> resolveURIReference
    220:239:java.lang.String parsePath(java.lang.String) -> parsePath
    246:250:java.lang.String parseQuery(java.lang.String) -> parseQuery
    256:269:java.lang.String absoluteURI(java.lang.String,io.vertx.core.http.HttpServerRequest) -> absoluteURI
    273:281:io.vertx.core.MultiMap params(java.lang.String) -> params
    285:311:void fromVertxInitialSettings(boolean,io.vertx.core.http.Http2Settings,io.netty.handler.codec.http2.Http2Settings) -> fromVertxInitialSettings
    314:326:io.netty.handler.codec.http2.Http2Settings fromVertxSettings(io.vertx.core.http.Http2Settings) -> fromVertxSettings
    330:360:io.vertx.core.http.Http2Settings toVertxSettings(io.netty.handler.codec.http2.Http2Settings) -> toVertxSettings
    365:379:io.netty.handler.codec.http2.Http2Settings decodeSettings(java.lang.String) -> decodeSettings
    383:389:io.netty.buffer.ByteBuf generateWSCloseFrameByteBuf(short,java.lang.String) -> generateWSCloseFrameByteBuf
    401:413:java.lang.String determineContentEncoding(io.netty.handler.codec.http2.Http2Headers) -> determineContentEncoding
    417:446:io.netty.handler.codec.http.HttpMethod toNettyHttpMethod(io.vertx.core.http.HttpMethod,java.lang.String) -> toNettyHttpMethod
    452:460:io.netty.handler.codec.http.HttpVersion toNettyHttpVersion(io.vertx.core.http.HttpVersion) -> toNettyHttpVersion
    465:470:io.vertx.core.http.HttpVersion toVertxHttpVersion(io.netty.handler.codec.http.HttpVersion) -> toVertxHttpVersion
    476:478:io.vertx.core.http.HttpMethod toVertxMethod(java.lang.String) -> toVertxMethod
    356:359:void lambda$toVertxSettings$2(io.vertx.core.http.Http2Settings,java.lang.Character,java.lang.Long) -> lambda$toVertxSettings$2
    323:324:void lambda$fromVertxSettings$1(io.netty.handler.codec.http2.Http2Settings,java.lang.Integer,java.lang.Long) -> lambda$fromVertxSettings$1
    307:308:void lambda$fromVertxInitialSettings$0(io.netty.handler.codec.http2.Http2Settings,java.lang.Integer,java.lang.Long) -> lambda$fromVertxInitialSettings$0
    398:398:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpUtils$1 -> io.vertx.core.http.impl.HttpUtils$1:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    int[] $SwitchMap$io$vertx$core$http$HttpMethod -> $SwitchMap$io$vertx$core$http$HttpMethod
    int[] $SwitchMap$io$vertx$core$http$HttpVersion -> $SwitchMap$io$vertx$core$http$HttpVersion
    405:452:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpUtils$CustomCompressor -> io.vertx.core.http.impl.HttpUtils$CustomCompressor:
    392:392:void <init>() -> <init>
    395:395:io.netty.handler.codec.compression.ZlibWrapper determineWrapper(java.lang.String) -> determineWrapper
    392:392:void <init>(io.vertx.core.http.impl.HttpUtils$1) -> <init>
io.vertx.core.http.impl.MimeMapping -> io.vertx.core.http.impl.MimeMapping:
    java.util.Map m -> m
    23:23:void <init>() -> <init>
    1012:1012:java.lang.String getMimeTypeForExtension(java.lang.String) -> getMimeTypeForExtension
    1015:1020:java.lang.String getMimeTypeForFilename(java.lang.String) -> getMimeTypeForFilename
    24:1009:void <clinit>() -> <clinit>
io.vertx.core.http.impl.NettyFileUpload -> io.vertx.core.http.impl.NettyFileUpload:
    io.vertx.core.http.impl.HttpServerFileUploadImpl upload -> upload
    java.lang.String name -> name
    java.lang.String contentType -> contentType
    java.lang.String filename -> filename
    java.lang.String contentTransferEncoding -> contentTransferEncoding
    java.nio.charset.Charset charset -> charset
    boolean completed -> completed
    long maxSize -> maxSize
    36:45:void <init>(io.vertx.core.http.impl.HttpServerFileUploadImpl,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset) -> <init>
    49:52:void setContent(io.netty.buffer.ByteBuf) -> setContent
    56:61:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    65:65:void setContent(java.io.File) -> setContent
    70:70:void setContent(java.io.InputStream) -> setContent
    75:75:boolean isCompleted() -> isCompleted
    80:80:long length() -> length
    85:85:void delete() -> delete
    90:90:long definedLength() -> definedLength
    95:98:void checkSize(long) -> checkSize
    102:102:long getMaxSize() -> getMaxSize
    107:108:void setMaxSize(long) -> setMaxSize
    112:112:byte[] get() -> get
    117:117:io.netty.buffer.ByteBuf getChunk(int) -> getChunk
    122:122:java.lang.String getString() -> getString
    127:127:java.lang.String getString(java.nio.charset.Charset) -> getString
    132:133:void setCharset(java.nio.charset.Charset) -> setCharset
    137:137:java.nio.charset.Charset getCharset() -> getCharset
    142:142:boolean renameTo(java.io.File) -> renameTo
    147:147:boolean isInMemory() -> isInMemory
    152:152:java.io.File getFile() -> getFile
    157:157:java.lang.String getName() -> getName
    162:162:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    167:167:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    172:172:java.lang.String getFilename() -> getFilename
    177:178:void setFilename(java.lang.String) -> setFilename
    182:183:void setContentType(java.lang.String) -> setContentType
    187:187:java.lang.String getContentType() -> getContentType
    192:193:void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    197:197:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    202:202:io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    207:207:io.netty.handler.codec.http.multipart.FileUpload copy() -> copy
    212:212:io.netty.handler.codec.http.multipart.FileUpload duplicate() -> duplicate
    217:217:io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate() -> retainedDuplicate
    222:222:io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf) -> replace
    227:227:io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    232:232:io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    237:237:io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    242:242:io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    247:247:io.netty.buffer.ByteBuf content() -> content
    252:252:int refCnt() -> refCnt
    257:257:boolean release() -> release
    262:262:boolean release(int) -> release
    27:27:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    27:27:io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    27:27:io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    27:27:io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf) -> replace
    27:27:io.netty.handler.codec.http.multipart.HttpData retainedDuplicate() -> retainedDuplicate
    27:27:io.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    27:27:io.netty.handler.codec.http.multipart.HttpData copy() -> copy
    27:27:io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    27:27:io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    27:27:io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    27:27:int compareTo(java.lang.Object) -> compareTo
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
    27:27:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    27:27:io.netty.buffer.ByteBufHolder touch() -> touch
    27:27:io.netty.buffer.ByteBufHolder retain(int) -> retain
    27:27:io.netty.buffer.ByteBufHolder retain() -> retain
    27:27:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    27:27:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    27:27:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    27:27:io.netty.buffer.ByteBufHolder copy() -> copy
io.vertx.core.http.impl.NettyFileUploadDataFactory -> io.vertx.core.http.impl.NettyFileUploadDataFactory:
    io.vertx.core.Vertx vertx -> vertx
    io.vertx.core.http.HttpServerRequest request -> request
    java.util.function.Supplier lazyUploadHandler -> lazyUploadHandler
    35:39:void <init>(io.vertx.core.Vertx,io.vertx.core.http.HttpServerRequest,java.util.function.Supplier) -> <init>
    43:51:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> createFileUpload
io.vertx.core.http.impl.ServerWebSocketImpl -> io.vertx.core.http.impl.ServerWebSocketImpl:
    java.lang.String uri -> uri
    java.lang.String path -> path
    java.lang.String query -> query
    java.util.function.Supplier connect -> connect
    io.vertx.core.MultiMap headers -> headers
    boolean connected -> connected
    boolean rejected -> rejected
    io.netty.handler.codec.http.HttpResponseStatus rejectedStatus -> rejectedStatus
    53:59:void <init>(io.vertx.core.impl.VertxInternal,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.impl.Http1xConnectionBase,boolean,java.util.function.Supplier,int,int) -> <init>
    63:63:java.lang.String uri() -> uri
    68:68:java.lang.String path() -> path
    73:73:java.lang.String query() -> query
    78:78:io.vertx.core.MultiMap headers() -> headers
    83:88:void accept() -> accept
    92:93:void reject() -> reject
    97:98:void reject(int) -> reject
    101:112:void reject(io.netty.handler.codec.http.HttpResponseStatus) -> reject
    116:116:javax.net.ssl.SSLSession sslSession() -> sslSession
    121:121:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    126:133:void close() -> close
    137:142:io.vertx.core.http.ServerWebSocket writeFrame(io.vertx.core.http.WebSocketFrame) -> writeFrame
    146:154:boolean checkAccept() -> checkAccept
    158:160:void connect() -> connect
    164:169:void connectNow() -> connectNow
    172:174:boolean isRejected() -> isRejected
    178:180:io.netty.handler.codec.http.HttpResponseStatus getRejectedStatus() -> getRejectedStatus
    38:38:io.vertx.core.http.WebSocketBase writeFrame(io.vertx.core.http.WebSocketFrame) -> writeFrame
    38:38:io.vertx.core.http.ServerWebSocket frameHandler(io.vertx.core.Handler) -> frameHandler
    38:38:io.vertx.core.http.ServerWebSocket closeHandler(io.vertx.core.Handler) -> closeHandler
    38:38:io.vertx.core.http.ServerWebSocket writeBinaryMessage(io.vertx.core.buffer.Buffer) -> writeBinaryMessage
    38:38:io.vertx.core.http.ServerWebSocket writeFinalBinaryFrame(io.vertx.core.buffer.Buffer) -> writeFinalBinaryFrame
    38:38:io.vertx.core.http.ServerWebSocket writeFinalTextFrame(java.lang.String) -> writeFinalTextFrame
    38:38:io.vertx.core.http.ServerWebSocket drainHandler(io.vertx.core.Handler) -> drainHandler
    38:38:io.vertx.core.http.ServerWebSocket setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    38:38:io.vertx.core.http.ServerWebSocket write(io.vertx.core.buffer.Buffer) -> write
    38:38:io.vertx.core.http.ServerWebSocket endHandler(io.vertx.core.Handler) -> endHandler
    38:38:io.vertx.core.http.ServerWebSocket resume() -> resume
    38:38:io.vertx.core.http.ServerWebSocket pause() -> pause
    38:38:io.vertx.core.http.ServerWebSocket handler(io.vertx.core.Handler) -> handler
    38:38:io.vertx.core.http.ServerWebSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.impl.VertxHttp2ClientUpgradeCodec -> io.vertx.core.http.impl.VertxHttp2ClientUpgradeCodec:
    java.util.List UPGRADE_HEADERS -> UPGRADE_HEADERS
    io.vertx.core.http.Http2Settings settings -> settings
    39:41:void <init>(io.vertx.core.http.Http2Settings) -> <init>
    45:45:java.lang.CharSequence protocol() -> protocol
    50:59:java.util.Collection setUpgradeHeaders(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpRequest) -> setUpgradeHeaders
    64:64:void upgradeTo(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse) -> upgradeTo
    35:35:void <clinit>() -> <clinit>
io.vertx.core.http.impl.VertxHttp2ConnectionHandler -> io.vertx.core.http.impl.VertxHttp2ConnectionHandler:
    java.util.function.Function connectionFactory -> connectionFactory
    io.vertx.core.http.impl.Http2ConnectionBase connection -> connection
    io.netty.channel.ChannelHandlerContext chctx -> chctx
    io.vertx.core.Handler addHandler -> addHandler
    io.vertx.core.Handler removeHandler -> removeHandler
    boolean useDecompressor -> useDecompressor
    io.netty.handler.codec.http2.Http2Settings serverUpgradeSettings -> serverUpgradeSettings
    boolean upgrade -> upgrade
    boolean $assertionsDisabled -> $assertionsDisabled
    50:61:void <init>(java.util.function.Function,boolean,io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings,io.netty.handler.codec.http2.Http2Settings,boolean) -> <init>
    64:64:io.netty.channel.ChannelHandlerContext context() -> context
    74:75:io.vertx.core.http.impl.VertxHttp2ConnectionHandler addHandler(io.vertx.core.Handler) -> addHandler
    85:86:io.vertx.core.http.impl.VertxHttp2ConnectionHandler removeHandler(io.vertx.core.Handler) -> removeHandler
    91:93:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    97:99:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    103:117:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    121:126:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    130:135:void onConnectionError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,io.netty.handler.codec.http2.Http2Exception) -> onConnectionError
    139:144:void onStreamError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,io.netty.handler.codec.http2.Http2Exception$StreamException) -> onStreamError
    149:155:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    161:162:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    166:166:void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    170:170:void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    174:174:void onStreamHalfClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamHalfClosed
    178:178:void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
    182:183:void onGoAwaySent(int,long,io.netty.buffer.ByteBuf) -> onGoAwaySent
    187:188:void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
    193:201:void writeHeaders(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean) -> writeHeaders
    204:205:void _writeHeaders(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean) -> _writeHeaders
    208:216:void writeData(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,boolean) -> writeData
    219:229:void _writeData(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,boolean) -> _writeData
    232:241:io.netty.channel.ChannelFuture writePing(io.netty.buffer.ByteBuf) -> writePing
    245:247:void _writePing(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> _writePing
    254:261:void consume(io.netty.handler.codec.http2.Http2Stream,int) -> consume
    264:272:void writeFrame(io.netty.handler.codec.http2.Http2Stream,byte,short,io.netty.buffer.ByteBuf) -> writeFrame
    275:277:void _writeFrame(io.netty.handler.codec.http2.Http2Stream,byte,short,io.netty.buffer.ByteBuf) -> _writeFrame
    280:288:void writeReset(int,long) -> writeReset
    291:293:void _writeReset(int,long) -> _writeReset
    296:304:void writeGoAway(long,int,io.netty.buffer.ByteBuf) -> writeGoAway
    307:309:void _writeGoAway(long,int,io.netty.buffer.ByteBuf) -> _writeGoAway
    312:321:io.netty.channel.ChannelFuture writeSettings(io.netty.handler.codec.http2.Http2Settings) -> writeSettings
    325:327:void _writeSettings(io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> _writeSettings
    330:347:void writePushPromise(int,io.netty.handler.codec.http2.Http2Headers,io.vertx.core.Handler) -> writePushPromise
    350:351:void _writePushPromise(int,int,io.netty.handler.codec.http2.Http2Headers,io.netty.channel.ChannelPromise) -> _writePushPromise
    357:357:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    362:362:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    367:369:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    373:373:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    378:378:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    383:383:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    388:398:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    402:402:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    407:407:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    412:412:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    417:417:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    422:422:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    427:427:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
    344:345:void lambda$writePushPromise$11(int,int,io.netty.handler.codec.http2.Http2Headers,io.netty.channel.ChannelPromise) -> lambda$writePushPromise$11
    333:338:void lambda$writePushPromise$10(io.vertx.core.Handler,int,io.netty.util.concurrent.Future) -> lambda$writePushPromise$10
    318:319:void lambda$writeSettings$9(io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> lambda$writeSettings$9
    301:302:void lambda$writeGoAway$8(long,int,io.netty.buffer.ByteBuf) -> lambda$writeGoAway$8
    285:286:void lambda$writeReset$7(int,long) -> lambda$writeReset$7
    269:270:void lambda$writeFrame$6(io.netty.handler.codec.http2.Http2Stream,byte,short,io.netty.buffer.ByteBuf) -> lambda$writeFrame$6
    238:239:void lambda$writePing$5(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> lambda$writePing$5
    213:214:void lambda$writeData$4(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,boolean) -> lambda$writeData$4
    198:199:void lambda$writeHeaders$3(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean) -> lambda$writeHeaders$3
    140:141:void lambda$onStreamError$2(io.netty.handler.codec.http2.Http2Exception$StreamException) -> lambda$onStreamError$2
    131:132:void lambda$onConnectionError$1(java.lang.Throwable) -> lambda$onConnectionError$1
    56:59:void lambda$new$0(io.netty.handler.codec.http2.Http2Stream) -> lambda$new$0
    31:31:void <clinit>() -> <clinit>
io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder -> io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder:
    io.netty.channel.Channel channel -> channel
    boolean useCompression -> useCompression
    boolean useDecompression -> useDecompression
    int compressionLevel -> compressionLevel
    io.vertx.core.http.Http2Settings initialSettings -> initialSettings
    java.util.function.Function connectionFactory -> connectionFactory
    boolean logEnabled -> logEnabled
    boolean upgrade -> upgrade
    io.netty.handler.codec.http2.Http2Settings serverUpgradeSettings -> serverUpgradeSettings
    42:51:void <init>(io.netty.channel.Channel) -> <init>
    54:54:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder server(boolean) -> server
    58:59:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder initialSettings(io.vertx.core.http.Http2Settings) -> initialSettings
    63:64:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder useCompression(boolean) -> useCompression
    68:69:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder clientUpgrade(boolean) -> clientUpgrade
    73:75:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder serverUpgrade(io.netty.handler.codec.http2.Http2Settings) -> serverUpgrade
    98:99:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder compressionLevel(int) -> compressionLevel
    103:104:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder useDecompression(boolean) -> useDecompression
    108:109:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder connectionFactory(java.util.function.Function) -> connectionFactory
    113:114:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder logEnabled(boolean) -> logEnabled
    119:180:io.vertx.core.http.impl.VertxHttp2ConnectionHandler build() -> build
    185:197:io.vertx.core.http.impl.VertxHttp2ConnectionHandler build(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings) -> build
    37:37:io.netty.handler.codec.http2.Http2ConnectionHandler build(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings) -> build
    37:37:io.netty.handler.codec.http2.Http2ConnectionHandler build() -> build
    37:37:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder server(boolean) -> server
io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder$1 -> io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder$1:
    io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder this$0 -> this$0
    126:126:void <init>(io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder) -> <init>
    129:129:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    133:133:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    137:137:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    141:141:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    145:145:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    149:149:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    153:153:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    157:157:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    161:161:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    165:165:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    169:169:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    173:173:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    177:177:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
io.vertx.core.http.impl.VertxHttp2NetSocket -> io.vertx.core.http.impl.VertxHttp2NetSocket:
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler closeHandler -> closeHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler drainHandler -> drainHandler
    50:51:void <init>(io.vertx.core.http.impl.Http2ConnectionBase,io.netty.handler.codec.http2.Http2Stream,boolean) -> <init>
    58:65:void handleEnd(io.vertx.core.MultiMap) -> handleEnd
    69:72:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    76:77:void handleReset(long) -> handleReset
    81:84:void handleException(java.lang.Throwable) -> handleException
    88:91:void handleClose() -> handleClose
    95:99:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    105:108:io.vertx.core.net.NetSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    113:116:io.vertx.core.net.NetSocket handler(io.vertx.core.Handler) -> handler
    121:121:io.vertx.core.net.NetSocket pause() -> pause
    126:126:io.vertx.core.net.NetSocket resume() -> resume
    131:134:io.vertx.core.net.NetSocket endHandler(io.vertx.core.Handler) -> endHandler
    139:142:io.vertx.core.net.NetSocket write(io.vertx.core.buffer.Buffer) -> write
    147:147:io.vertx.core.net.NetSocket setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    152:155:io.vertx.core.net.NetSocket drainHandler(io.vertx.core.Handler) -> drainHandler
    160:160:boolean writeQueueFull() -> writeQueueFull
    166:166:java.lang.String writeHandlerID() -> writeHandlerID
    171:171:io.vertx.core.net.NetSocket write(java.lang.String) -> write
    176:180:io.vertx.core.net.NetSocket write(java.lang.String,java.lang.String) -> write
    185:185:io.vertx.core.net.NetSocket sendFile(java.lang.String,long,long) -> sendFile
    190:239:io.vertx.core.net.NetSocket sendFile(java.lang.String,long,long,io.vertx.core.Handler) -> sendFile
    244:244:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    249:249:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    254:257:void end() -> end
    261:264:void end(io.vertx.core.buffer.Buffer) -> end
    268:269:void close() -> close
    273:276:io.vertx.core.net.NetSocket closeHandler(io.vertx.core.Handler) -> closeHandler
    281:281:io.vertx.core.net.NetSocket upgradeToSsl(io.vertx.core.Handler) -> upgradeToSsl
    286:286:io.vertx.core.net.NetSocket upgradeToSsl(java.lang.String,io.vertx.core.Handler) -> upgradeToSsl
    291:291:boolean isSsl() -> isSsl
    296:296:javax.net.ssl.SSLSession sslSession() -> sslSession
    301:301:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    306:306:java.lang.String indicatedServerName() -> indicatedServerName
    41:41:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    41:41:io.vertx.core.streams.ReadStream resume() -> resume
    41:41:io.vertx.core.streams.ReadStream pause() -> pause
    41:41:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    41:41:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    41:41:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    41:41:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    41:41:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    41:41:void end(java.lang.Object) -> end
    41:41:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    41:41:io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    232:237:void lambda$sendFile$4(io.vertx.core.http.impl.FileStreamChannel,java.io.RandomAccessFile,io.vertx.core.Future,io.netty.channel.ChannelFuture) -> lambda$sendFile$4
    219:224:void lambda$sendFile$3(io.vertx.core.Handler,io.vertx.core.Context,io.vertx.core.AsyncResult) -> lambda$sendFile$3
    221:222:void lambda$null$2(io.vertx.core.Handler,java.lang.Void) -> lambda$null$2
    208:208:void lambda$sendFile$1(io.vertx.core.Handler,java.io.IOException,java.lang.Void) -> lambda$sendFile$1
    196:196:void lambda$sendFile$0(io.vertx.core.Handler,java.lang.Void) -> lambda$sendFile$0
io.vertx.core.http.impl.VertxHttp2Stream -> io.vertx.core.http.impl.VertxHttp2Stream:
    java.lang.Object END -> END
    io.vertx.core.http.impl.Http2ConnectionBase conn -> conn
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.impl.ContextImpl context -> context
    io.netty.channel.ChannelHandlerContext handlerContext -> handlerContext
    io.netty.handler.codec.http2.Http2Stream stream -> stream
    java.util.ArrayDeque pending -> pending
    boolean paused -> paused
    boolean writable -> writable
    38:49:void <init>(io.vertx.core.http.impl.Http2ConnectionBase,io.netty.handler.codec.http2.Http2Stream,boolean) -> <init>
    52:57:void onResetRead(long) -> onResetRead
    60:73:boolean onDataRead(io.vertx.core.buffer.Buffer) -> onDataRead
    77:81:void onWritabilityChanged() -> onWritabilityChanged
    84:85:void onEnd() -> onEnd
    88:99:void onEnd(io.vertx.core.MultiMap) -> onEnd
    105:122:void checkNextTick(java.lang.Void) -> checkNextTick
    125:125:int id() -> id
    129:130:void doPause() -> doPause
    133:135:void doResume() -> doResume
    138:140:boolean isNotWritable() -> isNotWritable
    144:145:void writeFrame(int,int,io.netty.buffer.ByteBuf) -> writeFrame
    148:149:void writeHeaders(io.netty.handler.codec.http2.Http2Headers,boolean) -> writeHeaders
    152:153:void writeData(io.netty.buffer.ByteBuf,boolean) -> writeData
    156:157:void writeReset(long) -> writeReset
    160:160:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    163:163:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    166:166:void handleCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> handleCustomFrame
    169:169:void handleEnd(io.vertx.core.MultiMap) -> handleEnd
    172:172:void handleReset(long) -> handleReset
    175:175:void handleException(java.lang.Throwable) -> handleException
    178:178:void handleClose() -> handleClose
    30:30:void <clinit>() -> <clinit>
io.vertx.core.http.impl.VertxHttpHandler -> io.vertx.core.http.impl.VertxHttpHandler:
    36:36:void <init>() -> <init>
    39:39:io.netty.buffer.ByteBuf safeBuffer(io.netty.buffer.ByteBufHolder,io.netty.buffer.ByteBufAllocator) -> safeBuffer
    44:77:java.lang.Object decode(java.lang.Object,io.netty.buffer.ByteBufAllocator) -> decode
io.vertx.core.http.impl.VertxHttpResponseEncoder -> io.vertx.core.http.impl.VertxHttpResponseEncoder:
    io.netty.channel.ChannelHandlerContext context -> context
    27:27:void <init>() -> <init>
    32:33:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    37:39:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    45:45:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpResponse) -> isContentAlwaysEmpty
    27:27:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
io.vertx.core.http.impl.WebSocketFrameFactoryImpl -> io.vertx.core.http.impl.WebSocketFrameFactoryImpl:
    22:22:void <init>() -> <init>
    27:27:io.vertx.core.http.WebSocketFrame binaryFrame(io.vertx.core.buffer.Buffer,boolean) -> binaryFrame
    32:32:io.vertx.core.http.WebSocketFrame textFrame(java.lang.String,boolean) -> textFrame
    37:37:io.vertx.core.http.WebSocketFrame continuationFrame(io.vertx.core.buffer.Buffer,boolean) -> continuationFrame
    42:42:io.vertx.core.http.WebSocketFrame pingFrame(io.vertx.core.buffer.Buffer) -> pingFrame
    47:47:io.vertx.core.http.WebSocketFrame pongFrame(io.vertx.core.buffer.Buffer) -> pongFrame
io.vertx.core.http.impl.WebSocketImpl -> io.vertx.core.http.impl.WebSocketImpl:
    32:33:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.impl.Http1xClientConnection,boolean,int,int) -> <init>
    37:44:void handleClosed() -> handleClosed
    27:27:io.vertx.core.http.WebSocket frameHandler(io.vertx.core.Handler) -> frameHandler
    27:27:io.vertx.core.http.WebSocket closeHandler(io.vertx.core.Handler) -> closeHandler
    27:27:io.vertx.core.http.WebSocket writeTextMessage(java.lang.String) -> writeTextMessage
    27:27:io.vertx.core.http.WebSocket writeBinaryMessage(io.vertx.core.buffer.Buffer) -> writeBinaryMessage
    27:27:io.vertx.core.http.WebSocket writeFinalBinaryFrame(io.vertx.core.buffer.Buffer) -> writeFinalBinaryFrame
    27:27:io.vertx.core.http.WebSocket writeFinalTextFrame(java.lang.String) -> writeFinalTextFrame
    27:27:io.vertx.core.http.WebSocket writeFrame(io.vertx.core.http.WebSocketFrame) -> writeFrame
    27:27:io.vertx.core.http.WebSocket drainHandler(io.vertx.core.Handler) -> drainHandler
    27:27:io.vertx.core.http.WebSocket setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    27:27:io.vertx.core.http.WebSocket write(io.vertx.core.buffer.Buffer) -> write
    27:27:io.vertx.core.http.WebSocket endHandler(io.vertx.core.Handler) -> endHandler
    27:27:io.vertx.core.http.WebSocket resume() -> resume
    27:27:io.vertx.core.http.WebSocket pause() -> pause
    27:27:io.vertx.core.http.WebSocket handler(io.vertx.core.Handler) -> handler
    27:27:io.vertx.core.http.WebSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.impl.WebSocketImplBase -> io.vertx.core.http.impl.WebSocketImplBase:
    boolean supportsContinuation -> supportsContinuation
    java.lang.String textHandlerID -> textHandlerID
    java.lang.String binaryHandlerID -> binaryHandlerID
    int maxWebSocketFrameSize -> maxWebSocketFrameSize
    int maxWebSocketMessageSize -> maxWebSocketMessageSize
    io.vertx.core.eventbus.MessageConsumer binaryHandlerRegistration -> binaryHandlerRegistration
    io.vertx.core.eventbus.MessageConsumer textHandlerRegistration -> textHandlerRegistration
    java.lang.String subProtocol -> subProtocol
    java.lang.Object metric -> metric
    io.vertx.core.Handler frameHandler -> frameHandler
    io.vertx.core.Handler pongHandler -> pongHandler
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler drainHandler -> drainHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler closeHandler -> closeHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.http.impl.Http1xConnectionBase conn -> conn
    boolean closed -> closed
    63:74:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.impl.Http1xConnectionBase,boolean,int,int) -> <init>
    77:77:java.lang.String binaryHandlerID() -> binaryHandlerID
    81:81:java.lang.String textHandlerID() -> textHandlerID
    85:88:boolean writeQueueFull() -> writeQueueFull
    92:97:void close() -> close
    100:101:void close(short) -> close
    104:109:void close(short,java.lang.String) -> close
    113:113:boolean isSsl() -> isSsl
    118:118:javax.net.ssl.SSLSession sslSession() -> sslSession
    123:123:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    128:128:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    133:133:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    138:138:io.vertx.core.http.WebSocketBase writeFinalTextFrame(java.lang.String) -> writeFinalTextFrame
    143:143:io.vertx.core.http.WebSocketBase writeFinalBinaryFrame(io.vertx.core.buffer.Buffer) -> writeFinalBinaryFrame
    148:150:java.lang.String subProtocol() -> subProtocol
    154:157:void subProtocol(java.lang.String) -> subProtocol
    161:165:io.vertx.core.http.WebSocketBase writeBinaryMessage(io.vertx.core.buffer.Buffer) -> writeBinaryMessage
    170:174:io.vertx.core.http.WebSocketBase writeTextMessage(java.lang.String) -> writeTextMessage
    179:183:io.vertx.core.http.WebSocketBase write(io.vertx.core.buffer.Buffer) -> write
    188:189:io.vertx.core.http.WebSocketBase writePing(io.vertx.core.buffer.Buffer) -> writePing
    194:195:io.vertx.core.http.WebSocketBase writePong(io.vertx.core.buffer.Buffer) -> writePong
    199:201:void writeMessageInternal(io.vertx.core.buffer.Buffer) -> writeMessageInternal
    204:207:void writeTextMessageInternal(java.lang.String) -> writeTextMessageInternal
    214:234:void writePartialMessage(io.vertx.core.http.impl.FrameType,io.vertx.core.buffer.Buffer,int) -> writePartialMessage
    237:240:void writeBinaryFrameInternal(io.vertx.core.buffer.Buffer) -> writeBinaryFrameInternal
    243:245:void writeTextFrameInternal(java.lang.String) -> writeTextFrameInternal
    249:254:io.vertx.core.http.WebSocketBase writeFrame(io.vertx.core.http.WebSocketFrame) -> writeFrame
    258:261:void checkClosed() -> checkClosed
    264:287:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal) -> handleFrame
    366:370:io.vertx.core.http.WebSocketBase frameHandler(io.vertx.core.Handler) -> frameHandler
    375:382:io.vertx.core.http.WebSocketBase textMessageHandler(io.vertx.core.Handler) -> textMessageHandler
    387:394:io.vertx.core.http.WebSocketBase binaryMessageHandler(io.vertx.core.Handler) -> binaryMessageHandler
    399:403:io.vertx.core.http.WebSocketBase pongHandler(io.vertx.core.Handler) -> pongHandler
    407:412:void writable() -> writable
    415:420:void handleException(java.lang.Throwable) -> handleException
    423:432:void handleClosed() -> handleClosed
    435:440:void cleanupHandlers() -> cleanupHandlers
    443:444:void setMetric(java.lang.Object) -> setMetric
    447:447:java.lang.Object getMetric() -> getMetric
    452:458:io.vertx.core.http.WebSocketBase handler(io.vertx.core.Handler) -> handler
    463:469:io.vertx.core.http.WebSocketBase endHandler(io.vertx.core.Handler) -> endHandler
    474:480:io.vertx.core.http.WebSocketBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    485:489:io.vertx.core.http.WebSocketBase closeHandler(io.vertx.core.Handler) -> closeHandler
    494:498:io.vertx.core.http.WebSocketBase drainHandler(io.vertx.core.Handler) -> drainHandler
    503:507:io.vertx.core.http.WebSocketBase pause() -> pause
    512:516:io.vertx.core.http.WebSocketBase resume() -> resume
    521:525:io.vertx.core.http.WebSocketBase setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    530:531:void end() -> end
    40:40:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    40:40:io.vertx.core.streams.ReadStream resume() -> resume
    40:40:io.vertx.core.streams.ReadStream pause() -> pause
    40:40:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    40:40:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    40:40:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    40:40:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    40:40:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    40:40:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    40:40:io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    70:70:void lambda$new$1(io.vertx.core.eventbus.Message) -> lambda$new$1
    68:68:void lambda$new$0(io.vertx.core.eventbus.Message) -> lambda$new$0
    40:40:int access$000(io.vertx.core.http.impl.WebSocketImplBase) -> access$000
io.vertx.core.http.impl.WebSocketImplBase$1 -> io.vertx.core.http.impl.WebSocketImplBase$1:
    int[] $SwitchMap$io$vertx$core$http$impl$FrameType -> $SwitchMap$io$vertx$core$http$impl$FrameType
    271:271:void <clinit>() -> <clinit>
io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator -> io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator:
    io.vertx.core.Handler textMessageHandler -> textMessageHandler
    io.vertx.core.Handler binaryMessageHandler -> binaryMessageHandler
    io.vertx.core.buffer.Buffer textMessageBuffer -> textMessageBuffer
    io.vertx.core.buffer.Buffer binaryMessageBuffer -> binaryMessageBuffer
    io.vertx.core.http.impl.WebSocketImplBase this$0 -> this$0
    289:289:void <init>(io.vertx.core.http.impl.WebSocketImplBase) -> <init>
    298:313:void handle(io.vertx.core.http.impl.ws.WebSocketFrameInternal) -> handle
    316:337:void handleTextFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal) -> handleTextFrame
    340:361:void handleBinaryFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal) -> handleBinaryFrame
    289:289:void handle(java.lang.Object) -> handle
    289:289:void <init>(io.vertx.core.http.impl.WebSocketImplBase,io.vertx.core.http.impl.WebSocketImplBase$1) -> <init>
    289:289:io.vertx.core.Handler access$202(io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator,io.vertx.core.Handler) -> access$202
    289:289:io.vertx.core.Handler access$302(io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator,io.vertx.core.Handler) -> access$302
io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler -> io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler:
    io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState state -> state
    42:50:void <init>() -> <init>
    54:81:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$1 -> io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$1:
    int[] $SwitchMap$io$vertx$core$http$impl$cgbystrom$FlashPolicyHandler$ParseState -> $SwitchMap$io$vertx$core$http$impl$cgbystrom$FlashPolicyHandler$ParseState
    56:56:void <clinit>() -> <clinit>
io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState -> io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState:
    io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState MAGIC1 -> MAGIC1
    io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState MAGIC2 -> MAGIC2
    io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState[] $VALUES -> $VALUES
    45:45:io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState[] values() -> values
    45:45:io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState valueOf(java.lang.String) -> valueOf
    45:45:void <init>(java.lang.String,int) -> <init>
    45:47:void <clinit>() -> <clinit>
io.vertx.core.http.impl.headers.VertxHttpHeaders -> io.vertx.core.http.impl.headers.VertxHttpHeaders:
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry[] entries -> entries
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry head -> head
    38:42:io.vertx.core.MultiMap set0(java.lang.Iterable) -> set0
    47:47:io.vertx.core.MultiMap setAll(io.vertx.core.MultiMap) -> setAll
    57:57:int size() -> size
    61:61:int index(int) -> index
    64:69:void <init>() -> <init>
    72:72:boolean contentLengthSet() -> contentLengthSet
    76:76:boolean contentTypeSet() -> contentTypeSet
    81:84:io.vertx.core.http.impl.headers.VertxHttpHeaders add(java.lang.CharSequence,java.lang.Object) -> add
    89:92:io.vertx.core.http.impl.headers.VertxHttpHeaders add(java.lang.String,java.lang.String) -> add
    97:102:io.vertx.core.http.impl.headers.VertxHttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    107:110:io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap) -> addAll
    123:130:void add0(int,int,java.lang.CharSequence,java.lang.CharSequence) -> add0
    134:138:io.vertx.core.http.impl.headers.VertxHttpHeaders remove(java.lang.String) -> remove
    142:175:void remove0(int,int,java.lang.CharSequence) -> remove0
    179:179:io.vertx.core.http.impl.headers.VertxHttpHeaders set(java.lang.String,java.lang.String) -> set
    183:187:io.vertx.core.http.impl.headers.VertxHttpHeaders set0(java.lang.CharSequence,java.lang.CharSequence) -> set0
    192:205:io.vertx.core.http.impl.headers.VertxHttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    210:214:io.vertx.core.http.impl.headers.VertxHttpHeaders clear() -> clear
    219:231:boolean contains(java.lang.String,java.lang.String,boolean) -> contains
    236:248:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    253:253:java.lang.String get(java.lang.String) -> get
    257:266:java.lang.CharSequence get0(java.lang.CharSequence) -> get0
    271:271:java.util.List getAll(java.lang.String) -> getAll
    276:281:void forEach(java.util.function.Consumer) -> forEach
    285:309:java.util.List entries() -> entries
    314:314:java.util.Iterator iterator() -> iterator
    319:319:boolean contains(java.lang.String) -> contains
    324:324:boolean isEmpty() -> isEmpty
    329:335:java.util.Set names() -> names
    340:342:java.lang.String get(java.lang.CharSequence) -> get
    347:360:java.util.List getAll(java.lang.CharSequence) -> getAll
    365:365:boolean contains(java.lang.CharSequence) -> contains
    370:370:io.vertx.core.http.impl.headers.VertxHttpHeaders add(java.lang.CharSequence,java.lang.CharSequence) -> add
    375:379:io.vertx.core.http.impl.headers.VertxHttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> add
    384:384:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.CharSequence) -> set
    389:394:io.vertx.core.http.impl.headers.VertxHttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> set
    399:399:io.vertx.core.http.impl.headers.VertxHttpHeaders remove(java.lang.CharSequence) -> remove
    403:407:java.lang.String toString() -> toString
    442:442:java.util.Iterator iteratorCharSequence() -> iteratorCharSequence
    459:459:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> add
    474:474:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    35:35:io.netty.handler.codec.http.HttpHeaders clear() -> clear
    35:35:io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence) -> remove
    35:35:io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> remove
    35:35:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> set
    35:35:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    35:35:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> add
    35:35:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    35:35:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object) -> add
    35:35:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.Iterable) -> set
    35:35:io.vertx.core.MultiMap set(java.lang.String,java.lang.Iterable) -> set
    35:35:io.vertx.core.MultiMap set(java.lang.String,java.lang.String) -> set
    35:35:io.vertx.core.MultiMap add(java.lang.String,java.lang.Iterable) -> add
    35:35:io.vertx.core.MultiMap add(java.lang.String,java.lang.String) -> add
    35:35:io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry access$000(io.vertx.core.http.impl.headers.VertxHttpHeaders) -> access$000
io.vertx.core.http.impl.headers.VertxHttpHeaders$1 -> io.vertx.core.http.impl.headers.VertxHttpHeaders$1:
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry val$f -> val$f
    io.vertx.core.http.impl.headers.VertxHttpHeaders this$0 -> this$0
    289:289:void <init>(io.vertx.core.http.impl.headers.VertxHttpHeaders,io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry) -> <init>
    292:292:java.lang.String getKey() -> getKey
    296:296:java.lang.String getValue() -> getValue
    300:300:java.lang.String setValue(java.lang.String) -> setValue
    304:304:java.lang.String toString() -> toString
    289:289:java.lang.Object setValue(java.lang.Object) -> setValue
    289:289:java.lang.Object getValue() -> getValue
    289:289:java.lang.Object getKey() -> getKey
io.vertx.core.http.impl.headers.VertxHttpHeaders$2 -> io.vertx.core.http.impl.headers.VertxHttpHeaders$2:
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry current -> current
    io.vertx.core.http.impl.headers.VertxHttpHeaders this$0 -> this$0
    442:443:void <init>(io.vertx.core.http.impl.headers.VertxHttpHeaders) -> <init>
    446:446:boolean hasNext() -> hasNext
    450:452:java.util.Map$Entry next() -> next
    442:442:java.lang.Object next() -> next
io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry -> io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry:
    int hash -> hash
    java.lang.CharSequence key -> key
    java.lang.CharSequence value -> value
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry next -> next
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry before -> before
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry after -> after
    494:498:void <init>(int,java.lang.CharSequence,java.lang.CharSequence) -> <init>
    501:503:void remove() -> remove
    506:510:void addBefore(io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry) -> addBefore
    514:514:java.lang.CharSequence getKey() -> getKey
    519:519:java.lang.CharSequence getValue() -> getValue
    524:527:java.lang.CharSequence setValue(java.lang.CharSequence) -> setValue
    532:532:java.lang.String toString() -> toString
    487:487:java.lang.Object setValue(java.lang.Object) -> setValue
    487:487:java.lang.Object getValue() -> getValue
    487:487:java.lang.Object getKey() -> getKey
io.vertx.core.http.impl.pool.ConnectionListener -> io.vertx.core.http.impl.pool.ConnectionListener:
    void onConnectSuccess(java.lang.Object,long,io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,long,long) -> onConnectSuccess
    void onConnectFailure(io.vertx.core.impl.ContextImpl,java.lang.Throwable,long) -> onConnectFailure
    void onConcurrencyChange(long) -> onConcurrencyChange
    void onRecycle(int,boolean) -> onRecycle
    void onDiscard() -> onDiscard
io.vertx.core.http.impl.pool.ConnectionProvider -> io.vertx.core.http.impl.pool.ConnectionProvider:
    long connect(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl) -> connect
    void close(java.lang.Object) -> close
io.vertx.core.http.impl.pool.Pool -> io.vertx.core.http.impl.pool.Pool:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.http.impl.pool.ConnectionProvider connector -> connector
    java.util.function.BiConsumer connectionAdded -> connectionAdded
    java.util.function.BiConsumer connectionRemoved -> connectionRemoved
    int queueMaxSize -> queueMaxSize
    java.util.Queue waitersQueue -> waitersQueue
    int waitersCount -> waitersCount
    java.util.Deque available -> available
    long maxWeight -> maxWeight
    long weight -> weight
    boolean closed -> closed
    io.vertx.core.Handler poolClosed -> poolClosed
    91:115:void <init>(io.vertx.core.http.impl.pool.ConnectionProvider,int,long,io.vertx.core.Handler,java.util.function.BiConsumer,java.util.function.BiConsumer) -> <init>
    140:154:boolean getConnection(io.vertx.core.http.impl.pool.Waiter) -> getConnection
    165:188:boolean acquireConnection(io.vertx.core.http.impl.pool.Waiter) -> acquireConnection
    193:201:void checkPending() -> checkPending
    204:286:long createConnection(io.vertx.core.http.impl.pool.Waiter) -> createConnection
    290:293:void recycle(io.vertx.core.http.impl.pool.Pool$Holder,int,boolean) -> recycle
    296:299:void closed(io.vertx.core.http.impl.pool.Pool$Holder) -> closed
    302:309:void closeConnection(io.vertx.core.http.impl.pool.Pool$Holder) -> closeConnection
    316:320:boolean deliverToWaiter(io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.http.impl.pool.Waiter) -> deliverToWaiter
    327:342:void recycleConnection(io.vertx.core.http.impl.pool.Pool$Holder,int,boolean) -> recycleConnection
    345:353:void initConnection(io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.impl.ContextImpl,long,java.lang.Object,io.netty.channel.Channel,long,long) -> initConnection
    356:361:void checkClose() -> checkClose
    172:182:void lambda$acquireConnection$2(io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.http.impl.pool.Waiter) -> lambda$acquireConnection$2
    151:152:void lambda$getConnection$1(io.vertx.core.http.impl.pool.Waiter) -> lambda$getConnection$1
    66:66:void access$000(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.impl.ContextImpl,long,java.lang.Object,io.netty.channel.Channel,long,long) -> access$000
    66:66:java.util.Queue access$100(io.vertx.core.http.impl.pool.Pool) -> access$100
    66:66:void access$200(io.vertx.core.http.impl.pool.Pool) -> access$200
    66:66:int access$310(io.vertx.core.http.impl.pool.Pool) -> access$310
    66:66:java.util.Deque access$400(io.vertx.core.http.impl.pool.Pool) -> access$400
    66:66:boolean access$500(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.http.impl.pool.Waiter) -> access$500
    66:66:void access$600(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder,int,boolean) -> access$600
    66:66:long access$700(io.vertx.core.http.impl.pool.Pool) -> access$700
    66:66:long access$702(io.vertx.core.http.impl.pool.Pool,long) -> access$702
    66:66:void access$800(io.vertx.core.http.impl.pool.Pool) -> access$800
    66:66:void access$900(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder,int,boolean) -> access$900
    66:66:void access$1000(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder) -> access$1000
    84:84:void <clinit>() -> <clinit>
io.vertx.core.http.impl.pool.Pool$1 -> io.vertx.core.http.impl.pool.Pool$1:
    io.vertx.core.http.impl.pool.Pool$Holder val$holder -> val$holder
    io.vertx.core.http.impl.pool.Waiter val$waiter -> val$waiter
    io.vertx.core.http.impl.pool.Pool this$0 -> this$0
    205:205:void <init>(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.http.impl.pool.Waiter) -> <init>
    209:233:void onConnectSuccess(java.lang.Object,long,io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,long,long) -> onConnectSuccess
    236:244:void onConnectFailure(io.vertx.core.impl.ContextImpl,java.lang.Throwable,long) -> onConnectFailure
    247:263:void onConcurrencyChange(long) -> onConcurrencyChange
    266:275:void onRecycle(int,boolean) -> onRecycle
    278:284:void onDiscard() -> onDiscard
io.vertx.core.http.impl.pool.Pool$Holder -> io.vertx.core.http.impl.pool.Pool$Holder:
    boolean removed -> removed
    java.lang.Object connection -> connection
    long concurrency -> concurrency
    long capacity -> capacity
    io.netty.channel.Channel channel -> channel
    io.vertx.core.impl.ContextImpl context -> context
    long weight -> weight
    73:73:void <init>() -> <init>
io.vertx.core.http.impl.pool.Waiter -> io.vertx.core.http.impl.pool.Waiter:
    io.vertx.core.impl.ContextImpl context -> context
    24:26:void <init>(io.vertx.core.impl.ContextImpl) -> <init>
    void handleFailure(io.vertx.core.impl.ContextInternal,java.lang.Throwable) -> handleFailure
    void initConnection(io.vertx.core.impl.ContextInternal,java.lang.Object) -> initConnection
    boolean handleConnection(io.vertx.core.impl.ContextInternal,java.lang.Object) -> handleConnection
io.vertx.core.http.impl.ws.WebSocketFrameImpl -> io.vertx.core.http.impl.ws.WebSocketFrameImpl:
    io.vertx.core.http.impl.FrameType type -> type
    boolean isFinalFrame -> isFinalFrame
    io.netty.buffer.ByteBuf binaryData -> binaryData
    boolean closeParsed -> closeParsed
    45:46:void <init>() -> <init>
    59:60:void <init>(java.lang.String) -> <init>
    37:69:void <init>(java.lang.String,boolean) -> <init>
    81:82:void <init>(io.vertx.core.http.impl.FrameType,io.netty.buffer.ByteBuf) -> <init>
    37:98:void <init>(io.vertx.core.http.impl.FrameType,io.netty.buffer.ByteBuf,boolean) -> <init>
    115:115:io.netty.buffer.ByteBuf getBinaryData() -> getBinaryData
    123:123:io.vertx.core.buffer.Buffer binaryData() -> binaryData
    142:142:int length() -> length
    147:148:java.lang.String toString() -> toString
    153:153:int refCnt() -> refCnt
    158:158:io.netty.util.ReferenceCounted retain() -> retain
    163:163:io.netty.util.ReferenceCounted retain(int) -> retain
    168:168:boolean release() -> release
    173:173:boolean release(int) -> release
    178:179:io.netty.util.ReferenceCounted touch() -> touch
    184:185:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    190:190:boolean isFinal() -> isFinal
    232:232:io.vertx.core.http.impl.FrameType type() -> type
io.vertx.core.http.impl.ws.WebSocketFrameInternal -> io.vertx.core.http.impl.ws.WebSocketFrameInternal:
    io.netty.buffer.ByteBuf getBinaryData() -> getBinaryData
    int length() -> length
    io.vertx.core.http.impl.FrameType type() -> type
io.vertx.core.impl.Action -> io.vertx.core.impl.Action:
    java.lang.Object perform() -> perform
io.vertx.core.impl.AddressResolver -> io.vertx.core.impl.AddressResolver:
    java.util.regex.Pattern NDOTS_OPTIONS_PATTERN -> NDOTS_OPTIONS_PATTERN
    java.util.regex.Pattern ROTATE_OPTIONS_PATTERN -> ROTATE_OPTIONS_PATTERN
    int DEFAULT_NDOTS_RESOLV_OPTION -> DEFAULT_NDOTS_RESOLV_OPTION
    boolean DEFAULT_ROTATE_RESOLV_OPTION -> DEFAULT_ROTATE_RESOLV_OPTION
    io.vertx.core.Vertx vertx -> vertx
    io.netty.resolver.AddressResolverGroup resolverGroup -> resolverGroup
    io.vertx.core.spi.resolver.ResolverProvider provider -> provider
    37:37:java.util.regex.Pattern resolvOption(java.lang.String) -> resolvOption
    70:74:void <init>(io.vertx.core.Vertx,io.vertx.core.dns.AddressResolverOptions) -> <init>
    77:90:void resolveHostname(java.lang.String,io.vertx.core.Handler) -> resolveHostname
    93:93:io.netty.resolver.AddressResolverGroup nettyAddressResolverGroup() -> nettyAddressResolverGroup
    101:106:int parseNdotsOptionFromResolvConf(java.lang.String) -> parseNdotsOptionFromResolvConf
    110:111:boolean parseRotateOptionFromResolvConf(java.lang.String) -> parseRotateOptionFromResolvConf
    81:89:void lambda$resolveHostname$1(io.vertx.core.impl.ContextInternal,io.netty.util.concurrent.Future,io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$resolveHostname$1
    82:88:void lambda$null$0(io.netty.util.concurrent.Future,io.netty.util.concurrent.Future,io.vertx.core.Handler,java.lang.Void) -> lambda$null$0
    40:64:void <clinit>() -> <clinit>
io.vertx.core.impl.Arguments -> io.vertx.core.impl.Arguments:
    28:31:void require(boolean,java.lang.String) -> require
    43:46:void requireInRange(int,int,int,java.lang.String) -> requireInRange
io.vertx.core.impl.BlockedThreadChecker -> io.vertx.core.impl.BlockedThreadChecker:
    io.vertx.core.logging.Logger log -> log
    java.lang.Object O -> O
    java.util.Map threads -> threads
    java.util.Timer timer -> timer
    31:59:void <init>(long,long) -> <init>
    62:63:void registerThread(io.vertx.core.impl.VertxThread) -> registerThread
    26:26:java.util.Map access$000(io.vertx.core.impl.BlockedThreadChecker) -> access$000
    26:26:io.vertx.core.logging.Logger access$100() -> access$100
    28:30:void <clinit>() -> <clinit>
io.vertx.core.impl.BlockedThreadChecker$1 -> io.vertx.core.impl.BlockedThreadChecker$1:
    long val$warningExceptionTime -> val$warningExceptionTime
    io.vertx.core.impl.BlockedThreadChecker this$0 -> this$0
    36:36:void <init>(io.vertx.core.impl.BlockedThreadChecker,long) -> <init>
    39:57:void run() -> run
io.vertx.core.impl.CloseHooks -> io.vertx.core.impl.CloseHooks:
    io.vertx.core.logging.Logger log -> log
    boolean closeHooksRun -> closeHooksRun
    java.util.Set closeHooks -> closeHooks
    34:36:void <init>(io.vertx.core.logging.Logger) -> <init>
    44:49:void add(io.vertx.core.Closeable) -> add
    57:60:void remove(io.vertx.core.Closeable) -> remove
    68:113:void run(io.vertx.core.Handler) -> run
    88:99:void lambda$run$0(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult) -> lambda$run$0
io.vertx.core.impl.ConcurrentHashSet -> io.vertx.core.impl.ConcurrentHashSet:
    java.util.Map map -> map
    java.lang.Object OBJ -> OBJ
    33:35:void <init>() -> <init>
    39:39:int size() -> size
    44:44:boolean isEmpty() -> isEmpty
    49:49:boolean contains(java.lang.Object) -> contains
    54:54:java.util.Iterator iterator() -> iterator
    59:59:java.lang.Object[] toArray() -> toArray
    64:64:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    69:69:boolean add(java.lang.Object) -> add
    74:74:boolean remove(java.lang.Object) -> remove
    79:79:boolean containsAll(java.util.Collection) -> containsAll
    84:90:boolean addAll(java.util.Collection) -> addAll
    95:95:boolean retainAll(java.util.Collection) -> retainAll
    100:100:boolean removeAll(java.util.Collection) -> removeAll
    105:106:void clear() -> clear
    27:27:void <clinit>() -> <clinit>
io.vertx.core.impl.ContextImpl -> io.vertx.core.impl.ContextImpl:
    io.vertx.core.logging.Logger log -> log
    boolean THREAD_CHECKS -> THREAD_CHECKS
    boolean DISABLE_TIMINGS -> DISABLE_TIMINGS
    boolean DISABLE_TCCL -> DISABLE_TCCL
    io.vertx.core.impl.VertxInternal owner -> owner
    java.lang.String deploymentID -> deploymentID
    io.vertx.core.json.JsonObject config -> config
    io.vertx.core.impl.Deployment deployment -> deployment
    io.vertx.core.impl.CloseHooks closeHooks -> closeHooks
    java.lang.ClassLoader tccl -> tccl
    io.netty.channel.EventLoop eventLoop -> eventLoop
    io.vertx.core.impl.VertxThread contextThread -> contextThread
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.impl.WorkerPool workerPool -> workerPool
    io.vertx.core.impl.WorkerPool internalBlockingPool -> internalBlockingPool
    io.vertx.core.impl.TaskQueue orderedTasks -> orderedTasks
    io.vertx.core.impl.TaskQueue internalOrderedTasks -> internalOrderedTasks
    40:44:io.netty.channel.EventLoop getEventLoop(io.vertx.core.impl.VertxInternal) -> getEventLoop
    74:75:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,java.lang.String,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> <init>
    78:92:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.EventLoop,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,java.lang.String,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> <init>
    95:101:void setContext(io.vertx.core.impl.ContextImpl) -> setContext
    104:112:void setContext(io.vertx.core.impl.VertxThread,io.vertx.core.impl.ContextImpl) -> setContext
    115:116:void setDeployment(io.vertx.core.impl.Deployment) -> setDeployment
    119:119:io.vertx.core.impl.Deployment getDeployment() -> getDeployment
    123:124:void addCloseHook(io.vertx.core.Closeable) -> addCloseHook
    127:128:void removeCloseHook(io.vertx.core.Closeable) -> removeCloseHook
    131:134:void runCloseHooks(io.vertx.core.Handler) -> runCloseHooks
    void executeAsync(io.vertx.core.Handler) -> executeAsync
    boolean isEventLoopContext() -> isEventLoopContext
    boolean isMultiThreadedWorkerContext() -> isMultiThreadedWorkerContext
    162:162:boolean isWorkerContext() -> isWorkerContext
    166:166:boolean isOnWorkerThread() -> isOnWorkerThread
    179:184:boolean isOnVertxThread(boolean) -> isOnVertxThread
    191:196:void executeFromIO(io.vertx.core.impl.ContextTask) -> executeFromIO
    void checkCorrectThread() -> checkCorrectThread
    204:208:void runOnContext(io.vertx.core.Handler) -> runOnContext
    228:228:io.netty.channel.EventLoop nettyEventLoop() -> nettyEventLoop
    232:232:io.vertx.core.impl.VertxInternal owner() -> owner
    237:238:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler) -> executeBlocking
    242:243:void executeBlocking(io.vertx.core.Handler,boolean,io.vertx.core.Handler) -> executeBlocking
    247:248:void executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler) -> executeBlocking
    258:304:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,io.vertx.core.Handler,java.util.concurrent.Executor,io.vertx.core.impl.TaskQueue,io.vertx.core.spi.metrics.PoolMetrics) -> executeBlocking
    314:315:java.lang.Runnable wrapTask(io.vertx.core.impl.ContextTask,io.vertx.core.Handler,boolean,io.vertx.core.spi.metrics.PoolMetrics) -> wrapTask
    367:368:void setTCCL() -> setTCCL
    316:363:void lambda$wrapTask$2(boolean,io.vertx.core.spi.metrics.PoolMetrics,java.lang.Object,io.vertx.core.impl.ContextTask,io.vertx.core.Handler) -> lambda$wrapTask$2
    261:291:void lambda$executeBlocking$1(io.vertx.core.spi.metrics.PoolMetrics,java.lang.Object,io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler) -> lambda$executeBlocking$1
    289:289:void lambda$null$0(io.vertx.core.Future,io.vertx.core.Handler,java.lang.Void) -> lambda$null$0
    48:55:void <clinit>() -> <clinit>
io.vertx.core.impl.ContextInternal -> io.vertx.core.impl.ContextInternal:
    io.netty.channel.EventLoop nettyEventLoop() -> nettyEventLoop
    void executeFromIO(io.vertx.core.impl.ContextTask) -> executeFromIO
io.vertx.core.impl.ContextTask -> io.vertx.core.impl.ContextTask:
    void run() -> run
io.vertx.core.impl.Deployment -> io.vertx.core.impl.Deployment:
    boolean addChild(io.vertx.core.impl.Deployment) -> addChild
    void removeChild(io.vertx.core.impl.Deployment) -> removeChild
    void undeploy(io.vertx.core.Handler) -> undeploy
    void doUndeploy(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler) -> doUndeploy
    java.lang.String verticleIdentifier() -> verticleIdentifier
    io.vertx.core.DeploymentOptions deploymentOptions() -> deploymentOptions
    boolean isChild() -> isChild
io.vertx.core.impl.DeploymentManager -> io.vertx.core.impl.DeploymentManager:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    java.util.Map deployments -> deployments
    java.util.Map classloaders -> classloaders
    java.util.Map verticleFactories -> verticleFactories
    java.util.List defaultFactories -> defaultFactories
    58:66:void <init>(io.vertx.core.impl.VertxInternal) -> <init>
    69:74:void loadVerticleFactories() -> loadVerticleFactories
    77:77:java.lang.String generateDeploymentID() -> generateDeploymentID
    81:121:void deployVerticle(java.util.function.Supplier,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> deployVerticle
    126:132:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> deployVerticle
    141:144:void doDeployVerticle(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.lang.ClassLoader,io.vertx.core.Handler) -> doDeployVerticle
    155:224:void doDeployVerticle(java.util.Iterator,java.lang.Throwable,java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.lang.ClassLoader,io.vertx.core.Handler) -> doDeployVerticle
    227:234:io.vertx.core.Verticle[] createVerticles(io.vertx.core.spi.VerticleFactory,java.lang.String,int,java.lang.ClassLoader) -> createVerticles
    238:241:java.lang.String getSuffix(int,java.lang.String) -> getSuffix
    245:252:void undeployVerticle(java.lang.String,io.vertx.core.Handler) -> undeployVerticle
    255:255:java.util.Set deployments() -> deployments
    259:259:io.vertx.core.impl.Deployment getDeployment(java.lang.String) -> getDeployment
    266:289:void undeployAll(io.vertx.core.Handler) -> undeployAll
    292:308:void registerVerticleFactory(io.vertx.core.spi.VerticleFactory) -> registerVerticleFactory
    311:328:void unregisterVerticleFactory(io.vertx.core.spi.VerticleFactory) -> unregisterVerticleFactory
    331:335:java.util.Set verticleFactories() -> verticleFactories
    349:371:java.util.List resolveFactories(java.lang.String) -> resolveFactories
    380:419:java.lang.ClassLoader getClassLoader(io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl) -> getClassLoader
    423:427:java.lang.ClassLoader getCurrentClassLoader() -> getCurrentClassLoader
    432:437:void reportFailure(java.lang.Throwable,io.vertx.core.Context,io.vertx.core.Handler) -> reportFailure
    440:443:void reportSuccess(java.lang.Object,io.vertx.core.Context,io.vertx.core.Handler) -> reportSuccess
    446:454:void reportResult(io.vertx.core.Context,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> reportResult
    461:513:void doDeploy(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.ClassLoader,io.vertx.core.Verticle[]) -> doDeploy
    481:511:void lambda$doDeploy$8(io.vertx.core.Verticle,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.Deployment,io.vertx.core.impl.DeploymentManager$DeploymentImpl,java.lang.String,java.util.concurrent.atomic.AtomicInteger,io.vertx.core.Verticle[],io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,java.lang.Void) -> lambda$doDeploy$8
    485:506:void lambda$null$7(io.vertx.core.impl.Deployment,io.vertx.core.impl.DeploymentManager$DeploymentImpl,io.vertx.core.Verticle,java.lang.String,java.util.concurrent.atomic.AtomicInteger,io.vertx.core.Verticle[],io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.impl.ContextImpl,io.vertx.core.AsyncResult) -> lambda$null$7
    448:453:void lambda$reportResult$6(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void) -> lambda$reportResult$6
    306:306:int lambda$registerVerticleFactory$5(io.vertx.core.spi.VerticleFactory,io.vertx.core.spi.VerticleFactory) -> lambda$registerVerticleFactory$5
    287:287:void lambda$undeployAll$4(io.vertx.core.Handler,java.lang.Void) -> lambda$undeployAll$4
    276:283:void lambda$undeployAll$3(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$undeployAll$3
    173:215:void lambda$doDeployVerticle$2(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.spi.VerticleFactory,java.lang.ClassLoader,java.lang.String,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.util.Iterator,io.vertx.core.AsyncResult) -> lambda$doDeployVerticle$2
    192:198:void lambda$null$1(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.ClassLoader,java.util.Iterator,io.vertx.core.AsyncResult) -> lambda$null$1
    186:191:void lambda$null$0(io.vertx.core.spi.VerticleFactory,java.lang.String,io.vertx.core.DeploymentOptions,java.lang.ClassLoader,io.vertx.core.Future) -> lambda$null$0
    53:53:io.vertx.core.impl.VertxInternal access$100(io.vertx.core.impl.DeploymentManager) -> access$100
    53:53:void access$200(io.vertx.core.impl.DeploymentManager,java.lang.Throwable,io.vertx.core.Context,io.vertx.core.Handler) -> access$200
    53:53:java.util.Map access$300(io.vertx.core.impl.DeploymentManager) -> access$300
    53:53:io.vertx.core.logging.Logger access$400() -> access$400
    53:53:void access$500(io.vertx.core.impl.DeploymentManager,java.lang.Object,io.vertx.core.Context,io.vertx.core.Handler) -> access$500
    55:55:void <clinit>() -> <clinit>
io.vertx.core.impl.DeploymentManager$1 -> io.vertx.core.impl.DeploymentManager$1:
io.vertx.core.impl.DeploymentManager$DeploymentImpl -> io.vertx.core.impl.DeploymentManager$DeploymentImpl:
    io.vertx.core.impl.Deployment parent -> parent
    java.lang.String deploymentID -> deploymentID
    java.lang.String verticleIdentifier -> verticleIdentifier
    java.util.List verticles -> verticles
    java.util.Set children -> children
    io.vertx.core.DeploymentOptions options -> options
    int status -> status
    boolean child -> child
    io.vertx.core.impl.DeploymentManager this$0 -> this$0
    532:543:void <init>(io.vertx.core.impl.DeploymentManager,io.vertx.core.impl.Deployment,java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions) -> <init>
    546:547:void addVerticle(io.vertx.core.impl.DeploymentManager$VerticleHolder) -> addVerticle
    550:563:void rollback(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.lang.Throwable) -> rollback
    567:569:void undeploy(io.vertx.core.Handler) -> undeploy
    572:595:void doUndeployChildren(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler) -> doUndeployChildren
    598:652:void doUndeploy(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler) -> doUndeploy
    656:656:java.lang.String verticleIdentifier() -> verticleIdentifier
    661:661:io.vertx.core.DeploymentOptions deploymentOptions() -> deploymentOptions
    666:670:boolean addChild(io.vertx.core.impl.Deployment) -> addChild
    676:677:void removeChild(io.vertx.core.impl.Deployment) -> removeChild
    690:690:boolean isChild() -> isChild
    618:649:void lambda$doUndeploy$6(io.vertx.core.impl.DeploymentManager$VerticleHolder,io.vertx.core.impl.ContextImpl,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Void) -> lambda$doUndeploy$6
    621:638:void lambda$null$5(io.vertx.core.impl.DeploymentManager$VerticleHolder,io.vertx.core.impl.ContextImpl,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult) -> lambda$null$5
    627:637:void lambda$null$4(io.vertx.core.AsyncResult,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult) -> lambda$null$4
    605:610:void lambda$doUndeploy$3(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$doUndeploy$3
    579:586:void lambda$doUndeployChildren$2(io.vertx.core.impl.Deployment,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult) -> lambda$doUndeployChildren$2
    553:561:void lambda$rollback$1(java.lang.Throwable,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,io.vertx.core.AsyncResult) -> lambda$rollback$1
    559:559:void lambda$null$0(java.lang.Throwable,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$null$0
    525:525:void <init>(io.vertx.core.impl.DeploymentManager,io.vertx.core.impl.Deployment,java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.DeploymentManager$1) -> <init>
    525:525:void access$600(io.vertx.core.impl.DeploymentManager$DeploymentImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.lang.Throwable) -> access$600
    525:525:boolean access$702(io.vertx.core.impl.DeploymentManager$DeploymentImpl,boolean) -> access$702
io.vertx.core.impl.DeploymentManager$VerticleHolder -> io.vertx.core.impl.DeploymentManager$VerticleHolder:
    io.vertx.core.Verticle verticle -> verticle
    io.vertx.core.impl.ContextImpl context -> context
    519:522:void <init>(io.vertx.core.Verticle,io.vertx.core.impl.ContextImpl) -> <init>
io.vertx.core.impl.EventLoopContext -> io.vertx.core.impl.EventLoopContext:
    io.vertx.core.logging.Logger log -> log
    29:30:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,java.lang.String,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> <init>
    39:40:void executeAsync(io.vertx.core.Handler) -> executeAsync
    44:44:boolean isEventLoopContext() -> isEventLoopContext
    49:49:boolean isMultiThreadedWorkerContext() -> isMultiThreadedWorkerContext
    54:60:void checkCorrectThread() -> checkCorrectThread
    25:25:void <clinit>() -> <clinit>
io.vertx.core.impl.FailedFuture -> io.vertx.core.impl.FailedFuture:
    java.lang.Throwable cause -> cause
    29:31:void <init>(java.lang.Throwable) -> <init>
    38:39:void <init>(java.lang.String) -> <init>
    43:43:boolean isComplete() -> isComplete
    48:49:io.vertx.core.Future setHandler(io.vertx.core.Handler) -> setHandler
    54:54:void complete(java.lang.Object) -> complete
    59:59:void complete() -> complete
    64:64:void fail(java.lang.Throwable) -> fail
    69:69:void fail(java.lang.String) -> fail
    74:74:boolean tryComplete(java.lang.Object) -> tryComplete
    84:84:boolean tryFail(java.lang.Throwable) -> tryFail
    94:94:java.lang.Object result() -> result
    99:99:java.lang.Throwable cause() -> cause
    104:104:boolean succeeded() -> succeeded
    109:109:boolean failed() -> failed
    114:114:void handle(io.vertx.core.AsyncResult) -> handle
    119:119:java.lang.String toString() -> toString
    21:21:void handle(java.lang.Object) -> handle
io.vertx.core.impl.FileResolver -> io.vertx.core.impl.FileResolver:
    java.lang.String FILE_SEP -> FILE_SEP
    boolean NON_UNIX_FILE_SEP -> NON_UNIX_FILE_SEP
    boolean ENABLE_CP_RESOLVING -> ENABLE_CP_RESOLVING
    java.lang.String CACHE_DIR_BASE -> CACHE_DIR_BASE
    java.util.regex.Pattern JAR_URL_SEP_PATTERN -> JAR_URL_SEP_PATTERN
    io.vertx.core.Vertx vertx -> vertx
    java.io.File cwd -> cwd
    java.io.File cacheDir -> cacheDir
    java.lang.Thread shutdownHook -> shutdownHook
    boolean enableCaching -> enableCaching
    77:89:void <init>(io.vertx.core.Vertx,boolean) -> <init>
    104:143:java.io.File resolveFile(java.lang.String) -> resolveFile
    149:176:java.io.File unpackFromFileURL(java.net.URL,java.lang.String,java.lang.ClassLoader) -> unpackFromFileURL
    180:236:java.io.File unpackFromJarURL(java.net.URL,java.lang.String,java.lang.ClassLoader) -> unpackFromJarURL
    240:247:void closeQuietly(java.io.Closeable) -> closeQuietly
    259:278:java.io.File unpackFromBundleURL(java.net.URL) -> unpackFromBundleURL
    283:287:java.lang.ClassLoader getClassLoader() -> getClassLoader
    291:306:void setupCacheDir() -> setupCacheDir
    309:314:void deleteCacheDir(io.vertx.core.Handler) -> deleteCacheDir
    298:304:void lambda$setupCacheDir$1() -> lambda$setupCacheDir$1
    299:299:void lambda$null$0(java.util.concurrent.CountDownLatch,io.vertx.core.AsyncResult) -> lambda$null$0
    60:65:void <clinit>() -> <clinit>
io.vertx.core.impl.FutureFactoryImpl -> io.vertx.core.impl.FutureFactoryImpl:
    io.vertx.core.impl.SucceededFuture EMPTY -> EMPTY
    20:20:void <init>() -> <init>
    26:26:io.vertx.core.Future future() -> future
    32:33:io.vertx.core.Future succeededFuture() -> succeededFuture
    38:38:io.vertx.core.Future succeededFuture(java.lang.Object) -> succeededFuture
    43:43:io.vertx.core.Future failedFuture(java.lang.Throwable) -> failedFuture
    48:48:io.vertx.core.Future failureFuture(java.lang.String) -> failureFuture
    22:22:void <clinit>() -> <clinit>
io.vertx.core.impl.FutureImpl -> io.vertx.core.impl.FutureImpl:
    boolean failed -> failed
    boolean succeeded -> succeeded
    io.vertx.core.Handler handler -> handler
    java.lang.Object result -> result
    java.lang.Throwable throwable -> throwable
    28:29:void <init>() -> <init>
    35:35:java.lang.Object result() -> result
    42:42:java.lang.Throwable cause() -> cause
    49:49:boolean succeeded() -> succeeded
    56:56:boolean failed() -> failed
    63:63:boolean isComplete() -> isComplete
    71:78:io.vertx.core.Future setHandler(io.vertx.core.Handler) -> setHandler
    83:86:void complete(java.lang.Object) -> complete
    90:93:void complete() -> complete
    97:100:void fail(java.lang.Throwable) -> fail
    104:107:void fail(java.lang.String) -> fail
    112:123:boolean tryComplete(java.lang.Object) -> tryComplete
    128:128:boolean tryComplete() -> tryComplete
    146:151:void handle(io.vertx.core.AsyncResult) -> handle
    156:167:boolean tryFail(java.lang.Throwable) -> tryFail
    172:172:boolean tryFail(java.lang.String) -> tryFail
    177:185:java.lang.String toString() -> toString
    18:18:void handle(java.lang.Object) -> handle
io.vertx.core.impl.HAManager -> io.vertx.core.impl.HAManager:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.impl.DeploymentManager deploymentManager -> deploymentManager
    io.vertx.core.spi.cluster.ClusterManager clusterManager -> clusterManager
    int quorumSize -> quorumSize
    java.lang.String group -> group
    io.vertx.core.json.JsonObject haInfo -> haInfo
    java.util.Map clusterMap -> clusterMap
    java.lang.String nodeID -> nodeID
    java.util.Queue toDeployOnQuorum -> toDeployOnQuorum
    boolean enabled -> enabled
    long quorumTimerID -> quorumTimerID
    boolean attainedQuorum -> attainedQuorum
    java.util.function.Consumer clusterViewChangedHandler -> clusterViewChangedHandler
    117:160:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.impl.DeploymentManager,io.vertx.core.spi.cluster.ClusterManager,int,java.lang.String,boolean) -> <init>
    183:187:void addDataToAHAInfo(java.lang.String,io.vertx.core.json.JsonObject) -> addDataToAHAInfo
    191:197:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> deployVerticle
    252:253:void setClusterViewChangedHandler(java.util.function.Consumer) -> setClusterViewChangedHandler
    270:282:void doDeployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> doDeployVerticle
    363:389:void checkQuorum() -> checkQuorum
    394:403:void addToHA(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions) -> addToHA
    408:417:void addToHADeployList(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> addToHADeployList
    421:429:void checkHADeployments() -> checkHADeployments
    433:460:void undeployHADeployments() -> undeployHADeployments
    464:476:void deployHADeployments() -> deployHADeployments
    441:453:void lambda$undeployHADeployments$7(java.lang.String,io.vertx.core.impl.Deployment,io.vertx.core.AsyncResult) -> lambda$undeployHADeployments$7
    444:449:void lambda$null$6(io.vertx.core.impl.Deployment,io.vertx.core.AsyncResult) -> lambda$null$6
    409:416:void lambda$addToHADeployList$5(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> lambda$addToHADeployList$5
    271:280:void lambda$doDeployVerticle$2(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$doDeployVerticle$2
    155:155:void lambda$new$0(java.lang.Long) -> lambda$new$0
    104:104:void <clinit>() -> <clinit>
io.vertx.core.impl.HAManager$1 -> io.vertx.core.impl.HAManager$1:
    io.vertx.core.impl.HAManager this$0 -> this$0
    144:144:void <init>(io.vertx.core.impl.HAManager) -> <init>
io.vertx.core.impl.IsolatingClassLoader -> io.vertx.core.impl.IsolatingClassLoader:
    java.util.List isolatedClasses -> isolatedClasses
    30:32:void <init>(java.net.URL[],java.lang.ClassLoader,java.util.List) -> <init>
    36:66:java.lang.Class loadClass(java.lang.String,boolean) -> loadClass
    70:84:boolean isIsolatedClass(java.lang.String) -> isIsolatedClass
    95:102:java.net.URL getResource(java.lang.String) -> getResource
    112:122:java.util.Enumeration getResources(java.lang.String) -> getResources
    126:133:boolean isVertxOrSystemClass(java.lang.String) -> isVertxOrSystemClass
io.vertx.core.impl.JavaVerticleFactory -> io.vertx.core.impl.JavaVerticleFactory:
    21:21:void <init>() -> <init>
    25:25:java.lang.String prefix() -> prefix
    30:39:io.vertx.core.Verticle createVerticle(java.lang.String,java.lang.ClassLoader) -> createVerticle
io.vertx.core.impl.MultiThreadedWorkerContext -> io.vertx.core.impl.MultiThreadedWorkerContext:
    24:25:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,java.lang.String,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> <init>
    29:30:void executeAsync(io.vertx.core.Handler) -> executeAsync
    34:34:boolean isMultiThreadedWorkerContext() -> isMultiThreadedWorkerContext
io.vertx.core.impl.NetSocketInternal -> io.vertx.core.impl.NetSocketInternal:
io.vertx.core.impl.NoStackTraceThrowable -> io.vertx.core.impl.NoStackTraceThrowable:
    20:21:void <init>(java.lang.String) -> <init>
io.vertx.core.impl.SucceededFuture -> io.vertx.core.impl.SucceededFuture:
    java.lang.Object result -> result
    29:31:void <init>(java.lang.Object) -> <init>
    35:35:boolean isComplete() -> isComplete
    40:41:io.vertx.core.Future setHandler(io.vertx.core.Handler) -> setHandler
    46:46:void complete(java.lang.Object) -> complete
    51:51:void complete() -> complete
    56:56:void fail(java.lang.Throwable) -> fail
    61:61:void fail(java.lang.String) -> fail
    66:66:boolean tryComplete(java.lang.Object) -> tryComplete
    76:76:boolean tryFail(java.lang.Throwable) -> tryFail
    86:86:java.lang.Object result() -> result
    91:91:java.lang.Throwable cause() -> cause
    96:96:boolean succeeded() -> succeeded
    101:101:boolean failed() -> failed
    106:106:void handle(io.vertx.core.AsyncResult) -> handle
    111:111:java.lang.String toString() -> toString
    21:21:void handle(java.lang.Object) -> handle
io.vertx.core.impl.TaskQueue -> io.vertx.core.impl.TaskQueue:
    io.vertx.core.logging.Logger log -> log
    java.util.LinkedList tasks -> tasks
    java.util.concurrent.Executor current -> current
    java.lang.Runnable runner -> runner
    48:57:void <init>() -> <init>
    62:80:void run() -> run
    89:96:void execute(java.lang.Runnable,java.util.concurrent.Executor) -> execute
    34:34:void <clinit>() -> <clinit>
io.vertx.core.impl.TaskQueue$Task -> io.vertx.core.impl.TaskQueue$Task:
    java.lang.Runnable runnable -> runnable
    java.util.concurrent.Executor exec -> exec
    41:44:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
    36:36:java.util.concurrent.Executor access$000(io.vertx.core.impl.TaskQueue$Task) -> access$000
    36:36:java.lang.Runnable access$100(io.vertx.core.impl.TaskQueue$Task) -> access$100
io.vertx.core.impl.Utils -> io.vertx.core.impl.Utils:
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    boolean isWindows -> isWindows
    35:35:boolean isWindows() -> isWindows
    22:29:void <clinit>() -> <clinit>
io.vertx.core.impl.VertxFactoryImpl -> io.vertx.core.impl.VertxFactoryImpl:
    26:26:void <init>() -> <init>
    30:30:io.vertx.core.Vertx vertx() -> vertx
    35:38:io.vertx.core.Vertx vertx(io.vertx.core.VertxOptions) -> vertx
    44:46:void clusteredVertx(io.vertx.core.VertxOptions,io.vertx.core.Handler) -> clusteredVertx
    50:50:io.vertx.core.Context context() -> context
io.vertx.core.impl.VertxImpl -> io.vertx.core.impl.VertxImpl:
    io.vertx.core.logging.Logger log -> log
    int NETTY_IO_RATIO -> NETTY_IO_RATIO
    io.vertx.core.file.FileSystem fileSystem -> fileSystem
    io.vertx.core.shareddata.SharedData sharedData -> sharedData
    io.vertx.core.spi.metrics.VertxMetrics metrics -> metrics
    java.util.concurrent.ConcurrentMap timeouts -> timeouts
    java.util.concurrent.atomic.AtomicLong timeoutCounter -> timeoutCounter
    io.vertx.core.spi.cluster.ClusterManager clusterManager -> clusterManager
    io.vertx.core.impl.DeploymentManager deploymentManager -> deploymentManager
    io.vertx.core.impl.FileResolver fileResolver -> fileResolver
    java.util.Map sharedHttpServers -> sharedHttpServers
    java.util.Map sharedNetServers -> sharedNetServers
    io.vertx.core.impl.WorkerPool workerPool -> workerPool
    io.vertx.core.impl.WorkerPool internalBlockingPool -> internalBlockingPool
    java.util.concurrent.ThreadFactory eventLoopThreadFactory -> eventLoopThreadFactory
    io.netty.channel.EventLoopGroup eventLoopGroup -> eventLoopGroup
    io.netty.channel.EventLoopGroup acceptorEventLoopGroup -> acceptorEventLoopGroup
    io.vertx.core.impl.BlockedThreadChecker checker -> checker
    boolean haEnabled -> haEnabled
    io.vertx.core.impl.AddressResolver addressResolver -> addressResolver
    io.vertx.core.dns.AddressResolverOptions addressResolverOptions -> addressResolverOptions
    io.vertx.core.eventbus.EventBus eventBus -> eventBus
    io.vertx.core.impl.HAManager haManager -> haManager
    boolean closed -> closed
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    java.util.Map namedWorkerPools -> namedWorkerPools
    int defaultWorkerPoolSize -> defaultWorkerPoolSize
    long defaultWorkerMaxExecTime -> defaultWorkerMaxExecTime
    io.vertx.core.impl.CloseHooks closeHooks -> closeHooks
    io.vertx.core.net.impl.transport.Transport transport -> transport
    141:142:void <init>() -> <init>
    145:146:void <init>(io.vertx.core.VertxOptions) -> <init>
    111:212:void <init>(io.vertx.core.VertxOptions,io.vertx.core.Handler) -> <init>
    215:233:void createAndStartEventBus(io.vertx.core.VertxOptions,io.vertx.core.Handler) -> createAndStartEventBus
    239:239:io.vertx.core.file.FileSystem getFileSystem() -> getFileSystem
    253:253:io.vertx.core.net.NetServer createNetServer(io.vertx.core.net.NetServerOptions) -> createNetServer
    272:272:io.vertx.core.net.impl.transport.Transport transport() -> transport
    281:281:io.vertx.core.file.FileSystem fileSystem() -> fileSystem
    289:289:io.vertx.core.http.HttpServer createHttpServer(io.vertx.core.http.HttpServerOptions) -> createHttpServer
    294:294:io.vertx.core.http.HttpServer createHttpServer() -> createHttpServer
    307:314:io.vertx.core.eventbus.EventBus eventBus() -> eventBus
    318:318:long setPeriodic(long,io.vertx.core.Handler) -> setPeriodic
    327:327:long setTimer(long,io.vertx.core.Handler) -> setTimer
    336:338:void runOnContext(io.vertx.core.Handler) -> runOnContext
    342:342:java.util.concurrent.ExecutorService getWorkerPool() -> getWorkerPool
    346:346:io.netty.channel.EventLoopGroup getEventLoopGroup() -> getEventLoopGroup
    350:350:io.netty.channel.EventLoopGroup getAcceptorEventLoopGroup() -> getAcceptorEventLoopGroup
    354:359:io.vertx.core.impl.ContextImpl getOrCreateContext() -> getOrCreateContext
    363:363:java.util.Map sharedHttpServers() -> sharedHttpServers
    367:367:java.util.Map sharedNetServers() -> sharedNetServers
    381:386:boolean cancelTimer(long) -> cancelTimer
    391:391:io.vertx.core.impl.EventLoopContext createEventLoopContext(java.lang.String,io.vertx.core.impl.WorkerPool,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> createEventLoopContext
    396:402:io.vertx.core.impl.ContextImpl createWorkerContext(boolean,java.lang.String,io.vertx.core.impl.WorkerPool,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> createWorkerContext
    430:444:io.vertx.core.spi.metrics.VertxMetrics initialiseMetrics(io.vertx.core.VertxOptions) -> initialiseMetrics
    448:471:io.vertx.core.spi.cluster.ClusterManager getClusterManager(io.vertx.core.VertxOptions) -> getClusterManager
    476:483:long scheduleTimeout(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,long,boolean) -> scheduleTimeout
    487:491:io.vertx.core.Context context() -> context
    495:499:io.vertx.core.impl.ContextImpl getContext() -> getContext
    587:588:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler) -> deployVerticle
    618:622:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> deployVerticle
    638:648:void deployVerticle(java.util.function.Supplier,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> deployVerticle
    718:720:void executeBlocking(io.vertx.core.Handler,boolean,io.vertx.core.Handler) -> executeBlocking
    725:726:void executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler) -> executeBlocking
    771:771:io.vertx.core.spi.metrics.VertxMetrics metricsSPI() -> metricsSPI
    776:776:java.io.File resolveFile(java.lang.String) -> resolveFile
    781:782:void resolveAddress(java.lang.String,io.vertx.core.Handler) -> resolveAddress
    791:791:io.netty.resolver.AddressResolverGroup nettyAddressResolverGroup() -> nettyAddressResolverGroup
    1039:1056:io.vertx.core.impl.WorkerExecutorImpl createSharedWorkerExecutor(java.lang.String,int,long) -> createSharedWorkerExecutor
    1060:1061:void releaseWorkerExecutor(java.lang.String) -> releaseWorkerExecutor
    1071:1071:io.vertx.core.Handler exceptionHandler() -> exceptionHandler
    97:97:io.vertx.core.Context getOrCreateContext() -> getOrCreateContext
    621:621:io.vertx.core.Verticle lambda$deployVerticle$12(io.vertx.core.Verticle) -> lambda$deployVerticle$12
    221:232:void lambda$createAndStartEventBus$1(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$createAndStartEventBus$1
    195:206:void lambda$new$0(io.vertx.core.Handler,io.vertx.core.VertxOptions,io.vertx.core.AsyncResult) -> lambda$new$0
    97:97:io.vertx.core.spi.metrics.VertxMetrics access$000(io.vertx.core.impl.VertxImpl) -> access$000
    97:97:java.util.concurrent.ConcurrentMap access$100(io.vertx.core.impl.VertxImpl) -> access$100
    99:109:void <clinit>() -> <clinit>
io.vertx.core.impl.VertxImpl$InternalTimerHandler -> io.vertx.core.impl.VertxImpl$InternalTimerHandler:
    io.vertx.core.Handler handler -> handler
    boolean periodic -> periodic
    long timerID -> timerID
    io.vertx.core.impl.ContextImpl context -> context
    java.util.concurrent.Future future -> future
    java.util.concurrent.atomic.AtomicBoolean cancelled -> cancelled
    io.vertx.core.impl.VertxImpl this$0 -> this$0
    853:860:boolean cancel() -> cancel
    864:880:void <init>(io.vertx.core.impl.VertxImpl,long,io.vertx.core.Handler,boolean,long,io.vertx.core.impl.ContextImpl) -> <init>
    883:893:void handle(java.lang.Void) -> handle
    896:904:void cleanupNonPeriodic() -> cleanupNonPeriodic
    908:911:void close(io.vertx.core.Handler) -> close
    844:844:void handle(java.lang.Object) -> handle
    871:871:void lambda$new$0(io.vertx.core.impl.ContextImpl) -> lambda$new$0
io.vertx.core.impl.VertxImpl$SharedWorkerPool -> io.vertx.core.impl.VertxImpl$SharedWorkerPool:
    java.lang.String name -> name
    int refCount -> refCount
    io.vertx.core.impl.VertxImpl this$0 -> this$0
    1000:1005:void <init>(io.vertx.core.impl.VertxImpl,java.lang.String,java.util.concurrent.ExecutorService,io.vertx.core.spi.metrics.PoolMetrics) -> <init>
    1009:1015:void close() -> close
    1018:1024:void release() -> release
    997:997:int access$308(io.vertx.core.impl.VertxImpl$SharedWorkerPool) -> access$308
io.vertx.core.impl.VertxInternal -> io.vertx.core.impl.VertxInternal:
    io.vertx.core.impl.ContextImpl getOrCreateContext() -> getOrCreateContext
    io.netty.channel.EventLoopGroup getEventLoopGroup() -> getEventLoopGroup
    io.netty.channel.EventLoopGroup getAcceptorEventLoopGroup() -> getAcceptorEventLoopGroup
    java.util.concurrent.ExecutorService getWorkerPool() -> getWorkerPool
    java.util.Map sharedHttpServers() -> sharedHttpServers
    java.util.Map sharedNetServers() -> sharedNetServers
    io.vertx.core.spi.metrics.VertxMetrics metricsSPI() -> metricsSPI
    io.vertx.core.net.impl.transport.Transport transport() -> transport
    io.vertx.core.impl.ContextImpl getContext() -> getContext
    io.vertx.core.impl.EventLoopContext createEventLoopContext(java.lang.String,io.vertx.core.impl.WorkerPool,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> createEventLoopContext
    io.vertx.core.impl.ContextImpl createWorkerContext(boolean,java.lang.String,io.vertx.core.impl.WorkerPool,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> createWorkerContext
    io.vertx.core.impl.WorkerExecutorImpl createSharedWorkerExecutor(java.lang.String,int,long) -> createSharedWorkerExecutor
    java.io.File resolveFile(java.lang.String) -> resolveFile
    void resolveAddress(java.lang.String,io.vertx.core.Handler) -> resolveAddress
    io.netty.resolver.AddressResolverGroup nettyAddressResolverGroup() -> nettyAddressResolverGroup
    43:43:io.vertx.core.Context getOrCreateContext() -> getOrCreateContext
io.vertx.core.impl.VertxThread -> io.vertx.core.impl.VertxThread:
    boolean worker -> worker
    long maxExecTime -> maxExecTime
    long execStart -> execStart
    io.vertx.core.impl.ContextImpl context -> context
    27:30:void <init>(java.lang.Runnable,java.lang.String,boolean,long) -> <init>
    33:33:io.vertx.core.impl.ContextImpl getContext() -> getContext
    37:38:void setContext(io.vertx.core.impl.ContextImpl) -> setContext
    41:42:void executeStart() -> executeStart
    45:46:void executeEnd() -> executeEnd
    49:49:long startTime() -> startTime
    53:53:boolean isWorker() -> isWorker
    57:57:long getMaxExecTime() -> getMaxExecTime
io.vertx.core.impl.VertxThreadFactory -> io.vertx.core.impl.VertxThreadFactory:
    java.lang.Object FOO -> FOO
    java.util.Map weakMap -> weakMap
    java.lang.String prefix -> prefix
    java.util.concurrent.atomic.AtomicInteger threadCount -> threadCount
    io.vertx.core.impl.BlockedThreadChecker checker -> checker
    boolean worker -> worker
    long maxExecTime -> maxExecTime
    30:31:void addToMap(io.vertx.core.impl.VertxThread) -> addToMap
    34:44:void <init>(java.lang.String,io.vertx.core.impl.BlockedThreadChecker,boolean,long) -> <init>
    47:52:void unsetContext(io.vertx.core.impl.ContextImpl) -> unsetContext
    55:65:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    26:27:void <clinit>() -> <clinit>
io.vertx.core.impl.WorkerContext -> io.vertx.core.impl.WorkerContext:
    24:25:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,java.lang.String,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> <init>
    29:30:void executeAsync(io.vertx.core.Handler) -> executeAsync
    34:34:boolean isEventLoopContext() -> isEventLoopContext
    39:39:boolean isMultiThreadedWorkerContext() -> isMultiThreadedWorkerContext
    45:45:void checkCorrectThread() -> checkCorrectThread
    51:52:void executeFromIO(io.vertx.core.impl.ContextTask) -> executeFromIO
io.vertx.core.impl.WorkerExecutorImpl -> io.vertx.core.impl.WorkerExecutorImpl:
    io.vertx.core.Vertx vertx -> vertx
    io.vertx.core.impl.WorkerPool pool -> pool
    boolean closed -> closed
    boolean releaseOnClose -> releaseOnClose
    33:37:void <init>(io.vertx.core.Vertx,io.vertx.core.impl.WorkerPool,boolean) -> <init>
    56:56:io.vertx.core.impl.WorkerPool getPool() -> getPool
    69:79:void close() -> close
    83:85:void close(io.vertx.core.Handler) -> close
io.vertx.core.impl.WorkerPool -> io.vertx.core.impl.WorkerPool:
    java.util.concurrent.ExecutorService pool -> pool
    io.vertx.core.spi.metrics.PoolMetrics metrics -> metrics
    27:30:void <init>(java.util.concurrent.ExecutorService,io.vertx.core.spi.metrics.PoolMetrics) -> <init>
    33:33:java.util.concurrent.ExecutorService executor() -> executor
    37:37:io.vertx.core.spi.metrics.PoolMetrics metrics() -> metrics
    41:45:void close() -> close
io.vertx.core.impl.cpu.CpuCoreSensor -> io.vertx.core.impl.cpu.CpuCoreSensor:
    byte[] BITS -> BITS
    java.nio.charset.Charset ASCII -> ASCII
    54:58:int availableProcessors() -> availableProcessors
    62:75:int determineProcessors() -> determineProcessors
    79:107:int readCPUMask(java.io.File) -> readCPUMask
    55:55:java.lang.Integer lambda$availableProcessors$0() -> lambda$availableProcessors$0
    34:35:void <clinit>() -> <clinit>
io.vertx.core.impl.launcher.commands.ExecUtils -> io.vertx.core.impl.launcher.commands.ExecUtils:
    java.lang.String osName -> osName
    122:122:boolean isLinux() -> isLinux
    60:60:void <clinit>() -> <clinit>
io.vertx.core.impl.resolver.DefaultResolverProvider -> io.vertx.core.impl.resolver.DefaultResolverProvider:
    25:25:void <init>() -> <init>
    29:29:io.netty.resolver.AddressResolverGroup resolver(io.vertx.core.dns.AddressResolverOptions) -> resolver
io.vertx.core.impl.resolver.DnsResolverProvider -> io.vertx.core.impl.resolver.DnsResolverProvider:
    io.vertx.core.Vertx vertx -> vertx
    java.util.List resolvers -> resolvers
    io.netty.resolver.AddressResolverGroup resolverGroup -> resolverGroup
    java.util.List serverList -> serverList
    59:193:void <init>(io.vertx.core.impl.VertxImpl,io.vertx.core.dns.AddressResolverOptions) -> <init>
    206:206:io.netty.resolver.AddressResolverGroup resolver(io.vertx.core.dns.AddressResolverOptions) -> resolver
    103:103:io.netty.resolver.dns.DnsServerAddressStream lambda$new$0(io.netty.resolver.dns.DnsServerAddresses,java.lang.String) -> lambda$new$0
    56:56:java.util.List access$000(io.vertx.core.impl.resolver.DnsResolverProvider) -> access$000
io.vertx.core.impl.resolver.DnsResolverProvider$1 -> io.vertx.core.impl.resolver.DnsResolverProvider$1:
    io.vertx.core.impl.VertxImpl val$vertx -> val$vertx
    io.netty.resolver.dns.DnsServerAddressStreamProvider val$nameServerAddressProvider -> val$nameServerAddressProvider
    io.netty.resolver.HostsFileEntries val$entries -> val$entries
    io.vertx.core.dns.AddressResolverOptions val$options -> val$options
    io.netty.resolver.dns.DnsCache val$resolveCache -> val$resolveCache
    io.netty.resolver.dns.DnsCache val$authoritativeDnsServerCache -> val$authoritativeDnsServerCache
    io.vertx.core.impl.resolver.DnsResolverProvider this$0 -> this$0
    133:133:void <init>(io.vertx.core.impl.resolver.DnsResolverProvider,io.vertx.core.impl.VertxImpl,io.netty.resolver.dns.DnsServerAddressStreamProvider,io.netty.resolver.HostsFileEntries,io.vertx.core.dns.AddressResolverOptions,io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsCache) -> <init>
    136:190:io.netty.resolver.AddressResolver newResolver(io.netty.util.concurrent.EventExecutor) -> newResolver
    136:136:io.netty.channel.socket.DatagramChannel lambda$newResolver$0(io.vertx.core.impl.VertxImpl) -> lambda$newResolver$0
io.vertx.core.impl.resolver.DnsResolverProvider$1$1 -> io.vertx.core.impl.resolver.DnsResolverProvider$1$1:
    io.netty.util.concurrent.EventExecutor val$executor -> val$executor
    io.vertx.core.impl.resolver.DnsResolverProvider$1 this$1 -> this$1
    137:137:void <init>(io.vertx.core.impl.resolver.DnsResolverProvider$1,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider,io.netty.util.concurrent.EventExecutor) -> <init>
    140:183:io.netty.resolver.NameResolver newNameResolver(io.netty.channel.EventLoop,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider) -> newNameResolver
io.vertx.core.impl.resolver.DnsResolverProvider$1$1$1 -> io.vertx.core.impl.resolver.DnsResolverProvider$1$1$1:
    io.vertx.core.impl.resolver.DnsResolverProvider$1$1 this$2 -> this$2
    141:141:void <init>(io.vertx.core.impl.resolver.DnsResolverProvider$1$1) -> <init>
    144:148:java.net.InetAddress address(java.lang.String,io.netty.resolver.ResolvedAddressTypes) -> address
    151:163:java.net.InetAddress lookup(java.lang.String,io.netty.resolver.ResolvedAddressTypes) -> lookup
io.vertx.core.impl.resolver.DnsResolverProvider$2 -> io.vertx.core.impl.resolver.DnsResolverProvider$2:
    int[] $SwitchMap$io$netty$resolver$ResolvedAddressTypes -> $SwitchMap$io$netty$resolver$ResolvedAddressTypes
    151:151:void <clinit>() -> <clinit>
io.vertx.core.impl.resolver.DnsResolverProvider$ResolverRegistration -> io.vertx.core.impl.resolver.DnsResolverProvider$ResolverRegistration:
    io.netty.resolver.AddressResolver resolver -> resolver
    io.netty.channel.EventLoop executor -> executor
    198:201:void <init>(io.netty.resolver.AddressResolver,io.netty.channel.EventLoop) -> <init>
io.vertx.core.impl.verticle.CompilingClassLoader -> io.vertx.core.impl.verticle.CompilingClassLoader:
    io.vertx.core.logging.Logger log -> log
    java.util.List COMPILER_OPTIONS -> COMPILER_OPTIONS
    io.vertx.core.impl.verticle.JavaSourceContext javaSourceContext -> javaSourceContext
    io.vertx.core.impl.verticle.MemoryFileManager fileManager -> fileManager
    65:117:void <init>(java.lang.ClassLoader,java.lang.String) -> <init>
    120:120:java.lang.String resolveMainClassName() -> resolveMainClassName
    125:129:java.lang.Class findClass(java.lang.String) -> findClass
    133:133:byte[] getClassBytes(java.lang.String) -> getClassBytes
    41:60:void <clinit>() -> <clinit>
io.vertx.core.impl.verticle.CustomJavaFileObject -> io.vertx.core.impl.verticle.CustomJavaFileObject:
    java.lang.String binaryName -> binaryName
    javax.tools.JavaFileObject$Kind kind -> kind
    java.net.URI uri -> uri
    34:38:void <init>(java.net.URI,javax.tools.JavaFileObject$Kind,java.lang.String) -> <init>
    41:41:java.lang.String binaryName() -> binaryName
    46:46:java.io.InputStream openInputStream() -> openInputStream
    50:50:javax.tools.JavaFileObject$Kind getKind() -> getKind
    54:54:javax.lang.model.element.NestingKind getNestingKind() -> getNestingKind
    59:59:java.net.URI toUri() -> toUri
    63:63:java.lang.String getName() -> getName
    67:67:java.io.OutputStream openOutputStream() -> openOutputStream
    71:71:java.io.Reader openReader(boolean) -> openReader
    75:75:java.lang.CharSequence getCharContent(boolean) -> getCharContent
    79:79:java.io.Writer openWriter() -> openWriter
    83:83:long getLastModified() -> getLastModified
    87:87:boolean delete() -> delete
    91:92:boolean isNameCompatible(java.lang.String,javax.tools.JavaFileObject$Kind) -> isNameCompatible
    96:96:javax.lang.model.element.Modifier getAccessLevel() -> getAccessLevel
    101:101:java.lang.String toString() -> toString
io.vertx.core.impl.verticle.JavaSourceContext -> io.vertx.core.impl.verticle.JavaSourceContext:
    java.lang.String className -> className
    java.io.File sourceRoot -> sourceRoot
    31:52:void <init>(java.io.File) -> <init>
    55:55:java.io.File getSourceRoot() -> getSourceRoot
    59:59:java.lang.String getClassName() -> getClassName
    70:85:java.lang.String parsePackage(java.io.File) -> parsePackage
io.vertx.core.impl.verticle.MemoryFileManager -> io.vertx.core.impl.verticle.MemoryFileManager:
    java.util.Map compiledClasses -> compiledClasses
    io.vertx.core.impl.verticle.PackageHelper helper -> helper
    36:42:void <init>(java.lang.ClassLoader,javax.tools.JavaFileManager) -> <init>
    48:56:javax.tools.JavaFileObject getJavaFileForOutput(javax.tools.JavaFileManager$Location,java.lang.String,javax.tools.JavaFileObject$Kind,javax.tools.FileObject) -> getJavaFileForOutput
    61:65:byte[] getCompiledClass(java.lang.String) -> getCompiledClass
    70:73:java.lang.String inferBinaryName(javax.tools.JavaFileManager$Location,javax.tools.JavaFileObject) -> inferBinaryName
    80:83:java.lang.Iterable list(javax.tools.JavaFileManager$Location,java.lang.String,java.util.Set,boolean) -> list
    35:35:java.util.Map access$000(io.vertx.core.impl.verticle.MemoryFileManager) -> access$000
io.vertx.core.impl.verticle.MemoryFileManager$1 -> io.vertx.core.impl.verticle.MemoryFileManager$1:
    java.lang.String val$className -> val$className
    io.vertx.core.impl.verticle.MemoryFileManager this$0 -> this$0
    48:48:void <init>(io.vertx.core.impl.verticle.MemoryFileManager,java.net.URI,javax.tools.JavaFileObject$Kind,java.lang.String) -> <init>
    50:52:java.io.OutputStream openOutputStream() -> openOutputStream
io.vertx.core.impl.verticle.PackageHelper -> io.vertx.core.impl.verticle.PackageHelper:
    java.lang.ClassLoader classLoader -> classLoader
    36:38:void <init>(java.lang.ClassLoader) -> <init>
    41:61:java.util.List find(java.lang.String) -> find
    65:72:java.util.List browseDir(java.lang.String,java.io.File) -> browseDir
    76:95:java.util.List browseJar(java.net.URL) -> browseJar
io.vertx.core.json.DecodeException -> io.vertx.core.json.DecodeException:
    21:22:void <init>() -> <init>
    25:26:void <init>(java.lang.String) -> <init>
    29:30:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.vertx.core.json.EncodeException -> io.vertx.core.json.EncodeException:
    20:21:void <init>(java.lang.String) -> <init>
    27:28:void <init>() -> <init>
io.vertx.core.json.Json -> io.vertx.core.json.Json:
    com.fasterxml.jackson.databind.ObjectMapper mapper -> mapper
    com.fasterxml.jackson.databind.ObjectMapper prettyMapper -> prettyMapper
    71:73:java.lang.String encode(java.lang.Object) -> encode
    86:88:io.vertx.core.buffer.Buffer encodeToBuffer(java.lang.Object) -> encodeToBuffer
    117:119:java.lang.Object decodeValue(java.lang.String,java.lang.Class) -> decodeValue
    165:167:java.lang.Object decodeValue(io.vertx.core.buffer.Buffer,java.lang.Class) -> decodeValue
    173:212:java.lang.Object checkAndCopy(java.lang.Object,boolean) -> checkAndCopy
    40:60:void <clinit>() -> <clinit>
io.vertx.core.json.Json$1 -> io.vertx.core.json.Json$1:
io.vertx.core.json.Json$ByteArraySerializer -> io.vertx.core.json.Json$ByteArraySerializer:
    java.util.Base64$Encoder BASE64 -> BASE64
    241:242:void <init>() -> <init>
    246:247:void serialize(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    241:241:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    241:241:void <init>(io.vertx.core.json.Json$1) -> <init>
io.vertx.core.json.Json$InstantSerializer -> io.vertx.core.json.Json$InstantSerializer:
    234:234:void <init>() -> <init>
    237:238:void serialize(java.time.Instant,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    234:234:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    234:234:void <init>(io.vertx.core.json.Json$1) -> <init>
io.vertx.core.json.Json$JsonArraySerializer -> io.vertx.core.json.Json$JsonArraySerializer:
    227:227:void <init>() -> <init>
    230:231:void serialize(io.vertx.core.json.JsonArray,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    227:227:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    227:227:void <init>(io.vertx.core.json.Json$1) -> <init>
io.vertx.core.json.Json$JsonObjectSerializer -> io.vertx.core.json.Json$JsonObjectSerializer:
    220:220:void <init>() -> <init>
    223:224:void serialize(io.vertx.core.json.JsonObject,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    220:220:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    220:220:void <init>(io.vertx.core.json.Json$1) -> <init>
io.vertx.core.json.JsonArray -> io.vertx.core.json.JsonArray:
    java.util.List list -> list
    52:54:void <init>() -> <init>
    61:63:void <init>(java.util.List) -> <init>
    70:72:void <init>(io.vertx.core.buffer.Buffer) -> <init>
    304:306:io.vertx.core.json.JsonArray add(java.lang.String) -> add
    386:388:io.vertx.core.json.JsonArray add(io.vertx.core.json.JsonObject) -> add
    412:414:io.vertx.core.json.JsonArray add(byte[]) -> add
    519:519:java.util.List getList() -> getList
    539:539:java.util.Iterator iterator() -> iterator
    548:548:java.lang.String encode() -> encode
    557:557:io.vertx.core.buffer.Buffer toBuffer() -> toBuffer
    575:580:io.vertx.core.json.JsonArray copy() -> copy
    594:594:java.lang.String toString() -> toString
    599:603:boolean equals(java.lang.Object) -> equals
    608:628:boolean arrayEquals(java.util.List,java.lang.Object) -> arrayEquals
    633:633:int hashCode() -> hashCode
    658:659:void fromBuffer(io.vertx.core.buffer.Buffer) -> fromBuffer
io.vertx.core.json.JsonArray$Iter -> io.vertx.core.json.JsonArray$Iter:
    java.util.Iterator listIter -> listIter
    io.vertx.core.json.JsonArray this$0 -> this$0
    665:667:void <init>(io.vertx.core.json.JsonArray,java.util.Iterator) -> <init>
    671:671:boolean hasNext() -> hasNext
    676:682:java.lang.Object next() -> next
    687:688:void remove() -> remove
io.vertx.core.json.JsonObject -> io.vertx.core.json.JsonObject:
    java.util.Map map -> map
    46:48:void <init>(java.lang.String) -> <init>
    53:55:void <init>() -> <init>
    62:64:void <init>(java.util.Map) -> <init>
    71:73:void <init>(io.vertx.core.buffer.Buffer) -> <init>
    110:112:java.lang.String getString(java.lang.String) -> getString
    227:232:io.vertx.core.json.JsonArray getJsonArray(java.lang.String) -> getJsonArray
    280:287:java.lang.Object getValue(java.lang.String) -> getValue
    529:531:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String) -> put
    542:544:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer) -> put
    555:557:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Long) -> put
    594:596:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Boolean) -> put
    619:621:io.vertx.core.json.JsonObject put(java.lang.String,io.vertx.core.json.JsonObject) -> put
    632:634:io.vertx.core.json.JsonObject put(java.lang.String,io.vertx.core.json.JsonArray) -> put
    647:649:io.vertx.core.json.JsonObject put(java.lang.String,byte[]) -> put
    760:760:java.lang.String encode() -> encode
    779:779:io.vertx.core.buffer.Buffer toBuffer() -> toBuffer
    789:799:io.vertx.core.json.JsonObject copy() -> copy
    810:810:java.util.Map getMap() -> getMap
    829:829:java.util.Iterator iterator() -> iterator
    860:860:java.lang.String toString() -> toString
    865:869:boolean equals(java.lang.Object) -> equals
    874:895:boolean objectEquals(java.util.Map,java.lang.Object) -> objectEquals
    899:922:boolean equals(java.lang.Object,java.lang.Object) -> equals
    927:927:int hashCode() -> hashCode
    948:949:void fromJson(java.lang.String) -> fromJson
    952:953:void fromBuffer(io.vertx.core.buffer.Buffer) -> fromBuffer
io.vertx.core.json.JsonObject$Entry -> io.vertx.core.json.JsonObject$Entry:
    java.lang.String key -> key
    java.lang.Object value -> value
    989:992:void <init>(java.lang.String,java.lang.Object) -> <init>
    996:996:java.lang.String getKey() -> getKey
    1001:1001:java.lang.Object getValue() -> getValue
    1006:1006:java.lang.Object setValue(java.lang.Object) -> setValue
    985:985:java.lang.Object getKey() -> getKey
io.vertx.core.json.JsonObject$Iter -> io.vertx.core.json.JsonObject$Iter:
    java.util.Iterator mapIter -> mapIter
    io.vertx.core.json.JsonObject this$0 -> this$0
    959:961:void <init>(io.vertx.core.json.JsonObject,java.util.Iterator) -> <init>
    965:965:boolean hasNext() -> hasNext
    970:976:java.util.Map$Entry next() -> next
    981:982:void remove() -> remove
    955:955:java.lang.Object next() -> next
io.vertx.core.logging.JULLogDelegate -> io.vertx.core.logging.JULLogDelegate:
    java.util.logging.Logger logger -> logger
    27:29:void <init>(java.lang.String) -> <init>
    36:36:boolean isDebugEnabled() -> isDebugEnabled
    40:40:boolean isTraceEnabled() -> isTraceEnabled
    52:53:void error(java.lang.Object) -> error
    61:62:void error(java.lang.Object,java.lang.Throwable) -> error
    70:71:void warn(java.lang.Object) -> warn
    79:80:void warn(java.lang.Object,java.lang.Throwable) -> warn
    88:89:void info(java.lang.Object) -> info
    106:107:void debug(java.lang.Object) -> debug
    124:125:void trace(java.lang.Object) -> trace
    133:134:void trace(java.lang.Object,java.lang.Throwable) -> trace
    142:143:void log(java.util.logging.Level,java.lang.Object) -> log
    146:163:void log(java.util.logging.Level,java.lang.Object,java.lang.Throwable,java.lang.Object[]) -> log
    166:167:void log(java.util.logging.Level,java.lang.Object,java.lang.Throwable) -> log
io.vertx.core.logging.JULLogDelegateFactory -> io.vertx.core.logging.JULLogDelegateFactory:
    27:27:void <init>() -> <init>
    30:36:void loadConfig() -> loadConfig
    46:46:io.vertx.core.spi.logging.LogDelegate createDelegate(java.lang.String) -> createDelegate
    40:43:void <clinit>() -> <clinit>
io.vertx.core.logging.Logger -> io.vertx.core.logging.Logger:
    io.vertx.core.spi.logging.LogDelegate delegate -> delegate
    39:41:void <init>(io.vertx.core.spi.logging.LogDelegate) -> <init>
    48:48:boolean isDebugEnabled() -> isDebugEnabled
    52:52:boolean isTraceEnabled() -> isTraceEnabled
    64:65:void error(java.lang.Object) -> error
    68:69:void error(java.lang.Object,java.lang.Throwable) -> error
    86:87:void warn(java.lang.Object) -> warn
    90:91:void warn(java.lang.Object,java.lang.Throwable) -> warn
    108:109:void info(java.lang.Object) -> info
    130:131:void debug(java.lang.Object) -> debug
    152:153:void trace(java.lang.Object) -> trace
    156:157:void trace(java.lang.Object,java.lang.Throwable) -> trace
io.vertx.core.logging.LoggerFactory -> io.vertx.core.logging.LoggerFactory:
    io.vertx.core.spi.logging.LogDelegateFactory delegateFactory -> delegateFactory
    java.util.concurrent.ConcurrentMap loggers -> loggers
    42:61:void initialise() -> initialise
    64:67:io.vertx.core.logging.Logger getLogger(java.lang.Class) -> getLogger
    71:85:io.vertx.core.logging.Logger getLogger(java.lang.String) -> getLogger
    29:33:void <clinit>() -> <clinit>
io.vertx.core.metrics.MetricsOptions -> io.vertx.core.metrics.MetricsOptions:
    boolean enabled -> enabled
    io.vertx.core.json.JsonObject json -> json
    io.vertx.core.spi.VertxMetricsFactory factory -> factory
    39:41:void <init>() -> <init>
    70:70:boolean isEnabled() -> isEnabled
    95:95:io.vertx.core.spi.VertxMetricsFactory getFactory() -> getFactory
    120:126:boolean equals(java.lang.Object) -> equals
    132:134:int hashCode() -> hashCode
    139:139:java.lang.String toString() -> toString
io.vertx.core.net.ClientOptionsBase -> io.vertx.core.net.ClientOptionsBase:
    int connectTimeout -> connectTimeout
    boolean trustAll -> trustAll
    java.lang.String metricsName -> metricsName
    io.vertx.core.net.ProxyOptions proxyOptions -> proxyOptions
    java.lang.String localAddress -> localAddress
    53:55:void <init>() -> <init>
    63:69:void <init>(io.vertx.core.net.ClientOptionsBase) -> <init>
    77:80:void <init>(io.vertx.core.json.JsonObject) -> <init>
    88:90:io.vertx.core.json.JsonObject toJson() -> toJson
    94:99:void init() -> init
    106:106:boolean isTrustAll() -> isTrustAll
    116:117:io.vertx.core.net.ClientOptionsBase setTrustAll(boolean) -> setTrustAll
    124:124:int getConnectTimeout() -> getConnectTimeout
    134:138:io.vertx.core.net.ClientOptionsBase setConnectTimeout(int) -> setConnectTimeout
    145:145:java.lang.String getMetricsName() -> getMetricsName
    156:157:io.vertx.core.net.ClientOptionsBase setMetricsName(java.lang.String) -> setMetricsName
    167:168:io.vertx.core.net.ClientOptionsBase setProxyOptions(io.vertx.core.net.ProxyOptions) -> setProxyOptions
    177:177:io.vertx.core.net.ProxyOptions getProxyOptions() -> getProxyOptions
    184:184:java.lang.String getLocalAddress() -> getLocalAddress
    195:196:io.vertx.core.net.ClientOptionsBase setLocalAddress(java.lang.String) -> setLocalAddress
    201:201:io.vertx.core.net.ClientOptionsBase setLogActivity(boolean) -> setLogActivity
    206:206:io.vertx.core.net.ClientOptionsBase setTcpNoDelay(boolean) -> setTcpNoDelay
    211:211:io.vertx.core.net.ClientOptionsBase setTcpKeepAlive(boolean) -> setTcpKeepAlive
    216:216:io.vertx.core.net.ClientOptionsBase setSoLinger(int) -> setSoLinger
    221:221:io.vertx.core.net.ClientOptionsBase setUsePooledBuffers(boolean) -> setUsePooledBuffers
    226:226:io.vertx.core.net.ClientOptionsBase setIdleTimeout(int) -> setIdleTimeout
    231:231:io.vertx.core.net.ClientOptionsBase setSsl(boolean) -> setSsl
    241:241:io.vertx.core.net.ClientOptionsBase setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    246:246:io.vertx.core.net.ClientOptionsBase setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    251:251:io.vertx.core.net.ClientOptionsBase setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    261:261:io.vertx.core.net.ClientOptionsBase setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    266:266:io.vertx.core.net.ClientOptionsBase setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    271:271:io.vertx.core.net.ClientOptionsBase setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    276:276:io.vertx.core.net.ClientOptionsBase setUseAlpn(boolean) -> setUseAlpn
    281:281:io.vertx.core.net.ClientOptionsBase setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    286:286:io.vertx.core.net.ClientOptionsBase setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    291:291:io.vertx.core.net.ClientOptionsBase setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    296:296:io.vertx.core.net.ClientOptionsBase setSendBufferSize(int) -> setSendBufferSize
    301:301:io.vertx.core.net.ClientOptionsBase setReceiveBufferSize(int) -> setReceiveBufferSize
    306:306:io.vertx.core.net.ClientOptionsBase setReuseAddress(boolean) -> setReuseAddress
    311:311:io.vertx.core.net.ClientOptionsBase setReusePort(boolean) -> setReusePort
    316:316:io.vertx.core.net.ClientOptionsBase setTrafficClass(int) -> setTrafficClass
    321:321:io.vertx.core.net.ClientOptionsBase addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    326:326:io.vertx.core.net.ClientOptionsBase addCrlPath(java.lang.String) -> addCrlPath
    331:331:io.vertx.core.net.ClientOptionsBase addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    346:346:io.vertx.core.net.ClientOptionsBase setTcpFastOpen(boolean) -> setTcpFastOpen
    351:351:io.vertx.core.net.ClientOptionsBase setTcpCork(boolean) -> setTcpCork
    356:356:io.vertx.core.net.ClientOptionsBase setTcpQuickAck(boolean) -> setTcpQuickAck
    361:373:boolean equals(java.lang.Object) -> equals
    378:384:int hashCode() -> hashCode
    25:25:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> setReusePort
    25:25:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> setTrafficClass
    25:25:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> setReuseAddress
    25:25:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    25:25:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> setSendBufferSize
    25:25:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> setLogActivity
    25:25:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> setTcpQuickAck
    25:25:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> setTcpCork
    25:25:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> setTcpFastOpen
    25:25:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    25:25:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    25:25:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    25:25:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> setUseAlpn
    25:25:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    25:25:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> addCrlPath
    25:25:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    25:25:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    25:25:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    25:25:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    25:25:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    25:25:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    25:25:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    25:25:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> setSsl
    25:25:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> setIdleTimeout
    25:25:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    25:25:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> setSoLinger
    25:25:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    25:25:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    25:25:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> setReusePort
    25:25:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> setLogActivity
    25:25:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> setTrafficClass
    25:25:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> setReuseAddress
    25:25:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    25:25:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> setSendBufferSize
io.vertx.core.net.ClientOptionsBaseConverter -> io.vertx.core.net.ClientOptionsBaseConverter:
    30:45:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.ClientOptionsBase) -> fromJson
    48:59:void toJson(io.vertx.core.net.ClientOptionsBase,io.vertx.core.json.JsonObject) -> toJson
io.vertx.core.net.JdkSSLEngineOptions -> io.vertx.core.net.JdkSSLEngineOptions:
    java.lang.Boolean jdkAlpnAvailable -> jdkAlpnAvailable
    31:43:boolean isAlpnAvailable() -> isAlpnAvailable
    46:47:void <init>() -> <init>
    49:50:void <init>(io.vertx.core.json.JsonObject) -> <init>
    56:56:io.vertx.core.json.JsonObject toJson() -> toJson
    61:61:int hashCode() -> hashCode
    66:68:boolean equals(java.lang.Object) -> equals
    73:73:io.vertx.core.net.SSLEngineOptions clone() -> clone
    22:22:java.lang.Object clone() -> clone
io.vertx.core.net.JksOptions -> io.vertx.core.net.JksOptions:
    java.lang.String password -> password
    java.lang.String path -> path
    io.vertx.core.buffer.Buffer value -> value
    58:59:void <init>() -> <init>
    67:71:void <init>(io.vertx.core.net.JksOptions) -> <init>
    79:81:void <init>(io.vertx.core.json.JsonObject) -> <init>
    89:91:io.vertx.core.json.JsonObject toJson() -> toJson
    98:98:java.lang.String getPassword() -> getPassword
    108:109:io.vertx.core.net.JksOptions setPassword(java.lang.String) -> setPassword
    118:118:java.lang.String getPath() -> getPath
    128:129:io.vertx.core.net.JksOptions setPath(java.lang.String) -> setPath
    138:138:io.vertx.core.buffer.Buffer getValue() -> getValue
    148:149:io.vertx.core.net.JksOptions setValue(io.vertx.core.buffer.Buffer) -> setValue
    154:173:boolean equals(java.lang.Object) -> equals
    178:183:int hashCode() -> hashCode
    188:188:io.vertx.core.net.JksOptions clone() -> clone
    47:47:java.lang.Object clone() -> clone
    47:47:io.vertx.core.net.KeyCertOptions clone() -> clone
    47:47:io.vertx.core.net.TrustOptions clone() -> clone
io.vertx.core.net.JksOptionsConverter -> io.vertx.core.net.JksOptionsConverter:
    30:39:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.JksOptions) -> fromJson
    42:51:void toJson(io.vertx.core.net.JksOptions,io.vertx.core.json.JsonObject) -> toJson
io.vertx.core.net.KeyCertOptions -> io.vertx.core.net.KeyCertOptions:
    io.vertx.core.net.KeyCertOptions clone() -> clone
    43:43:javax.net.ssl.KeyManagerFactory getKeyManagerFactory(io.vertx.core.Vertx) -> getKeyManagerFactory
    65:66:java.util.function.Function keyManagerMapper(io.vertx.core.Vertx) -> keyManagerMapper
io.vertx.core.net.NetClient -> io.vertx.core.net.NetClient:
    io.vertx.core.net.NetClient connect(int,java.lang.String,io.vertx.core.Handler) -> connect
    void close() -> close
io.vertx.core.net.NetClientOptions -> io.vertx.core.net.NetClientOptions:
    int reconnectAttempts -> reconnectAttempts
    long reconnectInterval -> reconnectInterval
    java.lang.String hostnameVerificationAlgorithm -> hostnameVerificationAlgorithm
    52:54:void <init>() -> <init>
    62:66:void <init>(io.vertx.core.net.NetClientOptions) -> <init>
    74:77:void <init>(io.vertx.core.json.JsonObject) -> <init>
    80:83:void init() -> init
    87:88:io.vertx.core.net.NetClientOptions setSendBufferSize(int) -> setSendBufferSize
    93:94:io.vertx.core.net.NetClientOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    99:100:io.vertx.core.net.NetClientOptions setReuseAddress(boolean) -> setReuseAddress
    105:106:io.vertx.core.net.NetClientOptions setReusePort(boolean) -> setReusePort
    111:112:io.vertx.core.net.NetClientOptions setTrafficClass(int) -> setTrafficClass
    117:118:io.vertx.core.net.NetClientOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    123:124:io.vertx.core.net.NetClientOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    129:130:io.vertx.core.net.NetClientOptions setSoLinger(int) -> setSoLinger
    135:136:io.vertx.core.net.NetClientOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    141:142:io.vertx.core.net.NetClientOptions setIdleTimeout(int) -> setIdleTimeout
    147:148:io.vertx.core.net.NetClientOptions setSsl(boolean) -> setSsl
    159:160:io.vertx.core.net.NetClientOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    165:165:io.vertx.core.net.NetClientOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    170:170:io.vertx.core.net.NetClientOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    181:182:io.vertx.core.net.NetClientOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    187:187:io.vertx.core.net.NetClientOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    192:192:io.vertx.core.net.NetClientOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    197:198:io.vertx.core.net.NetClientOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    214:214:io.vertx.core.net.NetClientOptions setUseAlpn(boolean) -> setUseAlpn
    219:219:io.vertx.core.net.NetClientOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    224:224:io.vertx.core.net.NetClientOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    229:229:io.vertx.core.net.NetClientOptions setTcpFastOpen(boolean) -> setTcpFastOpen
    234:234:io.vertx.core.net.NetClientOptions setTcpCork(boolean) -> setTcpCork
    239:239:io.vertx.core.net.NetClientOptions setTcpQuickAck(boolean) -> setTcpQuickAck
    244:244:io.vertx.core.net.ClientOptionsBase setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    249:249:io.vertx.core.net.NetClientOptions addCrlPath(java.lang.String) -> addCrlPath
    254:254:io.vertx.core.net.NetClientOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    259:260:io.vertx.core.net.NetClientOptions setTrustAll(boolean) -> setTrustAll
    265:266:io.vertx.core.net.NetClientOptions setConnectTimeout(int) -> setConnectTimeout
    271:271:io.vertx.core.net.NetClientOptions setMetricsName(java.lang.String) -> setMetricsName
    281:285:io.vertx.core.net.NetClientOptions setReconnectAttempts(int) -> setReconnectAttempts
    292:292:int getReconnectAttempts() -> getReconnectAttempts
    302:306:io.vertx.core.net.NetClientOptions setReconnectInterval(long) -> setReconnectInterval
    314:314:java.lang.String getHostnameVerificationAlgorithm() -> getHostnameVerificationAlgorithm
    326:328:io.vertx.core.net.NetClientOptions setHostnameVerificationAlgorithm(java.lang.String) -> setHostnameVerificationAlgorithm
    335:335:long getReconnectInterval() -> getReconnectInterval
    340:340:io.vertx.core.net.NetClientOptions setLogActivity(boolean) -> setLogActivity
    344:344:io.vertx.core.net.NetClientOptions setProxyOptions(io.vertx.core.net.ProxyOptions) -> setProxyOptions
    349:349:io.vertx.core.net.NetClientOptions setLocalAddress(java.lang.String) -> setLocalAddress
    354:364:boolean equals(java.lang.Object) -> equals
    369:373:int hashCode() -> hashCode
    25:25:io.vertx.core.net.ClientOptionsBase setTcpQuickAck(boolean) -> setTcpQuickAck
    25:25:io.vertx.core.net.ClientOptionsBase setTcpCork(boolean) -> setTcpCork
    25:25:io.vertx.core.net.ClientOptionsBase setTcpFastOpen(boolean) -> setTcpFastOpen
    25:25:io.vertx.core.net.ClientOptionsBase addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    25:25:io.vertx.core.net.ClientOptionsBase addCrlPath(java.lang.String) -> addCrlPath
    25:25:io.vertx.core.net.ClientOptionsBase addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    25:25:io.vertx.core.net.ClientOptionsBase setTrafficClass(int) -> setTrafficClass
    25:25:io.vertx.core.net.ClientOptionsBase setReusePort(boolean) -> setReusePort
    25:25:io.vertx.core.net.ClientOptionsBase setReuseAddress(boolean) -> setReuseAddress
    25:25:io.vertx.core.net.ClientOptionsBase setReceiveBufferSize(int) -> setReceiveBufferSize
    25:25:io.vertx.core.net.ClientOptionsBase setSendBufferSize(int) -> setSendBufferSize
    25:25:io.vertx.core.net.ClientOptionsBase setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    25:25:io.vertx.core.net.ClientOptionsBase setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    25:25:io.vertx.core.net.ClientOptionsBase setUseAlpn(boolean) -> setUseAlpn
    25:25:io.vertx.core.net.ClientOptionsBase setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    25:25:io.vertx.core.net.ClientOptionsBase setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    25:25:io.vertx.core.net.ClientOptionsBase setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    25:25:io.vertx.core.net.ClientOptionsBase setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    25:25:io.vertx.core.net.ClientOptionsBase setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    25:25:io.vertx.core.net.ClientOptionsBase setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    25:25:io.vertx.core.net.ClientOptionsBase setSsl(boolean) -> setSsl
    25:25:io.vertx.core.net.ClientOptionsBase setIdleTimeout(int) -> setIdleTimeout
    25:25:io.vertx.core.net.ClientOptionsBase setUsePooledBuffers(boolean) -> setUsePooledBuffers
    25:25:io.vertx.core.net.ClientOptionsBase setSoLinger(int) -> setSoLinger
    25:25:io.vertx.core.net.ClientOptionsBase setTcpKeepAlive(boolean) -> setTcpKeepAlive
    25:25:io.vertx.core.net.ClientOptionsBase setTcpNoDelay(boolean) -> setTcpNoDelay
    25:25:io.vertx.core.net.ClientOptionsBase setLogActivity(boolean) -> setLogActivity
    25:25:io.vertx.core.net.ClientOptionsBase setLocalAddress(java.lang.String) -> setLocalAddress
    25:25:io.vertx.core.net.ClientOptionsBase setProxyOptions(io.vertx.core.net.ProxyOptions) -> setProxyOptions
    25:25:io.vertx.core.net.ClientOptionsBase setMetricsName(java.lang.String) -> setMetricsName
    25:25:io.vertx.core.net.ClientOptionsBase setConnectTimeout(int) -> setConnectTimeout
    25:25:io.vertx.core.net.ClientOptionsBase setTrustAll(boolean) -> setTrustAll
    25:25:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> setReusePort
    25:25:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> setTrafficClass
    25:25:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> setReuseAddress
    25:25:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    25:25:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> setSendBufferSize
    25:25:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> setLogActivity
    25:25:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> setTcpQuickAck
    25:25:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> setTcpCork
    25:25:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> setTcpFastOpen
    25:25:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    25:25:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    25:25:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    25:25:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> setUseAlpn
    25:25:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    25:25:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> addCrlPath
    25:25:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    25:25:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    25:25:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    25:25:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    25:25:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    25:25:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    25:25:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    25:25:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> setSsl
    25:25:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> setIdleTimeout
    25:25:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    25:25:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> setSoLinger
    25:25:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    25:25:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    25:25:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> setReusePort
    25:25:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> setLogActivity
    25:25:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> setTrafficClass
    25:25:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> setReuseAddress
    25:25:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    25:25:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> setSendBufferSize
io.vertx.core.net.NetClientOptionsConverter -> io.vertx.core.net.NetClientOptionsConverter:
    30:39:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.NetClientOptions) -> fromJson
io.vertx.core.net.NetServer -> io.vertx.core.net.NetServer:
    io.vertx.core.net.NetServer connectHandler(io.vertx.core.Handler) -> connectHandler
    io.vertx.core.net.NetServer listen(io.vertx.core.Handler) -> listen
    void close(io.vertx.core.Handler) -> close
    int actualPort() -> actualPort
io.vertx.core.net.NetServerOptions -> io.vertx.core.net.NetServerOptions:
    io.vertx.core.http.ClientAuth DEFAULT_CLIENT_AUTH -> DEFAULT_CLIENT_AUTH
    int port -> port
    java.lang.String host -> host
    int acceptBacklog -> acceptBacklog
    io.vertx.core.http.ClientAuth clientAuth -> clientAuth
    boolean sni -> sni
    64:66:void <init>() -> <init>
    74:80:void <init>(io.vertx.core.net.NetServerOptions) -> <init>
    88:91:void <init>(io.vertx.core.json.JsonObject) -> <init>
    99:101:io.vertx.core.json.JsonObject toJson() -> toJson
    106:107:io.vertx.core.net.NetServerOptions setSendBufferSize(int) -> setSendBufferSize
    112:113:io.vertx.core.net.NetServerOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    118:119:io.vertx.core.net.NetServerOptions setReuseAddress(boolean) -> setReuseAddress
    124:125:io.vertx.core.net.NetServerOptions setReusePort(boolean) -> setReusePort
    130:131:io.vertx.core.net.NetServerOptions setTrafficClass(int) -> setTrafficClass
    136:137:io.vertx.core.net.NetServerOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    142:143:io.vertx.core.net.NetServerOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    148:149:io.vertx.core.net.NetServerOptions setSoLinger(int) -> setSoLinger
    154:155:io.vertx.core.net.NetServerOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    160:161:io.vertx.core.net.NetServerOptions setIdleTimeout(int) -> setIdleTimeout
    166:167:io.vertx.core.net.NetServerOptions setSsl(boolean) -> setSsl
    172:173:io.vertx.core.net.NetServerOptions setUseAlpn(boolean) -> setUseAlpn
    178:179:io.vertx.core.net.NetServerOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    184:184:io.vertx.core.net.NetServerOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    189:189:io.vertx.core.net.NetServerOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    200:201:io.vertx.core.net.NetServerOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    206:206:io.vertx.core.net.NetServerOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    211:211:io.vertx.core.net.NetServerOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    222:223:io.vertx.core.net.NetServerOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    228:228:io.vertx.core.net.NetServerOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    233:233:io.vertx.core.net.NetServerOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    238:239:io.vertx.core.net.NetServerOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    255:255:io.vertx.core.net.NetServerOptions setTcpFastOpen(boolean) -> setTcpFastOpen
    260:260:io.vertx.core.net.NetServerOptions setTcpCork(boolean) -> setTcpCork
    265:265:io.vertx.core.net.NetServerOptions setTcpQuickAck(boolean) -> setTcpQuickAck
    270:270:io.vertx.core.net.NetServerOptions addCrlPath(java.lang.String) -> addCrlPath
    275:275:io.vertx.core.net.NetServerOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    282:282:int getAcceptBacklog() -> getAcceptBacklog
    292:293:io.vertx.core.net.NetServerOptions setAcceptBacklog(int) -> setAcceptBacklog
    301:301:int getPort() -> getPort
    311:315:io.vertx.core.net.NetServerOptions setPort(int) -> setPort
    323:323:java.lang.String getHost() -> getHost
    332:333:io.vertx.core.net.NetServerOptions setHost(java.lang.String) -> setHost
    342:342:boolean isClientAuthRequired() -> isClientAuthRequired
    353:354:io.vertx.core.net.NetServerOptions setClientAuthRequired(boolean) -> setClientAuthRequired
    358:358:io.vertx.core.http.ClientAuth getClientAuth() -> getClientAuth
    370:371:io.vertx.core.net.NetServerOptions setClientAuth(io.vertx.core.http.ClientAuth) -> setClientAuth
    376:376:io.vertx.core.net.NetServerOptions setLogActivity(boolean) -> setLogActivity
    383:383:boolean isSni() -> isSni
    392:393:io.vertx.core.net.NetServerOptions setSni(boolean) -> setSni
    398:410:boolean equals(java.lang.Object) -> equals
    415:421:int hashCode() -> hashCode
    425:430:void init() -> init
    24:24:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> setReusePort
    24:24:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> setTrafficClass
    24:24:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> setReuseAddress
    24:24:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    24:24:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> setSendBufferSize
    24:24:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> setLogActivity
    24:24:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> setTcpQuickAck
    24:24:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> setTcpCork
    24:24:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> setTcpFastOpen
    24:24:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    24:24:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    24:24:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    24:24:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> setUseAlpn
    24:24:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    24:24:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> addCrlPath
    24:24:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    24:24:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    24:24:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    24:24:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    24:24:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    24:24:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    24:24:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    24:24:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> setSsl
    24:24:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> setIdleTimeout
    24:24:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    24:24:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> setSoLinger
    24:24:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    24:24:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    24:24:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> setReusePort
    24:24:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> setLogActivity
    24:24:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> setTrafficClass
    24:24:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> setReuseAddress
    24:24:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    24:24:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> setSendBufferSize
    47:47:void <clinit>() -> <clinit>
io.vertx.core.net.NetServerOptionsConverter -> io.vertx.core.net.NetServerOptionsConverter:
    30:48:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.NetServerOptions) -> fromJson
    51:61:void toJson(io.vertx.core.net.NetServerOptions,io.vertx.core.json.JsonObject) -> toJson
io.vertx.core.net.NetSocket -> io.vertx.core.net.NetSocket:
    io.vertx.core.net.NetSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.net.NetSocket handler(io.vertx.core.Handler) -> handler
    io.vertx.core.net.NetSocket pause() -> pause
    io.vertx.core.net.NetSocket resume() -> resume
    io.vertx.core.net.NetSocket endHandler(io.vertx.core.Handler) -> endHandler
    io.vertx.core.net.NetSocket write(io.vertx.core.buffer.Buffer) -> write
    io.vertx.core.net.NetSocket closeHandler(io.vertx.core.Handler) -> closeHandler
    42:42:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    42:42:io.vertx.core.streams.ReadStream resume() -> resume
    42:42:io.vertx.core.streams.ReadStream pause() -> pause
    42:42:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    42:42:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.net.NetworkOptions -> io.vertx.core.net.NetworkOptions:
    int sendBufferSize -> sendBufferSize
    int receiveBufferSize -> receiveBufferSize
    int trafficClass -> trafficClass
    boolean reuseAddress -> reuseAddress
    boolean logActivity -> logActivity
    boolean reusePort -> reusePort
    65:72:void <init>() -> <init>
    79:86:void <init>(io.vertx.core.net.NetworkOptions) -> <init>
    94:96:void <init>(io.vertx.core.json.JsonObject) -> <init>
    104:106:io.vertx.core.json.JsonObject toJson() -> toJson
    115:115:int getSendBufferSize() -> getSendBufferSize
    125:127:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> setSendBufferSize
    136:136:int getReceiveBufferSize() -> getReceiveBufferSize
    146:148:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    155:155:boolean isReuseAddress() -> isReuseAddress
    164:165:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> setReuseAddress
    172:172:int getTrafficClass() -> getTrafficClass
    182:184:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> setTrafficClass
    191:191:boolean getLogActivity() -> getLogActivity
    201:202:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> setLogActivity
    209:209:boolean isReusePort() -> isReusePort
    221:222:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> setReusePort
    227:238:boolean equals(java.lang.Object) -> equals
    243:248:int hashCode() -> hashCode
io.vertx.core.net.NetworkOptionsConverter -> io.vertx.core.net.NetworkOptionsConverter:
    30:48:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.NetworkOptions) -> fromJson
    51:57:void toJson(io.vertx.core.net.NetworkOptions,io.vertx.core.json.JsonObject) -> toJson
io.vertx.core.net.OpenSSLEngineOptions -> io.vertx.core.net.OpenSSLEngineOptions:
    boolean sessionCacheEnabled -> sessionCacheEnabled
    37:37:boolean isAlpnAvailable() -> isAlpnAvailable
    47:49:void <init>() -> <init>
    51:53:void <init>(io.vertx.core.json.JsonObject) -> <init>
    55:57:void <init>(io.vertx.core.net.OpenSSLEngineOptions) -> <init>
    66:67:io.vertx.core.net.OpenSSLEngineOptions setSessionCacheEnabled(boolean) -> setSessionCacheEnabled
    76:76:boolean isSessionCacheEnabled() -> isSessionCacheEnabled
    81:88:boolean equals(java.lang.Object) -> equals
    93:93:int hashCode() -> hashCode
    97:99:io.vertx.core.json.JsonObject toJson() -> toJson
    104:104:io.vertx.core.net.OpenSSLEngineOptions clone() -> clone
    23:23:io.vertx.core.net.SSLEngineOptions clone() -> clone
    23:23:java.lang.Object clone() -> clone
io.vertx.core.net.OpenSSLEngineOptionsConverter -> io.vertx.core.net.OpenSSLEngineOptionsConverter:
    30:33:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.OpenSSLEngineOptions) -> fromJson
    36:37:void toJson(io.vertx.core.net.OpenSSLEngineOptions,io.vertx.core.json.JsonObject) -> toJson
io.vertx.core.net.PemKeyCertOptions -> io.vertx.core.net.PemKeyCertOptions:
    java.util.List keyPaths -> keyPaths
    java.util.List keyValues -> keyValues
    java.util.List certPaths -> certPaths
    java.util.List certValues -> certValues
    102:104:void <init>() -> <init>
    107:111:void init() -> init
    119:124:void <init>(io.vertx.core.net.PemKeyCertOptions) -> <init>
    132:135:void <init>(io.vertx.core.json.JsonObject) -> <init>
    143:145:io.vertx.core.json.JsonObject toJson() -> toJson
    165:169:io.vertx.core.net.PemKeyCertOptions setKeyPath(java.lang.String) -> setKeyPath
    178:178:java.util.List getKeyPaths() -> getKeyPaths
    188:190:io.vertx.core.net.PemKeyCertOptions setKeyPaths(java.util.List) -> setKeyPaths
    223:227:io.vertx.core.net.PemKeyCertOptions setKeyValue(io.vertx.core.buffer.Buffer) -> setKeyValue
    236:236:java.util.List getKeyValues() -> getKeyValues
    246:248:io.vertx.core.net.PemKeyCertOptions setKeyValues(java.util.List) -> setKeyValues
    281:285:io.vertx.core.net.PemKeyCertOptions setCertPath(java.lang.String) -> setCertPath
    294:294:java.util.List getCertPaths() -> getCertPaths
    304:306:io.vertx.core.net.PemKeyCertOptions setCertPaths(java.util.List) -> setCertPaths
    339:343:io.vertx.core.net.PemKeyCertOptions setCertValue(io.vertx.core.buffer.Buffer) -> setCertValue
    352:352:java.util.List getCertValues() -> getCertValues
    362:364:io.vertx.core.net.PemKeyCertOptions setCertValues(java.util.List) -> setCertValues
    382:403:boolean equals(java.lang.Object) -> equals
    408:414:int hashCode() -> hashCode
    419:419:io.vertx.core.net.PemKeyCertOptions clone() -> clone
    90:90:java.lang.Object clone() -> clone
    90:90:io.vertx.core.net.KeyCertOptions clone() -> clone
io.vertx.core.net.PemKeyCertOptionsConverter -> io.vertx.core.net.PemKeyCertOptionsConverter:
    30:74:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.PemKeyCertOptions) -> fromJson
    77:97:void toJson(io.vertx.core.net.PemKeyCertOptions,io.vertx.core.json.JsonObject) -> toJson
    94:94:void lambda$toJson$7(io.vertx.core.json.JsonArray,io.vertx.core.buffer.Buffer) -> lambda$toJson$7
    89:89:void lambda$toJson$6(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$6
    84:84:void lambda$toJson$5(io.vertx.core.json.JsonArray,io.vertx.core.buffer.Buffer) -> lambda$toJson$5
    79:79:void lambda$toJson$4(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$4
    69:71:void lambda$fromJson$3(java.util.ArrayList,java.lang.Object) -> lambda$fromJson$3
    58:60:void lambda$fromJson$2(java.util.ArrayList,java.lang.Object) -> lambda$fromJson$2
    47:49:void lambda$fromJson$1(java.util.ArrayList,java.lang.Object) -> lambda$fromJson$1
    36:38:void lambda$fromJson$0(java.util.ArrayList,java.lang.Object) -> lambda$fromJson$0
io.vertx.core.net.PemTrustOptions -> io.vertx.core.net.PemTrustOptions:
    java.util.ArrayList certPaths -> certPaths
    java.util.ArrayList certValues -> certValues
    69:72:void <init>() -> <init>
    80:83:void <init>(io.vertx.core.net.PemTrustOptions) -> <init>
    91:93:void <init>(io.vertx.core.json.JsonObject) -> <init>
    101:103:io.vertx.core.json.JsonObject toJson() -> toJson
    110:110:java.util.List getCertPaths() -> getCertPaths
    121:124:io.vertx.core.net.PemTrustOptions addCertPath(java.lang.String) -> addCertPath
    132:132:java.util.List getCertValues() -> getCertValues
    143:145:io.vertx.core.net.PemTrustOptions addCertValue(io.vertx.core.buffer.Buffer) -> addCertValue
    150:150:io.vertx.core.net.PemTrustOptions clone() -> clone
    155:161:boolean equals(java.lang.Object) -> equals
    166:168:int hashCode() -> hashCode
    59:59:java.lang.Object clone() -> clone
    59:59:io.vertx.core.net.TrustOptions clone() -> clone
io.vertx.core.net.PemTrustOptionsConverter -> io.vertx.core.net.PemTrustOptionsConverter:
    30:42:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.PemTrustOptions) -> fromJson
    45:55:void toJson(io.vertx.core.net.PemTrustOptions,io.vertx.core.json.JsonObject) -> toJson
    52:52:void lambda$toJson$3(io.vertx.core.json.JsonArray,io.vertx.core.buffer.Buffer) -> lambda$toJson$3
    47:47:void lambda$toJson$2(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$2
    38:40:void lambda$fromJson$1(io.vertx.core.net.PemTrustOptions,java.lang.Object) -> lambda$fromJson$1
    32:34:void lambda$fromJson$0(io.vertx.core.net.PemTrustOptions,java.lang.Object) -> lambda$fromJson$0
io.vertx.core.net.PfxOptions -> io.vertx.core.net.PfxOptions:
    java.lang.String password -> password
    java.lang.String path -> path
    io.vertx.core.buffer.Buffer value -> value
    53:54:void <init>() -> <init>
    62:66:void <init>(io.vertx.core.net.PfxOptions) -> <init>
    74:76:void <init>(io.vertx.core.json.JsonObject) -> <init>
    84:86:io.vertx.core.json.JsonObject toJson() -> toJson
    95:95:java.lang.String getPassword() -> getPassword
    105:106:io.vertx.core.net.PfxOptions setPassword(java.lang.String) -> setPassword
    115:115:java.lang.String getPath() -> getPath
    125:126:io.vertx.core.net.PfxOptions setPath(java.lang.String) -> setPath
    135:135:io.vertx.core.buffer.Buffer getValue() -> getValue
    145:146:io.vertx.core.net.PfxOptions setValue(io.vertx.core.buffer.Buffer) -> setValue
    151:169:boolean equals(java.lang.Object) -> equals
    174:178:int hashCode() -> hashCode
    183:183:io.vertx.core.net.PfxOptions clone() -> clone
    42:42:java.lang.Object clone() -> clone
    42:42:io.vertx.core.net.KeyCertOptions clone() -> clone
    42:42:io.vertx.core.net.TrustOptions clone() -> clone
io.vertx.core.net.PfxOptionsConverter -> io.vertx.core.net.PfxOptionsConverter:
    30:39:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.PfxOptions) -> fromJson
    42:51:void toJson(io.vertx.core.net.PfxOptions,io.vertx.core.json.JsonObject) -> toJson
io.vertx.core.net.ProxyOptions -> io.vertx.core.net.ProxyOptions:
    io.vertx.core.net.ProxyType DEFAULT_TYPE -> DEFAULT_TYPE
    java.lang.String host -> host
    int port -> port
    java.lang.String username -> username
    java.lang.String password -> password
    io.vertx.core.net.ProxyType type -> type
    53:57:void <init>() -> <init>
    64:70:void <init>(io.vertx.core.net.ProxyOptions) -> <init>
    78:80:void <init>(io.vertx.core.json.JsonObject) -> <init>
    88:90:io.vertx.core.json.JsonObject toJson() -> toJson
    99:99:java.lang.String getHost() -> getHost
    109:111:io.vertx.core.net.ProxyOptions setHost(java.lang.String) -> setHost
    120:120:int getPort() -> getPort
    130:134:io.vertx.core.net.ProxyOptions setPort(int) -> setPort
    143:143:java.lang.String getUsername() -> getUsername
    153:154:io.vertx.core.net.ProxyOptions setUsername(java.lang.String) -> setUsername
    163:163:java.lang.String getPassword() -> getPassword
    173:174:io.vertx.core.net.ProxyOptions setPassword(java.lang.String) -> setPassword
    185:185:io.vertx.core.net.ProxyType getType() -> getType
    197:199:io.vertx.core.net.ProxyOptions setType(io.vertx.core.net.ProxyType) -> setType
    204:216:boolean equals(java.lang.Object) -> equals
    221:227:int hashCode() -> hashCode
    30:30:void <clinit>() -> <clinit>
io.vertx.core.net.ProxyOptionsConverter -> io.vertx.core.net.ProxyOptionsConverter:
    30:45:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.ProxyOptions) -> fromJson
    48:61:void toJson(io.vertx.core.net.ProxyOptions,io.vertx.core.json.JsonObject) -> toJson
io.vertx.core.net.ProxyType -> io.vertx.core.net.ProxyType:
    io.vertx.core.net.ProxyType HTTP -> HTTP
    io.vertx.core.net.ProxyType SOCKS4 -> SOCKS4
    io.vertx.core.net.ProxyType SOCKS5 -> SOCKS5
    io.vertx.core.net.ProxyType[] $VALUES -> $VALUES
    21:21:io.vertx.core.net.ProxyType[] values() -> values
    21:21:io.vertx.core.net.ProxyType valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    21:34:void <clinit>() -> <clinit>
io.vertx.core.net.SSLEngineOptions -> io.vertx.core.net.SSLEngineOptions:
    19:19:void <init>() -> <init>
    io.vertx.core.net.SSLEngineOptions clone() -> clone
    19:19:java.lang.Object clone() -> clone
io.vertx.core.net.SocketAddress -> io.vertx.core.net.SocketAddress:
    37:37:io.vertx.core.net.SocketAddress inetSocketAddress(int,java.lang.String) -> inetSocketAddress
    java.lang.String host() -> host
    int port() -> port
    java.lang.String path() -> path
io.vertx.core.net.TCPSSLOptions -> io.vertx.core.net.TCPSSLOptions:
    io.vertx.core.net.SSLEngineOptions DEFAULT_SSL_ENGINE -> DEFAULT_SSL_ENGINE
    java.util.List DEFAULT_ENABLED_SECURE_TRANSPORT_PROTOCOLS -> DEFAULT_ENABLED_SECURE_TRANSPORT_PROTOCOLS
    boolean tcpNoDelay -> tcpNoDelay
    boolean tcpKeepAlive -> tcpKeepAlive
    int soLinger -> soLinger
    boolean usePooledBuffers -> usePooledBuffers
    int idleTimeout -> idleTimeout
    boolean ssl -> ssl
    io.vertx.core.net.KeyCertOptions keyCertOptions -> keyCertOptions
    io.vertx.core.net.TrustOptions trustOptions -> trustOptions
    java.util.Set enabledCipherSuites -> enabledCipherSuites
    java.util.ArrayList crlPaths -> crlPaths
    java.util.ArrayList crlValues -> crlValues
    boolean useAlpn -> useAlpn
    io.vertx.core.net.SSLEngineOptions sslEngineOptions -> sslEngineOptions
    java.util.Set enabledSecureTransportProtocols -> enabledSecureTransportProtocols
    boolean tcpFastOpen -> tcpFastOpen
    boolean tcpCork -> tcpCork
    boolean tcpQuickAck -> tcpQuickAck
    115:117:void <init>() -> <init>
    125:143:void <init>(io.vertx.core.net.TCPSSLOptions) -> <init>
    151:154:void <init>(io.vertx.core.json.JsonObject) -> <init>
    162:164:io.vertx.core.json.JsonObject toJson() -> toJson
    168:183:void init() -> init
    189:189:boolean isTcpNoDelay() -> isTcpNoDelay
    199:200:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> setTcpNoDelay
    207:207:boolean isTcpKeepAlive() -> isTcpKeepAlive
    217:218:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> setTcpKeepAlive
    226:226:int getSoLinger() -> getSoLinger
    236:240:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> setSoLinger
    248:248:boolean isUsePooledBuffers() -> isUsePooledBuffers
    258:259:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> setUsePooledBuffers
    270:274:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> setIdleTimeout
    281:281:int getIdleTimeout() -> getIdleTimeout
    289:289:boolean isSsl() -> isSsl
    299:300:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> setSsl
    308:308:io.vertx.core.net.KeyCertOptions getKeyCertOptions() -> getKeyCertOptions
    329:329:io.vertx.core.net.JksOptions getKeyStoreOptions() -> getKeyStoreOptions
    338:339:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> setKeyStoreOptions
    348:348:io.vertx.core.net.PfxOptions getPfxKeyCertOptions() -> getPfxKeyCertOptions
    357:358:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> setPfxKeyCertOptions
    367:367:io.vertx.core.net.PemKeyCertOptions getPemKeyCertOptions() -> getPemKeyCertOptions
    376:377:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> setPemKeyCertOptions
    384:384:io.vertx.core.net.TrustOptions getTrustOptions() -> getTrustOptions
    403:403:io.vertx.core.net.JksOptions getTrustStoreOptions() -> getTrustStoreOptions
    412:413:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> setTrustStoreOptions
    422:422:io.vertx.core.net.PfxOptions getPfxTrustOptions() -> getPfxTrustOptions
    431:432:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> setPfxTrustOptions
    441:441:io.vertx.core.net.PemTrustOptions getPemTrustOptions() -> getPemTrustOptions
    450:451:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> setPemTrustOptions
    461:462:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> addEnabledCipherSuite
    470:470:java.util.Set getEnabledCipherSuites() -> getEnabledCipherSuites
    478:478:java.util.List getCrlPaths() -> getCrlPaths
    488:490:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> addCrlPath
    499:499:java.util.List getCrlValues() -> getCrlValues
    510:512:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> addCrlValue
    519:519:boolean isUseAlpn() -> isUseAlpn
    528:529:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> setUseAlpn
    536:536:io.vertx.core.net.SSLEngineOptions getSslEngineOptions() -> getSslEngineOptions
    546:547:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> setSslEngineOptions
    551:551:io.vertx.core.net.JdkSSLEngineOptions getJdkSslEngineOptions() -> getJdkSslEngineOptions
    555:555:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> setJdkSslEngineOptions
    559:559:io.vertx.core.net.OpenSSLEngineOptions getOpenSslEngineOptions() -> getOpenSslEngineOptions
    563:563:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> setOpenSslEngineOptions
    573:574:io.vertx.core.net.TCPSSLOptions setEnabledSecureTransportProtocols(java.util.Set) -> setEnabledSecureTransportProtocols
    603:603:boolean isTcpFastOpen() -> isTcpFastOpen
    612:613:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> setTcpFastOpen
    620:620:boolean isTcpCork() -> isTcpCork
    629:630:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> setTcpCork
    637:637:boolean isTcpQuickAck() -> isTcpQuickAck
    646:647:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> setTcpQuickAck
    655:655:java.util.Set getEnabledSecureTransportProtocols() -> getEnabledSecureTransportProtocols
    660:660:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> setLogActivity
    665:665:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> setSendBufferSize
    670:670:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    675:675:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> setReuseAddress
    680:680:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> setTrafficClass
    685:685:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> setReusePort
    690:715:boolean equals(java.lang.Object) -> equals
    720:739:int hashCode() -> hashCode
    26:26:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> setReusePort
    26:26:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> setLogActivity
    26:26:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> setTrafficClass
    26:26:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> setReuseAddress
    26:26:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> setReceiveBufferSize
    26:26:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> setSendBufferSize
    67:76:void <clinit>() -> <clinit>
io.vertx.core.net.TCPSSLOptionsConverter -> io.vertx.core.net.TCPSSLOptionsConverter:
    30:110:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.TCPSSLOptions) -> fromJson
    113:167:void toJson(io.vertx.core.net.TCPSSLOptions,io.vertx.core.json.JsonObject) -> toJson
    130:130:void lambda$toJson$7(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$7
    125:125:void lambda$toJson$6(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$6
    120:120:void lambda$toJson$5(io.vertx.core.json.JsonArray,io.vertx.core.buffer.Buffer) -> lambda$toJson$5
    115:115:void lambda$toJson$4(io.vertx.core.json.JsonArray,java.lang.String) -> lambda$toJson$4
    51:53:void lambda$fromJson$3(java.util.LinkedHashSet,java.lang.Object) -> lambda$fromJson$3
    44:46:void lambda$fromJson$2(io.vertx.core.net.TCPSSLOptions,java.lang.Object) -> lambda$fromJson$2
    38:40:void lambda$fromJson$1(io.vertx.core.net.TCPSSLOptions,java.lang.Object) -> lambda$fromJson$1
    32:34:void lambda$fromJson$0(io.vertx.core.net.TCPSSLOptions,java.lang.Object) -> lambda$fromJson$0
io.vertx.core.net.TrustOptions -> io.vertx.core.net.TrustOptions:
    io.vertx.core.net.TrustOptions clone() -> clone
    43:43:javax.net.ssl.TrustManagerFactory getTrustManagerFactory(io.vertx.core.Vertx) -> getTrustManagerFactory
    59:60:java.util.function.Function trustManagerMapper(io.vertx.core.Vertx) -> trustManagerMapper
io.vertx.core.net.impl.AsyncResolveConnectHelper -> io.vertx.core.net.impl.AsyncResolveConnectHelper:
    java.util.List handlers -> handlers
    io.netty.channel.ChannelFuture future -> future
    io.vertx.core.AsyncResult result -> result
    30:32:void <init>() -> <init>
    37:46:void addListener(io.vertx.core.Handler) -> addListener
    49:58:void handle(io.netty.channel.ChannelFuture,io.vertx.core.AsyncResult) -> handle
    61:64:void checkPort(int) -> checkPort
    68:99:io.vertx.core.net.impl.AsyncResolveConnectHelper doBind(io.vertx.core.impl.VertxInternal,io.vertx.core.net.SocketAddress,io.netty.bootstrap.ServerBootstrap) -> doBind
    83:97:void lambda$doBind$3(io.vertx.core.net.SocketAddress,io.netty.bootstrap.ServerBootstrap,io.vertx.core.net.impl.AsyncResolveConnectHelper,io.vertx.core.AsyncResult) -> lambda$doBind$3
    88:93:void lambda$null$2(io.vertx.core.net.impl.AsyncResolveConnectHelper,io.netty.channel.ChannelFuture,io.netty.util.concurrent.Future) -> lambda$null$2
    74:79:void lambda$doBind$1(io.vertx.core.net.impl.AsyncResolveConnectHelper,io.netty.channel.ChannelFuture,io.netty.util.concurrent.Future) -> lambda$doBind$1
    39:39:void lambda$addListener$0(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$addListener$0
io.vertx.core.net.impl.ChannelProvider -> io.vertx.core.net.impl.ChannelProvider:
    io.vertx.core.net.impl.ChannelProvider INSTANCE -> INSTANCE
    37:38:void <init>() -> <init>
    42:57:void connect(io.vertx.core.impl.VertxInternal,io.netty.bootstrap.Bootstrap,io.vertx.core.net.ProxyOptions,io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.Handler) -> connect
    51:56:void lambda$connect$0(io.vertx.core.Handler,io.netty.channel.ChannelFuture,io.netty.util.concurrent.Future) -> lambda$connect$0
    35:35:void <clinit>() -> <clinit>
io.vertx.core.net.impl.ChannelProvider$1 -> io.vertx.core.net.impl.ChannelProvider$1:
    io.vertx.core.Handler val$channelInitializer -> val$channelInitializer
    io.vertx.core.net.impl.ChannelProvider this$0 -> this$0
    43:43:void <init>(io.vertx.core.net.impl.ChannelProvider,io.vertx.core.Handler) -> <init>
    46:47:void initChannel(io.netty.channel.Channel) -> initChannel
io.vertx.core.net.impl.ConnectionBase -> io.vertx.core.net.impl.ConnectionBase:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.netty.channel.ChannelHandlerContext chctx -> chctx
    io.vertx.core.impl.ContextImpl context -> context
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler closeHandler -> closeHandler
    boolean read -> read
    boolean needsFlush -> needsFlush
    int writeInProgress -> writeInProgress
    java.lang.Object metric -> metric
    boolean $assertionsDisabled -> $assertionsDisabled
    57:61:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.ChannelHandlerContext,io.vertx.core.impl.ContextImpl) -> <init>
    70:70:java.lang.Object encode(java.lang.Object) -> encode
    74:76:void startRead() -> startRead
    79:86:void endReadAndFlush() -> endReadAndFlush
    89:97:void write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    104:109:void writeToChannel(java.lang.Object,io.netty.channel.ChannelPromise) -> writeToChannel
    112:119:void queueForWrite(java.lang.Object,io.netty.channel.ChannelPromise) -> queueForWrite
    122:123:void writeToChannel(java.lang.Object) -> writeToChannel
    127:127:boolean isNotWritable() -> isNotWritable
    135:137:void close() -> close
    140:141:io.vertx.core.net.impl.ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    145:146:io.vertx.core.net.impl.ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    150:150:io.vertx.core.Handler exceptionHandler() -> exceptionHandler
    154:155:void doPause() -> doPause
    158:159:void doResume() -> doResume
    162:164:void doSetWriteQueueMaxSize(int) -> doSetWriteQueueMaxSize
    168:171:void checkContext() -> checkContext
    177:177:io.netty.channel.Channel channel() -> channel
    181:181:io.vertx.core.impl.ContextImpl getContext() -> getContext
    185:186:void metric(java.lang.Object) -> metric
    189:189:java.lang.Object metric() -> metric
    io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    195:204:void handleException(java.lang.Throwable) -> handleException
    207:214:void handleClosed() -> handleClosed
    void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    219:232:void addFuture(io.vertx.core.Handler,io.netty.channel.ChannelFuture) -> addFuture
    235:235:boolean supportsFileRegion() -> supportsFileRegion
    239:243:void reportBytesRead(long) -> reportBytesRead
    246:250:void reportBytesWritten(long) -> reportBytesWritten
    253:253:boolean isSSL() -> isSSL
    258:272:io.netty.channel.ChannelFuture sendFile(java.io.RandomAccessFile,long,long) -> sendFile
    276:276:boolean isSsl() -> isSsl
    280:286:javax.net.ssl.SSLSession sslSession() -> sslSession
    291:297:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    302:305:java.lang.String indicatedServerName() -> indicatedServerName
    310:310:io.netty.channel.ChannelPromise channelFuture() -> channelFuture
    314:317:java.lang.String remoteName() -> remoteName
    321:323:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    327:329:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    268:268:void lambda$sendFile$3(java.io.RandomAccessFile,io.netty.util.concurrent.Future) -> lambda$sendFile$3
    220:220:void lambda$addFuture$2(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$addFuture$2
    221:230:void lambda$null$1(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$null$1
    114:118:void lambda$queueForWrite$0(java.lang.Object,io.netty.channel.ChannelPromise,java.lang.Void) -> lambda$queueForWrite$0
    43:45:void <clinit>() -> <clinit>
io.vertx.core.net.impl.HandlerHolder -> io.vertx.core.net.impl.HandlerHolder:
    io.vertx.core.impl.ContextImpl context -> context
    java.lang.Object handler -> handler
    23:26:void <init>(io.vertx.core.impl.ContextImpl,java.lang.Object) -> <init>
    30:38:boolean equals(java.lang.Object) -> equals
    43:45:int hashCode() -> hashCode
io.vertx.core.net.impl.HandlerManager -> io.vertx.core.net.impl.HandlerManager:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.net.impl.VertxEventLoopGroup availableWorkers -> availableWorkers
    java.util.concurrent.ConcurrentMap handlerMap -> handlerMap
    boolean hasHandlers -> hasHandlers
    34:42:void <init>(io.vertx.core.net.impl.VertxEventLoopGroup) -> <init>
    45:45:boolean hasHandlers() -> hasHandlers
    49:50:io.vertx.core.net.impl.HandlerHolder chooseHandler(io.netty.channel.EventLoop) -> chooseHandler
    54:63:void addHandler(java.lang.Object,io.vertx.core.impl.ContextImpl) -> addHandler
    66:79:void removeHandler(java.lang.Object,io.vertx.core.impl.ContextImpl) -> removeHandler
    31:31:void <clinit>() -> <clinit>
io.vertx.core.net.impl.HandlerManager$1 -> io.vertx.core.net.impl.HandlerManager$1:
io.vertx.core.net.impl.HandlerManager$Handlers -> io.vertx.core.net.impl.HandlerManager$Handlers:
    int pos -> pos
    java.util.List list -> list
    81:83:void <init>() -> <init>
    85:88:io.vertx.core.net.impl.HandlerHolder chooseHandler() -> chooseHandler
    92:93:void addHandler(io.vertx.core.net.impl.HandlerHolder) -> addHandler
    96:100:boolean removeHandler(io.vertx.core.net.impl.HandlerHolder) -> removeHandler
    105:105:boolean isEmpty() -> isEmpty
    109:112:void checkPos() -> checkPos
    81:81:void <init>(io.vertx.core.net.impl.HandlerManager$1) -> <init>
io.vertx.core.net.impl.KeyStoreHelper -> io.vertx.core.net.impl.KeyStoreHelper:
    java.util.regex.Pattern BEGIN_PATTERN -> BEGIN_PATTERN
    java.util.regex.Pattern END_PATTERN -> END_PATTERN
    java.lang.String password -> password
    java.security.KeyStore store -> store
    java.util.Map wildcardMgrMap -> wildcardMgrMap
    java.util.Map mgrMap -> mgrMap
    java.util.Map trustMgrMap -> trustMgrMap
    73:109:io.vertx.core.net.impl.KeyStoreHelper create(io.vertx.core.impl.VertxInternal,io.vertx.core.net.KeyCertOptions) -> create
    114:126:io.vertx.core.net.impl.KeyStoreHelper create(io.vertx.core.impl.VertxInternal,io.vertx.core.net.TrustOptions) -> create
    132:218:void <init>(java.security.KeyStore,java.lang.String) -> <init>
    221:223:javax.net.ssl.KeyManagerFactory getKeyMgrFactory() -> getKeyMgrFactory
    227:235:javax.net.ssl.X509KeyManager getKeyMgr(java.lang.String) -> getKeyMgr
    243:244:javax.net.ssl.TrustManager[] getTrustMgr(java.lang.String) -> getTrustMgr
    248:250:javax.net.ssl.TrustManagerFactory getTrustMgrFactory(io.vertx.core.impl.VertxInternal) -> getTrustMgrFactory
    265:278:java.security.KeyStore loadJKSOrPKCS12(java.lang.String,java.lang.String,java.util.function.Supplier) -> loadJKSOrPKCS12
    282:297:java.security.KeyStore loadKeyCert(java.util.List,java.util.List) -> loadKeyCert
    301:322:java.security.PrivateKey loadPrivateKey(io.vertx.core.buffer.Buffer) -> loadPrivateKey
    326:335:java.security.KeyStore loadCA(java.util.stream.Stream) -> loadCA
    339:367:java.util.List loadPems(io.vertx.core.buffer.Buffer,java.util.function.BiFunction) -> loadPems
    371:390:java.security.cert.X509Certificate[] loadCerts(io.vertx.core.buffer.Buffer) -> loadCerts
    377:384:java.util.Collection lambda$loadCerts$5(java.security.cert.CertificateFactory,java.lang.String,byte[]) -> lambda$loadCerts$5
    307:316:java.util.Collection lambda$loadPrivateKey$4(java.security.KeyFactory,java.lang.String,byte[]) -> lambda$loadPrivateKey$4
    178:178:java.security.cert.X509Certificate lambda$new$3(java.security.cert.Certificate) -> lambda$new$3
    121:121:java.lang.String lambda$create$2(io.vertx.core.impl.VertxInternal,java.lang.String) -> lambda$create$2
    88:88:io.vertx.core.buffer.Buffer lambda$create$1(io.vertx.core.impl.VertxInternal,io.vertx.core.net.PfxOptions) -> lambda$create$1
    77:77:io.vertx.core.buffer.Buffer lambda$create$0(io.vertx.core.impl.VertxInternal,io.vertx.core.net.JksOptions) -> lambda$create$0
    69:70:void <clinit>() -> <clinit>
io.vertx.core.net.impl.KeyStoreHelper$1 -> io.vertx.core.net.impl.KeyStoreHelper$1:
    java.util.List val$chain -> val$chain
    java.security.PrivateKey val$key -> val$key
    io.vertx.core.net.impl.KeyStoreHelper this$0 -> this$0
    180:180:void <init>(io.vertx.core.net.impl.KeyStoreHelper,java.util.List,java.security.PrivateKey) -> <init>
    183:183:java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[]) -> getClientAliases
    187:187:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket) -> chooseClientAlias
    191:191:java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[]) -> getServerAliases
    195:195:java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket) -> chooseServerAlias
    199:199:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String) -> getCertificateChain
    203:203:java.security.PrivateKey getPrivateKey(java.lang.String) -> getPrivateKey
io.vertx.core.net.impl.NetClientImpl -> io.vertx.core.net.impl.NetClientImpl:
    io.vertx.core.logging.Logger log -> log
    int idleTimeout -> idleTimeout
    boolean logEnabled -> logEnabled
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.net.NetClientOptions options -> options
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    java.util.Map socketMap -> socketMap
    io.vertx.core.Closeable closeHook -> closeHook
    io.vertx.core.impl.ContextImpl creatingContext -> creatingContext
    io.vertx.core.spi.metrics.TCPMetrics metrics -> metrics
    boolean closed -> closed
    58:91:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.NetClientOptions,boolean) -> <init>
    94:104:void initChannel(io.netty.channel.ChannelPipeline) -> initChannel
    107:108:io.vertx.core.net.NetClient connect(int,java.lang.String,io.vertx.core.Handler) -> connect
    113:114:io.vertx.core.net.NetClient connect(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> connect
    118:130:void close() -> close
    143:146:void checkClosed() -> checkClosed
    149:150:void applyConnectionOptions(io.netty.bootstrap.Bootstrap) -> applyConnectionOptions
    165:166:void doConnect(io.vertx.core.net.SocketAddress,java.lang.String,io.vertx.core.Handler) -> doConnect
    170:231:void doConnect(io.vertx.core.net.SocketAddress,java.lang.String,io.vertx.core.Handler,int) -> doConnect
    236:258:void connected(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.net.SocketAddress) -> connected
    261:265:void failed(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,java.lang.Throwable,io.vertx.core.Handler) -> failed
    268:269:void doFailed(io.vertx.core.Handler,java.lang.Throwable) -> doFailed
    276:278:void finalize() -> finalize
    264:264:void lambda$failed$12(io.vertx.core.Handler,java.lang.Throwable) -> lambda$failed$12
    255:256:void lambda$connected$11(io.netty.channel.Channel,io.vertx.core.net.impl.NetSocketImpl) -> lambda$connected$11
    246:253:void lambda$connected$10(io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.net.impl.NetSocketImpl) -> lambda$connected$10
    248:252:void lambda$null$9(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler) -> lambda$null$9
    239:239:io.vertx.core.net.impl.NetSocketImpl lambda$connected$8(io.vertx.core.net.SocketAddress,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext) -> lambda$connected$8
    195:228:void lambda$doConnect$7(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.net.SocketAddress,int,java.lang.String,io.vertx.core.AsyncResult) -> lambda$doConnect$7
    218:223:void lambda$null$6(io.vertx.core.net.SocketAddress,java.lang.String,io.vertx.core.Handler,int) -> lambda$null$6
    221:221:void lambda$null$5(io.vertx.core.net.SocketAddress,java.lang.String,io.vertx.core.Handler,int,java.lang.Long) -> lambda$null$5
    205:210:void lambda$null$4(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.net.SocketAddress,io.netty.util.concurrent.Future) -> lambda$null$4
    188:192:void lambda$doConnect$3(io.vertx.core.net.SocketAddress,java.lang.String,io.netty.channel.Channel) -> lambda$doConnect$3
    113:113:void lambda$connect$2(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$connect$2
    113:113:io.vertx.core.net.NetSocket lambda$null$1(io.vertx.core.net.NetSocket) -> lambda$null$1
    73:75:void lambda$new$0(io.vertx.core.Handler) -> lambda$new$0
    51:51:void <clinit>() -> <clinit>
io.vertx.core.net.impl.NetClientImpl$1 -> io.vertx.core.net.impl.NetClientImpl$1:
    io.vertx.core.net.impl.NetClientImpl this$0 -> this$0
    239:239:void <init>(io.vertx.core.net.impl.NetClientImpl,java.util.function.Function) -> <init>
    242:243:void handleMessage(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    239:239:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
io.vertx.core.net.impl.NetServerImpl -> io.vertx.core.net.impl.NetServerImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.net.NetServerOptions options -> options
    io.vertx.core.impl.ContextImpl creatingContext -> creatingContext
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    boolean logEnabled -> logEnabled
    java.util.Map socketMap -> socketMap
    io.vertx.core.net.impl.VertxEventLoopGroup availableWorkers -> availableWorkers
    io.vertx.core.net.impl.HandlerManager handlerManager -> handlerManager
    io.vertx.core.net.impl.NetServerImpl$NetSocketStream connectStream -> connectStream
    io.netty.channel.group.ChannelGroup serverChannelGroup -> serverChannelGroup
    boolean paused -> paused
    boolean listening -> listening
    io.vertx.core.Handler registeredHandler -> registeredHandler
    io.vertx.core.net.impl.ServerID id -> id
    io.vertx.core.net.impl.NetServerImpl actualServer -> actualServer
    io.vertx.core.net.impl.AsyncResolveConnectHelper bindFuture -> bindFuture
    int actualPort -> actualPort
    io.vertx.core.impl.ContextImpl listenContext -> listenContext
    io.vertx.core.spi.metrics.TCPMetrics metrics -> metrics
    io.vertx.core.Handler handler -> handler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    66:96:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.NetServerOptions) -> <init>
    99:100:void pauseAccepting() -> pauseAccepting
    103:104:void resumeAccepting() -> resumeAccepting
    107:107:boolean isPaused() -> isPaused
    111:111:boolean isListening() -> isListening
    121:125:io.vertx.core.net.NetServer connectHandler(io.vertx.core.Handler) -> connectHandler
    138:148:void initChannel(io.netty.channel.ChannelPipeline) -> initChannel
    151:286:void listen(io.vertx.core.Handler,io.vertx.core.net.SocketAddress,io.vertx.core.Handler) -> listen
    290:291:void close() -> close
    315:320:io.vertx.core.net.NetServer listen(io.vertx.core.net.SocketAddress,io.vertx.core.Handler) -> listen
    331:331:io.vertx.core.net.NetServer listen(int,java.lang.String,io.vertx.core.Handler) -> listen
    336:336:io.vertx.core.net.NetServer listen(io.vertx.core.Handler) -> listen
    346:394:void close(io.vertx.core.Handler) -> close
    397:397:int actualPort() -> actualPort
    411:434:void actualClose(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler) -> actualClose
    437:459:void connected(io.vertx.core.net.impl.HandlerHolder,io.netty.channel.Channel) -> connected
    462:466:void executeCloseDone(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Exception) -> executeCloseDone
    474:475:void applyConnectionOptions(io.netty.bootstrap.ServerBootstrap) -> applyConnectionOptions
    482:484:void finalize() -> finalize
    464:464:void lambda$executeCloseDone$12(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void) -> lambda$executeCloseDone$12
    454:458:void lambda$connected$11(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder) -> lambda$connected$11
    450:450:void lambda$connected$10(io.netty.channel.Channel,io.vertx.core.net.impl.NetSocketImpl) -> lambda$connected$10
    449:449:void lambda$connected$9(io.netty.channel.Channel,io.vertx.core.net.impl.NetSocketImpl) -> lambda$connected$9
    443:443:io.vertx.core.net.impl.NetSocketImpl lambda$connected$8(io.vertx.core.net.impl.HandlerHolder,io.netty.channel.ChannelHandlerContext) -> lambda$connected$8
    428:432:void lambda$actualClose$7(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.channel.group.ChannelGroupFuture,io.netty.util.concurrent.Future) -> lambda$actualClose$7
    390:391:void lambda$close$6(io.vertx.core.Handler,java.lang.Void) -> lambda$close$6
    354:360:void lambda$close$5(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$close$5
    316:319:void lambda$listen$4(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$listen$4
    267:284:void lambda$listen$3(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$listen$3
    278:278:void lambda$null$2(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void) -> lambda$null$2
    244:244:void lambda$listen$1(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void) -> lambda$listen$1
    222:239:void lambda$listen$0(java.lang.String,io.vertx.core.AsyncResult) -> lambda$listen$0
    57:57:io.vertx.core.net.impl.HandlerManager access$100(io.vertx.core.net.impl.NetServerImpl) -> access$100
    57:57:void access$200(io.vertx.core.net.impl.NetServerImpl,io.vertx.core.net.impl.HandlerHolder,io.netty.channel.Channel) -> access$200
    57:57:io.vertx.core.logging.Logger access$300() -> access$300
    57:57:io.vertx.core.Handler access$402(io.vertx.core.net.impl.NetServerImpl,io.vertx.core.Handler) -> access$402
    59:59:void <clinit>() -> <clinit>
io.vertx.core.net.impl.NetServerImpl$1 -> io.vertx.core.net.impl.NetServerImpl$1:
    io.vertx.core.net.impl.NetServerImpl this$0 -> this$0
    174:174:void <init>(io.vertx.core.net.impl.NetServerImpl) -> <init>
    177:212:void initChannel(io.netty.channel.Channel) -> initChannel
    195:207:void lambda$initChannel$1(io.vertx.core.net.impl.HandlerHolder,io.netty.channel.Channel,io.netty.util.concurrent.Future) -> lambda$initChannel$1
    201:202:void lambda$null$0(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$null$0
io.vertx.core.net.impl.NetServerImpl$2 -> io.vertx.core.net.impl.NetServerImpl$2:
    io.vertx.core.net.impl.NetServerImpl this$0 -> this$0
    443:443:void <init>(io.vertx.core.net.impl.NetServerImpl,java.util.function.Function) -> <init>
    446:447:void handleMessage(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    443:443:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
io.vertx.core.net.impl.NetServerImpl$Handlers -> io.vertx.core.net.impl.NetServerImpl$Handlers:
    io.vertx.core.Handler connectionHandler -> connectionHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    529:532:void <init>(io.vertx.core.Handler,io.vertx.core.Handler) -> <init>
    534:542:boolean equals(java.lang.Object) -> equals
    545:552:int hashCode() -> hashCode
io.vertx.core.net.impl.NetServerImpl$NetSocketStream -> io.vertx.core.net.impl.NetServerImpl$NetSocketStream:
    io.vertx.core.net.impl.NetServerImpl this$0 -> this$0
    491:491:void <init>(io.vertx.core.net.impl.NetServerImpl) -> <init>
    495:496:io.vertx.core.net.impl.NetServerImpl$NetSocketStream handler(io.vertx.core.Handler) -> handler
    501:502:io.vertx.core.net.impl.NetServerImpl$NetSocketStream pause() -> pause
    507:508:io.vertx.core.net.impl.NetServerImpl$NetSocketStream resume() -> resume
    513:516:io.vertx.core.net.impl.NetServerImpl$NetSocketStream endHandler(io.vertx.core.Handler) -> endHandler
    522:522:io.vertx.core.net.impl.NetServerImpl$NetSocketStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    491:491:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    491:491:io.vertx.core.streams.ReadStream resume() -> resume
    491:491:io.vertx.core.streams.ReadStream pause() -> pause
    491:491:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    491:491:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    491:491:void <init>(io.vertx.core.net.impl.NetServerImpl,io.vertx.core.net.impl.NetServerImpl$1) -> <init>
io.vertx.core.net.impl.NetSocketImpl -> io.vertx.core.net.impl.NetSocketImpl:
    io.vertx.core.Handler NULL_MSG_HANDLER -> NULL_MSG_HANDLER
    io.vertx.core.logging.Logger log -> log
    java.lang.String writeHandlerID -> writeHandlerID
    io.vertx.core.eventbus.MessageConsumer registration -> registration
    io.vertx.core.net.impl.SSLHelper helper -> helper
    io.vertx.core.net.SocketAddress remoteAddress -> remoteAddress
    io.vertx.core.spi.metrics.TCPMetrics metrics -> metrics
    io.vertx.core.Handler messageHandler -> messageHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.Handler drainHandler -> drainHandler
    io.vertx.core.buffer.Buffer pendingData -> pendingData
    boolean paused -> paused
    80:81:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.ChannelHandlerContext,io.vertx.core.impl.ContextImpl,io.vertx.core.net.impl.SSLHelper,io.vertx.core.spi.metrics.TCPMetrics) -> <init>
    72:92:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.ChannelHandlerContext,io.vertx.core.net.SocketAddress,io.vertx.core.impl.ContextImpl,io.vertx.core.net.impl.SSLHelper,io.vertx.core.spi.metrics.TCPMetrics) -> <init>
    96:96:io.netty.channel.ChannelHandlerContext channelHandlerContext() -> channelHandlerContext
    101:101:io.vertx.core.spi.metrics.TCPMetrics metrics() -> metrics
    134:136:io.vertx.core.net.NetSocket write(io.vertx.core.buffer.Buffer) -> write
    157:162:io.vertx.core.net.NetSocket handler(io.vertx.core.Handler) -> handler
    167:172:io.vertx.core.impl.NetSocketInternal messageHandler(io.vertx.core.Handler) -> messageHandler
    177:181:io.vertx.core.net.NetSocket pause() -> pause
    186:194:io.vertx.core.net.NetSocket resume() -> resume
    205:205:boolean writeQueueFull() -> writeQueueFull
    210:211:io.vertx.core.net.NetSocket endHandler(io.vertx.core.Handler) -> endHandler
    265:265:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    269:269:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    274:274:io.vertx.core.net.impl.NetSocketImpl exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    279:279:io.vertx.core.net.impl.NetSocketImpl closeHandler(io.vertx.core.Handler) -> closeHandler
    285:287:void close() -> close
    327:329:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    338:346:void handleClosed() -> handleClosed
    349:353:void handleMessageReceived(java.lang.Object) -> handleMessageReceived
    390:392:void write(io.netty.buffer.ByteBuf) -> write
    395:400:void callDrainHandler() -> callDrainHandler
    56:56:io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    56:56:io.vertx.core.net.impl.ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    56:56:io.vertx.core.net.impl.ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    56:56:io.vertx.core.net.NetSocket closeHandler(io.vertx.core.Handler) -> closeHandler
    56:56:io.vertx.core.net.NetSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    56:56:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    56:56:io.vertx.core.streams.ReadStream resume() -> resume
    56:56:io.vertx.core.streams.ReadStream pause() -> pause
    56:56:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    56:56:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    190:190:void lambda$resume$2(java.lang.Void) -> lambda$resume$2
    90:90:void lambda$new$1(io.vertx.core.eventbus.Message) -> lambda$new$1
    59:63:void lambda$static$0(java.lang.Object) -> lambda$static$0
    56:56:boolean access$000(io.vertx.core.net.impl.NetSocketImpl) -> access$000
    56:56:io.vertx.core.buffer.Buffer access$100(io.vertx.core.net.impl.NetSocketImpl) -> access$100
    56:56:io.vertx.core.buffer.Buffer access$102(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.buffer.Buffer) -> access$102
    58:65:void <clinit>() -> <clinit>
io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler -> io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:
    io.netty.buffer.ByteBufAllocator allocator -> allocator
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.net.impl.NetSocketImpl this$0 -> this$0
    360:363:void <init>(io.vertx.core.net.impl.NetSocketImpl,io.netty.buffer.ByteBufAllocator,io.vertx.core.Handler) -> <init>
    367:386:void handle(java.lang.Object) -> handle
io.vertx.core.net.impl.PartialPooledByteBufAllocator -> io.vertx.core.net.impl.PartialPooledByteBufAllocator:
    io.netty.buffer.ByteBufAllocator POOLED -> POOLED
    io.netty.buffer.ByteBufAllocator UNPOOLED -> UNPOOLED
    io.vertx.core.net.impl.PartialPooledByteBufAllocator INSTANCE -> INSTANCE
    48:48:void <init>() -> <init>
    52:52:io.netty.buffer.ByteBuf buffer() -> buffer
    57:57:io.netty.buffer.ByteBuf buffer(int) -> buffer
    62:62:io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    67:67:io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    72:72:io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    82:82:io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    87:87:io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    92:92:io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    97:97:io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    102:102:io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    107:107:io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    117:117:io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    122:122:io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    127:127:io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    132:132:io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    137:137:io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    142:142:boolean isDirectBufferPooled() -> isDirectBufferPooled
    147:147:int calculateNewCapacity(int,int) -> calculateNewCapacity
    154:154:io.netty.channel.ChannelHandlerContext forceDirectAllocator(io.netty.channel.ChannelHandlerContext) -> forceDirectAllocator
    43:46:void <clinit>() -> <clinit>
io.vertx.core.net.impl.PartialPooledByteBufAllocator$ForceDirectPoooledByteBufAllocator -> io.vertx.core.net.impl.PartialPooledByteBufAllocator$ForceDirectPoooledByteBufAllocator:
    io.netty.buffer.ByteBufAllocator INSTANCE -> INSTANCE
    383:383:void <init>() -> <init>
    388:388:io.netty.buffer.ByteBuf buffer() -> buffer
    393:393:io.netty.buffer.ByteBuf buffer(int) -> buffer
    398:398:io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    403:403:io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    408:408:io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    418:418:io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    423:423:io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    428:428:io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    433:433:io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    438:438:io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    443:443:io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    453:453:io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    458:458:io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    463:463:io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    468:468:io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    473:473:io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    478:478:boolean isDirectBufferPooled() -> isDirectBufferPooled
    484:484:int calculateNewCapacity(int,int) -> calculateNewCapacity
    384:384:void <clinit>() -> <clinit>
io.vertx.core.net.impl.PartialPooledByteBufAllocator$PooledChannelHandlerContext -> io.vertx.core.net.impl.PartialPooledByteBufAllocator$PooledChannelHandlerContext:
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    159:161:void <init>(io.netty.channel.ChannelHandlerContext) -> <init>
    165:165:boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
    170:170:io.netty.channel.Channel channel() -> channel
    175:175:io.netty.util.concurrent.EventExecutor executor() -> executor
    180:180:java.lang.String name() -> name
    185:185:io.netty.channel.ChannelHandler handler() -> handler
    190:190:boolean isRemoved() -> isRemoved
    195:196:io.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    202:203:io.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    208:209:io.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    214:215:io.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    220:221:io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    226:227:io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    232:233:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    238:239:io.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    244:245:io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    250:250:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    255:255:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    260:260:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    265:265:io.netty.channel.ChannelFuture disconnect() -> disconnect
    270:270:io.netty.channel.ChannelFuture close() -> close
    276:276:io.netty.channel.ChannelFuture deregister() -> deregister
    281:281:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    286:286:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    291:291:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    296:296:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    301:301:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    307:307:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    312:313:io.netty.channel.ChannelHandlerContext read() -> read
    318:318:io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    323:323:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    328:329:io.netty.channel.ChannelHandlerContext flush() -> flush
    334:334:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    339:339:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    344:344:io.netty.channel.ChannelPipeline pipeline() -> pipeline
    349:349:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    354:354:io.netty.channel.ChannelPromise newPromise() -> newPromise
    359:359:io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    364:364:io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    369:369:io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    374:374:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    379:379:io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    157:157:io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    157:157:io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    157:157:io.netty.channel.ChannelOutboundInvoker flush() -> flush
    157:157:io.netty.channel.ChannelOutboundInvoker read() -> read
io.vertx.core.net.impl.ProxyChannelProvider -> io.vertx.core.net.impl.ProxyChannelProvider:
    io.vertx.core.net.impl.ChannelProvider INSTANCE -> INSTANCE
    47:48:void <init>() -> <init>
    58:126:void connect(io.vertx.core.impl.VertxInternal,io.netty.bootstrap.Bootstrap,io.vertx.core.net.ProxyOptions,io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.Handler) -> connect
    65:125:void lambda$connect$1(int,io.vertx.core.net.ProxyType,java.lang.String,java.lang.String,io.netty.bootstrap.Bootstrap,io.vertx.core.impl.VertxInternal,io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$connect$1
    118:121:void lambda$null$0(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$null$0
    45:45:void <clinit>() -> <clinit>
io.vertx.core.net.impl.ProxyChannelProvider$1 -> io.vertx.core.net.impl.ProxyChannelProvider$1:
    io.netty.handler.proxy.ProxyHandler val$proxy -> val$proxy
    io.vertx.core.Handler val$channelInitializer -> val$channelInitializer
    io.vertx.core.Handler val$channelHandler -> val$channelHandler
    io.vertx.core.net.impl.ProxyChannelProvider this$0 -> this$0
    90:90:void <init>(io.vertx.core.net.impl.ProxyChannelProvider,io.netty.handler.proxy.ProxyHandler,io.vertx.core.Handler,io.vertx.core.Handler) -> <init>
    93:113:void initChannel(io.netty.channel.Channel) -> initChannel
io.vertx.core.net.impl.ProxyChannelProvider$1$1 -> io.vertx.core.net.impl.ProxyChannelProvider$1$1:
    io.netty.channel.ChannelPipeline val$pipeline -> val$pipeline
    io.netty.channel.Channel val$ch -> val$ch
    io.vertx.core.net.impl.ProxyChannelProvider$1 this$1 -> this$1
    95:95:void <init>(io.vertx.core.net.impl.ProxyChannelProvider$1,io.netty.channel.ChannelPipeline,io.netty.channel.Channel) -> <init>
    98:105:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    110:111:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
io.vertx.core.net.impl.ProxyChannelProvider$2 -> io.vertx.core.net.impl.ProxyChannelProvider$2:
    int[] $SwitchMap$io$vertx$core$net$ProxyType -> $SwitchMap$io$vertx$core$net$ProxyType
    70:70:void <clinit>() -> <clinit>
io.vertx.core.net.impl.SSLHelper -> io.vertx.core.net.impl.SSLHelper:
    java.util.Map PROTOCOL_NAME_MAPPING -> PROTOCOL_NAME_MAPPING
    java.util.List DEFAULT_JDK_CIPHER_SUITE -> DEFAULT_JDK_CIPHER_SUITE
    io.vertx.core.logging.Logger log -> log
    boolean ssl -> ssl
    boolean sni -> sni
    io.vertx.core.net.KeyCertOptions keyCertOptions -> keyCertOptions
    io.vertx.core.net.TrustOptions trustOptions -> trustOptions
    boolean trustAll -> trustAll
    java.util.ArrayList crlPaths -> crlPaths
    java.util.ArrayList crlValues -> crlValues
    io.vertx.core.http.ClientAuth clientAuth -> clientAuth
    java.util.Set enabledCipherSuites -> enabledCipherSuites
    boolean openSsl -> openSsl
    boolean client -> client
    boolean useAlpn -> useAlpn
    java.util.List applicationProtocols -> applicationProtocols
    java.util.Set enabledProtocols -> enabledProtocols
    java.lang.String endpointIdentificationAlgorithm -> endpointIdentificationAlgorithm
    io.netty.handler.ssl.SslContext sslContext -> sslContext
    java.util.Map sslContextMap -> sslContextMap
    boolean openSslSessionCacheEnabled -> openSslSessionCacheEnabled
    60:95:io.vertx.core.net.SSLEngineOptions resolveEngineOptions(io.vertx.core.net.TCPSSLOptions) -> resolveEngineOptions
    129:160:void <init>(io.vertx.core.http.HttpClientOptions,io.vertx.core.net.KeyCertOptions,io.vertx.core.net.TrustOptions) -> <init>
    129:177:void <init>(io.vertx.core.http.HttpServerOptions,io.vertx.core.net.KeyCertOptions,io.vertx.core.net.TrustOptions) -> <init>
    129:194:void <init>(io.vertx.core.net.NetClientOptions,io.vertx.core.net.KeyCertOptions,io.vertx.core.net.TrustOptions) -> <init>
    129:211:void <init>(io.vertx.core.net.NetServerOptions,io.vertx.core.net.KeyCertOptions,io.vertx.core.net.TrustOptions) -> <init>
    214:214:boolean isSSL() -> isSSL
    222:222:io.vertx.core.http.ClientAuth getClientAuth() -> getClientAuth
    230:231:io.vertx.core.net.impl.SSLHelper setApplicationProtocols(java.util.List) -> setApplicationProtocols
    245:297:io.netty.handler.ssl.SslContext createContext(io.vertx.core.impl.VertxInternal,javax.net.ssl.X509KeyManager,javax.net.ssl.TrustManagerFactory) -> createContext
    302:302:javax.net.ssl.KeyManagerFactory getKeyMgrFactory(io.vertx.core.impl.VertxInternal) -> getKeyMgrFactory
    306:344:javax.net.ssl.TrustManagerFactory getTrustMgrFactory(io.vertx.core.impl.VertxInternal,java.lang.String) -> getTrustMgrFactory
    352:384:javax.net.ssl.TrustManager[] createUntrustRevokedCertTrustManager(javax.net.ssl.TrustManager[],java.util.ArrayList) -> createUntrustRevokedCertTrustManager
    389:389:javax.net.ssl.TrustManager createTrustAllTrustManager() -> createTrustAllTrustManager
    406:442:void configureEngine(javax.net.ssl.SSLEngine,java.lang.String) -> configureEngine
    449:474:io.netty.handler.ssl.SslContext getContext(io.vertx.core.impl.VertxInternal,java.lang.String) -> getContext
    481:484:void validate(io.vertx.core.impl.VertxInternal) -> validate
    487:489:javax.net.ssl.SSLEngine createEngine(io.netty.handler.ssl.SslContext) -> createEngine
    493:501:javax.net.ssl.SSLEngine createEngine(io.vertx.core.impl.VertxInternal,io.vertx.core.net.SocketAddress,java.lang.String) -> createEngine
    505:507:javax.net.ssl.SSLEngine createEngine(io.vertx.core.impl.VertxInternal,java.lang.String,int,java.lang.String) -> createEngine
    517:519:javax.net.ssl.SSLEngine createEngine(io.vertx.core.impl.VertxInternal) -> createEngine
    472:472:io.netty.handler.ssl.SslContext lambda$getContext$1(io.vertx.core.impl.VertxInternal,javax.net.ssl.X509KeyManager,javax.net.ssl.TrustManagerFactory,java.security.cert.Certificate) -> lambda$getContext$1
    334:334:java.lang.String lambda$getTrustMgrFactory$0(io.vertx.core.impl.VertxInternal,java.lang.String) -> lambda$getTrustMgrFactory$0
    98:120:void <clinit>() -> <clinit>
io.vertx.core.net.impl.SSLHelper$1 -> io.vertx.core.net.impl.SSLHelper$1:
    javax.net.ssl.X509TrustManager val$x509TrustManager -> val$x509TrustManager
    java.util.ArrayList val$crls -> val$crls
    357:357:void <init>(javax.net.ssl.X509TrustManager,java.util.ArrayList) -> <init>
    360:362:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    365:367:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    369:376:void checkRevoked(java.security.cert.X509Certificate[]) -> checkRevoked
    379:379:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
io.vertx.core.net.impl.SSLHelper$2 -> io.vertx.core.net.impl.SSLHelper$2:
    389:389:void <init>() -> <init>
    392:392:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    396:396:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    400:400:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
io.vertx.core.net.impl.SSLHelper$3 -> io.vertx.core.net.impl.SSLHelper$3:
    int[] $SwitchMap$io$vertx$core$http$ClientAuth -> $SwitchMap$io$vertx$core$http$ClientAuth
    418:418:void <clinit>() -> <clinit>
io.vertx.core.net.impl.ServerID -> io.vertx.core.net.impl.ServerID:
    int port -> port
    java.lang.String host -> host
    24:27:void <init>(int,java.lang.String) -> <init>
    29:30:void <init>() -> <init>
    34:42:boolean equals(java.lang.Object) -> equals
    47:49:int hashCode() -> hashCode
    53:53:java.lang.String toString() -> toString
io.vertx.core.net.impl.SocketAddressImpl -> io.vertx.core.net.impl.SocketAddressImpl:
    java.lang.String hostAddress -> hostAddress
    int port -> port
    java.lang.String path -> path
    30:31:void <init>(java.net.InetSocketAddress) -> <init>
    33:40:void <init>(int,java.lang.String) -> <init>
    50:50:java.lang.String path() -> path
    54:54:java.lang.String host() -> host
    58:58:int port() -> port
    62:65:java.lang.String toString() -> toString
    71:80:boolean equals(java.lang.Object) -> equals
    85:88:int hashCode() -> hashCode
io.vertx.core.net.impl.VertxEventLoopGroup -> io.vertx.core.net.impl.VertxEventLoopGroup:
    int pos -> pos
    java.util.List workers -> workers
    java.util.Set children -> children
    29:170:void <init>() -> <init>
    36:42:io.netty.channel.EventLoop next() -> next
    48:48:java.util.Iterator iterator() -> iterator
    53:53:io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    58:58:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    63:63:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    68:68:boolean isShutdown() -> isShutdown
    73:73:boolean isTerminated() -> isTerminated
    78:78:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    82:88:void addWorker(io.netty.channel.EventLoop) -> addWorker
    91:91:void shutdown() -> shutdown
    96:96:boolean isShuttingDown() -> isShuttingDown
    101:101:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    106:106:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    110:116:io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopHolder findHolder(io.netty.channel.EventLoop) -> findHolder
    121:131:void removeWorker(io.netty.channel.EventLoop) -> removeWorker
    138:141:void checkPos() -> checkPos
    28:28:io.netty.util.concurrent.EventExecutor next() -> next
    29:29:java.util.List access$000(io.vertx.core.net.impl.VertxEventLoopGroup) -> access$000
io.vertx.core.net.impl.VertxEventLoopGroup$1 -> io.vertx.core.net.impl.VertxEventLoopGroup$1:
    io.vertx.core.net.impl.VertxEventLoopGroup this$0 -> this$0
    170:170:void <init>(io.vertx.core.net.impl.VertxEventLoopGroup) -> <init>
    173:173:java.util.Iterator iterator() -> iterator
    178:178:int size() -> size
    183:183:boolean isEmpty() -> isEmpty
    188:188:boolean contains(java.lang.Object) -> contains
    193:193:java.lang.Object[] toArray() -> toArray
    198:198:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    203:203:boolean add(io.netty.util.concurrent.EventExecutor) -> add
    208:208:boolean remove(java.lang.Object) -> remove
    213:213:boolean containsAll(java.util.Collection) -> containsAll
    218:218:boolean addAll(java.util.Collection) -> addAll
    223:223:boolean retainAll(java.util.Collection) -> retainAll
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:void clear() -> clear
    170:170:boolean add(java.lang.Object) -> add
io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopHolder -> io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopHolder:
    int count -> count
    io.netty.channel.EventLoop worker -> worker
    144:149:void <init>(io.netty.channel.EventLoop) -> <init>
    153:160:boolean equals(java.lang.Object) -> equals
    165:165:int hashCode() -> hashCode
io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator -> io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator:
    java.util.Iterator holderIt -> holderIt
    240:242:void <init>(java.util.Iterator) -> <init>
    246:246:boolean hasNext() -> hasNext
    251:251:io.netty.util.concurrent.EventExecutor next() -> next
    256:256:void remove() -> remove
    237:237:java.lang.Object next() -> next
io.vertx.core.net.impl.VertxHandler -> io.vertx.core.net.impl.VertxHandler:
    io.vertx.core.net.impl.ConnectionBase conn -> conn
    io.vertx.core.impl.ContextTask endReadAndFlush -> endReadAndFlush
    io.vertx.core.Handler addHandler -> addHandler
    io.vertx.core.Handler removeHandler -> removeHandler
    30:30:void <init>() -> <init>
    43:48:void setConnection(io.vertx.core.net.impl.ConnectionBase) -> setConnection
    57:58:io.vertx.core.net.impl.VertxHandler addHandler(io.vertx.core.Handler) -> addHandler
    68:69:io.vertx.core.net.impl.VertxHandler removeHandler(io.vertx.core.Handler) -> removeHandler
    73:73:io.vertx.core.net.impl.ConnectionBase getConnection() -> getConnection
    77:93:io.netty.buffer.ByteBuf safeBuffer(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBufAllocator) -> safeBuffer
    98:101:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    105:122:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    126:131:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    135:137:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    141:148:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    152:156:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    java.lang.Object decode(java.lang.Object,io.netty.buffer.ByteBufAllocator) -> decode
    145:147:void lambda$channelRead$1(io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> lambda$channelRead$1
    112:118:void lambda$exceptionCaught$0(io.netty.channel.Channel,io.vertx.core.net.impl.ConnectionBase,java.lang.Throwable) -> lambda$exceptionCaught$0
io.vertx.core.net.impl.VertxNetHandler -> io.vertx.core.net.impl.VertxNetHandler:
    java.util.function.Function connectionFactory -> connectionFactory
    29:31:void <init>(java.util.function.Function) -> <init>
    34:35:void <init>(io.vertx.core.net.impl.NetSocketImpl) -> <init>
    39:40:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    44:44:java.lang.Object decode(java.lang.Object,io.netty.buffer.ByteBufAllocator) -> decode
    34:34:io.vertx.core.net.impl.NetSocketImpl lambda$new$0(io.vertx.core.net.impl.NetSocketImpl,io.netty.channel.ChannelHandlerContext) -> lambda$new$0
io.vertx.core.net.impl.VertxSniHandler -> io.vertx.core.net.impl.VertxSniHandler:
    io.netty.util.AttributeKey SERVER_NAME_ATTR -> SERVER_NAME_ATTR
    io.vertx.core.net.impl.SSLHelper helper -> helper
    io.netty.channel.ChannelHandlerContext context -> context
    io.netty.util.concurrent.Promise handshakeFuture -> handshakeFuture
    42:56:void <init>(io.vertx.core.net.impl.SSLHelper,io.vertx.core.impl.VertxInternal) -> <init>
    59:59:io.netty.util.concurrent.Future handshakeFuture() -> handshakeFuture
    64:65:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    69:93:void replaceHandler(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.handler.ssl.SslContext) -> replaceHandler
    76:83:void lambda$replaceHandler$1(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.util.concurrent.Future) -> lambda$replaceHandler$1
    43:43:io.netty.handler.ssl.SslContext lambda$new$0(io.vertx.core.net.impl.SSLHelper,io.vertx.core.impl.VertxInternal,java.lang.String) -> lambda$new$0
    33:33:io.netty.channel.ChannelHandlerContext access$000(io.vertx.core.net.impl.VertxSniHandler) -> access$000
    35:35:void <clinit>() -> <clinit>
io.vertx.core.net.impl.VertxSniHandler$1 -> io.vertx.core.net.impl.VertxSniHandler$1:
    io.vertx.core.net.impl.VertxSniHandler this$0 -> this$0
    46:46:void <init>(io.vertx.core.net.impl.VertxSniHandler) -> <init>
    49:53:io.netty.util.concurrent.EventExecutor executor() -> executor
io.vertx.core.net.impl.VertxTrustManagerFactory -> io.vertx.core.net.impl.VertxTrustManagerFactory:
    java.security.Provider PROVIDER -> PROVIDER
    31:45:void <init>(javax.net.ssl.TrustManager[]) -> <init>
    27:27:void <clinit>() -> <clinit>
io.vertx.core.net.impl.VertxTrustManagerFactory$1 -> io.vertx.core.net.impl.VertxTrustManagerFactory$1:
    27:27:void <init>(java.lang.String,double,java.lang.String) -> <init>
io.vertx.core.net.impl.VertxTrustManagerFactory$2 -> io.vertx.core.net.impl.VertxTrustManagerFactory$2:
    javax.net.ssl.TrustManager[] val$tm -> val$tm
    31:31:void <init>(javax.net.ssl.TrustManager[]) -> <init>
    34:34:void engineInit(java.security.KeyStore) -> engineInit
    38:38:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    42:42:javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
io.vertx.core.net.impl.pkcs1.PrivateKeyParser -> io.vertx.core.net.impl.pkcs1.PrivateKeyParser:
    59:79:java.security.spec.RSAPrivateCrtKeySpec getRSAKeySpec(byte[]) -> getRSAKeySpec
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object -> io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object:
    int type -> type
    int length -> length
    byte[] value -> value
    int tag -> tag
    265:270:void <init>(int,int,byte[]) -> <init>
    273:273:int getType() -> getType
    285:285:boolean isConstructed() -> isConstructed
    295:299:io.vertx.core.net.impl.pkcs1.PrivateKeyParser$DerParser getParser() -> getParser
    309:313:java.math.BigInteger getInteger() -> getInteger
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$DerParser -> io.vertx.core.net.impl.pkcs1.PrivateKeyParser$DerParser:
    io.vertx.core.buffer.Buffer in -> in
    int pos -> pos
    143:145:void <init>(io.vertx.core.buffer.Buffer) -> <init>
    154:155:void <init>(byte[]) -> <init>
    158:161:int readByte() -> readByte
    165:170:byte[] readBytes(int) -> readBytes
    182:185:io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object read() -> read
    207:223:int getLength() -> getLength
io.vertx.core.net.impl.transport.EpollTransport -> io.vertx.core.net.impl.transport.EpollTransport:
    39:40:void <init>() -> <init>
    44:50:java.net.SocketAddress convert(io.vertx.core.net.SocketAddress,boolean) -> convert
    57:57:boolean isAvailable() -> isAvailable
    67:69:io.netty.channel.EventLoopGroup eventLoopGroup(int,java.util.concurrent.ThreadFactory,int) -> eventLoopGroup
    74:74:io.netty.channel.socket.DatagramChannel datagramChannel() -> datagramChannel
    84:87:java.lang.Class channelType(boolean) -> channelType
    92:95:java.lang.Class serverChannelType(boolean) -> serverChannelType
    100:110:io.netty.channel.ChannelOption channelOption(java.lang.String) -> channelOption
io.vertx.core.net.impl.transport.KQueueTransport -> io.vertx.core.net.impl.transport.KQueueTransport:
    40:41:void <init>() -> <init>
    45:51:java.net.SocketAddress convert(io.vertx.core.net.SocketAddress,boolean) -> convert
    58:58:boolean isAvailable() -> isAvailable
    68:70:io.netty.channel.EventLoopGroup eventLoopGroup(int,java.util.concurrent.ThreadFactory,int) -> eventLoopGroup
    75:75:io.netty.channel.socket.DatagramChannel datagramChannel() -> datagramChannel
    85:88:java.lang.Class channelType(boolean) -> channelType
    94:97:java.lang.Class serverChannelType(boolean) -> serverChannelType
    103:107:io.netty.channel.ChannelOption channelOption(java.lang.String) -> channelOption
io.vertx.core.net.impl.transport.Transport -> io.vertx.core.net.impl.transport.Transport:
    io.vertx.core.net.impl.transport.Transport JDK -> JDK
    57:78:io.vertx.core.net.impl.transport.Transport nativeTransport() -> nativeTransport
    81:82:void <init>() -> <init>
    88:88:boolean isAvailable() -> isAvailable
    99:105:java.net.SocketAddress convert(io.vertx.core.net.SocketAddress,boolean) -> convert
    118:118:io.netty.channel.ChannelOption channelOption(java.lang.String) -> channelOption
    125:127:io.netty.channel.EventLoopGroup eventLoopGroup(int,java.util.concurrent.ThreadFactory,int) -> eventLoopGroup
    134:134:io.netty.channel.socket.DatagramChannel datagramChannel() -> datagramChannel
    156:159:java.lang.Class channelType(boolean) -> channelType
    167:170:java.lang.Class serverChannelType(boolean) -> serverChannelType
    174:178:void setOption(java.lang.String,java.lang.Object,java.util.function.BiConsumer) -> setOption
    211:237:void configure(io.vertx.core.net.ClientOptionsBase,io.netty.bootstrap.Bootstrap) -> configure
    240:265:void configure(io.vertx.core.net.NetServerOptions,io.netty.bootstrap.ServerBootstrap) -> configure
    51:51:void <clinit>() -> <clinit>
io.vertx.core.parsetools.JsonParser -> io.vertx.core.parsetools.JsonParser:
    io.vertx.core.parsetools.JsonParser pause() -> pause
    io.vertx.core.parsetools.JsonParser resume() -> resume
    io.vertx.core.parsetools.JsonParser endHandler(io.vertx.core.Handler) -> endHandler
    io.vertx.core.parsetools.JsonParser handler(io.vertx.core.Handler) -> handler
    io.vertx.core.parsetools.JsonParser exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    37:37:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    37:37:io.vertx.core.streams.ReadStream resume() -> resume
    37:37:io.vertx.core.streams.ReadStream pause() -> pause
    37:37:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    37:37:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.parsetools.RecordParser -> io.vertx.core.parsetools.RecordParser:
    void setOutput(io.vertx.core.Handler) -> setOutput
    139:139:io.vertx.core.parsetools.RecordParser newFixed(int) -> newFixed
    void fixedSizeMode(int) -> fixedSizeMode
    void handle(io.vertx.core.buffer.Buffer) -> handle
    io.vertx.core.parsetools.RecordParser exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.parsetools.RecordParser handler(io.vertx.core.Handler) -> handler
    io.vertx.core.parsetools.RecordParser pause() -> pause
    io.vertx.core.parsetools.RecordParser resume() -> resume
    io.vertx.core.parsetools.RecordParser endHandler(io.vertx.core.Handler) -> endHandler
    54:54:void handle(java.lang.Object) -> handle
    54:54:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    54:54:io.vertx.core.streams.ReadStream resume() -> resume
    54:54:io.vertx.core.streams.ReadStream pause() -> pause
    54:54:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    54:54:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.parsetools.impl.RecordParserImpl -> io.vertx.core.parsetools.impl.RecordParserImpl:
    io.vertx.core.buffer.Buffer buff -> buff
    int pos -> pos
    int start -> start
    int delimPos -> delimPos
    boolean reset -> reset
    boolean delimited -> delimited
    byte[] delim -> delim
    int recordSize -> recordSize
    io.vertx.core.Handler output -> output
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.streams.ReadStream stream -> stream
    43:46:void <init>(io.vertx.core.streams.ReadStream,io.vertx.core.Handler) -> <init>
    49:51:void setOutput(io.vertx.core.Handler) -> setOutput
    107:110:io.vertx.core.parsetools.RecordParser newFixed(int,io.vertx.core.streams.ReadStream,io.vertx.core.Handler) -> newFixed
    149:153:void fixedSizeMode(int) -> fixedSizeMode
    156:175:void handleParsing() -> handleParsing
    178:195:void parseDelimited() -> parseDelimited
    198:206:void parseFixed() -> parseFixed
    214:220:void handle(io.vertx.core.buffer.Buffer) -> handle
    223:227:void end() -> end
    231:232:io.vertx.core.parsetools.RecordParser exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    237:253:io.vertx.core.parsetools.RecordParser handler(io.vertx.core.Handler) -> handler
    258:261:io.vertx.core.parsetools.RecordParser pause() -> pause
    266:269:io.vertx.core.parsetools.RecordParser resume() -> resume
    274:275:io.vertx.core.parsetools.RecordParser endHandler(io.vertx.core.Handler) -> endHandler
    26:26:void handle(java.lang.Object) -> handle
    26:26:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    26:26:io.vertx.core.streams.ReadStream resume() -> resume
    26:26:io.vertx.core.streams.ReadStream pause() -> pause
    26:26:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    26:26:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    242:245:void lambda$handler$1(java.lang.Throwable) -> lambda$handler$1
    240:240:void lambda$handler$0(java.lang.Void) -> lambda$handler$0
io.vertx.core.shareddata.SharedData -> io.vertx.core.shareddata.SharedData:
io.vertx.core.shareddata.impl.SharedDataImpl -> io.vertx.core.shareddata.impl.SharedDataImpl:
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.spi.cluster.ClusterManager clusterManager -> clusterManager
    java.util.concurrent.ConcurrentMap localAsyncMaps -> localAsyncMaps
    java.util.concurrent.ConcurrentMap localLocks -> localLocks
    java.util.concurrent.ConcurrentMap localCounters -> localCounters
    java.util.concurrent.ConcurrentMap localMaps -> localMaps
    44:52:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.spi.cluster.ClusterManager) -> <init>
io.vertx.core.spi.BufferFactory -> io.vertx.core.spi.BufferFactory:
    io.vertx.core.buffer.Buffer buffer(int) -> buffer
    io.vertx.core.buffer.Buffer buffer() -> buffer
    io.vertx.core.buffer.Buffer buffer(java.lang.String) -> buffer
    io.vertx.core.buffer.Buffer buffer(java.lang.String,java.lang.String) -> buffer
    io.vertx.core.buffer.Buffer buffer(byte[]) -> buffer
    io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf) -> buffer
io.vertx.core.spi.FutureFactory -> io.vertx.core.spi.FutureFactory:
    io.vertx.core.Future future() -> future
    io.vertx.core.Future succeededFuture() -> succeededFuture
    io.vertx.core.Future succeededFuture(java.lang.Object) -> succeededFuture
    io.vertx.core.Future failedFuture(java.lang.Throwable) -> failedFuture
    io.vertx.core.Future failureFuture(java.lang.String) -> failureFuture
io.vertx.core.spi.PumpFactory -> io.vertx.core.spi.PumpFactory:
    io.vertx.core.streams.Pump pump(io.vertx.core.streams.ReadStream,io.vertx.core.streams.WriteStream) -> pump
io.vertx.core.spi.VerticleFactory -> io.vertx.core.spi.VerticleFactory:
    36:43:java.lang.String removePrefix(java.lang.String) -> removePrefix
    52:52:int order() -> order
    61:61:boolean requiresResolve() -> requiresResolve
    70:70:boolean blockingCreate() -> blockingCreate
    84:85:void resolve(java.lang.String,io.vertx.core.DeploymentOptions,java.lang.ClassLoader,io.vertx.core.Future) -> resolve
    92:92:void init(io.vertx.core.Vertx) -> init
    java.lang.String prefix() -> prefix
    io.vertx.core.Verticle createVerticle(java.lang.String,java.lang.ClassLoader) -> createVerticle
io.vertx.core.spi.VertxFactory -> io.vertx.core.spi.VertxFactory:
    io.vertx.core.Vertx vertx(io.vertx.core.VertxOptions) -> vertx
    io.vertx.core.Context context() -> context
io.vertx.core.spi.VertxMetricsFactory -> io.vertx.core.spi.VertxMetricsFactory:
    io.vertx.core.spi.metrics.VertxMetrics metrics(io.vertx.core.Vertx,io.vertx.core.VertxOptions) -> metrics
io.vertx.core.spi.WebSocketFrameFactory -> io.vertx.core.spi.WebSocketFrameFactory:
    io.vertx.core.http.WebSocketFrame binaryFrame(io.vertx.core.buffer.Buffer,boolean) -> binaryFrame
    io.vertx.core.http.WebSocketFrame textFrame(java.lang.String,boolean) -> textFrame
    io.vertx.core.http.WebSocketFrame continuationFrame(io.vertx.core.buffer.Buffer,boolean) -> continuationFrame
    io.vertx.core.http.WebSocketFrame pingFrame(io.vertx.core.buffer.Buffer) -> pingFrame
    io.vertx.core.http.WebSocketFrame pongFrame(io.vertx.core.buffer.Buffer) -> pongFrame
io.vertx.core.spi.cluster.AsyncMultiMap -> io.vertx.core.spi.cluster.AsyncMultiMap:
    void add(java.lang.Object,java.lang.Object,io.vertx.core.Handler) -> add
    void get(java.lang.Object,io.vertx.core.Handler) -> get
    void remove(java.lang.Object,java.lang.Object,io.vertx.core.Handler) -> remove
    void removeAllMatching(java.util.function.Predicate,io.vertx.core.Handler) -> removeAllMatching
io.vertx.core.spi.cluster.ChoosableIterable -> io.vertx.core.spi.cluster.ChoosableIterable:
    boolean isEmpty() -> isEmpty
    java.lang.Object choose() -> choose
io.vertx.core.spi.cluster.ClusterManager -> io.vertx.core.spi.cluster.ClusterManager:
    void setVertx(io.vertx.core.Vertx) -> setVertx
    void getAsyncMultiMap(java.lang.String,io.vertx.core.Handler) -> getAsyncMultiMap
    java.util.Map getSyncMap(java.lang.String) -> getSyncMap
    java.lang.String getNodeID() -> getNodeID
    java.util.List getNodes() -> getNodes
    void nodeListener(io.vertx.core.spi.cluster.NodeListener) -> nodeListener
    void join(io.vertx.core.Handler) -> join
io.vertx.core.spi.cluster.NodeListener -> io.vertx.core.spi.cluster.NodeListener:
io.vertx.core.spi.logging.LogDelegate -> io.vertx.core.spi.logging.LogDelegate:
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void info(java.lang.Object) -> info
    void debug(java.lang.Object) -> debug
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
io.vertx.core.spi.logging.LogDelegateFactory -> io.vertx.core.spi.logging.LogDelegateFactory:
    io.vertx.core.spi.logging.LogDelegate createDelegate(java.lang.String) -> createDelegate
io.vertx.core.spi.metrics.EventBusMetrics -> io.vertx.core.spi.metrics.EventBusMetrics:
    java.lang.Object handlerRegistered(java.lang.String,java.lang.String) -> handlerRegistered
    void handlerUnregistered(java.lang.Object) -> handlerUnregistered
    void scheduleMessage(java.lang.Object,boolean) -> scheduleMessage
    void beginHandleMessage(java.lang.Object,boolean) -> beginHandleMessage
    void endHandleMessage(java.lang.Object,java.lang.Throwable) -> endHandleMessage
    void messageSent(java.lang.String,boolean,boolean,boolean) -> messageSent
    void messageReceived(java.lang.String,boolean,boolean,int) -> messageReceived
    void messageWritten(java.lang.String,int) -> messageWritten
    void messageRead(java.lang.String,int) -> messageRead
    void replyFailure(java.lang.String,io.vertx.core.eventbus.ReplyFailure) -> replyFailure
io.vertx.core.spi.metrics.HttpClientMetrics -> io.vertx.core.spi.metrics.HttpClientMetrics:
    java.lang.Object createEndpoint(java.lang.String,int,int) -> createEndpoint
    void closeEndpoint(java.lang.String,int,java.lang.Object) -> closeEndpoint
    java.lang.Object enqueueRequest(java.lang.Object) -> enqueueRequest
    void dequeueRequest(java.lang.Object,java.lang.Object) -> dequeueRequest
    void endpointConnected(java.lang.Object,java.lang.Object) -> endpointConnected
    void endpointDisconnected(java.lang.Object,java.lang.Object) -> endpointDisconnected
    java.lang.Object requestBegin(java.lang.Object,java.lang.Object,io.vertx.core.net.SocketAddress,io.vertx.core.net.SocketAddress,io.vertx.core.http.HttpClientRequest) -> requestBegin
    void requestEnd(java.lang.Object) -> requestEnd
    void responseBegin(java.lang.Object,io.vertx.core.http.HttpClientResponse) -> responseBegin
    java.lang.Object responsePushed(java.lang.Object,java.lang.Object,io.vertx.core.net.SocketAddress,io.vertx.core.net.SocketAddress,io.vertx.core.http.HttpClientRequest) -> responsePushed
    void requestReset(java.lang.Object) -> requestReset
    void responseEnd(java.lang.Object,io.vertx.core.http.HttpClientResponse) -> responseEnd
    java.lang.Object connected(java.lang.Object,java.lang.Object,io.vertx.core.http.WebSocket) -> connected
    void disconnected(java.lang.Object) -> disconnected
io.vertx.core.spi.metrics.HttpServerMetrics -> io.vertx.core.spi.metrics.HttpServerMetrics:
    java.lang.Object requestBegin(java.lang.Object,io.vertx.core.http.HttpServerRequest) -> requestBegin
    void requestReset(java.lang.Object) -> requestReset
    java.lang.Object responsePushed(java.lang.Object,io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.http.HttpServerResponse) -> responsePushed
    void responseEnd(java.lang.Object,io.vertx.core.http.HttpServerResponse) -> responseEnd
    java.lang.Object upgrade(java.lang.Object,io.vertx.core.http.ServerWebSocket) -> upgrade
    java.lang.Object connected(java.lang.Object,io.vertx.core.http.ServerWebSocket) -> connected
    void disconnected(java.lang.Object) -> disconnected
io.vertx.core.spi.metrics.Metrics -> io.vertx.core.spi.metrics.Metrics:
    boolean METRICS_ENABLED -> METRICS_ENABLED
    void close() -> close
    24:24:void <clinit>() -> <clinit>
io.vertx.core.spi.metrics.NetworkMetrics -> io.vertx.core.spi.metrics.NetworkMetrics:
    void bytesRead(java.lang.Object,io.vertx.core.net.SocketAddress,long) -> bytesRead
    void bytesWritten(java.lang.Object,io.vertx.core.net.SocketAddress,long) -> bytesWritten
    void exceptionOccurred(java.lang.Object,io.vertx.core.net.SocketAddress,java.lang.Throwable) -> exceptionOccurred
io.vertx.core.spi.metrics.PoolMetrics -> io.vertx.core.spi.metrics.PoolMetrics:
    java.lang.Object submitted() -> submitted
    java.lang.Object begin(java.lang.Object) -> begin
    void rejected(java.lang.Object) -> rejected
    void end(java.lang.Object,boolean) -> end
io.vertx.core.spi.metrics.TCPMetrics -> io.vertx.core.spi.metrics.TCPMetrics:
    java.lang.Object connected(io.vertx.core.net.SocketAddress,java.lang.String) -> connected
    void disconnected(java.lang.Object,io.vertx.core.net.SocketAddress) -> disconnected
io.vertx.core.spi.metrics.VertxMetrics -> io.vertx.core.spi.metrics.VertxMetrics:
    void verticleDeployed(io.vertx.core.Verticle) -> verticleDeployed
    void verticleUndeployed(io.vertx.core.Verticle) -> verticleUndeployed
    void timerCreated(long) -> timerCreated
    void timerEnded(long,boolean) -> timerEnded
    io.vertx.core.spi.metrics.EventBusMetrics createMetrics(io.vertx.core.eventbus.EventBus) -> createMetrics
    io.vertx.core.spi.metrics.HttpServerMetrics createMetrics(io.vertx.core.http.HttpServer,io.vertx.core.net.SocketAddress,io.vertx.core.http.HttpServerOptions) -> createMetrics
    io.vertx.core.spi.metrics.HttpClientMetrics createMetrics(io.vertx.core.http.HttpClient,io.vertx.core.http.HttpClientOptions) -> createMetrics
    io.vertx.core.spi.metrics.TCPMetrics createMetrics(io.vertx.core.net.SocketAddress,io.vertx.core.net.NetServerOptions) -> createMetrics
    io.vertx.core.spi.metrics.TCPMetrics createMetrics(io.vertx.core.net.NetClientOptions) -> createMetrics
    160:160:void eventBusInitialized(io.vertx.core.eventbus.EventBus) -> eventBusInitialized
    io.vertx.core.spi.metrics.PoolMetrics createMetrics(java.lang.Object,java.lang.String,java.lang.String,int) -> createMetrics
io.vertx.core.spi.resolver.ResolverProvider -> io.vertx.core.spi.resolver.ResolverProvider:
    boolean DISABLE_DNS_RESOLVER -> DISABLE_DNS_RESOLVER
    39:49:io.vertx.core.spi.resolver.ResolverProvider factory(io.vertx.core.Vertx,io.vertx.core.dns.AddressResolverOptions) -> factory
    io.netty.resolver.AddressResolverGroup resolver(io.vertx.core.dns.AddressResolverOptions) -> resolver
    33:33:void <clinit>() -> <clinit>
io.vertx.core.streams.Pump -> io.vertx.core.streams.Pump:
    io.vertx.core.spi.PumpFactory factory -> factory
    53:53:io.vertx.core.streams.Pump pump(io.vertx.core.streams.ReadStream,io.vertx.core.streams.WriteStream) -> pump
    io.vertx.core.streams.Pump start() -> start
    99:99:void <clinit>() -> <clinit>
io.vertx.core.streams.ReadStream -> io.vertx.core.streams.ReadStream:
    io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    io.vertx.core.streams.ReadStream pause() -> pause
    io.vertx.core.streams.ReadStream resume() -> resume
    io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
io.vertx.core.streams.StreamBase -> io.vertx.core.streams.StreamBase:
io.vertx.core.streams.WriteStream -> io.vertx.core.streams.WriteStream:
io.vertx.lang.reactivex.TypeArg -> io.vertx.lang.reactivex.TypeArg:
    io.vertx.lang.reactivex.TypeArg UNKNOWN -> UNKNOWN
    java.util.function.Function wrap -> wrap
    java.util.function.Function unwrap -> unwrap
    33:36:void <init>(java.util.function.Function,java.util.function.Function) -> <init>
    12:12:void <clinit>() -> <clinit>
io.vertx.reactivex.FlowableHelper -> io.vertx.reactivex.FlowableHelper:
    35:35:io.reactivex.Flowable toFlowable(io.vertx.core.streams.ReadStream,java.util.function.Function) -> toFlowable
io.vertx.reactivex.core.AbstractVerticle -> io.vertx.reactivex.core.AbstractVerticle:
    io.vertx.reactivex.core.Vertx vertx -> vertx
    24:24:void <init>() -> <init>
    31:33:void init(io.vertx.core.Vertx,io.vertx.core.Context) -> init
io.vertx.reactivex.core.MultiMap -> io.vertx.reactivex.core.MultiMap:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> __TYPE_ARG
    io.vertx.core.MultiMap delegate -> delegate
    44:44:java.lang.String toString() -> toString
    49:52:boolean equals(java.lang.Object) -> equals
    57:57:int hashCode() -> hashCode
    67:69:void <init>(io.vertx.core.MultiMap) -> <init>
    72:72:io.vertx.core.MultiMap getDelegate() -> getDelegate
    101:102:java.util.List getAll(java.lang.String) -> getAll
    143:144:java.util.Set names() -> names
    221:221:io.vertx.reactivex.core.MultiMap newInstance(io.vertx.core.MultiMap) -> newInstance
    61:61:java.lang.Object lambda$static$0(java.lang.Object) -> lambda$static$0
    60:60:void <clinit>() -> <clinit>
io.vertx.reactivex.core.Vertx -> io.vertx.reactivex.core.Vertx:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> __TYPE_ARG
    io.vertx.core.Vertx delegate -> delegate
    79:79:java.lang.String toString() -> toString
    84:87:boolean equals(java.lang.Object) -> equals
    92:92:int hashCode() -> hashCode
    102:104:void <init>(io.vertx.core.Vertx) -> <init>
    107:107:io.vertx.core.Vertx getDelegate() -> getDelegate
    241:242:io.vertx.reactivex.core.http.HttpServer createHttpServer() -> createHttpServer
    96:96:java.lang.Object lambda$static$0(java.lang.Object) -> lambda$static$0
    95:95:void <clinit>() -> <clinit>
io.vertx.reactivex.core.buffer.Buffer -> io.vertx.reactivex.core.buffer.Buffer:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> __TYPE_ARG
    io.vertx.core.buffer.Buffer delegate -> delegate
    56:59:boolean equals(java.lang.Object) -> equals
    64:64:int hashCode() -> hashCode
    74:76:void <init>(io.vertx.core.buffer.Buffer) -> <init>
    79:79:io.vertx.core.buffer.Buffer getDelegate() -> getDelegate
    131:132:java.lang.String toString() -> toString
    895:895:io.vertx.reactivex.core.buffer.Buffer newInstance(io.vertx.core.buffer.Buffer) -> newInstance
    68:68:java.lang.Object lambda$static$0(java.lang.Object) -> lambda$static$0
    67:67:void <clinit>() -> <clinit>
io.vertx.reactivex.core.http.HttpServer -> io.vertx.reactivex.core.http.HttpServer:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> __TYPE_ARG
    io.vertx.core.http.HttpServer delegate -> delegate
    io.vertx.reactivex.core.streams.ReadStream cached_0 -> cached_0
    48:48:java.lang.String toString() -> toString
    53:56:boolean equals(java.lang.Object) -> equals
    61:61:int hashCode() -> hashCode
    71:73:void <init>(io.vertx.core.http.HttpServer) -> <init>
    76:76:io.vertx.core.http.HttpServer getDelegate() -> getDelegate
    94:99:io.vertx.reactivex.core.streams.ReadStream requestStream() -> requestStream
    238:239:io.vertx.reactivex.core.http.HttpServer listen(int) -> listen
    341:341:io.vertx.reactivex.core.http.HttpServer newInstance(io.vertx.core.http.HttpServer) -> newInstance
    65:65:java.lang.Object lambda$static$0(java.lang.Object) -> lambda$static$0
    64:64:void <clinit>() -> <clinit>
io.vertx.reactivex.core.http.HttpServerRequest -> io.vertx.reactivex.core.http.HttpServerRequest:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> __TYPE_ARG
    io.vertx.core.http.HttpServerRequest delegate -> delegate
    io.reactivex.Flowable flowable -> flowable
    io.vertx.reactivex.core.http.HttpServerResponse cached_0 -> cached_0
    io.vertx.reactivex.core.MultiMap cached_2 -> cached_2
    54:54:java.lang.String toString() -> toString
    59:62:boolean equals(java.lang.Object) -> equals
    67:67:int hashCode() -> hashCode
    77:79:void <init>(io.vertx.core.http.HttpServerRequest) -> <init>
    82:82:io.vertx.core.http.HttpServerRequest getDelegate() -> getDelegate
    97:101:io.reactivex.Flowable toFlowable() -> toFlowable
    153:154:java.lang.String rawMethod() -> rawMethod
    185:186:java.lang.String path() -> path
    209:214:io.vertx.reactivex.core.http.HttpServerResponse response() -> response
    235:236:java.lang.String getHeader(java.lang.String) -> getHeader
    243:248:io.vertx.reactivex.core.MultiMap params() -> params
    289:290:java.lang.String absoluteURI() -> absoluteURI
    302:307:io.vertx.reactivex.core.http.HttpServerRequest bodyHandler(io.vertx.core.Handler) -> bodyHandler
    71:71:java.lang.Object lambda$static$0(java.lang.Object) -> lambda$static$0
    70:70:void <clinit>() -> <clinit>
io.vertx.reactivex.core.http.HttpServerRequest$2 -> io.vertx.reactivex.core.http.HttpServerRequest$2:
    io.vertx.core.Handler val$bodyHandler -> val$bodyHandler
    io.vertx.reactivex.core.http.HttpServerRequest this$0 -> this$0
    302:302:void <init>(io.vertx.reactivex.core.http.HttpServerRequest,io.vertx.core.Handler) -> <init>
    304:305:void handle(io.vertx.core.buffer.Buffer) -> handle
    302:302:void handle(java.lang.Object) -> handle
io.vertx.reactivex.core.http.HttpServerResponse -> io.vertx.reactivex.core.http.HttpServerResponse:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> __TYPE_ARG
    io.vertx.core.http.HttpServerResponse delegate -> delegate
    61:61:java.lang.String toString() -> toString
    66:69:boolean equals(java.lang.Object) -> equals
    74:74:int hashCode() -> hashCode
    84:86:void <init>(io.vertx.core.http.HttpServerResponse) -> <init>
    89:89:io.vertx.core.http.HttpServerResponse getDelegate() -> getDelegate
    136:137:io.vertx.reactivex.core.http.HttpServerResponse setStatusCode(int) -> setStatusCode
    205:206:io.vertx.reactivex.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.String) -> putHeader
    313:314:void end(io.vertx.reactivex.core.buffer.Buffer) -> end
    323:324:void end() -> end
    682:682:io.vertx.reactivex.core.http.HttpServerResponse newInstance(io.vertx.core.http.HttpServerResponse) -> newInstance
    78:78:java.lang.Object lambda$static$0(java.lang.Object) -> lambda$static$0
    77:77:void <clinit>() -> <clinit>
io.vertx.reactivex.core.impl.FlowableReadStream -> io.vertx.reactivex.core.impl.FlowableReadStream:
    io.vertx.core.streams.ReadStream stream -> stream
    java.util.function.Function f -> f
    java.util.concurrent.atomic.AtomicReference processor -> processor
    long highWaterMark -> highWaterMark
    long lowWaterMark -> lowWaterMark
    boolean subscribed -> subscribed
    long pending -> pending
    boolean paused -> paused
    24:36:void <init>(io.vertx.core.streams.ReadStream,long,java.util.function.Function) -> <init>
    40:121:void subscribeActual(org.reactivestreams.Subscriber) -> subscribeActual
    18:18:java.util.concurrent.atomic.AtomicReference access$000(io.vertx.reactivex.core.impl.FlowableReadStream) -> access$000
    18:18:long access$102(io.vertx.reactivex.core.impl.FlowableReadStream,long) -> access$102
    18:18:long access$100(io.vertx.reactivex.core.impl.FlowableReadStream) -> access$100
    18:18:boolean access$200(io.vertx.reactivex.core.impl.FlowableReadStream) -> access$200
    18:18:boolean access$300(io.vertx.reactivex.core.impl.FlowableReadStream) -> access$300
    18:18:long access$400(io.vertx.reactivex.core.impl.FlowableReadStream) -> access$400
    18:18:boolean access$302(io.vertx.reactivex.core.impl.FlowableReadStream,boolean) -> access$302
    18:18:io.vertx.core.streams.ReadStream access$500(io.vertx.reactivex.core.impl.FlowableReadStream) -> access$500
    18:18:boolean access$202(io.vertx.reactivex.core.impl.FlowableReadStream,boolean) -> access$202
    18:18:java.util.function.Function access$700(io.vertx.reactivex.core.impl.FlowableReadStream) -> access$700
    18:18:long access$104(io.vertx.reactivex.core.impl.FlowableReadStream) -> access$104
    18:18:long access$800(io.vertx.reactivex.core.impl.FlowableReadStream) -> access$800
io.vertx.reactivex.core.impl.FlowableReadStream$1 -> io.vertx.reactivex.core.impl.FlowableReadStream$1:
    io.reactivex.processors.UnicastProcessor val$p -> val$p
    org.reactivestreams.Subscriber val$subscriber -> val$subscriber
    io.vertx.reactivex.core.impl.FlowableReadStream this$0 -> this$0
    45:45:void <init>(io.vertx.reactivex.core.impl.FlowableReadStream,io.reactivex.processors.UnicastProcessor,org.reactivestreams.Subscriber) -> <init>
    47:93:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    95:96:void onNext(java.lang.Object) -> onNext
    98:100:void onError(java.lang.Throwable) -> onError
    102:104:void onComplete() -> onComplete
    106:119:void release() -> release
    85:90:void lambda$onSubscribe$1(io.reactivex.processors.UnicastProcessor,java.lang.Object) -> lambda$onSubscribe$1
    82:82:void lambda$onSubscribe$0(io.reactivex.processors.UnicastProcessor,java.lang.Void) -> lambda$onSubscribe$0
    45:45:void access$600(io.vertx.reactivex.core.impl.FlowableReadStream$1) -> access$600
io.vertx.reactivex.core.impl.FlowableReadStream$1$1 -> io.vertx.reactivex.core.impl.FlowableReadStream$1$1:
    io.reactivex.internal.subscriptions.BasicIntQueueSubscription val$sub -> val$sub
    io.vertx.reactivex.core.impl.FlowableReadStream$1 this$1 -> this$1
    48:48:void <init>(io.vertx.reactivex.core.impl.FlowableReadStream$1,io.reactivex.internal.subscriptions.BasicIntQueueSubscription) -> <init>
    50:50:int requestFusion(int) -> requestFusion
    53:53:java.lang.Object poll() -> poll
    56:56:boolean isEmpty() -> isEmpty
    59:60:void clear() -> clear
    62:76:void request(long) -> request
    78:80:void cancel() -> cancel
io.vertx.reactivex.core.streams.ReadStream -> io.vertx.reactivex.core.streams.ReadStream:
    io.reactivex.Flowable toFlowable() -> toFlowable
    85:85:io.vertx.reactivex.core.streams.ReadStream newInstance(io.vertx.core.streams.ReadStream,io.vertx.lang.reactivex.TypeArg) -> newInstance
io.vertx.reactivex.core.streams.ReadStreamImpl -> io.vertx.reactivex.core.streams.ReadStreamImpl:
    io.vertx.core.streams.ReadStream delegate -> delegate
    io.vertx.lang.reactivex.TypeArg __typeArg_0 -> __typeArg_0
    io.reactivex.Flowable flowable -> flowable
    98:101:void <init>(io.vertx.core.streams.ReadStream,io.vertx.lang.reactivex.TypeArg) -> <init>
    119:123:io.reactivex.Flowable toFlowable() -> toFlowable
javax.inject.Provider -> javax.inject.Provider:
    java.lang.Object get() -> get
net.jodah.typetools.TypeResolver -> net.jodah.typetools.TypeResolver:
    java.util.Map TYPE_VARIABLE_CACHE -> TYPE_VARIABLE_CACHE
    boolean CACHE_ENABLED -> CACHE_ENABLED
    boolean RESOLVES_LAMBDAS -> RESOLVES_LAMBDAS
    java.lang.reflect.Method GET_CONSTANT_POOL -> GET_CONSTANT_POOL
    java.lang.reflect.Method GET_CONSTANT_POOL_SIZE -> GET_CONSTANT_POOL_SIZE
    java.lang.reflect.Method GET_CONSTANT_POOL_METHOD_AT -> GET_CONSTANT_POOL_METHOD_AT
    java.util.Map OBJECT_METHODS -> OBJECT_METHODS
    java.util.Map PRIMITIVE_WRAPPERS -> PRIMITIVE_WRAPPERS
    java.lang.Double JAVA_VERSION -> JAVA_VERSION
    196:225:java.lang.Class[] resolveRawArguments(java.lang.reflect.Type,java.lang.Class) -> resolveRawArguments
    275:290:java.lang.Class resolveRawClass(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> resolveRawClass
    295:334:java.util.Map getTypeVariableMap(java.lang.Class,java.lang.Class) -> getTypeVariableMap
    342:356:void populateSuperTypeArgs(java.lang.reflect.Type[],java.util.Map,boolean) -> populateSuperTypeArgs
    362:399:void populateTypeArgs(java.lang.reflect.ParameterizedType,java.util.Map,boolean) -> populateTypeArgs
    405:413:java.lang.reflect.Type resolveBound(java.lang.reflect.TypeVariable) -> resolveBound
    421:475:void populateLambdaArgs(java.lang.Class,java.lang.Class,java.util.Map) -> populateLambdaArgs
    478:478:boolean isDefaultMethod(java.lang.reflect.Method) -> isDefaultMethod
    484:506:java.lang.reflect.Member getMemberRef(java.lang.Class) -> getMemberRef
    510:512:boolean isAutoBoxingMethod(java.lang.reflect.Method) -> isAutoBoxingMethod
    516:516:java.lang.Class wrapPrimitives(java.lang.Class) -> wrapPrimitives
    521:523:int getConstantPoolSize(java.lang.Object) -> getConstantPoolSize
    529:531:java.lang.reflect.Member getConstantPoolMethodAt(java.lang.Object,int) -> getConstantPoolMethodAt
    49:110:void <clinit>() -> <clinit>
net.jodah.typetools.TypeResolver$1 -> net.jodah.typetools.TypeResolver$1:
    64:64:void <init>() -> <init>
    67:70:sun.misc.Unsafe run() -> run
    64:64:java.lang.Object run() -> run
net.jodah.typetools.TypeResolver$Unknown -> net.jodah.typetools.TypeResolver$Unknown:
    114:115:void <init>() -> <init>
org.reactivestreams.Processor -> org.reactivestreams.Processor:
org.reactivestreams.Publisher -> org.reactivestreams.Publisher:
    void subscribe(org.reactivestreams.Subscriber) -> subscribe
org.reactivestreams.Subscriber -> org.reactivestreams.Subscriber:
    void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    void onNext(java.lang.Object) -> onNext
    void onError(java.lang.Throwable) -> onError
    void onComplete() -> onComplete
org.reactivestreams.Subscription -> org.reactivestreams.Subscription:
    void request(long) -> request
    void cancel() -> cancel
org.slf4j.ILoggerFactory -> org.slf4j.ILoggerFactory:
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
org.slf4j.IMarkerFactory -> org.slf4j.IMarkerFactory:
    org.slf4j.Marker getMarker(java.lang.String) -> getMarker
org.slf4j.Logger -> org.slf4j.Logger:
    java.lang.String getName() -> getName
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
org.slf4j.LoggerFactory -> org.slf4j.LoggerFactory:
    int INITIALIZATION_STATE -> INITIALIZATION_STATE
    org.slf4j.helpers.SubstituteLoggerFactory SUBST_FACTORY -> SUBST_FACTORY
    org.slf4j.helpers.NOPLoggerFactory NOP_FALLBACK_FACTORY -> NOP_FALLBACK_FACTORY
    boolean DETECT_LOGGER_NAME_MISMATCH -> DETECT_LOGGER_NAME_MISMATCH
    java.lang.String[] API_COMPATIBILITY_LIST -> API_COMPATIBILITY_LIST
    java.lang.String STATIC_LOGGER_BINDER_PATH -> STATIC_LOGGER_BINDER_PATH
    105:106:void <init>() -> <init>
    124:128:void performInitialization() -> performInitialization
    131:137:boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String) -> messageContainsOrgSlf4jImplStaticLoggerBinder
    142:181:void bind() -> bind
    184:192:void fixSubstituteLoggers() -> fixSubstituteLoggers
    195:197:void failedBinding(java.lang.Throwable) -> failedBinding
    200:216:void replayEvents() -> replayEvents
    219:226:void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int) -> emitReplayOrSubstituionWarning
    229:245:void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent) -> replaySingleEvent
    248:253:void emitSubstitutionWarning() -> emitSubstitutionWarning
    256:259:void emitReplayWarning(int) -> emitReplayWarning
    263:285:void versionSanityCheck() -> versionSanityCheck
    296:312:java.util.Set findPossibleStaticLoggerBinderPathSet() -> findPossibleStaticLoggerBinderPathSet
    316:316:boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set) -> isAmbiguousStaticLoggerBinderPathSet
    325:332:void reportMultipleBindingAmbiguity(java.util.Set) -> reportMultipleBindingAmbiguity
    335:338:boolean isAndroid() -> isAndroid
    343:346:void reportActualBinding(java.util.Set) -> reportActualBinding
    357:358:org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    383:392:org.slf4j.Logger getLogger(java.lang.Class) -> getLogger
    396:396:boolean nonMatchingClasses(java.lang.Class,java.lang.Class) -> nonMatchingClasses
    408:428:org.slf4j.ILoggerFactory getILoggerFactory() -> getILoggerFactory
    85:290:void <clinit>() -> <clinit>
org.slf4j.MDC -> org.slf4j.MDC:
    org.slf4j.spi.MDCAdapter mdcAdapter -> mdcAdapter
    99:102:org.slf4j.spi.MDCAdapter bwCompatibleGetMDCAdapterFromBinder() -> bwCompatibleGetMDCAdapterFromBinder
    274:274:org.slf4j.spi.MDCAdapter getMDCAdapter() -> getMDCAdapter
    108:123:void <clinit>() -> <clinit>
org.slf4j.Marker -> org.slf4j.Marker:
    java.lang.String getName() -> getName
    boolean contains(org.slf4j.Marker) -> contains
    boolean equals(java.lang.Object) -> equals
org.slf4j.MarkerFactory -> org.slf4j.MarkerFactory:
    org.slf4j.IMarkerFactory MARKER_FACTORY -> MARKER_FACTORY
    61:64:org.slf4j.IMarkerFactory bwCompatibleGetMarkerFactoryFromBinder() -> bwCompatibleGetMarkerFactoryFromBinder
    89:89:org.slf4j.Marker getMarker(java.lang.String) -> getMarker
    71:78:void <clinit>() -> <clinit>
org.slf4j.event.EventRecodingLogger -> org.slf4j.event.EventRecodingLogger:
    java.lang.String name -> name
    org.slf4j.helpers.SubstituteLogger logger -> logger
    java.util.Queue eventQueue -> eventQueue
    15:19:void <init>(org.slf4j.helpers.SubstituteLogger,java.util.Queue) -> <init>
    22:22:java.lang.String getName() -> getName
    26:27:void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> recordEvent
    31:42:void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable) -> recordEvent
    45:45:boolean isTraceEnabled() -> isTraceEnabled
    49:50:void trace(java.lang.String) -> trace
    53:54:void trace(java.lang.String,java.lang.Object) -> trace
    57:58:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    61:62:void trace(java.lang.String,java.lang.Object[]) -> trace
    65:66:void trace(java.lang.String,java.lang.Throwable) -> trace
    95:95:boolean isDebugEnabled() -> isDebugEnabled
    99:100:void debug(java.lang.String) -> debug
    103:105:void debug(java.lang.String,java.lang.Object) -> debug
    108:110:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    113:114:void debug(java.lang.String,java.lang.Object[]) -> debug
    117:118:void debug(java.lang.String,java.lang.Throwable) -> debug
    145:145:boolean isInfoEnabled() -> isInfoEnabled
    149:150:void info(java.lang.String) -> info
    153:154:void info(java.lang.String,java.lang.Object) -> info
    157:158:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    161:162:void info(java.lang.String,java.lang.Object[]) -> info
    165:166:void info(java.lang.String,java.lang.Throwable) -> info
    194:194:boolean isWarnEnabled() -> isWarnEnabled
    198:199:void warn(java.lang.String) -> warn
    202:204:void warn(java.lang.String,java.lang.Object) -> warn
    207:208:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    211:212:void warn(java.lang.String,java.lang.Object[]) -> warn
    215:216:void warn(java.lang.String,java.lang.Throwable) -> warn
    244:244:boolean isErrorEnabled() -> isErrorEnabled
    248:249:void error(java.lang.String) -> error
    252:254:void error(java.lang.String,java.lang.Object) -> error
    257:259:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    262:264:void error(java.lang.String,java.lang.Object[]) -> error
    267:268:void error(java.lang.String,java.lang.Throwable) -> error
org.slf4j.event.Level -> org.slf4j.event.Level:
    org.slf4j.event.Level ERROR -> ERROR
    org.slf4j.event.Level WARN -> WARN
    org.slf4j.event.Level INFO -> INFO
    org.slf4j.event.Level DEBUG -> DEBUG
    org.slf4j.event.Level TRACE -> TRACE
    int levelInt -> levelInt
    java.lang.String levelStr -> levelStr
    org.slf4j.event.Level[] $VALUES -> $VALUES
    14:14:org.slf4j.event.Level[] values() -> values
    14:14:org.slf4j.event.Level valueOf(java.lang.String) -> valueOf
    21:24:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    34:34:java.lang.String toString() -> toString
    14:16:void <clinit>() -> <clinit>
org.slf4j.event.LoggingEvent -> org.slf4j.event.LoggingEvent:
org.slf4j.event.SubstituteLoggingEvent -> org.slf4j.event.SubstituteLoggingEvent:
    org.slf4j.event.Level level -> level
    org.slf4j.Marker marker -> marker
    java.lang.String loggerName -> loggerName
    org.slf4j.helpers.SubstituteLogger logger -> logger
    java.lang.String threadName -> threadName
    java.lang.String message -> message
    java.lang.Object[] argArray -> argArray
    long timeStamp -> timeStamp
    java.lang.Throwable throwable -> throwable
    6:6:void <init>() -> <init>
    23:24:void setLevel(org.slf4j.event.Level) -> setLevel
    31:32:void setMarker(org.slf4j.Marker) -> setMarker
    39:40:void setLoggerName(java.lang.String) -> setLoggerName
    43:43:org.slf4j.helpers.SubstituteLogger getLogger() -> getLogger
    47:48:void setLogger(org.slf4j.helpers.SubstituteLogger) -> setLogger
    55:56:void setMessage(java.lang.String) -> setMessage
    63:64:void setArgumentArray(java.lang.Object[]) -> setArgumentArray
    71:72:void setTimeStamp(long) -> setTimeStamp
    79:80:void setThreadName(java.lang.String) -> setThreadName
    87:88:void setThrowable(java.lang.Throwable) -> setThrowable
org.slf4j.helpers.BasicMarker -> org.slf4j.helpers.BasicMarker:
    java.lang.String name -> name
    java.util.List referenceList -> referenceList
    java.lang.String OPEN -> OPEN
    java.lang.String CLOSE -> CLOSE
    java.lang.String SEP -> SEP
    43:50:void <init>(java.lang.String) -> <init>
    53:53:java.lang.String getName() -> getName
    74:74:boolean hasReferences() -> hasReferences
    82:82:java.util.Iterator iterator() -> iterator
    90:105:boolean contains(org.slf4j.Marker) -> contains
    135:143:boolean equals(java.lang.Object) -> equals
    147:147:int hashCode() -> hashCode
    151:167:java.lang.String toString() -> toString
    130:132:void <clinit>() -> <clinit>
org.slf4j.helpers.BasicMarkerFactory -> org.slf4j.helpers.BasicMarkerFactory:
    java.util.concurrent.ConcurrentMap markerMap -> markerMap
    44:53:void <init>() -> <init>
    63:75:org.slf4j.Marker getMarker(java.lang.String) -> getMarker
org.slf4j.helpers.FormattingTuple -> org.slf4j.helpers.FormattingTuple:
    org.slf4j.helpers.FormattingTuple NULL -> NULL
    java.lang.String message -> message
    java.lang.Throwable throwable -> throwable
    java.lang.Object[] argArray -> argArray
    41:42:void <init>(java.lang.String) -> <init>
    44:48:void <init>(java.lang.String,java.lang.Object[],java.lang.Throwable) -> <init>
    51:51:java.lang.String getMessage() -> getMessage
    34:34:void <clinit>() -> <clinit>
org.slf4j.helpers.MarkerIgnoringBase -> org.slf4j.helpers.MarkerIgnoringBase:
    38:38:void <init>() -> <init>
    163:163:java.lang.String toString() -> toString
    38:38:java.lang.String getName() -> getName
org.slf4j.helpers.MessageFormatter -> org.slf4j.helpers.MessageFormatter:
    156:164:java.lang.Throwable getThrowableCandidate(java.lang.Object[]) -> getThrowableCandidate
    168:173:org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[]) -> arrayFormat
    177:183:java.lang.Object[] trimmedCopy(java.lang.Object[]) -> trimmedCopy
    188:240:org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[],java.lang.Throwable) -> arrayFormat
    245:252:boolean isEscapedDelimeter(java.lang.String,int) -> isEscapedDelimeter
    257:260:boolean isDoubleEscaped(java.lang.String,int) -> isDoubleEscaped
    266:295:void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Map) -> deeplyAppendParameter
    299:306:void safeObjectAppend(java.lang.StringBuilder,java.lang.Object) -> safeObjectAppend
    309:324:void objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Map) -> objectArrayAppend
    327:335:void booleanArrayAppend(java.lang.StringBuilder,boolean[]) -> booleanArrayAppend
    338:346:void byteArrayAppend(java.lang.StringBuilder,byte[]) -> byteArrayAppend
    349:357:void charArrayAppend(java.lang.StringBuilder,char[]) -> charArrayAppend
    360:368:void shortArrayAppend(java.lang.StringBuilder,short[]) -> shortArrayAppend
    371:379:void intArrayAppend(java.lang.StringBuilder,int[]) -> intArrayAppend
    382:390:void longArrayAppend(java.lang.StringBuilder,long[]) -> longArrayAppend
    393:401:void floatArrayAppend(java.lang.StringBuilder,float[]) -> floatArrayAppend
    404:412:void doubleArrayAppend(java.lang.StringBuilder,double[]) -> doubleArrayAppend
org.slf4j.helpers.NOPLogger -> org.slf4j.helpers.NOPLogger:
    org.slf4j.helpers.NOPLogger NOP_LOGGER -> NOP_LOGGER
    48:49:void <init>() -> <init>
    55:55:java.lang.String getName() -> getName
    63:63:boolean isTraceEnabled() -> isTraceEnabled
    69:69:void trace(java.lang.String) -> trace
    74:74:void trace(java.lang.String,java.lang.Object) -> trace
    79:79:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    84:84:void trace(java.lang.String,java.lang.Object[]) -> trace
    89:89:void trace(java.lang.String,java.lang.Throwable) -> trace
    96:96:boolean isDebugEnabled() -> isDebugEnabled
    102:102:void debug(java.lang.String) -> debug
    107:107:void debug(java.lang.String,java.lang.Object) -> debug
    112:112:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    117:117:void debug(java.lang.String,java.lang.Object[]) -> debug
    122:122:void debug(java.lang.String,java.lang.Throwable) -> debug
    130:130:boolean isInfoEnabled() -> isInfoEnabled
    136:136:void info(java.lang.String) -> info
    141:141:void info(java.lang.String,java.lang.Object) -> info
    146:146:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    151:151:void info(java.lang.String,java.lang.Object[]) -> info
    156:156:void info(java.lang.String,java.lang.Throwable) -> info
    163:163:boolean isWarnEnabled() -> isWarnEnabled
    169:169:void warn(java.lang.String) -> warn
    174:174:void warn(java.lang.String,java.lang.Object) -> warn
    179:179:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    184:184:void warn(java.lang.String,java.lang.Object[]) -> warn
    189:189:void warn(java.lang.String,java.lang.Throwable) -> warn
    193:193:boolean isErrorEnabled() -> isErrorEnabled
    199:199:void error(java.lang.String) -> error
    204:204:void error(java.lang.String,java.lang.Object) -> error
    209:209:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    214:214:void error(java.lang.String,java.lang.Object[]) -> error
    219:219:void error(java.lang.String,java.lang.Throwable) -> error
    42:42:void <clinit>() -> <clinit>
org.slf4j.helpers.NOPLoggerFactory -> org.slf4j.helpers.NOPLoggerFactory:
    40:42:void <init>() -> <init>
    45:45:org.slf4j.Logger getLogger(java.lang.String) -> getLogger
org.slf4j.helpers.NOPMDCAdapter -> org.slf4j.helpers.NOPMDCAdapter:
    40:40:void <init>() -> <init>
    56:56:java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
org.slf4j.helpers.NamedLoggerBase -> org.slf4j.helpers.NamedLoggerBase:
    java.lang.String name -> name
    41:41:void <init>() -> <init>
    48:48:java.lang.String getName() -> getName
org.slf4j.helpers.SubstituteLogger -> org.slf4j.helpers.SubstituteLogger:
    java.lang.String name -> name
    org.slf4j.Logger _delegate -> _delegate
    java.lang.Boolean delegateEventAware -> delegateEventAware
    java.lang.reflect.Method logMethodCache -> logMethodCache
    org.slf4j.event.EventRecodingLogger eventRecodingLogger -> eventRecodingLogger
    java.util.Queue eventQueue -> eventQueue
    boolean createdPostInitialization -> createdPostInitialization
    58:62:void <init>(java.lang.String,java.util.Queue,boolean) -> <init>
    65:65:java.lang.String getName() -> getName
    69:69:boolean isTraceEnabled() -> isTraceEnabled
    73:74:void trace(java.lang.String) -> trace
    77:78:void trace(java.lang.String,java.lang.Object) -> trace
    81:82:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    85:86:void trace(java.lang.String,java.lang.Object[]) -> trace
    89:90:void trace(java.lang.String,java.lang.Throwable) -> trace
    117:117:boolean isDebugEnabled() -> isDebugEnabled
    121:122:void debug(java.lang.String) -> debug
    125:126:void debug(java.lang.String,java.lang.Object) -> debug
    129:130:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    133:134:void debug(java.lang.String,java.lang.Object[]) -> debug
    137:138:void debug(java.lang.String,java.lang.Throwable) -> debug
    165:165:boolean isInfoEnabled() -> isInfoEnabled
    169:170:void info(java.lang.String) -> info
    173:174:void info(java.lang.String,java.lang.Object) -> info
    177:178:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    181:182:void info(java.lang.String,java.lang.Object[]) -> info
    185:186:void info(java.lang.String,java.lang.Throwable) -> info
    213:213:boolean isWarnEnabled() -> isWarnEnabled
    217:218:void warn(java.lang.String) -> warn
    221:222:void warn(java.lang.String,java.lang.Object) -> warn
    225:226:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    229:230:void warn(java.lang.String,java.lang.Object[]) -> warn
    233:234:void warn(java.lang.String,java.lang.Throwable) -> warn
    261:261:boolean isErrorEnabled() -> isErrorEnabled
    265:266:void error(java.lang.String) -> error
    269:270:void error(java.lang.String,java.lang.Object) -> error
    273:274:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    277:278:void error(java.lang.String,java.lang.Object[]) -> error
    281:282:void error(java.lang.String,java.lang.Throwable) -> error
    310:320:boolean equals(java.lang.Object) -> equals
    325:325:int hashCode() -> hashCode
    333:339:org.slf4j.Logger delegate() -> delegate
    344:347:org.slf4j.Logger getEventRecordingLogger() -> getEventRecordingLogger
    355:356:void setDelegate(org.slf4j.Logger) -> setDelegate
    359:368:boolean isDelegateEventAware() -> isDelegateEventAware
    372:380:void log(org.slf4j.event.LoggingEvent) -> log
    384:384:boolean isDelegateNull() -> isDelegateNull
    388:388:boolean isDelegateNOP() -> isDelegateNOP
org.slf4j.helpers.SubstituteLoggerFactory -> org.slf4j.helpers.SubstituteLoggerFactory:
    boolean postInitialization -> postInitialization
    java.util.Map loggers -> loggers
    java.util.concurrent.LinkedBlockingQueue eventQueue -> eventQueue
    43:49:void <init>() -> <init>
    52:57:org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    65:65:java.util.List getLoggers() -> getLoggers
    69:69:java.util.concurrent.LinkedBlockingQueue getEventQueue() -> getEventQueue
    73:74:void postInitialization() -> postInitialization
    77:79:void clear() -> clear
org.slf4j.helpers.Util -> org.slf4j.helpers.Util:
    org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER -> SECURITY_MANAGER
    boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED -> SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED
    36:37:void <init>() -> <init>
    40:49:java.lang.String safeGetSystemProperty(java.lang.String) -> safeGetSystemProperty
    53:57:boolean safeGetBooleanSystemProperty(java.lang.String) -> safeGetBooleanSystemProperty
    75:82:org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager() -> getSecurityManager
    88:90:org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager() -> safeCreateSecurityManager
    100:118:java.lang.Class getCallingClass() -> getCallingClass
    122:125:void report(java.lang.String,java.lang.Throwable) -> report
    128:129:void report(java.lang.String) -> report
    72:72:void <clinit>() -> <clinit>
org.slf4j.helpers.Util$1 -> org.slf4j.helpers.Util$1:
org.slf4j.helpers.Util$ClassContextSecurityManager -> org.slf4j.helpers.Util$ClassContextSecurityManager:
    65:65:void <init>() -> <init>
    67:67:java.lang.Class[] getClassContext() -> getClassContext
    65:65:void <init>(org.slf4j.helpers.Util$1) -> <init>
org.slf4j.impl.StaticLoggerBinder -> org.slf4j.impl.StaticLoggerBinder:
    java.lang.String REQUESTED_API_VERSION -> REQUESTED_API_VERSION
    org.slf4j.impl.StaticLoggerBinder SINGLETON -> SINGLETON
    java.lang.Object KEY -> KEY
    boolean initialized -> initialized
    ch.qos.logback.classic.LoggerContext defaultLoggerContext -> defaultLoggerContext
    ch.qos.logback.classic.util.ContextSelectorStaticBinder contextSelectorBinder -> contextSelectorBinder
    58:64:void <init>() -> <init>
    67:67:org.slf4j.impl.StaticLoggerBinder getSingleton() -> getSingleton
    84:97:void init() -> init
    100:107:org.slf4j.ILoggerFactory getLoggerFactory() -> getLoggerFactory
    111:111:java.lang.String getLoggerFactoryClassStr() -> getLoggerFactoryClassStr
    43:56:void <clinit>() -> <clinit>
org.slf4j.impl.StaticMDCBinder -> org.slf4j.impl.StaticMDCBinder:
    org.slf4j.impl.StaticMDCBinder SINGLETON -> SINGLETON
    32:33:void <init>() -> <init>
    40:40:org.slf4j.spi.MDCAdapter getMDCA() -> getMDCA
    30:30:void <clinit>() -> <clinit>
org.slf4j.impl.StaticMarkerBinder -> org.slf4j.impl.StaticMarkerBinder:
    org.slf4j.impl.StaticMarkerBinder SINGLETON -> SINGLETON
    org.slf4j.IMarkerFactory markerFactory -> markerFactory
    35:38:void <init>() -> <init>
    45:45:org.slf4j.IMarkerFactory getMarkerFactory() -> getMarkerFactory
    33:33:void <clinit>() -> <clinit>
org.slf4j.spi.LocationAwareLogger -> org.slf4j.spi.LocationAwareLogger:
org.slf4j.spi.MDCAdapter -> org.slf4j.spi.MDCAdapter:
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
reactor.core.CoreSubscriber -> reactor.core.CoreSubscriber:
    45:45:reactor.util.context.Context currentContext() -> currentContext
    void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
reactor.core.Disposable -> reactor.core.Disposable:
    void dispose() -> dispose
reactor.core.Disposables -> reactor.core.Disposables:
    reactor.core.Disposable DISPOSED -> DISPOSED
    79:79:reactor.core.Disposable disposed() -> disposed
    521:521:void <clinit>() -> <clinit>
reactor.core.Disposables$AlwaysDisposable -> reactor.core.Disposables$AlwaysDisposable:
    484:484:void <init>() -> <init>
    489:489:void dispose() -> dispose
reactor.core.Exceptions -> reactor.core.Exceptions:
    java.lang.Throwable TERMINATED -> TERMINATED
    java.util.concurrent.RejectedExecutionException REJECTED_EXECUTION -> REJECTED_EXECUTION
    java.util.concurrent.RejectedExecutionException NOT_TIME_CAPABLE_REJECTED_EXECUTION -> NOT_TIME_CAPABLE_REJECTED_EXECUTION
    68:90:boolean addThrowable(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Throwable) -> addThrowable
    107:115:java.lang.RuntimeException multiple(java.lang.Throwable[]) -> multiple
    153:154:java.lang.RuntimeException bubble(java.lang.Throwable) -> bubble
    162:162:java.lang.IllegalStateException duplicateOnSubscribeException() -> duplicateOnSubscribeException
    202:202:java.lang.IllegalStateException failWithOverflow() -> failWithOverflow
    215:215:java.lang.IllegalStateException failWithOverflow(java.lang.String) -> failWithOverflow
    246:249:java.util.concurrent.RejectedExecutionException failWithRejected(java.lang.Throwable) -> failWithRejected
    288:288:boolean isErrorCallbackNotImplemented(java.lang.Throwable) -> isErrorCallbackNotImplemented
    308:308:java.lang.IllegalArgumentException nullOrNegativeRequestException(long) -> nullOrNegativeRequestException
    322:326:java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    342:346:java.lang.Throwable terminate(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object) -> terminate
    359:366:void throwIfFatal(java.lang.Throwable) -> throwIfFatal
    377:386:void throwIfJvmFatal(java.lang.Throwable) -> throwIfJvmFatal
    397:401:java.lang.Throwable unwrap(java.lang.Throwable) -> unwrap
    480:495:java.lang.Throwable addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    47:504:void <clinit>() -> <clinit>
reactor.core.Exceptions$BubblingException -> reactor.core.Exceptions$BubblingException:
    524:525:void <init>(java.lang.Throwable) -> <init>
reactor.core.Exceptions$CompositeException -> reactor.core.Exceptions$CompositeException:
    511:512:void <init>() -> <init>
reactor.core.Exceptions$ErrorCallbackNotImplemented -> reactor.core.Exceptions$ErrorCallbackNotImplemented:
    560:560:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
reactor.core.Exceptions$OverflowException -> reactor.core.Exceptions$OverflowException:
    585:586:void <init>(java.lang.String) -> <init>
reactor.core.Exceptions$ReactiveException -> reactor.core.Exceptions$ReactiveException:
    536:537:void <init>(java.lang.Throwable) -> <init>
    540:541:void <init>(java.lang.String) -> <init>
    545:546:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
reactor.core.Exceptions$ReactorRejectedExecutionException -> reactor.core.Exceptions$ReactorRejectedExecutionException:
    592:593:void <init>(java.lang.String,java.lang.Throwable) -> <init>
reactor.core.Fuseable -> reactor.core.Fuseable:
reactor.core.Fuseable$ConditionalSubscriber -> reactor.core.Fuseable$ConditionalSubscriber:
reactor.core.Fuseable$QueueSubscription -> reactor.core.Fuseable$QueueSubscription:
    int requestFusion(int) -> requestFusion
    110:110:java.lang.Object peek() -> peek
    115:115:boolean add(java.lang.Object) -> add
    120:120:boolean offer(java.lang.Object) -> offer
    125:125:java.lang.Object remove() -> remove
    130:130:java.lang.Object element() -> element
    135:135:boolean contains(java.lang.Object) -> contains
    140:140:java.util.Iterator iterator() -> iterator
    145:145:java.lang.Object[] toArray() -> toArray
    150:150:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    155:155:boolean remove(java.lang.Object) -> remove
    160:160:boolean containsAll(java.util.Collection) -> containsAll
    165:165:boolean addAll(java.util.Collection) -> addAll
    170:170:boolean removeAll(java.util.Collection) -> removeAll
    175:175:boolean retainAll(java.util.Collection) -> retainAll
reactor.core.Fuseable$ScalarCallable -> reactor.core.Fuseable$ScalarCallable:
reactor.core.Fuseable$SynchronousSubscription -> reactor.core.Fuseable$SynchronousSubscription:
    190:193:int requestFusion(int) -> requestFusion
reactor.core.Scannable -> reactor.core.Scannable:
    252:258:reactor.core.Scannable from(java.lang.Object) -> from
    287:287:boolean isScanAvailable() -> isScanAvailable
    334:334:java.util.stream.Stream parents() -> parents
    java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    366:369:java.lang.Object scan(reactor.core.Scannable$Attr) -> scan
reactor.core.Scannable$Attr -> reactor.core.Scannable$Attr:
    reactor.core.Scannable$Attr ACTUAL -> ACTUAL
    reactor.core.Scannable$Attr BUFFERED -> BUFFERED
    reactor.core.Scannable$Attr CAPACITY -> CAPACITY
    reactor.core.Scannable$Attr CANCELLED -> CANCELLED
    reactor.core.Scannable$Attr DELAY_ERROR -> DELAY_ERROR
    reactor.core.Scannable$Attr ERROR -> ERROR
    reactor.core.Scannable$Attr LARGE_BUFFERED -> LARGE_BUFFERED
    reactor.core.Scannable$Attr NAME -> NAME
    reactor.core.Scannable$Attr PARENT -> PARENT
    reactor.core.Scannable$Attr PREFETCH -> PREFETCH
    reactor.core.Scannable$Attr REQUESTED_FROM_DOWNSTREAM -> REQUESTED_FROM_DOWNSTREAM
    reactor.core.Scannable$Attr TERMINATED -> TERMINATED
    reactor.core.Scannable$Attr TAGS -> TAGS
    java.lang.Object defaultValue -> defaultValue
    reactor.core.Scannable UNAVAILABLE_SCAN -> UNAVAILABLE_SCAN
    reactor.core.Scannable NULL_SCAN -> NULL_SCAN
    176:176:java.lang.Object defaultValue() -> defaultValue
    181:183:void <init>(java.lang.Object) -> <init>
    219:223:java.util.stream.Stream recurse(reactor.core.Scannable,reactor.core.Scannable$Attr) -> recurse
    61:205:void <clinit>() -> <clinit>
reactor.core.Scannable$Attr$1 -> reactor.core.Scannable$Attr$1:
    189:189:void <init>() -> <init>
    192:192:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    197:197:boolean isScanAvailable() -> isScanAvailable
reactor.core.Scannable$Attr$2 -> reactor.core.Scannable$Attr$2:
    205:205:void <init>() -> <init>
    208:208:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    213:213:boolean isScanAvailable() -> isScanAvailable
reactor.core.Scannable$Attr$3 -> reactor.core.Scannable$Attr$3:
    reactor.core.Scannable c -> c
    reactor.core.Scannable val$s -> val$s
    reactor.core.Scannable$Attr val$key -> val$key
    223:224:void <init>(reactor.core.Scannable,reactor.core.Scannable$Attr) -> <init>
    228:228:boolean hasNext() -> hasNext
    233:235:reactor.core.Scannable next() -> next
    223:223:java.lang.Object next() -> next
reactor.core.publisher.AssemblyOp -> reactor.core.publisher.AssemblyOp:
reactor.core.publisher.BlockingMonoSubscriber -> reactor.core.publisher.BlockingMonoSubscriber:
    27:27:void <init>() -> <init>
    31:35:void onNext(java.lang.Object) -> onNext
    39:43:void onError(java.lang.Throwable) -> onError
reactor.core.publisher.BlockingSingleSubscriber -> reactor.core.publisher.BlockingSingleSubscriber:
    java.lang.Object value -> value
    java.lang.Throwable error -> error
    org.reactivestreams.Subscription s -> s
    boolean cancelled -> cancelled
    41:42:void <init>() -> <init>
    46:50:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    54:55:void onComplete() -> onComplete
    59:65:void dispose() -> dispose
    75:92:java.lang.Object blockingGet() -> blockingGet
    106:129:java.lang.Object blockingGet(long,java.util.concurrent.TimeUnit) -> blockingGet
    137:143:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
reactor.core.publisher.ConnectableFlux -> reactor.core.publisher.ConnectableFlux:
    java.util.function.Consumer NOOP_DISCONNECT -> NOOP_DISCONNECT
    34:34:void <init>() -> <init>
    187:187:void lambda$static$1(reactor.core.Disposable) -> lambda$static$1
    185:185:void <clinit>() -> <clinit>
reactor.core.publisher.ConnectableFluxOnAssembly -> reactor.core.publisher.ConnectableFluxOnAssembly:
    reactor.core.publisher.ConnectableFlux source -> source
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException stacktrace -> stacktrace
    53:56:void <init>(reactor.core.publisher.ConnectableFlux) -> <init>
    60:61:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    71:74:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    79:79:java.lang.String toString() -> toString
reactor.core.publisher.FlatMapTracker -> reactor.core.publisher.FlatMapTracker:
    java.lang.Object[] array -> array
    int[] free -> free
    long producerIndex -> producerIndex
    long consumerIndex -> consumerIndex
    int size -> size
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater SIZE -> SIZE
    int[] FREE_EMPTY -> FREE_EMPTY
    968:972:void <init>() -> <init>
    java.lang.Object[] empty() -> empty
    java.lang.Object[] terminated() -> terminated
    java.lang.Object[] newArray(int) -> newArray
    void unsubscribeEntry(java.lang.Object) -> unsubscribeEntry
    void setIndex(java.lang.Object,int) -> setIndex
    997:1012:void unsubscribe() -> unsubscribe
    1015:1015:java.lang.Object[] get() -> get
    1019:1054:boolean add(java.lang.Object) -> add
    1058:1066:void remove(int) -> remove
    1069:1077:int pollFree() -> pollFree
    1081:1087:void offerFree(int) -> offerFree
    1090:1090:boolean isEmpty() -> isEmpty
    980:983:void <clinit>() -> <clinit>
reactor.core.publisher.Flux -> reactor.core.publisher.Flux:
    java.util.function.BiFunction TUPLE2_BIFUNCTION -> TUPLE2_BIFUNCTION
    java.util.function.Supplier LIST_SUPPLIER -> LIST_SUPPLIER
    java.util.function.Supplier SET_SUPPLIER -> SET_SUPPLIER
    java.util.function.BooleanSupplier ALWAYS_BOOLEAN_SUPPLIER -> ALWAYS_BOOLEAN_SUPPLIER
    java.util.function.Function HASHCODE_EXTRACTOR -> HASHCODE_EXTRACTOR
    java.util.function.BiPredicate OBJECT_EQUAL -> OBJECT_EQUAL
    java.util.function.Function IDENTITY_FUNCTION -> IDENTITY_FUNCTION
    104:104:void <init>() -> <init>
    4280:4280:int getPrefetch() -> getPrefetch
    4798:4803:reactor.core.publisher.Mono next() -> next
    6447:6448:void subscribe(org.reactivestreams.Subscriber) -> subscribe
    void subscribe(reactor.core.CoreSubscriber) -> subscribe
    7708:7712:reactor.core.publisher.Flux onAssembly(reactor.core.publisher.Flux) -> onAssembly
    7728:7732:reactor.core.publisher.Flux onLastAssembly(reactor.core.publisher.Flux) -> onLastAssembly
    7757:7757:java.lang.String toString() -> toString
    7819:7834:reactor.core.publisher.Mono convertToMono(java.util.concurrent.Callable) -> convertToMono
    7968:7968:boolean lambda$static$39() -> lambda$static$39
    7963:7973:void <clinit>() -> <clinit>
reactor.core.publisher.FluxCallableOnAssembly -> reactor.core.publisher.FluxCallableOnAssembly:
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException stacktrace -> stacktrace
    44:46:void <init>(reactor.core.publisher.Flux) -> <init>
    51:52:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    57:57:java.lang.Object call() -> call
reactor.core.publisher.FluxContextStart -> reactor.core.publisher.FluxContextStart:
    java.util.function.Function doOnContext -> doOnContext
    42:50:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.FluxContextStart$ContextStartSubscriber -> reactor.core.publisher.FluxContextStart$ContextStartSubscriber:
    reactor.core.CoreSubscriber actual -> actual
    reactor.core.Fuseable$ConditionalSubscriber actualConditional -> actualConditional
    reactor.util.context.Context context -> context
    reactor.core.Fuseable$QueueSubscription qs -> qs
    org.reactivestreams.Subscription s -> s
    64:73:void <init>(reactor.core.CoreSubscriber,reactor.util.context.Context) -> <init>
    78:81:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    86:86:reactor.util.context.Context currentContext() -> currentContext
    92:99:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    103:104:void onNext(java.lang.Object) -> onNext
    117:118:void onError(java.lang.Throwable) -> onError
    122:123:void onComplete() -> onComplete
    127:127:reactor.core.CoreSubscriber actual() -> actual
    132:133:void request(long) -> request
    137:138:void cancel() -> cancel
    142:145:int requestFusion(int) -> requestFusion
    151:154:java.lang.Object poll() -> poll
    159:159:boolean isEmpty() -> isEmpty
    164:167:void clear() -> clear
    171:171:int size() -> size
reactor.core.publisher.FluxFlatMap -> reactor.core.publisher.FluxFlatMap:
    java.util.function.Function mapper -> mapper
    boolean delayError -> delayError
    int maxConcurrency -> maxConcurrency
    java.util.function.Supplier mainQueueSupplier -> mainQueueSupplier
    int prefetch -> prefetch
    java.util.function.Supplier innerQueueSupplier -> innerQueueSupplier
    87:87:int getPrefetch() -> getPrefetch
    93:103:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    122:179:boolean trySubscribeScalarMap(org.reactivestreams.Publisher,reactor.core.CoreSubscriber,java.util.function.Function,boolean) -> trySubscribeScalarMap
reactor.core.publisher.FluxFlatMap$FlatMapInner -> reactor.core.publisher.FluxFlatMap$FlatMapInner:
    reactor.core.publisher.FluxFlatMap$FlatMapMain parent -> parent
    int prefetch -> prefetch
    int limit -> limit
    org.reactivestreams.Subscription s -> s
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> S
    long produced -> produced
    java.util.Queue queue -> queue
    boolean done -> done
    int sourceMode -> sourceMode
    int index -> index
    877:882:void <init>(reactor.core.publisher.FluxFlatMap$FlatMapMain,int) -> <init>
    886:906:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    910:916:void onNext(java.lang.Object) -> onNext
    920:922:void onError(java.lang.Throwable) -> onError
    927:929:void onComplete() -> onComplete
    933:941:void request(long) -> request
    945:945:reactor.util.context.Context currentContext() -> currentContext
    950:951:void cancel() -> cancel
    956:963:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    859:860:void <clinit>() -> <clinit>
reactor.core.publisher.FluxFlatMap$FlatMapMain -> reactor.core.publisher.FluxFlatMap$FlatMapMain:
    boolean delayError -> delayError
    int maxConcurrency -> maxConcurrency
    int prefetch -> prefetch
    int limit -> limit
    java.util.function.Function mapper -> mapper
    java.util.function.Supplier mainQueueSupplier -> mainQueueSupplier
    java.util.function.Supplier innerQueueSupplier -> innerQueueSupplier
    reactor.core.CoreSubscriber actual -> actual
    java.util.Queue scalarQueue -> scalarQueue
    java.lang.Throwable error -> error
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ERROR -> ERROR
    boolean done -> done
    boolean cancelled -> cancelled
    org.reactivestreams.Subscription s -> s
    long requested -> requested
    java.util.concurrent.atomic.AtomicLongFieldUpdater REQUESTED -> REQUESTED
    int wip -> wip
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> WIP
    reactor.core.publisher.FluxFlatMap$FlatMapInner[] EMPTY -> EMPTY
    reactor.core.publisher.FluxFlatMap$FlatMapInner[] TERMINATED -> TERMINATED
    int lastIndex -> lastIndex
    int produced -> produced
    236:245:void <init>(reactor.core.CoreSubscriber,java.util.function.Function,boolean,int,java.util.function.Supplier,int,java.util.function.Supplier) -> <init>
    249:249:reactor.core.CoreSubscriber actual() -> actual
    260:274:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    280:280:reactor.core.publisher.FluxFlatMap$FlatMapInner[] empty() -> empty
    286:286:reactor.core.publisher.FluxFlatMap$FlatMapInner[] terminated() -> terminated
    292:292:reactor.core.publisher.FluxFlatMap$FlatMapInner[] newArray(int) -> newArray
    297:298:void setIndex(reactor.core.publisher.FluxFlatMap$FlatMapInner,int) -> setIndex
    302:303:void unsubscribeEntry(reactor.core.publisher.FluxFlatMap$FlatMapInner) -> unsubscribeEntry
    307:311:void request(long) -> request
    315:324:void cancel() -> cancel
    328:334:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    339:374:void onNext(java.lang.Object) -> onNext
    377:382:java.util.Queue getOrCreateScalarQueue() -> getOrCreateScalarQueue
    387:398:void onError(java.lang.Throwable) -> onError
    402:408:void onComplete() -> onComplete
    411:474:void tryEmitScalar(java.lang.Object) -> tryEmitScalar
    477:515:void tryEmit(reactor.core.publisher.FluxFlatMap$FlatMapInner,java.lang.Object) -> tryEmit
    518:522:void drain() -> drain
    525:733:void drainLoop() -> drainLoop
    736:777:boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber) -> checkTerminated
    781:791:void innerError(reactor.core.publisher.FluxFlatMap$FlatMapInner,java.lang.Throwable) -> innerError
    794:802:boolean failOverflow(java.lang.Object,org.reactivestreams.Subscription) -> failOverflow
    830:835:void innerComplete(reactor.core.publisher.FluxFlatMap$FlatMapInner) -> innerComplete
    838:843:java.util.Queue getOrCreateInnerQueue(reactor.core.publisher.FluxFlatMap$FlatMapInner) -> getOrCreateInnerQueue
    182:182:void setIndex(java.lang.Object,int) -> setIndex
    182:182:void unsubscribeEntry(java.lang.Object) -> unsubscribeEntry
    182:182:java.lang.Object[] newArray(int) -> newArray
    182:182:java.lang.Object[] terminated() -> terminated
    182:182:java.lang.Object[] empty() -> empty
    198:223:void <clinit>() -> <clinit>
reactor.core.publisher.FluxHide -> reactor.core.publisher.FluxHide:
    39:40:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.FluxHide$HideSubscriber -> reactor.core.publisher.FluxHide$HideSubscriber:
    reactor.core.CoreSubscriber actual -> actual
    org.reactivestreams.Subscription s -> s
    47:49:void <init>(reactor.core.CoreSubscriber) -> <init>
    53:53:reactor.core.CoreSubscriber actual() -> actual
    58:59:void request(long) -> request
    63:64:void cancel() -> cancel
    68:70:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    74:75:void onNext(java.lang.Object) -> onNext
    79:80:void onError(java.lang.Throwable) -> onError
    84:85:void onComplete() -> onComplete
    90:92:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
reactor.core.publisher.FluxHide$SuppressFuseableSubscriber -> reactor.core.publisher.FluxHide$SuppressFuseableSubscriber:
    reactor.core.CoreSubscriber actual -> actual
    org.reactivestreams.Subscription s -> s
    103:106:void <init>(reactor.core.CoreSubscriber) -> <init>
    110:115:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    120:122:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    127:128:void onNext(java.lang.Object) -> onNext
    132:133:void onError(java.lang.Throwable) -> onError
    137:138:void onComplete() -> onComplete
    142:143:void request(long) -> request
    147:148:void cancel() -> cancel
    152:152:int requestFusion(int) -> requestFusion
    158:158:java.lang.Object poll() -> poll
    163:163:boolean isEmpty() -> isEmpty
    169:169:void clear() -> clear
    173:173:int size() -> size
    178:178:reactor.core.CoreSubscriber actual() -> actual
reactor.core.publisher.FluxMap -> reactor.core.publisher.FluxMap:
    java.util.function.Function mapper -> mapper
    56:63:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.FluxMap$MapConditionalSubscriber -> reactor.core.publisher.FluxMap$MapConditionalSubscriber:
    reactor.core.Fuseable$ConditionalSubscriber actual -> actual
    java.util.function.Function mapper -> mapper
    boolean done -> done
    org.reactivestreams.Subscription s -> s
    169:172:void <init>(reactor.core.Fuseable$ConditionalSubscriber,java.util.function.Function) -> <init>
    176:181:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    185:202:void onNext(java.lang.Object) -> onNext
    228:236:void onError(java.lang.Throwable) -> onError
    240:246:void onComplete() -> onComplete
    251:254:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    259:259:reactor.core.CoreSubscriber actual() -> actual
    264:265:void request(long) -> request
    269:270:void cancel() -> cancel
reactor.core.publisher.FluxMap$MapSubscriber -> reactor.core.publisher.FluxMap$MapSubscriber:
    reactor.core.CoreSubscriber actual -> actual
    java.util.function.Function mapper -> mapper
    boolean done -> done
    org.reactivestreams.Subscription s -> s
    76:79:void <init>(reactor.core.CoreSubscriber,java.util.function.Function) -> <init>
    83:88:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    92:109:void onNext(java.lang.Object) -> onNext
    113:121:void onError(java.lang.Throwable) -> onError
    125:131:void onComplete() -> onComplete
    136:139:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    144:144:reactor.core.CoreSubscriber actual() -> actual
    149:150:void request(long) -> request
    154:155:void cancel() -> cancel
reactor.core.publisher.FluxMapFuseable -> reactor.core.publisher.FluxMapFuseable:
    java.util.function.Function mapper -> mapper
    58:64:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber -> reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber:
    reactor.core.Fuseable$ConditionalSubscriber actual -> actual
    java.util.function.Function mapper -> mapper
    boolean done -> done
    reactor.core.Fuseable$QueueSubscription s -> s
    int sourceMode -> sourceMode
    217:220:void <init>(reactor.core.Fuseable$ConditionalSubscriber,java.util.function.Function) -> <init>
    225:228:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    234:238:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    242:264:void onNext(java.lang.Object) -> onNext
    289:297:void onError(java.lang.Throwable) -> onError
    301:307:void onComplete() -> onComplete
    311:311:reactor.core.CoreSubscriber actual() -> actual
    316:317:void request(long) -> request
    321:322:void cancel() -> cancel
    327:331:java.lang.Object poll() -> poll
    336:336:boolean isEmpty() -> isEmpty
    341:342:void clear() -> clear
    347:354:int requestFusion(int) -> requestFusion
    359:359:int size() -> size
reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber -> reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber:
    reactor.core.CoreSubscriber actual -> actual
    java.util.function.Function mapper -> mapper
    boolean done -> done
    reactor.core.Fuseable$QueueSubscription s -> s
    int sourceMode -> sourceMode
    80:83:void <init>(reactor.core.CoreSubscriber,java.util.function.Function) -> <init>
    88:92:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    96:117:void onNext(java.lang.Object) -> onNext
    121:129:void onError(java.lang.Throwable) -> onError
    133:139:void onComplete() -> onComplete
    143:146:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    151:151:reactor.core.CoreSubscriber actual() -> actual
    156:157:void request(long) -> request
    161:162:void cancel() -> cancel
    167:171:java.lang.Object poll() -> poll
    176:176:boolean isEmpty() -> isEmpty
    181:182:void clear() -> clear
    187:194:int requestFusion(int) -> requestFusion
    199:199:int size() -> size
reactor.core.publisher.FluxOnAssembly -> reactor.core.publisher.FluxOnAssembly:
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException snapshotStack -> snapshotStack
    boolean fullStackTrace -> fullStackTrace
    66:68:void <init>(reactor.core.publisher.Flux) -> <init>
    87:87:java.lang.String toString() -> toString
    91:171:java.lang.String getStacktrace(reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException) -> getStacktrace
    176:196:void fillStacktraceHeader(java.lang.StringBuilder,java.lang.Class,reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException) -> fillStacktraceHeader
    203:214:void subscribe(reactor.core.CoreSubscriber,reactor.core.publisher.Flux,reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException) -> subscribe
    217:238:java.lang.String extract(java.lang.String,boolean) -> extract
    244:255:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    410:414:int getParentOrThis(reactor.core.Scannable) -> getParentOrThis
    411:411:boolean lambda$getParentOrThis$0(reactor.core.Scannable) -> lambda$getParentOrThis$0
    58:58:void <clinit>() -> <clinit>
reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException -> reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException:
    boolean checkpointed -> checkpointed
    java.lang.String cached -> cached
    269:271:void <init>() -> <init>
    283:283:boolean isLight() -> isLight
    288:291:java.lang.String toString() -> toString
    295:295:java.lang.String stackFirst() -> stackFirst
reactor.core.publisher.FluxOnAssembly$OnAssemblyConditionalSubscriber -> reactor.core.publisher.FluxOnAssembly$OnAssemblyConditionalSubscriber:
    reactor.core.Fuseable$ConditionalSubscriber actualCS -> actualCS
    560:562:void <init>(reactor.core.Fuseable$ConditionalSubscriber,reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException,org.reactivestreams.Publisher) -> <init>
reactor.core.publisher.FluxOnAssembly$OnAssemblyException -> reactor.core.publisher.FluxOnAssembly$OnAssemblyException:
    java.util.List chainOrder -> chainOrder
    327:338:void <init>(org.reactivestreams.Publisher,reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException,java.lang.String) -> <init>
    341:347:void mapLine(int,java.lang.StringBuilder,java.lang.String) -> mapLine
    351:351:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    356:388:void add(org.reactivestreams.Publisher,java.lang.String) -> add
    393:405:java.lang.String getMessage() -> getMessage
reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber -> reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber:
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException snapshotStack -> snapshotStack
    org.reactivestreams.Publisher parent -> parent
    reactor.core.CoreSubscriber actual -> actual
    reactor.core.Fuseable$QueueSubscription qs -> qs
    org.reactivestreams.Subscription s -> s
    int fusionMode -> fusionMode
    429:433:void <init>(reactor.core.CoreSubscriber,reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException,org.reactivestreams.Publisher) -> <init>
    437:437:reactor.core.CoreSubscriber actual() -> actual
    443:445:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    450:451:void onNext(java.lang.Object) -> onNext
    455:456:void onError(java.lang.Throwable) -> onError
    460:461:void onComplete() -> onComplete
    465:473:int requestFusion(int) -> requestFusion
    477:497:java.lang.Throwable fail(java.lang.Throwable) -> fail
    503:507:boolean isEmpty() -> isEmpty
    513:518:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    522:522:int size() -> size
    527:528:void clear() -> clear
    532:533:void request(long) -> request
    537:538:void cancel() -> cancel
    544:548:java.lang.Object poll() -> poll
reactor.core.publisher.FluxOnErrorResume -> reactor.core.publisher.FluxOnErrorResume:
    java.util.function.Function nextFactory -> nextFactory
    47:48:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber -> reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber:
    java.util.function.Function nextFactory -> nextFactory
    boolean second -> second
    59:61:void <init>(reactor.core.CoreSubscriber,java.util.function.Function) -> <init>
    65:69:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    73:78:void onNext(java.lang.Object) -> onNext
    82:102:void onError(java.lang.Throwable) -> onError
reactor.core.publisher.FluxOperator -> reactor.core.publisher.FluxOperator:
    reactor.core.publisher.Flux source -> source
    44:46:void <init>(reactor.core.publisher.Flux) -> <init>
    51:53:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
reactor.core.publisher.FluxPeek -> reactor.core.publisher.FluxPeek:
    java.util.function.Consumer onSubscribeCall -> onSubscribeCall
    java.util.function.Consumer onNextCall -> onNextCall
    java.util.function.Consumer onErrorCall -> onErrorCall
    java.lang.Runnable onCompleteCall -> onCompleteCall
    java.lang.Runnable onAfterTerminateCall -> onAfterTerminateCall
    java.util.function.LongConsumer onRequestCall -> onRequestCall
    java.lang.Runnable onCancelCall -> onCancelCall
    77:84:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    268:268:java.util.function.Consumer onSubscribeCall() -> onSubscribeCall
    274:274:java.util.function.Consumer onNextCall() -> onNextCall
    280:280:java.util.function.Consumer onErrorCall() -> onErrorCall
    286:286:java.lang.Runnable onCompleteCall() -> onCompleteCall
    292:292:java.lang.Runnable onAfterTerminateCall() -> onAfterTerminateCall
    298:298:java.util.function.LongConsumer onRequestCall() -> onRequestCall
    304:304:java.lang.Runnable onCancelCall() -> onCancelCall
    325:328:void afterCompleteWithFailure(reactor.core.publisher.SignalPeek,java.lang.Throwable,reactor.util.context.Context) -> afterCompleteWithFailure
    349:352:void afterErrorWithFailure(reactor.core.publisher.SignalPeek,java.lang.Throwable,java.lang.Throwable,reactor.util.context.Context) -> afterErrorWithFailure
reactor.core.publisher.FluxPeek$PeekSubscriber -> reactor.core.publisher.FluxPeek$PeekSubscriber:
    reactor.core.CoreSubscriber actual -> actual
    reactor.core.publisher.SignalPeek parent -> parent
    org.reactivestreams.Subscription s -> s
    boolean done -> done
    96:99:void <init>(reactor.core.CoreSubscriber,reactor.core.publisher.SignalPeek) -> <init>
    104:107:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    112:116:reactor.util.context.Context currentContext() -> currentContext
    121:131:void request(long) -> request
    135:146:void cancel() -> cancel
    150:165:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    169:186:void onNext(java.lang.Object) -> onNext
    190:226:void onError(java.lang.Throwable) -> onError
    230:256:void onComplete() -> onComplete
    260:260:reactor.core.CoreSubscriber actual() -> actual
reactor.core.publisher.FluxPeekFuseable -> reactor.core.publisher.FluxPeekFuseable:
    java.util.function.Consumer onSubscribeCall -> onSubscribeCall
    java.util.function.Consumer onNextCall -> onNextCall
    java.util.function.Consumer onErrorCall -> onErrorCall
    java.lang.Runnable onCompleteCall -> onCompleteCall
    java.lang.Runnable onAfterTerminateCall -> onAfterTerminateCall
    java.util.function.LongConsumer onRequestCall -> onRequestCall
    java.lang.Runnable onCancelCall -> onCancelCall
    81:87:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    652:652:java.util.function.Consumer onSubscribeCall() -> onSubscribeCall
    658:658:java.util.function.Consumer onNextCall() -> onNextCall
    664:664:java.util.function.Consumer onErrorCall() -> onErrorCall
    670:670:java.lang.Runnable onCompleteCall() -> onCompleteCall
    676:676:java.lang.Runnable onAfterTerminateCall() -> onAfterTerminateCall
    682:682:java.util.function.LongConsumer onRequestCall() -> onRequestCall
    688:688:java.lang.Runnable onCancelCall() -> onCancelCall
reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber -> reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber:
    reactor.core.Fuseable$ConditionalSubscriber actual -> actual
    reactor.core.publisher.SignalPeek parent -> parent
    org.reactivestreams.Subscription s -> s
    boolean done -> done
    703:706:void <init>(reactor.core.Fuseable$ConditionalSubscriber,reactor.core.publisher.SignalPeek) -> <init>
    710:714:reactor.util.context.Context currentContext() -> currentContext
    719:729:void request(long) -> request
    733:744:void cancel() -> cancel
    748:763:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    768:771:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    776:792:void onNext(java.lang.Object) -> onNext
    816:852:void onError(java.lang.Throwable) -> onError
    856:882:void onComplete() -> onComplete
    886:886:reactor.core.CoreSubscriber actual() -> actual
reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber -> reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber:
    reactor.core.Fuseable$ConditionalSubscriber actual -> actual
    reactor.core.publisher.SignalPeek parent -> parent
    reactor.core.Fuseable$QueueSubscription s -> s
    int sourceMode -> sourceMode
    boolean done -> done
    374:377:void <init>(reactor.core.Fuseable$ConditionalSubscriber,reactor.core.publisher.SignalPeek) -> <init>
    381:386:reactor.util.context.Context currentContext() -> currentContext
    392:395:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    400:410:void request(long) -> request
    414:425:void cancel() -> cancel
    430:445:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    449:471:void onNext(java.lang.Object) -> onNext
    495:531:void onError(java.lang.Throwable) -> onError
    535:567:void onComplete() -> onComplete
    571:571:reactor.core.CoreSubscriber actual() -> actual
    577:617:java.lang.Object poll() -> poll
    622:622:boolean isEmpty() -> isEmpty
    627:628:void clear() -> clear
    633:640:int requestFusion(int) -> requestFusion
    645:645:int size() -> size
reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber -> reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber:
    reactor.core.CoreSubscriber actual -> actual
    reactor.core.publisher.SignalPeek parent -> parent
    reactor.core.Fuseable$QueueSubscription s -> s
    int sourceMode -> sourceMode
    boolean done -> done
    105:108:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    112:115:void <init>(reactor.core.CoreSubscriber,reactor.core.publisher.SignalPeek) -> <init>
    119:124:reactor.util.context.Context currentContext() -> currentContext
    129:139:void request(long) -> request
    143:154:void cancel() -> cancel
    159:174:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    178:200:void onNext(java.lang.Object) -> onNext
    204:240:void onError(java.lang.Throwable) -> onError
    244:277:void onComplete() -> onComplete
    281:281:reactor.core.CoreSubscriber actual() -> actual
    287:327:java.lang.Object poll() -> poll
    332:332:boolean isEmpty() -> isEmpty
    337:338:void clear() -> clear
    343:350:int requestFusion(int) -> requestFusion
    355:355:int size() -> size
reactor.core.publisher.FluxSubscribeOnCallable -> reactor.core.publisher.FluxSubscribeOnCallable:
    java.util.concurrent.Callable callable -> callable
    reactor.core.scheduler.Scheduler scheduler -> scheduler
    50:63:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription -> reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription:
    reactor.core.CoreSubscriber actual -> actual
    java.util.concurrent.Callable callable -> callable
    reactor.core.scheduler.Scheduler scheduler -> scheduler
    int state -> state
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater STATE -> STATE
    java.lang.Object value -> value
    int fusionState -> fusionState
    reactor.core.Disposable mainFuture -> mainFuture
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater MAIN_FUTURE -> MAIN_FUTURE
    reactor.core.Disposable requestFuture -> requestFuture
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater REQUEST_FUTURE -> REQUEST_FUTURE
    110:114:void <init>(reactor.core.CoreSubscriber,java.util.concurrent.Callable,reactor.core.scheduler.Scheduler) -> <init>
    118:118:reactor.core.CoreSubscriber actual() -> actual
    124:127:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    132:148:void cancel() -> cancel
    152:154:void clear() -> clear
    158:158:boolean isEmpty() -> isEmpty
    164:168:java.lang.Object poll() -> poll
    173:177:int requestFusion(int) -> requestFusion
    182:182:int size() -> size
    187:195:void setMainFuture(reactor.core.Disposable) -> setMainFuture
    200:208:void setRequestFuture(reactor.core.Disposable) -> setRequestFuture
    216:250:void run() -> run
    255:279:void request(long) -> request
    282:293:void emitValue() -> emitValue
    76:103:void <clinit>() -> <clinit>
reactor.core.publisher.FluxSubscribeOnValue -> reactor.core.publisher.FluxSubscribeOnValue:
    java.lang.Object value -> value
    reactor.core.scheduler.Scheduler scheduler -> scheduler
    53:70:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.FluxSubscribeOnValue$ScheduledEmpty -> reactor.core.publisher.FluxSubscribeOnValue$ScheduledEmpty:
    org.reactivestreams.Subscriber actual -> actual
    reactor.core.Disposable future -> future
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater FUTURE -> FUTURE
    reactor.core.Disposable FINISHED -> FINISHED
    225:227:void <init>(org.reactivestreams.Subscriber) -> <init>
    231:232:void request(long) -> request
    236:243:void cancel() -> cancel
    248:253:void run() -> run
    256:262:void setFuture(reactor.core.Disposable) -> setFuture
    266:266:int requestFusion(int) -> requestFusion
    272:272:java.lang.Void poll() -> poll
    277:277:boolean isEmpty() -> isEmpty
    282:282:int size() -> size
    288:288:void clear() -> clear
    213:213:java.lang.Object poll() -> poll
    218:223:void <clinit>() -> <clinit>
reactor.core.publisher.FluxSubscribeOnValue$ScheduledScalar -> reactor.core.publisher.FluxSubscribeOnValue$ScheduledScalar:
    reactor.core.CoreSubscriber actual -> actual
    java.lang.Object value -> value
    reactor.core.scheduler.Scheduler scheduler -> scheduler
    int once -> once
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater ONCE -> ONCE
    reactor.core.Disposable future -> future
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater FUTURE -> FUTURE
    reactor.core.Disposable FINISHED -> FINISHED
    int fusionState -> fusionState
    101:105:void <init>(reactor.core.CoreSubscriber,java.lang.Object,reactor.core.scheduler.Scheduler) -> <init>
    109:109:reactor.core.CoreSubscriber actual() -> actual
    115:125:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    130:150:void request(long) -> request
    154:162:void cancel() -> cancel
    167:176:void run() -> run
    180:184:int requestFusion(int) -> requestFusion
    190:194:java.lang.Object poll() -> poll
    199:199:boolean isEmpty() -> isEmpty
    204:204:int size() -> size
    209:210:void clear() -> clear
    83:93:void <clinit>() -> <clinit>
reactor.core.publisher.FluxZip -> reactor.core.publisher.FluxZip:
    org.reactivestreams.Publisher[] sources -> sources
    java.lang.Iterable sourcesIterable -> sourcesIterable
    java.util.function.Function zipper -> zipper
    java.util.function.Supplier queueSupplier -> queueSupplier
    int prefetch -> prefetch
    112:112:int getPrefetch() -> getPrefetch
    134:141:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    146:222:void handleIterableMode(reactor.core.CoreSubscriber,java.lang.Iterable) -> handleIterableMode
    227:268:void handleArrayMode(reactor.core.CoreSubscriber,org.reactivestreams.Publisher[]) -> handleArrayMode
    291:328:void handleBoth(reactor.core.CoreSubscriber,org.reactivestreams.Publisher[],java.lang.Object[],int,int) -> handleBoth
reactor.core.publisher.FluxZip$PairwiseZipper -> reactor.core.publisher.FluxZip$PairwiseZipper:
    java.util.function.BiFunction[] zippers -> zippers
    948:950:void <init>(java.util.function.BiFunction[]) -> <init>
    954:958:java.lang.Object apply(java.lang.Object[]) -> apply
    962:968:reactor.core.publisher.FluxZip$PairwiseZipper then(java.util.function.BiFunction) -> then
    943:943:java.lang.Object apply(java.lang.Object) -> apply
reactor.core.publisher.FluxZip$ZipCoordinator -> reactor.core.publisher.FluxZip$ZipCoordinator:
    reactor.core.CoreSubscriber actual -> actual
    reactor.core.publisher.FluxZip$ZipInner[] subscribers -> subscribers
    java.util.function.Function zipper -> zipper
    int wip -> wip
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> WIP
    long requested -> requested
    java.util.concurrent.atomic.AtomicLongFieldUpdater REQUESTED -> REQUESTED
    java.lang.Throwable error -> error
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ERROR -> ERROR
    boolean cancelled -> cancelled
    java.lang.Object[] current -> current
    556:565:void <init>(reactor.core.CoreSubscriber,java.util.function.Function,int,java.util.function.Supplier,int) -> <init>
    568:575:void subscribe(org.reactivestreams.Publisher[],int) -> subscribe
    579:583:void request(long) -> request
    587:592:void cancel() -> cancel
    596:596:reactor.core.CoreSubscriber actual() -> actual
    607:611:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    615:621:void error(java.lang.Throwable,int) -> error
    624:627:void cancelAll() -> cancelAll
    631:806:void drain() -> drain
    533:544:void <clinit>() -> <clinit>
reactor.core.publisher.FluxZip$ZipInner -> reactor.core.publisher.FluxZip$ZipInner:
    reactor.core.publisher.FluxZip$ZipCoordinator parent -> parent
    int prefetch -> prefetch
    int limit -> limit
    int index -> index
    java.util.function.Supplier queueSupplier -> queueSupplier
    java.util.Queue queue -> queue
    org.reactivestreams.Subscription s -> s
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> S
    long produced -> produced
    boolean done -> done
    int sourceMode -> sourceMode
    840:846:void <init>(reactor.core.publisher.FluxZip$ZipCoordinator,int,int,java.util.function.Supplier) -> <init>
    851:877:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    881:889:void onNext(java.lang.Object) -> onNext
    893:893:reactor.util.context.Context currentContext() -> currentContext
    898:904:void onError(java.lang.Throwable) -> onError
    908:910:void onComplete() -> onComplete
    915:922:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    926:927:void cancel() -> cancel
    930:940:void request(long) -> request
    826:827:void <clinit>() -> <clinit>
reactor.core.publisher.FluxZip$ZipSingleCoordinator -> reactor.core.publisher.FluxZip$ZipSingleCoordinator:
    java.util.function.Function zipper -> zipper
    java.lang.Object[] scalars -> scalars
    reactor.core.publisher.FluxZip$ZipSingleSubscriber[] subscribers -> subscribers
    int wip -> wip
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> WIP
    348:358:void <init>(reactor.core.CoreSubscriber,java.lang.Object[],int,java.util.function.Function) -> <init>
    361:372:void subscribe(int,int,org.reactivestreams.Publisher[]) -> subscribe
    375:392:void next(java.lang.Object,int) -> next
    395:402:void error(java.lang.Throwable,int) -> error
    405:409:void complete(int) -> complete
    413:415:void cancel() -> cancel
    420:423:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    432:437:void cancelAll() -> cancelAll
    340:341:void <clinit>() -> <clinit>
reactor.core.publisher.FluxZip$ZipSingleSubscriber -> reactor.core.publisher.FluxZip$ZipSingleSubscriber:
    reactor.core.publisher.FluxZip$ZipSingleCoordinator parent -> parent
    int index -> index
    org.reactivestreams.Subscription s -> s
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> S
    boolean done -> done
    456:459:void <init>(reactor.core.publisher.FluxZip$ZipSingleCoordinator,int) -> <init>
    463:463:reactor.util.context.Context currentContext() -> currentContext
    469:475:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    480:484:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    488:495:void onNext(java.lang.Object) -> onNext
    499:505:void onError(java.lang.Throwable) -> onError
    509:514:void onComplete() -> onComplete
    518:519:void dispose() -> dispose
    449:450:void <clinit>() -> <clinit>
reactor.core.publisher.Hooks -> reactor.core.publisher.Hooks:
    java.util.function.Function onEachOperatorHook -> onEachOperatorHook
    java.util.function.Function onLastOperatorHook -> onLastOperatorHook
    java.util.function.BiFunction onOperatorErrorHook -> onOperatorErrorHook
    java.util.function.Consumer onErrorDroppedHook -> onErrorDroppedHook
    java.util.function.Consumer onNextDroppedHook -> onNextDroppedHook
    java.util.LinkedHashMap onEachOperatorHooks -> onEachOperatorHooks
    java.util.LinkedHashMap onLastOperatorHooks -> onLastOperatorHooks
    java.util.LinkedHashMap onOperatorErrorHooks -> onOperatorErrorHooks
    reactor.util.Logger log -> log
    69:70:void onEachOperator(java.util.function.Function) -> onEachOperator
    98:106:void onEachOperator(java.lang.String,java.util.function.Function) -> onEachOperator
    412:422:java.util.function.Function createOrUpdateOpHook(java.util.Collection) -> createOrUpdateOpHook
    480:481:void <init>() -> <init>
    467:516:void <clinit>() -> <clinit>
reactor.core.publisher.Hooks$OnOperatorDebug -> reactor.core.publisher.Hooks$OnOperatorDebug:
    reactor.core.publisher.Hooks$OnOperatorDebug INSTANCE -> INSTANCE
    483:483:void <init>() -> <init>
    491:491:reactor.core.publisher.Hooks$OnOperatorDebug instance() -> instance
    497:512:org.reactivestreams.Publisher apply(org.reactivestreams.Publisher) -> apply
    483:483:java.lang.Object apply(java.lang.Object) -> apply
    486:486:void <clinit>() -> <clinit>
reactor.core.publisher.InnerConsumer -> reactor.core.publisher.InnerConsumer:
reactor.core.publisher.InnerOperator -> reactor.core.publisher.InnerOperator:
    32:32:reactor.util.context.Context currentContext() -> currentContext
reactor.core.publisher.InnerProducer -> reactor.core.publisher.InnerProducer:
    reactor.core.CoreSubscriber actual() -> actual
    42:45:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
reactor.core.publisher.Mono -> reactor.core.publisher.Mono:
    java.util.function.BiPredicate EQUALS_BIPREDICATE -> EQUALS_BIPREDICATE
    90:90:void <init>() -> <init>
    236:236:reactor.core.publisher.Mono empty() -> empty
    251:251:reactor.core.publisher.Mono error(java.lang.Throwable) -> error
    298:308:reactor.core.publisher.Mono from(org.reactivestreams.Publisher) -> from
    324:324:reactor.core.publisher.Mono fromCallable(java.util.concurrent.Callable) -> fromCallable
    452:452:reactor.core.publisher.Mono just(java.lang.Object) -> just
    576:576:reactor.core.publisher.Mono subscriberContext() -> subscriberContext
    754:754:reactor.core.publisher.Mono zip(reactor.core.publisher.Mono,reactor.core.publisher.Mono,java.util.function.BiFunction) -> zip
    890:890:reactor.core.publisher.Mono zip(java.lang.Iterable,java.util.function.Function) -> zip
    1159:1161:java.lang.Object block() -> block
    1183:1185:java.lang.Object block(java.time.Duration) -> block
    1586:1587:reactor.core.publisher.Mono doOnNext(java.util.function.Consumer) -> doOnNext
    2000:2000:reactor.core.publisher.Mono flatMap(java.util.function.Function) -> flatMap
    2253:2256:reactor.core.publisher.Mono map(java.util.function.Function) -> map
    2405:2405:reactor.core.publisher.Mono onErrorResume(java.util.function.Function) -> onErrorResume
    2539:2553:reactor.core.publisher.Mono publishOn(reactor.core.scheduler.Scheduler) -> publishOn
    2913:2914:void subscribe(org.reactivestreams.Subscriber) -> subscribe
    void subscribe(reactor.core.CoreSubscriber) -> subscribe
    2949:2949:reactor.core.publisher.Mono subscriberContext(reactor.util.context.Context) -> subscriberContext
    2972:2972:reactor.core.publisher.Mono subscriberContext(java.util.function.Function) -> subscriberContext
    3448:3456:reactor.core.publisher.Mono zipWith(reactor.core.publisher.Mono,java.util.function.BiFunction) -> zipWith
    3472:3476:reactor.core.publisher.Mono onAssembly(reactor.core.publisher.Mono) -> onAssembly
    3492:3496:reactor.core.publisher.Mono onLastAssembly(reactor.core.publisher.Mono) -> onLastAssembly
    3501:3501:java.lang.String toString() -> toString
    3519:3527:reactor.core.publisher.Mono doOnSignal(reactor.core.publisher.Mono,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable,java.util.function.LongConsumer,java.lang.Runnable) -> doOnSignal
    2949:2949:reactor.util.context.Context lambda$subscriberContext$30(reactor.util.context.Context,reactor.util.context.Context) -> lambda$subscriberContext$30
    3539:3539:void <clinit>() -> <clinit>
reactor.core.publisher.MonoCallable -> reactor.core.publisher.MonoCallable:
    java.util.concurrent.Callable callable -> callable
    41:43:void <init>(java.util.concurrent.Callable) -> <init>
    48:69:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    75:75:java.lang.Object block() -> block
    82:85:java.lang.Object block(java.time.Duration) -> block
    92:92:java.lang.Object call() -> call
reactor.core.publisher.MonoCallableOnAssembly -> reactor.core.publisher.MonoCallableOnAssembly:
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException stacktrace -> stacktrace
    48:50:void <init>(reactor.core.publisher.Mono) -> <init>
    56:56:java.lang.Object block() -> block
    64:67:java.lang.Object block(java.time.Duration) -> block
    74:84:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    90:90:java.lang.Object call() -> call
    95:95:java.lang.String toString() -> toString
reactor.core.publisher.MonoCurrentContext -> reactor.core.publisher.MonoCurrentContext:
    reactor.core.publisher.MonoCurrentContext INSTANCE -> INSTANCE
    26:26:void <init>() -> <init>
    32:34:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    28:28:void <clinit>() -> <clinit>
reactor.core.publisher.MonoEmpty -> reactor.core.publisher.MonoEmpty:
    org.reactivestreams.Publisher INSTANCE -> INSTANCE
    39:41:void <init>() -> <init>
    45:46:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    56:56:reactor.core.publisher.Mono instance() -> instance
    62:62:java.lang.Object call() -> call
    68:68:java.lang.Object block(java.time.Duration) -> block
    74:74:java.lang.Object block() -> block
    37:37:void <clinit>() -> <clinit>
reactor.core.publisher.MonoError -> reactor.core.publisher.MonoError:
    java.lang.Throwable error -> error
    36:38:void <init>(java.lang.Throwable) -> <init>
    42:42:java.lang.Object block(java.time.Duration) -> block
    47:47:java.lang.Object block() -> block
    52:53:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    57:60:java.lang.Object call() -> call
reactor.core.publisher.MonoFlatMap -> reactor.core.publisher.MonoFlatMap:
    java.util.function.Function mapper -> mapper
    46:48:void <init>(reactor.core.publisher.Mono,java.util.function.Function) -> <init>
    53:61:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.MonoFlatMap$FlatMapInner -> reactor.core.publisher.MonoFlatMap$FlatMapInner:
    reactor.core.publisher.MonoFlatMap$FlatMapMain parent -> parent
    org.reactivestreams.Subscription s -> s
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> S
    boolean done -> done
    206:208:void <init>(reactor.core.publisher.MonoFlatMap$FlatMapMain) -> <init>
    213:213:reactor.util.context.Context currentContext() -> currentContext
    219:224:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    229:232:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    236:242:void onNext(java.lang.Object) -> onNext
    246:252:void onError(java.lang.Throwable) -> onError
    256:261:void onComplete() -> onComplete
    264:265:void cancel() -> cancel
    199:200:void <clinit>() -> <clinit>
reactor.core.publisher.MonoFlatMap$FlatMapMain -> reactor.core.publisher.MonoFlatMap$FlatMapMain:
    java.util.function.Function mapper -> mapper
    reactor.core.publisher.MonoFlatMap$FlatMapInner second -> second
    boolean done -> done
    org.reactivestreams.Subscription s -> s
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> S
    80:83:void <init>(reactor.core.CoreSubscriber,java.util.function.Function) -> <init>
    93:97:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    102:105:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    109:156:void onNext(java.lang.Object) -> onNext
    160:166:void onError(java.lang.Throwable) -> onError
    170:175:void onComplete() -> onComplete
    179:182:void cancel() -> cancel
    185:186:void secondError(java.lang.Throwable) -> secondError
    189:190:void secondComplete() -> secondComplete
    73:74:void <clinit>() -> <clinit>
reactor.core.publisher.MonoFromFluxOperator -> reactor.core.publisher.MonoFromFluxOperator:
    reactor.core.publisher.Flux source -> source
    41:43:void <init>(reactor.core.publisher.Flux) -> <init>
    48:50:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
reactor.core.publisher.MonoFromPublisher -> reactor.core.publisher.MonoFromPublisher:
    org.reactivestreams.Publisher source -> source
    37:39:void <init>(org.reactivestreams.Publisher) -> <init>
    43:44:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    49:52:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
reactor.core.publisher.MonoJust -> reactor.core.publisher.MonoJust:
    java.lang.Object value -> value
    33:35:void <init>(java.lang.Object) -> <init>
    39:39:java.lang.Object call() -> call
    44:44:java.lang.Object block(java.time.Duration) -> block
    49:49:java.lang.Object block() -> block
    54:55:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.MonoMap -> reactor.core.publisher.MonoMap:
    java.util.function.Function mapper -> mapper
    43:45:void <init>(reactor.core.publisher.Mono,java.util.function.Function) -> <init>
    50:56:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.MonoMapFuseable -> reactor.core.publisher.MonoMapFuseable:
    java.util.function.Function mapper -> mapper
    46:48:void <init>(reactor.core.publisher.Mono,java.util.function.Function) -> <init>
    53:60:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.MonoNext -> reactor.core.publisher.MonoNext:
    35:36:void <init>(reactor.core.publisher.Flux) -> <init>
    40:41:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.MonoNext$NextSubscriber -> reactor.core.publisher.MonoNext$NextSubscriber:
    reactor.core.CoreSubscriber actual -> actual
    org.reactivestreams.Subscription s -> s
    boolean done -> done
    int wip -> wip
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> WIP
    56:58:void <init>(reactor.core.CoreSubscriber) -> <init>
    62:66:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    70:78:void onNext(java.lang.Object) -> onNext
    82:88:void onError(java.lang.Throwable) -> onError
    92:97:void onComplete() -> onComplete
    101:104:void request(long) -> request
    108:109:void cancel() -> cancel
    114:117:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    122:122:reactor.core.CoreSubscriber actual() -> actual
    53:54:void <clinit>() -> <clinit>
reactor.core.publisher.MonoOnAssembly -> reactor.core.publisher.MonoOnAssembly:
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException stacktrace -> stacktrace
    47:49:void <init>(reactor.core.publisher.Mono) -> <init>
    68:80:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    84:84:java.lang.String toString() -> toString
reactor.core.publisher.MonoOnErrorResume -> reactor.core.publisher.MonoOnErrorResume:
    java.util.function.Function nextFactory -> nextFactory
    38:40:void <init>(reactor.core.publisher.Mono,java.util.function.Function) -> <init>
    44:45:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.MonoOperator -> reactor.core.publisher.MonoOperator:
    reactor.core.publisher.Mono source -> source
    45:47:void <init>(reactor.core.publisher.Mono) -> <init>
    52:54:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
reactor.core.publisher.MonoPeek -> reactor.core.publisher.MonoPeek:
    java.util.function.Consumer onSubscribeCall -> onSubscribeCall
    java.util.function.Consumer onNextCall -> onNextCall
    java.util.function.Consumer onErrorCall -> onErrorCall
    java.lang.Runnable onCompleteCall -> onCompleteCall
    java.util.function.LongConsumer onRequestCall -> onRequestCall
    java.lang.Runnable onCancelCall -> onCancelCall
    54:61:void <init>(reactor.core.publisher.Mono,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable,java.util.function.LongConsumer,java.lang.Runnable) -> <init>
    66:72:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    77:77:java.util.function.Consumer onSubscribeCall() -> onSubscribeCall
    83:83:java.util.function.Consumer onNextCall() -> onNextCall
    89:89:java.util.function.Consumer onErrorCall() -> onErrorCall
    95:95:java.lang.Runnable onCompleteCall() -> onCompleteCall
    101:101:java.lang.Runnable onAfterTerminateCall() -> onAfterTerminateCall
    107:107:java.util.function.LongConsumer onRequestCall() -> onRequestCall
    113:113:java.lang.Runnable onCancelCall() -> onCancelCall
reactor.core.publisher.MonoPeekFuseable -> reactor.core.publisher.MonoPeekFuseable:
    java.util.function.Consumer onSubscribeCall -> onSubscribeCall
    java.util.function.Consumer onNextCall -> onNextCall
    java.util.function.Consumer onErrorCall -> onErrorCall
    java.lang.Runnable onCompleteCall -> onCompleteCall
    java.util.function.LongConsumer onRequestCall -> onRequestCall
    java.lang.Runnable onCancelCall -> onCancelCall
    56:64:void <init>(reactor.core.publisher.Mono,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable,java.util.function.LongConsumer,java.lang.Runnable) -> <init>
    69:75:void subscribe(reactor.core.CoreSubscriber) -> subscribe
    80:80:java.util.function.Consumer onSubscribeCall() -> onSubscribeCall
    86:86:java.util.function.Consumer onNextCall() -> onNextCall
    92:92:java.util.function.Consumer onErrorCall() -> onErrorCall
    98:98:java.lang.Runnable onCompleteCall() -> onCompleteCall
    104:104:java.lang.Runnable onAfterTerminateCall() -> onAfterTerminateCall
    110:110:java.util.function.LongConsumer onRequestCall() -> onRequestCall
    116:116:java.lang.Runnable onCancelCall() -> onCancelCall
reactor.core.publisher.MonoPublishOn -> reactor.core.publisher.MonoPublishOn:
    reactor.core.scheduler.Scheduler scheduler -> scheduler
    39:41:void <init>(reactor.core.publisher.Mono,reactor.core.scheduler.Scheduler) -> <init>
    45:46:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.MonoPublishOn$PublishOnSubscriber -> reactor.core.publisher.MonoPublishOn$PublishOnSubscriber:
    reactor.core.CoreSubscriber actual -> actual
    reactor.core.scheduler.Scheduler scheduler -> scheduler
    org.reactivestreams.Subscription s -> s
    reactor.core.Disposable future -> future
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater FUTURE -> FUTURE
    java.lang.Object value -> value
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater VALUE -> VALUE
    java.lang.Throwable error -> error
    77:80:void <init>(reactor.core.CoreSubscriber,reactor.core.scheduler.Scheduler) -> <init>
    85:89:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    94:94:reactor.core.CoreSubscriber actual() -> actual
    99:104:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    108:110:void onNext(java.lang.Object) -> onNext
    114:116:void onError(java.lang.Throwable) -> onError
    120:123:void onComplete() -> onComplete
    130:141:void trySchedule(org.reactivestreams.Subscription,java.lang.Throwable,java.lang.Object) -> trySchedule
    145:146:void request(long) -> request
    150:159:void cancel() -> cancel
    164:182:void run() -> run
    60:70:void <clinit>() -> <clinit>
reactor.core.publisher.MonoSubscribeOnCallable -> reactor.core.publisher.MonoSubscribeOnCallable:
    java.util.concurrent.Callable callable -> callable
    reactor.core.scheduler.Scheduler scheduler -> scheduler
    39:42:void <init>(java.util.concurrent.Callable,reactor.core.scheduler.Scheduler) -> <init>
    46:58:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.MonoSubscribeOnValue -> reactor.core.publisher.MonoSubscribeOnValue:
    java.lang.Object value -> value
    reactor.core.scheduler.Scheduler scheduler -> scheduler
    39:42:void <init>(java.lang.Object,reactor.core.scheduler.Scheduler) -> <init>
    46:63:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.MonoSubscriberContext -> reactor.core.publisher.MonoSubscriberContext:
    java.util.function.Function doOnContext -> doOnContext
    32:34:void <init>(reactor.core.publisher.Mono,java.util.function.Function) -> <init>
    40:48:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.MonoZip -> reactor.core.publisher.MonoZip:
    boolean delayError -> delayError
    org.reactivestreams.Publisher[] sources -> sources
    java.lang.Iterable sourcesIterable -> sourcesIterable
    java.util.function.Function zipper -> zipper
    55:60:void <init>(boolean,org.reactivestreams.Publisher,org.reactivestreams.Publisher,java.util.function.BiFunction) -> <init>
    64:69:void <init>(boolean,java.util.function.Function,org.reactivestreams.Publisher[]) -> <init>
    73:78:void <init>(boolean,java.util.function.Function,java.lang.Iterable) -> <init>
    83:95:reactor.core.publisher.Mono zipAdditionalSource(org.reactivestreams.Publisher,java.util.function.BiFunction) -> zipAdditionalSource
    102:127:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.MonoZip$ZipCoordinator -> reactor.core.publisher.MonoZip$ZipCoordinator:
    reactor.core.publisher.MonoZip$ZipInner[] subscribers -> subscribers
    boolean delayError -> delayError
    java.util.function.Function zipper -> zipper
    int done -> done
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater DONE -> DONE
    147:154:void <init>(reactor.core.CoreSubscriber,int,boolean,java.util.function.Function) -> <init>
    159:169:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    178:182:void subscribe(org.reactivestreams.Publisher[]) -> subscribe
    185:195:void signalError(java.lang.Throwable) -> signalError
    199:260:void signal() -> signal
    264:270:void cancel() -> cancel
    139:140:void <clinit>() -> <clinit>
reactor.core.publisher.MonoZip$ZipInner -> reactor.core.publisher.MonoZip$ZipInner:
    reactor.core.publisher.MonoZip$ZipCoordinator parent -> parent
    org.reactivestreams.Subscription s -> s
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> S
    java.lang.Object value -> value
    java.lang.Throwable error -> error
    287:289:void <init>(reactor.core.publisher.MonoZip$ZipCoordinator) -> <init>
    294:307:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    312:312:reactor.util.context.Context currentContext() -> currentContext
    317:323:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    327:331:void onNext(java.lang.Object) -> onNext
    335:337:void onError(java.lang.Throwable) -> onError
    341:344:void onComplete() -> onComplete
    347:348:void cancel() -> cancel
    279:280:void <clinit>() -> <clinit>
reactor.core.publisher.OperatorDisposables -> reactor.core.publisher.OperatorDisposables:
    reactor.core.Disposable DISPOSED -> DISPOSED
    189:189:boolean isDisposed(reactor.core.Disposable) -> isDisposed
    40:40:void <clinit>() -> <clinit>
reactor.core.publisher.Operators -> reactor.core.publisher.Operators:
    reactor.core.CoreSubscriber EMPTY_SUBSCRIBER -> EMPTY_SUBSCRIBER
    reactor.util.Logger log -> log
    59:63:long addCap(long,long) -> addCap
    79:85:long addCap(java.util.concurrent.atomic.AtomicLongFieldUpdater,java.lang.Object,long) -> addCap
    98:101:reactor.core.Fuseable$QueueSubscription as(org.reactivestreams.Subscription) -> as
    115:115:org.reactivestreams.Subscription cancelledSubscription() -> cancelledSubscription
    124:126:void complete(org.reactivestreams.Subscriber) -> complete
    174:176:void error(org.reactivestreams.Subscriber,java.lang.Throwable) -> error
    251:259:void onErrorDropped(java.lang.Throwable,reactor.util.context.Context) -> onErrorDropped
    272:284:void onNextDropped(java.lang.Object,reactor.util.context.Context) -> onNextDropped
    298:298:java.lang.Throwable onOperatorError(java.lang.Throwable,reactor.util.context.Context) -> onOperatorError
    316:316:java.lang.Throwable onOperatorError(org.reactivestreams.Subscription,java.lang.Throwable,reactor.util.context.Context) -> onOperatorError
    338:360:java.lang.Throwable onOperatorError(org.reactivestreams.Subscription,java.lang.Throwable,java.lang.Object,reactor.util.context.Context) -> onOperatorError
    376:376:java.lang.RuntimeException onRejectedExecution(java.lang.Throwable,reactor.util.context.Context) -> onRejectedExecution
    400:413:java.lang.RuntimeException onRejectedExecution(java.lang.Throwable,org.reactivestreams.Subscription,java.lang.Throwable,java.lang.Object,reactor.util.context.Context) -> onRejectedExecution
    475:479:void reportBadRequest(long) -> reportBadRequest
    488:492:void reportMoreProduced() -> reportMoreProduced
    500:504:void reportSubscriptionSet() -> reportSubscriptionSet
    517:517:org.reactivestreams.Subscription scalarSubscription(reactor.core.CoreSubscriber,java.lang.Object) -> scalarSubscription
    583:608:boolean setOnce(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,org.reactivestreams.Subscription) -> setOnce
    638:646:boolean terminate(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object) -> terminate
    658:665:boolean validate(org.reactivestreams.Subscription,org.reactivestreams.Subscription) -> validate
    674:678:boolean validate(long) -> validate
    717:728:reactor.core.CoreSubscriber toCoreSubscriber(org.reactivestreams.Subscriber) -> toCoreSubscriber
    797:797:long unboundedOrPrefetch(int) -> unboundedOrPrefetch
    801:801:int unboundedOrLimit(int) -> unboundedOrLimit
    804:805:void <init>() -> <init>
    807:1726:void <clinit>() -> <clinit>
reactor.core.publisher.Operators$1 -> reactor.core.publisher.Operators$1:
    807:807:void <init>() -> <init>
    810:812:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    816:818:void onNext(java.lang.Object) -> onNext
    822:824:void onError(java.lang.Throwable) -> onError
    828:830:void onComplete() -> onComplete
reactor.core.publisher.Operators$CancelledSubscription -> reactor.core.publisher.Operators$CancelledSubscription:
    reactor.core.publisher.Operators$CancelledSubscription INSTANCE -> INSTANCE
    834:834:void <init>() -> <init>
    840:843:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    849:849:void cancel() -> cancel
    854:854:void request(long) -> request
    835:835:void <clinit>() -> <clinit>
reactor.core.publisher.Operators$EmptySubscription -> reactor.core.publisher.Operators$EmptySubscription:
    reactor.core.publisher.Operators$EmptySubscription INSTANCE -> INSTANCE
    860:860:void <init>() -> <init>
    866:866:void cancel() -> cancel
    871:871:void clear() -> clear
    875:875:boolean isEmpty() -> isEmpty
    881:881:java.lang.Object poll() -> poll
    887:887:void request(long) -> request
    891:891:int requestFusion(int) -> requestFusion
    897:898:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    903:903:int size() -> size
    861:861:void <clinit>() -> <clinit>
reactor.core.publisher.Operators$MonoSubscriber -> reactor.core.publisher.Operators$MonoSubscriber:
    reactor.core.CoreSubscriber actual -> actual
    java.lang.Object value -> value
    int state -> state
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater STATE -> STATE
    1029:1031:void <init>(reactor.core.CoreSubscriber) -> <init>
    1035:1037:void cancel() -> cancel
    1042:1046:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    1051:1053:void clear() -> clear
    1063:1098:void complete(java.lang.Object) -> complete
    1105:1105:reactor.core.CoreSubscriber actual() -> actual
    1113:1113:boolean isCancelled() -> isCancelled
    1118:1118:boolean isEmpty() -> isEmpty
    1123:1124:void onComplete() -> onComplete
    1128:1129:void onError(java.lang.Throwable) -> onError
    1134:1135:void onNext(java.lang.Object) -> onNext
    1140:1140:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    1145:1151:java.lang.Object poll() -> poll
    1156:1183:void request(long) -> request
    1187:1191:int requestFusion(int) -> requestFusion
    1201:1202:void setValue(java.lang.Object) -> setValue
    1206:1206:int size() -> size
    1242:1243:void <clinit>() -> <clinit>
reactor.core.publisher.Operators$MultiSubscriptionSubscriber -> reactor.core.publisher.Operators$MultiSubscriptionSubscriber:
    reactor.core.CoreSubscriber actual -> actual
    boolean unbounded -> unbounded
    org.reactivestreams.Subscription subscription -> subscription
    long requested -> requested
    org.reactivestreams.Subscription missedSubscription -> missedSubscription
    long missedRequested -> missedRequested
    long missedProduced -> missedProduced
    int wip -> wip
    boolean cancelled -> cancelled
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater MISSED_SUBSCRIPTION -> MISSED_SUBSCRIPTION
    java.util.concurrent.atomic.AtomicLongFieldUpdater MISSED_REQUESTED -> MISSED_REQUESTED
    java.util.concurrent.atomic.AtomicLongFieldUpdater MISSED_PRODUCED -> MISSED_PRODUCED
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> WIP
    1280:1282:void <init>(reactor.core.CoreSubscriber) -> <init>
    1286:1286:reactor.core.CoreSubscriber actual() -> actual
    1291:1296:void cancel() -> cancel
    1301:1307:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    1315:1315:boolean isCancelled() -> isCancelled
    1320:1321:void onComplete() -> onComplete
    1325:1326:void onError(java.lang.Throwable) -> onError
    1330:1331:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    1366:1395:void producedOne() -> producedOne
    1399:1430:void request(long) -> request
    1433:1467:void set(org.reactivestreams.Subscription) -> set
    1475:1475:boolean shouldCancelCurrent() -> shouldCancelCurrent
    1479:1483:void drain() -> drain
    1486:1559:void drainLoop() -> drainLoop
    1563:1576:void <clinit>() -> <clinit>
reactor.core.publisher.Operators$ScalarSubscription -> reactor.core.publisher.Operators$ScalarSubscription:
    reactor.core.CoreSubscriber actual -> actual
    java.lang.Object value -> value
    int once -> once
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater ONCE -> ONCE
    1593:1596:void <init>(reactor.core.CoreSubscriber,java.lang.Object) -> <init>
    1600:1601:void cancel() -> cancel
    1605:1606:void clear() -> clear
    1610:1610:boolean isEmpty() -> isEmpty
    1615:1615:reactor.core.CoreSubscriber actual() -> actual
    1621:1625:java.lang.Object poll() -> poll
    1631:1634:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    1639:1648:void request(long) -> request
    1652:1655:int requestFusion(int) -> requestFusion
    1660:1660:int size() -> size
    1664:1665:void <clinit>() -> <clinit>
reactor.core.publisher.ParallelFlux -> reactor.core.publisher.ParallelFlux:
    66:66:void <init>() -> <init>
    int parallelism() -> parallelism
    843:843:reactor.core.publisher.Flux sequential() -> sequential
    856:858:reactor.core.publisher.Flux sequential(int) -> sequential
    void subscribe(reactor.core.CoreSubscriber[]) -> subscribe
    992:994:void subscribe(org.reactivestreams.Subscriber) -> subscribe
    1027:1027:java.lang.String toString() -> toString
    1039:1048:boolean validate(org.reactivestreams.Subscriber[]) -> validate
    1114:1114:int getPrefetch() -> getPrefetch
reactor.core.publisher.ParallelFluxOnAssembly -> reactor.core.publisher.ParallelFluxOnAssembly:
    reactor.core.publisher.ParallelFlux source -> source
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException stacktrace -> stacktrace
    49:52:void <init>(reactor.core.publisher.ParallelFlux) -> <init>
    80:80:int getPrefetch() -> getPrefetch
    85:85:int parallelism() -> parallelism
    91:115:void subscribe(reactor.core.CoreSubscriber[]) -> subscribe
    120:123:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    128:128:java.lang.String toString() -> toString
reactor.core.publisher.ParallelMergeSequential -> reactor.core.publisher.ParallelMergeSequential:
    reactor.core.publisher.ParallelFlux source -> source
    int prefetch -> prefetch
    java.util.function.Supplier queueSupplier -> queueSupplier
    44:51:void <init>(reactor.core.publisher.ParallelFlux,int,java.util.function.Supplier) -> <init>
    56:59:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    64:64:int getPrefetch() -> getPrefetch
    69:73:void subscribe(reactor.core.CoreSubscriber) -> subscribe
reactor.core.publisher.ParallelMergeSequential$MergeSequentialInner -> reactor.core.publisher.ParallelMergeSequential$MergeSequentialInner:
    reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain parent -> parent
    int prefetch -> prefetch
    int limit -> limit
    long produced -> produced
    org.reactivestreams.Subscription s -> s
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> S
    java.util.Queue queue -> queue
    boolean done -> done
    364:368:void <init>(reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain,int) -> <init>
    373:380:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    385:385:reactor.util.context.Context currentContext() -> currentContext
    390:393:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    397:398:void onNext(java.lang.Object) -> onNext
    402:403:void onError(java.lang.Throwable) -> onError
    407:408:void onComplete() -> onComplete
    411:418:void requestOne() -> requestOne
    421:422:void cancel() -> cancel
    425:430:java.util.Queue getQueue(java.util.function.Supplier) -> getQueue
    357:358:void <clinit>() -> <clinit>
reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain -> reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain:
    reactor.core.publisher.ParallelMergeSequential$MergeSequentialInner[] subscribers -> subscribers
    java.util.function.Supplier queueSupplier -> queueSupplier
    reactor.core.CoreSubscriber actual -> actual
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ERROR -> ERROR
    int wip -> wip
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> WIP
    long requested -> requested
    java.util.concurrent.atomic.AtomicLongFieldUpdater REQUESTED -> REQUESTED
    boolean cancelled -> cancelled
    int done -> done
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater DONE -> DONE
    java.lang.Throwable error -> error
    107:119:void <init>(reactor.core.CoreSubscriber,int,int,java.util.function.Supplier) -> <init>
    123:123:reactor.core.CoreSubscriber actual() -> actual
    129:134:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    144:148:void request(long) -> request
    152:161:void cancel() -> cancel
    164:167:void cancelAll() -> cancelAll
    170:173:void cleanup() -> cleanup
    176:210:void onNext(reactor.core.publisher.ParallelMergeSequential$MergeSequentialInner,java.lang.Object) -> onNext
    213:220:void onError(java.lang.Throwable) -> onError
    223:227:void onComplete() -> onComplete
    230:235:void drain() -> drain
    238:342:void drainLoop() -> drainLoop
    83:102:void <clinit>() -> <clinit>
reactor.core.publisher.Signal -> reactor.core.publisher.Signal:
    java.lang.Throwable getThrowable() -> getThrowable
    org.reactivestreams.Subscription getSubscription() -> getSubscription
    java.lang.Object get() -> get
    reactor.core.publisher.SignalType getType() -> getType
    169:169:boolean isOnError() -> isOnError
    179:179:boolean isOnComplete() -> isOnComplete
    189:189:boolean isOnSubscribe() -> isOnSubscribe
    198:198:boolean isOnNext() -> isOnNext
    209:221:void accept(org.reactivestreams.Subscriber) -> accept
    35:35:void accept(java.lang.Object) -> accept
reactor.core.publisher.SignalPeek -> reactor.core.publisher.SignalPeek:
    java.util.function.Consumer onSubscribeCall() -> onSubscribeCall
    java.util.function.Consumer onNextCall() -> onNextCall
    java.util.function.Consumer onErrorCall() -> onErrorCall
    java.lang.Runnable onCompleteCall() -> onCompleteCall
    java.lang.Runnable onAfterTerminateCall() -> onAfterTerminateCall
    java.util.function.LongConsumer onRequestCall() -> onRequestCall
    java.lang.Runnable onCancelCall() -> onCancelCall
    107:107:java.util.function.Consumer onCurrentContextCall() -> onCurrentContextCall
reactor.core.publisher.SignalType -> reactor.core.publisher.SignalType:
    reactor.core.publisher.SignalType SUBSCRIBE -> SUBSCRIBE
    reactor.core.publisher.SignalType REQUEST -> REQUEST
    reactor.core.publisher.SignalType CANCEL -> CANCEL
    reactor.core.publisher.SignalType ON_SUBSCRIBE -> ON_SUBSCRIBE
    reactor.core.publisher.SignalType ON_NEXT -> ON_NEXT
    reactor.core.publisher.SignalType ON_ERROR -> ON_ERROR
    reactor.core.publisher.SignalType ON_COMPLETE -> ON_COMPLETE
    reactor.core.publisher.SignalType AFTER_TERMINATE -> AFTER_TERMINATE
    reactor.core.publisher.SignalType CURRENT_CONTEXT -> CURRENT_CONTEXT
    reactor.core.publisher.SignalType ON_CONTEXT -> ON_CONTEXT
    reactor.core.publisher.SignalType[] $VALUES -> $VALUES
    23:23:reactor.core.publisher.SignalType[] values() -> values
    23:23:reactor.core.publisher.SignalType valueOf(java.lang.String) -> valueOf
    23:23:void <init>(java.lang.String,int) -> <init>
    68:88:java.lang.String toString() -> toString
    23:64:void <clinit>() -> <clinit>
reactor.core.publisher.SignalType$1 -> reactor.core.publisher.SignalType$1:
    int[] $SwitchMap$reactor$core$publisher$SignalType -> $SwitchMap$reactor$core$publisher$SignalType
    68:68:void <clinit>() -> <clinit>
reactor.core.publisher.StrictSubscriber -> reactor.core.publisher.StrictSubscriber:
    org.reactivestreams.Subscriber actual -> actual
    org.reactivestreams.Subscription s -> s
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> S
    long requested -> requested
    java.util.concurrent.atomic.AtomicLongFieldUpdater REQUESTED -> REQUESTED
    int wip -> wip
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> WIP
    java.lang.Throwable error -> error
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ERROR -> ERROR
    boolean done -> done
    64:66:void <init>(org.reactivestreams.Subscriber) -> <init>
    70:84:void onSubscribe(org.reactivestreams.Subscription) -> onSubscribe
    88:99:void onNext(java.lang.Object) -> onNext
    103:112:void onError(java.lang.Throwable) -> onError
    116:126:void onComplete() -> onComplete
    130:150:void request(long) -> request
    154:157:void cancel() -> cancel
    162:175:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> scanUnsafe
    40:58:void <clinit>() -> <clinit>
reactor.core.scheduler.ElasticScheduler -> reactor.core.scheduler.ElasticScheduler:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    java.util.concurrent.ThreadFactory EVICTOR_FACTORY -> EVICTOR_FACTORY
    reactor.core.scheduler.ElasticScheduler$CachedService SHUTDOWN -> SHUTDOWN
    java.util.concurrent.ThreadFactory factory -> factory
    int ttlSeconds -> ttlSeconds
    java.util.Queue cache -> cache
    java.util.Queue all -> all
    java.util.concurrent.ScheduledExecutorService evictor -> evictor
    boolean shutdown -> shutdown
    78:91:void <init>(java.util.concurrent.ThreadFactory,int) -> <init>
    99:99:java.util.concurrent.ScheduledExecutorService get() -> get
    114:128:void dispose() -> dispose
    131:146:reactor.core.scheduler.ElasticScheduler$CachedService pick() -> pick
    151:153:reactor.core.Disposable schedule(java.lang.Runnable) -> schedule
    186:196:void eviction() -> eviction
    50:50:java.lang.Object get() -> get
    55:57:java.lang.Thread lambda$static$0(java.lang.Runnable) -> lambda$static$0
    52:60:void <clinit>() -> <clinit>
reactor.core.scheduler.ElasticScheduler$CachedService -> reactor.core.scheduler.ElasticScheduler$CachedService:
    reactor.core.scheduler.ElasticScheduler parent -> parent
    java.util.concurrent.ScheduledExecutorService exec -> exec
    203:213:void <init>(reactor.core.scheduler.ElasticScheduler) -> <init>
    217:230:void dispose() -> dispose
reactor.core.scheduler.ElasticScheduler$DirectScheduleTask -> reactor.core.scheduler.ElasticScheduler$DirectScheduleTask:
    java.lang.Runnable delegate -> delegate
    reactor.core.scheduler.ElasticScheduler$CachedService cached -> cached
    238:241:void <init>(java.lang.Runnable,reactor.core.scheduler.ElasticScheduler$CachedService) -> <init>
    246:254:void run() -> run
reactor.core.scheduler.ElasticScheduler$ScheduledExecutorServiceExpiry -> reactor.core.scheduler.ElasticScheduler$ScheduledExecutorServiceExpiry:
    reactor.core.scheduler.ElasticScheduler$CachedService cached -> cached
    long expireMillis -> expireMillis
    262:265:void <init>(reactor.core.scheduler.ElasticScheduler$CachedService,long) -> <init>
reactor.core.scheduler.ImmediateScheduler -> reactor.core.scheduler.ImmediateScheduler:
    reactor.core.scheduler.ImmediateScheduler INSTANCE -> INSTANCE
    reactor.core.Disposable FINISHED -> FINISHED
    35:35:reactor.core.scheduler.Scheduler instance() -> instance
    38:40:void <init>() -> <init>
    46:47:reactor.core.Disposable schedule(java.lang.Runnable) -> schedule
    53:53:void dispose() -> dispose
    32:42:void <clinit>() -> <clinit>
reactor.core.scheduler.ParallelScheduler -> reactor.core.scheduler.ParallelScheduler:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    int n -> n
    java.util.concurrent.ThreadFactory factory -> factory
    java.util.concurrent.ScheduledExecutorService[] executors -> executors
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater EXECUTORS -> EXECUTORS
    java.util.concurrent.ScheduledExecutorService[] SHUTDOWN -> SHUTDOWN
    java.util.concurrent.ScheduledExecutorService TERMINATED -> TERMINATED
    int roundRobin -> roundRobin
    58:65:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    73:73:java.util.concurrent.ScheduledExecutorService get() -> get
    77:82:void init(int) -> init
    118:127:void dispose() -> dispose
    130:142:java.util.concurrent.ScheduledExecutorService pick() -> pick
    147:147:reactor.core.Disposable schedule(java.lang.Runnable) -> schedule
    36:36:java.lang.Object get() -> get
    38:54:void <clinit>() -> <clinit>
reactor.core.scheduler.Scheduler -> reactor.core.scheduler.Scheduler:
    reactor.core.Disposable schedule(java.lang.Runnable) -> schedule
    129:129:void dispose() -> dispose
reactor.core.scheduler.SchedulerTask -> reactor.core.scheduler.SchedulerTask:
    java.lang.Runnable task -> task
    java.util.concurrent.Future FINISHED -> FINISHED
    java.util.concurrent.Future CANCELLED -> CANCELLED
    java.util.concurrent.Future future -> future
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater FUTURE -> FUTURE
    java.lang.Thread thread -> thread
    40:42:void <init>(java.lang.Runnable) -> <init>
    47:66:java.lang.Void call() -> call
    71:72:void run() -> run
    76:87:void setFuture(java.util.concurrent.Future) -> setFuture
    99:110:void dispose() -> dispose
    27:27:java.lang.Object call() -> call
    32:32:java.lang.Void lambda$static$1() -> lambda$static$1
    31:31:java.lang.Void lambda$static$0() -> lambda$static$0
    31:36:void <clinit>() -> <clinit>
reactor.core.scheduler.Schedulers -> reactor.core.scheduler.Schedulers:
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    java.util.function.BiConsumer onHandleErrorHook -> onHandleErrorHook
    java.util.concurrent.atomic.AtomicReference CACHED_ELASTIC -> CACHED_ELASTIC
    java.util.concurrent.atomic.AtomicReference CACHED_PARALLEL -> CACHED_PARALLEL
    java.util.concurrent.atomic.AtomicReference CACHED_SINGLE -> CACHED_SINGLE
    java.util.function.Supplier ELASTIC_SUPPLIER -> ELASTIC_SUPPLIER
    java.util.function.Supplier PARALLEL_SUPPLIER -> PARALLEL_SUPPLIER
    java.util.function.Supplier SINGLE_SUPPLIER -> SINGLE_SUPPLIER
    reactor.core.scheduler.Schedulers$Factory DEFAULT -> DEFAULT
    reactor.core.scheduler.Schedulers$Factory factory -> factory
    reactor.util.Logger log -> log
    55:55:void <init>() -> <init>
    123:123:reactor.core.scheduler.Scheduler elastic() -> elastic
    132:132:reactor.core.scheduler.Scheduler immediate() -> immediate
    190:190:reactor.core.scheduler.Scheduler newElastic(java.lang.String,int,boolean) -> newElastic
    211:211:reactor.core.scheduler.Scheduler newElastic(int,java.util.concurrent.ThreadFactory) -> newElastic
    255:255:reactor.core.scheduler.Scheduler newParallel(java.lang.String,int,boolean) -> newParallel
    271:271:reactor.core.scheduler.Scheduler newParallel(int,java.util.concurrent.ThreadFactory) -> newParallel
    299:299:reactor.core.scheduler.Scheduler newSingle(java.lang.String,boolean) -> newSingle
    314:314:reactor.core.scheduler.Scheduler newSingle(java.util.concurrent.ThreadFactory) -> newSingle
    522:533:reactor.core.scheduler.Schedulers$CachedScheduler cache(java.util.concurrent.atomic.AtomicReference,java.lang.String,java.util.function.Supplier) -> cache
    572:585:void handleError(java.lang.Throwable) -> handleError
    659:669:reactor.core.Disposable directSchedule(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> directSchedule
    744:744:java.util.concurrent.ScheduledExecutorService decorateExecutorService(java.lang.String,java.util.function.Supplier) -> decorateExecutorService
    502:502:reactor.core.scheduler.Scheduler lambda$static$2() -> lambda$static$2
    497:499:reactor.core.scheduler.Scheduler lambda$static$1() -> lambda$static$1
    495:495:reactor.core.scheduler.Scheduler lambda$static$0() -> lambda$static$0
    63:536:void <clinit>() -> <clinit>
reactor.core.scheduler.Schedulers$1 -> reactor.core.scheduler.Schedulers$1:
    504:504:void <init>() -> <init>
reactor.core.scheduler.Schedulers$CachedScheduler -> reactor.core.scheduler.Schedulers$CachedScheduler:
    reactor.core.scheduler.Scheduler cached -> cached
    java.lang.String key -> key
    592:595:void <init>(java.lang.String,reactor.core.scheduler.Scheduler) -> <init>
    599:599:reactor.core.Disposable schedule(java.lang.Runnable) -> schedule
    632:632:void dispose() -> dispose
    647:647:reactor.core.scheduler.Scheduler get() -> get
    651:652:void _dispose() -> _dispose
    587:587:java.lang.Object get() -> get
reactor.core.scheduler.Schedulers$Factory -> reactor.core.scheduler.Schedulers$Factory:
    435:435:java.util.concurrent.ScheduledExecutorService decorateExecutorService(java.lang.String,java.util.function.Supplier) -> decorateExecutorService
    451:451:reactor.core.scheduler.Scheduler newElastic(int,java.util.concurrent.ThreadFactory) -> newElastic
    466:466:reactor.core.scheduler.Scheduler newParallel(int,java.util.concurrent.ThreadFactory) -> newParallel
    479:479:reactor.core.scheduler.Scheduler newSingle(java.util.concurrent.ThreadFactory) -> newSingle
reactor.core.scheduler.Schedulers$SchedulerThreadFactory -> reactor.core.scheduler.Schedulers$SchedulerThreadFactory:
    java.lang.String name -> name
    boolean daemon -> daemon
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    545:549:void <init>(java.lang.String,boolean,java.util.concurrent.atomic.AtomicLong) -> <init>
    553:556:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    561:563:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    567:567:java.lang.String get() -> get
    538:538:java.lang.Object get() -> get
reactor.core.scheduler.SingleScheduler -> reactor.core.scheduler.SingleScheduler:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    java.util.concurrent.ThreadFactory factory -> factory
    java.util.concurrent.ScheduledExecutorService executor -> executor
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater EXECUTORS -> EXECUTORS
    java.util.concurrent.ScheduledExecutorService TERMINATED -> TERMINATED
    54:57:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    65:67:java.util.concurrent.ScheduledExecutorService get() -> get
    71:73:void init() -> init
    105:112:void dispose() -> dispose
    116:116:reactor.core.Disposable schedule(java.lang.Runnable) -> schedule
    35:35:java.lang.Object get() -> get
    37:52:void <clinit>() -> <clinit>
reactor.util.Logger -> reactor.util.Logger:
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    void error(java.lang.String,java.lang.Throwable) -> error
reactor.util.Loggers -> reactor.util.Loggers:
    reactor.util.Loggers$LoggerFactory LOGGER_FACTORY -> LOGGER_FACTORY
    66:76:void resetLoggerFactory() -> resetLoggerFactory
    86:86:boolean isFallbackToJdk() -> isFallbackToJdk
    99:103:void useConsoleLoggers() -> useConsoleLoggers
    113:117:void useJdkLoggers() -> useJdkLoggers
    128:132:void useSl4jLoggers() -> useSl4jLoggers
    158:158:reactor.util.Logger getLogger(java.lang.Class) -> getLogger
    51:52:void <clinit>() -> <clinit>
reactor.util.Loggers$1 -> reactor.util.Loggers$1:
reactor.util.Loggers$ConsoleLogger -> reactor.util.Loggers$ConsoleLogger:
    java.lang.String name -> name
    java.io.PrintStream err -> err
    java.io.PrintStream log -> log
    436:440:void <init>(java.lang.String,java.io.PrintStream,java.io.PrintStream) -> <init>
    443:444:void <init>(java.lang.String) -> <init>
    453:462:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    487:487:boolean isDebugEnabled() -> isDebugEnabled
    492:493:void debug(java.lang.String) -> debug
    497:498:void debug(java.lang.String,java.lang.Object[]) -> debug
    502:504:void debug(java.lang.String,java.lang.Throwable) -> debug
    565:567:void error(java.lang.String,java.lang.Throwable) -> error
reactor.util.Loggers$ConsoleLoggerFactory -> reactor.util.Loggers$ConsoleLoggerFactory:
    java.util.HashMap consoleLoggers -> consoleLoggers
    570:570:void <init>() -> <init>
    576:576:reactor.util.Logger getLogger(java.lang.String) -> getLogger
    570:570:void <init>(reactor.util.Loggers$1) -> <init>
    572:572:void <clinit>() -> <clinit>
reactor.util.Loggers$JdkLogger -> reactor.util.Loggers$JdkLogger:
    java.util.logging.Logger logger -> logger
    294:296:void <init>(java.util.logging.Logger) -> <init>
    325:325:boolean isDebugEnabled() -> isDebugEnabled
    330:331:void debug(java.lang.String) -> debug
    335:336:void debug(java.lang.String,java.lang.Object[]) -> debug
    340:341:void debug(java.lang.String,java.lang.Throwable) -> debug
    400:401:void error(java.lang.String,java.lang.Throwable) -> error
    405:414:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
reactor.util.Loggers$JdkLoggerFactory -> reactor.util.Loggers$JdkLoggerFactory:
    418:418:void <init>() -> <init>
    422:422:reactor.util.Logger getLogger(java.lang.String) -> getLogger
    418:418:void <init>(reactor.util.Loggers$1) -> <init>
reactor.util.Loggers$LoggerFactory -> reactor.util.Loggers$LoggerFactory:
    reactor.util.Logger getLogger(java.lang.String) -> getLogger
reactor.util.Loggers$Slf4JLogger -> reactor.util.Loggers$Slf4JLogger:
    org.slf4j.Logger logger -> logger
    177:179:void <init>(org.slf4j.Logger) -> <init>
    208:208:boolean isDebugEnabled() -> isDebugEnabled
    213:214:void debug(java.lang.String) -> debug
    218:219:void debug(java.lang.String,java.lang.Object[]) -> debug
    223:224:void debug(java.lang.String,java.lang.Throwable) -> debug
    283:284:void error(java.lang.String,java.lang.Throwable) -> error
reactor.util.Loggers$Slf4JLoggerFactory -> reactor.util.Loggers$Slf4JLoggerFactory:
    165:165:void <init>() -> <init>
    169:169:reactor.util.Logger getLogger(java.lang.String) -> getLogger
    165:165:void <init>(reactor.util.Loggers$1) -> <init>
reactor.util.concurrent.Queues -> reactor.util.concurrent.Queues:
    int XS_BUFFER_SIZE -> XS_BUFFER_SIZE
    int SMALL_BUFFER_SIZE -> SMALL_BUFFER_SIZE
    java.util.function.Supplier ONE_SUPPLIER -> ONE_SUPPLIER
    java.util.function.Supplier XS_SUPPLIER -> XS_SUPPLIER
    java.util.function.Supplier SMALL_SUPPLIER -> SMALL_SUPPLIER
    java.util.function.Supplier SMALL_UNBOUNDED -> SMALL_UNBOUNDED
    java.util.function.Supplier XS_UNBOUNDED -> XS_UNBOUNDED
    88:88:int ceilingNextPowerOfTwo(int) -> ceilingNextPowerOfTwo
    99:117:java.util.function.Supplier get(int) -> get
    344:344:java.lang.Object lambda$static$5() -> lambda$static$5
    342:342:java.lang.Object lambda$static$4() -> lambda$static$4
    339:339:java.lang.Object lambda$static$3() -> lambda$static$3
    337:337:java.lang.Object lambda$static$2() -> lambda$static$2
    117:117:java.util.Queue lambda$get$0(int) -> lambda$get$0
    70:344:void <clinit>() -> <clinit>
reactor.util.concurrent.Queues$OneQueue -> reactor.util.concurrent.Queues$OneQueue:
    192:192:void <init>() -> <init>
    196:198:boolean add(java.lang.Object) -> add
    203:203:boolean addAll(java.util.Collection) -> addAll
    208:209:void clear() -> clear
    213:213:boolean contains(java.lang.Object) -> contains
    218:218:boolean containsAll(java.util.Collection) -> containsAll
    223:223:java.lang.Object element() -> element
    228:228:boolean isEmpty() -> isEmpty
    233:233:java.util.Iterator iterator() -> iterator
    238:242:boolean offer(java.lang.Object) -> offer
    248:248:java.lang.Object peek() -> peek
    254:258:java.lang.Object poll() -> poll
    263:263:java.lang.Object remove() -> remove
    268:268:boolean remove(java.lang.Object) -> remove
    273:273:boolean removeAll(java.util.Collection) -> removeAll
    278:278:boolean retainAll(java.util.Collection) -> retainAll
    283:283:int size() -> size
    288:292:java.lang.Object[] toArray() -> toArray
    298:305:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
reactor.util.concurrent.Queues$QueueIterator -> reactor.util.concurrent.Queues$QueueIterator:
    java.util.Queue queue -> queue
    315:317:void <init>(java.util.Queue) -> <init>
    321:321:boolean hasNext() -> hasNext
    326:326:java.lang.Object next() -> next
    331:332:void remove() -> remove
reactor.util.concurrent.SpscArrayQueue -> reactor.util.concurrent.SpscArrayQueue:
    44:45:void <init>(int) -> <init>
    49:57:boolean offer(java.lang.Object) -> offer
    63:71:java.lang.Object poll() -> poll
    77:78:java.lang.Object peek() -> peek
    83:83:boolean isEmpty() -> isEmpty
    88:89:void clear() -> clear
    93:101:int size() -> size
    106:106:boolean contains(java.lang.Object) -> contains
    111:111:java.util.Iterator iterator() -> iterator
    116:116:java.lang.Object[] toArray() -> toArray
    121:121:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    126:126:boolean remove(java.lang.Object) -> remove
    131:131:boolean containsAll(java.util.Collection) -> containsAll
    136:136:boolean addAll(java.util.Collection) -> addAll
    141:141:boolean removeAll(java.util.Collection) -> removeAll
    146:146:boolean retainAll(java.util.Collection) -> retainAll
    151:151:boolean add(java.lang.Object) -> add
    156:156:java.lang.Object remove() -> remove
    161:161:java.lang.Object element() -> element
reactor.util.concurrent.SpscArrayQueueCold -> reactor.util.concurrent.SpscArrayQueueCold:
    int mask -> mask
    172:174:void <init>(int) -> <init>
reactor.util.concurrent.SpscArrayQueueConsumer -> reactor.util.concurrent.SpscArrayQueueConsumer:
    long consumerIndex -> consumerIndex
    java.util.concurrent.atomic.AtomicLongFieldUpdater CONSUMER_INDEX -> CONSUMER_INDEX
    222:223:void <init>(int) -> <init>
    227:228:void <clinit>() -> <clinit>
reactor.util.concurrent.SpscArrayQueueP1 -> reactor.util.concurrent.SpscArrayQueueP1:
    184:185:void <init>(int) -> <init>
reactor.util.concurrent.SpscArrayQueueP2 -> reactor.util.concurrent.SpscArrayQueueP2:
    212:213:void <init>(int) -> <init>
reactor.util.concurrent.SpscArrayQueueP3 -> reactor.util.concurrent.SpscArrayQueueP3:
    240:241:void <init>(int) -> <init>
reactor.util.concurrent.SpscArrayQueueProducer -> reactor.util.concurrent.SpscArrayQueueProducer:
    long producerIndex -> producerIndex
    java.util.concurrent.atomic.AtomicLongFieldUpdater PRODUCER_INDEX -> PRODUCER_INDEX
    194:195:void <init>(int) -> <init>
    199:200:void <clinit>() -> <clinit>
reactor.util.concurrent.SpscLinkedArrayQueue -> reactor.util.concurrent.SpscLinkedArrayQueue:
    int mask -> mask
    long producerIndex -> producerIndex
    java.util.concurrent.atomic.AtomicLongFieldUpdater PRODUCER_INDEX -> PRODUCER_INDEX
    java.util.concurrent.atomic.AtomicReferenceArray producerArray -> producerArray
    long consumerIndex -> consumerIndex
    java.util.concurrent.atomic.AtomicLongFieldUpdater CONSUMER_INDEX -> CONSUMER_INDEX
    java.util.concurrent.atomic.AtomicReferenceArray consumerArray -> consumerArray
    java.lang.Object NEXT -> NEXT
    64:68:void <init>(int) -> <init>
    72:96:boolean offer(java.lang.Object) -> offer
    110:138:boolean test(java.lang.Object,java.lang.Object) -> test
    145:166:java.lang.Object poll() -> poll
    173:189:java.lang.Object peek() -> peek
    194:194:boolean isEmpty() -> isEmpty
    199:207:int size() -> size
    212:214:void clear() -> clear
    218:218:java.util.Iterator iterator() -> iterator
    50:62:void <clinit>() -> <clinit>
reactor.util.context.Context -> reactor.util.context.Context:
    50:50:reactor.util.context.Context empty() -> empty
    61:61:reactor.util.context.Context of(java.lang.Object,java.lang.Object) -> of
    java.lang.Object get(java.lang.Object) -> get
    186:189:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    boolean hasKey(java.lang.Object) -> hasKey
    221:221:boolean isEmpty() -> isEmpty
    reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> put
    java.util.stream.Stream stream() -> stream
    264:267:reactor.util.context.Context putAll(reactor.util.context.Context) -> putAll
    269:269:reactor.util.context.Context lambda$putAll$1(reactor.util.context.Context,reactor.util.context.Context) -> lambda$putAll$1
    268:268:reactor.util.context.Context lambda$putAll$0(reactor.util.context.Context,java.util.Map$Entry) -> lambda$putAll$0
reactor.util.context.Context0 -> reactor.util.context.Context0:
    reactor.util.context.Context0 INSTANCE -> INSTANCE
    23:23:void <init>() -> <init>
    29:31:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> put
    41:41:java.lang.Object get(java.lang.Object) -> get
    46:46:boolean hasKey(java.lang.Object) -> hasKey
    51:51:java.lang.String toString() -> toString
    56:56:java.util.stream.Stream stream() -> stream
    25:25:void <clinit>() -> <clinit>
reactor.util.context.Context1 -> reactor.util.context.Context1:
    java.lang.Object key -> key
    java.lang.Object value -> value
    28:31:void <init>(java.lang.Object,java.lang.Object) -> <init>
    35:42:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> put
    56:56:boolean hasKey(java.lang.Object) -> hasKey
    62:65:java.lang.Object get(java.lang.Object) -> get
    70:70:java.util.stream.Stream stream() -> stream
    75:75:java.lang.Object getKey() -> getKey
    80:80:java.lang.Object getValue() -> getValue
    85:85:java.lang.Object setValue(java.lang.Object) -> setValue
    90:90:java.lang.String toString() -> toString
reactor.util.context.Context2 -> reactor.util.context.Context2:
    java.lang.Object key1 -> key1
    java.lang.Object value1 -> value1
    java.lang.Object key2 -> key2
    java.lang.Object value2 -> value2
    31:36:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    40:51:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> put
    74:74:boolean hasKey(java.lang.Object) -> hasKey
    80:86:java.lang.Object get(java.lang.Object) -> get
    91:91:java.util.stream.Stream stream() -> stream
    98:98:java.lang.String toString() -> toString
reactor.util.context.Context3 -> reactor.util.context.Context3:
    java.lang.Object key1 -> key1
    java.lang.Object value1 -> value1
    java.lang.Object key2 -> key2
    java.lang.Object value2 -> value2
    java.lang.Object key3 -> key3
    java.lang.Object value3 -> value3
    35:42:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    46:61:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> put
    85:85:boolean hasKey(java.lang.Object) -> hasKey
    91:100:java.lang.Object get(java.lang.Object) -> get
    105:105:java.util.stream.Stream stream() -> stream
    113:113:java.lang.String toString() -> toString
reactor.util.context.Context4 -> reactor.util.context.Context4:
    java.lang.Object key1 -> key1
    java.lang.Object value1 -> value1
    java.lang.Object key2 -> key2
    java.lang.Object value2 -> value2
    java.lang.Object key3 -> key3
    java.lang.Object value3 -> value3
    java.lang.Object key4 -> key4
    java.lang.Object value4 -> value4
    38:47:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    51:70:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> put
    99:99:boolean hasKey(java.lang.Object) -> hasKey
    105:117:java.lang.Object get(java.lang.Object) -> get
    122:122:java.util.stream.Stream stream() -> stream
    131:131:java.lang.String toString() -> toString
reactor.util.context.Context5 -> reactor.util.context.Context5:
    java.lang.Object key1 -> key1
    java.lang.Object value1 -> value1
    java.lang.Object key2 -> key2
    java.lang.Object value2 -> value2
    java.lang.Object key3 -> key3
    java.lang.Object value3 -> value3
    java.lang.Object key4 -> key4
    java.lang.Object value4 -> value4
    java.lang.Object key5 -> key5
    java.lang.Object value5 -> value5
    41:52:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    56:79:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> put
    111:112:boolean hasKey(java.lang.Object) -> hasKey
    118:133:java.lang.Object get(java.lang.Object) -> get
    138:138:java.util.stream.Stream stream() -> stream
    148:148:java.lang.String toString() -> toString
reactor.util.context.ContextN -> reactor.util.context.ContextN:
    38:45:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    48:51:void <init>(java.util.Map,java.lang.Object,java.lang.Object) -> <init>
    54:57:void <init>(java.util.Map,java.util.Map) -> <init>
    61:63:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> put
    98:98:boolean hasKey(java.lang.Object) -> hasKey
    103:106:java.lang.Object get(java.lang.Object) -> get
    112:112:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    117:117:java.util.stream.Stream stream() -> stream
    122:122:java.util.Map$Entry apply(java.util.Map$Entry) -> apply
    127:132:reactor.util.context.Context putAll(reactor.util.context.Context) -> putAll
    137:137:java.lang.String toString() -> toString
    31:31:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    31:31:java.lang.Object apply(java.lang.Object) -> apply
reactor.util.function.Tuple2 -> reactor.util.function.Tuple2:
    java.lang.Object t1 -> t1
    java.lang.Object t2 -> t2
    45:48:void <init>(java.lang.Object,java.lang.Object) -> <init>
    56:56:java.lang.Object getT1() -> getT1
    65:65:java.lang.Object getT2() -> getT2
    93:93:java.util.List toList() -> toList
    102:102:java.lang.Object[] toArray() -> toArray
    107:107:java.util.Iterator iterator() -> iterator
    112:121:boolean equals(java.lang.Object) -> equals
    127:130:int hashCode() -> hashCode
    139:139:int size() -> size
    149:149:java.lang.String toString() -> toString
reactor.util.function.Tuple3 -> reactor.util.function.Tuple3:
    java.lang.Object t3 -> t3
    40:42:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    50:50:java.lang.Object getT3() -> getT3
    70:70:java.lang.Object[] toArray() -> toArray
    75:82:boolean equals(java.lang.Object) -> equals
    87:87:int size() -> size
    92:94:int hashCode() -> hashCode
reactor.util.function.Tuple4 -> reactor.util.function.Tuple4:
    java.lang.Object t4 -> t4
    41:43:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    73:73:java.lang.Object[] toArray() -> toArray
    78:85:boolean equals(java.lang.Object) -> equals
    91:93:int hashCode() -> hashCode
    98:98:int size() -> size
reactor.util.function.Tuple5 -> reactor.util.function.Tuple5:
    java.lang.Object t5 -> t5
    42:44:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    76:76:java.lang.Object[] toArray() -> toArray
    81:88:boolean equals(java.lang.Object) -> equals
    94:96:int hashCode() -> hashCode
    101:101:int size() -> size
reactor.util.function.Tuple6 -> reactor.util.function.Tuple6:
    java.lang.Object t6 -> t6
    43:45:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    79:79:java.lang.Object[] toArray() -> toArray
    84:91:boolean equals(java.lang.Object) -> equals
    97:99:int hashCode() -> hashCode
    104:104:int size() -> size
reactor.util.function.Tuple7 -> reactor.util.function.Tuple7:
    java.lang.Object t7 -> t7
    44:46:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    82:82:java.lang.Object[] toArray() -> toArray
    87:94:boolean equals(java.lang.Object) -> equals
    100:102:int hashCode() -> hashCode
    107:107:int size() -> size
reactor.util.function.Tuple8 -> reactor.util.function.Tuple8:
    java.lang.Object t8 -> t8
    46:48:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    86:86:java.lang.Object[] toArray() -> toArray
    91:98:boolean equals(java.lang.Object) -> equals
    104:106:int hashCode() -> hashCode
    111:111:int size() -> size
reactor.util.function.Tuples -> reactor.util.function.Tuples:
    reactor.util.function.Tuples empty -> empty
    41:61:reactor.util.function.Tuple2 fromArray(java.lang.Object[]) -> fromArray
    74:74:reactor.util.function.Tuple2 of(java.lang.Object,java.lang.Object) -> of
    89:89:reactor.util.function.Tuple3 of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    106:106:reactor.util.function.Tuple4 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    130:130:reactor.util.function.Tuple5 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    157:157:reactor.util.function.Tuple6 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    187:187:reactor.util.function.Tuple7 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    220:220:reactor.util.function.Tuple8 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    465:465:reactor.util.function.Tuple2 apply(java.lang.Object) -> apply
    479:489:java.lang.StringBuilder tupleStringRepresentation(java.lang.Object[]) -> tupleStringRepresentation
    495:495:void <init>() -> <init>
    28:28:java.lang.Object apply(java.lang.Object) -> apply
    493:493:void <clinit>() -> <clinit>
reactor.util.function.Tuples$1 -> reactor.util.function.Tuples$1:
    493:493:void <init>() -> <init>
    493:493:java.lang.Object apply(java.lang.Object) -> apply
