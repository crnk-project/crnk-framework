openapi: 3.0.1
info:
  title: Generated Title
  description: Generated Description
  version: 0.1.0
paths:
  /comment:
    get:
      description: Retrieve a List of comment resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[value]
        in: query
        description: Filter by value (csv)
        schema:
          type: string
      - name: filter[post]
        in: query
        description: Filter by post (csv)
        schema:
          type: string
      - name: filter[related]
        in: query
        description: Filter by related (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/commentFields'
      - $ref: '#/components/parameters/commentInclude'
      - $ref: '#/components/parameters/commentSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/commentResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Comment
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/commentResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /comment/{id}:
    get:
      description: Retrieve a comment resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      - $ref: '#/components/parameters/commentFields'
      - $ref: '#/components/parameters/commentInclude'
      responses:
        200:
          $ref: '#/components/responses/commentResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a Comment
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Comment
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/commentResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /comment/{id}/nestedRelated:
    get:
      description: Retrieve nestedRelated related to a comment resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create comment relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete comment relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update comment relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /comment/{id}/post:
    get:
      description: Retrieve post related to a comment resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      responses:
        200:
          $ref: '#/components/responses/postResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create comment relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete comment relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update comment relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /comment/{id}/relationships/nestedRelated:
    get:
      description: Retrieve nestedRelated references related to a comment resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create comment relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete comment relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update comment relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /comment/{id}/relationships/post:
    get:
      description: Retrieve post references related to a comment resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create comment relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete comment relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update comment relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header:
    get:
      description: Retrieve a List of header resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[value]
        in: query
        description: Filter by value (csv)
        schema:
          type: string
      - name: filter[post]
        in: query
        description: Filter by post (csv)
        schema:
          type: string
      - name: filter[related]
        in: query
        description: Filter by related (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/headerFields'
      - $ref: '#/components/parameters/headerInclude'
      - $ref: '#/components/parameters/headerSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/headerResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Header
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/headerResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header/{id}:
    get:
      description: Retrieve a header resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      - $ref: '#/components/parameters/headerFields'
      - $ref: '#/components/parameters/headerInclude'
      responses:
        200:
          $ref: '#/components/responses/headerResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a Header
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Header
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/headerResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header/{id}/nestedRelated:
    get:
      description: Retrieve nestedRelated related to a header resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create header relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete header relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update header relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header/{id}/post:
    get:
      description: Retrieve post related to a header resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      responses:
        200:
          $ref: '#/components/responses/postResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create header relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete header relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update header relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header/{id}/relationships/nestedRelated:
    get:
      description: Retrieve nestedRelated references related to a header resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create header relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete header relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update header relationship to a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header/{id}/relationships/post:
    get:
      description: Retrieve post references related to a header resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create header relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete header relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update header relationship to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /nestedRelated:
    get:
      description: Retrieve a List of nestedRelated resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      - $ref: '#/components/parameters/nestedRelatedSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a NestedRelated
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/nestedRelatedResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /nestedRelated/{id}:
    get:
      description: Retrieve a nestedRelated resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/nestedRelatedPrimaryKey'
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a NestedRelated
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/nestedRelatedPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a NestedRelated
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/nestedRelatedPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/nestedRelatedResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post:
    get:
      description: Retrieve a List of post resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[comments]
        in: query
        description: Filter by comments (csv)
        schema:
          type: string
      - name: filter[header]
        in: query
        description: Filter by header (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      - $ref: '#/components/parameters/postSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/postResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Post
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/postResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post/{id}:
    get:
      description: Retrieve a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      responses:
        200:
          $ref: '#/components/responses/postResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a Post
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Post
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/postResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post/{id}/comment:
    get:
      description: Retrieve comment related to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[value]
        in: query
        description: Filter by value (csv)
        schema:
          type: string
      - name: filter[post]
        in: query
        description: Filter by post (csv)
        schema:
          type: string
      - name: filter[related]
        in: query
        description: Filter by related (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/commentFields'
      - $ref: '#/components/parameters/commentInclude'
      responses:
        200:
          $ref: '#/components/responses/commentResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create post relationship to a comment resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete post relationship to a comment resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update post relationship to a comment resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post/{id}/header:
    get:
      description: Retrieve header related to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      - $ref: '#/components/parameters/headerFields'
      - $ref: '#/components/parameters/headerInclude'
      responses:
        200:
          $ref: '#/components/responses/headerResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create post relationship to a header resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete post relationship to a header resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update post relationship to a header resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post/{id}/relationships/comment:
    get:
      description: Retrieve comment references related to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[value]
        in: query
        description: Filter by value (csv)
        schema:
          type: string
      - name: filter[post]
        in: query
        description: Filter by post (csv)
        schema:
          type: string
      - name: filter[related]
        in: query
        description: Filter by related (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/commentFields'
      - $ref: '#/components/parameters/commentInclude'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create post relationship to a comment resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete post relationship to a comment resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update post relationship to a comment resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post/{id}/relationships/header:
    get:
      description: Retrieve header references related to a post resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      - $ref: '#/components/parameters/headerFields'
      - $ref: '#/components/parameters/headerInclude'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create post relationship to a header resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete post relationship to a header resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update post relationship to a header resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /primitiveAttribute:
    get:
      description: Retrieve a List of primitiveAttribute resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[stringValue]
        in: query
        description: Filter by stringValue (csv)
        schema:
          type: string
      - name: filter[intValue]
        in: query
        description: Filter by intValue (csv)
        schema:
          type: string
      - name: filter[longValue]
        in: query
        description: Filter by longValue (csv)
        schema:
          type: string
      - name: filter[booleanValue]
        in: query
        description: Filter by booleanValue (csv)
        schema:
          type: string
      - name: filter[floatValue]
        in: query
        description: Filter by floatValue (csv)
        schema:
          type: string
      - name: filter[shortValue]
        in: query
        description: Filter by shortValue (csv)
        schema:
          type: string
      - name: filter[doubleValue]
        in: query
        description: Filter by doubleValue (csv)
        schema:
          type: string
      - name: filter[jsonNodeValue]
        in: query
        description: Filter by jsonNodeValue (csv)
        schema:
          type: string
      - name: filter[arrayNodeValue]
        in: query
        description: Filter by arrayNodeValue (csv)
        schema:
          type: string
      - name: filter[objectNodeValue]
        in: query
        description: Filter by objectNodeValue (csv)
        schema:
          type: string
      - name: filter[nullableLongValue]
        in: query
        description: Filter by nullableLongValue (csv)
        schema:
          type: string
      - name: filter[nullableBooleanValue]
        in: query
        description: Filter by nullableBooleanValue (csv)
        schema:
          type: string
      - name: filter[nullableByteValue]
        in: query
        description: Filter by nullableByteValue (csv)
        schema:
          type: string
      - name: filter[nullableShortValue]
        in: query
        description: Filter by nullableShortValue (csv)
        schema:
          type: string
      - name: filter[nullableIntegerValue]
        in: query
        description: Filter by nullableIntegerValue (csv)
        schema:
          type: string
      - name: filter[nullableFloatValue]
        in: query
        description: Filter by nullableFloatValue (csv)
        schema:
          type: string
      - name: filter[nullableDoubleValue]
        in: query
        description: Filter by nullableDoubleValue (csv)
        schema:
          type: string
      - name: filter[uuidValue]
        in: query
        description: Filter by uuidValue (csv)
        schema:
          type: string
      - name: filter[dateValue]
        in: query
        description: Filter by dateValue (csv)
        schema:
          type: string
      - name: filter[objectValue]
        in: query
        description: Filter by objectValue (csv)
        schema:
          type: string
      - name: filter[mapValueWithEnumKey]
        in: query
        description: Filter by mapValueWithEnumKey (csv)
        schema:
          type: string
      - name: filter[mapValueWithListValue]
        in: query
        description: Filter by mapValueWithListValue (csv)
        schema:
          type: string
      - name: filter[mapValueWithSetValue]
        in: query
        description: Filter by mapValueWithSetValue (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/primitiveAttributeFields'
      - $ref: '#/components/parameters/primitiveAttributeInclude'
      - $ref: '#/components/parameters/primitiveAttributeSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/primitiveAttributeResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a PrimitiveAttribute
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/primitiveAttributePostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/primitiveAttributeResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /primitiveAttribute/{id}:
    get:
      description: Retrieve a primitiveAttribute resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/primitiveAttributePrimaryKey'
      - $ref: '#/components/parameters/primitiveAttributeFields'
      - $ref: '#/components/parameters/primitiveAttributeInclude'
      responses:
        200:
          $ref: '#/components/responses/primitiveAttributeResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a PrimitiveAttribute
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/primitiveAttributePrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a PrimitiveAttribute
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/primitiveAttributePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/primitiveAttributePatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/primitiveAttributeResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /projects:
    get:
      description: Retrieve a List of projects resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - name: filter[description]
        in: query
        description: Filter by description (csv)
        schema:
          type: string
      - name: filter[data]
        in: query
        description: Filter by data (csv)
        schema:
          type: string
      - name: filter[tasks]
        in: query
        description: Filter by tasks (csv)
        schema:
          type: string
      - name: filter[task]
        in: query
        description: Filter by task (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      - $ref: '#/components/parameters/projectsSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/projectsResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Projects
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/projectsResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /projects/{id}:
    get:
      description: Retrieve a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/projectsPrimaryKey'
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a Projects
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/projectsPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Projects
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/projectsPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/projectsResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /projects/{id}/relationships/tasks:
    get:
      description: Retrieve tasks references related to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/projectsPrimaryKey'
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create projects relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/projectsPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete projects relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/projectsPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update projects relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/projectsPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /projects/{id}/tasks:
    get:
      description: Retrieve tasks related to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/projectsPrimaryKey'
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create projects relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/projectsPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete projects relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/projectsPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update projects relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/projectsPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /readOnlyTask:
    get:
      description: Retrieve a List of readOnlyTask resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/readOnlyTaskFields'
      - $ref: '#/components/parameters/readOnlyTaskInclude'
      - $ref: '#/components/parameters/readOnlyTaskSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/readOnlyTaskResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a ReadOnlyTask
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/readOnlyTaskPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/readOnlyTaskResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /readOnlyTask/{id}:
    get:
      description: Retrieve a readOnlyTask resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/readOnlyTaskPrimaryKey'
      - $ref: '#/components/parameters/readOnlyTaskFields'
      - $ref: '#/components/parameters/readOnlyTaskInclude'
      responses:
        200:
          $ref: '#/components/responses/readOnlyTaskResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a ReadOnlyTask
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/readOnlyTaskPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a ReadOnlyTask
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/readOnlyTaskPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/readOnlyTaskPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/readOnlyTaskResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest:
    get:
      description: Retrieve a List of relationIdTest resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - name: filter[testLookupAlways]
        in: query
        description: Filter by testLookupAlways (csv)
        schema:
          type: string
      - name: filter[testLookupWhenNull]
        in: query
        description: Filter by testLookupWhenNull (csv)
        schema:
          type: string
      - name: filter[testMultipleValues]
        in: query
        description: Filter by testMultipleValues (csv)
        schema:
          type: string
      - name: filter[testLookupNone]
        in: query
        description: Filter by testLookupNone (csv)
        schema:
          type: string
      - name: filter[testSerializeEager]
        in: query
        description: Filter by testSerializeEager (csv)
        schema:
          type: string
      - name: filter[testSerializeOnlyId]
        in: query
        description: Filter by testSerializeOnlyId (csv)
        schema:
          type: string
      - name: filter[testNested]
        in: query
        description: Filter by testNested (csv)
        schema:
          type: string
      - name: filter[testResourceIdRef]
        in: query
        description: Filter by testResourceIdRef (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/relationIdTestFields'
      - $ref: '#/components/parameters/relationIdTestInclude'
      - $ref: '#/components/parameters/relationIdTestSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a RelationIdTest
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relationIdTestPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/relationIdTestResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest/{id}:
    get:
      description: Retrieve a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      - $ref: '#/components/parameters/relationIdTestFields'
      - $ref: '#/components/parameters/relationIdTestInclude'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a RelationIdTest
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a RelationIdTest
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relationIdTestPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/relationIdTestResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest/{id}/relationIdTest:
    get:
      description: Retrieve relationIdTest related to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create relationIdTest relationship to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete relationIdTest relationship to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update relationIdTest relationship to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest/{id}/relationships/relationIdTest:
    get:
      description: Retrieve relationIdTest references related to a relationIdTest
        resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      - $ref: '#/components/parameters/relationIdTestFields'
      - $ref: '#/components/parameters/relationIdTestInclude'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create relationIdTest relationship to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relationIdTestResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete relationIdTest relationship to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update relationIdTest relationship to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relationIdTestResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest/{id}/relationships/schedules:
    get:
      description: Retrieve schedule references related to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create relationIdTest relationship to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete relationIdTest relationship to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update relationIdTest relationship to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest/{id}/schedules:
    get:
      description: Retrieve relationIdTest related to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create relationIdTest relationship to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete relationIdTest relationship to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update relationIdTest relationship to a relationIdTest resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /renamedId:
    get:
      description: Retrieve a List of renamedId resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/renamedIdFields'
      - $ref: '#/components/parameters/renamedIdInclude'
      - $ref: '#/components/parameters/renamedIdSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/renamedIdResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a RenamedId
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/renamedIdPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/renamedIdResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /renamedId/{id}:
    get:
      description: Retrieve a renamedId resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/renamedIdPrimaryKey'
      - $ref: '#/components/parameters/renamedIdFields'
      - $ref: '#/components/parameters/renamedIdInclude'
      responses:
        200:
          $ref: '#/components/responses/renamedIdResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a RenamedId
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/renamedIdPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a RenamedId
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/renamedIdPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/renamedIdPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/renamedIdResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /scheduleStatus:
    get:
      description: Retrieve a List of scheduleStatus resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[description]
        in: query
        description: Filter by description (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/scheduleStatusFields'
      - $ref: '#/components/parameters/scheduleStatusInclude'
      - $ref: '#/components/parameters/scheduleStatusSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a ScheduleStatus
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/scheduleStatusResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /scheduleStatus/{id}:
    get:
      description: Retrieve a scheduleStatus resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/scheduleStatusPrimaryKey'
      - $ref: '#/components/parameters/scheduleStatusFields'
      - $ref: '#/components/parameters/scheduleStatusInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a ScheduleStatus
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/scheduleStatusPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a ScheduleStatus
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/scheduleStatusPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/scheduleStatusResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules:
    get:
      description: Retrieve a List of schedule resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - name: filter[description]
        in: query
        description: Filter by description (csv)
        schema:
          type: string
      - name: filter[taskSet]
        in: query
        description: Filter by taskSet (csv)
        schema:
          type: string
      - name: filter[project]
        in: query
        description: Filter by project (csv)
        schema:
          type: string
      - name: filter[projects]
        in: query
        description: Filter by projects (csv)
        schema:
          type: string
      - name: filter[status]
        in: query
        description: Filter by status (csv)
        schema:
          type: string
      - name: filter[delayed]
        in: query
        description: Filter by delayed (csv)
        schema:
          type: string
      - name: filter[customData]
        in: query
        description: Filter by customData (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      - $ref: '#/components/parameters/scheduleSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Schedule
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/schedulePostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/scheduleResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}:
    get:
      description: Retrieve a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a Schedule
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Schedule
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/schedulePatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/scheduleResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/projects:
    get:
      description: Retrieve projects related to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - name: filter[description]
        in: query
        description: Filter by description (csv)
        schema:
          type: string
      - name: filter[data]
        in: query
        description: Filter by data (csv)
        schema:
          type: string
      - name: filter[tasks]
        in: query
        description: Filter by tasks (csv)
        schema:
          type: string
      - name: filter[task]
        in: query
        description: Filter by task (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      responses:
        200:
          $ref: '#/components/responses/projectsResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete schedule relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/relationships/projects:
    get:
      description: Retrieve projects references related to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - name: filter[description]
        in: query
        description: Filter by description (csv)
        schema:
          type: string
      - name: filter[data]
        in: query
        description: Filter by data (csv)
        schema:
          type: string
      - name: filter[tasks]
        in: query
        description: Filter by tasks (csv)
        schema:
          type: string
      - name: filter[task]
        in: query
        description: Filter by task (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete schedule relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/relationships/scheduleStatus:
    get:
      description: Retrieve scheduleStatus references related to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/scheduleStatusFields'
      - $ref: '#/components/parameters/scheduleStatusInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a scheduleStatus resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete schedule relationship to a scheduleStatus resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a scheduleStatus resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/relationships/tasks:
    get:
      description: Retrieve tasks references related to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - name: filter[project]
        in: query
        description: Filter by project (csv)
        schema:
          type: string
      - name: filter[schedule]
        in: query
        description: Filter by schedule (csv)
        schema:
          type: string
      - name: filter[projects]
        in: query
        description: Filter by projects (csv)
        schema:
          type: string
      - name: filter[includedProject]
        in: query
        description: Filter by includedProject (csv)
        schema:
          type: string
      - name: filter[includedProjects]
        in: query
        description: Filter by includedProjects (csv)
        schema:
          type: string
      - name: filter[otherTasks]
        in: query
        description: Filter by otherTasks (csv)
        schema:
          type: string
      - name: filter[status]
        in: query
        description: Filter by status (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete schedule relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/scheduleStatus:
    get:
      description: Retrieve scheduleStatus related to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/scheduleStatusFields'
      - $ref: '#/components/parameters/scheduleStatusInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a scheduleStatus resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete schedule relationship to a scheduleStatus resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a scheduleStatus resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/tasks:
    get:
      description: Retrieve tasks related to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - name: filter[project]
        in: query
        description: Filter by project (csv)
        schema:
          type: string
      - name: filter[schedule]
        in: query
        description: Filter by schedule (csv)
        schema:
          type: string
      - name: filter[projects]
        in: query
        description: Filter by projects (csv)
        schema:
          type: string
      - name: filter[includedProject]
        in: query
        description: Filter by includedProject (csv)
        schema:
          type: string
      - name: filter[includedProjects]
        in: query
        description: Filter by includedProjects (csv)
        schema:
          type: string
      - name: filter[otherTasks]
        in: query
        description: Filter by otherTasks (csv)
        schema:
          type: string
      - name: filter[status]
        in: query
        description: Filter by status (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      responses:
        200:
          $ref: '#/components/responses/tasksResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete schedule relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /taskNewPath:
    get:
      description: Retrieve a List of relocatedTask resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/relocatedTaskFields'
      - $ref: '#/components/parameters/relocatedTaskInclude'
      - $ref: '#/components/parameters/relocatedTaskSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/relocatedTaskResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a RelocatedTask
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relocatedTaskPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/relocatedTaskResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /taskNewPath/{id}:
    get:
      description: Retrieve a relocatedTask resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relocatedTaskPrimaryKey'
      - $ref: '#/components/parameters/relocatedTaskFields'
      - $ref: '#/components/parameters/relocatedTaskInclude'
      responses:
        200:
          $ref: '#/components/responses/relocatedTaskResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a RelocatedTask
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relocatedTaskPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a RelocatedTask
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/relocatedTaskPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relocatedTaskPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/relocatedTaskResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks:
    get:
      description: Retrieve a List of tasks resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - name: filter[project]
        in: query
        description: Filter by project (csv)
        schema:
          type: string
      - name: filter[schedule]
        in: query
        description: Filter by schedule (csv)
        schema:
          type: string
      - name: filter[projects]
        in: query
        description: Filter by projects (csv)
        schema:
          type: string
      - name: filter[includedProject]
        in: query
        description: Filter by includedProject (csv)
        schema:
          type: string
      - name: filter[includedProjects]
        in: query
        description: Filter by includedProjects (csv)
        schema:
          type: string
      - name: filter[otherTasks]
        in: query
        description: Filter by otherTasks (csv)
        schema:
          type: string
      - name: filter[status]
        in: query
        description: Filter by status (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      - $ref: '#/components/parameters/tasksSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/tasksResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Tasks
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/tasksResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/history:
    get:
      description: Retrieve a List of historicTasks resources
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/historicTasksFields'
      - $ref: '#/components/parameters/historicTasksInclude'
      - $ref: '#/components/parameters/historicTasksSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/historicTasksResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a HistoricTasks
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/historicTasksPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/historicTasksResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/history/{id}:
    get:
      description: Retrieve a historicTasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/historicTasksPrimaryKey'
      - $ref: '#/components/parameters/historicTasksFields'
      - $ref: '#/components/parameters/historicTasksInclude'
      responses:
        200:
          $ref: '#/components/responses/historicTasksResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a HistoricTasks
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/historicTasksPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a HistoricTasks
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/historicTasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/historicTasksPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/historicTasksResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/{id}:
    get:
      description: Retrieve a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete a Tasks
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Tasks
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/tasksResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/{id}/projects:
    get:
      description: Retrieve projects related to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - name: filter[description]
        in: query
        description: Filter by description (csv)
        schema:
          type: string
      - name: filter[data]
        in: query
        description: Filter by data (csv)
        schema:
          type: string
      - name: filter[tasks]
        in: query
        description: Filter by tasks (csv)
        schema:
          type: string
      - name: filter[task]
        in: query
        description: Filter by task (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      responses:
        200:
          $ref: '#/components/responses/projectsResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create tasks relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete tasks relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update tasks relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/{id}/relationships/projects:
    get:
      description: Retrieve projects references related to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - name: filter[description]
        in: query
        description: Filter by description (csv)
        schema:
          type: string
      - name: filter[data]
        in: query
        description: Filter by data (csv)
        schema:
          type: string
      - name: filter[tasks]
        in: query
        description: Filter by tasks (csv)
        schema:
          type: string
      - name: filter[task]
        in: query
        description: Filter by task (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create tasks relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete tasks relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update tasks relationship to a projects resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/{id}/relationships/schedules:
    get:
      description: Retrieve schedule references related to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create tasks relationship to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete tasks relationship to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update tasks relationship to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/{id}/schedules:
    get:
      description: Retrieve schedule related to a tasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create tasks relationship to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    delete:
      description: Delete tasks relationship to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update tasks relationship to a schedule resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
components:
  schemas:
    ApiError:
      type: object
      properties:
        code:
          type: string
          description: an application-specific error code, expressed as a string value
        detail:
          type: string
          description: a human-readable explanation specific to this occurrence of
            the problem. Like 'title', this field’s value can be localized.
        id:
          type: string
          description: a unique identifier for this particular occurrence of the problem
        links:
          type: object
          properties:
            about:
              type: string
              description: a link that leads to further details about this particular
                occurrence of the problem
        meta:
          type: object
          additionalProperties: true
          description: a meta object containing non-standard meta-information about
            the error
        source:
          type: object
          properties:
            parameter:
              type: string
              description: a string indicating which URI query parameter caused the
                error
            pointer:
              type: string
              description: a JSON Pointer [RFC6901] to the associated entity in the
                request document
        status:
          type: string
          description: the HTTP status code applicable to this problem, expressed
            as a string value
        title:
          type: string
          description: a short, human-readable summary of the problem that SHOULD
            NOT change from occurrence to occurrence of the problem, except for purposes
            of localization
    ListResponseMixin:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
        jsonapi:
          type: object
          properties:
            version:
              type: string
        links:
          type: object
          properties:
            first:
              type: string
              description: Link to the first page of results
            last:
              type: string
              description: Link to the last page of results
            next:
              type: string
              description: Link to the next page of results
            prev:
              type: string
              description: Link to the previous page of results
            self:
              type: string
              description: Link to this page of results
        meta:
          type: object
          properties:
            totalResourceCount:
              type: integer
              description: The total number of items available
              format: int32
          additionalProperties: true
      description: A page of results
    ResponseMixin:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
        included:
          type: array
          description: Included resources
          items:
            type: object
            properties:
              id:
                type: string
                description: The JSON:API resource ID
              type:
                type: string
                description: The JSON:API resource type
        jsonapi:
          type: object
          properties:
            version:
              type: string
        links:
          properties:
            self:
              type: string
              description: the link that generated the current response document
      description: A JSON-API document with a single resource
    commentPatchResource:
      allOf:
      - $ref: '#/components/schemas/commentResourceReference'
      - $ref: '#/components/schemas/commentResourcePatchAttributes'
    commentPostResource:
      allOf:
      - $ref: '#/components/schemas/commentResourceReference'
      - $ref: '#/components/schemas/commentResourcePostAttributes'
    commentResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            value:
              type: string
              nullable: true
    commentResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            value:
              type: string
              nullable: true
    commentResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            value:
              type: string
              nullable: true
    commentResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (Comment)
          enum:
          - Comment
    commentResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/commentResourceReference'
    commentResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/commentResourceReference'
    commentResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/commentResourceSchema'
    commentResourceSchema:
      allOf:
      - $ref: '#/components/schemas/commentResourceReference'
      - $ref: '#/components/schemas/commentResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    commentResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/commentResourceSchema'
    headerPatchResource:
      allOf:
      - $ref: '#/components/schemas/headerResourceReference'
      - $ref: '#/components/schemas/headerResourcePatchAttributes'
    headerPostResource:
      allOf:
      - $ref: '#/components/schemas/headerResourceReference'
      - $ref: '#/components/schemas/headerResourcePostAttributes'
    headerResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            value:
              type: string
              nullable: true
    headerResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            value:
              type: string
              nullable: true
    headerResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            value:
              type: string
              nullable: true
    headerResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (Header)
          enum:
          - Header
    headerResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/headerResourceReference'
    headerResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/headerResourceReference'
    headerResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/headerResourceSchema'
    headerResourceSchema:
      allOf:
      - $ref: '#/components/schemas/headerResourceReference'
      - $ref: '#/components/schemas/headerResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    headerResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/headerResourceSchema'
    historicTasksPatchResource:
      allOf:
      - $ref: '#/components/schemas/historicTasksResourceReference'
      - $ref: '#/components/schemas/historicTasksResourcePatchAttributes'
    historicTasksPostResource:
      allOf:
      - $ref: '#/components/schemas/historicTasksResourceReference'
      - $ref: '#/components/schemas/historicTasksResourcePostAttributes'
    historicTasksResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
    historicTasksResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
    historicTasksResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
    historicTasksResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (HistoricTasks)
          enum:
          - HistoricTasks
    historicTasksResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/historicTasksResourceReference'
    historicTasksResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/historicTasksResourceReference'
    historicTasksResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/historicTasksResourceSchema'
    historicTasksResourceSchema:
      allOf:
      - $ref: '#/components/schemas/historicTasksResourceReference'
      - $ref: '#/components/schemas/historicTasksResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    historicTasksResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/historicTasksResourceSchema'
    nestedRelatedPatchResource:
      allOf:
      - $ref: '#/components/schemas/nestedRelatedResourceReference'
      - $ref: '#/components/schemas/nestedRelatedResourcePatchAttributes'
    nestedRelatedPostResource:
      allOf:
      - $ref: '#/components/schemas/nestedRelatedResourceReference'
      - $ref: '#/components/schemas/nestedRelatedResourcePostAttributes'
    nestedRelatedResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties: {}
    nestedRelatedResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties: {}
    nestedRelatedResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties: {}
    nestedRelatedResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (NestedRelated)
          enum:
          - NestedRelated
    nestedRelatedResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/nestedRelatedResourceReference'
    nestedRelatedResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/nestedRelatedResourceReference'
    nestedRelatedResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/nestedRelatedResourceSchema'
    nestedRelatedResourceSchema:
      allOf:
      - $ref: '#/components/schemas/nestedRelatedResourceReference'
      - $ref: '#/components/schemas/nestedRelatedResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    nestedRelatedResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/nestedRelatedResourceSchema'
    postPatchResource:
      allOf:
      - $ref: '#/components/schemas/postResourceReference'
      - $ref: '#/components/schemas/postResourcePatchAttributes'
    postPostResource:
      allOf:
      - $ref: '#/components/schemas/postResourceReference'
      - $ref: '#/components/schemas/postResourcePostAttributes'
    postResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            comments:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/commentResourceReference'
            header:
              $ref: '#/components/schemas/headerResourceReference'
    postResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            comments:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/commentResourceReference'
            header:
              $ref: '#/components/schemas/headerResourceReference'
    postResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            comments:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/commentResourceReference'
            header:
              $ref: '#/components/schemas/headerResourceReference'
    postResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (Post)
          enum:
          - Post
    postResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/postResourceReference'
    postResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/postResourceReference'
    postResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/postResourceSchema'
    postResourceSchema:
      allOf:
      - $ref: '#/components/schemas/postResourceReference'
      - $ref: '#/components/schemas/postResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    postResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/postResourceSchema'
    primitiveAttributePatchResource:
      allOf:
      - $ref: '#/components/schemas/primitiveAttributeResourceReference'
      - $ref: '#/components/schemas/primitiveAttributeResourcePatchAttributes'
    primitiveAttributePostResource:
      allOf:
      - $ref: '#/components/schemas/primitiveAttributeResourceReference'
      - $ref: '#/components/schemas/primitiveAttributeResourcePostAttributes'
    primitiveAttributeResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            arrayNodeValue:
              type: array
              nullable: true
              items: {}
            booleanValue:
              type: boolean
              nullable: false
            dateValue:
              type: string
              format: date
              nullable: true
            doubleValue:
              type: number
              format: double
              nullable: false
            floatValue:
              type: number
              format: float
              nullable: true
            intValue:
              type: integer
              format: int32
              nullable: false
            jsonNodeValue:
              type: object
              nullable: true
            longValue:
              type: integer
              format: int64
              nullable: false
            mapValueWithEnumKey:
              type: string
              nullable: true
            mapValueWithListValue:
              uniqueItems: false
              type: array
              nullable: true
              items:
                type: string
            mapValueWithSetValue:
              uniqueItems: true
              type: array
              nullable: true
              items:
                type: string
            nullableBooleanValue:
              type: boolean
              nullable: true
            nullableByteValue:
              type: string
              format: byte
              nullable: true
            nullableDoubleValue:
              type: number
              format: double
              nullable: true
            nullableFloatValue:
              type: number
              format: float
              nullable: true
            nullableIntegerValue:
              type: integer
              format: int32
              nullable: true
            nullableLongValue:
              type: integer
              format: int64
              nullable: true
            nullableShortValue:
              maximum: 32767
              minimum: -32768
              type: integer
              format: int32
              nullable: true
            objectNodeValue:
              type: object
              nullable: true
            objectValue:
              type: object
              nullable: true
            shortValue:
              maximum: 32767
              minimum: -32768
              type: integer
              format: int32
              nullable: false
            stringValue:
              type: string
              nullable: true
            uuidValue:
              type: string
              format: uuid
              nullable: true
    primitiveAttributeResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            arrayNodeValue:
              type: array
              nullable: true
              items: {}
            booleanValue:
              type: boolean
              nullable: false
            dateValue:
              type: string
              format: date
              nullable: true
            doubleValue:
              type: number
              format: double
              nullable: false
            floatValue:
              type: number
              format: float
              nullable: true
            intValue:
              type: integer
              format: int32
              nullable: false
            jsonNodeValue:
              type: object
              nullable: true
            longValue:
              type: integer
              format: int64
              nullable: false
            mapValueWithEnumKey:
              type: string
              nullable: true
            mapValueWithListValue:
              uniqueItems: false
              type: array
              nullable: true
              items:
                type: string
            mapValueWithSetValue:
              uniqueItems: true
              type: array
              nullable: true
              items:
                type: string
            nullableBooleanValue:
              type: boolean
              nullable: true
            nullableByteValue:
              type: string
              format: byte
              nullable: true
            nullableDoubleValue:
              type: number
              format: double
              nullable: true
            nullableFloatValue:
              type: number
              format: float
              nullable: true
            nullableIntegerValue:
              type: integer
              format: int32
              nullable: true
            nullableLongValue:
              type: integer
              format: int64
              nullable: true
            nullableShortValue:
              maximum: 32767
              minimum: -32768
              type: integer
              format: int32
              nullable: true
            objectNodeValue:
              type: object
              nullable: true
            objectValue:
              type: object
              nullable: true
            shortValue:
              maximum: 32767
              minimum: -32768
              type: integer
              format: int32
              nullable: false
            stringValue:
              type: string
              nullable: true
            uuidValue:
              type: string
              format: uuid
              nullable: true
    primitiveAttributeResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            arrayNodeValue:
              type: array
              nullable: true
              items: {}
            booleanValue:
              type: boolean
              nullable: false
            dateValue:
              type: string
              format: date
              nullable: true
            doubleValue:
              type: number
              format: double
              nullable: false
            floatValue:
              type: number
              format: float
              nullable: true
            intValue:
              type: integer
              format: int32
              nullable: false
            jsonNodeValue:
              type: object
              nullable: true
            longValue:
              type: integer
              format: int64
              nullable: false
            mapValueWithEnumKey:
              type: string
              nullable: true
            mapValueWithListValue:
              uniqueItems: false
              type: array
              nullable: true
              items:
                type: string
            mapValueWithSetValue:
              uniqueItems: true
              type: array
              nullable: true
              items:
                type: string
            nullableBooleanValue:
              type: boolean
              nullable: true
            nullableByteValue:
              type: string
              format: byte
              nullable: true
            nullableDoubleValue:
              type: number
              format: double
              nullable: true
            nullableFloatValue:
              type: number
              format: float
              nullable: true
            nullableIntegerValue:
              type: integer
              format: int32
              nullable: true
            nullableLongValue:
              type: integer
              format: int64
              nullable: true
            nullableShortValue:
              maximum: 32767
              minimum: -32768
              type: integer
              format: int32
              nullable: true
            objectNodeValue:
              type: object
              nullable: true
            objectValue:
              type: object
              nullable: true
            shortValue:
              maximum: 32767
              minimum: -32768
              type: integer
              format: int32
              nullable: false
            stringValue:
              type: string
              nullable: true
            uuidValue:
              type: string
              format: uuid
              nullable: true
    primitiveAttributeResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (PrimitiveAttribute)
          enum:
          - PrimitiveAttribute
    primitiveAttributeResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/primitiveAttributeResourceReference'
    primitiveAttributeResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/primitiveAttributeResourceReference'
    primitiveAttributeResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/primitiveAttributeResourceSchema'
    primitiveAttributeResourceSchema:
      allOf:
      - $ref: '#/components/schemas/primitiveAttributeResourceReference'
      - $ref: '#/components/schemas/primitiveAttributeResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    primitiveAttributeResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/primitiveAttributeResourceSchema'
    projectsPatchResource:
      allOf:
      - $ref: '#/components/schemas/projectsResourceReference'
      - $ref: '#/components/schemas/projectsResourcePatchAttributes'
    projectsPostResource:
      allOf:
      - $ref: '#/components/schemas/projectsResourceReference'
      - $ref: '#/components/schemas/projectsResourcePostAttributes'
    projectsResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            data:
              type: object
              properties:
                customData:
                  type: string
                data:
                  type: string
                due:
                  type: string
                  format: date-time
                keywords:
                  uniqueItems: false
                  type: array
                  items:
                    type: string
              nullable: true
            description:
              type: string
              nullable: true
            links:
              type: object
              properties:
                value:
                  type: string
              nullable: true
            meta:
              type: object
              properties:
                value:
                  type: string
              nullable: true
            name:
              type: string
              nullable: true
            task:
              $ref: '#/components/schemas/tasksResourceReference'
            tasks:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/tasksResourceReference'
    projectsResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            data:
              type: object
              properties:
                customData:
                  type: string
                data:
                  type: string
                due:
                  type: string
                  format: date-time
                keywords:
                  uniqueItems: false
                  type: array
                  items:
                    type: string
              nullable: true
            description:
              type: string
              nullable: true
            links:
              type: object
              properties:
                value:
                  type: string
              nullable: true
            meta:
              type: object
              properties:
                value:
                  type: string
              nullable: true
            name:
              type: string
              nullable: true
            task:
              $ref: '#/components/schemas/tasksResourceReference'
            tasks:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/tasksResourceReference'
    projectsResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            data:
              type: object
              properties:
                customData:
                  type: string
                data:
                  type: string
                due:
                  type: string
                  format: date-time
                keywords:
                  uniqueItems: false
                  type: array
                  items:
                    type: string
              nullable: true
            description:
              type: string
              nullable: true
            links:
              type: object
              properties:
                value:
                  type: string
              nullable: true
            meta:
              type: object
              properties:
                value:
                  type: string
              nullable: true
            name:
              type: string
              nullable: true
            task:
              $ref: '#/components/schemas/tasksResourceReference'
            tasks:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/tasksResourceReference'
    projectsResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (Projects)
          enum:
          - Projects
    projectsResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/projectsResourceReference'
    projectsResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/projectsResourceReference'
    projectsResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/projectsResourceSchema'
    projectsResourceSchema:
      allOf:
      - $ref: '#/components/schemas/projectsResourceReference'
      - $ref: '#/components/schemas/projectsResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    projectsResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/projectsResourceSchema'
    readOnlyTaskPatchResource:
      allOf:
      - $ref: '#/components/schemas/readOnlyTaskResourceReference'
      - $ref: '#/components/schemas/readOnlyTaskResourcePatchAttributes'
    readOnlyTaskPostResource:
      allOf:
      - $ref: '#/components/schemas/readOnlyTaskResourceReference'
      - $ref: '#/components/schemas/readOnlyTaskResourcePostAttributes'
    readOnlyTaskResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
    readOnlyTaskResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties: {}
    readOnlyTaskResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties: {}
    readOnlyTaskResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (ReadOnlyTask)
          enum:
          - ReadOnlyTask
    readOnlyTaskResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/readOnlyTaskResourceReference'
    readOnlyTaskResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/readOnlyTaskResourceReference'
    readOnlyTaskResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/readOnlyTaskResourceSchema'
    readOnlyTaskResourceSchema:
      allOf:
      - $ref: '#/components/schemas/readOnlyTaskResourceReference'
      - $ref: '#/components/schemas/readOnlyTaskResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    readOnlyTaskResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/readOnlyTaskResourceSchema'
    relationIdTestPatchResource:
      allOf:
      - $ref: '#/components/schemas/relationIdTestResourceReference'
      - $ref: '#/components/schemas/relationIdTestResourcePatchAttributes'
    relationIdTestPostResource:
      allOf:
      - $ref: '#/components/schemas/relationIdTestResourceReference'
      - $ref: '#/components/schemas/relationIdTestResourcePostAttributes'
    relationIdTestResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
            testLookupAlways:
              $ref: '#/components/schemas/scheduleResourceReference'
            testLookupNone:
              $ref: '#/components/schemas/scheduleResourceReference'
            testLookupWhenNull:
              $ref: '#/components/schemas/scheduleResourceReference'
            testMultipleValues:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/scheduleResourceReference'
            testNested:
              $ref: '#/components/schemas/relationIdTestResourceReference'
            testResourceIdRef:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeEager:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeOnlyId:
              $ref: '#/components/schemas/scheduleResourceReference'
    relationIdTestResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
            testLookupAlways:
              $ref: '#/components/schemas/scheduleResourceReference'
            testLookupNone:
              $ref: '#/components/schemas/scheduleResourceReference'
            testLookupWhenNull:
              $ref: '#/components/schemas/scheduleResourceReference'
            testMultipleValues:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/scheduleResourceReference'
            testNested:
              $ref: '#/components/schemas/relationIdTestResourceReference'
            testResourceIdRef:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeEager:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeOnlyId:
              $ref: '#/components/schemas/scheduleResourceReference'
    relationIdTestResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
            testLookupAlways:
              $ref: '#/components/schemas/scheduleResourceReference'
            testLookupNone:
              $ref: '#/components/schemas/scheduleResourceReference'
            testLookupWhenNull:
              $ref: '#/components/schemas/scheduleResourceReference'
            testMultipleValues:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/scheduleResourceReference'
            testNested:
              $ref: '#/components/schemas/relationIdTestResourceReference'
            testResourceIdRef:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeEager:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeOnlyId:
              $ref: '#/components/schemas/scheduleResourceReference'
    relationIdTestResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (RelationIdTest)
          enum:
          - RelationIdTest
    relationIdTestResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/relationIdTestResourceReference'
    relationIdTestResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/relationIdTestResourceReference'
    relationIdTestResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/relationIdTestResourceSchema'
    relationIdTestResourceSchema:
      allOf:
      - $ref: '#/components/schemas/relationIdTestResourceReference'
      - $ref: '#/components/schemas/relationIdTestResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    relationIdTestResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/relationIdTestResourceSchema'
    relocatedTaskPatchResource:
      allOf:
      - $ref: '#/components/schemas/relocatedTaskResourceReference'
      - $ref: '#/components/schemas/relocatedTaskResourcePatchAttributes'
    relocatedTaskPostResource:
      allOf:
      - $ref: '#/components/schemas/relocatedTaskResourceReference'
      - $ref: '#/components/schemas/relocatedTaskResourcePostAttributes'
    relocatedTaskResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
    relocatedTaskResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
    relocatedTaskResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
    relocatedTaskResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (RelocatedTask)
          enum:
          - RelocatedTask
    relocatedTaskResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/relocatedTaskResourceReference'
    relocatedTaskResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/relocatedTaskResourceReference'
    relocatedTaskResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/relocatedTaskResourceSchema'
    relocatedTaskResourceSchema:
      allOf:
      - $ref: '#/components/schemas/relocatedTaskResourceReference'
      - $ref: '#/components/schemas/relocatedTaskResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    relocatedTaskResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/relocatedTaskResourceSchema'
    renamedIdPatchResource:
      allOf:
      - $ref: '#/components/schemas/renamedIdResourceReference'
      - $ref: '#/components/schemas/renamedIdResourcePatchAttributes'
    renamedIdPostResource:
      allOf:
      - $ref: '#/components/schemas/renamedIdResourceReference'
      - $ref: '#/components/schemas/renamedIdResourcePostAttributes'
    renamedIdResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties: {}
    renamedIdResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties: {}
    renamedIdResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties: {}
    renamedIdResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (RenamedId)
          enum:
          - RenamedId
    renamedIdResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/renamedIdResourceReference'
    renamedIdResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/renamedIdResourceReference'
    renamedIdResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/renamedIdResourceSchema'
    renamedIdResourceSchema:
      allOf:
      - $ref: '#/components/schemas/renamedIdResourceReference'
      - $ref: '#/components/schemas/renamedIdResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    renamedIdResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/renamedIdResourceSchema'
    schedulePatchResource:
      allOf:
      - $ref: '#/components/schemas/scheduleResourceReference'
      - $ref: '#/components/schemas/scheduleResourcePatchAttributes'
    schedulePostResource:
      allOf:
      - $ref: '#/components/schemas/scheduleResourceReference'
      - $ref: '#/components/schemas/scheduleResourcePostAttributes'
    scheduleResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            customData:
              type: string
              nullable: true
            delayed:
              type: boolean
              nullable: false
            description:
              type: string
              nullable: true
            name:
              type: string
              nullable: true
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            projects:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/projectsResourceReference'
            status:
              $ref: '#/components/schemas/scheduleStatusResourceReference'
            taskSet:
              uniqueItems: true
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/tasksResourceReference'
    scheduleResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            customData:
              type: string
              nullable: true
            delayed:
              type: boolean
              nullable: false
            description:
              type: string
              nullable: true
            name:
              type: string
              nullable: true
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            projects:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/projectsResourceReference'
            status:
              $ref: '#/components/schemas/scheduleStatusResourceReference'
            taskSet:
              uniqueItems: true
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/tasksResourceReference'
    scheduleResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            customData:
              type: string
              nullable: true
            delayed:
              type: boolean
              nullable: false
            description:
              type: string
              nullable: true
            name:
              type: string
              nullable: true
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            projects:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/projectsResourceReference'
            status:
              $ref: '#/components/schemas/scheduleStatusResourceReference'
            taskSet:
              uniqueItems: true
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/tasksResourceReference'
    scheduleResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (Schedule)
          enum:
          - Schedule
    scheduleResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/scheduleResourceReference'
    scheduleResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/scheduleResourceReference'
    scheduleResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/scheduleResourceSchema'
    scheduleResourceSchema:
      allOf:
      - $ref: '#/components/schemas/scheduleResourceReference'
      - $ref: '#/components/schemas/scheduleResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    scheduleResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/scheduleResourceSchema'
    scheduleStatusPatchResource:
      allOf:
      - $ref: '#/components/schemas/scheduleStatusResourceReference'
      - $ref: '#/components/schemas/scheduleStatusResourcePatchAttributes'
    scheduleStatusPostResource:
      allOf:
      - $ref: '#/components/schemas/scheduleStatusResourceReference'
      - $ref: '#/components/schemas/scheduleStatusResourcePostAttributes'
    scheduleStatusResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            description:
              type: string
              nullable: true
    scheduleStatusResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            description:
              type: string
              nullable: true
    scheduleStatusResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            description:
              type: string
              nullable: true
    scheduleStatusResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (ScheduleStatus)
          enum:
          - ScheduleStatus
    scheduleStatusResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/scheduleStatusResourceReference'
    scheduleStatusResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/scheduleStatusResourceReference'
    scheduleStatusResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/scheduleStatusResourceSchema'
    scheduleStatusResourceSchema:
      allOf:
      - $ref: '#/components/schemas/scheduleStatusResourceReference'
      - $ref: '#/components/schemas/scheduleStatusResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    scheduleStatusResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/scheduleStatusResourceSchema'
    tasksPatchResource:
      allOf:
      - $ref: '#/components/schemas/tasksResourceReference'
      - $ref: '#/components/schemas/tasksResourcePatchAttributes'
    tasksPostResource:
      allOf:
      - $ref: '#/components/schemas/tasksResourceReference'
      - $ref: '#/components/schemas/tasksResourcePostAttributes'
    tasksResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            includedProject:
              $ref: '#/components/schemas/projectsResourceReference'
            includedProjects:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/projectsResourceReference'
            linksInformation:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            metaInformation:
              type: object
              nullable: true
            name:
              type: string
              nullable: true
            otherTasks:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/tasksResourceReference'
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            projects:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/projectsResourceReference'
            schedule:
              $ref: '#/components/schemas/scheduleResourceReference'
            status:
              type: string
              nullable: true
              enum:
              - OPEN
              - INPROGRESS
              - CLOSED
    tasksResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            includedProject:
              $ref: '#/components/schemas/projectsResourceReference'
            includedProjects:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/projectsResourceReference'
            linksInformation:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            metaInformation:
              type: object
              nullable: true
            name:
              type: string
              nullable: true
            otherTasks:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/tasksResourceReference'
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            projects:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/projectsResourceReference'
            schedule:
              $ref: '#/components/schemas/scheduleResourceReference'
            status:
              type: string
              nullable: true
              enum:
              - OPEN
              - INPROGRESS
              - CLOSED
    tasksResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            includedProject:
              $ref: '#/components/schemas/projectsResourceReference'
            includedProjects:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/projectsResourceReference'
            linksInformation:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            metaInformation:
              type: object
              nullable: true
            name:
              type: string
              nullable: true
            otherTasks:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/tasksResourceReference'
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            projects:
              uniqueItems: false
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/projectsResourceReference'
            schedule:
              $ref: '#/components/schemas/scheduleResourceReference'
            status:
              type: string
              nullable: true
              enum:
              - OPEN
              - INPROGRESS
              - CLOSED
    tasksResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The JSON:API resource ID
        type:
          type: string
          description: The JSON:API resource type (Tasks)
          enum:
          - Tasks
    tasksResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/tasksResourceReference'
    tasksResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/tasksResourceReference'
    tasksResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/tasksResourceSchema'
    tasksResourceSchema:
      allOf:
      - $ref: '#/components/schemas/tasksResourceReference'
      - $ref: '#/components/schemas/tasksResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          links:
            type: object
          relationships:
            type: object
    tasksResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/tasksResourceSchema'
  responses:
    400:
      description: BAD_REQUEST
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    401:
      description: UNAUTHORIZED
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    403:
      description: FORBIDDEN
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    404:
      description: NOT_FOUND
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    405:
      description: METHOD_NOT_ALLOWED
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    409:
      description: CONFLICT
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    412:
      description: PRECONDITION_FAILED
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    415:
      description: UNSUPPORTED_MEDIA_TYPE
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    422:
      description: UNPROCESSABLE_ENTITY
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    500:
      description: INTERNAL_SERVER_ERROR
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    501:
      description: NOT_IMPLEMENTED
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    502:
      description: BAD_GATEWAY
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    503:
      description: SERVICE_UNAVAILABLE
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    504:
      description: GATEWAY_TIMEOUT
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    505:
      description: HTTP_VERSION_NOT_SUPPORTED
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Accepted:
      description: Accepted
      content:
        application/vnd.api+json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: a unique identifier for this pending action
    NoContent:
      description: No Content
    commentResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/commentResourceReferenceResponseSchema'
    commentResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/commentResourceReferencesResponseSchema'
    commentResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/commentResourceResponseSchema'
    commentResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/commentResourcesResponseSchema'
    headerResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/headerResourceReferenceResponseSchema'
    headerResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/headerResourceReferencesResponseSchema'
    headerResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/headerResourceResponseSchema'
    headerResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/headerResourcesResponseSchema'
    historicTasksResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/historicTasksResourceReferenceResponseSchema'
    historicTasksResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/historicTasksResourceReferencesResponseSchema'
    historicTasksResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/historicTasksResourceResponseSchema'
    historicTasksResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/historicTasksResourcesResponseSchema'
    nestedRelatedResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
    nestedRelatedResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/nestedRelatedResourceReferencesResponseSchema'
    nestedRelatedResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/nestedRelatedResourceResponseSchema'
    nestedRelatedResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/nestedRelatedResourcesResponseSchema'
    postResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/postResourceReferenceResponseSchema'
    postResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/postResourceReferencesResponseSchema'
    postResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/postResourceResponseSchema'
    postResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/postResourcesResponseSchema'
    primitiveAttributeResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/primitiveAttributeResourceReferenceResponseSchema'
    primitiveAttributeResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/primitiveAttributeResourceReferencesResponseSchema'
    primitiveAttributeResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/primitiveAttributeResourceResponseSchema'
    primitiveAttributeResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/primitiveAttributeResourcesResponseSchema'
    projectsResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/projectsResourceReferenceResponseSchema'
    projectsResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
    projectsResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/projectsResourceResponseSchema'
    projectsResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/projectsResourcesResponseSchema'
    readOnlyTaskResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/readOnlyTaskResourceReferenceResponseSchema'
    readOnlyTaskResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/readOnlyTaskResourceReferencesResponseSchema'
    readOnlyTaskResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/readOnlyTaskResourceResponseSchema'
    readOnlyTaskResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/readOnlyTaskResourcesResponseSchema'
    relationIdTestResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relationIdTestResourceReferenceResponseSchema'
    relationIdTestResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relationIdTestResourceReferencesResponseSchema'
    relationIdTestResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relationIdTestResourceResponseSchema'
    relationIdTestResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relationIdTestResourcesResponseSchema'
    relocatedTaskResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relocatedTaskResourceReferenceResponseSchema'
    relocatedTaskResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relocatedTaskResourceReferencesResponseSchema'
    relocatedTaskResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relocatedTaskResourceResponseSchema'
    relocatedTaskResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relocatedTaskResourcesResponseSchema'
    renamedIdResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/renamedIdResourceReferenceResponseSchema'
    renamedIdResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/renamedIdResourceReferencesResponseSchema'
    renamedIdResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/renamedIdResourceResponseSchema'
    renamedIdResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/renamedIdResourcesResponseSchema'
    scheduleResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
    scheduleResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleResourceReferencesResponseSchema'
    scheduleResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleResourceResponseSchema'
    scheduleResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleResourcesResponseSchema'
    scheduleStatusResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleStatusResourceReferenceResponseSchema'
    scheduleStatusResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleStatusResourceReferencesResponseSchema'
    scheduleStatusResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleStatusResourceResponseSchema'
    scheduleStatusResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleStatusResourcesResponseSchema'
    tasksResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/tasksResourceReferenceResponseSchema'
    tasksResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/tasksResourceReferencesResponseSchema'
    tasksResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/tasksResourceResponseSchema'
    tasksResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/tasksResourcesResponseSchema'
  parameters:
    NestedFilter:
      name: filter
      in: query
      description: Customizable query (experimental)
      schema:
        type: object
        properties:
          AND:
            type: object
          NOT:
            type: object
          OR:
            type: object
        additionalProperties: true
    PageLimit:
      name: page[limit]
      in: query
      description: Max number of items
      schema:
        maximum: 1000
        type: integer
        format: int64
        default: 100
    PageOffset:
      name: page[offset]
      in: query
      description: Page offset
      schema:
        type: integer
        format: int64
        default: 0
    commentFields:
      name: fields
      in: query
      description: comment fields to include (csv)
      schema:
        type: string
        default: id,value,post,related,links
    commentInclude:
      name: include
      in: query
      description: comment relationships to include (csv)
      schema:
        type: string
        default: Post,NestedRelated
    commentPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: object
        properties:
          id:
            type: string
          postId:
            type: string
    commentSort:
      name: sort
      in: query
      description: comment sort order (csv)
      schema:
        type: string
        example: id,value,post,related,links
    headerFields:
      name: fields
      in: query
      description: header fields to include (csv)
      schema:
        type: string
        default: id,value,post,related,links
    headerInclude:
      name: include
      in: query
      description: header relationships to include (csv)
      schema:
        type: string
        default: Post,NestedRelated
    headerPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: string
    headerSort:
      name: sort
      in: query
      description: header sort order (csv)
      schema:
        type: string
        example: id,value,post,related,links
    historicTasksFields:
      name: fields
      in: query
      description: historicTasks fields to include (csv)
      schema:
        type: string
        default: id,name
    historicTasksInclude:
      name: include
      in: query
      description: historicTasks relationships to include (csv)
      schema:
        type: string
        default: ""
    historicTasksPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    historicTasksSort:
      name: sort
      in: query
      description: historicTasks sort order (csv)
      schema:
        type: string
        example: id,name
    nestedRelatedFields:
      name: fields
      in: query
      description: nestedRelated fields to include (csv)
      schema:
        type: string
        default: id
    nestedRelatedInclude:
      name: include
      in: query
      description: nestedRelated relationships to include (csv)
      schema:
        type: string
        default: ""
    nestedRelatedPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: string
    nestedRelatedSort:
      name: sort
      in: query
      description: nestedRelated sort order (csv)
      schema:
        type: string
        example: id
    postFields:
      name: fields
      in: query
      description: post fields to include (csv)
      schema:
        type: string
        default: id,comments,header
    postInclude:
      name: include
      in: query
      description: post relationships to include (csv)
      schema:
        type: string
        default: Comment,Header
    postPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: string
    postSort:
      name: sort
      in: query
      description: post sort order (csv)
      schema:
        type: string
        example: id,comments,header
    primitiveAttributeFields:
      name: fields
      in: query
      description: primitiveAttribute fields to include (csv)
      schema:
        type: string
        default: id,stringValue,intValue,longValue,booleanValue,floatValue,shortValue,doubleValue,jsonNodeValue,arrayNodeValue,objectNodeValue,nullableLongValue,nullableBooleanValue,nullableByteValue,nullableShortValue,nullableIntegerValue,nullableFloatValue,nullableDoubleValue,uuidValue,dateValue,objectValue,mapValueWithEnumKey,mapValueWithListValue,mapValueWithSetValue
    primitiveAttributeInclude:
      name: include
      in: query
      description: primitiveAttribute relationships to include (csv)
      schema:
        type: string
        default: ""
    primitiveAttributePrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    primitiveAttributeSort:
      name: sort
      in: query
      description: primitiveAttribute sort order (csv)
      schema:
        type: string
        example: id,stringValue,intValue,longValue,booleanValue,floatValue,shortValue,doubleValue,jsonNodeValue,arrayNodeValue,objectNodeValue,nullableLongValue,nullableBooleanValue,nullableByteValue,nullableShortValue,nullableIntegerValue,nullableFloatValue,nullableDoubleValue,uuidValue,dateValue,objectValue,mapValueWithEnumKey,mapValueWithListValue,mapValueWithSetValue
    projectsFields:
      name: fields
      in: query
      description: projects fields to include (csv)
      schema:
        type: string
        default: id,name,description,data,tasks,task,links,meta
    projectsInclude:
      name: include
      in: query
      description: projects relationships to include (csv)
      schema:
        type: string
        default: Tasks,Tasks
    projectsPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    projectsSort:
      name: sort
      in: query
      description: projects sort order (csv)
      schema:
        type: string
        example: id,name,description,data,tasks,task,links,meta
    readOnlyTaskFields:
      name: fields
      in: query
      description: readOnlyTask fields to include (csv)
      schema:
        type: string
        default: id,name
    readOnlyTaskInclude:
      name: include
      in: query
      description: readOnlyTask relationships to include (csv)
      schema:
        type: string
        default: ""
    readOnlyTaskPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    readOnlyTaskSort:
      name: sort
      in: query
      description: readOnlyTask sort order (csv)
      schema:
        type: string
        example: id,name
    relationIdTestFields:
      name: fields
      in: query
      description: relationIdTest fields to include (csv)
      schema:
        type: string
        default: id,name,testLookupAlways,testLookupWhenNull,testMultipleValues,testLookupNone,testSerializeEager,testSerializeOnlyId,testNested,testResourceIdRef
    relationIdTestInclude:
      name: include
      in: query
      description: relationIdTest relationships to include (csv)
      schema:
        type: string
        default: Schedule,Schedule,Schedule,Schedule,Schedule,Schedule,RelationIdTest,Schedule
    relationIdTestPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    relationIdTestSort:
      name: sort
      in: query
      description: relationIdTest sort order (csv)
      schema:
        type: string
        example: id,name,testLookupAlways,testLookupWhenNull,testMultipleValues,testLookupNone,testSerializeEager,testSerializeOnlyId,testNested,testResourceIdRef
    relocatedTaskFields:
      name: fields
      in: query
      description: relocatedTask fields to include (csv)
      schema:
        type: string
        default: id,name
    relocatedTaskInclude:
      name: include
      in: query
      description: relocatedTask relationships to include (csv)
      schema:
        type: string
        default: ""
    relocatedTaskPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    relocatedTaskSort:
      name: sort
      in: query
      description: relocatedTask sort order (csv)
      schema:
        type: string
        example: id,name
    renamedIdFields:
      name: fields
      in: query
      description: renamedId fields to include (csv)
      schema:
        type: string
        default: id
    renamedIdInclude:
      name: include
      in: query
      description: renamedId relationships to include (csv)
      schema:
        type: string
        default: ""
    renamedIdPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: string
    renamedIdSort:
      name: sort
      in: query
      description: renamedId sort order (csv)
      schema:
        type: string
        example: id
    scheduleFields:
      name: fields
      in: query
      description: schedule fields to include (csv)
      schema:
        type: string
        default: id,name,description,taskSet,project,projects,status,delayed,customData
    scheduleInclude:
      name: include
      in: query
      description: schedule relationships to include (csv)
      schema:
        type: string
        default: Tasks,Projects,Projects,ScheduleStatus
    schedulePrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    scheduleSort:
      name: sort
      in: query
      description: schedule sort order (csv)
      schema:
        type: string
        example: id,name,description,taskSet,project,projects,status,delayed,customData
    scheduleStatusFields:
      name: fields
      in: query
      description: scheduleStatus fields to include (csv)
      schema:
        type: string
        default: id,description
    scheduleStatusInclude:
      name: include
      in: query
      description: scheduleStatus relationships to include (csv)
      schema:
        type: string
        default: ""
    scheduleStatusPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    scheduleStatusSort:
      name: sort
      in: query
      description: scheduleStatus sort order (csv)
      schema:
        type: string
        example: id,description
    tasksFields:
      name: fields
      in: query
      description: tasks fields to include (csv)
      schema:
        type: string
        default: id,name,project,schedule,projects,includedProject,includedProjects,metaInformation,linksInformation,otherTasks,status
    tasksInclude:
      name: include
      in: query
      description: tasks relationships to include (csv)
      schema:
        type: string
        default: Projects,Schedule,Projects,Projects,Projects
    tasksPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    tasksSort:
      name: sort
      in: query
      description: tasks sort order (csv)
      schema:
        type: string
        example: id,name,project,schedule,projects,includedProject,includedProjects,metaInformation,linksInformation,otherTasks,status
