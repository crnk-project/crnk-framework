components:
  parameters:
    PageLimit:
      description: Max number of items
      in: query
      name: page[limit]
      schema:
        default: 100
        format: int64
        maximum: 1000
        type: integer
    PageOffset:
      description: Page offset
      in: query
      name: page[offset]
      schema:
        default: 0
        format: int64
        type: integer
    NestedFilter:
      description: Customizable query (experimental)
      in: query
      name: filter
      schema:
        additionalProperties: true
        properties:
          AND:
            type: object
          OR:
            type: object
          NOT:
            type: object
        type: object
    commentPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        properties:
          id:
            type: string
          postId:
            type: string
        type: object
    commentInclude:
      description: comment relationships to include (csv)
      in: query
      name: include
      schema:
        default: Post,NestedRelated
        type: string
    commentSort:
      description: comment sort order (csv)
      in: query
      name: sort
      schema:
        example: id,value,post,related,links
        type: string
    commentFields:
      description: comment fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,value,post,related,links
        type: string
    headerSort:
      description: header sort order (csv)
      in: query
      name: sort
      schema:
        example: id,value,post,related,links
        type: string
    headerPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        type: string
    headerFields:
      description: header fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,value,post,related,links
        type: string
    headerInclude:
      description: header relationships to include (csv)
      in: query
      name: include
      schema:
        default: Post,NestedRelated
        type: string
    historicTasksInclude:
      description: historicTasks relationships to include (csv)
      in: query
      name: include
      schema:
        default: ""
        type: string
    historicTasksFields:
      description: historicTasks fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,name
        type: string
    historicTasksSort:
      description: historicTasks sort order (csv)
      in: query
      name: sort
      schema:
        example: id,name
        type: string
    historicTasksPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        format: int64
        type: integer
    nestedRelatedPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        type: string
    nestedRelatedFields:
      description: nestedRelated fields to include (csv)
      in: query
      name: fields
      schema:
        default: id
        type: string
    nestedRelatedSort:
      description: nestedRelated sort order (csv)
      in: query
      name: sort
      schema:
        example: id
        type: string
    nestedRelatedInclude:
      description: nestedRelated relationships to include (csv)
      in: query
      name: include
      schema:
        default: ""
        type: string
    postSort:
      description: post sort order (csv)
      in: query
      name: sort
      schema:
        example: id,comments,header
        type: string
    postInclude:
      description: post relationships to include (csv)
      in: query
      name: include
      schema:
        default: Comment,Header
        type: string
    postPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        type: string
    postFields:
      description: post fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,comments,header
        type: string
    primitiveAttributeFields:
      description: primitiveAttribute fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,stringValue,intValue,longValue,booleanValue,floatValue,shortValue,doubleValue,jsonNodeValue,arrayNodeValue,objectNodeValue,nullableLongValue,nullableBooleanValue,nullableByteValue,nullableShortValue,nullableIntegerValue,nullableFloatValue,nullableDoubleValue,uuidValue,dateValue,objectValue,mapValueWithEnumKey,mapValueWithListValue,mapValueWithSetValue
        type: string
    primitiveAttributePrimaryKey:
      in: path
      name: id
      required: true
      schema:
        format: int64
        type: integer
    primitiveAttributeSort:
      description: primitiveAttribute sort order (csv)
      in: query
      name: sort
      schema:
        example: id,stringValue,intValue,longValue,booleanValue,floatValue,shortValue,doubleValue,jsonNodeValue,arrayNodeValue,objectNodeValue,nullableLongValue,nullableBooleanValue,nullableByteValue,nullableShortValue,nullableIntegerValue,nullableFloatValue,nullableDoubleValue,uuidValue,dateValue,objectValue,mapValueWithEnumKey,mapValueWithListValue,mapValueWithSetValue
        type: string
    primitiveAttributeInclude:
      description: primitiveAttribute relationships to include (csv)
      in: query
      name: include
      schema:
        default: ""
        type: string
    projectsInclude:
      description: projects relationships to include (csv)
      in: query
      name: include
      schema:
        default: Tasks,Tasks
        type: string
    projectsSort:
      description: projects sort order (csv)
      in: query
      name: sort
      schema:
        example: id,name,description,data,tasks,task,links,meta
        type: string
    projectsFields:
      description: projects fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,name,description,data,tasks,task,links,meta
        type: string
    projectsPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        format: int64
        type: integer
    readOnlyTaskInclude:
      description: readOnlyTask relationships to include (csv)
      in: query
      name: include
      schema:
        default: ""
        type: string
    readOnlyTaskFields:
      description: readOnlyTask fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,name
        type: string
    readOnlyTaskSort:
      description: readOnlyTask sort order (csv)
      in: query
      name: sort
      schema:
        example: id,name
        type: string
    readOnlyTaskPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        format: int64
        type: integer
    relationIdTestPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        format: int64
        type: integer
    relationIdTestInclude:
      description: relationIdTest relationships to include (csv)
      in: query
      name: include
      schema:
        default: Schedule,Schedule,Schedule,Schedule,Schedule,Schedule,RelationIdTest,Schedule
        type: string
    relationIdTestSort:
      description: relationIdTest sort order (csv)
      in: query
      name: sort
      schema:
        example: id,name,testLookupAlways,testLookupWhenNull,testMultipleValues,testLookupNone,testSerializeEager,testSerializeOnlyId,testNested,testResourceIdRef
        type: string
    relationIdTestFields:
      description: relationIdTest fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,name,testLookupAlways,testLookupWhenNull,testMultipleValues,testLookupNone,testSerializeEager,testSerializeOnlyId,testNested,testResourceIdRef
        type: string
    relocatedTaskPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        format: int64
        type: integer
    relocatedTaskFields:
      description: relocatedTask fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,name
        type: string
    relocatedTaskSort:
      description: relocatedTask sort order (csv)
      in: query
      name: sort
      schema:
        example: id,name
        type: string
    relocatedTaskInclude:
      description: relocatedTask relationships to include (csv)
      in: query
      name: include
      schema:
        default: ""
        type: string
    renamedIdPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        type: string
    renamedIdSort:
      description: renamedId sort order (csv)
      in: query
      name: sort
      schema:
        example: id
        type: string
    renamedIdInclude:
      description: renamedId relationships to include (csv)
      in: query
      name: include
      schema:
        default: ""
        type: string
    renamedIdFields:
      description: renamedId fields to include (csv)
      in: query
      name: fields
      schema:
        default: id
        type: string
    scheduleSort:
      description: schedule sort order (csv)
      in: query
      name: sort
      schema:
        example: id,name,description,taskSet,project,projects,status,delayed,customData
        type: string
    schedulePrimaryKey:
      in: path
      name: id
      required: true
      schema:
        format: int64
        type: integer
    scheduleInclude:
      description: schedule relationships to include (csv)
      in: query
      name: include
      schema:
        default: Tasks,Projects,Projects,ScheduleStatus
        type: string
    scheduleFields:
      description: schedule fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,name,description,taskSet,project,projects,status,delayed,customData
        type: string
    scheduleStatusSort:
      description: scheduleStatus sort order (csv)
      in: query
      name: sort
      schema:
        example: id,description
        type: string
    scheduleStatusPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        format: int64
        type: integer
    scheduleStatusFields:
      description: scheduleStatus fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,description
        type: string
    scheduleStatusInclude:
      description: scheduleStatus relationships to include (csv)
      in: query
      name: include
      schema:
        default: ""
        type: string
    tasksFields:
      description: tasks fields to include (csv)
      in: query
      name: fields
      schema:
        default: id,name,project,schedule,projects,includedProject,includedProjects,metaInformation,linksInformation,otherTasks,status
        type: string
    tasksPrimaryKey:
      in: path
      name: id
      required: true
      schema:
        format: int64
        type: integer
    tasksInclude:
      description: tasks relationships to include (csv)
      in: query
      name: include
      schema:
        default: Projects,Schedule,Projects,Projects,Projects
        type: string
    tasksSort:
      description: tasks sort order (csv)
      in: query
      name: sort
      schema:
        example: id,name,project,schedule,projects,includedProject,includedProjects,metaInformation,linksInformation,otherTasks,status
        type: string
  responses:
    400:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: BAD_REQUEST
    401:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: UNAUTHORIZED
    403:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: FORBIDDEN
    404:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: NOT_FOUND
    405:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: METHOD_NOT_ALLOWED
    409:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: CONFLICT
    412:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: PRECONDITION_FAILED
    415:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: UNSUPPORTED_MEDIA_TYPE
    422:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: UNPROCESSABLE_ENTITY
    500:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: INTERNAL_SERVER_ERROR
    501:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: NOT_IMPLEMENTED
    502:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: BAD_GATEWAY
    503:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: SERVICE_UNAVAILABLE
    504:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: GATEWAY_TIMEOUT
    505:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
      description: HTTP_VERSION_NOT_SUPPORTED
    Accepted:
      content:
        application/vnd.api+json:
          schema:
            properties:
              id:
                description: a unique identifier for this pending action
                type: string
            type: object
      description: Accepted
    NoContent:
      description: No Content
    commentResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/commentResourceReferenceResponseSchema'
      description: OK
    commentResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/commentResourceReferencesResponseSchema'
      description: OK
    commentResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/commentResourceResponseSchema'
      description: OK
    commentResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/commentResourcesResponseSchema'
      description: OK
    headerResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/headerResourceReferenceResponseSchema'
      description: OK
    headerResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/headerResourceReferencesResponseSchema'
      description: OK
    headerResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/headerResourceResponseSchema'
      description: OK
    headerResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/headerResourcesResponseSchema'
      description: OK
    historicTasksResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/historicTasksResourceReferenceResponseSchema'
      description: OK
    historicTasksResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/historicTasksResourceReferencesResponseSchema'
      description: OK
    historicTasksResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/historicTasksResourceResponseSchema'
      description: OK
    historicTasksResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/historicTasksResourcesResponseSchema'
      description: OK
    nestedRelatedResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      description: OK
    nestedRelatedResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/nestedRelatedResourceReferencesResponseSchema'
      description: OK
    nestedRelatedResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/nestedRelatedResourceResponseSchema'
      description: OK
    nestedRelatedResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/nestedRelatedResourcesResponseSchema'
      description: OK
    postResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      description: OK
    postResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/postResourceReferencesResponseSchema'
      description: OK
    postResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/postResourceResponseSchema'
      description: OK
    postResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/postResourcesResponseSchema'
      description: OK
    primitiveAttributeResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/primitiveAttributeResourceReferenceResponseSchema'
      description: OK
    primitiveAttributeResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/primitiveAttributeResourceReferencesResponseSchema'
      description: OK
    primitiveAttributeResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/primitiveAttributeResourceResponseSchema'
      description: OK
    primitiveAttributeResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/primitiveAttributeResourcesResponseSchema'
      description: OK
    projectsResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/projectsResourceReferenceResponseSchema'
      description: OK
    projectsResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      description: OK
    projectsResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/projectsResourceResponseSchema'
      description: OK
    projectsResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/projectsResourcesResponseSchema'
      description: OK
    readOnlyTaskResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/readOnlyTaskResourceReferenceResponseSchema'
      description: OK
    readOnlyTaskResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/readOnlyTaskResourceReferencesResponseSchema'
      description: OK
    readOnlyTaskResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/readOnlyTaskResourceResponseSchema'
      description: OK
    readOnlyTaskResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/readOnlyTaskResourcesResponseSchema'
      description: OK
    relationIdTestResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relationIdTestResourceReferenceResponseSchema'
      description: OK
    relationIdTestResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relationIdTestResourceReferencesResponseSchema'
      description: OK
    relationIdTestResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relationIdTestResourceResponseSchema'
      description: OK
    relationIdTestResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relationIdTestResourcesResponseSchema'
      description: OK
    relocatedTaskResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relocatedTaskResourceReferenceResponseSchema'
      description: OK
    relocatedTaskResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relocatedTaskResourceReferencesResponseSchema'
      description: OK
    relocatedTaskResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relocatedTaskResourceResponseSchema'
      description: OK
    relocatedTaskResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/relocatedTaskResourcesResponseSchema'
      description: OK
    renamedIdResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/renamedIdResourceReferenceResponseSchema'
      description: OK
    renamedIdResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/renamedIdResourceReferencesResponseSchema'
      description: OK
    renamedIdResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/renamedIdResourceResponseSchema'
      description: OK
    renamedIdResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/renamedIdResourcesResponseSchema'
      description: OK
    scheduleResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      description: OK
    scheduleResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleResourceReferencesResponseSchema'
      description: OK
    scheduleResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleResourceResponseSchema'
      description: OK
    scheduleResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleResourcesResponseSchema'
      description: OK
    scheduleStatusResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleStatusResourceReferenceResponseSchema'
      description: OK
    scheduleStatusResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleStatusResourceReferencesResponseSchema'
      description: OK
    scheduleStatusResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleStatusResourceResponseSchema'
      description: OK
    scheduleStatusResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/scheduleStatusResourcesResponseSchema'
      description: OK
    tasksResourceReferenceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/tasksResourceReferenceResponseSchema'
      description: OK
    tasksResourceReferencesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/tasksResourceReferencesResponseSchema'
      description: OK
    tasksResourceResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/tasksResourceResponseSchema'
      description: OK
    tasksResourcesResponse:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/tasksResourcesResponseSchema'
      description: OK
  schemas:
    ApiError:
      properties:
        id:
          description: a unique identifier for this particular occurrence of the problem
          type: string
        links:
          properties:
            about:
              description: a link that leads to further details about this particular
                occurrence of the problem
              type: string
          type: object
        status:
          description: the HTTP status code applicable to this problem, expressed
            as a string value
          type: string
        code:
          description: an application-specific error code, expressed as a string value
          type: string
        title:
          description: a short, human-readable summary of the problem that SHOULD
            NOT change from occurrence to occurrence of the problem, except for purposes
            of localization
          type: string
        detail:
          description: a human-readable explanation specific to this occurrence of
            the problem. Like 'title', this field’s value can be localized.
          type: string
        source:
          properties:
            pointer:
              description: a JSON Pointer [RFC6901] to the associated entity in the
                request document
              type: string
            parameter:
              description: a string indicating which URI query parameter caused the
                error
              type: string
          type: object
        meta:
          additionalProperties: true
          description: a meta object containing non-standard meta-information about
            the error
          type: object
      type: object
    ResponseMixin:
      description: A JSON-API document with a single resource
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ApiError'
          type: array
        jsonapi:
          properties:
            version:
              type: string
          type: object
        links:
          properties:
            self:
              description: the link that generated the current response document
              type: string
        included:
          description: Included resources
          items:
            properties:
              type:
                description: The JSON:API resource type
                type: string
              id:
                description: The JSON:API resource ID
                type: string
            type: object
          type: array
      type: object
    ListResponseMixin:
      description: A page of results
      properties:
        jsonapi:
          properties:
            version:
              type: string
          type: object
        errors:
          items:
            $ref: '#/components/schemas/ApiError'
          type: array
        meta:
          additionalProperties: true
          properties:
            totalResourceCount:
              description: The total number of items available
              format: int32
              type: integer
          type: object
        links:
          properties:
            self:
              description: Link to this page of results
              type: string
            prev:
              description: Link to the previous page of results
              type: string
            next:
              description: Link to the next page of results
              type: string
            last:
              description: Link to the last page of results
              type: string
            first:
              description: Link to the first page of results
              type: string
          type: object
      type: object
    commentPatchResource:
      allOf:
      - $ref: '#/components/schemas/commentResourceReference'
      - $ref: '#/components/schemas/commentResourcePatchAttributes'
    commentResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/commentResourceSchema'
            type: array
        required:
        - data
    commentResourceReference:
      properties:
        type:
          description: The JSON:API resource type (Comment)
          enum:
          - Comment
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    commentResourcePatchAttributes:
      properties:
        attributes:
          properties:
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            links:
              nullable: true
              properties:
                self:
                  type: string
              type: object
            value:
              nullable: true
              type: string
          type: object
      type: object
    commentResourcePostAttributes:
      properties:
        attributes:
          properties:
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            links:
              nullable: true
              properties:
                self:
                  type: string
              type: object
            value:
              nullable: true
              type: string
          type: object
      type: object
    commentResourceAttributes:
      properties:
        attributes:
          properties:
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            links:
              nullable: true
              properties:
                self:
                  type: string
              type: object
            value:
              nullable: true
              type: string
          type: object
      type: object
    commentResourceSchema:
      allOf:
      - $ref: '#/components/schemas/commentResourceReference'
      - $ref: '#/components/schemas/commentResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    commentResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/commentResourceReference'
      type: object
    commentResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/commentResourceReference'
          type: array
      type: object
    commentPostResource:
      allOf:
      - $ref: '#/components/schemas/commentResourceReference'
      - $ref: '#/components/schemas/commentResourcePostAttributes'
    commentResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/commentResourceSchema'
            type: array
        required:
        - data
    headerResourcePatchAttributes:
      properties:
        attributes:
          properties:
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            links:
              nullable: true
              properties:
                self:
                  type: string
              type: object
            value:
              nullable: true
              type: string
          type: object
      type: object
    headerPostResource:
      allOf:
      - $ref: '#/components/schemas/headerResourceReference'
      - $ref: '#/components/schemas/headerResourcePostAttributes'
    headerResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/headerResourceSchema'
            type: array
        required:
        - data
    headerResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/headerResourceReference'
      type: object
    headerResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/headerResourceSchema'
            type: array
        required:
        - data
    headerResourceAttributes:
      properties:
        attributes:
          properties:
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            links:
              nullable: true
              properties:
                self:
                  type: string
              type: object
            value:
              nullable: true
              type: string
          type: object
      type: object
    headerPatchResource:
      allOf:
      - $ref: '#/components/schemas/headerResourceReference'
      - $ref: '#/components/schemas/headerResourcePatchAttributes'
    headerResourcePostAttributes:
      properties:
        attributes:
          properties:
            post:
              $ref: '#/components/schemas/postResourceReference'
            related:
              $ref: '#/components/schemas/nestedRelatedResourceReference'
            links:
              nullable: true
              properties:
                self:
                  type: string
              type: object
            value:
              nullable: true
              type: string
          type: object
      type: object
    headerResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/headerResourceReference'
          type: array
      type: object
    headerResourceReference:
      properties:
        type:
          description: The JSON:API resource type (Header)
          enum:
          - Header
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    headerResourceSchema:
      allOf:
      - $ref: '#/components/schemas/headerResourceReference'
      - $ref: '#/components/schemas/headerResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    historicTasksResourcePostAttributes:
      properties:
        attributes:
          properties:
            name:
              nullable: true
              type: string
          type: object
      type: object
    historicTasksResourceSchema:
      allOf:
      - $ref: '#/components/schemas/historicTasksResourceReference'
      - $ref: '#/components/schemas/historicTasksResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    historicTasksPostResource:
      allOf:
      - $ref: '#/components/schemas/historicTasksResourceReference'
      - $ref: '#/components/schemas/historicTasksResourcePostAttributes'
    historicTasksResourceReference:
      properties:
        type:
          description: The JSON:API resource type (HistoricTasks)
          enum:
          - HistoricTasks
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    historicTasksResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/historicTasksResourceSchema'
            type: array
        required:
        - data
    historicTasksResourcePatchAttributes:
      properties:
        attributes:
          properties:
            name:
              nullable: true
              type: string
          type: object
      type: object
    historicTasksResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/historicTasksResourceSchema'
            type: array
        required:
        - data
    historicTasksResourceAttributes:
      properties:
        attributes:
          properties:
            name:
              nullable: true
              type: string
          type: object
      type: object
    historicTasksResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/historicTasksResourceReference'
          type: array
      type: object
    historicTasksPatchResource:
      allOf:
      - $ref: '#/components/schemas/historicTasksResourceReference'
      - $ref: '#/components/schemas/historicTasksResourcePatchAttributes'
    historicTasksResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/historicTasksResourceReference'
      type: object
    nestedRelatedResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/nestedRelatedResourceReference'
      type: object
    nestedRelatedResourceSchema:
      allOf:
      - $ref: '#/components/schemas/nestedRelatedResourceReference'
      - $ref: '#/components/schemas/nestedRelatedResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    nestedRelatedResourcePatchAttributes:
      properties:
        attributes:
          properties: {}
          type: object
      type: object
    nestedRelatedResourcePostAttributes:
      properties:
        attributes:
          properties: {}
          type: object
      type: object
    nestedRelatedResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/nestedRelatedResourceReference'
          type: array
      type: object
    nestedRelatedResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/nestedRelatedResourceSchema'
            type: array
        required:
        - data
    nestedRelatedResourceAttributes:
      properties:
        attributes:
          properties: {}
          type: object
      type: object
    nestedRelatedPostResource:
      allOf:
      - $ref: '#/components/schemas/nestedRelatedResourceReference'
      - $ref: '#/components/schemas/nestedRelatedResourcePostAttributes'
    nestedRelatedResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/nestedRelatedResourceSchema'
            type: array
        required:
        - data
    nestedRelatedPatchResource:
      allOf:
      - $ref: '#/components/schemas/nestedRelatedResourceReference'
      - $ref: '#/components/schemas/nestedRelatedResourcePatchAttributes'
    nestedRelatedResourceReference:
      properties:
        type:
          description: The JSON:API resource type (NestedRelated)
          enum:
          - NestedRelated
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    postResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/postResourceReference'
          type: array
      type: object
    postResourceAttributes:
      properties:
        attributes:
          properties:
            comments:
              items:
                $ref: '#/components/schemas/commentResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            header:
              $ref: '#/components/schemas/headerResourceReference'
          type: object
      type: object
    postResourceSchema:
      allOf:
      - $ref: '#/components/schemas/postResourceReference'
      - $ref: '#/components/schemas/postResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    postPostResource:
      allOf:
      - $ref: '#/components/schemas/postResourceReference'
      - $ref: '#/components/schemas/postResourcePostAttributes'
    postResourcePatchAttributes:
      properties:
        attributes:
          properties:
            comments:
              items:
                $ref: '#/components/schemas/commentResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            header:
              $ref: '#/components/schemas/headerResourceReference'
          type: object
      type: object
    postResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/postResourceSchema'
            type: array
        required:
        - data
    postResourcePostAttributes:
      properties:
        attributes:
          properties:
            comments:
              items:
                $ref: '#/components/schemas/commentResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            header:
              $ref: '#/components/schemas/headerResourceReference'
          type: object
      type: object
    postResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/postResourceSchema'
            type: array
        required:
        - data
    postPatchResource:
      allOf:
      - $ref: '#/components/schemas/postResourceReference'
      - $ref: '#/components/schemas/postResourcePatchAttributes'
    postResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/postResourceReference'
      type: object
    postResourceReference:
      properties:
        type:
          description: The JSON:API resource type (Post)
          enum:
          - Post
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    primitiveAttributeResourcePostAttributes:
      properties:
        attributes:
          properties:
            dateValue:
              format: date
              nullable: true
              type: string
            intValue:
              format: int32
              nullable: false
              type: integer
            nullableByteValue:
              format: byte
              nullable: true
              type: string
            mapValueWithListValue:
              items:
                type: string
              nullable: true
              type: array
              uniqueItems: false
            nullableLongValue:
              format: int64
              nullable: true
              type: integer
            mapValueWithEnumKey:
              nullable: true
              type: string
            floatValue:
              format: float
              nullable: true
              type: number
            nullableBooleanValue:
              nullable: true
              type: boolean
            objectValue:
              nullable: true
              type: object
            doubleValue:
              format: double
              nullable: false
              type: number
            nullableIntegerValue:
              format: int32
              nullable: true
              type: integer
            nullableDoubleValue:
              format: double
              nullable: true
              type: number
            longValue:
              format: int64
              nullable: false
              type: integer
            nullableFloatValue:
              format: float
              nullable: true
              type: number
            stringValue:
              nullable: true
              type: string
            jsonNodeValue:
              nullable: true
              type: object
            objectNodeValue:
              nullable: true
              type: object
            mapValueWithSetValue:
              items:
                type: string
              nullable: true
              type: array
              uniqueItems: true
            booleanValue:
              nullable: false
              type: boolean
            shortValue:
              format: int32
              maximum: 32767
              minimum: -32768
              nullable: false
              type: integer
            uuidValue:
              format: uuid
              nullable: true
              type: string
            arrayNodeValue:
              items: {}
              nullable: true
              type: array
            nullableShortValue:
              format: int32
              maximum: 32767
              minimum: -32768
              nullable: true
              type: integer
          type: object
      type: object
    primitiveAttributeResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/primitiveAttributeResourceReference'
          type: array
      type: object
    primitiveAttributeResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/primitiveAttributeResourceReference'
      type: object
    primitiveAttributeResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/primitiveAttributeResourceSchema'
            type: array
        required:
        - data
    primitiveAttributeResourceSchema:
      allOf:
      - $ref: '#/components/schemas/primitiveAttributeResourceReference'
      - $ref: '#/components/schemas/primitiveAttributeResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    primitiveAttributeResourceAttributes:
      properties:
        attributes:
          properties:
            dateValue:
              format: date
              nullable: true
              type: string
            intValue:
              format: int32
              nullable: false
              type: integer
            nullableByteValue:
              format: byte
              nullable: true
              type: string
            mapValueWithListValue:
              items:
                type: string
              nullable: true
              type: array
              uniqueItems: false
            nullableLongValue:
              format: int64
              nullable: true
              type: integer
            mapValueWithEnumKey:
              nullable: true
              type: string
            floatValue:
              format: float
              nullable: true
              type: number
            nullableBooleanValue:
              nullable: true
              type: boolean
            objectValue:
              nullable: true
              type: object
            doubleValue:
              format: double
              nullable: false
              type: number
            nullableIntegerValue:
              format: int32
              nullable: true
              type: integer
            nullableDoubleValue:
              format: double
              nullable: true
              type: number
            longValue:
              format: int64
              nullable: false
              type: integer
            nullableFloatValue:
              format: float
              nullable: true
              type: number
            stringValue:
              nullable: true
              type: string
            jsonNodeValue:
              nullable: true
              type: object
            objectNodeValue:
              nullable: true
              type: object
            mapValueWithSetValue:
              items:
                type: string
              nullable: true
              type: array
              uniqueItems: true
            booleanValue:
              nullable: false
              type: boolean
            shortValue:
              format: int32
              maximum: 32767
              minimum: -32768
              nullable: false
              type: integer
            uuidValue:
              format: uuid
              nullable: true
              type: string
            arrayNodeValue:
              items: {}
              nullable: true
              type: array
            nullableShortValue:
              format: int32
              maximum: 32767
              minimum: -32768
              nullable: true
              type: integer
          type: object
      type: object
    primitiveAttributeResourceReference:
      properties:
        type:
          description: The JSON:API resource type (PrimitiveAttribute)
          enum:
          - PrimitiveAttribute
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    primitiveAttributeResourcePatchAttributes:
      properties:
        attributes:
          properties:
            dateValue:
              format: date
              nullable: true
              type: string
            intValue:
              format: int32
              nullable: false
              type: integer
            nullableByteValue:
              format: byte
              nullable: true
              type: string
            mapValueWithListValue:
              items:
                type: string
              nullable: true
              type: array
              uniqueItems: false
            nullableLongValue:
              format: int64
              nullable: true
              type: integer
            mapValueWithEnumKey:
              nullable: true
              type: string
            floatValue:
              format: float
              nullable: true
              type: number
            nullableBooleanValue:
              nullable: true
              type: boolean
            objectValue:
              nullable: true
              type: object
            doubleValue:
              format: double
              nullable: false
              type: number
            nullableIntegerValue:
              format: int32
              nullable: true
              type: integer
            nullableDoubleValue:
              format: double
              nullable: true
              type: number
            longValue:
              format: int64
              nullable: false
              type: integer
            nullableFloatValue:
              format: float
              nullable: true
              type: number
            stringValue:
              nullable: true
              type: string
            jsonNodeValue:
              nullable: true
              type: object
            objectNodeValue:
              nullable: true
              type: object
            mapValueWithSetValue:
              items:
                type: string
              nullable: true
              type: array
              uniqueItems: true
            booleanValue:
              nullable: false
              type: boolean
            shortValue:
              format: int32
              maximum: 32767
              minimum: -32768
              nullable: false
              type: integer
            uuidValue:
              format: uuid
              nullable: true
              type: string
            arrayNodeValue:
              items: {}
              nullable: true
              type: array
            nullableShortValue:
              format: int32
              maximum: 32767
              minimum: -32768
              nullable: true
              type: integer
          type: object
      type: object
    primitiveAttributePatchResource:
      allOf:
      - $ref: '#/components/schemas/primitiveAttributeResourceReference'
      - $ref: '#/components/schemas/primitiveAttributeResourcePatchAttributes'
    primitiveAttributeResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/primitiveAttributeResourceSchema'
            type: array
        required:
        - data
    primitiveAttributePostResource:
      allOf:
      - $ref: '#/components/schemas/primitiveAttributeResourceReference'
      - $ref: '#/components/schemas/primitiveAttributeResourcePostAttributes'
    projectsPatchResource:
      allOf:
      - $ref: '#/components/schemas/projectsResourceReference'
      - $ref: '#/components/schemas/projectsResourcePatchAttributes'
    projectsPostResource:
      allOf:
      - $ref: '#/components/schemas/projectsResourceReference'
      - $ref: '#/components/schemas/projectsResourcePostAttributes'
    projectsResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/projectsResourceSchema'
            type: array
        required:
        - data
    projectsResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/projectsResourceReference'
      type: object
    projectsResourceReference:
      properties:
        type:
          description: The JSON:API resource type (Projects)
          enum:
          - Projects
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    projectsResourceSchema:
      allOf:
      - $ref: '#/components/schemas/projectsResourceReference'
      - $ref: '#/components/schemas/projectsResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    projectsResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/projectsResourceReference'
          type: array
      type: object
    projectsResourcePostAttributes:
      properties:
        attributes:
          properties:
            task:
              $ref: '#/components/schemas/tasksResourceReference'
            data:
              nullable: true
              properties:
                data:
                  type: string
                keywords:
                  items:
                    type: string
                  type: array
                  uniqueItems: false
                customData:
                  type: string
                due:
                  format: date-time
                  type: string
              type: object
            meta:
              nullable: true
              properties:
                value:
                  type: string
              type: object
            name:
              nullable: true
              type: string
            description:
              nullable: true
              type: string
            links:
              nullable: true
              properties:
                value:
                  type: string
              type: object
            tasks:
              items:
                $ref: '#/components/schemas/tasksResourceReference'
              nullable: true
              type: array
              uniqueItems: false
          type: object
      type: object
    projectsResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/projectsResourceSchema'
            type: array
        required:
        - data
    projectsResourceAttributes:
      properties:
        attributes:
          properties:
            task:
              $ref: '#/components/schemas/tasksResourceReference'
            data:
              nullable: true
              properties:
                data:
                  type: string
                keywords:
                  items:
                    type: string
                  type: array
                  uniqueItems: false
                customData:
                  type: string
                due:
                  format: date-time
                  type: string
              type: object
            meta:
              nullable: true
              properties:
                value:
                  type: string
              type: object
            name:
              nullable: true
              type: string
            description:
              nullable: true
              type: string
            links:
              nullable: true
              properties:
                value:
                  type: string
              type: object
            tasks:
              items:
                $ref: '#/components/schemas/tasksResourceReference'
              nullable: true
              type: array
              uniqueItems: false
          type: object
      type: object
    projectsResourcePatchAttributes:
      properties:
        attributes:
          properties:
            task:
              $ref: '#/components/schemas/tasksResourceReference'
            data:
              nullable: true
              properties:
                data:
                  type: string
                keywords:
                  items:
                    type: string
                  type: array
                  uniqueItems: false
                customData:
                  type: string
                due:
                  format: date-time
                  type: string
              type: object
            meta:
              nullable: true
              properties:
                value:
                  type: string
              type: object
            name:
              nullable: true
              type: string
            description:
              nullable: true
              type: string
            links:
              nullable: true
              properties:
                value:
                  type: string
              type: object
            tasks:
              items:
                $ref: '#/components/schemas/tasksResourceReference'
              nullable: true
              type: array
              uniqueItems: false
          type: object
      type: object
    readOnlyTaskResourcePatchAttributes:
      properties:
        attributes:
          properties: {}
          type: object
      type: object
    readOnlyTaskPatchResource:
      allOf:
      - $ref: '#/components/schemas/readOnlyTaskResourceReference'
      - $ref: '#/components/schemas/readOnlyTaskResourcePatchAttributes'
    readOnlyTaskResourceAttributes:
      properties:
        attributes:
          properties:
            name:
              nullable: true
              type: string
          type: object
      type: object
    readOnlyTaskResourcePostAttributes:
      properties:
        attributes:
          properties: {}
          type: object
      type: object
    readOnlyTaskPostResource:
      allOf:
      - $ref: '#/components/schemas/readOnlyTaskResourceReference'
      - $ref: '#/components/schemas/readOnlyTaskResourcePostAttributes'
    readOnlyTaskResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/readOnlyTaskResourceReference'
      type: object
    readOnlyTaskResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/readOnlyTaskResourceReference'
          type: array
      type: object
    readOnlyTaskResourceSchema:
      allOf:
      - $ref: '#/components/schemas/readOnlyTaskResourceReference'
      - $ref: '#/components/schemas/readOnlyTaskResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    readOnlyTaskResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/readOnlyTaskResourceSchema'
            type: array
        required:
        - data
    readOnlyTaskResourceReference:
      properties:
        type:
          description: The JSON:API resource type (ReadOnlyTask)
          enum:
          - ReadOnlyTask
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    readOnlyTaskResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/readOnlyTaskResourceSchema'
            type: array
        required:
        - data
    relationIdTestPostResource:
      allOf:
      - $ref: '#/components/schemas/relationIdTestResourceReference'
      - $ref: '#/components/schemas/relationIdTestResourcePostAttributes'
    relationIdTestResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/relationIdTestResourceReference'
      type: object
    relationIdTestResourceReference:
      properties:
        type:
          description: The JSON:API resource type (RelationIdTest)
          enum:
          - RelationIdTest
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    relationIdTestResourcePatchAttributes:
      properties:
        attributes:
          properties:
            testLookupAlways:
              $ref: '#/components/schemas/scheduleResourceReference'
            testResourceIdRef:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeEager:
              $ref: '#/components/schemas/scheduleResourceReference'
            name:
              nullable: true
              type: string
            testLookupNone:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeOnlyId:
              $ref: '#/components/schemas/scheduleResourceReference'
            testNested:
              $ref: '#/components/schemas/relationIdTestResourceReference'
            testLookupWhenNull:
              $ref: '#/components/schemas/scheduleResourceReference'
            testMultipleValues:
              items:
                $ref: '#/components/schemas/scheduleResourceReference'
              nullable: true
              type: array
              uniqueItems: false
          type: object
      type: object
    relationIdTestResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/relationIdTestResourceSchema'
            type: array
        required:
        - data
    relationIdTestResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/relationIdTestResourceSchema'
            type: array
        required:
        - data
    relationIdTestPatchResource:
      allOf:
      - $ref: '#/components/schemas/relationIdTestResourceReference'
      - $ref: '#/components/schemas/relationIdTestResourcePatchAttributes'
    relationIdTestResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/relationIdTestResourceReference'
          type: array
      type: object
    relationIdTestResourceAttributes:
      properties:
        attributes:
          properties:
            testLookupAlways:
              $ref: '#/components/schemas/scheduleResourceReference'
            testResourceIdRef:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeEager:
              $ref: '#/components/schemas/scheduleResourceReference'
            name:
              nullable: true
              type: string
            testLookupNone:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeOnlyId:
              $ref: '#/components/schemas/scheduleResourceReference'
            testNested:
              $ref: '#/components/schemas/relationIdTestResourceReference'
            testLookupWhenNull:
              $ref: '#/components/schemas/scheduleResourceReference'
            testMultipleValues:
              items:
                $ref: '#/components/schemas/scheduleResourceReference'
              nullable: true
              type: array
              uniqueItems: false
          type: object
      type: object
    relationIdTestResourcePostAttributes:
      properties:
        attributes:
          properties:
            testLookupAlways:
              $ref: '#/components/schemas/scheduleResourceReference'
            testResourceIdRef:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeEager:
              $ref: '#/components/schemas/scheduleResourceReference'
            name:
              nullable: true
              type: string
            testLookupNone:
              $ref: '#/components/schemas/scheduleResourceReference'
            testSerializeOnlyId:
              $ref: '#/components/schemas/scheduleResourceReference'
            testNested:
              $ref: '#/components/schemas/relationIdTestResourceReference'
            testLookupWhenNull:
              $ref: '#/components/schemas/scheduleResourceReference'
            testMultipleValues:
              items:
                $ref: '#/components/schemas/scheduleResourceReference'
              nullable: true
              type: array
              uniqueItems: false
          type: object
      type: object
    relationIdTestResourceSchema:
      allOf:
      - $ref: '#/components/schemas/relationIdTestResourceReference'
      - $ref: '#/components/schemas/relationIdTestResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    relocatedTaskResourcePostAttributes:
      properties:
        attributes:
          properties:
            name:
              nullable: true
              type: string
          type: object
      type: object
    relocatedTaskResourcePatchAttributes:
      properties:
        attributes:
          properties:
            name:
              nullable: true
              type: string
          type: object
      type: object
    relocatedTaskResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/relocatedTaskResourceSchema'
            type: array
        required:
        - data
    relocatedTaskResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/relocatedTaskResourceSchema'
            type: array
        required:
        - data
    relocatedTaskResourceAttributes:
      properties:
        attributes:
          properties:
            name:
              nullable: true
              type: string
          type: object
      type: object
    relocatedTaskPatchResource:
      allOf:
      - $ref: '#/components/schemas/relocatedTaskResourceReference'
      - $ref: '#/components/schemas/relocatedTaskResourcePatchAttributes'
    relocatedTaskPostResource:
      allOf:
      - $ref: '#/components/schemas/relocatedTaskResourceReference'
      - $ref: '#/components/schemas/relocatedTaskResourcePostAttributes'
    relocatedTaskResourceSchema:
      allOf:
      - $ref: '#/components/schemas/relocatedTaskResourceReference'
      - $ref: '#/components/schemas/relocatedTaskResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    relocatedTaskResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/relocatedTaskResourceReference'
          type: array
      type: object
    relocatedTaskResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/relocatedTaskResourceReference'
      type: object
    relocatedTaskResourceReference:
      properties:
        type:
          description: The JSON:API resource type (RelocatedTask)
          enum:
          - RelocatedTask
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    renamedIdResourceSchema:
      allOf:
      - $ref: '#/components/schemas/renamedIdResourceReference'
      - $ref: '#/components/schemas/renamedIdResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    renamedIdResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/renamedIdResourceSchema'
            type: array
        required:
        - data
    renamedIdResourceAttributes:
      properties:
        attributes:
          properties: {}
          type: object
      type: object
    renamedIdPostResource:
      allOf:
      - $ref: '#/components/schemas/renamedIdResourceReference'
      - $ref: '#/components/schemas/renamedIdResourcePostAttributes'
    renamedIdResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/renamedIdResourceSchema'
            type: array
        required:
        - data
    renamedIdResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/renamedIdResourceReference'
      type: object
    renamedIdResourceReference:
      properties:
        type:
          description: The JSON:API resource type (RenamedId)
          enum:
          - RenamedId
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    renamedIdPatchResource:
      allOf:
      - $ref: '#/components/schemas/renamedIdResourceReference'
      - $ref: '#/components/schemas/renamedIdResourcePatchAttributes'
    renamedIdResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/renamedIdResourceReference'
          type: array
      type: object
    renamedIdResourcePostAttributes:
      properties:
        attributes:
          properties: {}
          type: object
      type: object
    renamedIdResourcePatchAttributes:
      properties:
        attributes:
          properties: {}
          type: object
      type: object
    scheduleResourceSchema:
      allOf:
      - $ref: '#/components/schemas/scheduleResourceReference'
      - $ref: '#/components/schemas/scheduleResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    scheduleResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/scheduleResourceReference'
          type: array
      type: object
    schedulePostResource:
      allOf:
      - $ref: '#/components/schemas/scheduleResourceReference'
      - $ref: '#/components/schemas/scheduleResourcePostAttributes'
    scheduleResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/scheduleResourceSchema'
            type: array
        required:
        - data
    scheduleResourceReference:
      properties:
        type:
          description: The JSON:API resource type (Schedule)
          enum:
          - Schedule
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    scheduleResourcePostAttributes:
      properties:
        attributes:
          properties:
            taskSet:
              items:
                $ref: '#/components/schemas/tasksResourceReference'
              nullable: true
              type: array
              uniqueItems: true
            projects:
              items:
                $ref: '#/components/schemas/projectsResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            name:
              nullable: true
              type: string
            description:
              nullable: true
              type: string
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            delayed:
              nullable: false
              type: boolean
            customData:
              nullable: true
              type: string
            status:
              $ref: '#/components/schemas/scheduleStatusResourceReference'
          type: object
      type: object
    scheduleResourcePatchAttributes:
      properties:
        attributes:
          properties:
            taskSet:
              items:
                $ref: '#/components/schemas/tasksResourceReference'
              nullable: true
              type: array
              uniqueItems: true
            projects:
              items:
                $ref: '#/components/schemas/projectsResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            name:
              nullable: true
              type: string
            description:
              nullable: true
              type: string
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            delayed:
              nullable: false
              type: boolean
            customData:
              nullable: true
              type: string
            status:
              $ref: '#/components/schemas/scheduleStatusResourceReference'
          type: object
      type: object
    scheduleResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/scheduleResourceSchema'
            type: array
        required:
        - data
    scheduleResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/scheduleResourceReference'
      type: object
    schedulePatchResource:
      allOf:
      - $ref: '#/components/schemas/scheduleResourceReference'
      - $ref: '#/components/schemas/scheduleResourcePatchAttributes'
    scheduleResourceAttributes:
      properties:
        attributes:
          properties:
            taskSet:
              items:
                $ref: '#/components/schemas/tasksResourceReference'
              nullable: true
              type: array
              uniqueItems: true
            projects:
              items:
                $ref: '#/components/schemas/projectsResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            name:
              nullable: true
              type: string
            description:
              nullable: true
              type: string
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            delayed:
              nullable: false
              type: boolean
            customData:
              nullable: true
              type: string
            status:
              $ref: '#/components/schemas/scheduleStatusResourceReference'
          type: object
      type: object
    scheduleStatusResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/scheduleStatusResourceSchema'
            type: array
        required:
        - data
    scheduleStatusResourceReference:
      properties:
        type:
          description: The JSON:API resource type (ScheduleStatus)
          enum:
          - ScheduleStatus
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    scheduleStatusResourcePatchAttributes:
      properties:
        attributes:
          properties:
            description:
              nullable: true
              type: string
          type: object
      type: object
    scheduleStatusResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/scheduleStatusResourceSchema'
            type: array
        required:
        - data
    scheduleStatusResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/scheduleStatusResourceReference'
      type: object
    scheduleStatusResourcePostAttributes:
      properties:
        attributes:
          properties:
            description:
              nullable: true
              type: string
          type: object
      type: object
    scheduleStatusPatchResource:
      allOf:
      - $ref: '#/components/schemas/scheduleStatusResourceReference'
      - $ref: '#/components/schemas/scheduleStatusResourcePatchAttributes'
    scheduleStatusResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/scheduleStatusResourceReference'
          type: array
      type: object
    scheduleStatusResourceAttributes:
      properties:
        attributes:
          properties:
            description:
              nullable: true
              type: string
          type: object
      type: object
    scheduleStatusResourceSchema:
      allOf:
      - $ref: '#/components/schemas/scheduleStatusResourceReference'
      - $ref: '#/components/schemas/scheduleStatusResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    scheduleStatusPostResource:
      allOf:
      - $ref: '#/components/schemas/scheduleStatusResourceReference'
      - $ref: '#/components/schemas/scheduleStatusResourcePostAttributes'
    tasksResourcePatchAttributes:
      properties:
        attributes:
          properties:
            includedProjects:
              items:
                $ref: '#/components/schemas/projectsResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            schedule:
              $ref: '#/components/schemas/scheduleResourceReference'
            includedProject:
              $ref: '#/components/schemas/projectsResourceReference'
            otherTasks:
              items:
                $ref: '#/components/schemas/tasksResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            projects:
              items:
                $ref: '#/components/schemas/projectsResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            linksInformation:
              nullable: true
              properties:
                self:
                  type: string
              type: object
            name:
              nullable: true
              type: string
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            metaInformation:
              nullable: true
              type: object
            status:
              enum:
              - OPEN
              - INPROGRESS
              - CLOSED
              nullable: true
              type: string
          type: object
      type: object
    tasksResourceSchema:
      allOf:
      - $ref: '#/components/schemas/tasksResourceReference'
      - $ref: '#/components/schemas/tasksResourceAttributes'
      - properties:
          relationships:
            type: object
          links:
            type: object
        required:
        - attributes
        type: object
    tasksResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/tasksResourceSchema'
            type: array
        required:
        - data
    tasksResourceAttributes:
      properties:
        attributes:
          properties:
            includedProjects:
              items:
                $ref: '#/components/schemas/projectsResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            schedule:
              $ref: '#/components/schemas/scheduleResourceReference'
            includedProject:
              $ref: '#/components/schemas/projectsResourceReference'
            otherTasks:
              items:
                $ref: '#/components/schemas/tasksResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            projects:
              items:
                $ref: '#/components/schemas/projectsResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            linksInformation:
              nullable: true
              properties:
                self:
                  type: string
              type: object
            name:
              nullable: true
              type: string
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            metaInformation:
              nullable: true
              type: object
            status:
              enum:
              - OPEN
              - INPROGRESS
              - CLOSED
              nullable: true
              type: string
          type: object
      type: object
    tasksResourceReferencesResponseSchema:
      properties:
        data:
          items:
            $ref: '#/components/schemas/tasksResourceReference'
          type: array
      type: object
    tasksResourceReference:
      properties:
        type:
          description: The JSON:API resource type (Tasks)
          enum:
          - Tasks
          type: string
        id:
          description: The JSON:API resource ID
          type: string
      required:
      - id
      - type
      type: object
    tasksPatchResource:
      allOf:
      - $ref: '#/components/schemas/tasksResourceReference'
      - $ref: '#/components/schemas/tasksResourcePatchAttributes'
    tasksResourceReferenceResponseSchema:
      properties:
        data:
          $ref: '#/components/schemas/tasksResourceReference'
      type: object
    tasksResourcePostAttributes:
      properties:
        attributes:
          properties:
            includedProjects:
              items:
                $ref: '#/components/schemas/projectsResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            schedule:
              $ref: '#/components/schemas/scheduleResourceReference'
            includedProject:
              $ref: '#/components/schemas/projectsResourceReference'
            otherTasks:
              items:
                $ref: '#/components/schemas/tasksResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            projects:
              items:
                $ref: '#/components/schemas/projectsResourceReference'
              nullable: true
              type: array
              uniqueItems: false
            linksInformation:
              nullable: true
              properties:
                self:
                  type: string
              type: object
            name:
              nullable: true
              type: string
            project:
              $ref: '#/components/schemas/projectsResourceReference'
            metaInformation:
              nullable: true
              type: object
            status:
              enum:
              - OPEN
              - INPROGRESS
              - CLOSED
              nullable: true
              type: string
          type: object
      type: object
    tasksPostResource:
      allOf:
      - $ref: '#/components/schemas/tasksResourceReference'
      - $ref: '#/components/schemas/tasksResourcePostAttributes'
    tasksResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/tasksResourceSchema'
            type: array
        required:
        - data
info:
  description: Generated Description
  title: Generated Title
  version: 0.1.0
openapi: 3.0.1
paths:
  /comment:
    get:
      description: Retrieve a List of comment resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by value (csv)
        in: query
        name: filter[value]
        schema:
          type: string
      - description: Filter by post (csv)
        in: query
        name: filter[post]
        schema:
          type: string
      - description: Filter by related (csv)
        in: query
        name: filter[related]
        schema:
          type: string
      - $ref: '#/components/parameters/commentFields'
      - $ref: '#/components/parameters/commentInclude'
      - $ref: '#/components/parameters/commentSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/commentResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Comment
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/commentResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /comment/{id}:
    delete:
      description: Delete a Comment
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a comment resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      - $ref: '#/components/parameters/commentFields'
      - $ref: '#/components/parameters/commentInclude'
      responses:
        200:
          $ref: '#/components/responses/commentResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Comment
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/commentResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /comment/{id}/post:
    delete:
      description: Delete comment relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve post related to a comment resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      responses:
        200:
          $ref: '#/components/responses/postResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update comment relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create comment relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /comment/{id}/relationships/post:
    delete:
      description: Delete comment relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve post references related to a comment resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update comment relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create comment relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /comment/{id}/nestedRelated:
    delete:
      description: Delete comment relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve nestedRelated related to a comment resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update comment relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create comment relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /comment/{id}/relationships/nestedRelated:
    delete:
      description: Delete comment relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve nestedRelated references related to a comment resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update comment relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create comment relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/commentPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks:
    get:
      description: Retrieve a List of tasks resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - description: Filter by project (csv)
        in: query
        name: filter[project]
        schema:
          type: string
      - description: Filter by schedule (csv)
        in: query
        name: filter[schedule]
        schema:
          type: string
      - description: Filter by projects (csv)
        in: query
        name: filter[projects]
        schema:
          type: string
      - description: Filter by includedProject (csv)
        in: query
        name: filter[includedProject]
        schema:
          type: string
      - description: Filter by includedProjects (csv)
        in: query
        name: filter[includedProjects]
        schema:
          type: string
      - description: Filter by otherTasks (csv)
        in: query
        name: filter[otherTasks]
        schema:
          type: string
      - description: Filter by status (csv)
        in: query
        name: filter[status]
        schema:
          type: string
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      - $ref: '#/components/parameters/tasksSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/tasksResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Tasks
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/tasksResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/{id}:
    delete:
      description: Delete a Tasks
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Tasks
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/tasksResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/{id}/projects:
    delete:
      description: Delete tasks relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve projects related to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - description: Filter by description (csv)
        in: query
        name: filter[description]
        schema:
          type: string
      - description: Filter by data (csv)
        in: query
        name: filter[data]
        schema:
          type: string
      - description: Filter by tasks (csv)
        in: query
        name: filter[tasks]
        schema:
          type: string
      - description: Filter by task (csv)
        in: query
        name: filter[task]
        schema:
          type: string
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      responses:
        200:
          $ref: '#/components/responses/projectsResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update tasks relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create tasks relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/{id}/relationships/projects:
    delete:
      description: Delete tasks relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve projects references related to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - description: Filter by description (csv)
        in: query
        name: filter[description]
        schema:
          type: string
      - description: Filter by data (csv)
        in: query
        name: filter[data]
        schema:
          type: string
      - description: Filter by tasks (csv)
        in: query
        name: filter[tasks]
        schema:
          type: string
      - description: Filter by task (csv)
        in: query
        name: filter[task]
        schema:
          type: string
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update tasks relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create tasks relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/{id}/schedules:
    delete:
      description: Delete tasks relationship to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve schedule related to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update tasks relationship to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create tasks relationship to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/{id}/relationships/schedules:
    delete:
      description: Delete tasks relationship to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve schedule references related to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update tasks relationship to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create tasks relationship to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/tasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /renamedId:
    get:
      description: Retrieve a List of renamedId resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - $ref: '#/components/parameters/renamedIdFields'
      - $ref: '#/components/parameters/renamedIdInclude'
      - $ref: '#/components/parameters/renamedIdSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/renamedIdResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a RenamedId
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/renamedIdPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/renamedIdResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /renamedId/{id}:
    delete:
      description: Delete a RenamedId
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/renamedIdPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a renamedId resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/renamedIdPrimaryKey'
      - $ref: '#/components/parameters/renamedIdFields'
      - $ref: '#/components/parameters/renamedIdInclude'
      responses:
        200:
          $ref: '#/components/responses/renamedIdResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a RenamedId
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/renamedIdPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/renamedIdPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/renamedIdResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post:
    get:
      description: Retrieve a List of post resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by comments (csv)
        in: query
        name: filter[comments]
        schema:
          type: string
      - description: Filter by header (csv)
        in: query
        name: filter[header]
        schema:
          type: string
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      - $ref: '#/components/parameters/postSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/postResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Post
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/postResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post/{id}:
    delete:
      description: Delete a Post
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      responses:
        200:
          $ref: '#/components/responses/postResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Post
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/postResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post/{id}/comment:
    delete:
      description: Delete post relationship to a comment resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve comment related to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by value (csv)
        in: query
        name: filter[value]
        schema:
          type: string
      - description: Filter by post (csv)
        in: query
        name: filter[post]
        schema:
          type: string
      - description: Filter by related (csv)
        in: query
        name: filter[related]
        schema:
          type: string
      - $ref: '#/components/parameters/commentFields'
      - $ref: '#/components/parameters/commentInclude'
      responses:
        200:
          $ref: '#/components/responses/commentResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update post relationship to a comment resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create post relationship to a comment resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post/{id}/relationships/comment:
    delete:
      description: Delete post relationship to a comment resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve comment references related to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by value (csv)
        in: query
        name: filter[value]
        schema:
          type: string
      - description: Filter by post (csv)
        in: query
        name: filter[post]
        schema:
          type: string
      - description: Filter by related (csv)
        in: query
        name: filter[related]
        schema:
          type: string
      - $ref: '#/components/parameters/commentFields'
      - $ref: '#/components/parameters/commentInclude'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update post relationship to a comment resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create post relationship to a comment resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/commentResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/commentResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post/{id}/header:
    delete:
      description: Delete post relationship to a header resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve header related to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      - $ref: '#/components/parameters/headerFields'
      - $ref: '#/components/parameters/headerInclude'
      responses:
        200:
          $ref: '#/components/responses/headerResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update post relationship to a header resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create post relationship to a header resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /post/{id}/relationships/header:
    delete:
      description: Delete post relationship to a header resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve header references related to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      - $ref: '#/components/parameters/headerFields'
      - $ref: '#/components/parameters/headerInclude'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update post relationship to a header resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create post relationship to a header resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/postPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/headerResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /nestedRelated:
    get:
      description: Retrieve a List of nestedRelated resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      - $ref: '#/components/parameters/nestedRelatedSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a NestedRelated
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/nestedRelatedResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /nestedRelated/{id}:
    delete:
      description: Delete a NestedRelated
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/nestedRelatedPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/nestedRelatedPrimaryKey'
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a NestedRelated
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/nestedRelatedPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/nestedRelatedResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /projects:
    get:
      description: Retrieve a List of projects resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - description: Filter by description (csv)
        in: query
        name: filter[description]
        schema:
          type: string
      - description: Filter by data (csv)
        in: query
        name: filter[data]
        schema:
          type: string
      - description: Filter by tasks (csv)
        in: query
        name: filter[tasks]
        schema:
          type: string
      - description: Filter by task (csv)
        in: query
        name: filter[task]
        schema:
          type: string
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      - $ref: '#/components/parameters/projectsSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/projectsResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Projects
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/projectsResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /projects/{id}:
    delete:
      description: Delete a Projects
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/projectsPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/projectsPrimaryKey'
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Projects
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/projectsPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/projectsResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /projects/{id}/tasks:
    delete:
      description: Delete projects relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/projectsPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve tasks related to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/projectsPrimaryKey'
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update projects relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/projectsPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create projects relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/projectsPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /projects/{id}/relationships/tasks:
    delete:
      description: Delete projects relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/projectsPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve tasks references related to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/projectsPrimaryKey'
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update projects relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/projectsPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create projects relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/projectsPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /readOnlyTask:
    get:
      description: Retrieve a List of readOnlyTask resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - $ref: '#/components/parameters/readOnlyTaskFields'
      - $ref: '#/components/parameters/readOnlyTaskInclude'
      - $ref: '#/components/parameters/readOnlyTaskSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/readOnlyTaskResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a ReadOnlyTask
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/readOnlyTaskPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/readOnlyTaskResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /readOnlyTask/{id}:
    delete:
      description: Delete a ReadOnlyTask
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/readOnlyTaskPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a readOnlyTask resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/readOnlyTaskPrimaryKey'
      - $ref: '#/components/parameters/readOnlyTaskFields'
      - $ref: '#/components/parameters/readOnlyTaskInclude'
      responses:
        200:
          $ref: '#/components/responses/readOnlyTaskResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a ReadOnlyTask
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/readOnlyTaskPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/readOnlyTaskPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/readOnlyTaskResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest:
    get:
      description: Retrieve a List of relationIdTest resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - description: Filter by testLookupAlways (csv)
        in: query
        name: filter[testLookupAlways]
        schema:
          type: string
      - description: Filter by testLookupWhenNull (csv)
        in: query
        name: filter[testLookupWhenNull]
        schema:
          type: string
      - description: Filter by testMultipleValues (csv)
        in: query
        name: filter[testMultipleValues]
        schema:
          type: string
      - description: Filter by testLookupNone (csv)
        in: query
        name: filter[testLookupNone]
        schema:
          type: string
      - description: Filter by testSerializeEager (csv)
        in: query
        name: filter[testSerializeEager]
        schema:
          type: string
      - description: Filter by testSerializeOnlyId (csv)
        in: query
        name: filter[testSerializeOnlyId]
        schema:
          type: string
      - description: Filter by testNested (csv)
        in: query
        name: filter[testNested]
        schema:
          type: string
      - description: Filter by testResourceIdRef (csv)
        in: query
        name: filter[testResourceIdRef]
        schema:
          type: string
      - $ref: '#/components/parameters/relationIdTestFields'
      - $ref: '#/components/parameters/relationIdTestInclude'
      - $ref: '#/components/parameters/relationIdTestSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a RelationIdTest
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relationIdTestPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/relationIdTestResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest/{id}:
    delete:
      description: Delete a RelationIdTest
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      - $ref: '#/components/parameters/relationIdTestFields'
      - $ref: '#/components/parameters/relationIdTestInclude'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a RelationIdTest
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relationIdTestPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/relationIdTestResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest/{id}/schedules:
    delete:
      description: Delete relationIdTest relationship to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve relationIdTest related to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update relationIdTest relationship to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create relationIdTest relationship to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest/{id}/relationships/schedules:
    delete:
      description: Delete relationIdTest relationship to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve schedule references related to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update relationIdTest relationship to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create relationIdTest relationship to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest/{id}/relationIdTest:
    delete:
      description: Delete relationIdTest relationship to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve relationIdTest related to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update relationIdTest relationship to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create relationIdTest relationship to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /relationIdTest/{id}/relationships/relationIdTest:
    delete:
      description: Delete relationIdTest relationship to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve relationIdTest references related to a relationIdTest
        resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      - $ref: '#/components/parameters/relationIdTestFields'
      - $ref: '#/components/parameters/relationIdTestInclude'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update relationIdTest relationship to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relationIdTestResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create relationIdTest relationship to a relationIdTest resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relationIdTestPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relationIdTestResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/relationIdTestResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header:
    get:
      description: Retrieve a List of header resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by value (csv)
        in: query
        name: filter[value]
        schema:
          type: string
      - description: Filter by post (csv)
        in: query
        name: filter[post]
        schema:
          type: string
      - description: Filter by related (csv)
        in: query
        name: filter[related]
        schema:
          type: string
      - $ref: '#/components/parameters/headerFields'
      - $ref: '#/components/parameters/headerInclude'
      - $ref: '#/components/parameters/headerSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/headerResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Header
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/headerResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header/{id}:
    delete:
      description: Delete a Header
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a header resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      - $ref: '#/components/parameters/headerFields'
      - $ref: '#/components/parameters/headerInclude'
      responses:
        200:
          $ref: '#/components/responses/headerResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Header
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/headerPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/headerResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header/{id}/post:
    delete:
      description: Delete header relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve post related to a header resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      responses:
        200:
          $ref: '#/components/responses/postResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update header relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create header relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header/{id}/relationships/post:
    delete:
      description: Delete header relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve post references related to a header resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      - $ref: '#/components/parameters/postFields'
      - $ref: '#/components/parameters/postInclude'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update header relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create header relationship to a post resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/postResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/postResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header/{id}/nestedRelated:
    delete:
      description: Delete header relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve nestedRelated related to a header resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update header relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create header relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /header/{id}/relationships/nestedRelated:
    delete:
      description: Delete header relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve nestedRelated references related to a header resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      - $ref: '#/components/parameters/nestedRelatedFields'
      - $ref: '#/components/parameters/nestedRelatedInclude'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update header relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create header relationship to a nestedRelated resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/headerPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/nestedRelatedResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/nestedRelatedResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules:
    get:
      description: Retrieve a List of schedule resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - description: Filter by description (csv)
        in: query
        name: filter[description]
        schema:
          type: string
      - description: Filter by taskSet (csv)
        in: query
        name: filter[taskSet]
        schema:
          type: string
      - description: Filter by project (csv)
        in: query
        name: filter[project]
        schema:
          type: string
      - description: Filter by projects (csv)
        in: query
        name: filter[projects]
        schema:
          type: string
      - description: Filter by status (csv)
        in: query
        name: filter[status]
        schema:
          type: string
      - description: Filter by delayed (csv)
        in: query
        name: filter[delayed]
        schema:
          type: string
      - description: Filter by customData (csv)
        in: query
        name: filter[customData]
        schema:
          type: string
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      - $ref: '#/components/parameters/scheduleSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a Schedule
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/schedulePostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/scheduleResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}:
    delete:
      description: Delete a Schedule
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/scheduleFields'
      - $ref: '#/components/parameters/scheduleInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a Schedule
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/schedulePatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/scheduleResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/tasks:
    delete:
      description: Delete schedule relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve tasks related to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - description: Filter by project (csv)
        in: query
        name: filter[project]
        schema:
          type: string
      - description: Filter by schedule (csv)
        in: query
        name: filter[schedule]
        schema:
          type: string
      - description: Filter by projects (csv)
        in: query
        name: filter[projects]
        schema:
          type: string
      - description: Filter by includedProject (csv)
        in: query
        name: filter[includedProject]
        schema:
          type: string
      - description: Filter by includedProjects (csv)
        in: query
        name: filter[includedProjects]
        schema:
          type: string
      - description: Filter by otherTasks (csv)
        in: query
        name: filter[otherTasks]
        schema:
          type: string
      - description: Filter by status (csv)
        in: query
        name: filter[status]
        schema:
          type: string
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      responses:
        200:
          $ref: '#/components/responses/tasksResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/relationships/tasks:
    delete:
      description: Delete schedule relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve tasks references related to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - description: Filter by project (csv)
        in: query
        name: filter[project]
        schema:
          type: string
      - description: Filter by schedule (csv)
        in: query
        name: filter[schedule]
        schema:
          type: string
      - description: Filter by projects (csv)
        in: query
        name: filter[projects]
        schema:
          type: string
      - description: Filter by includedProject (csv)
        in: query
        name: filter[includedProject]
        schema:
          type: string
      - description: Filter by includedProjects (csv)
        in: query
        name: filter[includedProjects]
        schema:
          type: string
      - description: Filter by otherTasks (csv)
        in: query
        name: filter[otherTasks]
        schema:
          type: string
      - description: Filter by status (csv)
        in: query
        name: filter[status]
        schema:
          type: string
      - $ref: '#/components/parameters/tasksFields'
      - $ref: '#/components/parameters/tasksInclude'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a tasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tasksResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/tasksResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/projects:
    delete:
      description: Delete schedule relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve projects related to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - description: Filter by description (csv)
        in: query
        name: filter[description]
        schema:
          type: string
      - description: Filter by data (csv)
        in: query
        name: filter[data]
        schema:
          type: string
      - description: Filter by tasks (csv)
        in: query
        name: filter[tasks]
        schema:
          type: string
      - description: Filter by task (csv)
        in: query
        name: filter[task]
        schema:
          type: string
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      responses:
        200:
          $ref: '#/components/responses/projectsResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/relationships/projects:
    delete:
      description: Delete schedule relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve projects references related to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - description: Filter by description (csv)
        in: query
        name: filter[description]
        schema:
          type: string
      - description: Filter by data (csv)
        in: query
        name: filter[data]
        schema:
          type: string
      - description: Filter by tasks (csv)
        in: query
        name: filter[tasks]
        schema:
          type: string
      - description: Filter by task (csv)
        in: query
        name: filter[task]
        schema:
          type: string
      - $ref: '#/components/parameters/projectsFields'
      - $ref: '#/components/parameters/projectsInclude'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a projects resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/projectsResourceReferencesResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/projectsResourceReferencesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/scheduleStatus:
    delete:
      description: Delete schedule relationship to a scheduleStatus resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve scheduleStatus related to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/scheduleStatusFields'
      - $ref: '#/components/parameters/scheduleStatusInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a scheduleStatus resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a scheduleStatus resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /schedules/{id}/relationships/scheduleStatus:
    delete:
      description: Delete schedule relationship to a scheduleStatus resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve scheduleStatus references related to a schedule resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      - $ref: '#/components/parameters/scheduleStatusFields'
      - $ref: '#/components/parameters/scheduleStatusInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update schedule relationship to a scheduleStatus resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create schedule relationship to a scheduleStatus resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/schedulePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusResourceReferenceResponseSchema'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceReferenceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/history:
    get:
      description: Retrieve a List of historicTasks resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - $ref: '#/components/parameters/historicTasksFields'
      - $ref: '#/components/parameters/historicTasksInclude'
      - $ref: '#/components/parameters/historicTasksSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/historicTasksResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a HistoricTasks
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/historicTasksPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/historicTasksResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /tasks/history/{id}:
    delete:
      description: Delete a HistoricTasks
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/historicTasksPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a historicTasks resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/historicTasksPrimaryKey'
      - $ref: '#/components/parameters/historicTasksFields'
      - $ref: '#/components/parameters/historicTasksInclude'
      responses:
        200:
          $ref: '#/components/responses/historicTasksResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a HistoricTasks
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/historicTasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/historicTasksPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/historicTasksResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /primitiveAttribute:
    get:
      description: Retrieve a List of primitiveAttribute resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by stringValue (csv)
        in: query
        name: filter[stringValue]
        schema:
          type: string
      - description: Filter by intValue (csv)
        in: query
        name: filter[intValue]
        schema:
          type: string
      - description: Filter by longValue (csv)
        in: query
        name: filter[longValue]
        schema:
          type: string
      - description: Filter by booleanValue (csv)
        in: query
        name: filter[booleanValue]
        schema:
          type: string
      - description: Filter by floatValue (csv)
        in: query
        name: filter[floatValue]
        schema:
          type: string
      - description: Filter by shortValue (csv)
        in: query
        name: filter[shortValue]
        schema:
          type: string
      - description: Filter by doubleValue (csv)
        in: query
        name: filter[doubleValue]
        schema:
          type: string
      - description: Filter by jsonNodeValue (csv)
        in: query
        name: filter[jsonNodeValue]
        schema:
          type: string
      - description: Filter by arrayNodeValue (csv)
        in: query
        name: filter[arrayNodeValue]
        schema:
          type: string
      - description: Filter by objectNodeValue (csv)
        in: query
        name: filter[objectNodeValue]
        schema:
          type: string
      - description: Filter by nullableLongValue (csv)
        in: query
        name: filter[nullableLongValue]
        schema:
          type: string
      - description: Filter by nullableBooleanValue (csv)
        in: query
        name: filter[nullableBooleanValue]
        schema:
          type: string
      - description: Filter by nullableByteValue (csv)
        in: query
        name: filter[nullableByteValue]
        schema:
          type: string
      - description: Filter by nullableShortValue (csv)
        in: query
        name: filter[nullableShortValue]
        schema:
          type: string
      - description: Filter by nullableIntegerValue (csv)
        in: query
        name: filter[nullableIntegerValue]
        schema:
          type: string
      - description: Filter by nullableFloatValue (csv)
        in: query
        name: filter[nullableFloatValue]
        schema:
          type: string
      - description: Filter by nullableDoubleValue (csv)
        in: query
        name: filter[nullableDoubleValue]
        schema:
          type: string
      - description: Filter by uuidValue (csv)
        in: query
        name: filter[uuidValue]
        schema:
          type: string
      - description: Filter by dateValue (csv)
        in: query
        name: filter[dateValue]
        schema:
          type: string
      - description: Filter by objectValue (csv)
        in: query
        name: filter[objectValue]
        schema:
          type: string
      - description: Filter by mapValueWithEnumKey (csv)
        in: query
        name: filter[mapValueWithEnumKey]
        schema:
          type: string
      - description: Filter by mapValueWithListValue (csv)
        in: query
        name: filter[mapValueWithListValue]
        schema:
          type: string
      - description: Filter by mapValueWithSetValue (csv)
        in: query
        name: filter[mapValueWithSetValue]
        schema:
          type: string
      - $ref: '#/components/parameters/primitiveAttributeFields'
      - $ref: '#/components/parameters/primitiveAttributeInclude'
      - $ref: '#/components/parameters/primitiveAttributeSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/primitiveAttributeResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a PrimitiveAttribute
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/primitiveAttributePostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/primitiveAttributeResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /primitiveAttribute/{id}:
    delete:
      description: Delete a PrimitiveAttribute
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/primitiveAttributePrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a primitiveAttribute resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/primitiveAttributePrimaryKey'
      - $ref: '#/components/parameters/primitiveAttributeFields'
      - $ref: '#/components/parameters/primitiveAttributeInclude'
      responses:
        200:
          $ref: '#/components/responses/primitiveAttributeResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a PrimitiveAttribute
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/primitiveAttributePrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/primitiveAttributePatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/primitiveAttributeResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /taskNewPath:
    get:
      description: Retrieve a List of relocatedTask resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by name (csv)
        in: query
        name: filter[name]
        schema:
          type: string
      - $ref: '#/components/parameters/relocatedTaskFields'
      - $ref: '#/components/parameters/relocatedTaskInclude'
      - $ref: '#/components/parameters/relocatedTaskSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/relocatedTaskResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a RelocatedTask
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relocatedTaskPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/relocatedTaskResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /taskNewPath/{id}:
    delete:
      description: Delete a RelocatedTask
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relocatedTaskPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a relocatedTask resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relocatedTaskPrimaryKey'
      - $ref: '#/components/parameters/relocatedTaskFields'
      - $ref: '#/components/parameters/relocatedTaskInclude'
      responses:
        200:
          $ref: '#/components/responses/relocatedTaskResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a RelocatedTask
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/relocatedTaskPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/relocatedTaskPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/relocatedTaskResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /scheduleStatus:
    get:
      description: Retrieve a List of scheduleStatus resources
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/NestedFilter'
      - description: Filter by id (csv)
        in: query
        name: filter[id]
        schema:
          type: string
      - description: Filter by description (csv)
        in: query
        name: filter[description]
        schema:
          type: string
      - $ref: '#/components/parameters/scheduleStatusFields'
      - $ref: '#/components/parameters/scheduleStatusInclude'
      - $ref: '#/components/parameters/scheduleStatusSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    post:
      description: Create a ScheduleStatus
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusPostResource'
      responses:
        201:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/scheduleStatusResourceResponseSchema'
          description: Created
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /scheduleStatus/{id}:
    delete:
      description: Delete a ScheduleStatus
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/scheduleStatusPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    get:
      description: Retrieve a scheduleStatus resource
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/scheduleStatusPrimaryKey'
      - $ref: '#/components/parameters/scheduleStatusFields'
      - $ref: '#/components/parameters/scheduleStatusInclude'
      responses:
        200:
          $ref: '#/components/responses/scheduleStatusResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a ScheduleStatus
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
          type: string
      - $ref: '#/components/parameters/scheduleStatusPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/scheduleStatusPatchResource'
      responses:
        200:
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/scheduleStatusResourceResponseSchema'
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
