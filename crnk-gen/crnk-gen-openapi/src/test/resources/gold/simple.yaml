openapi: 3.0.1
info:
  title: Title From Template
  description: OpenAPI document with autogenerated paths, components, responses, etc.
  version: 0.1.0
servers:
- url: /
paths:
  /simpleTasks:
    get:
      summary: This summary and description is in the template and not overwritten
        on generation
      description: Retrieve a List of "Tasks"
      operationId: totallyCustomGetOp
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/NestedFilter'
      - name: filter[id]
        in: query
        description: Filter by id (csv)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter by name (csv)
        schema:
          type: string
      - $ref: '#/components/parameters/simpleTasksFields'
      - $ref: '#/components/parameters/simpleTasksInclude'
      - $ref: '#/components/parameters/simpleTasksSort'
      - $ref: '#/components/parameters/PageLimit'
      - $ref: '#/components/parameters/PageOffset'
      responses:
        200:
          $ref: '#/components/responses/simpleTasksResourcesResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
      x-amazon-apigateway-integration:
        httpMethod: GET
        passthroughBehavior: when_no_match
        type: http
        uri: /api/public/todo/simpleTasks
    post:
      description: Create a SimpleTasks
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/simpleTasksPostResource'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/simpleTasksResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
  /simpleTasks/{id}:
    get:
      description: Retrieve a simpleTasks resource
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/simpleTasksPrimaryKey'
      - $ref: '#/components/parameters/simpleTasksFields'
      - $ref: '#/components/parameters/simpleTasksInclude'
      responses:
        200:
          $ref: '#/components/responses/simpleTasksResourceResponse'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
      x-amazon-apigateway-integration:
        httpMethod: GET
        passthroughBehavior: when_no_match
        type: http
        requestParameters:
          integration.request.path.TaskId: method.request.path.TaskId
        uri: /api/public/todo/simpleTasks/{TaskId}
    delete:
      description: Delete a SimpleTasks
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/simpleTasksPrimaryKey'
      responses:
        200:
          description: OK
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
    patch:
      description: Update a SimpleTasks
      parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/vnd.api+json
          enum:
          - application/vnd.api+json
          - application/json
      - $ref: '#/components/parameters/simpleTasksPrimaryKey'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/simpleTasksPatchResource'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/simpleTasksResourceResponseSchema'
        202:
          $ref: '#/components/responses/Accepted'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        405:
          $ref: '#/components/responses/405'
        409:
          $ref: '#/components/responses/409'
        412:
          $ref: '#/components/responses/412'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
        501:
          $ref: '#/components/responses/501'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        504:
          $ref: '#/components/responses/504'
        505:
          $ref: '#/components/responses/505'
components:
  schemas:
    ApiError:
      type: object
      properties:
        id:
          type: string
          description: a unique identifier for this particular occurrence of the problem
        links:
          type: object
          properties:
            about:
              type: string
              description: a link that leads to further details about this particular
                occurrence of the problem
        status:
          type: string
          description: the HTTP status code applicable to this problem, expressed
            as a string value
        code:
          type: string
          description: an application-specific error code, expressed as a string value
        title:
          type: string
          description: a short, human-readable summary of the problem that SHOULD
            NOT change from occurrence to occurrence of the problem, except for purposes
            of localization
        detail:
          type: string
          description: a human-readable explanation specific to this occurrence of
            the problem. Like 'title', this field’s value can be localized.
        source:
          type: object
          properties:
            pointer:
              type: string
              description: a JSON Pointer [RFC6901] to the associated entity in the
                request document
            parameter:
              type: string
              description: a string indicating which URI query parameter caused the
                error
        meta:
          type: object
          additionalProperties: true
          description: a meta object containing non-standard meta-information about
            the error
    ResponseMixin:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
        jsonapi:
          type: object
          properties:
            version:
              type: string
        links:
          properties:
            self:
              type: string
              description: the link that generated the current response document
        included:
          type: array
          description: Included resources
          items:
            type: object
            properties:
              type:
                type: string
                description: The JSON:API resource type
              id:
                type: string
                description: The JSON:API resource ID
      description: A JSON-API document with a single resource
    ListResponseMixin:
      type: object
      properties:
        jsonapi:
          type: object
          properties:
            version:
              type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
        meta:
          type: object
          properties:
            totalResourceCount:
              type: integer
              description: The total number of items available
              format: int32
          additionalProperties: true
        links:
          type: object
          properties:
            self:
              type: string
              description: Link to this page of results
            prev:
              type: string
              description: Link to the previous page of results
            next:
              type: string
              description: Link to the next page of results
            last:
              type: string
              description: Link to the last page of results
            first:
              type: string
              description: Link to the first page of results
      description: A page of results
    simpleTasksResourceSchema:
      allOf:
      - $ref: '#/components/schemas/simpleTasksResourceReference'
      - $ref: '#/components/schemas/simpleTasksResourceAttributes'
      - required:
        - attributes
        type: object
        properties:
          relationships:
            type: object
          links:
            type: object
    simpleTasksPatchResource:
      allOf:
      - $ref: '#/components/schemas/simpleTasksResourceReference'
      - $ref: '#/components/schemas/simpleTasksResourcePatchAttributes'
    simpleTasksResourcesResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ListResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/simpleTasksResourceSchema'
    simpleTasksResourceReferencesResponseSchema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/simpleTasksResourceReference'
    simpleTasksResourcePostAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            linksInformation:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            name:
              type: string
              nullable: true
            metaInformation:
              type: object
              nullable: true
    simpleTasksResourceReferenceResponseSchema:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/simpleTasksResourceReference'
    simpleTasksResourcePatchAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            linksInformation:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            name:
              type: string
              nullable: true
            metaInformation:
              type: object
              nullable: true
    simpleTasksResourceReference:
      required:
      - id
      - type
      type: object
      properties:
        type:
          type: string
          description: The JSON:API resource type (SimpleTasks)
          enum:
          - SimpleTasks
        id:
          type: string
          description: The JSON:API resource ID
    simpleTasksResourceAttributes:
      type: object
      properties:
        attributes:
          type: object
          properties:
            linksInformation:
              type: object
              properties:
                self:
                  type: string
              nullable: true
            name:
              type: string
              nullable: true
            metaInformation:
              type: object
              nullable: true
    simpleTasksPostResource:
      allOf:
      - $ref: '#/components/schemas/simpleTasksResourceReference'
      - $ref: '#/components/schemas/simpleTasksResourcePostAttributes'
    simpleTasksResourceResponseSchema:
      allOf:
      - $ref: '#/components/schemas/ResponseMixin'
      - required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/simpleTasksResourceSchema'
  responses:
    400:
      description: BAD_REQUEST
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    401:
      description: UNAUTHORIZED
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    403:
      description: FORBIDDEN
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    404:
      description: NOT_FOUND
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    405:
      description: METHOD_NOT_ALLOWED
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    409:
      description: CONFLICT
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    412:
      description: PRECONDITION_FAILED
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    415:
      description: UNSUPPORTED_MEDIA_TYPE
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    422:
      description: UNPROCESSABLE_ENTITY
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    500:
      description: INTERNAL_SERVER_ERROR
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    501:
      description: NOT_IMPLEMENTED
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    502:
      description: BAD_GATEWAY
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    503:
      description: SERVICE_UNAVAILABLE
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    504:
      description: GATEWAY_TIMEOUT
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    505:
      description: HTTP_VERSION_NOT_SUPPORTED
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Accepted:
      description: Accepted
      content:
        application/vnd.api+json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: a unique identifier for this pending action
    NoContent:
      description: No Content
    simpleTasksResourceReferenceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/simpleTasksResourceReferenceResponseSchema'
    simpleTasksResourceReferencesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/simpleTasksResourceReferencesResponseSchema'
    simpleTasksResourceResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/simpleTasksResourceResponseSchema'
    simpleTasksResourcesResponse:
      description: OK
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/simpleTasksResourcesResponseSchema'
  parameters:
    PageLimit:
      name: page[limit]
      in: query
      description: Max number of items
      schema:
        maximum: 1000
        type: integer
        format: int64
        default: 100
    PageOffset:
      name: page[offset]
      in: query
      description: Page offset
      schema:
        type: integer
        format: int64
        default: 0
    NestedFilter:
      name: filter
      in: query
      description: Customizable query (experimental)
      schema:
        type: object
        properties:
          AND:
            type: object
          OR:
            type: object
          NOT:
            type: object
        additionalProperties: true
    simpleTasksFields:
      name: fields
      in: query
      description: simpleTasks fields to include (csv)
      schema:
        type: string
        default: id,name,metaInformation,linksInformation
    simpleTasksInclude:
      name: include
      in: query
      description: simpleTasks relationships to include (csv)
      schema:
        type: string
        default: ""
    simpleTasksPrimaryKey:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    simpleTasksSort:
      name: sort
      in: query
      description: simpleTasks sort order (csv)
      schema:
        type: string
        example: id,name,metaInformation,linksInformation
