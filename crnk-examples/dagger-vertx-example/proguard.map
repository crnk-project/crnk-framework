ch.qos.logback.classic.BasicConfigurator -> a.a.a.a.a:
    32:33:void <init>() -> <init>
    36:59:void configure(ch.qos.logback.classic.LoggerContext) -> a
ch.qos.logback.classic.ClassicConstants -> a.a.a.a.b:
    org.slf4j.Marker FINALIZE_SESSION_MARKER -> a
    50:50:void <clinit>() -> <clinit>
ch.qos.logback.classic.Level -> a.a.a.a.c:
    java.lang.Integer OFF_INTEGER -> a
    java.lang.Integer ERROR_INTEGER -> b
    java.lang.Integer WARN_INTEGER -> c
    java.lang.Integer INFO_INTEGER -> d
    java.lang.Integer DEBUG_INTEGER -> e
    java.lang.Integer TRACE_INTEGER -> f
    java.lang.Integer ALL_INTEGER -> g
    ch.qos.logback.classic.Level OFF -> h
    ch.qos.logback.classic.Level ERROR -> i
    ch.qos.logback.classic.Level WARN -> j
    ch.qos.logback.classic.Level INFO -> k
    ch.qos.logback.classic.Level DEBUG -> l
    ch.qos.logback.classic.Level TRACE -> m
    ch.qos.logback.classic.Level ALL -> n
    int levelInt -> o
    java.lang.String levelStr -> p
    90:93:void <init>(int,java.lang.String) -> <init>
    99:99:java.lang.String toString() -> toString
    106:106:int toInt() -> a
    115:131:java.lang.Integer toInteger() -> b
    148:148:ch.qos.logback.classic.Level toLevel(java.lang.String) -> a
    166:166:ch.qos.logback.classic.Level toLevel(int) -> a
    174:190:ch.qos.logback.classic.Level toLevel(int,ch.qos.logback.classic.Level) -> a
    199:224:ch.qos.logback.classic.Level toLevel(java.lang.String,ch.qos.logback.classic.Level) -> a
    37:82:void <clinit>() -> <clinit>
ch.qos.logback.classic.Logger -> a.a.a.a.d:
    java.lang.String FQCN -> a
    java.lang.String name -> c
    ch.qos.logback.classic.Level level -> d
    int effectiveLevelInt -> e
    ch.qos.logback.classic.Logger parent -> f
    java.util.List childrenList -> g
    ch.qos.logback.core.spi.AppenderAttachableImpl aai -> h
    boolean additive -> i
    ch.qos.logback.classic.LoggerContext loggerContext -> b
    98:106:void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.LoggerContext) -> <init>
    109:109:ch.qos.logback.classic.Level getEffectiveLevel() -> a
    117:117:ch.qos.logback.classic.Level getLevel() -> b
    121:121:java.lang.String getName() -> c
    126:126:boolean isRootLogger() -> l
    130:143:ch.qos.logback.classic.Logger getChildByName(java.lang.String) -> a
    148:174:void setLevel(ch.qos.logback.classic.Level) -> a
    185:197:void handleParentLevelChange(int) -> a
    205:208:void detachAndStopAllAppenders() -> d
    220:224:void addAppender(ch.qos.logback.core.Appender) -> a
    255:266:void callAppenders(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    269:272:int appendLoopOnAppenders(ch.qos.logback.classic.spi.ILoggingEvent) -> b
    322:328:void localLevelReset() -> m
    331:340:void recursiveReset() -> e
    348:361:ch.qos.logback.classic.Logger createChildByName(java.lang.String) -> b
    373:384:void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> a
    388:399:void filterAndLog_1(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable) -> a
    404:415:void filterAndLog_2(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable) -> a
    419:422:void buildLoggingEventAndAppend(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> b
    425:426:void trace(java.lang.String) -> c
    429:430:void trace(java.lang.String,java.lang.Object) -> a
    433:434:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> a
    437:438:void trace(java.lang.String,java.lang.Object[]) -> a
    441:442:void trace(java.lang.String,java.lang.Throwable) -> a
    465:465:boolean isDebugEnabled() -> f
    469:477:boolean isDebugEnabled(org.slf4j.Marker) -> a
    482:483:void debug(java.lang.String) -> d
    486:487:void debug(java.lang.String,java.lang.Object) -> b
    490:491:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> b
    494:495:void debug(java.lang.String,java.lang.Object[]) -> b
    498:499:void debug(java.lang.String,java.lang.Throwable) -> b
    522:523:void error(java.lang.String) -> e
    526:527:void error(java.lang.String,java.lang.Object) -> c
    530:531:void error(java.lang.String,java.lang.Object,java.lang.Object) -> c
    534:535:void error(java.lang.String,java.lang.Object[]) -> c
    538:539:void error(java.lang.String,java.lang.Throwable) -> c
    562:562:boolean isInfoEnabled() -> g
    566:574:boolean isInfoEnabled(org.slf4j.Marker) -> b
    579:580:void info(java.lang.String) -> f
    583:584:void info(java.lang.String,java.lang.Object) -> d
    587:588:void info(java.lang.String,java.lang.Object,java.lang.Object) -> d
    591:592:void info(java.lang.String,java.lang.Object[]) -> d
    595:596:void info(java.lang.String,java.lang.Throwable) -> d
    619:619:boolean isTraceEnabled() -> h
    623:631:boolean isTraceEnabled(org.slf4j.Marker) -> c
    636:636:boolean isErrorEnabled() -> i
    640:648:boolean isErrorEnabled(org.slf4j.Marker) -> d
    653:653:boolean isWarnEnabled() -> j
    657:665:boolean isWarnEnabled(org.slf4j.Marker) -> e
    688:689:void warn(java.lang.String) -> g
    692:693:void warn(java.lang.String,java.lang.Throwable) -> e
    696:697:void warn(java.lang.String,java.lang.Object) -> e
    700:701:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> e
    704:705:void warn(java.lang.String,java.lang.Object[]) -> e
    732:733:void setAdditive(boolean) -> a
    736:736:java.lang.String toString() -> toString
    751:751:ch.qos.logback.core.spi.FilterReply callTurboFilters(org.slf4j.Marker,ch.qos.logback.classic.Level) -> a
    760:760:ch.qos.logback.classic.LoggerContext getLoggerContext() -> k
    44:44:void <clinit>() -> <clinit>
ch.qos.logback.classic.LoggerContext -> a.a.a.a.e:
    ch.qos.logback.classic.Logger root -> a
    int size -> g
    int noAppenderWarning -> h
    java.util.List loggerContextListenerList -> i
    java.util.Map loggerCache -> j
    ch.qos.logback.classic.spi.LoggerContextVO loggerContextRemoteView -> k
    ch.qos.logback.classic.spi.TurboFilterList turboFilterList -> l
    boolean packagingDataEnabled -> m
    int maxCallerDataDepth -> n
    int resetCount -> b
    java.util.List frameworkPackages -> o
    60:85:void <init>() -> <init>
    88:89:void initEvaluatorMap() -> a
    96:97:void updateLoggerContextVO() -> t
    101:103:void putProperty(java.lang.String,java.lang.String) -> a
    107:109:void setName(java.lang.String) -> a
    118:163:ch.qos.logback.classic.Logger getLogger(java.lang.String) -> b
    167:168:void incSize() -> u
    185:188:void noAppenderDefinedWarning(ch.qos.logback.classic.Logger) -> a
    198:198:ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextRemoteView() -> b
    202:203:void setPackagingDataEnabled(boolean) -> a
    206:206:boolean isPackagingDataEnabled() -> c
    219:229:void reset() -> d
    232:236:void cancelScheduledTasks() -> v
    239:243:void resetStatusListeners() -> w
    258:262:void resetTurboFilterList() -> e
    266:269:ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_0_3OrMore(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> a
    274:277:ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_1(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable) -> a
    282:285:ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_2(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable) -> a
    290:291:void addListener(ch.qos.logback.classic.spi.LoggerContextListener) -> a
    298:306:void resetListenersExceptResetResistant() -> x
    309:310:void resetAllListeners() -> y
    313:313:java.util.List getCopyOfListenerList() -> f
    317:320:void fireOnLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level) -> a
    323:326:void fireOnReset() -> z
    329:332:void fireOnStart() -> A
    335:338:void fireOnStop() -> B
    343:345:void start() -> g
    348:352:void stop() -> h
    356:356:java.lang.String toString() -> toString
    360:360:int getMaxCallerDataDepth() -> i
    377:377:java.util.List getFrameworkPackages() -> j
    53:53:org.slf4j.Logger getLogger(java.lang.String) -> c
ch.qos.logback.classic.PatternLayout -> a.a.a.a.f:
    java.util.Map defaultConverterMap -> a
    129:131:void <init>() -> <init>
    134:134:java.util.Map getDefaultConverterMap() -> a
    138:141:java.lang.String doLayout(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    146:146:java.lang.String getPresentationHeaderPrefix() -> b
    39:39:java.lang.String doLayout(java.lang.Object) -> a
    41:127:void <clinit>() -> <clinit>
ch.qos.logback.classic.boolex.JaninoEventEvaluator -> a.a.a.a.a.a:
    java.util.List DEFAULT_PARAM_NAME_LIST -> a
    java.util.List DEFAULT_PARAM_TYPE_LIST -> b
    31:31:void <init>() -> <init>
    76:83:java.lang.String getDecoratedExpression() -> a
    87:95:java.lang.String[] getParameterNames() -> b
    99:104:java.lang.Class[] getParameterTypes() -> c
    108:149:java.lang.Object[] getParameterValues(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    31:31:java.lang.Object[] getParameterValues(java.lang.Object) -> a
    35:73:void <clinit>() -> <clinit>
ch.qos.logback.classic.encoder.PatternLayoutEncoder -> a.a.a.a.b.a:
    20:20:void <init>() -> <init>
    24:31:void start() -> g
ch.qos.logback.classic.gaffer.GafferConfigurator -> a.a.a.a.c.a:
    ch.qos.logback.classic.LoggerContext context -> b
    boolean __$stMC -> a
    java.lang.ref.SoftReference $callSiteArray -> c
    39:39:void informContextOfURLUsedForConfiguration(java.net.URL) -> a
    43:44:void run(java.net.URL) -> b
    void $createCallSiteArray_1(java.lang.String[]) -> a
    org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> a
    org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> b
ch.qos.logback.classic.gaffer.GafferUtil -> a.a.a.a.c.b:
    java.lang.String ERROR_MSG -> a
    41:45:void runGafferConfiguratorOn(ch.qos.logback.classic.LoggerContext,java.lang.Object,java.net.URL) -> a
    50:64:ch.qos.logback.classic.gaffer.GafferConfigurator newGafferConfiguratorInstance(ch.qos.logback.classic.LoggerContext,java.lang.Object) -> a
    72:77:void addError(ch.qos.logback.classic.LoggerContext,java.lang.Object,java.lang.String,java.lang.Throwable) -> a
    31:31:void <clinit>() -> <clinit>
ch.qos.logback.classic.jmx.JMXConfigurator -> a.a.a.a.d.a:
    java.lang.String EMPTY -> g
    ch.qos.logback.classic.LoggerContext loggerContext -> a
    javax.management.MBeanServer mbs -> b
    javax.management.ObjectName objectName -> c
    java.lang.String objectNameAsString -> d
    boolean debug -> e
    boolean started -> f
    65:82:void <init>(ch.qos.logback.classic.LoggerContext,javax.management.MBeanServer,javax.management.ObjectName) -> <init>
    85:94:boolean previouslyRegisteredListenerWithSameObjectName() -> b
    237:255:void onStop(ch.qos.logback.classic.LoggerContext) -> a
    259:259:void onLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level) -> a
    262:263:void onReset(ch.qos.logback.classic.LoggerContext) -> b
    271:271:boolean isResetResistant() -> a
    275:278:void clearFields() -> c
    281:283:void stop() -> d
    287:287:void onStart(ch.qos.logback.classic.LoggerContext) -> c
    291:291:java.lang.String toString() -> toString
    56:56:void <clinit>() -> <clinit>
ch.qos.logback.classic.jmx.MBeanUtil -> a.a.a.a.d.b:
    31:31:java.lang.String getObjectNameFor(java.lang.String,java.lang.Class) -> a
    35:45:javax.management.ObjectName string2ObjectName(ch.qos.logback.core.Context,java.lang.Object,java.lang.String) -> a
    50:50:boolean isRegistered(javax.management.MBeanServer,javax.management.ObjectName) -> a
ch.qos.logback.classic.joran.JoranConfigurator -> a.a.a.a.e.a:
    37:37:void <init>() -> <init>
    42:81:void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> a
    85:86:void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> a
ch.qos.logback.classic.joran.ReconfigureOnChangeTask -> a.a.a.a.e.b:
    long birthdate -> a
    java.util.List listeners -> b
    19:27:void <init>() -> <init>
    39:77:void run() -> run
    80:85:void fireEnteredRunMethod() -> a
    88:93:void fireChangeDetected() -> b
    97:102:void fireDoneReconfiguring() -> c
    105:121:void performXMLConfiguration(ch.qos.logback.classic.LoggerContext,java.net.URL) -> a
    124:133:java.util.List removeIncludeEvents(java.util.List) -> a
    140:162:void fallbackConfiguration(ch.qos.logback.classic.LoggerContext,java.util.List,java.net.URL) -> a
    166:166:java.lang.String toString() -> toString
ch.qos.logback.classic.joran.ReconfigureOnChangeTaskListener -> a.a.a.a.e.c:
    3:3:void <init>() -> <init>
    5:5:void enteredRunMethod() -> a
    8:8:void changeDetected() -> b
    11:11:void doneReconfiguring() -> c
ch.qos.logback.classic.joran.action.ConfigurationAction -> a.a.a.a.e.a.a:
    long threshold -> a
    36:43:void <init>() -> <init>
    46:76:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    84:86:java.lang.String getSystemProperty(java.lang.String) -> a
    91:123:void processScanAttrib(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes) -> a
    126:136:ch.qos.logback.core.util.Duration getDuration(java.lang.String,java.lang.String) -> a
    140:142:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.classic.joran.action.ConsolePluginAction -> a.a.a.a.e.a.b:
    java.lang.Integer DEFAULT_PORT -> a
    25:25:void <init>() -> <init>
    32:56:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    61:61:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
    28:28:void <clinit>() -> <clinit>
ch.qos.logback.classic.joran.action.ContextNameAction -> a.a.a.a.e.a.c:
    21:21:void <init>() -> <init>
    24:24:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    28:35:void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> b
    38:38:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.classic.joran.action.EvaluatorAction -> a.a.a.a.e.a.d:
    19:19:void <init>() -> <init>
    21:21:java.lang.String defaultClassName() -> a
ch.qos.logback.classic.joran.action.InsertFromJNDIAction -> a.a.a.a.e.a.e:
    34:34:void <init>() -> <init>
    41:79:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    82:82:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.classic.joran.action.JMXConfiguratorAction -> a.a.a.a.e.a.f:
    31:31:void <init>() -> <init>
    39:75:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    80:80:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.classic.joran.action.LevelAction -> a.a.a.a.e.a.g:
    boolean inError -> a
    32:34:void <init>() -> <init>
    37:60:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    66:66:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.classic.joran.action.LoggerAction -> a.a.a.a.e.a.h:
    boolean inError -> a
    ch.qos.logback.classic.Logger logger -> b
    31:34:void <init>() -> <init>
    39:76:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    79:89:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.classic.joran.action.LoggerContextListenerAction -> a.a.a.a.e.a.i:
    boolean inError -> a
    ch.qos.logback.classic.spi.LoggerContextListener lcl -> b
    27:28:void <init>() -> <init>
    34:57:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    61:76:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.classic.joran.action.ReceiverAction -> a.a.a.a.e.a.j:
    ch.qos.logback.classic.net.ReceiverBase receiver -> a
    boolean inError -> b
    30:30:void <init>() -> <init>
    38:57:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    62:74:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.classic.joran.action.RootLoggerAction -> a.a.a.a.e.a.k:
    ch.qos.logback.classic.Logger root -> a
    boolean inError -> b
    26:29:void <init>() -> <init>
    32:44:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    47:57:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.classic.layout.TTLLLayout -> a.a.a.a.f.a:
    ch.qos.logback.core.util.CachingDateFormatter cachingDateFormatter -> a
    ch.qos.logback.classic.pattern.ThrowableProxyConverter tpc -> b
    23:26:void <init>() -> <init>
    30:32:void start() -> g
    36:58:java.lang.String doLayout(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    23:23:java.lang.String doLayout(java.lang.Object) -> a
ch.qos.logback.classic.net.LoggingEventPreSerializationTransformer -> a.a.a.a.g.a:
    23:23:void <init>() -> <init>
    26:34:java.io.Serializable transform(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    23:23:java.io.Serializable transform(java.lang.Object) -> a
ch.qos.logback.classic.net.ReceiverBase -> a.a.a.a.g.b:
    boolean started -> a
    25:25:void <init>() -> <init>
    33:42:void start() -> g
    48:56:void stop() -> h
    62:62:boolean isStarted() -> a_
    boolean shouldStart() -> b
    void onStop() -> c
    java.lang.Runnable getRunnableTask() -> d
ch.qos.logback.classic.net.SocketAppender -> a.a.a.a.g.c:
    ch.qos.logback.core.spi.PreSerializationTransformer pst -> c
    boolean includeCallerData -> d
    36:39:void <init>() -> <init>
    43:46:void postProcessEvent(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    49:50:void setIncludeCallerData(boolean) -> a
    53:53:ch.qos.logback.core.spi.PreSerializationTransformer getPST() -> b
    32:32:void postProcessEvent(java.lang.Object) -> a
    34:34:void <clinit>() -> <clinit>
ch.qos.logback.classic.pattern.Abbreviator -> a.a.a.a.h.a:
    java.lang.String abbreviate(java.lang.String) -> a
ch.qos.logback.classic.pattern.CallerDataConverter -> a.a.a.a.h.b:
    int depthStart -> d
    int depthEnd -> i
    java.util.List evaluatorList -> a
    int MAX_ERROR_COUNT -> b
    int errorCount -> c
    34:45:void <init>() -> <init>
    49:87:void start() -> g
    90:90:boolean isRange(java.lang.String) -> a
    94:94:java.lang.String[] splitRange(java.lang.String) -> c
    98:103:void checkRange() -> j
    106:110:void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator) -> a
    113:156:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    161:161:java.lang.String getCallerLinePrefix() -> b
    165:165:java.lang.String getDefaultRangeDelimiter() -> c
    34:34:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.ClassNameOnlyAbbreviator -> a.a.a.a.h.c:
    24:24:void <init>() -> <init>
    30:34:java.lang.String abbreviate(java.lang.String) -> a
ch.qos.logback.classic.pattern.ClassOfCallerConverter -> a.a.a.a.h.d:
    19:19:void <init>() -> <init>
    23:27:java.lang.String getFullyQualifiedName(ch.qos.logback.classic.spi.ILoggingEvent) -> a
ch.qos.logback.classic.pattern.ClassicConverter -> a.a.a.a.h.e:
    25:25:void <init>() -> <init>
ch.qos.logback.classic.pattern.ContextNameConverter -> a.a.a.a.h.f:
    23:23:void <init>() -> <init>
    29:29:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    23:23:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.DateConverter -> a.a.a.a.h.g:
    long lastTimestamp -> a
    java.lang.String timestampStrCache -> b
    ch.qos.logback.core.util.CachingDateFormatter cachingDateFormatter -> c
    23:27:void <init>() -> <init>
    31:57:void start() -> g
    60:61:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    23:23:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.EnsureExceptionHandling -> a.a.a.a.h.h:
    23:23:void <init>() -> <init>
    41:56:void process(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter) -> a
    67:74:boolean chainHandlesThrowable(ch.qos.logback.core.pattern.Converter) -> a
ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter -> a.a.a.a.h.i:
    20:20:void <init>() -> <init>
    24:25:void extraData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy) -> a
ch.qos.logback.classic.pattern.FileOfCallerConverter -> a.a.a.a.h.j:
    19:19:void <init>() -> <init>
    22:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    19:19:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.LevelConverter -> a.a.a.a.h.k:
    23:23:void <init>() -> <init>
    26:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    23:23:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.LineOfCallerConverter -> a.a.a.a.h.l:
    19:19:void <init>() -> <init>
    22:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    19:19:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.LineSeparatorConverter -> a.a.a.a.h.m:
    19:19:void <init>() -> <init>
    22:22:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    19:19:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.LocalSequenceNumberConverter -> a.a.a.a.h.n:
    java.util.concurrent.atomic.AtomicLong sequenceNumber -> a
    28:30:void <init>() -> <init>
    34:34:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    28:28:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.LoggerConverter -> a.a.a.a.h.o:
    18:18:void <init>() -> <init>
    21:21:java.lang.String getFullyQualifiedName(ch.qos.logback.classic.spi.ILoggingEvent) -> a
ch.qos.logback.classic.pattern.MDCConverter -> a.a.a.a.h.p:
    java.lang.String key -> a
    java.lang.String defaultValue -> b
    22:25:void <init>() -> <init>
    29:35:void start() -> g
    39:41:void stop() -> h
    45:59:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    68:79:java.lang.String outputMDCForAllKeys(java.util.Map) -> a
    22:22:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.MarkerConverter -> a.a.a.a.h.q:
    java.lang.String EMPTY -> a
    25:25:void <init>() -> <init>
    30:34:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    25:25:java.lang.String convert(java.lang.Object) -> a
    27:27:void <clinit>() -> <clinit>
ch.qos.logback.classic.pattern.MessageConverter -> a.a.a.a.h.r:
    23:23:void <init>() -> <init>
    26:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    23:23:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.MethodOfCallerConverter -> a.a.a.a.h.s:
    19:19:void <init>() -> <init>
    22:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    19:19:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.NamedConverter -> a.a.a.a.h.t:
    ch.qos.logback.classic.pattern.Abbreviator abbreviator -> a
    18:20:void <init>() -> <init>
    java.lang.String getFullyQualifiedName(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    32:45:void start() -> g
    48:53:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> b
    18:18:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.NopThrowableInformationConverter -> a.a.a.a.h.u:
    35:35:void <init>() -> <init>
    38:38:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    35:35:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.PropertyConverter -> a.a.a.a.h.v:
    java.lang.String key -> a
    21:21:void <init>() -> <init>
    26:31:void start() -> g
    34:43:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    21:21:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.RelativeTimeConverter -> a.a.a.a.h.w:
    long lastTimestamp -> a
    java.lang.String timesmapCache -> b
    18:21:void <init>() -> <init>
    24:33:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    18:18:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverter -> a.a.a.a.h.x:
    24:24:void <init>() -> <init>
    28:30:java.lang.String throwableProxyToString(ch.qos.logback.classic.spi.IThrowableProxy) -> a
    34:51:void recursiveAppendRootCauseFirst(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy) -> a
ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator -> a.a.a.a.h.y:
    int targetLength -> a
    23:25:void <init>(int) -> <init>
    28:63:java.lang.String abbreviate(java.lang.String) -> a
    67:81:int computeDotIndexes(java.lang.String,int[]) -> a
    85:113:void computeLengthArray(java.lang.String,int[],int[],int) -> a
ch.qos.logback.classic.pattern.ThreadConverter -> a.a.a.a.h.z:
    23:23:void <init>() -> <init>
    26:26:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    23:23:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.ThrowableHandlingConverter -> a.a.a.a.h.A:
    20:20:void <init>() -> <init>
ch.qos.logback.classic.pattern.ThrowableProxyConverter -> a.a.a.a.h.B:
    int lengthOption -> a
    java.util.List evaluatorList -> b
    java.util.List ignoredStackTraceLines -> c
    int errorCount -> d
    35:43:void <init>() -> <init>
    48:85:void start() -> g
    88:92:void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator) -> a
    95:99:void addIgnoreStackTraceLine(java.lang.String) -> a
    102:104:void stop() -> h
    108:108:void extraData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy) -> a
    112:145:java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    149:153:java.lang.String throwableProxyToString(ch.qos.logback.classic.spi.IThrowableProxy) -> a
    157:169:void recursiveAppend(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy) -> a
    172:177:void subjoinFirstLine(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy) -> b
    180:181:void subjoinExceptionMessage(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> a
    184:218:void subjoinSTEPArray(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.IThrowableProxy) -> a
    221:226:void printStackLine(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.StackTraceElementProxy) -> a
    229:230:void printIgnoredCount(java.lang.StringBuilder,int) -> a
    233:240:boolean isIgnoredStackTraceLine(java.lang.String) -> c
    35:35:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter -> a.a.a.a.h.a.a:
    25:25:void <init>() -> <init>
    29:38:java.lang.String getForegroundColorCode(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    25:25:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.classic.selector.ContextJNDISelector -> a.a.a.a.i.a:
    java.util.Map synchronizedContextMap -> a
    ch.qos.logback.classic.LoggerContext defaultContext -> b
    java.lang.ThreadLocal threadLocal -> c
    59:62:void <init>(ch.qos.logback.classic.LoggerContext) -> <init>
    73:116:ch.qos.logback.classic.LoggerContext getLoggerContext() -> a
    121:121:java.lang.String conventionalConfigFileName(java.lang.String) -> a
    125:140:java.net.URL findConfigFileURL(javax.naming.Context,ch.qos.logback.classic.LoggerContext) -> a
    145:150:java.net.URL urlByResourceName(ch.qos.logback.core.status.StatusManager,java.lang.String) -> a
    155:162:void configureLoggerContextByURL(ch.qos.logback.classic.LoggerContext,java.net.URL) -> a
    57:57:void <clinit>() -> <clinit>
ch.qos.logback.classic.selector.ContextSelector -> a.a.a.a.i.b:
    ch.qos.logback.classic.LoggerContext getLoggerContext() -> a
ch.qos.logback.classic.selector.DefaultContextSelector -> a.a.a.a.i.c:
    ch.qos.logback.classic.LoggerContext defaultLoggerContext -> a
    25:27:void <init>(ch.qos.logback.classic.LoggerContext) -> <init>
    30:30:ch.qos.logback.classic.LoggerContext getLoggerContext() -> a
    34:34:ch.qos.logback.classic.LoggerContext getDefaultLoggerContext() -> b
ch.qos.logback.classic.sift.AppenderFactoryUsingJoran -> a.a.a.a.j.a:
    30:31:void <init>(java.util.List,java.lang.String,java.util.Map) -> <init>
    34:34:ch.qos.logback.core.sift.SiftingJoranConfiguratorBase getSiftingJoranConfigurator(java.lang.String) -> a
ch.qos.logback.classic.sift.MDCBasedDiscriminator -> a.a.a.a.j.b:
    java.lang.String key -> b
    java.lang.String defaultValue -> c
    42:50:java.lang.String getDiscriminatingValue(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    56:68:void start() -> a
    71:71:java.lang.String getKey() -> b
    30:30:java.lang.String getDiscriminatingValue(java.lang.Object) -> a
ch.qos.logback.classic.sift.SiftAction -> a.a.a.a.j.c:
    java.util.List seList -> a
    28:28:void <init>() -> <init>
    33:35:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    39:47:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
    50:51:void inPlay(ch.qos.logback.core.joran.event.SaxEvent) -> a
ch.qos.logback.classic.sift.SiftingAppender -> a.a.a.a.j.d:
    33:33:void <init>() -> <init>
    37:37:long getTimestamp(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    47:51:boolean eventMarksEndOfLife(ch.qos.logback.classic.spi.ILoggingEvent) -> b
    33:33:boolean eventMarksEndOfLife(java.lang.Object) -> a
    33:33:long getTimestamp(java.lang.Object) -> b
ch.qos.logback.classic.sift.SiftingJoranConfigurator -> a.a.a.a.j.e:
    34:35:void <init>(java.lang.String,java.lang.String,java.util.Map) -> <init>
    39:39:ch.qos.logback.core.joran.spi.ElementPath initialElementPath() -> a
    44:46:void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> a
    50:51:void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> a
    55:63:void buildInterpreter() -> b
    67:74:ch.qos.logback.core.Appender getAppender() -> c
ch.qos.logback.classic.spi.CallerData -> a.a.a.a.k.a:
    java.lang.String CALLER_DATA_NA -> a
    java.lang.StackTraceElement[] EMPTY_CALLER_DATA_ARRAY -> b
    56:87:java.lang.StackTraceElement[] extract(java.lang.Throwable,java.lang.String,int,java.util.List) -> a
    93:97:boolean isInFrameworkSpace(java.lang.String,java.lang.String,java.util.List) -> a
    105:112:boolean isInFrameworkSpaceList(java.lang.String,java.util.List) -> a
    44:49:void <clinit>() -> <clinit>
ch.qos.logback.classic.spi.ClassPackagingData -> a.a.a.a.k.b:
    java.lang.String codeLocation -> a
    java.lang.String version -> b
    boolean exact -> c
    25:29:void <init>(java.lang.String,java.lang.String) -> <init>
    31:35:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    38:38:java.lang.String getCodeLocation() -> a
    42:42:java.lang.String getVersion() -> b
    46:46:boolean isExact() -> c
    51:54:int hashCode() -> hashCode
    59:78:boolean equals(java.lang.Object) -> equals
ch.qos.logback.classic.spi.Configurator -> a.a.a.a.k.c:
    void configure(ch.qos.logback.classic.LoggerContext) -> a
ch.qos.logback.classic.spi.EventArgUtil -> a.a.a.a.k.d:
    19:27:java.lang.Throwable extractThrowable(java.lang.Object[]) -> a
    37:43:java.lang.Object[] trimmedCopy(java.lang.Object[]) -> b
    51:51:boolean successfulExtraction(java.lang.Throwable) -> a
ch.qos.logback.classic.spi.ILoggingEvent -> a.a.a.a.k.e:
    java.lang.String getThreadName() -> a
    ch.qos.logback.classic.Level getLevel() -> b
    java.lang.String getMessage() -> c
    java.lang.Object[] getArgumentArray() -> d
    java.lang.String getFormattedMessage() -> e
    java.lang.String getLoggerName() -> f
    ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextVO() -> g
    ch.qos.logback.classic.spi.IThrowableProxy getThrowableProxy() -> h
    java.lang.StackTraceElement[] getCallerData() -> i
    boolean hasCallerData() -> j
    org.slf4j.Marker getMarker() -> k
    java.util.Map getMDCPropertyMap() -> l
    long getTimeStamp() -> m
ch.qos.logback.classic.spi.IThrowableProxy -> a.a.a.a.k.f:
    java.lang.String getMessage() -> a
    java.lang.String getClassName() -> b
    ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray() -> c
    int getCommonFrames() -> d
    ch.qos.logback.classic.spi.IThrowableProxy getCause() -> e
    ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed() -> f
ch.qos.logback.classic.spi.LoggerContextListener -> a.a.a.a.k.g:
    boolean isResetResistant() -> a
    void onStart(ch.qos.logback.classic.LoggerContext) -> c
    void onReset(ch.qos.logback.classic.LoggerContext) -> b
    void onStop(ch.qos.logback.classic.LoggerContext) -> a
    void onLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level) -> a
ch.qos.logback.classic.spi.LoggerContextVO -> a.a.a.a.k.h:
    java.lang.String name -> a
    java.util.Map propertyMap -> b
    long birthTime -> c
    44:48:void <init>(ch.qos.logback.classic.LoggerContext) -> <init>
    57:57:java.lang.String getName() -> a
    61:61:java.util.Map getPropertyMap() -> b
    65:65:long getBirthTime() -> c
    70:70:java.lang.String toString() -> toString
    75:89:boolean equals(java.lang.Object) -> equals
    94:98:int hashCode() -> hashCode
ch.qos.logback.classic.spi.LoggingEvent -> a.a.a.a.k.i:
    java.lang.String fqnOfLoggerClass -> a
    java.lang.String threadName -> c
    java.lang.String loggerName -> d
    ch.qos.logback.classic.LoggerContext loggerContext -> e
    ch.qos.logback.classic.spi.LoggerContextVO loggerContextVO -> f
    ch.qos.logback.classic.Level level -> g
    java.lang.String message -> h
    java.lang.String formattedMessage -> b
    java.lang.Object[] argumentArray -> i
    ch.qos.logback.classic.spi.ThrowableProxy throwableProxy -> j
    java.lang.StackTraceElement[] callerDataArray -> k
    org.slf4j.Marker marker -> l
    java.util.Map mdcPropertyMap -> m
    long timeStamp -> n
    101:102:void <init>() -> <init>
    104:127:void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Throwable,java.lang.Object[]) -> <init>
    130:134:java.lang.Throwable extractThrowableAnRearrangeArguments(java.lang.Object[]) -> a
    145:145:java.lang.Object[] getArgumentArray() -> d
    149:149:ch.qos.logback.classic.Level getLevel() -> b
    153:153:java.lang.String getLoggerName() -> f
    161:164:java.lang.String getThreadName() -> a
    183:183:ch.qos.logback.classic.spi.IThrowableProxy getThrowableProxy() -> h
    206:210:void prepareForDeferredProcessing() -> n
    213:213:ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextVO() -> g
    221:221:java.lang.String getMessage() -> c
    232:232:long getTimeStamp() -> m
    257:261:java.lang.StackTraceElement[] getCallerData() -> i
    265:265:boolean hasCallerData() -> j
    273:273:org.slf4j.Marker getMarker() -> k
    277:281:void setMarker(org.slf4j.Marker) -> a
    289:298:java.lang.String getFormattedMessage() -> e
    303:314:java.util.Map getMDCPropertyMap() -> l
    342:346:java.lang.String toString() -> toString
ch.qos.logback.classic.spi.LoggingEventVO -> a.a.a.a.k.j:
    java.lang.String threadName -> a
    java.lang.String loggerName -> b
    ch.qos.logback.classic.spi.LoggerContextVO loggerContextVO -> c
    ch.qos.logback.classic.Level level -> d
    java.lang.String message -> e
    java.lang.String formattedMessage -> f
    java.lang.Object[] argumentArray -> g
    ch.qos.logback.classic.spi.ThrowableProxyVO throwableProxy -> h
    java.lang.StackTraceElement[] callerDataArray -> i
    org.slf4j.Marker marker -> j
    java.util.Map mdcPropertyMap -> k
    long timeStamp -> l
    35:35:void <init>() -> <init>
    63:79:ch.qos.logback.classic.spi.LoggingEventVO build(ch.qos.logback.classic.spi.ILoggingEvent) -> a
    83:83:java.lang.String getThreadName() -> a
    87:87:ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextVO() -> g
    91:91:java.lang.String getLoggerName() -> f
    95:95:ch.qos.logback.classic.Level getLevel() -> b
    99:99:java.lang.String getMessage() -> c
    103:113:java.lang.String getFormattedMessage() -> e
    117:117:java.lang.Object[] getArgumentArray() -> d
    121:121:ch.qos.logback.classic.spi.IThrowableProxy getThrowableProxy() -> h
    125:125:java.lang.StackTraceElement[] getCallerData() -> i
    129:129:boolean hasCallerData() -> j
    133:133:org.slf4j.Marker getMarker() -> k
    137:137:long getTimeStamp() -> m
    149:149:java.util.Map getMDCPropertyMap() -> l
    157:157:void prepareForDeferredProcessing() -> n
    197:202:int hashCode() -> hashCode
    207:245:boolean equals(java.lang.Object) -> equals
ch.qos.logback.classic.spi.PackagingDataCalculator -> a.a.a.a.k.k:
    ch.qos.logback.classic.spi.StackTraceElementProxy[] STEP_ARRAY_TEMPLATE -> a
    java.util.HashMap cache -> b
    boolean GET_CALLER_CLASS_METHOD_AVAILABLE -> c
    29:33:void <init>() -> <init>
    57:67:void calculate(ch.qos.logback.classic.spi.IThrowableProxy) -> a
    72:105:void populateFrames(ch.qos.logback.classic.spi.StackTraceElementProxy[]) -> a
    108:114:void populateUncommonFrames(int,ch.qos.logback.classic.spi.StackTraceElementProxy[],java.lang.ClassLoader) -> a
    117:126:ch.qos.logback.classic.spi.ClassPackagingData calculateByExactType(java.lang.Class) -> c
    130:140:ch.qos.logback.classic.spi.ClassPackagingData computeBySTEP(ch.qos.logback.classic.spi.StackTraceElementProxy,java.lang.ClassLoader) -> a
    144:156:java.lang.String getImplementationVersion(java.lang.Class) -> a
    162:181:java.lang.String getCodeLocation(java.lang.Class) -> b
    185:192:java.lang.String getCodeLocation(java.lang.String,char) -> a
    196:196:boolean isFolder(int,java.lang.String) -> a
    200:211:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> a
    222:242:java.lang.Class bestEffortLoadClass(java.lang.ClassLoader,java.lang.String) -> b
    31:54:void <clinit>() -> <clinit>
ch.qos.logback.classic.spi.PlatformInfo -> a.a.a.a.k.l:
    int hasJMXObjectName -> a
    28:36:boolean hasJMXObjectName() -> a
    25:25:void <clinit>() -> <clinit>
ch.qos.logback.classic.spi.STEUtil -> a.a.a.a.k.m:
    39:55:int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[]) -> a
ch.qos.logback.classic.spi.StackTraceElementProxy -> a.a.a.a.k.n:
    java.lang.StackTraceElement ste -> a
    java.lang.String steAsString -> b
    ch.qos.logback.classic.spi.ClassPackagingData cpd -> c
    28:33:void <init>(java.lang.StackTraceElement) -> <init>
    36:39:java.lang.String getSTEAsString() -> a
    47:51:void setClassPackagingData(ch.qos.logback.classic.spi.ClassPackagingData) -> a
    54:54:ch.qos.logback.classic.spi.ClassPackagingData getClassPackagingData() -> b
    59:59:int hashCode() -> hashCode
    64:82:boolean equals(java.lang.Object) -> equals
    87:87:java.lang.String toString() -> toString
ch.qos.logback.classic.spi.ThrowableProxy -> a.a.a.a.k.o:
    java.lang.Throwable throwable -> c
    java.lang.String className -> d
    java.lang.String message -> e
    ch.qos.logback.classic.spi.StackTraceElementProxy[] stackTraceElementProxyArray -> a
    int commonFrames -> b
    ch.qos.logback.classic.spi.ThrowableProxy cause -> f
    ch.qos.logback.classic.spi.ThrowableProxy[] suppressed -> g
    ch.qos.logback.classic.spi.PackagingDataCalculator packagingDataCalculator -> h
    boolean calculatedPackageData -> i
    java.lang.reflect.Method GET_SUPPRESSED_METHOD -> j
    ch.qos.logback.classic.spi.ThrowableProxy[] NO_SUPPRESSED -> k
    31:85:void <init>(java.lang.Throwable) -> <init>
    88:88:java.lang.Throwable getThrowable() -> g
    92:92:java.lang.String getMessage() -> a
    101:101:java.lang.String getClassName() -> b
    105:105:ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray() -> c
    109:109:int getCommonFrames() -> d
    118:118:ch.qos.logback.classic.spi.IThrowableProxy getCause() -> e
    122:122:ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed() -> f
    129:132:ch.qos.logback.classic.spi.PackagingDataCalculator getPackagingDataCalculator() -> h
    136:144:void calculatePackagingData() -> i
    39:48:void <clinit>() -> <clinit>
ch.qos.logback.classic.spi.ThrowableProxyUtil -> a.a.a.a.k.p:
    44:51:ch.qos.logback.classic.spi.StackTraceElementProxy[] steArrayToStepArray(java.lang.StackTraceElement[]) -> a
    55:73:int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[]) -> a
    100:103:void indent(java.lang.StringBuilder,int) -> a
    114:126:void subjoinPackagingData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy) -> a
    175:179:void subjoinFirstLineRootCauseFirst(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> a
    182:183:void subjoinExceptionMessage(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> b
ch.qos.logback.classic.spi.ThrowableProxyVO -> a.a.a.a.k.q:
    java.lang.String className -> a
    java.lang.String message -> b
    int commonFramesCount -> c
    ch.qos.logback.classic.spi.StackTraceElementProxy[] stackTraceElementProxyArray -> d
    ch.qos.logback.classic.spi.IThrowableProxy cause -> e
    ch.qos.logback.classic.spi.IThrowableProxy[] suppressed -> f
    19:19:void <init>() -> <init>
    31:31:java.lang.String getMessage() -> a
    35:35:java.lang.String getClassName() -> b
    39:39:int getCommonFrames() -> d
    43:43:ch.qos.logback.classic.spi.IThrowableProxy getCause() -> e
    47:47:ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray() -> c
    51:51:ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed() -> f
    56:59:int hashCode() -> hashCode
    64:90:boolean equals(java.lang.Object) -> equals
    94:113:ch.qos.logback.classic.spi.ThrowableProxyVO build(ch.qos.logback.classic.spi.IThrowableProxy) -> a
ch.qos.logback.classic.spi.TurboFilterList -> a.a.a.a.k.r:
    30:30:void <init>() -> <init>
    42:65:ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> a
ch.qos.logback.classic.turbo.TurboFilter -> a.a.a.a.l.a:
    boolean start -> a
    34:37:void <init>() -> <init>
    ch.qos.logback.core.spi.FilterReply decide(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> a
    55:56:void start() -> g
    59:59:boolean isStarted() -> a_
    63:64:void stop() -> h
ch.qos.logback.classic.util.ContextInitializer -> a.a.a.a.m.a:
    ch.qos.logback.classic.LoggerContext loggerContext -> a
    54:56:void <init>(ch.qos.logback.classic.LoggerContext) -> <init>
    59:79:void configureByResource(java.net.URL) -> a
    88:115:java.net.URL findConfigFileURLFromSystemProperties(java.lang.ClassLoader,boolean) -> a
    119:135:java.net.URL findURLOfDefaultConfigurationFile(boolean) -> a
    139:143:java.net.URL getResource(java.lang.String,java.lang.ClassLoader,boolean) -> a
    147:167:void autoConfig() -> a
    170:177:void statusOnResourceSearch(java.lang.String,java.lang.ClassLoader,java.net.URL) -> a
    180:193:void multiplicityWarning(java.lang.String,java.lang.ClassLoader) -> a
ch.qos.logback.classic.util.ContextSelectorStaticBinder -> a.a.a.a.m.b:
    ch.qos.logback.classic.util.ContextSelectorStaticBinder singleton -> a
    ch.qos.logback.classic.selector.ContextSelector contextSelector -> b
    java.lang.Object key -> c
    33:33:void <init>() -> <init>
    41:41:ch.qos.logback.classic.util.ContextSelectorStaticBinder getSingleton() -> a
    56:71:void init(ch.qos.logback.classic.LoggerContext,java.lang.Object) -> a
    91:93:ch.qos.logback.classic.selector.ContextSelector dynamicalContextSelector(ch.qos.logback.classic.LoggerContext,java.lang.String) -> a
    97:97:ch.qos.logback.classic.selector.ContextSelector getContextSelector() -> b
    35:35:void <clinit>() -> <clinit>
ch.qos.logback.classic.util.DefaultNestedComponentRules -> a.a.a.a.m.c:
    35:44:void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> a
ch.qos.logback.classic.util.EnvUtil -> a.a.a.a.m.d:
    java.lang.ClassLoader testServiceLoaderClassLoader -> a
    24:24:void <init>() -> <init>
    34:39:boolean isGroovyAvailable() -> a
    44:44:java.lang.ClassLoader getServiceLoaderClassLoader() -> b
    48:52:java.lang.Object loadFromServiceLoader(java.lang.Class) -> a
    31:31:void <clinit>() -> <clinit>
ch.qos.logback.classic.util.JNDIUtil -> a.a.a.a.m.e:
    30:30:javax.naming.Context getInitialContext() -> a
    34:41:java.lang.String lookup(javax.naming.Context,java.lang.String) -> a
ch.qos.logback.classic.util.LogbackMDCAdapter -> a.a.a.a.m.f:
    java.lang.ThreadLocal copyOnThreadLocal -> a
    java.lang.ThreadLocal lastOperation -> b
    39:61:void <init>() -> <init>
    162:163:java.util.Map getPropertyMap() -> a
    185:189:java.util.Map getCopyOfContextMap() -> b
ch.qos.logback.classic.util.LoggerNameUtil -> a.a.a.a.m.g:
    39:49:int getSeparatorIndexOf(java.lang.String,int) -> a
ch.qos.logback.core.Appender -> a.a.a.b.a:
    java.lang.String getName() -> c
    void doAppend(java.lang.Object) -> c
    void setName(java.lang.String) -> a
ch.qos.logback.core.AppenderBase -> a.a.a.b.b:
    boolean started -> a
    boolean guard -> c
    java.lang.String name -> b
    ch.qos.logback.core.spi.FilterAttachableImpl fai -> d
    int statusRepeatCount -> e
    int exceptionCount -> f
    32:54:void <init>() -> <init>
    50:50:java.lang.String getName() -> c
    63:91:void doAppend(java.lang.Object) -> c
    void append(java.lang.Object) -> d
    99:100:void setName(java.lang.String) -> a
    103:104:void start() -> g
    107:108:void stop() -> h
    111:111:boolean isStarted() -> a_
    115:115:java.lang.String toString() -> toString
    131:131:ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object) -> e
ch.qos.logback.core.BasicStatusManager -> a.a.a.b.c:
    int count -> a
    java.util.List statusList -> b
    ch.qos.logback.core.helpers.CyclicBuffer tailBuffer -> c
    ch.qos.logback.core.spi.LogbackLock statusListLock -> d
    int level -> e
    java.util.List statusListenerList -> f
    ch.qos.logback.core.spi.LogbackLock statusListenerListLock -> g
    26:42:void <init>() -> <init>
    59:74:void add(ch.qos.logback.core.status.Status) -> a
    77:81:java.util.List getCopyOfStatusList() -> a
    85:90:void fireStatusAddEvent(ch.qos.logback.core.status.Status) -> b
    113:121:boolean add(ch.qos.logback.core.status.StatusListener) -> a
    125:129:boolean checkForPresence(java.util.List,java.lang.Class) -> a
    133:136:void remove(ch.qos.logback.core.status.StatusListener) -> b
    139:141:java.util.List getCopyOfStatusListenerList() -> b
ch.qos.logback.core.ConsoleAppender -> a.a.a.b.d:
    ch.qos.logback.core.joran.spi.ConsoleTarget target -> a
    boolean withJansi -> b
    38:41:void <init>() -> <init>
    76:83:void start() -> g
    87:94:java.io.OutputStream getTargetStreamForWindows(java.io.OutputStream) -> b
ch.qos.logback.core.Context -> a.a.a.b.e:
    ch.qos.logback.core.status.StatusManager getStatusManager() -> k
    java.lang.Object getObject(java.lang.String) -> d
    void putObject(java.lang.String,java.lang.Object) -> a
    java.lang.String getProperty(java.lang.String) -> e
    void putProperty(java.lang.String,java.lang.String) -> a
    java.lang.String getName() -> l
    void setName(java.lang.String) -> a
    long getBirthTime() -> m
    java.lang.Object getConfigurationLock() -> n
    java.util.concurrent.ScheduledExecutorService getScheduledExecutorService() -> o
    java.util.concurrent.ExecutorService getExecutorService() -> p
    void register(ch.qos.logback.core.spi.LifeCycle) -> a
    void addScheduledFuture(java.util.concurrent.ScheduledFuture) -> a
ch.qos.logback.core.ContextBase -> a.a.a.b.f:
    long birthTime -> a
    java.lang.String name -> b
    ch.qos.logback.core.status.StatusManager sm -> g
    java.util.Map propertyMap -> c
    java.util.Map objectMap -> d
    ch.qos.logback.core.spi.LogbackLock configurationLock -> e
    java.util.concurrent.ScheduledExecutorService scheduledExecutorService -> h
    java.util.List scheduledFutures -> f
    ch.qos.logback.core.LifeCycleManager lifeCycleManager -> i
    boolean started -> j
    38:57:void <init>() -> <init>
    60:60:ch.qos.logback.core.status.StatusManager getStatusManager() -> k
    82:82:java.util.Map getCopyOfPropertyMap() -> q
    86:91:void putProperty(java.lang.String,java.lang.String) -> a
    94:96:void initCollisionMaps() -> r
    106:112:java.lang.String getProperty(java.lang.String) -> e
    116:121:java.lang.String lazyGetHostname() -> b
    125:131:void putHostnameProperty(java.lang.String) -> b
    134:134:java.lang.Object getObject(java.lang.String) -> d
    138:139:void putObject(java.lang.String,java.lang.Object) -> a
    142:143:void removeObject(java.lang.String) -> f
    146:146:java.lang.String getName() -> l
    153:154:void start() -> g
    159:162:void stop() -> h
    165:165:boolean isStarted() -> a_
    174:178:void reset() -> d
    188:196:void setName(java.lang.String) -> a
    199:199:long getBirthTime() -> m
    203:203:java.lang.Object getConfigurationLock() -> n
    211:211:java.util.concurrent.ExecutorService getExecutorService() -> p
    216:219:java.util.concurrent.ScheduledExecutorService getScheduledExecutorService() -> o
    223:227:void stopExecutorService() -> c
    230:240:void removeShutdownHook() -> e
    243:244:void register(ch.qos.logback.core.spi.LifeCycle) -> a
    259:262:ch.qos.logback.core.LifeCycleManager getLifeCycleManager() -> s
    267:267:java.lang.String toString() -> toString
    272:273:void addScheduledFuture(java.util.concurrent.ScheduledFuture) -> a
ch.qos.logback.core.CoreConstants -> a.a.a.b.g:
    java.lang.String LINE_SEPARATOR -> a
    int LINE_SEPARATOR_LEN -> b
    java.lang.String[] EMPTY_STRING_ARRAY -> c
    java.lang.Class[] EMPTY_CLASS_ARRAY -> d
    long REFERENCE_BIPS -> e
    java.lang.String LEFT_ACCOLADE -> f
    java.lang.String RIGHT_ACCOLADE -> g
    46:200:void <clinit>() -> <clinit>
ch.qos.logback.core.Layout -> a.a.a.b.h:
    java.lang.String doLayout(java.lang.Object) -> a
    java.lang.String getFileHeader() -> c
    java.lang.String getPresentationHeader() -> d
    java.lang.String getPresentationFooter() -> e
    java.lang.String getFileFooter() -> f
ch.qos.logback.core.LayoutBase -> a.a.a.b.i:
    boolean started -> c
    java.lang.String fileHeader -> d
    java.lang.String fileFooter -> e
    java.lang.String presentationHeader -> f
    java.lang.String presentationFooter -> g
    18:18:void <init>() -> <init>
    28:29:void setContext(ch.qos.logback.core.Context) -> a
    32:32:ch.qos.logback.core.Context getContext() -> i
    36:37:void start() -> g
    40:41:void stop() -> h
    44:44:boolean isStarted() -> a_
    48:48:java.lang.String getFileHeader() -> c
    52:52:java.lang.String getPresentationHeader() -> d
    56:56:java.lang.String getPresentationFooter() -> e
    60:60:java.lang.String getFileFooter() -> f
ch.qos.logback.core.LifeCycleManager -> a.a.a.b.j:
    java.util.Set components -> a
    28:30:void <init>() -> <init>
    38:39:void register(ch.qos.logback.core.spi.LifeCycle) -> a
    47:53:void reset() -> a
ch.qos.logback.core.LogbackException -> a.a.a.b.k:
    21:22:void <init>(java.lang.String) -> <init>
    25:26:void <init>(java.lang.String,java.lang.Throwable) -> <init>
ch.qos.logback.core.OutputStreamAppender -> a.a.a.b.l:
    ch.qos.logback.core.encoder.Encoder encoder -> c
    java.util.concurrent.locks.ReentrantLock lock -> d
    java.io.OutputStream outputStream -> a
    boolean immediateFlush -> e
    36:54:void <init>() -> <init>
    70:84:void start() -> g
    98:103:void append(java.lang.Object) -> a
    113:120:void stop() -> h
    126:136:void closeOutputStream() -> b
    139:148:void encoderClose() -> d
    161:175:void setOutputStream(java.io.OutputStream) -> a
    178:187:void encoderInit() -> e
    194:206:void writeBytes(byte[]) -> a
    217:239:void subAppend(java.lang.Object) -> b
    246:247:void setEncoder(ch.qos.logback.core.encoder.Encoder) -> a
    254:255:void setImmediateFlush(boolean) -> a
ch.qos.logback.core.UnsynchronizedAppenderBase -> a.a.a.b.m:
    boolean started -> f
    java.lang.ThreadLocal guard -> a
    java.lang.String name -> g
    ch.qos.logback.core.spi.FilterAttachableImpl fai -> b
    int statusRepeatCount -> c
    int exceptionCount -> d
    31:56:void <init>() -> <init>
    52:52:java.lang.String getName() -> c
    65:93:void doAppend(java.lang.Object) -> c
    void append(java.lang.Object) -> a
    101:102:void setName(java.lang.String) -> a
    105:106:void start() -> g
    109:110:void stop() -> h
    113:113:boolean isStarted() -> a_
    117:117:java.lang.String toString() -> toString
    133:133:ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object) -> d
ch.qos.logback.core.boolex.EvaluationException -> a.a.a.b.a.a:
    30:31:void <init>(java.lang.String,java.lang.Throwable) -> <init>
ch.qos.logback.core.boolex.EventEvaluator -> a.a.a.b.a.b:
    boolean evaluate(java.lang.Object) -> b
    java.lang.String getName() -> d
    void setName(java.lang.String) -> a
ch.qos.logback.core.boolex.EventEvaluatorBase -> a.a.a.b.a.c:
    java.lang.String name -> c
    boolean started -> d
    18:18:void <init>() -> <init>
    24:24:java.lang.String getName() -> d
    28:32:void setName(java.lang.String) -> a
    35:35:boolean isStarted() -> a_
    39:40:void start() -> g
    43:44:void stop() -> h
ch.qos.logback.core.boolex.JaninoEventEvaluatorBase -> a.a.a.b.a.d:
    java.lang.Class EXPRESSION_TYPE -> e
    java.lang.Class[] THROWN_EXCEPTIONS -> f
    java.lang.String expression -> a
    org.codehaus.janino.ScriptEvaluator scriptEvaluator -> g
    int errorCount -> b
    java.util.List matcherList -> h
    boolean $assertionsDisabled -> i
    28:51:void <init>() -> <init>
    java.lang.String getDecoratedExpression() -> a
    java.lang.String[] getParameterNames() -> b
    java.lang.Class[] getParameterTypes() -> c
    java.lang.Object[] getParameterValues(java.lang.Object) -> a
    56:62:void start() -> g
    65:76:boolean evaluate(java.lang.Object) -> b
    81:81:java.lang.String getExpression() -> e
    28:36:void <clinit>() -> <clinit>
ch.qos.logback.core.boolex.Matcher -> a.a.a.b.a.e:
    java.lang.String regex -> a
    java.lang.String name -> b
    boolean caseSensitive -> c
    boolean canonEq -> d
    boolean unicodeCase -> e
    boolean start -> f
    java.util.regex.Pattern pattern -> g
    22:30:void <init>() -> <init>
    42:65:void start() -> g
    68:69:void stop() -> h
    72:72:boolean isStarted() -> a_
    119:119:java.lang.String getName() -> b
ch.qos.logback.core.encoder.Encoder -> a.a.a.b.b.a:
    byte[] headerBytes() -> b
    byte[] encode(java.lang.Object) -> a
    byte[] footerBytes() -> c
ch.qos.logback.core.encoder.EncoderBase -> a.a.a.b.b.b:
    boolean started -> a
    18:18:void <init>() -> <init>
    23:23:boolean isStarted() -> a_
    27:28:void start() -> g
    31:32:void stop() -> h
ch.qos.logback.core.encoder.LayoutWrappingEncoder -> a.a.a.b.b.c:
    ch.qos.logback.core.Layout layout -> b
    java.nio.charset.Charset charset -> e
    ch.qos.logback.core.Appender parent -> c
    java.lang.Boolean immediateFlush -> d
    23:37:void <init>() -> <init>
    44:45:void setLayout(ch.qos.logback.core.Layout) -> a
    80:92:byte[] headerBytes() -> b
    97:103:byte[] footerBytes() -> c
    107:110:byte[] convertToBytes(java.lang.String) -> a
    115:116:byte[] encode(java.lang.Object) -> a
    120:120:boolean isStarted() -> a_
    124:135:void start() -> g
    138:139:void stop() -> h
    142:145:void appendIfNotNull(java.lang.StringBuilder,java.lang.String) -> a
ch.qos.logback.core.filter.AbstractMatcherFilter -> a.a.a.b.c.a:
    ch.qos.logback.core.spi.FilterReply onMatch -> a
    ch.qos.logback.core.spi.FilterReply onMismatch -> b
    18:21:void <init>() -> <init>
ch.qos.logback.core.filter.EvaluatorFilter -> a.a.a.b.c.b:
    ch.qos.logback.core.boolex.EventEvaluator evaluator -> c
    37:37:void <init>() -> <init>
    43:48:void start() -> g
    61:72:ch.qos.logback.core.spi.FilterReply decide(java.lang.Object) -> a
ch.qos.logback.core.filter.Filter -> a.a.a.b.c.c:
    java.lang.String name -> a
    boolean start -> d
    31:35:void <init>() -> <init>
    38:39:void start() -> g
    42:42:boolean isStarted() -> a_
    46:47:void stop() -> h
    ch.qos.logback.core.spi.FilterReply decide(java.lang.Object) -> a
    62:62:java.lang.String getName() -> b
ch.qos.logback.core.helpers.CyclicBuffer -> a.a.a.b.d.a:
    java.lang.Object[] ea -> a
    int first -> b
    int last -> c
    int numElems -> d
    int maxSize -> e
    43:48:void <init>(int) -> <init>
    61:66:void init(int) -> b
    80:88:void add(java.lang.Object) -> a
    96:99:java.lang.Object get(int) -> a
    123:127:java.util.List asList() -> a
    135:135:int length() -> b
ch.qos.logback.core.helpers.NOPAppender -> a.a.a.b.d.b:
    18:18:void <init>() -> <init>
    22:22:void append(java.lang.Object) -> d
ch.qos.logback.core.helpers.ThrowableToStringArray -> a.a.a.b.d.c:
    24:26:java.lang.String[] convert(java.lang.Throwable) -> a
    32:48:void extract(java.util.List,java.lang.Throwable,java.lang.StackTraceElement[]) -> a
    51:60:java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[]) -> a
    64:80:int findNumberOfCommonFrames(java.lang.StackTraceElement[],java.lang.StackTraceElement[]) -> a
ch.qos.logback.core.hook.ShutdownHook -> a.a.a.b.e.a:
ch.qos.logback.core.hook.ShutdownHookBase -> a.a.a.b.e.b:
    27:28:void <init>() -> <init>
ch.qos.logback.core.joran.GenericConfigurator -> a.a.a.b.f.a:
    ch.qos.logback.core.joran.util.beans.BeanDescriptionCache beanDescriptionCache -> b
    ch.qos.logback.core.joran.spi.Interpreter interpreter -> a
    37:37:void <init>() -> <init>
    44:69:void doConfigure(java.net.URL) -> a
    100:101:void informContextOfURLUsedForConfiguration(ch.qos.logback.core.Context,java.net.URL) -> a
    108:111:void doConfigure(java.io.InputStream,java.lang.String) -> a
    114:117:ch.qos.logback.core.joran.util.beans.BeanDescriptionCache getBeanDescriptionCache() -> d
    void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> a
    void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter) -> a
    126:126:void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> a
    129:129:ch.qos.logback.core.joran.spi.ElementPath initialElementPath() -> a
    133:140:void buildInterpreter() -> b
    146:159:void doConfigure(org.xml.sax.InputSource) -> a
    162:167:void doConfigure(java.util.List) -> a
    176:177:void registerSafeConfiguration(java.util.List) -> b
    184:184:java.util.List recallSafeConfiguration() -> e
ch.qos.logback.core.joran.JoranConfiguratorBase -> a.a.a.b.f.b:
    52:52:void <init>() -> <init>
    58:79:void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> a
    84:91:void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter) -> a
    95:99:void buildInterpreter() -> b
ch.qos.logback.core.joran.action.AbstractEventEvaluatorAction -> a.a.a.b.f.a.a:
    ch.qos.logback.core.boolex.EventEvaluator evaluator -> a
    boolean inError -> b
    26:29:void <init>() -> <init>
    36:71:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    java.lang.String defaultClassName() -> a
    86:113:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.Action -> a.a.a.b.f.a.b:
    38:38:void <init>() -> <init>
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    64:64:void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> b
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
    73:73:java.lang.String toString() -> toString
    77:82:int getColumnNumber(ch.qos.logback.core.joran.spi.InterpretationContext) -> a
    86:91:int getLineNumber(ch.qos.logback.core.joran.spi.InterpretationContext) -> b
    95:95:java.lang.String getLineColStr(ch.qos.logback.core.joran.spi.InterpretationContext) -> c
ch.qos.logback.core.joran.action.ActionUtil -> a.a.a.b.f.a.c:
    34:39:ch.qos.logback.core.joran.action.ActionUtil$Scope stringToScope(java.lang.String) -> a
    43:53:void setProperty(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,java.lang.String,ch.qos.logback.core.joran.action.ActionUtil$Scope) -> a
    60:71:void setProperties(ch.qos.logback.core.joran.spi.InterpretationContext,java.util.Properties,ch.qos.logback.core.joran.action.ActionUtil$Scope) -> a
ch.qos.logback.core.joran.action.ActionUtil$1 -> a.a.a.b.f.a.d:
    int[] $SwitchMap$ch$qos$logback$core$joran$action$ActionUtil$Scope -> a
    43:43:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.ActionUtil$Scope -> a.a.a.b.f.a.e:
    ch.qos.logback.core.joran.action.ActionUtil$Scope LOCAL -> a
    ch.qos.logback.core.joran.action.ActionUtil$Scope CONTEXT -> b
    ch.qos.logback.core.joran.action.ActionUtil$Scope SYSTEM -> c
    ch.qos.logback.core.joran.action.ActionUtil$Scope[] $VALUES -> d
    24:24:ch.qos.logback.core.joran.action.ActionUtil$Scope[] values() -> values
    24:24:ch.qos.logback.core.joran.action.ActionUtil$Scope valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:25:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.AppenderAction -> a.a.a.b.f.a.f:
    ch.qos.logback.core.Appender appender -> a
    boolean inError -> b
    26:28:void <init>() -> <init>
    39:78:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    85:100:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.AppenderRefAction -> a.a.a.b.f.a.g:
    boolean inError -> a
    26:27:void <init>() -> <init>
    32:71:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    74:74:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.ContextPropertyAction -> a.a.a.b.f.a.h:
    24:24:void <init>() -> <init>
    28:29:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    33:33:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.ConversionRuleAction -> a.a.a.b.f.a.i:
    boolean inError -> a
    25:26:void <init>() -> <init>
    35:71:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    78:78:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.DefinePropertyAction -> a.a.a.b.f.a.j:
    java.lang.String scopeStr -> a
    ch.qos.logback.core.joran.action.ActionUtil$Scope scope -> b
    java.lang.String propertyName -> c
    ch.qos.logback.core.spi.PropertyDefiner definer -> d
    boolean inError -> e
    31:31:void <init>() -> <init>
    41:80:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    87:105:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.IADataForBasicProperty -> a.a.a.b.f.a.k:
    ch.qos.logback.core.joran.util.PropertySetter parentBean -> a
    ch.qos.logback.core.util.AggregationType aggregationType -> b
    java.lang.String propertyName -> c
    30:34:void <init>(ch.qos.logback.core.joran.util.PropertySetter,ch.qos.logback.core.util.AggregationType,java.lang.String) -> <init>
ch.qos.logback.core.joran.action.IADataForComplexProperty -> a.a.a.b.f.a.l:
    ch.qos.logback.core.joran.util.PropertySetter parentBean -> a
    ch.qos.logback.core.util.AggregationType aggregationType -> b
    java.lang.String complexPropertyName -> c
    java.lang.Object nestedComplexProperty -> e
    boolean inError -> d
    31:35:void <init>(ch.qos.logback.core.joran.util.PropertySetter,ch.qos.logback.core.util.AggregationType,java.lang.String) -> <init>
    38:38:ch.qos.logback.core.util.AggregationType getAggregationType() -> a
    42:42:java.lang.Object getNestedComplexProperty() -> b
    46:46:java.lang.String getComplexPropertyName() -> c
    50:51:void setNestedComplexProperty(java.lang.Object) -> a
ch.qos.logback.core.joran.action.ImplicitAction -> a.a.a.b.f.a.m:
    30:30:void <init>() -> <init>
    boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> a
ch.qos.logback.core.joran.action.IncludeAction -> a.a.a.b.f.a.n:
    java.lang.String attributeInUse -> a
    boolean optional -> b
    35:35:void <init>() -> <init>
    49:75:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    78:84:void close(java.io.InputStream) -> a
    87:112:boolean checkAttributes(org.xml.sax.Attributes) -> a
    117:121:java.net.URL attributeToURL(java.lang.String) -> a
    127:130:java.io.InputStream openURL(java.net.URL) -> a
    135:140:java.net.URL resourceAsURL(java.lang.String) -> a_
    144:147:void optionalWarning(java.lang.String) -> e
    150:156:java.net.URL filePathAsURL(java.lang.String) -> c
    161:180:java.net.URL getInputURL(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes) -> a
    185:190:java.io.InputStream getInputStream(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes) -> b
    197:212:void trimHeadAndTail(ch.qos.logback.core.joran.event.SaxEventRecorder) -> a
    215:217:void parseAndRecord(java.io.InputStream,ch.qos.logback.core.joran.event.SaxEventRecorder) -> a
    222:222:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.NOPAction -> a.a.a.b.f.a.o:
    28:28:void <init>() -> <init>
    31:31:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    34:34:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.NestedBasicPropertyIA -> a.a.a.b.f.a.p:
    java.util.Stack actionDataStack -> a
    ch.qos.logback.core.joran.util.beans.BeanDescriptionCache beanDescriptionCache -> b
    42:48:void <init>(ch.qos.logback.core.joran.util.beans.BeanDescriptionCache) -> <init>
    53:80:boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> a
    86:86:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    90:103:void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> b
    107:108:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.NestedBasicPropertyIA$1 -> a.a.a.b.f.a.q:
    int[] $SwitchMap$ch$qos$logback$core$util$AggregationType -> a
    66:66:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.NestedComplexPropertyIA -> a.a.a.b.f.a.r:
    java.util.Stack actionDataStack -> a
    ch.qos.logback.core.joran.util.beans.BeanDescriptionCache beanDescriptionCache -> b
    47:53:void <init>(ch.qos.logback.core.joran.util.beans.BeanDescriptionCache) -> <init>
    57:85:boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> a
    92:137:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    143:183:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.NestedComplexPropertyIA$1 -> a.a.a.b.f.a.s:
    int[] $SwitchMap$ch$qos$logback$core$util$AggregationType -> a
    70:70:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.NewRuleAction -> a.a.a.b.f.a.t:
    boolean inError -> a
    22:23:void <init>() -> <init>
    30:57:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    64:64:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.ParamAction -> a.a.a.b.f.a.u:
    java.lang.String NO_NAME -> a
    java.lang.String NO_VALUE -> b
    boolean inError -> c
    ch.qos.logback.core.joran.util.beans.BeanDescriptionCache beanDescriptionCache -> d
    25:30:void <init>(ch.qos.logback.core.joran.util.beans.BeanDescriptionCache) -> <init>
    33:62:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    65:65:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
    23:24:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.PropertyAction -> a.a.a.b.f.a.v:
    java.lang.String INVALID_ATTRIBUTES -> a
    41:41:void <init>() -> <init>
    55:100:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    103:107:void loadAndSetProperties(ch.qos.logback.core.joran.spi.InterpretationContext,java.io.InputStream,ch.qos.logback.core.joran.action.ActionUtil$Scope) -> a
    110:115:boolean checkFileAttributeSanity(org.xml.sax.Attributes) -> a
    119:124:boolean checkResourceAttributeSanity(org.xml.sax.Attributes) -> b
    128:133:boolean checkValueNameAttributesSanity(org.xml.sax.Attributes) -> c
    137:137:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
    45:45:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.action.ShutdownHookAction -> a.a.a.b.f.a.w:
    ch.qos.logback.core.hook.ShutdownHookBase hook -> a
    boolean inError -> b
    29:29:void <init>() -> <init>
    42:64:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    72:87:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
ch.qos.logback.core.joran.action.StatusListenerAction -> a.a.a.b.f.a.x:
    boolean inError -> a
    java.lang.Boolean effectivelyAdded -> b
    ch.qos.logback.core.status.StatusListener statusListener -> c
    25:29:void <init>() -> <init>
    32:55:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    61:73:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
    76:78:boolean isEffectivelyAdded() -> a
ch.qos.logback.core.joran.action.TimestampAction -> a.a.a.b.f.a.y:
    java.lang.String DATE_PATTERN_ATTRIBUTE -> a
    java.lang.String TIME_REFERENCE_ATTRIBUTE -> b
    java.lang.String CONTEXT_BIRTH -> c
    boolean inError -> d
    32:37:void <init>() -> <init>
    41:73:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    77:77:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
    33:35:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.conditional.Condition -> a.a.a.b.f.b.a:
    boolean evaluate() -> a
ch.qos.logback.core.joran.conditional.ElseAction -> a.a.a.b.f.b.b:
    20:20:void <init>() -> <init>
    24:26:void registerEventList(ch.qos.logback.core.joran.conditional.IfAction,java.util.List) -> a
ch.qos.logback.core.joran.conditional.IfAction -> a.a.a.b.f.b.c:
    java.util.Stack stack -> a
    30:36:void <init>() -> <init>
    41:75:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    80:115:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
    118:124:void setThenSaxEventList(java.util.List) -> a
    127:134:void setElseSaxEventList(java.util.List) -> b
    137:141:boolean isActive() -> a
ch.qos.logback.core.joran.conditional.IfState -> a.a.a.b.f.b.d:
    java.lang.Boolean boolResult -> a
    java.util.List thenSaxEventList -> b
    java.util.List elseSaxEventList -> c
    boolean active -> d
    145:145:void <init>() -> <init>
ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilder -> a.a.a.b.f.b.e:
    java.lang.String SCRIPT_PREFIX -> c
    java.lang.String SCRIPT_SUFFIX -> d
    ch.qos.logback.core.spi.PropertyContainer localPropContainer -> a
    java.util.Map map -> b
    34:38:void <init>(ch.qos.logback.core.spi.PropertyContainer) -> <init>
    43:54:ch.qos.logback.core.joran.conditional.Condition build(java.lang.String) -> a
    29:30:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.conditional.PropertyWrapperForScripts -> a.a.a.b.f.b.f:
    19:19:void <init>() -> <init>
ch.qos.logback.core.joran.conditional.ThenAction -> a.a.a.b.f.b.g:
    20:20:void <init>() -> <init>
    24:25:void registerEventList(ch.qos.logback.core.joran.conditional.IfAction,java.util.List) -> a
ch.qos.logback.core.joran.conditional.ThenActionState -> a.a.a.b.f.b.h:
    java.util.List eventList -> a
    boolean isRegistered -> b
    82:85:void <init>() -> <init>
    88:89:void inPlay(ch.qos.logback.core.joran.event.SaxEvent) -> a
ch.qos.logback.core.joran.conditional.ThenOrElseActionBase -> a.a.a.b.f.b.i:
    java.util.Stack stateStack -> a
    28:30:void <init>() -> <init>
    35:44:void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> a
    47:51:boolean weAreActive(ch.qos.logback.core.joran.spi.InterpretationContext) -> d
    56:71:void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> a
    void registerEventList(ch.qos.logback.core.joran.conditional.IfAction,java.util.List) -> a
    76:78:void removeFirstAndLastFromList(java.util.List) -> a
ch.qos.logback.core.joran.event.BodyEvent -> a.a.a.b.f.c.a:
    java.lang.String text -> e
    23:25:void <init>(java.lang.String,org.xml.sax.Locator) -> <init>
    33:36:java.lang.String getText() -> a
    41:41:java.lang.String toString() -> toString
    45:46:void append(java.lang.String) -> a
ch.qos.logback.core.joran.event.EndEvent -> a.a.a.b.f.c.b:
    21:22:void <init>(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Locator) -> <init>
    26:26:java.lang.String toString() -> toString
ch.qos.logback.core.joran.event.InPlayListener -> a.a.a.b.f.c.c:
    void inPlay(ch.qos.logback.core.joran.event.SaxEvent) -> a
ch.qos.logback.core.joran.event.SaxEvent -> a.a.a.b.f.c.d:
    java.lang.String namespaceURI -> a
    java.lang.String localName -> b
    java.lang.String qName -> c
    org.xml.sax.Locator locator -> d
    26:32:void <init>(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Locator) -> <init>
    35:35:java.lang.String getLocalName() -> b
    39:39:org.xml.sax.Locator getLocator() -> c
    47:47:java.lang.String getQName() -> d
ch.qos.logback.core.joran.event.SaxEventRecorder -> a.a.a.b.f.c.e:
    ch.qos.logback.core.spi.ContextAwareImpl cai -> a
    java.util.List saxEventList -> b
    org.xml.sax.Locator locator -> c
    ch.qos.logback.core.joran.spi.ElementPath globalElementPath -> d
    44:50:void <init>(ch.qos.logback.core.Context) -> <init>
    53:54:void recordEvents(java.io.InputStream) -> a
    57:69:java.util.List recordEvents(org.xml.sax.InputSource) -> a
    73:74:void handleError(java.lang.String,java.lang.Throwable) -> c
    79:86:javax.xml.parsers.SAXParser buildSaxParser() -> c
    91:91:void startDocument() -> startDocument
    94:94:org.xml.sax.Locator getLocator() -> a
    98:99:void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    103:107:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    110:121:void characters(char[],int,int) -> characters
    124:125:boolean isSpaceOnly(java.lang.String) -> a
    129:133:ch.qos.logback.core.joran.event.SaxEvent getLastEvent() -> b
    137:139:void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    142:146:java.lang.String getTagName(java.lang.String,java.lang.String) -> a
    150:153:void error(org.xml.sax.SAXParseException) -> error
    156:158:void fatalError(org.xml.sax.SAXParseException) -> fatalError
    161:162:void warning(org.xml.sax.SAXParseException) -> warning
    165:166:void addError(java.lang.String) -> b
    169:170:void addError(java.lang.String,java.lang.Throwable) -> a
    189:190:void addWarn(java.lang.String,java.lang.Throwable) -> b
    197:198:void setContext(ch.qos.logback.core.Context) -> a
ch.qos.logback.core.joran.event.StartEvent -> a.a.a.b.f.c.f:
    org.xml.sax.Attributes attributes -> e
    ch.qos.logback.core.joran.spi.ElementPath elementPath -> f
    27:31:void <init>(ch.qos.logback.core.joran.spi.ElementPath,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,org.xml.sax.Locator) -> <init>
    39:53:java.lang.String toString() -> toString
ch.qos.logback.core.joran.spi.ActionException -> a.a.a.b.f.d.a:
    27:28:void <init>() -> <init>
    31:32:void <init>(java.lang.Throwable) -> <init>
ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport -> a.a.a.b.f.d.b:
    336:337:void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter) -> <init>
    341:346:java.lang.Object getOrigin() -> a
ch.qos.logback.core.joran.spi.ConfigurationWatchList -> a.a.a.b.f.d.c:
    java.net.URL mainURL -> a
    java.util.List fileWatchList -> b
    java.util.List lastModifiedList -> c
    27:31:void <init>() -> <init>
    34:38:ch.qos.logback.core.joran.spi.ConfigurationWatchList buildClone() -> a
    42:45:void clear() -> b
    53:56:void setMainURL(java.net.URL) -> a
    59:64:void addAsFileToWatch(java.net.URL) -> d
    67:68:void addToWatchList(java.net.URL) -> b
    71:71:java.net.URL getMainURL() -> c
    75:75:java.util.List getCopyOfFileWatchList() -> d
    79:87:boolean changeDetected() -> e
    93:98:java.io.File convertToFile(java.net.URL) -> c
ch.qos.logback.core.joran.spi.ConsoleTarget -> a.a.a.b.f.d.d:
    ch.qos.logback.core.joran.spi.ConsoleTarget SystemOut -> a
    ch.qos.logback.core.joran.spi.ConsoleTarget SystemErr -> b
    java.lang.String name -> c
    java.io.OutputStream stream -> d
    ch.qos.logback.core.joran.spi.ConsoleTarget[] $VALUES -> e
    27:27:ch.qos.logback.core.joran.spi.ConsoleTarget[] values() -> values
    27:27:ch.qos.logback.core.joran.spi.ConsoleTarget valueOf(java.lang.String) -> valueOf
    85:88:void <init>(java.lang.String,int,java.lang.String,java.io.OutputStream) -> <init>
    95:95:java.io.OutputStream getStream() -> a
    100:100:java.lang.String toString() -> toString
    27:51:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.spi.ConsoleTarget$1 -> a.a.a.b.f.d.e:
    29:29:void <init>() -> <init>
    32:33:void write(int) -> write
    37:38:void write(byte[]) -> write
    42:43:void write(byte[],int,int) -> write
    47:48:void flush() -> flush
ch.qos.logback.core.joran.spi.ConsoleTarget$2 -> a.a.a.b.f.d.f:
    51:51:void <init>() -> <init>
    54:55:void write(int) -> write
    59:60:void write(byte[]) -> write
    64:65:void write(byte[],int,int) -> write
    69:70:void flush() -> flush
ch.qos.logback.core.joran.spi.DefaultClass -> a.a.a.b.f.d.g:
    java.lang.Class value() -> a
ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry -> a.a.a.b.f.d.h:
    java.util.Map defaultComponentMap -> a
    25:27:void <init>() -> <init>
    30:32:void add(java.lang.Class,java.lang.String,java.lang.Class) -> a
    35:43:java.lang.Class findDefaultComponentType(java.lang.Class,java.lang.String) -> a
    47:48:java.lang.Class oneShotFind(java.lang.Class,java.lang.String) -> b
ch.qos.logback.core.joran.spi.ElementPath -> a.a.a.b.f.d.i:
    java.util.ArrayList partList -> a
    27:30:void <init>() -> <init>
    27:34:void <init>(java.util.List) -> <init>
    27:55:void <init>(java.lang.String) -> <init>
    58:60:ch.qos.logback.core.joran.spi.ElementPath duplicate() -> a
    66:85:boolean equals(java.lang.Object) -> equals
    89:89:boolean equalityCheck(java.lang.String,java.lang.String) -> a
    93:93:java.util.List getCopyOfPartList() -> b
    97:98:void push(java.lang.String) -> a
    101:101:java.lang.String get(int) -> a
    105:108:void pop() -> c
    111:115:java.lang.String peekLast() -> d
    120:120:int size() -> e
    124:128:java.lang.String toStableString() -> f
    133:133:java.lang.String toString() -> toString
ch.qos.logback.core.joran.spi.ElementSelector -> a.a.a.b.f.d.j:
    31:32:void <init>() -> <init>
    35:36:void <init>(java.util.List) -> <init>
    45:46:void <init>(java.lang.String) -> <init>
    49:60:boolean fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath) -> a
    69:95:int getTailMatchLength(ch.qos.logback.core.joran.spi.ElementPath) -> b
    99:102:boolean isContainedIn(ch.qos.logback.core.joran.spi.ElementPath) -> c
    111:137:int getPrefixMatchLength(ch.qos.logback.core.joran.spi.ElementPath) -> d
    141:141:boolean equalityCheck(java.lang.String,java.lang.String) -> a
    146:165:boolean equals(java.lang.Object) -> equals
    170:178:int hashCode() -> hashCode
ch.qos.logback.core.joran.spi.EventPlayer -> a.a.a.b.f.d.k:
    ch.qos.logback.core.joran.spi.Interpreter interpreter -> a
    java.util.List eventList -> b
    int currentIndex -> c
    30:32:void <init>(ch.qos.logback.core.joran.spi.Interpreter) -> <init>
    44:66:void play(java.util.List) -> a
    69:70:void addEventsDynamically(java.util.List,int) -> a
ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble -> a.a.a.b.f.d.l:
    java.lang.Class hostClass -> a
    java.lang.String propertyName -> b
    31:34:void <init>(java.lang.Class,java.lang.String) -> <init>
    46:50:int hashCode() -> hashCode
    55:72:boolean equals(java.lang.Object) -> equals
ch.qos.logback.core.joran.spi.InterpretationContext -> a.a.a.b.f.d.m:
    java.util.Stack objectStack -> a
    java.util.Map objectMap -> b
    java.util.Map propertiesMap -> c
    ch.qos.logback.core.joran.spi.Interpreter joranInterpreter -> d
    java.util.List listenerList -> e
    ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry defaultNestedComponentRegistry -> f
    47:56:void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter) -> <init>
    59:59:ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry getDefaultNestedComponentRegistry() -> a
    63:63:java.util.Map getCopyOfPropertyMap() -> b
    67:68:void setPropertiesMap(java.util.Map) -> a
    85:85:ch.qos.logback.core.joran.spi.Interpreter getJoranInterpreter() -> c
    93:93:boolean isEmpty() -> d
    97:97:java.lang.Object peekObject() -> e
    101:102:void pushObject(java.lang.Object) -> a
    105:105:java.lang.Object popObject() -> f
    113:113:java.util.Map getObjectMap() -> g
    121:127:void addSubstitutionProperty(java.lang.String,java.lang.String) -> a
    130:138:void addSubstitutionProperties(java.util.Properties) -> a
    145:149:java.lang.String getProperty(java.lang.String) -> e
    154:157:java.lang.String subst(java.lang.String) -> a
    161:161:boolean isListenerListEmpty() -> h
    165:170:void addInPlayListener(ch.qos.logback.core.joran.event.InPlayListener) -> a
    173:173:boolean removeInPlayListener(ch.qos.logback.core.joran.event.InPlayListener) -> b
    177:180:void fireInPlay(ch.qos.logback.core.joran.event.SaxEvent) -> a
ch.qos.logback.core.joran.spi.Interpreter -> a.a.a.b.f.d.n:
    java.util.List EMPTY_LIST -> e
    ch.qos.logback.core.joran.spi.RuleStore ruleStore -> f
    ch.qos.logback.core.joran.spi.InterpretationContext interpretationContext -> g
    java.util.ArrayList implicitActions -> h
    ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport cai -> i
    ch.qos.logback.core.joran.spi.ElementPath elementPath -> j
    org.xml.sax.Locator locator -> a
    ch.qos.logback.core.joran.spi.EventPlayer eventPlayer -> b
    java.util.Stack actionListStack -> c
    ch.qos.logback.core.joran.spi.ElementPath skip -> d
    92:102:void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.RuleStore,ch.qos.logback.core.joran.spi.ElementPath) -> <init>
    105:105:ch.qos.logback.core.joran.spi.EventPlayer getEventPlayer() -> a
    109:110:void setInterpretationContextPropertiesMap(java.util.Map) -> a
    120:120:ch.qos.logback.core.joran.spi.InterpretationContext getInterpretationContext() -> b
    127:129:void startElement(ch.qos.logback.core.joran.event.StartEvent) -> a
    133:152:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> a
    158:159:void pushEmptyActionList() -> e
    163:175:void characters(ch.qos.logback.core.joran.event.BodyEvent) -> a
    178:180:void endElement(ch.qos.logback.core.joran.event.EndEvent) -> a
    186:198:void endElement(java.lang.String,java.lang.String,java.lang.String) -> a
    201:201:org.xml.sax.Locator getLocator() -> c
    205:206:void setDocumentLocator(org.xml.sax.Locator) -> a
    209:215:java.lang.String getTagName(java.lang.String,java.lang.String) -> a
    219:220:void addImplicitAction(ch.qos.logback.core.joran.action.ImplicitAction) -> a
    228:241:java.util.List lookupImplicitAction(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> a
    248:255:java.util.List getApplicableActionList(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes) -> a
    259:278:void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes) -> a
    281:294:void callBodyAction(java.util.List,java.lang.String) -> a
    297:319:void callEndAction(java.util.List,java.lang.String) -> b
    322:322:ch.qos.logback.core.joran.spi.RuleStore getRuleStore() -> d
    68:68:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.spi.JoranException -> a.a.a.b.f.d.o:
    25:26:void <init>(java.lang.String,java.lang.Throwable) -> <init>
ch.qos.logback.core.joran.spi.NoAutoStart -> a.a.a.b.f.d.p:
ch.qos.logback.core.joran.spi.NoAutoStartUtil -> a.a.a.b.f.d.q:
    26:31:boolean notMarkedWithNoAutoStart(java.lang.Object) -> a
ch.qos.logback.core.joran.spi.RuleStore -> a.a.a.b.f.d.r:
    void addRule(ch.qos.logback.core.joran.spi.ElementSelector,java.lang.String) -> a
    void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action) -> a
    java.util.List matchActions(ch.qos.logback.core.joran.spi.ElementPath) -> a
ch.qos.logback.core.joran.spi.SimpleRuleStore -> a.a.a.b.f.d.s:
    java.lang.String KLEENE_STAR -> a
    java.util.HashMap rules -> b
    37:44:void <init>(ch.qos.logback.core.Context) -> <init>
    51:61:void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action) -> a
    64:74:void addRule(ch.qos.logback.core.joran.spi.ElementSelector,java.lang.String) -> a
    86:95:java.util.List matchActions(ch.qos.logback.core.joran.spi.ElementPath) -> a
    100:104:java.util.List fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath) -> b
    109:125:java.util.List suffixMatch(ch.qos.logback.core.joran.spi.ElementPath) -> c
    130:130:boolean isSuffixPattern(ch.qos.logback.core.joran.spi.ElementSelector) -> a
    134:152:java.util.List prefixMatch(ch.qos.logback.core.joran.spi.ElementPath) -> d
    157:157:boolean isKleeneStar(java.lang.String) -> a
    162:193:java.util.List middleMatch(ch.qos.logback.core.joran.spi.ElementPath) -> e
    198:204:java.lang.String toString() -> toString
    34:34:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.util.ConfigurationWatchListUtil -> a.a.a.b.f.e.a:
    ch.qos.logback.core.joran.util.ConfigurationWatchListUtil origin -> a
    33:34:void <init>() -> <init>
    38:39:void registerConfigurationWatchList(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.ConfigurationWatchList) -> a
    41:51:void setMainWatchURL(ch.qos.logback.core.Context,java.net.URL) -> a
    54:58:java.net.URL getMainWatchURL(ch.qos.logback.core.Context) -> a
    63:70:void addToWatchList(ch.qos.logback.core.Context,java.net.URL) -> b
    86:86:ch.qos.logback.core.joran.spi.ConfigurationWatchList getConfigurationWatchList(ch.qos.logback.core.Context) -> b
    90:98:void addStatus(ch.qos.logback.core.Context,ch.qos.logback.core.status.Status) -> a
    101:102:void addInfo(ch.qos.logback.core.Context,java.lang.String) -> a
    105:106:void addWarn(ch.qos.logback.core.Context,java.lang.String) -> b
    31:31:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.util.PropertySetter -> a.a.a.b.f.e.b:
    java.lang.Object obj -> a
    java.lang.Class objClass -> b
    ch.qos.logback.core.joran.util.beans.BeanDescription beanDescription -> c
    65:69:void <init>(ch.qos.logback.core.joran.util.beans.BeanDescriptionCache,java.lang.Object) -> <init>
    90:103:void setProperty(java.lang.String,java.lang.String) -> a
    117:135:void setProperty(java.lang.reflect.Method,java.lang.String,java.lang.String) -> a
    138:163:ch.qos.logback.core.util.AggregationType computeAggregationType(java.lang.String) -> a
    168:169:java.lang.reflect.Method findAdderMethod(java.lang.String) -> c
    173:174:java.lang.reflect.Method findSetterMethod(java.lang.String) -> e
    178:185:java.lang.Class getParameterClassForMethod(java.lang.reflect.Method) -> a
    190:197:ch.qos.logback.core.util.AggregationType computeRawAggregationType(java.lang.reflect.Method) -> b
    209:226:boolean isUnequivocallyInstantiable(java.lang.Class) -> a
    235:246:void addComplexProperty(java.lang.String,java.lang.Object) -> a
    249:255:void invokeMethodWithSingleParameterOnThisObject(java.lang.reflect.Method,java.lang.Object) -> a
    259:284:void addBasicProperty(java.lang.String,java.lang.String) -> b
    287:306:void setComplexProperty(java.lang.String,java.lang.Object) -> b
    309:324:boolean isSanityCheckSuccessful(java.lang.String,java.lang.reflect.Method,java.lang.Class[],java.lang.Object) -> a
    328:328:java.lang.String capitalizeFirstLetter(java.lang.String) -> g
    332:332:java.lang.Object getObj() -> a
    337:344:java.lang.reflect.Method getRelevantMethod(java.lang.String,ch.qos.logback.core.util.AggregationType) -> a
    349:352:java.lang.annotation.Annotation getAnnotation(java.lang.String,java.lang.Class,java.lang.reflect.Method) -> a
    357:361:java.lang.Class getDefaultClassNameByAnnonation(java.lang.String,java.lang.reflect.Method) -> a
    366:375:java.lang.Class getByConcreteType(java.lang.String,java.lang.reflect.Method) -> b
    382:395:java.lang.Class getClassNameViaImplicitRules(java.lang.String,ch.qos.logback.core.util.AggregationType,ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> a
ch.qos.logback.core.joran.util.PropertySetter$1 -> a.a.a.b.f.e.c:
    int[] $SwitchMap$ch$qos$logback$core$util$AggregationType -> a
    144:144:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.util.StringToObjectConverter -> a.a.a.b.f.e.d:
    java.lang.Class[] STING_CLASS_PARAMETER -> a
    34:46:boolean canBeBuiltFromSimpleString(java.lang.Class) -> a
    54:82:java.lang.Object convertArg(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.Class) -> a
    86:86:boolean isOfTypeCharset(java.lang.Class) -> c
    91:94:java.nio.charset.Charset convertToCharset(ch.qos.logback.core.spi.ContextAware,java.lang.String) -> a
    101:105:java.lang.reflect.Method getValueOfMethod(java.lang.Class) -> b
    110:115:boolean followsTheValueOfConvention(java.lang.Class) -> d
    120:124:java.lang.Object convertByValueOfMethod(ch.qos.logback.core.spi.ContextAware,java.lang.Class,java.lang.String) -> a
    130:130:java.lang.Object convertToEnum(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.Class) -> b
    31:31:void <clinit>() -> <clinit>
ch.qos.logback.core.joran.util.beans.BeanDescription -> a.a.a.b.f.e.a.a:
    java.lang.Class clazz -> a
    java.util.Map propertyNameToGetter -> b
    java.util.Map propertyNameToSetter -> c
    java.util.Map propertyNameToAdder -> d
    36:41:void <init>(java.lang.Class,java.util.Map,java.util.Map,java.util.Map) -> <init>
    60:60:java.lang.reflect.Method getSetter(java.lang.String) -> a
    68:68:java.lang.reflect.Method getAdder(java.lang.String) -> b
ch.qos.logback.core.joran.util.beans.BeanDescriptionCache -> a.a.a.b.f.e.a.b:
    java.util.Map classToBeanDescription -> a
    ch.qos.logback.core.joran.util.beans.BeanDescriptionFactory beanDescriptionFactory -> b
    22:27:void <init>(ch.qos.logback.core.Context) -> <init>
    30:33:ch.qos.logback.core.joran.util.beans.BeanDescriptionFactory getBeanDescriptionFactory() -> a
    46:50:ch.qos.logback.core.joran.util.beans.BeanDescription getBeanDescription(java.lang.Class) -> a
ch.qos.logback.core.joran.util.beans.BeanDescriptionFactory -> a.a.a.b.f.e.a.c:
    22:24:void <init>(ch.qos.logback.core.Context) -> <init>
    32:67:ch.qos.logback.core.joran.util.beans.BeanDescription create(java.lang.Class) -> a
ch.qos.logback.core.joran.util.beans.BeanUtil -> a.a.a.b.f.e.a.d:
    24:33:boolean isAdder(java.lang.reflect.Method) -> a
    42:59:boolean isGetter(java.lang.reflect.Method) -> b
    63:63:int getParameterCount(java.lang.reflect.Method) -> e
    72:84:boolean isSetter(java.lang.reflect.Method) -> c
    92:103:java.lang.String getPropertyName(java.lang.reflect.Method) -> d
    115:126:java.lang.String toLowerCamelCase(java.lang.String) -> a
    130:133:java.lang.String getSubstringIfPrefixMatches(java.lang.String,java.lang.String) -> a
ch.qos.logback.core.net.AbstractSocketAppender -> a.a.a.b.g.a:
    ch.qos.logback.core.net.ObjectWriterFactory objectWriterFactory -> c
    ch.qos.logback.core.net.QueueFactory queueFactory -> d
    java.lang.String remoteHost -> e
    int port -> f
    java.net.InetAddress address -> g
    ch.qos.logback.core.util.Duration reconnectionDelay -> h
    int queueSize -> i
    int acceptConnectionTimeout -> j
    ch.qos.logback.core.util.Duration eventDelayLimit -> k
    java.util.concurrent.BlockingDeque deque -> n
    java.lang.String peerId -> o
    ch.qos.logback.core.net.SocketConnector connector -> p
    java.util.concurrent.Future task -> q
    java.net.Socket socket -> r
    96:97:void <init>() -> <init>
    78:105:void <init>(ch.qos.logback.core.net.QueueFactory,ch.qos.logback.core.net.ObjectWriterFactory) -> <init>
    111:155:void start() -> g
    162:167:void stop() -> h
    174:185:void append(java.lang.Object) -> d
    189:206:void connectSocketAndDispatchEvents() -> e
    209:209:boolean socketConnectionCouldBeEstablished() -> f
    213:216:ch.qos.logback.core.net.ObjectWriter createObjectWriterForSocket() -> j
    220:223:ch.qos.logback.core.net.SocketConnector createConnector(java.net.InetAddress,int,int,long) -> a
    228:237:void dispatchEvents(ch.qos.logback.core.net.ObjectWriter) -> a
    241:245:void tryReAddingEventToFrontOfQueue(java.lang.Object) -> b
    251:258:void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception) -> a
    274:274:ch.qos.logback.core.net.SocketConnector newConnector(java.net.InetAddress,int,long,long) -> a
    283:283:javax.net.SocketFactory getSocketFactory() -> d
    void postProcessEvent(java.lang.Object) -> a
    ch.qos.logback.core.spi.PreSerializationTransformer getPST() -> b
    305:306:void setRemoteHost(java.lang.String) -> c
    320:321:void setPort(int) -> a
    44:44:void access$000(ch.qos.logback.core.net.AbstractSocketAppender) -> a
ch.qos.logback.core.net.AbstractSocketAppender$1 -> a.a.a.b.g.b:
    ch.qos.logback.core.net.AbstractSocketAppender this$0 -> a
    147:147:void <init>(ch.qos.logback.core.net.AbstractSocketAppender) -> <init>
    150:151:void run() -> run
ch.qos.logback.core.net.AutoFlushingObjectWriter -> a.a.a.b.g.c:
    java.io.ObjectOutputStream objectOutputStream -> a
    int resetFrequency -> b
    int writeCounter -> c
    29:41:void <init>(java.io.ObjectOutputStream,int) -> <init>
    45:48:void write(java.lang.Object) -> a
    55:59:void preventMemoryLeak() -> a
ch.qos.logback.core.net.DefaultSocketConnector -> a.a.a.b.g.d:
    java.net.InetAddress address -> a
    int port -> b
    ch.qos.logback.core.util.DelayStrategy delayStrategy -> c
    ch.qos.logback.core.net.SocketConnector$ExceptionHandler exceptionHandler -> d
    javax.net.SocketFactory socketFactory -> e
    49:50:void <init>(java.net.InetAddress,int,long,long) -> <init>
    60:64:void <init>(java.net.InetAddress,int,ch.qos.logback.core.util.DelayStrategy) -> <init>
    70:76:java.net.Socket call() -> a
    80:86:java.net.Socket createSocket() -> b
    90:96:void useDefaultsForMissingFields() -> c
    102:103:void setExceptionHandler(ch.qos.logback.core.net.SocketConnector$ExceptionHandler) -> a
    109:110:void setSocketFactory(javax.net.SocketFactory) -> a
    31:31:java.lang.Object call() -> call
ch.qos.logback.core.net.DefaultSocketConnector$1 -> a.a.a.b.g.e:
ch.qos.logback.core.net.DefaultSocketConnector$ConsoleExceptionHandler -> a.a.a.b.g.f:
    115:115:void <init>() -> <init>
    118:119:void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception) -> a
    115:115:void <init>(ch.qos.logback.core.net.DefaultSocketConnector$1) -> <init>
ch.qos.logback.core.net.ObjectWriter -> a.a.a.b.g.g:
    void write(java.lang.Object) -> a
ch.qos.logback.core.net.ObjectWriterFactory -> a.a.a.b.g.h:
    27:27:void <init>() -> <init>
    37:37:ch.qos.logback.core.net.AutoFlushingObjectWriter newAutoFlushingObjectWriter(java.io.OutputStream) -> a
ch.qos.logback.core.net.QueueFactory -> a.a.a.b.g.i:
    24:24:void <init>() -> <init>
    36:37:java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque(int) -> a
ch.qos.logback.core.net.SocketConnector -> a.a.a.b.g.j:
    java.net.Socket call() -> a
    void setExceptionHandler(ch.qos.logback.core.net.SocketConnector$ExceptionHandler) -> a
    void setSocketFactory(javax.net.SocketFactory) -> a
ch.qos.logback.core.net.SocketConnector$ExceptionHandler -> a.a.a.b.g.k:
    void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception) -> a
ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean -> a.a.a.b.g.a.a:
    29:29:void <init>() -> <init>
ch.qos.logback.core.net.ssl.KeyStoreFactoryBean -> a.a.a.b.g.a.b:
    35:35:void <init>() -> <init>
ch.qos.logback.core.net.ssl.SSLComponent -> a.a.a.b.g.a.c:
ch.qos.logback.core.net.ssl.SSLConfiguration -> a.a.a.b.g.a.d:
    24:24:void <init>() -> <init>
ch.qos.logback.core.net.ssl.SSLContextFactoryBean -> a.a.a.b.g.a.e:
    41:41:void <init>() -> <init>
ch.qos.logback.core.net.ssl.SSLNestedComponentRegistryRules -> a.a.a.b.g.a.f:
    27:34:void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> a
ch.qos.logback.core.net.ssl.SSLParametersConfiguration -> a.a.a.b.g.a.g:
    33:33:void <init>() -> <init>
ch.qos.logback.core.net.ssl.SecureRandomFactoryBean -> a.a.a.b.g.a.h:
    28:28:void <init>() -> <init>
ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean -> a.a.a.b.g.a.i:
    29:29:void <init>() -> <init>
ch.qos.logback.core.pattern.CompositeConverter -> a.a.a.b.h.a:
    ch.qos.logback.core.pattern.Converter childConverter -> a
    16:16:void <init>() -> <init>
    21:27:java.lang.String convert(java.lang.Object) -> a
    java.lang.String transform(java.lang.Object,java.lang.String) -> a
    37:38:void setChildConverter(ch.qos.logback.core.pattern.Converter) -> a
    41:51:java.lang.String toString() -> toString
ch.qos.logback.core.pattern.Converter -> a.a.a.b.h.b:
    ch.qos.logback.core.pattern.Converter next -> e
    22:22:void <init>() -> <init>
    java.lang.String convert(java.lang.Object) -> a
    42:43:void write(java.lang.StringBuilder,java.lang.Object) -> a
    46:50:void setNext(ch.qos.logback.core.pattern.Converter) -> b
    53:53:ch.qos.logback.core.pattern.Converter getNext() -> d
ch.qos.logback.core.pattern.ConverterUtil -> a.a.a.b.h.c:
    27:41:void startConverters(ch.qos.logback.core.pattern.Converter) -> a
    44:53:ch.qos.logback.core.pattern.Converter findTail(ch.qos.logback.core.pattern.Converter) -> b
    57:64:void setContextForConverters(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter) -> a
ch.qos.logback.core.pattern.DynamicConverter -> a.a.a.b.h.d:
    ch.qos.logback.core.spi.ContextAwareBase cab -> f
    java.util.List optionList -> a
    boolean started -> g
    24:34:void <init>() -> <init>
    43:44:void start() -> g
    47:48:void stop() -> h
    51:51:boolean isStarted() -> a_
    55:56:void setOptionList(java.util.List) -> a
    65:68:java.lang.String getFirstOption() -> e
    73:73:java.util.List getOptionList() -> f
    77:78:void setContext(ch.qos.logback.core.Context) -> a
    81:81:ch.qos.logback.core.Context getContext() -> i
    85:86:void addStatus(ch.qos.logback.core.status.Status) -> a
    101:102:void addWarn(java.lang.String,java.lang.Throwable) -> b
    105:106:void addError(java.lang.String) -> b
    109:110:void addError(java.lang.String,java.lang.Throwable) -> a
ch.qos.logback.core.pattern.FormatInfo -> a.a.a.b.h.e:
    int min -> a
    int max -> b
    boolean leftPad -> c
    boolean leftTruncate -> d
    23:29:void <init>() -> <init>
    52:92:ch.qos.logback.core.pattern.FormatInfo valueOf(java.lang.String) -> a
    97:97:boolean isLeftPad() -> a
    105:105:int getMax() -> b
    113:113:int getMin() -> c
    121:121:boolean isLeftTruncate() -> d
    129:137:boolean equals(java.lang.Object) -> equals
    142:146:int hashCode() -> hashCode
    150:150:java.lang.String toString() -> toString
ch.qos.logback.core.pattern.FormattingConverter -> a.a.a.b.h.f:
    ch.qos.logback.core.pattern.FormatInfo formattingInfo -> h
    16:16:void <init>() -> <init>
    28:32:void setFormattingInfo(ch.qos.logback.core.pattern.FormatInfo) -> a
    36:69:void write(java.lang.StringBuilder,java.lang.Object) -> a
ch.qos.logback.core.pattern.IdentityCompositeConverter -> a.a.a.b.h.g:
    16:16:void <init>() -> <init>
    20:20:java.lang.String transform(java.lang.Object,java.lang.String) -> a
ch.qos.logback.core.pattern.LiteralConverter -> a.a.a.b.h.h:
    java.lang.String literal -> a
    20:22:void <init>(java.lang.String) -> <init>
    25:25:java.lang.String convert(java.lang.Object) -> a
ch.qos.logback.core.pattern.PatternLayoutBase -> a.a.a.b.h.i:
    ch.qos.logback.core.pattern.Converter head -> b
    java.lang.String pattern -> h
    ch.qos.logback.core.pattern.PostCompileProcessor postCompileProcessor -> i
    java.util.Map instanceConverterMap -> j
    boolean outputPatternAsHeader -> k
    28:36:void <init>() -> <init>
    java.util.Map getDefaultConverterMap() -> a
    51:70:java.util.Map getEffectiveConverterMap() -> j
    74:95:void start() -> g
    112:118:java.lang.String writeLoopOnConverters(java.lang.Object) -> b
    122:122:java.lang.String getPattern() -> k
    126:127:void setPattern(java.lang.String) -> a
    130:130:java.lang.String toString() -> toString
    138:138:java.lang.String getPresentationHeaderPrefix() -> b
    146:147:void setOutputPatternAsHeader(boolean) -> a
    151:154:java.lang.String getPresentationHeader() -> d
ch.qos.logback.core.pattern.PatternLayoutEncoderBase -> a.a.a.b.h.j:
    java.lang.String pattern -> e
    boolean outputPatternAsHeader -> f
    19:24:void <init>() -> <init>
    27:27:java.lang.String getPattern() -> d
    62:62:void setLayout(ch.qos.logback.core.Layout) -> a
ch.qos.logback.core.pattern.PostCompileProcessor -> a.a.a.b.h.k:
    void process(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter) -> a
ch.qos.logback.core.pattern.ReplacingCompositeConverter -> a.a.a.b.h.l:
    java.util.regex.Pattern pattern -> b
    java.lang.String regex -> c
    java.lang.String replacement -> d
    19:19:void <init>() -> <init>
    26:42:void start() -> g
    46:48:java.lang.String transform(java.lang.Object,java.lang.String) -> a
ch.qos.logback.core.pattern.SpacePadder -> a.a.a.b.h.m:
    java.lang.String[] SPACES -> a
    24:34:void leftPad(java.lang.StringBuilder,java.lang.String,int) -> a
    37:47:void rightPad(java.lang.StringBuilder,java.lang.String,int) -> b
    53:63:void spacePad(java.lang.StringBuilder,int) -> a
    18:18:void <clinit>() -> <clinit>
ch.qos.logback.core.pattern.color.BlackCompositeConverter -> a.a.a.b.h.a.a:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.BlueCompositeConverter -> a.a.a.b.h.a.b:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.BoldBlueCompositeConverter -> a.a.a.b.h.a.c:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.BoldCyanCompositeConverter -> a.a.a.b.h.a.d:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.BoldGreenCompositeConverter -> a.a.a.b.h.a.e:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.BoldMagentaCompositeConverter -> a.a.a.b.h.a.f:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.BoldRedCompositeConverter -> a.a.a.b.h.a.g:
    24:24:void <init>() -> <init>
    28:28:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.BoldWhiteCompositeConverter -> a.a.a.b.h.a.h:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.BoldYellowCompositeConverter -> a.a.a.b.h.a.i:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.CyanCompositeConverter -> a.a.a.b.h.a.j:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.ForegroundCompositeConverterBase -> a.a.a.b.h.a.k:
    25:25:void <init>() -> <init>
    31:37:java.lang.String transform(java.lang.Object,java.lang.String) -> a
    java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.GrayCompositeConverter -> a.a.a.b.h.a.l:
    26:26:void <init>() -> <init>
    30:30:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.GreenCompositeConverter -> a.a.a.b.h.a.m:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.MagentaCompositeConverter -> a.a.a.b.h.a.n:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.RedCompositeConverter -> a.a.a.b.h.a.o:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.WhiteCompositeConverter -> a.a.a.b.h.a.p:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.color.YellowCompositeConverter -> a.a.a.b.h.a.q:
    22:22:void <init>() -> <init>
    26:26:java.lang.String getForegroundColorCode(java.lang.Object) -> b
ch.qos.logback.core.pattern.parser.Compiler -> a.a.a.b.h.b.a:
    ch.qos.logback.core.pattern.Converter head -> a
    ch.qos.logback.core.pattern.Converter tail -> b
    ch.qos.logback.core.pattern.parser.Node top -> c
    java.util.Map converterMap -> d
    33:36:void <init>(ch.qos.logback.core.pattern.parser.Node,java.util.Map) -> <init>
    39:78:ch.qos.logback.core.pattern.Converter compile() -> a
    82:88:void addToList(ch.qos.logback.core.pattern.Converter) -> a
    99:111:ch.qos.logback.core.pattern.DynamicConverter createConverter(ch.qos.logback.core.pattern.parser.SimpleKeywordNode) -> a
    124:136:ch.qos.logback.core.pattern.CompositeConverter createCompositeConverter(ch.qos.logback.core.pattern.parser.CompositeNode) -> a
ch.qos.logback.core.pattern.parser.CompositeNode -> a.a.a.b.h.b.b:
    ch.qos.logback.core.pattern.parser.Node childNode -> a
    20:22:void <init>(java.lang.String) -> <init>
    25:25:ch.qos.logback.core.pattern.parser.Node getChildNode() -> a
    29:30:void setChildNode(ch.qos.logback.core.pattern.parser.Node) -> a
    33:41:boolean equals(java.lang.Object) -> equals
    46:46:int hashCode() -> hashCode
    50:57:java.lang.String toString() -> toString
ch.qos.logback.core.pattern.parser.FormattingNode -> a.a.a.b.h.b.c:
    ch.qos.logback.core.pattern.FormatInfo formatInfo -> b
    27:28:void <init>(int,java.lang.Object) -> <init>
    31:31:ch.qos.logback.core.pattern.FormatInfo getFormatInfo() -> b
    35:36:void setFormatInfo(ch.qos.logback.core.pattern.FormatInfo) -> a
    39:48:boolean equals(java.lang.Object) -> equals
    53:55:int hashCode() -> hashCode
ch.qos.logback.core.pattern.parser.Node -> a.a.a.b.h.b.d:
    int type -> c
    java.lang.Object value -> d
    ch.qos.logback.core.pattern.parser.Node next -> e
    29:32:void <init>(int,java.lang.Object) -> <init>
    45:45:java.lang.Object getValue() -> c
    53:54:void setNext(ch.qos.logback.core.pattern.parser.Node) -> b
    57:65:boolean equals(java.lang.Object) -> equals
    70:72:int hashCode() -> hashCode
    76:79:java.lang.String printNext() -> d
    84:95:java.lang.String toString() -> toString
ch.qos.logback.core.pattern.parser.OptionTokenizer -> a.a.a.b.h.b.e:
    ch.qos.logback.core.pattern.util.IEscapeUtil escapeUtil -> a
    ch.qos.logback.core.pattern.parser.TokenStream tokenStream -> b
    java.lang.String pattern -> c
    int patternLength -> d
    char quoteChar -> e
    int state -> f
    47:48:void <init>(ch.qos.logback.core.pattern.parser.TokenStream) -> <init>
    44:55:void <init>(ch.qos.logback.core.pattern.parser.TokenStream,ch.qos.logback.core.pattern.util.IEscapeUtil) -> <init>
    58:131:void tokenize(char,java.util.List) -> a
    134:136:void emitOptionToken(java.util.List,java.util.List) -> a
    139:143:void escape(java.lang.String,java.lang.StringBuffer) -> a
ch.qos.logback.core.pattern.parser.Parser -> a.a.a.b.h.b.f:
    java.util.Map DEFAULT_COMPOSITE_CONVERTER_MAP -> a
    java.util.List tokenList -> b
    int pointer -> c
    62:63:void <init>(java.lang.String) -> <init>
    55:72:void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil) -> <init>
    84:87:ch.qos.logback.core.pattern.Converter compile(ch.qos.logback.core.pattern.parser.Node,java.util.Map) -> a
    91:91:ch.qos.logback.core.pattern.parser.Node parse() -> a
    96:104:ch.qos.logback.core.pattern.parser.Node E() -> b
    110:115:ch.qos.logback.core.pattern.parser.Node Eopt() -> c
    121:146:ch.qos.logback.core.pattern.parser.Node T() -> d
    153:165:ch.qos.logback.core.pattern.parser.FormattingNode C() -> e
    171:181:ch.qos.logback.core.pattern.parser.FormattingNode SINGLE() -> f
    185:204:ch.qos.logback.core.pattern.parser.FormattingNode COMPOSITE(java.lang.String) -> a
    208:211:ch.qos.logback.core.pattern.parser.Token getNextToken() -> g
    215:218:ch.qos.logback.core.pattern.parser.Token getCurentToken() -> h
    222:223:void advanceTokenPointer() -> j
    226:229:void expectNotNull(ch.qos.logback.core.pattern.parser.Token,java.lang.String) -> a
    47:52:void <clinit>() -> <clinit>
ch.qos.logback.core.pattern.parser.SimpleKeywordNode -> a.a.a.b.h.b.g:
    java.util.List optionList -> f
    23:24:void <init>(java.lang.Object) -> <init>
    27:28:void <init>(int,java.lang.Object) -> <init>
    31:31:java.util.List getOptions() -> e
    35:36:void setOptions(java.util.List) -> a
    39:48:boolean equals(java.lang.Object) -> equals
    53:53:int hashCode() -> hashCode
    57:64:java.lang.String toString() -> toString
ch.qos.logback.core.pattern.parser.Token -> a.a.a.b.h.b.h:
    ch.qos.logback.core.pattern.parser.Token EOF_TOKEN -> a
    ch.qos.logback.core.pattern.parser.Token RIGHT_PARENTHESIS_TOKEN -> b
    ch.qos.logback.core.pattern.parser.Token BARE_COMPOSITE_KEYWORD_TOKEN -> c
    ch.qos.logback.core.pattern.parser.Token PERCENT_TOKEN -> d
    int type -> e
    java.lang.Object value -> f
    43:44:void <init>(int) -> <init>
    46:49:void <init>(int,java.lang.Object) -> <init>
    52:52:int getType() -> a
    56:56:java.lang.Object getValue() -> b
    60:91:java.lang.String toString() -> toString
    97:99:int hashCode() -> hashCode
    103:115:boolean equals(java.lang.Object) -> equals
    34:37:void <clinit>() -> <clinit>
ch.qos.logback.core.pattern.parser.TokenStream -> a.a.a.b.h.b.i:
    java.lang.String pattern -> a
    int patternLength -> b
    ch.qos.logback.core.pattern.util.IEscapeUtil escapeUtil -> c
    ch.qos.logback.core.pattern.util.IEscapeUtil optionEscapeUtil -> d
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState state -> e
    int pointer -> f
    57:74:void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil) -> <init>
    77:122:java.util.List tokenize() -> a
    126:141:void handleRightParenthesisState(char,java.util.List,java.lang.StringBuffer) -> a
    144:146:void processOption(char,java.util.List,java.lang.StringBuffer) -> b
    149:160:void handleFormatModifierState(char,java.util.List,java.lang.StringBuffer) -> c
    163:182:void handleLiteralState(char,java.util.List,java.lang.StringBuffer) -> d
    186:213:void handleKeywordState(char,java.util.List,java.lang.StringBuffer) -> e
    216:220:void escape(java.lang.String,java.lang.StringBuffer) -> a
    230:234:void addValuedToken(int,java.lang.StringBuffer,java.util.List) -> a
ch.qos.logback.core.pattern.parser.TokenStream$1 -> a.a.a.b.h.b.j:
    int[] $SwitchMap$ch$qos$logback$core$pattern$parser$TokenStream$TokenizerState -> a
    84:84:void <clinit>() -> <clinit>
ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState -> a.a.a.b.h.b.k:
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState LITERAL_STATE -> a
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState FORMAT_MODIFIER_STATE -> b
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState KEYWORD_STATE -> c
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState OPTION_STATE -> d
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState RIGHT_PARENTHESIS_STATE -> e
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState[] $VALUES -> f
    49:49:ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState[] values() -> values
    49:49:ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState valueOf(java.lang.String) -> valueOf
    49:49:void <init>(java.lang.String,int) -> <init>
    49:50:void <clinit>() -> <clinit>
ch.qos.logback.core.pattern.util.AsIsEscapeUtil -> a.a.a.b.h.c.a:
    19:19:void <init>() -> <init>
    30:33:void escape(java.lang.String,java.lang.StringBuffer,char,int) -> a
ch.qos.logback.core.pattern.util.IEscapeUtil -> a.a.a.b.h.c.b:
    void escape(java.lang.String,java.lang.StringBuffer,char,int) -> a
ch.qos.logback.core.pattern.util.RegularEscapeUtil -> a.a.a.b.h.c.c:
    21:21:void <init>() -> <init>
    24:48:void escape(java.lang.String,java.lang.StringBuffer,char,int) -> a
    51:55:java.lang.String formatEscapeCharsForListing(java.lang.String) -> a
    60:88:java.lang.String basicEscape(java.lang.String) -> b
ch.qos.logback.core.pattern.util.RestrictedEscapeUtil -> a.a.a.b.h.c.d:
    21:21:void <init>() -> <init>
    24:33:void escape(java.lang.String,java.lang.StringBuffer,char,int) -> a
ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran -> a.a.a.b.i.a:
    java.util.List eventList -> a
    java.lang.String key -> b
    java.util.Map parentPropertyMap -> c
    35:40:void <init>(java.util.List,java.lang.String,java.util.Map) -> <init>
    43:43:java.util.List removeSiftElement(java.util.List) -> a
    ch.qos.logback.core.sift.SiftingJoranConfiguratorBase getSiftingJoranConfigurator(java.lang.String) -> a
    49:52:ch.qos.logback.core.Appender buildAppender(ch.qos.logback.core.Context,java.lang.String) -> a
ch.qos.logback.core.sift.AbstractDiscriminator -> a.a.a.b.i.b:
    boolean started -> a
    29:30:void start() -> a
    33:34:void stop() -> c
    37:37:boolean isStarted() -> d
ch.qos.logback.core.sift.AppenderFactory -> a.a.a.b.i.c:
    ch.qos.logback.core.Appender buildAppender(ch.qos.logback.core.Context,java.lang.String) -> a
ch.qos.logback.core.sift.AppenderTracker -> a.a.a.b.i.d:
    int nopaWarningCount -> a
    ch.qos.logback.core.Context context -> b
    ch.qos.logback.core.sift.AppenderFactory appenderFactory -> c
    ch.qos.logback.core.spi.ContextAwareImpl contextAware -> d
    34:45:void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.sift.AppenderFactory) -> <init>
    49:50:void processPriorToRemoval(ch.qos.logback.core.Appender) -> a
    54:64:ch.qos.logback.core.Appender buildComponent(java.lang.String) -> a
    68:75:ch.qos.logback.core.helpers.NOPAppender buildNOPAppender(java.lang.String) -> d
    80:80:boolean isComponentStale(ch.qos.logback.core.Appender) -> b
    32:32:boolean isComponentStale(java.lang.Object) -> a
    32:32:java.lang.Object buildComponent(java.lang.String) -> b
    32:32:void processPriorToRemoval(java.lang.Object) -> b
ch.qos.logback.core.sift.Discriminator -> a.a.a.b.i.e:
    java.lang.String getDiscriminatingValue(java.lang.Object) -> b
    java.lang.String getKey() -> e
ch.qos.logback.core.sift.SiftingAppenderBase -> a.a.a.b.i.f:
    ch.qos.logback.core.sift.AppenderTracker appenderTracker -> c
    ch.qos.logback.core.sift.AppenderFactory appenderFactory -> d
    ch.qos.logback.core.util.Duration timeout -> e
    int maxAppenderCount -> f
    ch.qos.logback.core.sift.Discriminator discriminator -> g
    30:35:void <init>() -> <init>
    60:61:void setAppenderFactory(ch.qos.logback.core.sift.AppenderFactory) -> a
    65:85:void start() -> g
    89:92:void stop() -> h
    long getTimestamp(java.lang.Object) -> b
    98:111:void append(java.lang.Object) -> d
    boolean eventMarksEndOfLife(java.lang.Object) -> a
    137:140:java.lang.String getDiscriminatorKey() -> b
ch.qos.logback.core.sift.SiftingJoranConfiguratorBase -> a.a.a.b.i.g:
    java.lang.String key -> b
    java.lang.String value -> c
    java.util.Map parentPropertyMap -> d
    int errorEmmissionCount -> e
    36:64:void <init>(java.lang.String,java.lang.String,java.util.Map) -> <init>
    46:53:void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter) -> a
    57:60:void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> a
    ch.qos.logback.core.Appender getAppender() -> c
    67:79:void oneAndOnlyOneCheck(java.util.Map) -> a
    82:83:void doConfigure(java.util.List) -> a
    87:87:java.lang.String toString() -> toString
ch.qos.logback.core.spi.AbstractComponentTracker -> a.a.a.b.j.a:
    int maxComponents -> e
    long timeout -> f
    java.util.LinkedHashMap liveMap -> g
    java.util.LinkedHashMap lingerersMap -> h
    long lastCheck -> i
    ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator byExcedent -> a
    ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator byTimeout -> b
    ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator byLingering -> c
    31:264:void <init>() -> <init>
    void processPriorToRemoval(java.lang.Object) -> b
    java.lang.Object buildComponent(java.lang.String) -> b
    boolean isComponentStale(java.lang.Object) -> a
    87:91:ch.qos.logback.core.spi.AbstractComponentTracker$Entry getFromEitherMap(java.lang.String) -> a
    122:131:java.lang.Object getOrCreate(java.lang.String,long) -> a
    140:144:void endOfLife(java.lang.String) -> c
    153:158:void removeStaleComponents(long) -> a
    161:162:void removeExcedentComponents() -> b
    165:166:void removeStaleComponentsFromMainMap(long) -> c
    169:170:void removeStaleComponentsFromLingerersMap(long) -> d
    173:185:void genericStaleComponentRemover(java.util.LinkedHashMap,long,ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator) -> a
    205:209:boolean isTooSoonForRemovalIteration(long) -> e
    215:219:boolean isEntryStale(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> a
    223:223:boolean isEntryDoneLingering(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> b
    233:239:java.util.Collection allComponents() -> a
    247:248:void setTimeout(long) -> b
    255:256:void setMaxComponents(int) -> a
    31:31:boolean access$000(ch.qos.logback.core.spi.AbstractComponentTracker,ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> a
    31:31:boolean access$100(ch.qos.logback.core.spi.AbstractComponentTracker,ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> b
ch.qos.logback.core.spi.AbstractComponentTracker$1 -> a.a.a.b.j.b:
    ch.qos.logback.core.spi.AbstractComponentTracker this$0 -> a
    187:187:void <init>(ch.qos.logback.core.spi.AbstractComponentTracker) -> <init>
    189:189:boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> a
ch.qos.logback.core.spi.AbstractComponentTracker$2 -> a.a.a.b.j.c:
    ch.qos.logback.core.spi.AbstractComponentTracker this$0 -> a
    193:193:void <init>(ch.qos.logback.core.spi.AbstractComponentTracker) -> <init>
    195:195:boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> a
ch.qos.logback.core.spi.AbstractComponentTracker$3 -> a.a.a.b.j.d:
    ch.qos.logback.core.spi.AbstractComponentTracker this$0 -> a
    198:198:void <init>(ch.qos.logback.core.spi.AbstractComponentTracker) -> <init>
    200:200:boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> a
ch.qos.logback.core.spi.AbstractComponentTracker$Entry -> a.a.a.b.j.e:
    java.lang.String key -> a
    java.lang.Object component -> b
    long timestamp -> c
    269:273:void <init>(java.lang.String,java.lang.Object,long) -> <init>
    276:277:void setTimestamp(long) -> a
    281:281:int hashCode() -> hashCode
    286:304:boolean equals(java.lang.Object) -> equals
    309:309:java.lang.String toString() -> toString
ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator -> a.a.a.b.j.f:
    boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> a
ch.qos.logback.core.spi.AppenderAttachable -> a.a.a.b.j.g:
    void addAppender(ch.qos.logback.core.Appender) -> a
ch.qos.logback.core.spi.AppenderAttachableImpl -> a.a.a.b.j.h:
    ch.qos.logback.core.util.COWArrayList appenderList -> b
    long START -> a
    27:29:void <init>() -> <init>
    37:41:void addAppender(ch.qos.logback.core.Appender) -> a
    47:54:int appendLoopOnAppenders(java.lang.Object) -> a
    106:110:void detachAndStopAllAppenders() -> a
    112:112:void <clinit>() -> <clinit>
ch.qos.logback.core.spi.ContextAware -> a.a.a.b.j.i:
    void setContext(ch.qos.logback.core.Context) -> a
    void addError(java.lang.String) -> b
    void addError(java.lang.String,java.lang.Throwable) -> a
ch.qos.logback.core.spi.ContextAwareBase -> a.a.a.b.j.j:
    int noContextWarning -> a
    ch.qos.logback.core.Context context -> l
    java.lang.Object declaredOrigin -> m
    30:36:void <init>() -> <init>
    30:40:void <init>(ch.qos.logback.core.spi.ContextAware) -> <init>
    43:48:void setContext(ch.qos.logback.core.Context) -> a
    51:51:ch.qos.logback.core.Context getContext() -> i
    68:68:java.lang.Object getDeclaredOrigin() -> l
    72:82:void addStatus(ch.qos.logback.core.status.Status) -> a
    85:86:void addInfo(java.lang.String) -> d
    93:94:void addWarn(java.lang.String) -> f
    97:98:void addWarn(java.lang.String,java.lang.Throwable) -> b
    101:102:void addError(java.lang.String) -> b
    105:106:void addError(java.lang.String,java.lang.Throwable) -> a
ch.qos.logback.core.spi.ContextAwareImpl -> a.a.a.b.j.k:
    int noContextWarning -> c
    ch.qos.logback.core.Context context -> a
    java.lang.Object origin -> b
    31:39:void <init>(ch.qos.logback.core.Context,java.lang.Object) -> <init>
    42:42:java.lang.Object getOrigin() -> a
    46:51:void setContext(ch.qos.logback.core.Context) -> a
    65:75:void addStatus(ch.qos.logback.core.status.Status) -> a
    90:91:void addWarn(java.lang.String,java.lang.Throwable) -> b
    94:95:void addError(java.lang.String) -> b
    98:99:void addError(java.lang.String,java.lang.Throwable) -> a
ch.qos.logback.core.spi.DeferredProcessingAware -> a.a.a.b.j.l:
    void prepareForDeferredProcessing() -> n
ch.qos.logback.core.spi.FilterAttachableImpl -> a.a.a.b.j.m:
    ch.qos.logback.core.util.COWArrayList filterList -> a
    27:29:void <init>() -> <init>
    53:64:ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object) -> a
ch.qos.logback.core.spi.FilterReply -> a.a.a.b.j.n:
    ch.qos.logback.core.spi.FilterReply DENY -> a
    ch.qos.logback.core.spi.FilterReply NEUTRAL -> b
    ch.qos.logback.core.spi.FilterReply ACCEPT -> c
    ch.qos.logback.core.spi.FilterReply[] $VALUES -> d
    29:29:ch.qos.logback.core.spi.FilterReply[] values() -> values
    29:29:ch.qos.logback.core.spi.FilterReply valueOf(java.lang.String) -> valueOf
    29:29:void <init>(java.lang.String,int) -> <init>
    29:30:void <clinit>() -> <clinit>
ch.qos.logback.core.spi.LifeCycle -> a.a.a.b.j.o:
    void start() -> g
    void stop() -> h
    boolean isStarted() -> a_
ch.qos.logback.core.spi.LogbackLock -> a.a.a.b.j.p:
    22:22:void <init>() -> <init>
ch.qos.logback.core.spi.PreSerializationTransformer -> a.a.a.b.j.q:
    java.io.Serializable transform(java.lang.Object) -> a
ch.qos.logback.core.spi.PropertyContainer -> a.a.a.b.j.r:
    java.lang.String getProperty(java.lang.String) -> e
ch.qos.logback.core.spi.PropertyDefiner -> a.a.a.b.j.s:
    java.lang.String getPropertyValue() -> a
ch.qos.logback.core.spi.ScanException -> a.a.a.b.j.t:
    java.lang.Throwable cause -> a
    23:24:void <init>(java.lang.String) -> <init>
    27:29:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    32:32:java.lang.Throwable getCause() -> getCause
ch.qos.logback.core.status.ErrorStatus -> a.a.a.b.k.a:
    19:20:void <init>(java.lang.String,java.lang.Object) -> <init>
    23:24:void <init>(java.lang.String,java.lang.Object,java.lang.Throwable) -> <init>
ch.qos.logback.core.status.InfoStatus -> a.a.a.b.k.b:
    18:19:void <init>(java.lang.String,java.lang.Object) -> <init>
ch.qos.logback.core.status.OnConsoleStatusListener -> a.a.a.b.k.c:
    23:23:void <init>() -> <init>
    28:28:java.io.PrintStream getPrintStream() -> b
ch.qos.logback.core.status.OnPrintStreamStatusListenerBase -> a.a.a.b.k.d:
    boolean isStarted -> a
    long retrospectiveThresold -> b
    java.lang.String prefix -> c
    27:32:void <init>() -> <init>
    java.io.PrintStream getPrintStream() -> b
    47:53:void print(ch.qos.logback.core.status.Status) -> c
    56:59:void addStatusEvent(ch.qos.logback.core.status.Status) -> b
    65:76:void retrospectivePrint() -> c
    79:80:boolean isElapsedTimeLongerThanThreshold(long,long) -> a
    88:92:void start() -> g
    111:112:void stop() -> h
    115:115:boolean isStarted() -> a_
ch.qos.logback.core.status.Status -> a.a.a.b.k.e:
    int getLevel() -> a
    int getEffectiveLevel() -> b
    java.lang.String getMessage() -> c
    java.lang.Throwable getThrowable() -> d
    java.lang.Long getDate() -> e
    boolean hasChildren() -> f
    java.util.Iterator iterator() -> g
ch.qos.logback.core.status.StatusBase -> a.a.a.b.k.f:
    java.util.List EMPTY_LIST -> g
    int level -> a
    java.lang.String message -> b
    java.lang.Object origin -> c
    java.util.List childrenList -> d
    java.lang.Throwable throwable -> e
    long date -> f
    32:33:void <init>(int,java.lang.String,java.lang.Object) -> <init>
    35:41:void <init>(int,java.lang.String,java.lang.Object,java.lang.Throwable) -> <init>
    44:51:void add(ch.qos.logback.core.status.Status) -> a
    54:54:boolean hasChildren() -> f
    58:61:java.util.Iterator iterator() -> g
    74:74:int getLevel() -> a
    82:94:int getEffectiveLevel() -> b
    98:98:java.lang.String getMessage() -> c
    106:106:java.lang.Throwable getThrowable() -> d
    110:110:java.lang.Long getDate() -> e
    117:143:java.lang.String toString() -> toString
    148:152:int hashCode() -> hashCode
    157:171:boolean equals(java.lang.Object) -> equals
    22:22:void <clinit>() -> <clinit>
ch.qos.logback.core.status.StatusListener -> a.a.a.b.k.g:
    void addStatusEvent(ch.qos.logback.core.status.Status) -> b
ch.qos.logback.core.status.StatusManager -> a.a.a.b.k.h:
    void add(ch.qos.logback.core.status.Status) -> a
    java.util.List getCopyOfStatusList() -> a
    boolean add(ch.qos.logback.core.status.StatusListener) -> a
    void remove(ch.qos.logback.core.status.StatusListener) -> b
    java.util.List getCopyOfStatusListenerList() -> b
ch.qos.logback.core.status.StatusUtil -> a.a.a.b.k.i:
    ch.qos.logback.core.status.StatusManager sm -> a
    33:35:void <init>(ch.qos.logback.core.Context) -> <init>
    47:54:boolean contextHasStatusListener(ch.qos.logback.core.Context) -> a
    58:63:java.util.List filterStatusListByTimeThreshold(java.util.List,long) -> a
    67:70:void addStatus(ch.qos.logback.core.status.Status) -> a
    81:82:void addError(java.lang.Object,java.lang.String,java.lang.Throwable) -> a
    85:85:boolean hasXMLParsingErrors(long) -> a
    89:89:boolean noXMLParsingErrorsOccurred(long) -> b
    93:99:int getHighestLevel(long) -> c
    111:124:boolean containsMatch(long,int,java.lang.String) -> a
ch.qos.logback.core.status.WarnStatus -> a.a.a.b.k.j:
    19:20:void <init>(java.lang.String,java.lang.Object) -> <init>
    23:24:void <init>(java.lang.String,java.lang.Object,java.lang.Throwable) -> <init>
ch.qos.logback.core.subst.Node -> a.a.a.b.l.a:
    ch.qos.logback.core.subst.Node$Type type -> a
    java.lang.Object payload -> b
    java.lang.Object defaultPart -> c
    ch.qos.logback.core.subst.Node next -> d
    27:30:void <init>(ch.qos.logback.core.subst.Node$Type,java.lang.Object) -> <init>
    39:47:void append(ch.qos.logback.core.subst.Node) -> a
    53:69:java.lang.String toString() -> toString
    83:89:void recursive(ch.qos.logback.core.subst.Node,java.lang.StringBuilder) -> a
    97:113:boolean equals(java.lang.Object) -> equals
    118:122:int hashCode() -> hashCode
ch.qos.logback.core.subst.Node$1 -> a.a.a.b.l.b:
    int[] $SwitchMap$ch$qos$logback$core$subst$Node$Type -> a
    53:53:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Node$Type -> a.a.a.b.l.c:
    ch.qos.logback.core.subst.Node$Type LITERAL -> a
    ch.qos.logback.core.subst.Node$Type VARIABLE -> b
    ch.qos.logback.core.subst.Node$Type[] $VALUES -> c
    18:18:ch.qos.logback.core.subst.Node$Type[] values() -> values
    18:18:ch.qos.logback.core.subst.Node$Type valueOf(java.lang.String) -> valueOf
    18:18:void <init>(java.lang.String,int) -> <init>
    18:19:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.NodeToStringTransformer -> a.a.a.b.l.d:
    ch.qos.logback.core.subst.Node node -> a
    ch.qos.logback.core.spi.PropertyContainer propertyContainer0 -> b
    ch.qos.logback.core.spi.PropertyContainer propertyContainer1 -> c
    35:39:void <init>(ch.qos.logback.core.subst.Node,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer) -> <init>
    46:48:java.lang.String substituteVariable(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer) -> a
    52:55:ch.qos.logback.core.subst.Node tokenizeAndParseString(java.lang.String) -> a
    59:61:java.lang.String transform() -> a
    65:77:void compileNode(ch.qos.logback.core.subst.Node,java.lang.StringBuilder,java.util.Stack) -> a
    82:114:void handleVariable(ch.qos.logback.core.subst.Node,java.lang.StringBuilder,java.util.Stack) -> b
    117:136:java.lang.String lookupKey(java.lang.String) -> b
    140:141:void handleLiteral(ch.qos.logback.core.subst.Node,java.lang.StringBuilder) -> a
    144:145:java.lang.String variableNodeValue(ch.qos.logback.core.subst.Node) -> a
    149:158:java.lang.String constructRecursionErrorMessage(java.util.Stack) -> a
    167:172:boolean haveVisitedNodeAlready(ch.qos.logback.core.subst.Node,java.util.Stack) -> a
    176:183:boolean equalNodes(ch.qos.logback.core.subst.Node,ch.qos.logback.core.subst.Node) -> a
ch.qos.logback.core.subst.NodeToStringTransformer$1 -> a.a.a.b.l.e:
    int[] $SwitchMap$ch$qos$logback$core$subst$Node$Type -> a
    67:67:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Parser -> a.a.a.b.l.f:
    java.util.List tokenList -> a
    int pointer -> b
    38:42:void <init>(java.util.List) -> <init>
    45:47:ch.qos.logback.core.subst.Node parse() -> a
    51:59:ch.qos.logback.core.subst.Node E() -> d
    64:68:ch.qos.logback.core.subst.Node Eopt() -> e
    74:98:ch.qos.logback.core.subst.Node T() -> f
    103:103:ch.qos.logback.core.subst.Node makeNewLiteralNode(java.lang.String) -> a
    108:116:ch.qos.logback.core.subst.Node V() -> g
    121:130:ch.qos.logback.core.subst.Node C() -> h
    134:134:boolean isDefaultToken(ch.qos.logback.core.subst.Token) -> b
    138:139:void advanceTokenPointer() -> b
    142:145:void expectNotNull(ch.qos.logback.core.subst.Token,java.lang.String) -> a
    148:152:void expectCurlyRight(ch.qos.logback.core.subst.Token) -> a
    155:158:ch.qos.logback.core.subst.Token peekAtCurentToken() -> c
ch.qos.logback.core.subst.Parser$1 -> a.a.a.b.l.g:
    int[] $SwitchMap$ch$qos$logback$core$subst$Token$Type -> a
    76:76:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Token -> a.a.a.b.l.h:
    ch.qos.logback.core.subst.Token START_TOKEN -> a
    ch.qos.logback.core.subst.Token CURLY_LEFT_TOKEN -> b
    ch.qos.logback.core.subst.Token CURLY_RIGHT_TOKEN -> c
    ch.qos.logback.core.subst.Token DEFAULT_SEP_TOKEN -> d
    ch.qos.logback.core.subst.Token$Type type -> e
    java.lang.String payload -> f
    30:33:void <init>(ch.qos.logback.core.subst.Token$Type,java.lang.String) -> <init>
    37:49:boolean equals(java.lang.Object) -> equals
    54:56:int hashCode() -> hashCode
    61:66:java.lang.String toString() -> toString
    18:21:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Token$Type -> a.a.a.b.l.i:
    ch.qos.logback.core.subst.Token$Type LITERAL -> a
    ch.qos.logback.core.subst.Token$Type START -> b
    ch.qos.logback.core.subst.Token$Type CURLY_LEFT -> c
    ch.qos.logback.core.subst.Token$Type CURLY_RIGHT -> d
    ch.qos.logback.core.subst.Token$Type DEFAULT -> e
    ch.qos.logback.core.subst.Token$Type[] $VALUES -> f
    23:23:ch.qos.logback.core.subst.Token$Type[] values() -> values
    23:23:ch.qos.logback.core.subst.Token$Type valueOf(java.lang.String) -> valueOf
    23:23:void <init>(java.lang.String,int) -> <init>
    23:24:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Tokenizer -> a.a.a.b.l.j:
    java.lang.String pattern -> a
    int patternLength -> b
    ch.qos.logback.core.subst.Tokenizer$TokenizerState state -> c
    int pointer -> d
    31:37:void <init>(java.lang.String) -> <init>
    40:75:java.util.List tokenize() -> a
    79:95:void handleDefaultValueState(char,java.util.List,java.lang.StringBuilder) -> a
    98:104:void handleStartState(char,java.util.List,java.lang.StringBuilder) -> b
    107:127:void handleLiteralState(char,java.util.List,java.lang.StringBuilder) -> c
    130:133:void addLiteralToken(java.util.List,java.lang.StringBuilder) -> a
ch.qos.logback.core.subst.Tokenizer$1 -> a.a.a.b.l.k:
    int[] $SwitchMap$ch$qos$logback$core$subst$Tokenizer$TokenizerState -> a
    47:47:void <clinit>() -> <clinit>
ch.qos.logback.core.subst.Tokenizer$TokenizerState -> a.a.a.b.l.l:
    ch.qos.logback.core.subst.Tokenizer$TokenizerState LITERAL_STATE -> a
    ch.qos.logback.core.subst.Tokenizer$TokenizerState START_STATE -> b
    ch.qos.logback.core.subst.Tokenizer$TokenizerState DEFAULT_VAL_STATE -> c
    ch.qos.logback.core.subst.Tokenizer$TokenizerState[] $VALUES -> d
    24:24:ch.qos.logback.core.subst.Tokenizer$TokenizerState[] values() -> values
    24:24:ch.qos.logback.core.subst.Tokenizer$TokenizerState valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:25:void <clinit>() -> <clinit>
ch.qos.logback.core.util.AggregationType -> a.a.a.b.m.a:
    ch.qos.logback.core.util.AggregationType NOT_FOUND -> a
    ch.qos.logback.core.util.AggregationType AS_BASIC_PROPERTY -> b
    ch.qos.logback.core.util.AggregationType AS_COMPLEX_PROPERTY -> c
    ch.qos.logback.core.util.AggregationType AS_BASIC_PROPERTY_COLLECTION -> d
    ch.qos.logback.core.util.AggregationType AS_COMPLEX_PROPERTY_COLLECTION -> e
    ch.qos.logback.core.util.AggregationType[] $VALUES -> f
    27:27:ch.qos.logback.core.util.AggregationType[] values() -> values
    27:27:ch.qos.logback.core.util.AggregationType valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    27:34:void <clinit>() -> <clinit>
ch.qos.logback.core.util.COWArrayList -> a.a.a.b.m.b:
    java.util.concurrent.atomic.AtomicBoolean fresh -> a
    java.util.concurrent.CopyOnWriteArrayList underlyingList -> b
    java.lang.Object[] ourCopy -> c
    java.lang.Object[] modelArray -> d
    45:52:void <init>(java.lang.Object[]) -> <init>
    56:56:int size() -> size
    61:61:boolean isEmpty() -> isEmpty
    66:66:boolean contains(java.lang.Object) -> contains
    71:71:java.util.Iterator iterator() -> iterator
    75:78:void refreshCopyIfNecessary() -> b
    81:81:boolean isFresh() -> c
    85:87:void refreshCopy() -> d
    91:92:java.lang.Object[] toArray() -> toArray
    98:99:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    110:111:java.lang.Object[] asTypedArray() -> a
    115:116:void markAsStale() -> e
    119:121:void addIfAbsent(java.lang.Object) -> a
    125:127:boolean add(java.lang.Object) -> add
    132:134:boolean remove(java.lang.Object) -> remove
    139:139:boolean containsAll(java.util.Collection) -> containsAll
    144:146:boolean addAll(java.util.Collection) -> addAll
    151:153:boolean addAll(int,java.util.Collection) -> addAll
    158:160:boolean removeAll(java.util.Collection) -> removeAll
    165:167:boolean retainAll(java.util.Collection) -> retainAll
    172:174:void clear() -> clear
    178:179:java.lang.Object get(int) -> get
    184:186:java.lang.Object set(int,java.lang.Object) -> set
    191:193:void add(int,java.lang.Object) -> add
    197:199:java.lang.Object remove(int) -> remove
    204:204:int indexOf(java.lang.Object) -> indexOf
    209:209:int lastIndexOf(java.lang.Object) -> lastIndexOf
    214:214:java.util.ListIterator listIterator() -> listIterator
    219:219:java.util.ListIterator listIterator(int) -> listIterator
    224:224:java.util.List subList(int,int) -> subList
ch.qos.logback.core.util.CachingDateFormatter -> a.a.a.b.m.c:
    long lastTimestamp -> a
    java.lang.String cachedStr -> b
    java.text.SimpleDateFormat sdf -> c
    28:34:void <init>(java.lang.String) -> <init>
    45:51:java.lang.String format(long) -> a
    55:56:void setTimeZone(java.util.TimeZone) -> a
ch.qos.logback.core.util.CloseUtil -> a.a.a.b.m.d:
    47:54:void closeQuietly(java.net.Socket) -> a
ch.qos.logback.core.util.ContextUtil -> a.a.a.b.m.e:
    36:38:void <init>(ch.qos.logback.core.Context) -> <init>
    42:45:java.lang.String getLocalHostName() -> a
    50:60:java.lang.String getLocalAddressAsString() -> c
    64:64:boolean acceptableAddress(java.net.InetAddress) -> a
    72:81:java.lang.String safelyGetLocalHostName() -> b
    85:94:void addProperties(java.util.Properties) -> a
    114:115:void addGroovyPackages(java.util.List) -> a
    118:121:void addFrameworkPackage(java.util.List,java.lang.String) -> a
ch.qos.logback.core.util.DelayStrategy -> a.a.a.b.m.f:
    long nextDelay() -> a
ch.qos.logback.core.util.Duration -> a.a.a.b.m.g:
    java.util.regex.Pattern DURATION_PATTERN -> b
    long millis -> a
    51:53:void <init>(long) -> <init>
    56:56:ch.qos.logback.core.util.Duration buildByMilliseconds(double) -> a
    60:60:ch.qos.logback.core.util.Duration buildBySeconds(double) -> b
    64:64:ch.qos.logback.core.util.Duration buildByMinutes(double) -> c
    68:68:ch.qos.logback.core.util.Duration buildByHours(double) -> d
    72:72:ch.qos.logback.core.util.Duration buildByDays(double) -> e
    80:80:long getMilliseconds() -> a
    84:105:ch.qos.logback.core.util.Duration valueOf(java.lang.String) -> a
    111:118:java.lang.String toString() -> toString
    42:42:void <clinit>() -> <clinit>
ch.qos.logback.core.util.DynamicClassLoadingException -> a.a.a.b.m.h:
    21:22:void <init>(java.lang.String,java.lang.Throwable) -> <init>
ch.qos.logback.core.util.EnvUtil -> a.a.a.b.m.i:
    22:22:void <init>() -> <init>
    56:61:boolean isJaninoAvailable() -> a
    66:67:boolean isWindows() -> b
ch.qos.logback.core.util.ExecutorServiceUtil -> a.a.a.b.m.j:
    java.util.concurrent.ThreadFactory THREAD_FACTORY -> a
    52:52:java.util.concurrent.ScheduledExecutorService newScheduledExecutorService() -> a
    71:72:void shutdown(java.util.concurrent.ExecutorService) -> a
    36:36:void <clinit>() -> <clinit>
ch.qos.logback.core.util.ExecutorServiceUtil$1 -> a.a.a.b.m.k:
    java.util.concurrent.ThreadFactory defaultFactory -> a
    java.util.concurrent.atomic.AtomicInteger threadNumber -> b
    36:39:void <init>() -> <init>
    42:47:java.lang.Thread newThread(java.lang.Runnable) -> newThread
ch.qos.logback.core.util.FixedDelay -> a.a.a.b.m.l:
    long subsequentDelay -> a
    long nextDelay -> b
    34:37:void <init>(long,long) -> <init>
    53:55:long nextDelay() -> a
ch.qos.logback.core.util.IncompatibleClassException -> a.a.a.b.m.m:
    java.lang.Class requestedClass -> a
    java.lang.Class obtainedClass -> b
    24:27:void <init>(java.lang.Class,java.lang.Class) -> <init>
ch.qos.logback.core.util.Loader -> a.a.a.b.m.n:
    boolean ignoreTCL -> a
    boolean HAS_GET_CLASS_LOADER_PERMISSION -> b
    31:31:void <init>() -> <init>
    71:77:java.util.Set getResources(java.lang.String,java.lang.ClassLoader) -> a
    88:90:java.net.URL getResource(java.lang.String,java.lang.ClassLoader) -> b
    102:102:java.net.URL getResourceBySelfClassLoader(java.lang.String) -> a
    115:115:java.lang.ClassLoader getTCL() -> a
    119:120:java.lang.Class loadClass(java.lang.String,ch.qos.logback.core.Context) -> a
    131:134:java.lang.ClassLoader getClassLoaderOfObject(java.lang.Object) -> a
    162:166:java.lang.ClassLoader getClassLoaderOfClass(java.lang.Class) -> a
    178:187:java.lang.Class loadClass(java.lang.String) -> b
    34:57:void <clinit>() -> <clinit>
ch.qos.logback.core.util.Loader$1 -> a.a.a.b.m.o:
    45:45:void <init>() -> <init>
    48:53:java.lang.Boolean run() -> a
    45:45:java.lang.Object run() -> run
ch.qos.logback.core.util.OptionHelper -> a.a.a.b.m.p:
    33:34:java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,ch.qos.logback.core.Context) -> a
    39:40:java.lang.Object instantiateByClassNameAndParameter(java.lang.String,java.lang.Class,ch.qos.logback.core.Context,java.lang.Class,java.lang.Object) -> a
    45:45:java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.ClassLoader) -> a
    51:69:java.lang.Object instantiateByClassNameAndParameter(java.lang.String,java.lang.Class,java.lang.ClassLoader,java.lang.Class,java.lang.Object) -> a
    112:114:java.lang.String substVars(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer) -> a
    148:150:java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> a
    162:164:java.lang.String getEnv(java.lang.String) -> a
    177:179:java.lang.String getSystemProperty(java.lang.String) -> b
    184:189:void setSystemProperties(ch.qos.logback.core.spi.ContextAware,java.util.Properties) -> a
    193:197:void setSystemProperty(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.String) -> a
    222:232:java.lang.String[] extractDefaultReplacement(java.lang.String) -> c
    243:257:boolean toBoolean(java.lang.String,boolean) -> a
    261:261:boolean isEmpty(java.lang.String) -> d
ch.qos.logback.core.util.PropertySetterException -> a.a.a.b.m.q:
    27:28:void <init>(java.lang.String) -> <init>
    31:32:void <init>(java.lang.Throwable) -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
ch.qos.logback.core.util.StatusListenerConfigHelper -> a.a.a.b.m.r:
    26:30:void installIfAsked(ch.qos.logback.core.Context) -> a
    33:40:void addStatusListener(ch.qos.logback.core.Context,java.lang.String) -> a
    43:52:void initAndAddListener(ch.qos.logback.core.Context,ch.qos.logback.core.status.StatusListener) -> a
    56:60:ch.qos.logback.core.status.StatusListener createListenerPerClassName(ch.qos.logback.core.Context,java.lang.String) -> b
    72:77:void addOnConsoleListenerInstance(ch.qos.logback.core.Context,ch.qos.logback.core.status.OnConsoleStatusListener) -> a
ch.qos.logback.core.util.StatusPrinter -> a.a.a.b.m.s:
    java.io.PrintStream ps -> b
    ch.qos.logback.core.util.CachingDateFormatter cachingDateFormat -> a
    44:45:void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context) -> a
    54:67:void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context,long) -> a
    122:126:void print(ch.qos.logback.core.status.StatusManager,long) -> a
    135:140:void buildStrFromStatusList(java.lang.StringBuilder,java.util.List) -> a
    146:160:void appendThrowable(java.lang.StringBuilder,java.lang.Throwable) -> a
    164:186:void buildStr(java.lang.StringBuilder,java.lang.String,ch.qos.logback.core.status.Status) -> a
    29:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JacksonAnnotationsInside -> b.a.a.a.a:
com.fasterxml.jackson.annotation.JacksonInject -> b.a.a.a.b:
    java.lang.String value() -> a
    com.fasterxml.jackson.annotation.OptBoolean useInput() -> b
com.fasterxml.jackson.annotation.JacksonInject$Value -> b.a.a.a.c:
    com.fasterxml.jackson.annotation.JacksonInject$Value EMPTY -> a
    java.lang.Object _id -> b
    java.lang.Boolean _useInput -> c
    72:75:void <init>(java.lang.Object,java.lang.Boolean) -> <init>
    93:99:com.fasterxml.jackson.annotation.JacksonInject$Value construct(java.lang.Object,java.lang.Boolean) -> a
    103:106:com.fasterxml.jackson.annotation.JacksonInject$Value from(com.fasterxml.jackson.annotation.JacksonInject) -> a
    110:110:com.fasterxml.jackson.annotation.JacksonInject$Value forId(java.lang.Object) -> a
    120:127:com.fasterxml.jackson.annotation.JacksonInject$Value withId(java.lang.Object) -> b
    147:147:java.lang.Object getId() -> a
    151:151:boolean hasId() -> b
    166:166:java.lang.String toString() -> toString
    172:179:int hashCode() -> hashCode
    184:195:boolean equals(java.lang.Object) -> equals
    205:205:boolean _empty(java.lang.Object,java.lang.Boolean) -> b
    62:62:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAlias -> b.a.a.a.d:
    java.lang.String[] value() -> a
com.fasterxml.jackson.annotation.JsonAnyGetter -> b.a.a.a.e:
    boolean enabled() -> a
com.fasterxml.jackson.annotation.JsonAnySetter -> b.a.a.a.f:
    boolean enabled() -> a
com.fasterxml.jackson.annotation.JsonAutoDetect -> b.a.a.a.g:
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getterVisibility() -> a
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility isGetterVisibility() -> b
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility setterVisibility() -> c
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility creatorVisibility() -> d
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility fieldVisibility() -> e
com.fasterxml.jackson.annotation.JsonAutoDetect$1 -> b.a.a.a.h:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonAutoDetect$Visibility -> a
    int[] $SwitchMap$com$fasterxml$jackson$annotation$PropertyAccessor -> b
    75:206:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAutoDetect$Value -> b.a.a.a.i:
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT_FIELD_VISIBILITY -> h
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value DEFAULT -> a
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value NO_OVERRIDES -> b
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _fieldVisibility -> c
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _getterVisibility -> d
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _isGetterVisibility -> e
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _setterVisibility -> f
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _creatorVisibility -> g
    172:178:void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> <init>
    308:308:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getFieldVisibility() -> a
    309:309:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getGetterVisibility() -> b
    310:310:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getIsGetterVisibility() -> c
    311:311:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getSetterVisibility() -> d
    312:312:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getCreatorVisibility() -> e
    323:323:java.lang.String toString() -> toString
    331:331:int hashCode() -> hashCode
    341:343:boolean equals(java.lang.Object) -> equals
    370:370:boolean _equals(com.fasterxml.jackson.annotation.JsonAutoDetect$Value,com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> a
    141:160:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility -> b.a.a.a.j:
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility ANY -> a
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NON_PRIVATE -> b
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC -> c
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PUBLIC_ONLY -> d
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NONE -> e
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT -> f
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] $VALUES -> g
    38:38:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] values() -> values
    38:38:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility valueOf(java.lang.String) -> valueOf
    38:38:void <init>(java.lang.String,int) -> <init>
    75:90:boolean isVisible(java.lang.reflect.Member) -> a
    38:72:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonBackReference -> b.a.a.a.k:
    java.lang.String value() -> a
com.fasterxml.jackson.annotation.JsonCreator -> b.a.a.a.l:
    com.fasterxml.jackson.annotation.JsonCreator$Mode mode() -> a
com.fasterxml.jackson.annotation.JsonCreator$Mode -> b.a.a.a.m:
    com.fasterxml.jackson.annotation.JsonCreator$Mode DEFAULT -> a
    com.fasterxml.jackson.annotation.JsonCreator$Mode DELEGATING -> b
    com.fasterxml.jackson.annotation.JsonCreator$Mode PROPERTIES -> c
    com.fasterxml.jackson.annotation.JsonCreator$Mode DISABLED -> d
    com.fasterxml.jackson.annotation.JsonCreator$Mode[] $VALUES -> e
    67:67:com.fasterxml.jackson.annotation.JsonCreator$Mode[] values() -> values
    67:67:com.fasterxml.jackson.annotation.JsonCreator$Mode valueOf(java.lang.String) -> valueOf
    67:67:void <init>(java.lang.String,int) -> <init>
    67:97:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonEnumDefaultValue -> b.a.a.a.n:
com.fasterxml.jackson.annotation.JsonFilter -> b.a.a.a.o:
    java.lang.String value() -> a
com.fasterxml.jackson.annotation.JsonFormat -> b.a.a.a.p:
    java.lang.String pattern() -> a
    com.fasterxml.jackson.annotation.JsonFormat$Shape shape() -> b
    java.lang.String locale() -> c
    java.lang.String timezone() -> d
    com.fasterxml.jackson.annotation.OptBoolean lenient() -> e
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] with() -> f
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] without() -> g
com.fasterxml.jackson.annotation.JsonFormat$Feature -> b.a.a.a.q:
    com.fasterxml.jackson.annotation.JsonFormat$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY -> a
    com.fasterxml.jackson.annotation.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_PROPERTIES -> b
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS -> c
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_DATES_WITH_ZONE_ID -> d
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED -> e
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_SORTED_MAP_ENTRIES -> f
    com.fasterxml.jackson.annotation.JsonFormat$Feature ADJUST_DATES_TO_CONTEXT_TIME_ZONE -> g
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] $VALUES -> h
    237:237:com.fasterxml.jackson.annotation.JsonFormat$Feature[] values() -> values
    237:237:com.fasterxml.jackson.annotation.JsonFormat$Feature valueOf(java.lang.String) -> valueOf
    237:237:void <init>(java.lang.String,int) -> <init>
    237:295:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Features -> b.a.a.a.r:
    int _enabled -> a
    int _disabled -> b
    com.fasterxml.jackson.annotation.JsonFormat$Features EMPTY -> c
    310:313:void <init>(int,int) -> <init>
    316:316:com.fasterxml.jackson.annotation.JsonFormat$Features empty() -> a
    320:320:com.fasterxml.jackson.annotation.JsonFormat$Features construct(com.fasterxml.jackson.annotation.JsonFormat) -> a
    325:333:com.fasterxml.jackson.annotation.JsonFormat$Features construct(com.fasterxml.jackson.annotation.JsonFormat$Feature[],com.fasterxml.jackson.annotation.JsonFormat$Feature[]) -> a
    338:358:com.fasterxml.jackson.annotation.JsonFormat$Features withOverrides(com.fasterxml.jackson.annotation.JsonFormat$Features) -> a
    378:385:java.lang.Boolean get(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> a
    390:393:java.lang.String toString() -> toString
    398:398:int hashCode() -> hashCode
    403:407:boolean equals(java.lang.Object) -> equals
    308:308:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Shape -> b.a.a.a.s:
    com.fasterxml.jackson.annotation.JsonFormat$Shape ANY -> a
    com.fasterxml.jackson.annotation.JsonFormat$Shape NATURAL -> b
    com.fasterxml.jackson.annotation.JsonFormat$Shape SCALAR -> c
    com.fasterxml.jackson.annotation.JsonFormat$Shape ARRAY -> d
    com.fasterxml.jackson.annotation.JsonFormat$Shape OBJECT -> e
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER -> f
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER_FLOAT -> g
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER_INT -> h
    com.fasterxml.jackson.annotation.JsonFormat$Shape STRING -> i
    com.fasterxml.jackson.annotation.JsonFormat$Shape BOOLEAN -> j
    com.fasterxml.jackson.annotation.JsonFormat$Shape[] $VALUES -> k
    148:148:com.fasterxml.jackson.annotation.JsonFormat$Shape[] values() -> values
    148:148:com.fasterxml.jackson.annotation.JsonFormat$Shape valueOf(java.lang.String) -> valueOf
    148:148:void <init>(java.lang.String,int) -> <init>
    216:216:boolean isNumeric() -> a
    148:212:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Value -> b.a.a.a.t:
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY -> a
    java.lang.String _pattern -> b
    com.fasterxml.jackson.annotation.JsonFormat$Shape _shape -> c
    java.util.Locale _locale -> d
    java.lang.String _timezoneStr -> e
    java.lang.Boolean _lenient -> f
    com.fasterxml.jackson.annotation.JsonFormat$Features _features -> g
    java.util.TimeZone _timezone -> h
    443:444:void <init>() -> <init>
    447:449:void <init>(com.fasterxml.jackson.annotation.JsonFormat) -> <init>
    457:463:void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Features,java.lang.Boolean) -> <init>
    485:493:void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat$Features,java.lang.Boolean) -> <init>
    513:513:com.fasterxml.jackson.annotation.JsonFormat$Value empty() -> a
    529:529:com.fasterxml.jackson.annotation.JsonFormat$Value merge(com.fasterxml.jackson.annotation.JsonFormat$Value,com.fasterxml.jackson.annotation.JsonFormat$Value) -> a
    558:597:com.fasterxml.jackson.annotation.JsonFormat$Value withOverrides(com.fasterxml.jackson.annotation.JsonFormat$Value) -> a
    693:693:java.lang.String getPattern() -> b
    694:694:com.fasterxml.jackson.annotation.JsonFormat$Shape getShape() -> c
    695:695:java.util.Locale getLocale() -> d
    701:701:java.lang.Boolean getLenient() -> e
    725:733:java.util.TimeZone getTimeZone() -> f
    739:739:boolean hasShape() -> g
    745:745:boolean hasPattern() -> h
    751:751:boolean hasLocale() -> i
    757:757:boolean hasTimeZone() -> j
    781:781:java.lang.Boolean getFeature(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> a
    795:795:java.lang.String toString() -> toString
    801:813:int hashCode() -> hashCode
    818:827:boolean equals(java.lang.Object) -> equals
    836:842:boolean _equal(java.lang.Object,java.lang.Object) -> a
    421:421:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonGetter -> b.a.a.a.u:
    java.lang.String value() -> a
com.fasterxml.jackson.annotation.JsonIdentityInfo -> b.a.a.a.v:
    java.lang.String property() -> a
    java.lang.Class generator() -> b
    java.lang.Class resolver() -> c
    java.lang.Class scope() -> d
com.fasterxml.jackson.annotation.JsonIdentityReference -> b.a.a.a.w:
    boolean alwaysAsId() -> a
com.fasterxml.jackson.annotation.JsonIgnore -> b.a.a.a.x:
    boolean value() -> a
com.fasterxml.jackson.annotation.JsonIgnoreProperties -> b.a.a.a.y:
    java.lang.String[] value() -> a
    boolean ignoreUnknown() -> b
    boolean allowGetters() -> c
    boolean allowSetters() -> d
com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value -> b.a.a.a.z:
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value EMPTY -> a
    java.util.Set _ignored -> b
    boolean _ignoreUnknown -> c
    boolean _allowGetters -> d
    boolean _allowSetters -> e
    boolean _merge -> f
    126:136:void <init>(java.util.Set,boolean,boolean,boolean,boolean) -> <init>
    139:142:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value from(com.fasterxml.jackson.annotation.JsonIgnoreProperties) -> a
    160:163:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value construct(java.util.Set,boolean,boolean,boolean,boolean) -> a
    183:183:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value empty() -> a
    197:197:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value merge(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value,com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> a
    238:257:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withOverrides(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> a
    334:337:java.util.Set findIgnoredForSerialization() -> b
    348:351:java.util.Set findIgnoredForDeserialization() -> c
    355:355:boolean getIgnoreUnknown() -> d
    372:372:java.lang.String toString() -> toString
    378:378:int hashCode() -> hashCode
    388:390:boolean equals(java.lang.Object) -> equals
    396:396:boolean _equals(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value,com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> b
    406:413:java.util.Set _asSet(java.lang.String[]) -> a
    418:426:java.util.Set _merge(java.util.Set,java.util.Set) -> a
    432:438:boolean _empty(java.util.Set,boolean,boolean,boolean,boolean) -> b
    109:109:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonIgnoreType -> b.a.a.a.A:
    boolean value() -> a
com.fasterxml.jackson.annotation.JsonInclude -> b.a.a.a.B:
    com.fasterxml.jackson.annotation.JsonInclude$Include value() -> a
    com.fasterxml.jackson.annotation.JsonInclude$Include content() -> b
    java.lang.Class valueFilter() -> c
    java.lang.Class contentFilter() -> d
com.fasterxml.jackson.annotation.JsonInclude$Include -> b.a.a.a.C:
    com.fasterxml.jackson.annotation.JsonInclude$Include ALWAYS -> a
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_NULL -> b
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_ABSENT -> c
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_EMPTY -> d
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_DEFAULT -> e
    com.fasterxml.jackson.annotation.JsonInclude$Include CUSTOM -> f
    com.fasterxml.jackson.annotation.JsonInclude$Include USE_DEFAULTS -> g
    com.fasterxml.jackson.annotation.JsonInclude$Include[] $VALUES -> h
    103:103:com.fasterxml.jackson.annotation.JsonInclude$Include[] values() -> values
    103:103:com.fasterxml.jackson.annotation.JsonInclude$Include valueOf(java.lang.String) -> valueOf
    103:103:void <init>(java.lang.String,int) -> <init>
    103:224:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonInclude$Value -> b.a.a.a.D:
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY -> a
    com.fasterxml.jackson.annotation.JsonInclude$Include _valueInclusion -> b
    com.fasterxml.jackson.annotation.JsonInclude$Include _contentInclusion -> c
    java.lang.Class _valueFilter -> d
    java.lang.Class _contentFilter -> e
    269:274:void <init>(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include,java.lang.Class,java.lang.Class) -> <init>
    277:277:com.fasterxml.jackson.annotation.JsonInclude$Value empty() -> a
    293:293:com.fasterxml.jackson.annotation.JsonInclude$Value merge(com.fasterxml.jackson.annotation.JsonInclude$Value,com.fasterxml.jackson.annotation.JsonInclude$Value) -> a
    302:308:com.fasterxml.jackson.annotation.JsonInclude$Value mergeAll(com.fasterxml.jackson.annotation.JsonInclude$Value[]) -> a
    330:352:com.fasterxml.jackson.annotation.JsonInclude$Value withOverrides(com.fasterxml.jackson.annotation.JsonInclude$Value) -> a
    359:363:com.fasterxml.jackson.annotation.JsonInclude$Value construct(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include) -> a
    374:387:com.fasterxml.jackson.annotation.JsonInclude$Value construct(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include,java.lang.Class,java.lang.Class) -> a
    395:412:com.fasterxml.jackson.annotation.JsonInclude$Value from(com.fasterxml.jackson.annotation.JsonInclude) -> a
    416:416:com.fasterxml.jackson.annotation.JsonInclude$Value withValueInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> a
    457:463:com.fasterxml.jackson.annotation.JsonInclude$Value withContentFilter(java.lang.Class) -> a
    467:467:com.fasterxml.jackson.annotation.JsonInclude$Value withContentInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> b
    477:477:com.fasterxml.jackson.annotation.JsonInclude$Include getValueInclusion() -> b
    481:481:com.fasterxml.jackson.annotation.JsonInclude$Include getContentInclusion() -> c
    485:485:java.lang.Class getValueFilter() -> d
    489:489:java.lang.Class getContentFilter() -> e
    494:505:java.lang.String toString() -> toString
    510:510:int hashCode() -> hashCode
    516:521:boolean equals(java.lang.Object) -> equals
    247:247:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonManagedReference -> b.a.a.a.E:
    java.lang.String value() -> a
com.fasterxml.jackson.annotation.JsonMerge -> b.a.a.a.F:
    com.fasterxml.jackson.annotation.OptBoolean value() -> a
com.fasterxml.jackson.annotation.JsonProperty -> b.a.a.a.G:
    java.lang.String value() -> a
    boolean required() -> b
    int index() -> c
    java.lang.String defaultValue() -> d
    com.fasterxml.jackson.annotation.JsonProperty$Access access() -> e
com.fasterxml.jackson.annotation.JsonProperty$Access -> b.a.a.a.H:
    com.fasterxml.jackson.annotation.JsonProperty$Access AUTO -> a
    com.fasterxml.jackson.annotation.JsonProperty$Access READ_ONLY -> b
    com.fasterxml.jackson.annotation.JsonProperty$Access WRITE_ONLY -> c
    com.fasterxml.jackson.annotation.JsonProperty$Access READ_WRITE -> d
    com.fasterxml.jackson.annotation.JsonProperty$Access[] $VALUES -> e
    141:141:com.fasterxml.jackson.annotation.JsonProperty$Access[] values() -> values
    141:141:com.fasterxml.jackson.annotation.JsonProperty$Access valueOf(java.lang.String) -> valueOf
    141:141:void <init>(java.lang.String,int) -> <init>
    141:169:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonPropertyDescription -> b.a.a.a.I:
    java.lang.String value() -> a
com.fasterxml.jackson.annotation.JsonPropertyOrder -> b.a.a.a.J:
    java.lang.String[] value() -> a
    boolean alphabetic() -> b
com.fasterxml.jackson.annotation.JsonRawValue -> b.a.a.a.K:
    boolean value() -> a
com.fasterxml.jackson.annotation.JsonRootName -> b.a.a.a.L:
    java.lang.String value() -> a
    java.lang.String namespace() -> b
com.fasterxml.jackson.annotation.JsonSetter -> b.a.a.a.M:
    java.lang.String value() -> a
    com.fasterxml.jackson.annotation.Nulls nulls() -> b
    com.fasterxml.jackson.annotation.Nulls contentNulls() -> c
com.fasterxml.jackson.annotation.JsonSetter$Value -> b.a.a.a.N:
    com.fasterxml.jackson.annotation.Nulls _nulls -> b
    com.fasterxml.jackson.annotation.Nulls _contentNulls -> c
    com.fasterxml.jackson.annotation.JsonSetter$Value EMPTY -> a
    77:80:void <init>(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> <init>
    96:99:com.fasterxml.jackson.annotation.JsonSetter$Value from(com.fasterxml.jackson.annotation.JsonSetter) -> a
    110:119:com.fasterxml.jackson.annotation.JsonSetter$Value construct(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> a
    130:130:com.fasterxml.jackson.annotation.JsonSetter$Value empty() -> a
    227:227:com.fasterxml.jackson.annotation.Nulls nonDefaultValueNulls() -> b
    235:235:com.fasterxml.jackson.annotation.Nulls nonDefaultContentNulls() -> c
    246:246:java.lang.String toString() -> toString
    252:252:int hashCode() -> hashCode
    257:264:boolean equals(java.lang.Object) -> equals
    274:274:boolean _empty(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> b
    75:75:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonSubTypes -> b.a.a.a.O:
    com.fasterxml.jackson.annotation.JsonSubTypes$Type[] value() -> a
com.fasterxml.jackson.annotation.JsonSubTypes$Type -> b.a.a.a.P:
    java.lang.Class value() -> a
    java.lang.String name() -> b
com.fasterxml.jackson.annotation.JsonTypeId -> b.a.a.a.Q:
com.fasterxml.jackson.annotation.JsonTypeInfo -> b.a.a.a.R:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id use() -> a
    com.fasterxml.jackson.annotation.JsonTypeInfo$As include() -> b
    java.lang.String property() -> c
    java.lang.Class defaultImpl() -> d
    boolean visible() -> e
com.fasterxml.jackson.annotation.JsonTypeInfo$As -> b.a.a.a.S:
    com.fasterxml.jackson.annotation.JsonTypeInfo$As PROPERTY -> a
    com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_OBJECT -> b
    com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_ARRAY -> c
    com.fasterxml.jackson.annotation.JsonTypeInfo$As EXTERNAL_PROPERTY -> d
    com.fasterxml.jackson.annotation.JsonTypeInfo$As EXISTING_PROPERTY -> e
    com.fasterxml.jackson.annotation.JsonTypeInfo$As[] $VALUES -> f
    141:141:com.fasterxml.jackson.annotation.JsonTypeInfo$As[] values() -> values
    141:141:com.fasterxml.jackson.annotation.JsonTypeInfo$As valueOf(java.lang.String) -> valueOf
    141:141:void <init>(java.lang.String,int) -> <init>
    141:199:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonTypeInfo$Id -> b.a.a.a.T:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id NONE -> a
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id CLASS -> b
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id MINIMAL_CLASS -> c
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id NAME -> d
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id CUSTOM -> e
    java.lang.String _defaultPropertyName -> f
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] $VALUES -> g
    75:75:com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] values() -> values
    75:75:com.fasterxml.jackson.annotation.JsonTypeInfo$Id valueOf(java.lang.String) -> valueOf
    129:131:void <init>(java.lang.String,int,java.lang.String) -> <init>
    133:133:java.lang.String getDefaultPropertyName() -> a
    75:124:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonTypeInfo$None -> b.a.a.a.U:
    314:314:void <init>() -> <init>
com.fasterxml.jackson.annotation.JsonTypeName -> b.a.a.a.V:
    java.lang.String value() -> a
com.fasterxml.jackson.annotation.JsonUnwrapped -> b.a.a.a.W:
    boolean enabled() -> a
    java.lang.String prefix() -> b
    java.lang.String suffix() -> c
com.fasterxml.jackson.annotation.JsonValue -> b.a.a.a.X:
    boolean value() -> a
com.fasterxml.jackson.annotation.JsonView -> b.a.a.a.Y:
    java.lang.Class[] value() -> a
com.fasterxml.jackson.annotation.Nulls -> b.a.a.a.Z:
    com.fasterxml.jackson.annotation.Nulls SET -> a
    com.fasterxml.jackson.annotation.Nulls SKIP -> b
    com.fasterxml.jackson.annotation.Nulls FAIL -> c
    com.fasterxml.jackson.annotation.Nulls AS_EMPTY -> d
    com.fasterxml.jackson.annotation.Nulls DEFAULT -> e
    com.fasterxml.jackson.annotation.Nulls[] $VALUES -> f
    9:9:com.fasterxml.jackson.annotation.Nulls[] values() -> values
    9:9:com.fasterxml.jackson.annotation.Nulls valueOf(java.lang.String) -> valueOf
    9:9:void <init>(java.lang.String,int) -> <init>
    9:42:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.ObjectIdGenerator -> b.a.a.a.aa:
    12:128:void <init>() -> <init>
    java.lang.Class getScope() -> a
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> a
    49:49:boolean maySerializeAsObject() -> b
    64:64:boolean isValidReferencePropertyName(java.lang.String,java.lang.Object) -> a
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> a
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> a
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> b
    java.lang.Object generateId(java.lang.Object) -> c
com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey -> b.a.a.a.ab:
    java.lang.Class type -> a
    java.lang.Class scope -> b
    java.lang.Object key -> c
    int hashCode -> d
    150:163:void <init>(java.lang.Class,java.lang.Class,java.lang.Object) -> <init>
    166:166:int hashCode() -> hashCode
    171:175:boolean equals(java.lang.Object) -> equals
    180:180:java.lang.String toString() -> toString
com.fasterxml.jackson.annotation.ObjectIdGenerators -> b.a.a.a.ac:
com.fasterxml.jackson.annotation.ObjectIdGenerators$Base -> b.a.a.a.ad:
    java.lang.Class _scope -> a
    31:33:void <init>(java.lang.Class) -> <init>
    37:37:java.lang.Class getScope() -> a
    42:42:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> a
com.fasterxml.jackson.annotation.ObjectIdGenerators$None -> b.a.a.a.ae:
    61:61:void <init>() -> <init>
com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator -> b.a.a.a.af:
    75:75:void <init>(java.lang.Class) -> <init>
    72:72:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> a
com.fasterxml.jackson.annotation.ObjectIdResolver -> b.a.a.a.ag:
    void bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey,java.lang.Object) -> a
    java.lang.Object resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> a
    com.fasterxml.jackson.annotation.ObjectIdResolver newForDeserialization(java.lang.Object) -> a
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver) -> a
com.fasterxml.jackson.annotation.OptBoolean -> b.a.a.a.ah:
    com.fasterxml.jackson.annotation.OptBoolean TRUE -> a
    com.fasterxml.jackson.annotation.OptBoolean FALSE -> b
    com.fasterxml.jackson.annotation.OptBoolean DEFAULT -> c
    com.fasterxml.jackson.annotation.OptBoolean[] $VALUES -> d
    17:17:com.fasterxml.jackson.annotation.OptBoolean[] values() -> values
    17:17:com.fasterxml.jackson.annotation.OptBoolean valueOf(java.lang.String) -> valueOf
    17:17:void <init>(java.lang.String,int) -> <init>
    40:41:java.lang.Boolean asBoolean() -> a
    56:59:boolean equals(java.lang.Boolean,java.lang.Boolean) -> a
    17:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.PropertyAccessor -> b.a.a.a.ai:
    com.fasterxml.jackson.annotation.PropertyAccessor GETTER -> a
    com.fasterxml.jackson.annotation.PropertyAccessor SETTER -> b
    com.fasterxml.jackson.annotation.PropertyAccessor CREATOR -> c
    com.fasterxml.jackson.annotation.PropertyAccessor FIELD -> d
    com.fasterxml.jackson.annotation.PropertyAccessor IS_GETTER -> e
    com.fasterxml.jackson.annotation.PropertyAccessor NONE -> f
    com.fasterxml.jackson.annotation.PropertyAccessor ALL -> g
    com.fasterxml.jackson.annotation.PropertyAccessor[] $VALUES -> h
    13:13:com.fasterxml.jackson.annotation.PropertyAccessor[] values() -> values
    13:13:com.fasterxml.jackson.annotation.PropertyAccessor valueOf(java.lang.String) -> valueOf
    66:66:void <init>(java.lang.String,int) -> <init>
    13:63:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.SimpleObjectIdResolver -> b.a.a.a.aj:
    java.util.Map _items -> a
    16:16:void <init>() -> <init>
    21:28:void bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey,java.lang.Object) -> a
    32:32:java.lang.Object resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> a
    37:37:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver) -> a
    44:44:com.fasterxml.jackson.annotation.ObjectIdResolver newForDeserialization(java.lang.Object) -> a
com.fasterxml.jackson.core.Base64Variant -> b.a.a.b.a:
    int[] _asciiToBase64 -> b
    char[] _base64ToAsciiC -> c
    byte[] _base64ToAsciiB -> d
    java.lang.String _name -> a
    boolean _usesPadding -> e
    char _paddingChar -> f
    int _maxLineLength -> g
    55:139:void <init>(java.lang.String,java.lang.String,boolean,char,int) -> <init>
    148:149:void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,int) -> <init>
    55:169:void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,int) -> <init>
    193:193:boolean usesPadding() -> a
    194:194:boolean usesPaddingChar(char) -> a
    195:195:boolean usesPaddingChar(int) -> a
    196:196:char getPaddingChar() -> b
    199:199:int getMaxLineLength() -> c
    212:213:int decodeBase64Char(char) -> b
    218:218:int decodeBase64Char(int) -> b
    251:255:int encodeBase64Chunk(int,char[],int) -> a
    260:264:void encodeBase64Chunk(java.lang.StringBuilder,int) -> a
    276:287:int encodeBase64Partial(int,int,char[],int) -> a
    292:303:void encodeBase64Partial(java.lang.StringBuilder,int,int) -> a
    317:321:int encodeBase64Chunk(int,byte[],int) -> a
    334:346:int encodeBase64Partial(int,int,byte[],int) -> a
    365:365:java.lang.String encode(byte[]) -> a
    378:422:java.lang.String encode(byte[],boolean) -> a
    438:440:byte[] decode(java.lang.String) -> a
    458:543:void decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder) -> a
    552:552:java.lang.String toString() -> toString
    557:557:boolean equals(java.lang.Object) -> equals
    562:562:int hashCode() -> hashCode
    579:592:void _reportInvalidBase64(char,int,java.lang.String) -> a
    596:596:void _reportBase64EOF() -> d
com.fasterxml.jackson.core.Base64Variants -> b.a.a.b.b:
    com.fasterxml.jackson.core.Base64Variant MIME -> a
    com.fasterxml.jackson.core.Base64Variant MIME_NO_LINEFEEDS -> b
    com.fasterxml.jackson.core.Base64Variant PEM -> c
    com.fasterxml.jackson.core.Base64Variant MODIFIED_FOR_URL -> d
    84:84:com.fasterxml.jackson.core.Base64Variant getDefaultVariant() -> a
    34:75:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.FormatSchema -> b.a.a.b.c:
    java.lang.String getSchemaType() -> a
com.fasterxml.jackson.core.JsonEncoding -> b.a.a.b.d:
    com.fasterxml.jackson.core.JsonEncoding UTF8 -> a
    com.fasterxml.jackson.core.JsonEncoding UTF16_BE -> b
    com.fasterxml.jackson.core.JsonEncoding UTF16_LE -> c
    com.fasterxml.jackson.core.JsonEncoding UTF32_BE -> d
    com.fasterxml.jackson.core.JsonEncoding UTF32_LE -> e
    java.lang.String _javaName -> f
    boolean _bigEndian -> g
    int _bits -> h
    com.fasterxml.jackson.core.JsonEncoding[] $VALUES -> i
    18:18:com.fasterxml.jackson.core.JsonEncoding[] values() -> values
    18:18:com.fasterxml.jackson.core.JsonEncoding valueOf(java.lang.String) -> valueOf
    33:37:void <init>(java.lang.String,int,java.lang.String,boolean,int) -> <init>
    44:44:java.lang.String getJavaName() -> a
    54:54:boolean isBigEndian() -> b
    56:56:int bits() -> c
    18:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonFactory -> b.a.a.b.e:
    int DEFAULT_FACTORY_FEATURE_FLAGS -> a
    int DEFAULT_PARSER_FEATURE_FLAGS -> b
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> c
    com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR -> n
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols -> d
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer -> e
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> f
    int _factoryFeatures -> g
    int _parserFeatures -> h
    int _generatorFeatures -> i
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> j
    com.fasterxml.jackson.core.io.InputDecorator _inputDecorator -> k
    com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator -> l
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> m
    278:278:void <init>() -> <init>
    191:280:void <init>(com.fasterxml.jackson.core.ObjectCodec) -> <init>
    373:373:boolean requiresPropertyOrdering() -> a
    401:401:boolean canUseCharArrays() -> b
    475:478:java.lang.String getFormatName() -> c
    488:491:com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) -> a
    517:517:com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> b
    581:581:com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> a
    589:590:com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonParser$Feature) -> a
    598:599:com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonParser$Feature) -> b
    731:732:com.fasterxml.jackson.core.JsonFactory setCodec(com.fasterxml.jackson.core.ObjectCodec) -> a
    735:735:com.fasterxml.jackson.core.ObjectCodec getCodec() -> d
    819:820:com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> a
    839:840:com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> a
    850:857:com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> a
    871:879:com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> a
    889:899:com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> a
    936:937:com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) -> a
    1136:1142:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> a
    1173:1174:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> a
    1315:1315:com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> a
    1332:1333:com.fasterxml.jackson.core.JsonParser _createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> a
    1344:1345:com.fasterxml.jackson.core.JsonParser _createParser(char[],int,int,com.fasterxml.jackson.core.io.IOContext,boolean) -> a
    1362:1362:com.fasterxml.jackson.core.JsonParser _createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext) -> a
    1375:1380:com.fasterxml.jackson.core.JsonParser _createParser(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext) -> a
    1403:1412:com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> a
    1426:1435:com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> a
    1441:1445:java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext) -> a
    1458:1464:java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> b
    1471:1477:java.io.Reader _decorate(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> b
    1484:1490:java.io.DataInput _decorate(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext) -> b
    1497:1503:java.io.OutputStream _decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> b
    1510:1516:java.io.Writer _decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> b
    1537:1540:com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler() -> e
    1548:1548:com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean) -> a
    1604:1607:void _requireJSONFactory(java.lang.String) -> b
    1612:1612:boolean _isJSONFactory() -> f
    164:178:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonFactory$Feature -> b.a.a.b.f:
    com.fasterxml.jackson.core.JsonFactory$Feature INTERN_FIELD_NAMES -> a
    com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES -> b
    com.fasterxml.jackson.core.JsonFactory$Feature FAIL_ON_SYMBOL_HASH_OVERFLOW -> c
    com.fasterxml.jackson.core.JsonFactory$Feature USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING -> d
    boolean _defaultState -> e
    com.fasterxml.jackson.core.JsonFactory$Feature[] $VALUES -> f
    59:59:com.fasterxml.jackson.core.JsonFactory$Feature[] values() -> values
    59:59:com.fasterxml.jackson.core.JsonFactory$Feature valueOf(java.lang.String) -> valueOf
    135:139:int collectDefaults() -> a
    142:142:void <init>(java.lang.String,int,boolean) -> <init>
    144:144:boolean enabledByDefault() -> b
    145:145:boolean enabledIn(int) -> a
    146:146:int getMask() -> c
    59:121:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonGenerationException -> b.a.a.b.g:
    com.fasterxml.jackson.core.JsonGenerator _processor -> a
    48:50:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    72:72:com.fasterxml.jackson.core.JsonGenerator getProcessor() -> a
    13:13:java.lang.Object getProcessor() -> b
com.fasterxml.jackson.core.JsonGenerator -> b.a.a.b.h:
    com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter -> a
    269:269:void <init>() -> <init>
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> a
    int getFeatureMask() -> a
    com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> a
    373:375:com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> a
    404:404:com.fasterxml.jackson.core.JsonGenerator overrideFormatFeatures(int,int) -> b
    464:465:com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> a
    475:475:com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter() -> b
    508:508:com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> b
    536:536:com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> a
    550:550:com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> a
    627:631:void setCurrentValue(java.lang.Object) -> a
    663:663:boolean canWriteObjectId() -> c
    679:679:boolean canWriteTypeId() -> d
    691:691:boolean canWriteBinaryNatively() -> e
    701:701:boolean canOmitFields() -> f
    void writeStartArray() -> g
    750:751:void writeStartArray(int) -> c
    void writeEndArray() -> h
    void writeStartObject() -> i
    790:792:void writeStartObject(java.lang.Object) -> b
    void writeEndObject() -> j
    void writeFieldName(java.lang.String) -> a
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> b
    841:842:void writeFieldId(long) -> a
    863:872:void writeArray(int[],int,int) -> a
    887:896:void writeArray(long[],int,int) -> a
    911:920:void writeArray(double[],int,int) -> a
    void writeString(java.lang.String) -> b
    void writeString(char[],int,int) -> a
    void writeString(com.fasterxml.jackson.core.SerializableString) -> c
    void writeRaw(java.lang.String) -> c
    void writeRaw(char[],int,int) -> b
    void writeRaw(char) -> a
    1095:1096:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> d
    void writeRawValue(java.lang.String) -> d
    1120:1121:void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> e
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> a
    1153:1154:void writeBinary(byte[],int,int) -> a
    1163:1164:void writeBinary(byte[]) -> a
    1181:1181:int writeBinary(java.io.InputStream,int) -> a
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> a
    1225:1225:void writeNumber(short) -> a
    void writeNumber(int) -> d
    void writeNumber(long) -> b
    void writeNumber(java.math.BigInteger) -> a
    void writeNumber(double) -> a
    void writeNumber(float) -> a
    void writeNumber(java.math.BigDecimal) -> a
    void writeNumber(java.lang.String) -> e
    void writeBoolean(boolean) -> a
    void writeNull() -> k
    1349:1358:void writeEmbeddedObject(java.lang.Object) -> c
    1380:1380:void writeObjectId(java.lang.Object) -> d
    1393:1393:void writeObjectRef(java.lang.Object) -> e
    1408:1408:void writeTypeId(java.lang.Object) -> f
    1427:1481:com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId) -> a
    1489:1520:com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId) -> b
    void writeObject(java.lang.Object) -> g
    1569:1571:void writeStringField(java.lang.String,java.lang.String) -> a
    1711:1713:void writeObjectFieldStart(java.lang.String) -> f
    1725:1727:void writeObjectField(java.lang.String,java.lang.Object) -> a
    1738:1738:void writeOmittedField(java.lang.String) -> g
    1758:1828:void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> a
    1862:1892:void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> b
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> l
    void flush() -> flush
    void close() -> close
    1961:1961:void _reportError(java.lang.String) -> h
    1964:1964:void _throwInternal() -> m
    1967:1967:void _reportUnsupportedOperation() -> n
    1975:1980:void _verifyOffsets(int,int,int) -> a
    1995:2049:void _writeSimpleObject(java.lang.Object) -> h
com.fasterxml.jackson.core.JsonGenerator$1 -> b.a.a.b.i:
    int[] $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion -> a
    1447:1447:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonGenerator$Feature -> b.a.a.b.j:
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET -> a
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT -> b
    com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM -> c
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_FIELD_NAMES -> d
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS -> e
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS -> f
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_BIGDECIMAL_AS_PLAIN -> g
    com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII -> h
    com.fasterxml.jackson.core.JsonGenerator$Feature STRICT_DUPLICATE_DETECTION -> i
    com.fasterxml.jackson.core.JsonGenerator$Feature IGNORE_UNKNOWN -> j
    boolean _defaultState -> k
    int _mask -> l
    com.fasterxml.jackson.core.JsonGenerator$Feature[] $VALUES -> m
    35:35:com.fasterxml.jackson.core.JsonGenerator$Feature[] values() -> values
    35:35:com.fasterxml.jackson.core.JsonGenerator$Feature valueOf(java.lang.String) -> valueOf
    226:232:int collectDefaults() -> a
    235:238:void <init>(java.lang.String,int,boolean) -> <init>
    240:240:boolean enabledByDefault() -> b
    245:245:boolean enabledIn(int) -> a
    247:247:int getMask() -> c
    35:214:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonLocation -> b.a.a.b.k:
    com.fasterxml.jackson.core.JsonLocation NA -> a
    long _totalBytes -> b
    long _totalChars -> c
    int _lineNr -> d
    int _columnNr -> e
    java.lang.Object _sourceRef -> f
    58:59:void <init>(java.lang.Object,long,int,int) -> <init>
    63:69:void <init>(java.lang.Object,long,long,int,int) -> <init>
    103:103:long getByteOffset() -> a
    128:133:int hashCode() -> hashCode
    139:151:boolean equals(java.lang.Object) -> equals
    158:166:java.lang.String toString() -> toString
    171:214:java.lang.StringBuilder _appendSourceDesc(java.lang.StringBuilder) -> a
    218:219:int _append(java.lang.StringBuilder,java.lang.String) -> a
    36:36:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonParseException -> b.a.a.b.l:
    com.fasterxml.jackson.core.JsonParser _processor -> a
    com.fasterxml.jackson.core.util.RequestPayload _requestPayload -> b
    49:51:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    57:59:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable) -> <init>
    99:100:com.fasterxml.jackson.core.JsonParseException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> a
    105:105:com.fasterxml.jackson.core.JsonParser getProcessor() -> a
    137:141:java.lang.String getMessage() -> getMessage
    15:15:java.lang.Object getProcessor() -> b
com.fasterxml.jackson.core.JsonParser -> b.a.a.b.m:
    int _features -> a
    com.fasterxml.jackson.core.util.RequestPayload _requestPayload -> b
    346:346:void <init>() -> <init>
    347:347:void <init>(int) -> <init>
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> a
    407:411:void setCurrentValue(java.lang.Object) -> a
    461:462:void setSchema(com.fasterxml.jackson.core.FormatSchema) -> a
    502:502:boolean requiresCustomCodec() -> b
    void close() -> close
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> c
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> d
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> e
    685:685:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> a
    707:708:com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> a
    727:728:com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> a
    757:757:com.fasterxml.jackson.core.JsonParser overrideFormatFeatures(int,int) -> b
    com.fasterxml.jackson.core.JsonToken nextToken() -> f
    com.fasterxml.jackson.core.JsonToken nextValue() -> g
    825:825:java.lang.String nextFieldName() -> h
    840:840:java.lang.String nextTextValue() -> i
    com.fasterxml.jackson.core.JsonParser skipChildren() -> j
    948:948:com.fasterxml.jackson.core.JsonToken currentToken() -> k
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> l
    int getCurrentTokenId() -> m
    boolean hasCurrentToken() -> n
    boolean hasTokenId(int) -> b
    boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> a
    1040:1040:boolean isExpectedStartArrayToken() -> o
    1048:1048:boolean isExpectedStartObjectToken() -> p
    1061:1061:boolean isNaN() -> q
    void clearCurrentToken() -> r
    java.lang.String getCurrentName() -> s
    java.lang.String getText() -> t
    char[] getTextCharacters() -> u
    int getTextLength() -> v
    int getTextOffset() -> w
    boolean hasTextCharacters() -> x
    java.lang.Number getNumberValue() -> y
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> z
    1262:1269:byte getByteValue() -> A
    1287:1291:short getShortValue() -> B
    int getIntValue() -> C
    long getLongValue() -> D
    java.math.BigInteger getBigIntegerValue() -> E
    float getFloatValue() -> F
    double getDoubleValue() -> G
    java.math.BigDecimal getDecimalValue() -> H
    1410:1410:java.lang.Object getEmbeddedObject() -> I
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> a
    1448:1448:byte[] getBinaryValue() -> J
    1481:1482:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> a
    1503:1503:int getValueAsInt() -> K
    1517:1517:int getValueAsInt(int) -> c
    1531:1531:long getValueAsLong() -> L
    1546:1546:long getValueAsLong(long) -> a
    1621:1621:java.lang.String getValueAsString() -> M
    java.lang.String getValueAsString(java.lang.String) -> a
    1655:1655:boolean canReadObjectId() -> N
    1669:1669:boolean canReadTypeId() -> O
    1684:1684:java.lang.Object getObjectId() -> P
    1699:1699:java.lang.Object getTypeId() -> Q
    1729:1729:java.lang.Object readValueAs(java.lang.Class) -> a
    1782:1782:com.fasterxml.jackson.core.TreeNode readValueAsTree() -> R
    1786:1790:com.fasterxml.jackson.core.ObjectCodec _codec() -> S
    1804:1805:com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String) -> b
    1815:1815:void _reportUnsupportedOperation() -> T
com.fasterxml.jackson.core.JsonParser$Feature -> b.a.a.b.n:
    com.fasterxml.jackson.core.JsonParser$Feature AUTO_CLOSE_SOURCE -> a
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_COMMENTS -> b
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_YAML_COMMENTS -> c
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES -> d
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_SINGLE_QUOTES -> e
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_CONTROL_CHARS -> f
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> g
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS -> h
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS -> i
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_MISSING_VALUES -> j
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_TRAILING_COMMA -> k
    com.fasterxml.jackson.core.JsonParser$Feature STRICT_DUPLICATE_DETECTION -> l
    com.fasterxml.jackson.core.JsonParser$Feature IGNORE_UNDEFINED -> m
    com.fasterxml.jackson.core.JsonParser$Feature INCLUDE_SOURCE_IN_LOCATION -> n
    boolean _defaultState -> o
    int _mask -> p
    com.fasterxml.jackson.core.JsonParser$Feature[] $VALUES -> q
    45:45:com.fasterxml.jackson.core.JsonParser$Feature[] values() -> values
    45:45:com.fasterxml.jackson.core.JsonParser$Feature valueOf(java.lang.String) -> valueOf
    296:302:int collectDefaults() -> a
    305:308:void <init>(java.lang.String,int,boolean) -> <init>
    310:310:boolean enabledByDefault() -> b
    315:315:boolean enabledIn(int) -> a
    317:317:int getMask() -> c
    45:279:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonParser$NumberType -> b.a.a.b.o:
    com.fasterxml.jackson.core.JsonParser$NumberType INT -> a
    com.fasterxml.jackson.core.JsonParser$NumberType LONG -> b
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER -> c
    com.fasterxml.jackson.core.JsonParser$NumberType FLOAT -> d
    com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE -> e
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL -> f
    com.fasterxml.jackson.core.JsonParser$NumberType[] $VALUES -> g
    38:38:com.fasterxml.jackson.core.JsonParser$NumberType[] values() -> values
    38:38:com.fasterxml.jackson.core.JsonParser$NumberType valueOf(java.lang.String) -> valueOf
    38:38:void <init>(java.lang.String,int) -> <init>
    38:39:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonProcessingException -> b.a.a.b.p:
    com.fasterxml.jackson.core.JsonLocation _location -> c
    25:30:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    33:34:void <init>(java.lang.String) -> <init>
    37:38:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    41:42:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    54:54:com.fasterxml.jackson.core.JsonLocation getLocation() -> c
    72:72:java.lang.String getOriginalMessage() -> d
    88:88:java.lang.Object getProcessor() -> b
    101:101:java.lang.String getMessageSuffix() -> e
    113:133:java.lang.String getMessage() -> getMessage
    136:136:java.lang.String toString() -> toString
com.fasterxml.jackson.core.JsonStreamContext -> b.a.a.b.q:
    int _type -> a
    int _index -> b
    45:45:void <init>() -> <init>
    53:56:void <init>(com.fasterxml.jackson.core.JsonStreamContext) -> <init>
    61:64:void <init>(int,int) -> <init>
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> a
    82:82:boolean inArray() -> b
    89:89:boolean inRoot() -> c
    95:95:boolean inObject() -> d
    118:123:java.lang.String typeDesc() -> e
    129:129:int getEntryCount() -> f
    134:134:int getCurrentIndex() -> g
    java.lang.String getCurrentName() -> h
    198:198:java.lang.Object getCurrentValue() -> i
    208:208:void setCurrentValue(java.lang.Object) -> a
    250:250:com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object) -> b
    261:285:java.lang.String toString() -> toString
com.fasterxml.jackson.core.JsonToken -> b.a.a.b.r:
    com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE -> a
    com.fasterxml.jackson.core.JsonToken START_OBJECT -> b
    com.fasterxml.jackson.core.JsonToken END_OBJECT -> c
    com.fasterxml.jackson.core.JsonToken START_ARRAY -> d
    com.fasterxml.jackson.core.JsonToken END_ARRAY -> e
    com.fasterxml.jackson.core.JsonToken FIELD_NAME -> f
    com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT -> g
    com.fasterxml.jackson.core.JsonToken VALUE_STRING -> h
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT -> i
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT -> j
    com.fasterxml.jackson.core.JsonToken VALUE_TRUE -> k
    com.fasterxml.jackson.core.JsonToken VALUE_FALSE -> l
    com.fasterxml.jackson.core.JsonToken VALUE_NULL -> m
    java.lang.String _serialized -> n
    char[] _serializedChars -> o
    byte[] _serializedBytes -> p
    int _id -> q
    boolean _isStructStart -> r
    boolean _isStructEnd -> s
    boolean _isNumber -> t
    boolean _isBoolean -> u
    boolean _isScalar -> v
    com.fasterxml.jackson.core.JsonToken[] $VALUES -> w
    12:12:com.fasterxml.jackson.core.JsonToken[] values() -> values
    12:12:com.fasterxml.jackson.core.JsonToken valueOf(java.lang.String) -> valueOf
    141:167:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    169:169:int id() -> a
    171:171:java.lang.String asString() -> b
    172:172:char[] asCharArray() -> c
    175:175:boolean isNumeric() -> d
    185:185:boolean isStructStart() -> e
    195:195:boolean isStructEnd() -> f
    202:202:boolean isScalarValue() -> g
    12:117:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.ObjectCodec -> b.a.a.b.s:
    27:27:void <init>() -> <init>
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> a
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> a
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> a
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> a
    172:172:com.fasterxml.jackson.core.JsonFactory getJsonFactory() -> a
    180:180:com.fasterxml.jackson.core.JsonFactory getFactory() -> b
com.fasterxml.jackson.core.PrettyPrinter -> b.a.a.b.t:
    com.fasterxml.jackson.core.util.Separators DEFAULT_SEPARATORS -> a
    com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR -> b
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> a
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> b
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> a
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> c
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> d
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> e
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> b
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> f
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> g
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> h
    31:38:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.SerializableString -> b.a.a.b.u:
    java.lang.String getValue() -> a
    char[] asQuotedChars() -> b
    byte[] asUnquotedUTF8() -> c
    byte[] asQuotedUTF8() -> d
    int appendQuotedUTF8(byte[],int) -> a
com.fasterxml.jackson.core.TreeCodec -> b.a.a.b.v:
    11:11:void <init>() -> <init>
com.fasterxml.jackson.core.TreeNode -> b.a.a.b.w:
    com.fasterxml.jackson.core.JsonToken asToken() -> a
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> b
com.fasterxml.jackson.core.Version -> b.a.a.b.x:
    com.fasterxml.jackson.core.Version UNKNOWN_VERSION -> g
    int _majorVersion -> a
    int _minorVersion -> b
    int _patchLevel -> c
    java.lang.String _groupId -> d
    java.lang.String _artifactId -> e
    java.lang.String _snapshotInfo -> f
    52:59:void <init>(int,int,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    65:65:com.fasterxml.jackson.core.Version unknownVersion() -> a
    72:72:boolean isSnapshot() -> b
    92:99:java.lang.String toString() -> toString
    103:103:int hashCode() -> hashCode
    109:117:boolean equals(java.lang.Object) -> equals
    124:139:int compareTo(com.fasterxml.jackson.core.Version) -> a
    16:16:int compareTo(java.lang.Object) -> compareTo
    21:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.base.GeneratorBase -> b.a.a.b.a.a:
    int DERIVED_FEATURES_MASK -> b
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> c
    int _features -> d
    boolean _cfgNumbersAsStrings -> e
    com.fasterxml.jackson.core.json.JsonWriteContext _writeContext -> f
    boolean _closed -> g
    104:111:void <init>(int,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    138:139:void setCurrentValue(java.lang.Object) -> a
    148:148:boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> b
    149:149:int getFeatureMask() -> a
    174:185:com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> a
    191:196:com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> a
    201:208:com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> a
    222:242:void _checkStdFeatureChanges(int,int) -> c
    270:270:com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> l
    286:291:void writeStartObject(java.lang.Object) -> b
    300:301:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> b
    315:316:void writeString(com.fasterxml.jackson.core.SerializableString) -> c
    319:321:void writeRawValue(java.lang.String) -> d
    334:336:void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> e
    341:342:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> a
    371:386:void writeObject(java.lang.Object) -> g
    408:408:void close() -> close
    void _releaseBuffers() -> o
    void _verifyValueWrite(java.lang.String) -> i
    450:460:java.lang.String _asString(java.math.BigDecimal) -> b
    475:480:int _decodeSurrogate(int,int) -> d
    31:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.base.ParserBase -> b.a.a.b.a.b:
    com.fasterxml.jackson.core.io.IOContext _ioContext -> c
    boolean _closed -> d
    int _inputPtr -> e
    int _inputEnd -> f
    long _currInputProcessed -> g
    int _currInputRow -> h
    int _currInputRowStart -> i
    long _tokenInputTotal -> j
    int _tokenInputRow -> k
    int _tokenInputCol -> l
    com.fasterxml.jackson.core.json.JsonReadContext _parsingContext -> m
    com.fasterxml.jackson.core.JsonToken _nextToken -> n
    com.fasterxml.jackson.core.util.TextBuffer _textBuffer -> o
    char[] _nameCopyBuffer -> p
    boolean _nameCopied -> q
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteArrayBuilder -> r
    byte[] _binaryValue -> s
    int _numTypesValid -> t
    int _numberInt -> u
    long _numberLong -> v
    double _numberDouble -> w
    java.math.BigInteger _numberBigInt -> x
    java.math.BigDecimal _numberBigDecimal -> y
    boolean _numberNegative -> z
    int _intLength -> A
    int _fractLength -> B
    int _expLength -> C
    77:238:void <init>(com.fasterxml.jackson.core.io.IOContext,int) -> <init>
    249:250:void setCurrentValue(java.lang.Object) -> a
    281:286:com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> a
    291:298:com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> a
    312:323:void _checkStdFeatureChanges(int,int) -> c
    337:343:java.lang.String getCurrentName() -> s
    363:375:void close() -> close
    378:378:com.fasterxml.jackson.core.json.JsonReadContext getParsingContext() -> U
    387:390:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> d
    399:400:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> e
    413:415:boolean hasTextCharacters() -> x
    422:430:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> a
    439:439:long getTokenCharacterOffset() -> V
    440:440:int getTokenLineNr() -> W
    443:444:int getTokenColumnNr() -> X
    void _closeInput() -> Y
    468:474:void _releaseBuffers() -> Z
    483:491:void _handleEOF() -> aa
    497:498:int _eofAsNextChar() -> ab
    509:514:com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() -> ac
    527:530:com.fasterxml.jackson.core.JsonToken reset(boolean,int,int,int) -> a
    535:540:com.fasterxml.jackson.core.JsonToken resetInt(boolean,int) -> a
    545:550:com.fasterxml.jackson.core.JsonToken resetFloat(boolean,int,int,int) -> b
    555:558:com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double) -> a
    563:570:boolean isNaN() -> q
    582:609:java.lang.Number getNumberValue() -> y
    615:637:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> z
    643:651:int getIntValue() -> C
    657:665:long getLongValue() -> D
    671:679:java.math.BigInteger getBigIntegerValue() -> E
    685:694:float getFloatValue() -> F
    700:708:double getDoubleValue() -> G
    714:722:java.math.BigDecimal getDecimalValue() -> H
    743:782:void _parseNumericValue(int) -> d
    790:803:int _parseIntValue() -> ad
    816:828:void _parseSlowFloat(int) -> h
    832:854:void _parseSlowInt(int) -> i
    865:894:void convertNumberToInt() -> ae
    898:922:void convertNumberToLong() -> af
    926:939:void convertNumberToBigInteger() -> ag
    949:961:void convertNumberToDouble() -> ah
    971:986:void convertNumberToBigDecimal() -> ai
    995:999:void _reportMismatchedEndMarker(int,char) -> a
    1013:1013:char _decodeEscaped() -> aj
    1019:1034:int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int) -> a
    1039:1054:int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int) -> a
    1058:1058:java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int) -> b
    1067:1081:java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String) -> a
    1097:1100:java.lang.Object _getSourceReference() -> ak
    1105:1108:int[] growArrayBy(int[],int) -> a
    1127:1127:void _finishString() -> al
    22:22:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> c
com.fasterxml.jackson.core.base.ParserMinimalBase -> b.a.a.b.a.c:
    byte[] NO_BYTES -> D
    int[] NO_INTS -> E
    java.math.BigInteger BI_MIN_INT -> F
    java.math.BigInteger BI_MAX_INT -> G
    java.math.BigInteger BI_MIN_LONG -> H
    java.math.BigInteger BI_MAX_LONG -> I
    java.math.BigDecimal BD_MIN_LONG -> J
    java.math.BigDecimal BD_MAX_LONG -> K
    java.math.BigDecimal BD_MIN_INT -> L
    java.math.BigDecimal BD_MAX_INT -> M
    com.fasterxml.jackson.core.JsonToken _currToken -> N
    com.fasterxml.jackson.core.JsonToken _lastClearedToken -> O
    160:160:void <init>(int) -> <init>
    com.fasterxml.jackson.core.JsonToken nextToken() -> f
    186:186:com.fasterxml.jackson.core.JsonToken currentToken() -> k
    192:192:com.fasterxml.jackson.core.JsonToken getCurrentToken() -> l
    194:195:int getCurrentTokenId() -> m
    198:198:boolean hasCurrentToken() -> n
    200:204:boolean hasTokenId(int) -> b
    208:208:boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> a
    211:211:boolean isExpectedStartArrayToken() -> o
    212:212:boolean isExpectedStartObjectToken() -> p
    218:222:com.fasterxml.jackson.core.JsonToken nextValue() -> g
    228:253:com.fasterxml.jackson.core.JsonParser skipChildren() -> j
    void _handleEOF() -> aa
    java.lang.String getCurrentName() -> s
    281:285:void clearCurrentToken() -> r
    java.lang.String getText() -> t
    357:361:int getValueAsInt() -> K
    367:392:int getValueAsInt(int) -> c
    398:402:long getValueAsLong() -> L
    408:432:long getValueAsLong(long) -> a
    467:473:java.lang.String getValueAsString() -> M
    478:487:java.lang.String getValueAsString(java.lang.String) -> a
    503:507:void _decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant) -> a
    522:522:boolean _hasTextualNull(java.lang.String) -> c
    531:536:void reportUnexpectedNumberChar(int,java.lang.String) -> a
    539:540:void reportInvalidNumber(java.lang.String) -> d
    543:545:void reportOverflowInt() -> am
    548:550:void reportOverflowLong() -> an
    554:562:void _reportUnexpectedChar(int,java.lang.String) -> b
    565:566:void _reportInvalidEOF() -> ao
    573:582:void _reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken) -> b
    588:588:void _reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> a
    608:609:void _reportMissingRootWS(int) -> e
    612:615:void _throwInvalidSpace(int) -> f
    624:629:void _throwUnquotedSpace(int,java.lang.String) -> c
    633:641:char _handleUnrecognizedCharacterEscape(char) -> a
    652:659:java.lang.String _getCharDesc(int) -> g
    663:663:void _reportError(java.lang.String) -> e
    668:668:void _reportError(java.lang.String,java.lang.Object) -> a
    673:673:void _reportError(java.lang.String,java.lang.Object,java.lang.Object) -> a
    677:677:void _wrapError(java.lang.String,java.lang.Throwable) -> a
    681:682:void _throwInternal() -> ap
    685:685:com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String,java.lang.Throwable) -> b
    62:107:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.filter.FilteringParserDelegate -> b.a.a.b.b.a:
    com.fasterxml.jackson.core.filter.TokenFilter rootFilter -> c
    boolean _allowMultipleMatches -> d
    boolean _includePath -> e
    boolean _includeImmediateParent -> f
    com.fasterxml.jackson.core.JsonToken _currToken -> g
    com.fasterxml.jackson.core.JsonToken _lastClearedToken -> h
    com.fasterxml.jackson.core.filter.TokenFilterContext _headContext -> i
    com.fasterxml.jackson.core.filter.TokenFilterContext _exposedContext -> j
    com.fasterxml.jackson.core.filter.TokenFilter _itemFilter -> k
    int _matchCount -> l
    117:124:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.filter.TokenFilter,boolean,boolean) -> <init>
    148:148:com.fasterxml.jackson.core.JsonToken getCurrentToken() -> l
    149:149:com.fasterxml.jackson.core.JsonToken currentToken() -> k
    152:153:int getCurrentTokenId() -> m
    160:160:boolean hasCurrentToken() -> n
    162:166:boolean hasTokenId(int) -> b
    170:170:boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> a
    173:173:boolean isExpectedStartArrayToken() -> o
    174:174:boolean isExpectedStartObjectToken() -> p
    176:176:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> e
    180:180:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> c
    186:191:java.lang.String getCurrentName() -> s
    202:206:void clearCurrentToken() -> r
    237:455:com.fasterxml.jackson.core.JsonToken nextToken() -> f
    468:615:com.fasterxml.jackson.core.JsonToken _nextToken2() -> U
    626:744:com.fasterxml.jackson.core.JsonToken _nextTokenWithBuffering(com.fasterxml.jackson.core.filter.TokenFilterContext) -> a
    756:779:com.fasterxml.jackson.core.JsonToken _nextBuffered(com.fasterxml.jackson.core.filter.TokenFilterContext) -> b
    785:789:boolean _verifyAllowedMatches() -> W
    795:799:com.fasterxml.jackson.core.JsonToken nextValue() -> g
    810:830:com.fasterxml.jackson.core.JsonParser skipChildren() -> j
    839:839:java.lang.String getText() -> t
    840:840:boolean hasTextCharacters() -> x
    841:841:char[] getTextCharacters() -> u
    842:842:int getTextLength() -> v
    843:843:int getTextOffset() -> w
    852:852:java.math.BigInteger getBigIntegerValue() -> E
    858:858:byte getByteValue() -> A
    861:861:short getShortValue() -> B
    864:864:java.math.BigDecimal getDecimalValue() -> H
    867:867:double getDoubleValue() -> G
    870:870:float getFloatValue() -> F
    873:873:int getIntValue() -> C
    876:876:long getLongValue() -> D
    879:879:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> z
    882:882:java.lang.Number getNumberValue() -> y
    890:890:int getValueAsInt() -> K
    891:891:int getValueAsInt(int) -> c
    892:892:long getValueAsLong() -> L
    893:893:long getValueAsLong(long) -> a
    898:898:java.lang.String getValueAsString() -> M
    899:899:java.lang.String getValueAsString(java.lang.String) -> a
    907:907:java.lang.Object getEmbeddedObject() -> I
    908:908:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> a
    909:909:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> a
    910:910:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> d
    919:922:com.fasterxml.jackson.core.JsonStreamContext _filterContext() -> V
com.fasterxml.jackson.core.filter.TokenFilter -> b.a.a.b.b.b:
    com.fasterxml.jackson.core.filter.TokenFilter INCLUDE_ALL -> a
    34:34:void <init>() -> <init>
    66:66:com.fasterxml.jackson.core.filter.TokenFilter filterStartObject() -> a
    93:93:com.fasterxml.jackson.core.filter.TokenFilter filterStartArray() -> b
    110:110:void filterFinishArray() -> c
    141:141:com.fasterxml.jackson.core.filter.TokenFilter includeProperty(java.lang.String) -> a
    167:167:com.fasterxml.jackson.core.filter.TokenFilter includeElement(int) -> a
    193:193:com.fasterxml.jackson.core.filter.TokenFilter includeRootValue(int) -> b
    210:210:boolean includeValue(com.fasterxml.jackson.core.JsonParser) -> a
    343:346:java.lang.String toString() -> toString
    361:361:boolean _includeScalar() -> d
    30:30:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.filter.TokenFilterContext -> b.a.a.b.b.c:
    com.fasterxml.jackson.core.filter.TokenFilterContext _parent -> c
    com.fasterxml.jackson.core.filter.TokenFilterContext _child -> d
    java.lang.String _currentName -> e
    com.fasterxml.jackson.core.filter.TokenFilter _filter -> f
    boolean _startHandled -> g
    boolean _needToHandleName -> h
    71:78:void <init>(int,com.fasterxml.jackson.core.filter.TokenFilterContext,com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> <init>
    83:89:com.fasterxml.jackson.core.filter.TokenFilterContext reset(int,com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> a
    100:100:com.fasterxml.jackson.core.filter.TokenFilterContext createRootContext(com.fasterxml.jackson.core.filter.TokenFilter) -> a
    104:109:com.fasterxml.jackson.core.filter.TokenFilterContext createChildArrayContext(com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> a
    113:118:com.fasterxml.jackson.core.filter.TokenFilterContext createChildObjectContext(com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> b
    128:130:com.fasterxml.jackson.core.filter.TokenFilter setFieldName(java.lang.String) -> a
    139:147:com.fasterxml.jackson.core.filter.TokenFilter checkValue(com.fasterxml.jackson.core.filter.TokenFilter) -> b
    271:271:java.lang.Object getCurrentValue() -> i
    274:274:void setCurrentValue(java.lang.Object) -> a
    276:276:com.fasterxml.jackson.core.filter.TokenFilterContext getParent() -> j
    277:277:java.lang.String getCurrentName() -> h
    281:281:com.fasterxml.jackson.core.filter.TokenFilter getFilter() -> k
    282:282:boolean isStartHandled() -> l
    285:298:com.fasterxml.jackson.core.JsonToken nextTokenToRead() -> m
    302:314:com.fasterxml.jackson.core.filter.TokenFilterContext findChildOf(com.fasterxml.jackson.core.filter.TokenFilterContext) -> a
    320:342:void appendDesc(java.lang.StringBuilder) -> a
    351:353:java.lang.String toString() -> toString
    13:13:com.fasterxml.jackson.core.JsonStreamContext getParent() -> a
com.fasterxml.jackson.core.format.InputAccessor -> b.a.a.b.c.a:
    boolean hasMoreBytes() -> a
    byte nextByte() -> b
com.fasterxml.jackson.core.format.InputAccessor$Std -> b.a.a.b.c.b:
    java.io.InputStream _in -> a
    byte[] _buffer -> b
    int _bufferedStart -> c
    int _bufferedEnd -> d
    int _ptr -> e
    93:99:void <init>(byte[],int,int) -> <init>
    104:119:boolean hasMoreBytes() -> a
    126:131:byte nextByte() -> b
    136:137:void reset() -> c
com.fasterxml.jackson.core.format.MatchStrength -> b.a.a.b.c.c:
    com.fasterxml.jackson.core.format.MatchStrength NO_MATCH -> a
    com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE -> b
    com.fasterxml.jackson.core.format.MatchStrength WEAK_MATCH -> c
    com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH -> d
    com.fasterxml.jackson.core.format.MatchStrength FULL_MATCH -> e
    com.fasterxml.jackson.core.format.MatchStrength[] $VALUES -> f
    10:10:com.fasterxml.jackson.core.format.MatchStrength[] values() -> values
    10:10:com.fasterxml.jackson.core.format.MatchStrength valueOf(java.lang.String) -> valueOf
    10:10:void <init>(java.lang.String,int) -> <init>
    10:60:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.CharTypes -> b.a.a.b.d.a:
    char[] HC -> a
    byte[] HB -> b
    int[] sInputCodes -> c
    int[] sInputCodesUTF8 -> d
    int[] sInputCodesJsNames -> e
    int[] sInputCodesUtf8JsNames -> f
    int[] sInputCodesComment -> g
    int[] sInputCodesWS -> h
    int[] sOutputEscapes128 -> i
    int[] sHexValues -> j
    195:195:int[] getInputCodeLatin1() -> a
    196:196:int[] getInputCodeUtf8() -> b
    198:198:int[] getInputCodeLatin1JsNames() -> c
    199:199:int[] getInputCodeUtf8JsNames() -> d
    201:201:int[] getInputCodeComment() -> e
    211:211:int[] get7BitOutputEscapes() -> f
    215:215:int charToHex(int) -> a
    220:249:void appendQuoted(java.lang.StringBuilder,java.lang.String) -> a
    252:252:char[] copyHexChars() -> g
    256:256:byte[] copyHexBytes() -> h
    7:193:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.CharacterEscapes -> b.a.a.b.d.b:
    int[] getEscapeCodesForAscii() -> a
    com.fasterxml.jackson.core.SerializableString getEscapeSequence(int) -> a
com.fasterxml.jackson.core.io.IOContext -> b.a.a.b.d.c:
    java.lang.Object _sourceRef -> a
    com.fasterxml.jackson.core.JsonEncoding _encoding -> b
    boolean _managedResource -> c
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> d
    byte[] _readIOBuffer -> e
    byte[] _writeEncodingBuffer -> f
    byte[] _base64Buffer -> g
    char[] _tokenCBuffer -> h
    char[] _concatCBuffer -> i
    char[] _nameCopyBuffer -> j
    102:106:void <init>(com.fasterxml.jackson.core.util.BufferRecycler,java.lang.Object,boolean) -> <init>
    109:110:void setEncoding(com.fasterxml.jackson.core.JsonEncoding) -> a
    126:126:java.lang.Object getSourceReference() -> a
    127:127:com.fasterxml.jackson.core.JsonEncoding getEncoding() -> b
    128:128:boolean isResourceManaged() -> c
    137:137:com.fasterxml.jackson.core.util.TextBuffer constructTextBuffer() -> d
    146:147:byte[] allocReadIOBuffer() -> e
    159:160:byte[] allocWriteEncodingBuffer() -> f
    175:176:byte[] allocBase64Buffer() -> g
    188:189:char[] allocTokenBuffer() -> h
    196:197:char[] allocTokenBuffer(int) -> a
    201:202:char[] allocConcatBuffer() -> i
    206:207:char[] allocNameCopyBuffer(int) -> b
    215:223:void releaseReadIOBuffer(byte[]) -> a
    226:234:void releaseWriteEncodingBuffer(byte[]) -> b
    237:242:void releaseBase64Buffer(byte[]) -> c
    245:250:void releaseTokenBuffer(char[]) -> a
    253:259:void releaseConcatBuffer(char[]) -> b
    262:268:void releaseNameCopyBuffer(char[]) -> c
    277:278:void _verifyAlloc(java.lang.Object) -> a
    282:283:void _verifyRelease(byte[],byte[]) -> a
    287:288:void _verifyRelease(char[],char[]) -> a
    292:292:java.lang.IllegalArgumentException wrongBuf() -> j
com.fasterxml.jackson.core.io.InputDecorator -> b.a.a.b.d.d:
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream) -> a
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,byte[],int,int) -> a
    73:73:java.io.DataInput decorate(com.fasterxml.jackson.core.io.IOContext,java.io.DataInput) -> a
    java.io.Reader decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Reader) -> a
com.fasterxml.jackson.core.io.JsonEOFException -> b.a.a.b.d.e:
    com.fasterxml.jackson.core.JsonToken _token -> d
    26:28:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> <init>
com.fasterxml.jackson.core.io.JsonStringEncoder -> b.a.a.b.d.f:
    char[] HC -> d
    byte[] HB -> e
    com.fasterxml.jackson.core.util.TextBuffer _text -> a
    com.fasterxml.jackson.core.util.ByteArrayBuilder _bytes -> b
    char[] _qbuf -> c
    56:61:void <init>() -> <init>
    86:137:char[] quoteAsString(java.lang.String) -> a
    185:272:byte[] quoteAsUTF8(java.lang.String) -> b
    282:363:byte[] encodeAsUTF8(java.lang.String) -> c
    373:377:int _appendNumeric(int,char[]) -> a
    381:382:int _appendNamed(int,char[]) -> b
    387:405:int _appendByte(int,int,com.fasterxml.jackson.core.util.ByteArrayBuilder,int) -> a
    410:413:int _convert(int,int) -> a
    417:417:void _illegal(int) -> a
    20:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.MergedStream -> b.a.a.b.d.g:
    com.fasterxml.jackson.core.io.IOContext _ctxt -> a
    java.io.InputStream _in -> b
    byte[] _b -> c
    int _ptr -> d
    int _end -> e
    25:31:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int) -> <init>
    35:38:int available() -> available
    42:44:void close() -> close
    47:48:void mark(int) -> mark
    52:52:boolean markSupported() -> markSupported
    56:63:int read() -> read
    67:67:int read(byte[]) -> read
    72:84:int read(byte[],int,int) -> read
    89:90:void reset() -> reset
    94:109:long skip(long) -> skip
    113:120:void _free() -> a
com.fasterxml.jackson.core.io.NumberInput -> b.a.a.b.d.h:
    java.lang.String MIN_LONG_STR_NO_SIGN -> a
    java.lang.String MAX_LONG_STR -> b
    30:55:int parseInt(char[],int,int) -> a
    68:112:int parseInt(java.lang.String) -> a
    118:120:long parseLong(char[],int,int) -> b
    128:133:long parseLong(java.lang.String) -> b
    148:159:boolean inLongRange(char[],int,int,boolean) -> a
    171:184:boolean inLongRange(java.lang.String,boolean) -> a
    189:222:int parseAsInt(java.lang.String,int) -> a
    227:260:long parseAsLong(java.lang.String,long) -> a
    282:285:double parseDouble(java.lang.String) -> c
    289:290:java.math.BigDecimal parseBigDecimal(java.lang.String) -> d
    295:295:java.math.BigDecimal parseBigDecimal(char[]) -> a
    299:300:java.math.BigDecimal parseBigDecimal(char[],int,int) -> c
    305:305:java.lang.NumberFormatException _badBD(java.lang.String) -> e
    18:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.NumberOutput -> b.a.a.b.d.i:
    int MILLION -> c
    int BILLION -> d
    long BILLION_L -> e
    long MIN_INT_AS_LONG -> f
    long MAX_INT_AS_LONG -> g
    java.lang.String SMALLEST_INT -> a
    java.lang.String SMALLEST_LONG -> b
    int[] TRIPLET_TO_CHARS -> h
    java.lang.String[] sSmallIntStrs -> i
    java.lang.String[] sSmallIntStrs2 -> j
    58:106:int outputInt(int,char[],int) -> a
    111:151:int outputInt(int,byte[],int) -> a
    160:189:int outputLong(long,char[],int) -> a
    194:223:int outputLong(long,byte[],int) -> a
    238:247:java.lang.String toString(int) -> a
    251:254:java.lang.String toString(long) -> a
    258:258:java.lang.String toString(double) -> a
    265:265:java.lang.String toString(float) -> a
    276:301:int _outputUptoBillion(int,char[],int) -> b
    306:326:int _outputFullBillion(int,char[],int) -> c
    331:356:int _outputUptoBillion(int,byte[],int) -> b
    361:381:int _outputFullBillion(int,byte[],int) -> c
    386:399:int _outputUptoMillion(char[],int,int,int) -> a
    404:417:int _outputUptoMillion(byte[],int,int,int) -> a
    422:430:int _leading3(int,char[],int) -> d
    435:443:int _leading3(int,byte[],int) -> d
    448:452:int _full3(int,char[],int) -> e
    457:461:int _full3(int,byte[],int) -> e
    468:470:int _outputSmallestL(char[],int) -> a
    475:479:int _outputSmallestL(byte[],int) -> a
    484:486:int _outputSmallestI(char[],int) -> b
    491:495:int _outputSmallestI(byte[],int) -> b
    5:43:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.OutputDecorator -> b.a.a.b.d.j:
    java.io.OutputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream) -> a
    java.io.Writer decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer) -> a
com.fasterxml.jackson.core.io.SegmentedStringWriter -> b.a.a.b.d.k:
    com.fasterxml.jackson.core.util.TextBuffer _buffer -> a
    21:23:void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    33:34:java.io.Writer append(char) -> append
    39:41:java.io.Writer append(java.lang.CharSequence) -> append
    46:48:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    51:51:void close() -> close
    52:52:void flush() -> flush
    55:55:void write(char[]) -> write
    58:58:void write(char[],int,int) -> write
    61:61:void write(int) -> write
    64:64:void write(java.lang.String) -> write
    67:67:void write(java.lang.String,int,int) -> write
    83:85:java.lang.String getAndClear() -> a
    16:16:java.lang.Appendable append(char) -> append
    16:16:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    16:16:java.lang.Appendable append(java.lang.CharSequence) -> append
com.fasterxml.jackson.core.io.SerializedString -> b.a.a.b.d.l:
    java.lang.String _value -> a
    byte[] _quotedUTF8Ref -> b
    byte[] _unquotedUTF8Ref -> c
    char[] _quotedChars -> d
    50:55:void <init>(java.lang.String) -> <init>
    90:90:java.lang.String getValue() -> a
    100:105:char[] asQuotedChars() -> b
    114:119:byte[] asUnquotedUTF8() -> c
    128:133:byte[] asQuotedUTF8() -> d
    144:154:int appendQuotedUTF8(byte[],int) -> a
    260:260:java.lang.String toString() -> toString
    263:263:int hashCode() -> hashCode
    267:270:boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.core.io.UTF32Reader -> b.a.a.b.d.m:
    com.fasterxml.jackson.core.io.IOContext _context -> a
    java.io.InputStream _in -> b
    byte[] _buffer -> c
    int _ptr -> d
    int _length -> e
    boolean _bigEndian -> f
    char _surrogate -> g
    int _charCount -> h
    int _byteCount -> i
    boolean _managedBuffers -> j
    char[] _tmpBuf -> k
    37:65:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int,boolean) -> <init>
    75:82:void close() -> close
    93:99:int read() -> read
    105:177:int read(char[],int,int) -> read
    187:189:void reportUnexpectedEOF(int,int) -> a
    193:195:void reportInvalid(int,int,java.lang.String) -> a
    205:251:boolean loadMore(int) -> a
    260:265:void freeBuffers() -> a
    268:268:void reportBounds(char[],int,int) -> a
    272:272:void reportStrangeStream() -> b
com.fasterxml.jackson.core.io.UTF8Writer -> b.a.a.b.d.n:
    com.fasterxml.jackson.core.io.IOContext _context -> a
    java.io.OutputStream _out -> b
    byte[] _outBuffer -> c
    int _outBufferEnd -> d
    int _outPtr -> e
    int _surrogate -> f
    30:41:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream) -> <init>
    47:48:java.io.Writer append(char) -> append
    55:80:void close() -> close
    86:93:void flush() -> flush
    99:100:void write(char[]) -> write
    106:197:void write(char[],int,int) -> write
    203:243:void write(int) -> write
    248:249:void write(java.lang.String) -> write
    254:345:void write(java.lang.String,int,int) -> write
    359:366:int convertSurrogate(int) -> a
    370:370:void illegalSurrogate(int) -> b
    375:385:java.lang.String illegalSurrogateDesc(int) -> c
    5:5:java.lang.Appendable append(char) -> append
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper -> b.a.a.b.e.a:
    com.fasterxml.jackson.core.io.IOContext _context -> a
    java.io.InputStream _in -> b
    byte[] _inputBuffer -> c
    int _inputPtr -> d
    int _inputEnd -> e
    boolean _bufferRecyclable -> f
    boolean _bigEndian -> g
    int _bytesPerChar -> h
    77:94:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream) -> <init>
    77:105:void <init>(com.fasterxml.jackson.core.io.IOContext,byte[],int,int) -> <init>
    120:175:com.fasterxml.jackson.core.JsonEncoding detectEncoding() -> a
    187:203:int skipUTF8BOM(java.io.DataInput) -> a
    215:239:java.io.Reader constructReader() -> b
    246:259:com.fasterxml.jackson.core.JsonParser constructParser(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int) -> a
    279:360:com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> a
    366:374:com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,com.fasterxml.jackson.core.format.MatchStrength) -> a
    379:382:int skipSpace(com.fasterxml.jackson.core.format.InputAccessor) -> b
    388:396:int skipSpace(com.fasterxml.jackson.core.format.InputAccessor,byte) -> a
    414:454:boolean handleBOM(int) -> b
    462:477:boolean checkUTF32(int) -> c
    482:492:boolean checkUTF16(int) -> d
    502:502:void reportWeirdUCS4(java.lang.String) -> a
    515:530:boolean ensureLoaded(int) -> a
com.fasterxml.jackson.core.json.DupDetector -> b.a.a.b.e.b:
    java.lang.Object _source -> a
    java.lang.String _firstName -> b
    java.lang.String _secondName -> c
    java.util.HashSet _seen -> d
    36:38:void <init>(java.lang.Object) -> <init>
    41:41:com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonParser) -> a
    45:45:com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonGenerator) -> a
    49:49:com.fasterxml.jackson.core.json.DupDetector child() -> a
    53:56:void reset() -> b
    71:71:java.lang.Object getSource() -> c
    76:95:boolean isDup(java.lang.String) -> a
com.fasterxml.jackson.core.json.JsonGeneratorImpl -> b.a.a.b.e.c:
    int[] sOutputEscapes -> h
    com.fasterxml.jackson.core.io.IOContext _ioContext -> i
    int[] _outputEscapes -> j
    int _maximumNonEscapedChar -> k
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> l
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> m
    boolean _cfgUnqNames -> n
    53:110:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    140:144:com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> a
    149:151:void _checkStdFeatureChanges(int,int) -> c
    155:156:com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> b
    167:173:com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> a
    187:188:com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> a
    202:204:void writeStringField(java.lang.String,java.lang.String) -> a
    215:240:void _verifyPrettyValueWrite(java.lang.String,int) -> a
    244:246:void _reportCantWriteValueExpectName(java.lang.String) -> j
    31:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.JsonReadContext -> b.a.a.b.e.d:
    com.fasterxml.jackson.core.json.JsonReadContext _parent -> c
    com.fasterxml.jackson.core.json.DupDetector _dups -> d
    com.fasterxml.jackson.core.json.JsonReadContext _child -> e
    java.lang.String _currentName -> f
    java.lang.Object _currentValue -> g
    int _lineNr -> h
    int _columnNr -> i
    57:64:void <init>(com.fasterxml.jackson.core.json.JsonReadContext,com.fasterxml.jackson.core.json.DupDetector,int,int,int) -> <init>
    67:76:void reset(int,int,int) -> a
    85:86:com.fasterxml.jackson.core.json.JsonReadContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector) -> a
    91:91:java.lang.Object getCurrentValue() -> i
    96:97:void setCurrentValue(java.lang.Object) -> a
    110:110:com.fasterxml.jackson.core.json.JsonReadContext createRootContext(com.fasterxml.jackson.core.json.DupDetector) -> b
    114:121:com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int) -> a
    125:132:com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int) -> b
    141:141:java.lang.String getCurrentName() -> h
    146:146:com.fasterxml.jackson.core.json.JsonReadContext getParent() -> j
    151:152:com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object) -> b
    172:174:com.fasterxml.jackson.core.json.JsonReadContext clearAndGetParent() -> k
    178:178:com.fasterxml.jackson.core.json.DupDetector getDupDetector() -> l
    192:193:boolean expectComma() -> m
    197:199:void setCurrentName(java.lang.String) -> a
    202:207:void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String) -> a
    10:10:com.fasterxml.jackson.core.JsonStreamContext getParent() -> a
com.fasterxml.jackson.core.json.JsonWriteContext -> b.a.a.b.e.e:
    com.fasterxml.jackson.core.json.JsonWriteContext _parent -> c
    com.fasterxml.jackson.core.json.DupDetector _dups -> d
    com.fasterxml.jackson.core.json.JsonWriteContext _child -> e
    java.lang.String _currentName -> f
    java.lang.Object _currentValue -> g
    boolean _gotName -> h
    70:75:void <init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector) -> <init>
    78:84:com.fasterxml.jackson.core.json.JsonWriteContext reset(int) -> a
    88:89:com.fasterxml.jackson.core.json.JsonWriteContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector) -> a
    94:94:java.lang.Object getCurrentValue() -> i
    99:100:void setCurrentValue(java.lang.Object) -> a
    115:115:com.fasterxml.jackson.core.json.JsonWriteContext createRootContext(com.fasterxml.jackson.core.json.DupDetector) -> b
    119:124:com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext() -> j
    128:133:com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext() -> k
    136:136:com.fasterxml.jackson.core.json.JsonWriteContext getParent() -> l
    137:137:java.lang.String getCurrentName() -> h
    152:154:com.fasterxml.jackson.core.json.JsonWriteContext clearAndGetParent() -> m
    158:158:com.fasterxml.jackson.core.json.DupDetector getDupDetector() -> n
    167:173:int writeFieldName(java.lang.String) -> a
    177:182:void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String) -> a
    186:205:int writeValue() -> o
    10:10:com.fasterxml.jackson.core.JsonStreamContext getParent() -> a
com.fasterxml.jackson.core.json.ReaderBasedJsonParser -> b.a.a.b.e.f:
    int FEAT_MASK_TRAILING_COMMA -> P
    int[] _icLatin1 -> Q
    java.io.Reader _reader -> R
    char[] _inputBuffer -> S
    boolean _bufferRecyclable -> T
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> U
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols -> V
    int _hashSeed -> W
    boolean _tokenIncomplete -> X
    long _nameStartOffset -> Y
    int _nameStartRow -> Z
    int _nameStartCol -> aa
    118:127:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean) -> <init>
    136:145:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> <init>
    153:153:com.fasterxml.jackson.core.ObjectCodec getCodec() -> a
    170:170:char getNextChar(java.lang.String) -> f
    174:179:char getNextChar(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> b
    191:197:void _closeInput() -> Y
    207:218:void _releaseBuffers() -> Z
    227:228:void _loadMoreGuaranteed() -> aq
    232:256:boolean _loadMore() -> ar
    274:282:java.lang.String getText() -> t
    318:328:java.lang.String getValueAsString() -> M
    334:344:java.lang.String getValueAsString(java.lang.String) -> a
    348:361:java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> c
    368:396:char[] getTextCharacters() -> u
    402:419:int getTextLength() -> v
    426:442:int getTextOffset() -> w
    448:473:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> a
    480:491:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> a
    496:617:int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> a
    637:756:com.fasterxml.jackson.core.JsonToken nextToken() -> f
    761:773:com.fasterxml.jackson.core.JsonToken _nextAfterName() -> az
    872:962:java.lang.String nextFieldName() -> h
    1071:1123:com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> k
    1130:1150:java.lang.String nextTextValue() -> i
    1258:1301:com.fasterxml.jackson.core.JsonToken _parsePosNumber(int) -> h
    1307:1365:com.fasterxml.jackson.core.JsonToken _parseFloat(int,int,int,boolean,int) -> a
    1370:1413:com.fasterxml.jackson.core.JsonToken _parseNegNumber() -> as
    1425:1548:com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int) -> b
    1558:1566:char _verifyNoLeadingZeroes() -> aA
    1571:1595:char _verifyNLZ2() -> aB
    1604:1628:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> a
    1641:1655:void _verifyRootSpace(int) -> l
    1667:1686:java.lang.String _parseName() -> at
    1691:1739:java.lang.String _parseName2(int,int,int) -> a
    1752:1797:java.lang.String _handleOddName(int) -> i
    1803:1829:java.lang.String _parseAposName() -> au
    1839:1893:com.fasterxml.jackson.core.JsonToken _handleOddValue(int) -> j
    1898:1935:com.fasterxml.jackson.core.JsonToken _handleApos() -> av
    1940:1978:java.lang.String _handleOddName2(int,int,int[]) -> a
    1989:2017:void _finishString() -> al
    2021:2057:void _finishString2() -> aw
    2066:2104:void _skipString() -> ax
    2117:2124:void _skipCR() -> ay
    2128:2177:int _skipColon() -> aC
    2182:2216:int _skipColon2(boolean) -> a
    2270:2293:int _skipComma(int) -> m
    2298:2323:int _skipAfterComma2() -> aD
    2330:2374:int _skipWSOrEnd() -> aE
    2380:2407:int _skipWSOrEnd2() -> aF
    2412:2427:void _skipComment() -> aG
    2432:2458:void _skipCComment() -> aH
    2462:2466:boolean _skipYAMLComment() -> aI
    2472:2487:void _skipLine() -> aJ
    2492:2540:char _decodeEscaped() -> aj
    2544:2557:void _matchTrue() -> aK
    2560:2573:void _matchFalse() -> aL
    2576:2589:void _matchNull() -> aM
    2596:2612:void _matchToken(java.lang.String,int) -> a
    2616:2633:void _matchToken2(java.lang.String,int) -> b
    2637:2641:void _checkMatchEnd(java.lang.String,int,int) -> a
    2656:2759:byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> b
    2771:2776:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> d
    2782:2783:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> e
    2791:2795:void _updateLocation() -> aN
    2800:2804:void _updateNameLocation() -> aO
    2813:2814:void _reportInvalidToken(java.lang.String) -> g
    2822:2836:void _reportInvalidToken(java.lang.String,java.lang.String) -> a
    2845:2861:void _closeScope(int) -> n
    22:26:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser -> b.a.a.b.e.g:
    int[] _icUTF8 -> W
    int[] _icLatin1 -> P
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> Q
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols -> R
    int[] _quadBuffer -> S
    boolean _tokenIncomplete -> T
    int _quad1 -> X
    java.io.DataInput _inputData -> U
    int _nextByte -> V
    74:117:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.DataInput,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,int) -> <init>
    121:121:com.fasterxml.jackson.core.ObjectCodec getCodec() -> a
    152:152:void _closeInput() -> Y
    163:166:void _releaseBuffers() -> Z
    177:184:java.lang.String getText() -> t
    218:228:java.lang.String getValueAsString() -> M
    234:244:java.lang.String getValueAsString(java.lang.String) -> a
    250:263:int getValueAsInt() -> K
    269:282:int getValueAsInt(int) -> c
    287:300:java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> c
    307:338:char[] getTextCharacters() -> u
    344:360:int getTextLength() -> v
    367:383:int getTextOffset() -> w
    389:414:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> a
    421:432:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> a
    438:543:int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> a
    559:673:com.fasterxml.jackson.core.JsonToken nextToken() -> f
    678:716:com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> o
    721:731:com.fasterxml.jackson.core.JsonToken _nextAfterName() -> au
    756:844:java.lang.String nextFieldName() -> h
    851:870:java.lang.String nextTextValue() -> i
    973:1010:com.fasterxml.jackson.core.JsonToken _parsePosNumber(int) -> h
    1015:1055:com.fasterxml.jackson.core.JsonToken _parseNegNumber() -> aq
    1067:1080:int _handleLeadingZeroes() -> av
    1086:1152:com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int) -> a
    1165:1174:void _verifyRootSpace() -> aw
    1184:1235:java.lang.String _parseName(int) -> i
    1240:1274:java.lang.String _parseMediumName(int) -> p
    1279:1313:java.lang.String _parseMediumName2(int,int) -> d
    1318:1368:java.lang.String _parseLongName(int,int,int) -> a
    1372:1372:java.lang.String parseName(int,int,int) -> b
    1376:1377:java.lang.String parseName(int,int,int,int) -> a
    1381:1383:java.lang.String parseName(int,int,int,int,int) -> a
    1400:1478:java.lang.String parseEscapedName(int[],int,int,int,int) -> a
    1489:1545:java.lang.String _handleOddName(int) -> j
    1556:1645:java.lang.String _parseAposName() -> ar
    1656:1664:java.lang.String findName(int,int) -> e
    1669:1678:java.lang.String findName(int,int,int) -> c
    1683:1692:java.lang.String findName(int,int,int,int) -> b
    1697:1705:java.lang.String findName(int[],int,int,int) -> a
    1721:1819:java.lang.String addName(int[],int,int) -> a
    1831:1849:void _finishString() -> al
    1853:1870:java.lang.String _finishAndReturnString() -> ax
    1877:1936:void _finishString2(char[],int,int) -> a
    1945:1988:void _skipString() -> as
    1998:2046:com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> k
    2051:2119:com.fasterxml.jackson.core.JsonToken _handleApos() -> at
    2129:2146:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> a
    2151:2164:void _matchToken(java.lang.String,int) -> a
    2168:2172:void _checkMatchEnd(java.lang.String,int,int) -> a
    2182:2201:int _skipWS() -> ay
    2213:2240:int _skipWSOrEnd() -> az
    2247:2269:int _skipWSComment(int) -> q
    2275:2323:int _skipColon() -> aA
    2328:2350:int _skipColon2(int,boolean) -> b
    2358:2369:void _skipComment() -> aB
    2374:2408:void _skipCComment() -> aC
    2413:2417:boolean _skipYAMLComment() -> aD
    2427:2455:void _skipLine() -> aE
    2461:2499:char _decodeEscaped() -> aj
    2504:2545:int _decodeCharForError(int) -> l
    2556:2560:int _decodeUtf8_2(int) -> r
    2565:2576:int _decodeUtf8_3(int) -> s
    2585:2603:int _decodeUtf8_4(int) -> t
    2608:2612:void _skipUtf8_2() -> aF
    2620:2628:void _skipUtf8_3() -> aG
    2632:2644:void _skipUtf8_4() -> aH
    2654:2655:void _reportInvalidToken(int,java.lang.String) -> d
    2660:2675:void _reportInvalidToken(int,java.lang.String,java.lang.String) -> a
    2681:2685:void _reportInvalidChar(int) -> m
    2690:2691:void _reportInvalidInitial(int) -> n
    2696:2697:void _reportInvalidOther(int) -> u
    2701:2704:int[] _growArrayBy(int[],int) -> b
    2720:2804:byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> b
    2815:2815:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> d
    2820:2820:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> e
    2830:2844:void _closeScope(int) -> v
    2850:2850:int pad(int,int) -> f
    41:45:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8JsonGenerator -> b.a.a.b.e.h:
    byte[] HEX_CHARS -> x
    byte[] NULL_BYTES -> y
    byte[] TRUE_BYTES -> z
    byte[] FALSE_BYTES -> A
    java.io.OutputStream _outputStream -> o
    byte _quoteChar -> p
    byte[] _outputBuffer -> q
    int _outputTail -> r
    int _outputEnd -> s
    int _outputMaxContiguous -> t
    char[] _charBuffer -> u
    int _charBufferLength -> v
    boolean _bufferRecyclable -> w
    55:137:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream) -> <init>
    182:227:void writeFieldName(java.lang.String) -> a
    232:264:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> b
    267:273:void _writeUnq(com.fasterxml.jackson.core.SerializableString) -> g
    284:294:void writeStartArray() -> g
    299:311:void writeEndArray() -> h
    316:326:void writeStartObject() -> i
    331:345:void writeStartObject(java.lang.Object) -> b
    350:362:void writeEndObject() -> j
    370:406:void _writePPFieldName(java.lang.String) -> k
    410:434:void _writePPFieldName(com.fasterxml.jackson.core.SerializableString) -> f
    445:465:void writeString(java.lang.String) -> b
    513:532:void writeString(char[],int,int) -> a
    537:552:void writeString(com.fasterxml.jackson.core.SerializableString) -> c
    597:605:void writeRaw(java.lang.String) -> c
    610:649:void writeRaw(java.lang.String,int,int) -> a
    654:658:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> d
    663:668:void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> e
    676:711:void writeRaw(char[],int,int) -> b
    716:728:void writeRaw(char) -> a
    736:768:void _writeSegmentedRaw(char[],int,int) -> c
    782:802:void _writeRawSegment(char[],int,int) -> d
    815:827:void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> a
    834:860:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> a
    872:882:void writeNumber(short) -> a
    885:891:void _writeQuotedShort(short) -> b
    896:906:void writeNumber(int) -> d
    910:916:void _writeQuotedInt(int) -> e
    921:931:void writeNumber(long) -> b
    935:941:void _writeQuotedLong(long) -> c
    946:954:void writeNumber(java.math.BigInteger) -> a
    960:969:void writeNumber(double) -> a
    974:984:void writeNumber(float) -> a
    990:998:void writeNumber(java.math.BigDecimal) -> a
    1003:1009:void writeNumber(java.lang.String) -> e
    1013:1022:void _writeQuotedRaw(java.lang.String) -> l
    1027:1035:void writeBoolean(boolean) -> a
    1040:1042:void writeNull() -> k
    1053:1086:void _verifyValueWrite(java.lang.String) -> i
    1097:1103:void flush() -> flush
    1108:1146:void close() -> close
    1151:1161:void _releaseBuffers() -> o
    1171:1182:void _writeBytes(byte[]) -> b
    1213:1239:void _writeStringSegments(java.lang.String,boolean) -> a
    1250:1258:void _writeStringSegments(char[],int,int) -> e
    1263:1271:void _writeStringSegments(java.lang.String,int,int) -> b
    1293:1321:void _writeStringSegment(char[],int,int) -> f
    1327:1352:void _writeStringSegment(java.lang.String,int,int) -> c
    1361:1395:void _writeStringSegment2(char[],int,int) -> g
    1399:1433:void _writeStringSegment2(java.lang.String,int,int) -> d
    1449:1488:void _writeStringSegmentASCII2(char[],int,int) -> h
    1493:1532:void _writeStringSegmentASCII2(java.lang.String,int,int) -> e
    1548:1600:void _writeCustomStringSegment2(char[],int,int) -> i
    1605:1657:void _writeCustomStringSegment2(java.lang.String,int,int) -> f
    1662:1669:int _writeCustomEscape(byte[],int,com.fasterxml.jackson.core.SerializableString,int) -> a
    1676:1693:int _handleLongCustomEscape(byte[],int,int,byte[],int) -> a
    1786:1821:void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> b
    1828:1880:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> a
    1888:1937:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> a
    1945:1964:int _readMore(java.io.InputStream,byte[],int,int,int) -> a
    1982:1997:int _outputRawMultiByteChar(int,char[],int,int) -> a
    2002:2011:void _outputSurrogates(int,int) -> e
    2024:2043:int _outputMultiByteChar(int,int) -> f
    2048:2053:void _writeNull() -> q
    2062:2077:int _writeGenericEscape(int,int) -> g
    2082:2087:void _flushBuffer() -> p
    32:36:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8StreamJsonParser -> b.a.a.b.e.i:
    int[] _icUTF8 -> ab
    int[] _icLatin1 -> P
    int FEAT_MASK_TRAILING_COMMA -> Q
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> R
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols -> S
    int[] _quadBuffer -> T
    boolean _tokenIncomplete -> U
    int _quad1 -> ac
    int _nameStartOffset -> V
    int _nameStartRow -> W
    int _nameStartCol -> X
    java.io.InputStream _inputStream -> Y
    byte[] _inputBuffer -> Z
    boolean _bufferRecyclable -> aa
    59:145:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.InputStream,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,byte[],int,int,boolean) -> <init>
    149:149:com.fasterxml.jackson.core.ObjectCodec getCodec() -> a
    189:218:boolean _loadMore() -> aq
    226:232:void _closeInput() -> Y
    243:255:void _releaseBuffers() -> Z
    266:273:java.lang.String getText() -> t
    309:319:java.lang.String getValueAsString() -> M
    326:336:java.lang.String getValueAsString(java.lang.String) -> a
    343:356:int getValueAsInt() -> K
    363:376:int getValueAsInt(int) -> c
    381:394:java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> c
    401:432:char[] getTextCharacters() -> u
    438:457:int getTextLength() -> v
    464:480:int getTextOffset() -> w
    486:511:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> a
    518:529:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> a
    535:656:int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> a
    676:784:com.fasterxml.jackson.core.JsonToken nextToken() -> f
    789:826:com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> q
    831:843:com.fasterxml.jackson.core.JsonToken _nextAfterName() -> aC
    950:1050:java.lang.String nextFieldName() -> h
    1213:1233:java.lang.String nextTextValue() -> i
    1338:1372:com.fasterxml.jackson.core.JsonToken _parsePosNumber(int) -> h
    1377:1430:com.fasterxml.jackson.core.JsonToken _parseNegNumber() -> ar
    1442:1468:com.fasterxml.jackson.core.JsonToken _parseNumber2(char[],int,boolean,int) -> a
    1479:1505:int _verifyNoLeadingZeroes() -> aD
    1511:1602:com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int) -> a
    1615:1630:void _verifyRootSpace(int) -> r
    1640:1697:java.lang.String _parseName(int) -> i
    1702:1737:java.lang.String parseMediumName(int) -> j
    1745:1780:java.lang.String parseMediumName2(int,int) -> d
    1785:1842:java.lang.String parseLongName(int,int,int) -> a
    1852:1861:java.lang.String slowParseName() -> as
    1865:1865:java.lang.String parseName(int,int,int) -> b
    1869:1870:java.lang.String parseName(int,int,int,int) -> a
    1874:1876:java.lang.String parseName(int,int,int,int,int) -> a
    1891:1972:java.lang.String parseEscapedName(int[],int,int,int,int) -> a
    1984:2045:java.lang.String _handleOddName(int) -> k
    2055:2151:java.lang.String _parseAposName() -> at
    2162:2170:java.lang.String findName(int,int) -> f
    2175:2184:java.lang.String findName(int,int,int) -> c
    2189:2198:java.lang.String findName(int,int,int,int) -> b
    2203:2211:java.lang.String findName(int[],int,int,int) -> a
    2227:2325:java.lang.String addName(int[],int,int) -> a
    2332:2332:int _padLastQuad(int,int) -> g
    2342:2343:void _loadMoreGuaranteed() -> au
    2349:2375:void _finishString() -> al
    2383:2408:java.lang.String _finishAndReturnString() -> av
    2417:2493:void _finishString2(char[],int) -> a
    2502:2557:void _skipString() -> aw
    2566:2625:com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> l
    2630:2714:com.fasterxml.jackson.core.JsonToken _handleApos() -> ax
    2729:2752:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> a
    2758:2772:void _matchTrue() -> ay
    2776:2791:void _matchFalse() -> az
    2795:2809:void _matchNull() -> aA
    2813:2829:void _matchToken(java.lang.String,int) -> a
    2833:2850:void _matchToken2(java.lang.String,int) -> b
    2854:2858:void _checkMatchEnd(java.lang.String,int,int) -> a
    2868:2888:int _skipWS() -> aE
    2893:2918:int _skipWS2() -> aF
    2925:2969:int _skipWSOrEnd() -> aG
    2974:2999:int _skipWSOrEnd2() -> aH
    3004:3054:int _skipColon() -> aI
    3059:3092:int _skipColon2(boolean) -> a
    3097:3112:void _skipComment() -> aJ
    3117:3158:void _skipCComment() -> aK
    3162:3166:boolean _skipYAMLComment() -> aL
    3176:3208:void _skipLine() -> aM
    3213:3261:char _decodeEscaped() -> aj
    3266:3307:int _decodeCharForError(int) -> m
    3318:3325:int _decodeUtf8_2(int) -> s
    3330:3347:int _decodeUtf8_3(int) -> t
    3352:3363:int _decodeUtf8_3fast(int) -> u
    3372:3400:int _decodeUtf8_4(int) -> v
    3405:3412:void _skipUtf8_2() -> aN
    3419:3434:void _skipUtf8_3() -> aO
    3438:3459:void _skipUtf8_4(int) -> w
    3473:3480:void _skipCR() -> aB
    3484:3487:int nextByte() -> aP
    3502:3503:void _reportInvalidToken(java.lang.String) -> f
    3511:3527:void _reportInvalidToken(java.lang.String,java.lang.String) -> a
    3532:3536:void _reportInvalidChar(int) -> n
    3539:3540:void _reportInvalidInitial(int) -> o
    3543:3544:void _reportInvalidOther(int) -> p
    3549:3551:void _reportInvalidOther(int,int) -> e
    3566:3667:byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> b
    3680:3685:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> d
    3693:3694:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> e
    3702:3706:void _updateLocation() -> aQ
    3711:3715:void _updateNameLocation() -> aR
    3724:3729:com.fasterxml.jackson.core.JsonToken _closeScope(int) -> x
    3733:3738:void _closeArrayScope() -> aS
    3741:3746:void _closeObjectScope() -> aT
    24:30:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator -> b.a.a.b.e.j:
    char[] HEX_CHARS -> o
    java.io.Writer _writer -> p
    char _quoteChar -> q
    char[] _outputBuffer -> r
    int _outputHead -> s
    int _outputTail -> t
    int _outputEnd -> u
    char[] _entityBuffer -> v
    com.fasterxml.jackson.core.SerializableString _currentEscape -> w
    char[] _charBuffer -> x
    38:102:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer) -> <init>
    135:140:void writeFieldName(java.lang.String) -> a
    146:151:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> b
    155:180:void _writeFieldName(java.lang.String,boolean) -> a
    184:217:void _writeFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> a
    228:238:void writeStartArray() -> g
    243:255:void writeEndArray() -> h
    260:274:void writeStartObject(java.lang.Object) -> b
    279:289:void writeStartObject() -> i
    294:306:void writeEndObject() -> j
    314:333:void _writePPFieldName(java.lang.String,boolean) -> b
    337:357:void _writePPFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> b
    368:383:void writeString(java.lang.String) -> b
    428:439:void writeString(char[],int,int) -> a
    444:469:void writeString(com.fasterxml.jackson.core.SerializableString) -> c
    493:507:void writeRaw(java.lang.String) -> c
    531:532:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> d
    538:550:void writeRaw(char[],int,int) -> b
    555:559:void writeRaw(char) -> a
    563:584:void writeRawLong(java.lang.String) -> k
    596:608:void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> a
    615:641:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> a
    653:663:void writeNumber(short) -> a
    666:672:void _writeQuotedShort(short) -> b
    677:687:void writeNumber(int) -> d
    690:696:void _writeQuotedInt(int) -> e
    701:711:void writeNumber(long) -> b
    714:720:void _writeQuotedLong(long) -> c
    727:735:void writeNumber(java.math.BigInteger) -> a
    741:750:void writeNumber(double) -> a
    755:764:void writeNumber(float) -> a
    770:778:void writeNumber(java.math.BigDecimal) -> a
    783:789:void writeNumber(java.lang.String) -> e
    793:802:void _writeQuotedRaw(java.lang.String) -> l
    807:826:void writeBoolean(boolean) -> a
    830:832:void writeNull() -> k
    843:873:void _verifyValueWrite(java.lang.String) -> i
    884:890:void flush() -> flush
    895:934:void close() -> close
    939:949:void _releaseBuffers() -> o
    964:984:void _writeString(java.lang.String) -> m
    989:1021:void _writeString2(int) -> f
    1030:1049:void _writeLongString(java.lang.String) -> n
    1062:1097:void _writeSegment(int) -> g
    1105:1157:void _writeString(char[],int,int) -> c
    1173:1205:void _writeStringASCII(int,int) -> e
    1210:1246:void _writeSegmentASCII(int,int) -> f
    1252:1301:void _writeStringASCII(char[],int,int,int) -> a
    1317:1356:void _writeStringCustom(int) -> h
    1361:1404:void _writeSegmentCustom(int) -> i
    1409:1465:void _writeStringCustom(char[],int,int) -> d
    1477:1512:void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> b
    1519:1571:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> a
    1579:1628:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> a
    1636:1655:int _readMore(java.io.InputStream,byte[],int,int,int) -> a
    1666:1676:void _writeNull() -> q
    1692:1770:void _prependOrWriteCharacterEscape(char,int) -> a
    1783:1853:int _prependOrWriteCharacterEscape(char[],int,int,char,int) -> a
    1863:1911:void _appendCharacterEscape(char,int) -> b
    1915:1927:char[] _allocateEntityBuffer() -> r
    1942:1948:void _flushBuffer() -> p
    22:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer -> b.a.a.b.f.a:
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent -> a
    java.util.concurrent.atomic.AtomicReference _tableInfo -> b
    int _seed -> c
    boolean _intern -> d
    boolean _failOnDoS -> e
    int[] _hashArea -> f
    int _hashSize -> g
    int _secondaryStart -> h
    int _tertiaryStart -> i
    int _tertiaryShift -> j
    int _count -> k
    java.lang.String[] _names -> l
    int _spilloverEnd -> m
    int _longNameOffset -> n
    boolean _needRehash -> o
    boolean _hashShared -> p
    222:242:void <init>(int,boolean,int,boolean) -> <init>
    249:272:void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,boolean,int,boolean,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo) -> <init>
    287:290:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot() -> a
    296:296:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot(int) -> a
    304:308:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int) -> b
    320:326:void release() -> b
    330:348:void mergeChild(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo) -> a
    375:375:boolean maybeDirty() -> c
    386:392:int primaryCount() -> d
    400:407:int secondaryCount() -> e
    415:422:int tertiaryCount() -> f
    431:431:int spilloverCount() -> g
    436:442:int totalCount() -> h
    447:454:java.lang.String toString() -> toString
    465:492:java.lang.String findName(int) -> c
    497:522:java.lang.String findName(int,int) -> a
    527:550:java.lang.String findName(int,int,int) -> a
    559:596:java.lang.String findName(int[],int) -> a
    604:606:int _calcOffset(int) -> f
    621:641:java.lang.String _findSecondary(int,int) -> c
    646:664:java.lang.String _findSecondary(int,int,int) -> c
    669:688:java.lang.String _findSecondary(int,int,int,int) -> a
    693:715:java.lang.String _findSecondary(int,int,int[],int) -> a
    720:741:boolean _verifyLongName(int[],int,int) -> a
    746:752:boolean _verifyLongName2(int[],int,int) -> b
    809:855:java.lang.String addName(java.lang.String,int[],int) -> a
    860:867:void _verifyNeedForRehash() -> j
    871:882:void _verifySharing() -> k
    890:934:int _findOffsetForAdd(int) -> g
    939:953:int _appendLongName(int[],int) -> c
    978:987:int calcHash(int) -> d
    994:1004:int calcHash(int,int) -> b
    1009:1022:int calcHash(int,int,int) -> b
    1027:1053:int calcHash(int[],int) -> b
    1064:1142:void rehash() -> l
    1149:1158:void nukeSymbols(boolean) -> a
    1172:1173:int _spilloverStart() -> m
    1179:1182:void _reportTooManyCollisions() -> i
    1191:1204:int _calcTertiaryShift(int) -> e
    17:17:int access$000(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> a
    17:17:int access$100(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> b
    17:17:int access$200(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> c
    17:17:int[] access$300(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> d
    17:17:java.lang.String[] access$400(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> e
    17:17:int access$500(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> f
    17:17:int access$600(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> g
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo -> b.a.a.b.f.b:
    int size -> a
    int count -> b
    int tertiaryShift -> c
    int[] mainHash -> d
    java.lang.String[] names -> e
    int spilloverEnd -> f
    int longNameOffset -> g
    1232:1240:void <init>(int,int,int,int[],java.lang.String[],int,int) -> <init>
    1243:1251:void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    1254:1257:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo createInitial(int) -> a
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer -> b.a.a.b.f.c:
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _parent -> a
    java.util.concurrent.atomic.AtomicReference _tableInfo -> b
    int _seed -> c
    int _flags -> d
    boolean _canonicalize -> e
    java.lang.String[] _symbols -> f
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets -> g
    int _size -> h
    int _sizeThreshold -> i
    int _indexMask -> j
    int _longestCollisionList -> k
    boolean _hashShared -> l
    java.util.BitSet _overflows -> m
    232:246:void <init>(int) -> <init>
    253:274:void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo) -> <init>
    276:276:int _thresholdSize(int) -> e
    293:296:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot() -> a
    300:300:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot(int) -> a
    315:315:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int) -> b
    326:335:void release() -> b
    346:363:void mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo) -> a
    386:386:boolean maybeDirty() -> c
    387:387:int hashSeed() -> d
    424:463:java.lang.String findSymbol(char[],int,int,int) -> a
    467:474:java.lang.String _findSymbol2(char[],int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket) -> a
    479:511:java.lang.String _addSymbol(char[],int,int,int,int) -> a
    516:538:void _handleSpillOverflow(int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket) -> a
    546:549:int _hashToIndex(int) -> c
    562:567:int calcHash(char[],int,int) -> a
    572:579:int calcHash(java.lang.String) -> a
    593:597:void copyArrays() -> e
    607:682:void rehash() -> f
    688:688:void reportTooManyCollisions(int) -> d
    45:45:int access$000(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> a
    45:45:int access$100(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> b
    45:45:java.lang.String[] access$200(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> c
    45:45:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] access$300(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> d
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket -> b.a.a.b.f.d:
    java.lang.String symbol -> a
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket next -> b
    int length -> c
    757:761:void <init>(java.lang.String,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket) -> <init>
    764:773:java.lang.String has(char[],int,int) -> a
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo -> b.a.a.b.f.e:
    int size -> a
    int longestCollisionList -> b
    java.lang.String[] symbols -> c
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] buckets -> d
    793:798:void <init>(int,int,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[]) -> <init>
    801:806:void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> <init>
    809:809:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo createInitial(int) -> a
com.fasterxml.jackson.core.type.ResolvedType -> b.a.a.b.g.a:
    14:14:void <init>() -> <init>
    59:59:boolean isReferenceType() -> a
    com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> b
    java.lang.String toCanonical() -> c
com.fasterxml.jackson.core.type.WritableTypeId -> b.a.a.b.g.b:
    java.lang.Object forValue -> a
    java.lang.Class forValueType -> b
    java.lang.Object id -> c
    java.lang.String asProperty -> d
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion include -> e
    com.fasterxml.jackson.core.JsonToken valueShape -> f
    boolean wrapperWritten -> g
    156:156:void <init>() -> <init>
    163:164:void <init>(java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> <init>
    182:186:void <init>(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> <init>
com.fasterxml.jackson.core.type.WritableTypeId$Inclusion -> b.a.a.b.g.c:
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion WRAPPER_ARRAY -> a
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion WRAPPER_OBJECT -> b
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion METADATA_PROPERTY -> c
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion PAYLOAD_PROPERTY -> d
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion PARENT_PROPERTY -> e
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion[] $VALUES -> f
    34:34:com.fasterxml.jackson.core.type.WritableTypeId$Inclusion[] values() -> values
    34:34:com.fasterxml.jackson.core.type.WritableTypeId$Inclusion valueOf(java.lang.String) -> valueOf
    34:34:void <init>(java.lang.String,int) -> <init>
    95:95:boolean requiresObjectContext() -> a
    34:92:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.BufferRecycler -> b.a.a.b.h.a:
    int[] BYTE_BUFFER_LENGTHS -> c
    int[] CHAR_BUFFER_LENGTHS -> d
    byte[][] _byteBuffers -> a
    char[][] _charBuffers -> b
    62:63:void <init>() -> <init>
    71:74:void <init>(int,int) -> <init>
    86:86:byte[] allocByteBuffer(int) -> a
    90:100:byte[] allocByteBuffer(int,int) -> a
    104:105:void releaseByteBuffer(int,byte[]) -> a
    114:114:char[] allocCharBuffer(int) -> b
    118:128:char[] allocCharBuffer(int,int) -> b
    132:133:void releaseCharBuffer(int,char[]) -> a
    142:142:int byteBufferLength(int) -> c
    146:146:int charBufferLength(int) -> d
    155:155:byte[] balloc(int) -> e
    156:156:char[] calloc(int) -> f
    45:46:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.BufferRecyclers -> b.a.a.b.h.b:
    java.lang.ThreadLocal _recyclerRef -> a
    java.lang.ThreadLocal _encoderRef -> b
    34:41:com.fasterxml.jackson.core.util.BufferRecycler getBufferRecycler() -> a
    59:66:com.fasterxml.jackson.core.io.JsonStringEncoder getJsonStringEncoder() -> b
    75:75:byte[] encodeAsUTF8(java.lang.String) -> a
    82:82:char[] quoteAsJsonText(java.lang.String) -> b
    96:96:byte[] quoteAsJsonUTF8(java.lang.String) -> c
    29:55:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.ByteArrayBuilder -> b.a.a.b.h.c:
    byte[] NO_BYTES -> a
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> b
    java.util.LinkedList _pastBlocks -> c
    int _pastLen -> d
    byte[] _currBlock -> e
    int _currBlockPtr -> f
    51:51:void <init>() -> <init>
    52:52:void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    53:53:void <init>(int) -> <init>
    44:58:void <init>(com.fasterxml.jackson.core.util.BufferRecycler,int) -> <init>
    61:67:void reset() -> a
    82:87:void release() -> b
    90:94:void append(int) -> a
    97:104:void appendTwoBytes(int) -> b
    107:116:void appendThreeBytes(int) -> c
    141:163:byte[] toByteArray() -> c
    177:178:byte[] resetAndGetFirstSegment() -> d
    187:188:byte[] finishCurrentSegment() -> e
    201:202:byte[] completeAndCoalesce(int) -> d
    205:205:byte[] getCurrentSegment() -> f
    206:206:void setCurrentSegmentLength(int) -> e
    207:207:int getCurrentSegmentLength() -> g
    217:218:void write(byte[]) -> write
    224:235:void write(byte[],int,int) -> write
    239:240:void write(int) -> write
    242:242:void close() -> close
    243:243:void flush() -> flush
    253:277:void _allocMore() -> h
    31:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultIndenter -> b.a.a.b.h.d:
    java.lang.String SYS_LF -> a
    com.fasterxml.jackson.core.util.DefaultIndenter SYSTEM_LINEFEED_INSTANCE -> b
    char[] indents -> d
    int charsPerLevel -> e
    java.lang.String eol -> f
    44:45:void <init>() -> <init>
    52:63:void <init>(java.lang.String,java.lang.String) -> <init>
    82:82:boolean isInline() -> a
    87:96:void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> a
    22:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter -> b.a.a.b.h.e:
    com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR -> c
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter -> d
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter -> e
    com.fasterxml.jackson.core.SerializableString _rootSeparator -> f
    boolean _spacesInObjectEntries -> g
    int _nesting -> h
    com.fasterxml.jackson.core.util.Separators _separators -> i
    java.lang.String _objectFieldValueSeparatorWithSpaces -> j
    101:102:void <init>() -> <init>
    52:130:void <init>(com.fasterxml.jackson.core.SerializableString) -> <init>
    133:134:void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter) -> <init>
    52:148:void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter,com.fasterxml.jackson.core.SerializableString) -> <init>
    242:244:com.fasterxml.jackson.core.util.DefaultPrettyPrinter withSeparators(com.fasterxml.jackson.core.util.Separators) -> a
    255:255:com.fasterxml.jackson.core.util.DefaultPrettyPrinter createInstance() -> a
    267:270:void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> a
    275:279:void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> b
    284:285:void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> h
    299:304:void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> d
    318:320:void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> c
    325:334:void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> a
    339:343:void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> e
    347:348:void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> g
    362:364:void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> f
    369:378:void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> b
    15:15:java.lang.Object createInstance() -> b
    28:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter -> b.a.a.b.h.f:
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter instance -> a
    406:406:void <init>() -> <init>
    413:414:void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> a
    417:417:boolean isInline() -> a
    408:408:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter -> b.a.a.b.h.g:
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> a
    boolean isInline() -> a
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter -> b.a.a.b.h.h:
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter instance -> c
    389:389:void <init>() -> <init>
    395:395:void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> a
    398:398:boolean isInline() -> a
    392:392:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.Instantiatable -> b.a.a.b.h.i:
    java.lang.Object createInstance() -> b
com.fasterxml.jackson.core.util.InternCache -> b.a.a.b.h.j:
    com.fasterxml.jackson.core.util.InternCache instance -> a
    java.lang.Object lock -> b
    36:38:void <init>() -> <init>
    41:62:java.lang.String intern(java.lang.String) -> a
    29:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.JsonParserDelegate -> b.a.a.b.h.k:
    com.fasterxml.jackson.core.JsonParser delegate -> m
    25:27:void <init>(com.fasterxml.jackson.core.JsonParser) -> <init>
    36:37:void setCurrentValue(java.lang.Object) -> a
    46:46:com.fasterxml.jackson.core.ObjectCodec getCodec() -> a
    60:60:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> a
    66:67:com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> a
    72:73:com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> a
    78:79:com.fasterxml.jackson.core.JsonParser overrideFormatFeatures(int,int) -> b
    83:83:void setSchema(com.fasterxml.jackson.core.FormatSchema) -> a
    94:94:boolean requiresCustomCodec() -> b
    102:102:void close() -> close
    111:111:com.fasterxml.jackson.core.JsonToken currentToken() -> k
    114:114:com.fasterxml.jackson.core.JsonToken getCurrentToken() -> l
    115:115:int getCurrentTokenId() -> m
    116:116:boolean hasCurrentToken() -> n
    117:117:boolean hasTokenId(int) -> b
    118:118:boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> a
    120:120:java.lang.String getCurrentName() -> s
    121:121:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> e
    122:122:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> c
    123:123:boolean isExpectedStartArrayToken() -> o
    124:124:boolean isExpectedStartObjectToken() -> p
    125:125:boolean isNaN() -> q
    133:133:void clearCurrentToken() -> r
    143:143:java.lang.String getText() -> t
    144:144:boolean hasTextCharacters() -> x
    145:145:char[] getTextCharacters() -> u
    146:146:int getTextLength() -> v
    147:147:int getTextOffset() -> w
    157:157:java.math.BigInteger getBigIntegerValue() -> E
    163:163:byte getByteValue() -> A
    166:166:short getShortValue() -> B
    169:169:java.math.BigDecimal getDecimalValue() -> H
    172:172:double getDoubleValue() -> G
    175:175:float getFloatValue() -> F
    178:178:int getIntValue() -> C
    181:181:long getLongValue() -> D
    184:184:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> z
    187:187:java.lang.Number getNumberValue() -> y
    195:195:int getValueAsInt() -> K
    196:196:int getValueAsInt(int) -> c
    197:197:long getValueAsLong() -> L
    198:198:long getValueAsLong(long) -> a
    203:203:java.lang.String getValueAsString() -> M
    204:204:java.lang.String getValueAsString(java.lang.String) -> a
    212:212:java.lang.Object getEmbeddedObject() -> I
    213:213:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> a
    214:214:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> a
    215:215:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> d
    217:217:com.fasterxml.jackson.core.JsonToken nextToken() -> f
    219:219:com.fasterxml.jackson.core.JsonToken nextValue() -> g
    225:227:com.fasterxml.jackson.core.JsonParser skipChildren() -> j
    236:236:boolean canReadObjectId() -> N
    237:237:boolean canReadTypeId() -> O
    238:238:java.lang.Object getObjectId() -> P
    239:239:java.lang.Object getTypeId() -> Q
com.fasterxml.jackson.core.util.JsonParserSequence -> b.a.a.b.h.l:
    com.fasterxml.jackson.core.JsonParser[] _parsers -> c
    boolean _checkForExistingToken -> d
    int _nextParserIndex -> e
    boolean _hasToken -> f
    68:73:void <init>(boolean,com.fasterxml.jackson.core.JsonParser[]) -> <init>
    87:103:com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(boolean,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser) -> a
    118:126:void addFlattenedActiveParsers(java.util.List) -> a
    137:138:void close() -> close
    143:154:com.fasterxml.jackson.core.JsonToken nextToken() -> f
    165:185:com.fasterxml.jackson.core.JsonParser skipChildren() -> j
    220:224:boolean switchToNext() -> U
    229:239:com.fasterxml.jackson.core.JsonToken switchAndReturnNext() -> V
com.fasterxml.jackson.core.util.RequestPayload -> b.a.a.b.h.m:
    byte[] _payloadAsBytes -> a
    java.lang.CharSequence _payloadAsText -> b
    java.lang.String _charset -> c
    58:65:java.lang.String toString() -> toString
com.fasterxml.jackson.core.util.Separators -> b.a.a.b.h.n:
    char objectFieldValueSeparator -> a
    char objectEntrySeparator -> b
    char arrayValueSeparator -> c
    23:23:com.fasterxml.jackson.core.util.Separators createDefaultInstance() -> a
    27:28:void <init>() -> <init>
    31:35:void <init>(char,char,char) -> <init>
    53:53:char getObjectFieldValueSeparator() -> b
    57:57:char getObjectEntrySeparator() -> c
    61:61:char getArrayValueSeparator() -> d
com.fasterxml.jackson.core.util.TextBuffer -> b.a.a.b.h.o:
    char[] NO_CHARS -> a
    com.fasterxml.jackson.core.util.BufferRecycler _allocator -> b
    char[] _inputBuffer -> c
    int _inputStart -> d
    int _inputLen -> e
    java.util.ArrayList _segments -> f
    boolean _hasSegments -> g
    int _segmentSize -> h
    char[] _currentSegment -> i
    int _currentSize -> j
    java.lang.String _resultString -> k
    char[] _resultArray -> l
    121:123:void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    136:148:void releaseBuffers() -> a
    156:168:void resetWithEmpty() -> b
    199:211:void resetWithShared(char[],int,int) -> a
    215:230:void resetWithCopy(char[],int,int) -> b
    255:267:void resetWithString(java.lang.String) -> a
    282:285:char[] buf(int) -> c
    290:300:void clearSegments() -> o
    312:322:int size() -> c
    330:330:int getTextOffset() -> d
    354:364:char[] getTextBuffer() -> e
    375:409:java.lang.String contentsAsString() -> f
    413:417:char[] contentsAsArray() -> g
    427:439:java.math.BigDecimal contentsAsDecimal() -> h
    447:447:double contentsAsDouble() -> i
    459:468:int contentsAsInt(boolean) -> a
    480:489:long contentsAsLong(boolean) -> b
    549:561:void append(char) -> a
    566:597:void append(char[],int,int) -> c
    602:632:void append(java.lang.String,int,int) -> a
    646:657:char[] getCurrentSegment() -> j
    663:679:char[] emptyAndGetCurrentSegment() -> k
    682:682:int getCurrentSegmentSize() -> l
    683:683:void setCurrentLength(int) -> a
    689:698:java.lang.String setCurrentAndReturn(int) -> b
    702:720:char[] finishCurrentSegment() -> m
    730:738:char[] expandCurrentSegment() -> n
    768:768:java.lang.String toString() -> toString
    782:799:void unshare(int) -> d
    808:826:void expand(int) -> e
    830:861:char[] resultArray() -> p
    864:864:char[] carr(int) -> f
    29:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.VersionUtil -> b.a.a.b.h.p:
    java.util.regex.Pattern V_SEP -> a
    163:163:void throwInternal() -> a
    28:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.AbstractTypeResolver -> b.a.a.c.a:
    9:9:void <init>() -> <init>
    30:30:com.fasterxml.jackson.databind.JavaType findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> a
    64:64:com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
com.fasterxml.jackson.databind.AnnotationIntrospector -> b.a.a.c.b:
    41:41:void <init>() -> <init>
    106:106:com.fasterxml.jackson.databind.AnnotationIntrospector nopInstance() -> a
    172:172:boolean isAnnotationBundle(java.lang.annotation.Annotation) -> a
    192:192:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> a
    201:201:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> a
    221:221:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> a
    238:238:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnorals(com.fasterxml.jackson.databind.introspect.Annotated) -> b
    252:252:java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> b
    261:261:java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated) -> c
    274:274:java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> c
    332:332:com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> a
    357:357:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> a
    377:377:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> a
    399:399:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> b
    411:411:java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> d
    418:418:java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> d
    425:425:java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    437:437:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
    447:447:com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> c
    456:456:boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> d
    476:480:com.fasterxml.jackson.annotation.JacksonInject$Value findInjectableValue(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> e
    488:488:java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> f
    506:506:java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> e
    517:517:com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> f
    531:531:com.fasterxml.jackson.databind.PropertyName findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated) -> g
    541:541:java.lang.String findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated) -> h
    553:553:java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated) -> i
    566:566:java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated) -> j
    581:581:java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> g
    591:591:java.util.List findPropertyAliases(com.fasterxml.jackson.databind.introspect.Annotated) -> k
    602:602:com.fasterxml.jackson.annotation.JsonProperty$Access findPropertyAccess(com.fasterxml.jackson.databind.introspect.Annotated) -> l
    614:614:com.fasterxml.jackson.databind.introspect.AnnotatedMethod resolveSetterConflict(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> a
    622:622:java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> h
    639:639:java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> m
    650:650:java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> n
    662:662:java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> o
    672:672:java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> p
    684:684:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> q
    709:709:java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> r
    731:731:java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> i
    743:743:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated) -> s
    798:798:com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> a
    836:836:java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> e
    845:845:java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated) -> t
    855:855:void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> a
    878:878:com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> u
    896:901:java.lang.Boolean hasAsValue(com.fasterxml.jackson.databind.introspect.Annotated) -> v
    918:923:java.lang.Boolean hasAnyGetter(com.fasterxml.jackson.databind.introspect.Annotated) -> w
    939:939:java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[]) -> a
    951:951:java.lang.Enum findDefaultEnumValue(java.lang.Class) -> a
    976:976:boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> a
    984:984:boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> b
    1002:1002:java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> x
    1014:1014:java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> y
    1027:1027:java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> z
    1053:1053:java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> A
    1075:1075:java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> j
    1093:1093:com.fasterxml.jackson.databind.JavaType refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> b
    1161:1161:java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> f
    1178:1178:java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> g
    1185:1185:com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> h
    1209:1209:com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> B
    1224:1224:java.lang.Boolean hasAnySetter(com.fasterxml.jackson.databind.introspect.Annotated) -> C
    1234:1234:com.fasterxml.jackson.annotation.JsonSetter$Value findSetterInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> D
    1243:1243:java.lang.Boolean findMergeInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> E
    1264:1271:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> a
    1288:1288:boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> F
    1302:1302:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated) -> G
    1336:1336:java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> a
    1353:1353:boolean _hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> b
    1363:1363:boolean _hasOneOf(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class[]) -> a
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty -> b.a.a.c.c:
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type _type -> a
    java.lang.String _name -> b
    79:82:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type,java.lang.String) -> <init>
    84:84:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty managed(java.lang.String) -> a
    85:85:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty back(java.lang.String) -> b
    88:88:java.lang.String getName() -> a
    90:90:boolean isManagedReference() -> b
    91:91:boolean isBackReference() -> c
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type -> b.a.a.c.d:
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type MANAGED_REFERENCE -> a
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type BACK_REFERENCE -> b
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type[] $VALUES -> c
    56:56:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type[] values() -> values
    56:56:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type valueOf(java.lang.String) -> valueOf
    56:56:void <init>(java.lang.String,int) -> <init>
    56:72:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.BeanDescription -> b.a.a.c.e:
    com.fasterxml.jackson.databind.JavaType _type -> a
    36:38:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    50:50:com.fasterxml.jackson.databind.JavaType getType() -> a
    52:52:java.lang.Class getBeanClass() -> b
    58:58:boolean isNonStaticInnerClass() -> c
    com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> d
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> e
    boolean hasKnownClassAnnotations() -> f
    com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> g
    java.util.List findProperties() -> h
    java.util.Set getIgnoredPropertyNames() -> i
    java.util.List findBackReferences() -> j
    java.util.List getConstructors() -> k
    java.util.List getFactoryMethods() -> l
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor() -> m
    java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> a
    java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> b
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor() -> n
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter() -> o
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterAccessor() -> p
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> a
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> a
    com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> a
    com.fasterxml.jackson.databind.util.Converter findSerializationConverter() -> q
    com.fasterxml.jackson.databind.util.Converter findDeserializationConverter() -> r
    java.util.Map findInjectables() -> s
    java.lang.Class findPOJOBuilder() -> t
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig() -> u
    java.lang.Object instantiateBean(boolean) -> a
    java.lang.Class[] findDefaultViews() -> v
com.fasterxml.jackson.databind.BeanProperty -> b.a.a.c.f:
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY_FORMAT -> a
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> b
    java.lang.String getName() -> a
    com.fasterxml.jackson.databind.PropertyName getFullName() -> b
    com.fasterxml.jackson.databind.JavaType getType() -> c
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> d
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> a
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> b
    39:40:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.BeanProperty$Bogus -> b.a.a.c.g:
    352:352:void <init>() -> <init>
    356:356:java.lang.String getName() -> a
    361:361:com.fasterxml.jackson.databind.PropertyName getFullName() -> b
    366:366:com.fasterxml.jackson.databind.JavaType getType() -> c
    376:376:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> d
    401:401:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    412:412:com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> a
    419:419:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> b
com.fasterxml.jackson.databind.BeanProperty$Std -> b.a.a.c.h:
    com.fasterxml.jackson.databind.PropertyName _name -> c
    com.fasterxml.jackson.databind.JavaType _type -> d
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> e
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> f
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> g
    234:240:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    288:297:com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> a
    303:312:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> b
    322:322:java.lang.String getName() -> a
    323:323:com.fasterxml.jackson.databind.PropertyName getFullName() -> b
    324:324:com.fasterxml.jackson.databind.JavaType getType() -> c
    325:325:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> f
    327:327:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> d
    328:328:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
com.fasterxml.jackson.databind.DatabindContext -> b.a.a.c.i:
    26:26:void <init>() -> <init>
    com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> a
    146:149:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> a
    158:161:com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> a
    176:200:com.fasterxml.jackson.databind.JavaType resolveSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> a
    com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> a
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> b
    229:237:com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> a
    242:250:com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> b
    264:290:com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> a
    java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> b
    312:312:java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String) -> a
    325:328:java.lang.String _format(java.lang.String,java.lang.Object[]) -> a
    335:341:java.lang.String _truncate(java.lang.String) -> a
    348:352:java.lang.String _quotedString(java.lang.String) -> b
    359:362:java.lang.String _colonConcat(java.lang.String,java.lang.String) -> a
com.fasterxml.jackson.databind.DeserializationConfig -> b.a.a.c.j:
    com.fasterxml.jackson.databind.util.LinkedNode _problemHandlers -> a
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> b
    int _deserFeatures -> c
    int _parserFeatures -> d
    int _parserFeaturesToChange -> e
    int _formatReadFeatures -> f
    int _formatReadFeaturesToChange -> g
    103:111:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    144:152:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,int,int,int,int,int,int) -> <init>
    172:180:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    266:266:com.fasterxml.jackson.databind.DeserializationConfig _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> a
    271:271:com.fasterxml.jackson.databind.DeserializationConfig _withMapperFeatures(int) -> a
    624:630:void initialize(com.fasterxml.jackson.core.JsonParser) -> a
    641:644:boolean useRootWrapping() -> a
    648:648:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> a
    684:684:int getDeserializationFeatures() -> b
    710:710:com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers() -> c
    714:714:com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> d
    731:731:com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType) -> a
    740:740:com.fasterxml.jackson.databind.BeanDescription introspectForCreation(com.fasterxml.jackson.databind.JavaType) -> b
    748:748:com.fasterxml.jackson.databind.BeanDescription introspectForBuilder(com.fasterxml.jackson.databind.JavaType) -> c
    767:783:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.JavaType) -> d
    24:24:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(int) -> b
    24:24:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> b
com.fasterxml.jackson.databind.DeserializationContext -> b.a.a.c.k:
    com.fasterxml.jackson.databind.deser.DeserializerCache _cache -> a
    com.fasterxml.jackson.databind.deser.DeserializerFactory _factory -> b
    com.fasterxml.jackson.databind.DeserializationConfig _config -> c
    int _featureFlags -> d
    java.lang.Class _view -> e
    com.fasterxml.jackson.core.JsonParser _parser -> f
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> g
    com.fasterxml.jackson.databind.util.ArrayBuilders _arrayBuilders -> h
    com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer -> i
    java.text.DateFormat _dateFormat -> j
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> k
    com.fasterxml.jackson.databind.util.LinkedNode _currentType -> l
    155:169:void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache) -> <init>
    173:183:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    191:201:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    223:223:com.fasterxml.jackson.databind.DeserializationConfig getConfig() -> c
    226:226:java.lang.Class getActiveView() -> d
    230:230:boolean canOverrideAccessModifiers() -> e
    235:235:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> a
    240:240:com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> a
    245:245:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> f
    250:250:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> b
    261:261:java.util.Locale getLocale() -> g
    272:272:java.util.TimeZone getTimeZone() -> h
    331:331:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> a
    341:341:int getDeserializationFeatures() -> i
    361:361:boolean hasSomeOfFeatures(int) -> a
    372:372:com.fasterxml.jackson.core.JsonParser getParser() -> j
    378:382:java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> a
    394:394:com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> k
    404:404:com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> l
    444:448:com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> a
    467:467:com.fasterxml.jackson.databind.JsonDeserializer findNonContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType) -> a
    477:489:com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType) -> b
    500:506:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> b
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver) -> a
    void checkUnresolvedObjectId() -> m
    543:543:com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class) -> b
    557:557:java.lang.Class findClass(java.lang.String) -> c
    574:580:com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer() -> n
    594:598:void returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer) -> a
    606:609:com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders() -> o
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> b
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> c
    648:656:com.fasterxml.jackson.databind.JsonDeserializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> a
    679:687:com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> b
    709:713:java.util.Date parseDate(java.lang.String) -> d
    723:725:java.util.Calendar constructCalendar(java.util.Date) -> a
    807:822:boolean handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String) -> a
    850:866:java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[]) -> a
    894:910:java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[]) -> b
    937:953:java.lang.Object handleWeirdNumberValue(java.lang.Class,java.lang.Number,java.lang.String,java.lang.Object[]) -> a
    960:975:java.lang.Object handleWeirdNativeValue(com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser) -> a
    1000:1031:java.lang.Object handleMissingInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[]) -> a
    1055:1072:java.lang.Object handleInstantiationProblem(java.lang.Class,java.lang.Object,java.lang.Throwable) -> a
    1092:1092:java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser) -> a
    1114:1139:java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[]) -> a
    1165:1186:com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> a
    1195:1217:com.fasterxml.jackson.databind.JavaType handleMissingTypeId(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> a
    1225:1230:boolean _isCompatible(java.lang.Class,java.lang.Object) -> a
    1254:1255:void reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> a
    1272:1273:void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> a
    1290:1291:void reportWrongTokenException(java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> a
    1300:1302:java.lang.Object reportUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.lang.Object) -> a
    1314:1316:java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.BeanProperty,java.lang.String,java.lang.Object[]) -> a
    1328:1329:java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[]) -> a
    1341:1342:java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[]) -> a
    1354:1355:java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Object[]) -> a
    1361:1363:java.lang.Object reportTrailingTokens(java.lang.Class,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken) -> a
    1426:1429:java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object[]) -> a
    1441:1446:java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object[]) -> a
    1451:1451:java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> b
    1467:1472:java.lang.Object reportBadMerge(com.fasterxml.jackson.databind.JsonDeserializer) -> a
    1495:1498:com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> a
    1504:1507:com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> a
    1527:1529:com.fasterxml.jackson.databind.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> a
    1548:1550:com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String) -> a
    1563:1565:com.fasterxml.jackson.databind.JsonMappingException weirdNumberException(java.lang.Number,java.lang.Class,java.lang.String) -> a
    1581:1583:com.fasterxml.jackson.databind.JsonMappingException weirdNativeValueException(java.lang.Object,java.lang.Class) -> a
    1598:1603:com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> a
    1626:1628:com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> a
    1636:1638:com.fasterxml.jackson.databind.JsonMappingException missingTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> c
    1758:1768:java.text.DateFormat getDateFormat() -> p
    50:50:com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> a
com.fasterxml.jackson.databind.DeserializationFeature -> b.a.a.c.l:
    com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS -> a
    com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS -> b
    com.fasterxml.jackson.databind.DeserializationFeature USE_LONG_FOR_INTS -> c
    com.fasterxml.jackson.databind.DeserializationFeature USE_JAVA_ARRAY_FOR_JSON_ARRAY -> d
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNKNOWN_PROPERTIES -> e
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES -> f
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NUMBERS_FOR_ENUMS -> g
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_INVALID_SUBTYPE -> h
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_READING_DUP_TREE_KEY -> i
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_IGNORED_PROPERTIES -> j
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNRESOLVED_OBJECT_IDS -> k
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_MISSING_CREATOR_PROPERTIES -> l
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_CREATOR_PROPERTIES -> m
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY -> n
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_TRAILING_TOKENS -> o
    com.fasterxml.jackson.databind.DeserializationFeature WRAP_EXCEPTIONS -> p
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_SINGLE_VALUE_AS_ARRAY -> q
    com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS -> r
    com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_ROOT_VALUE -> s
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT -> t
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT -> u
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_FLOAT_AS_INT -> v
    com.fasterxml.jackson.databind.DeserializationFeature READ_ENUMS_USING_TO_STRING -> w
    com.fasterxml.jackson.databind.DeserializationFeature READ_UNKNOWN_ENUM_VALUES_AS_NULL -> x
    com.fasterxml.jackson.databind.DeserializationFeature READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE -> y
    com.fasterxml.jackson.databind.DeserializationFeature READ_DATE_TIMESTAMPS_AS_NANOSECONDS -> z
    com.fasterxml.jackson.databind.DeserializationFeature ADJUST_DATES_TO_CONTEXT_TIME_ZONE -> A
    com.fasterxml.jackson.databind.DeserializationFeature EAGER_DESERIALIZER_FETCH -> B
    boolean _defaultState -> C
    int _mask -> D
    com.fasterxml.jackson.databind.DeserializationFeature[] $VALUES -> E
    20:20:com.fasterxml.jackson.databind.DeserializationFeature[] values() -> values
    20:20:com.fasterxml.jackson.databind.DeserializationFeature valueOf(java.lang.String) -> valueOf
    489:492:void <init>(java.lang.String,int,boolean) -> <init>
    495:495:boolean enabledByDefault() -> a
    498:498:int getMask() -> b
    501:501:boolean enabledIn(int) -> a
    20:482:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.InjectableValues -> b.a.a.c.m:
    java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> a
com.fasterxml.jackson.databind.JavaType -> b.a.a.c.n:
    java.lang.Class _class -> a
    int _hash -> b
    java.lang.Object _valueHandler -> c
    java.lang.Object _typeHandler -> d
    boolean _asStatic -> e
    78:84:void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean) -> <init>
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> a
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> b
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> c
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> d
    141:150:com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> a
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> b
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> d
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    227:227:java.lang.Class getRawClass() -> e
    235:235:boolean hasRawClass(java.lang.Class) -> a
    245:245:boolean hasContentType() -> f
    252:252:boolean isTypeOrSubTypeOf(java.lang.Class) -> b
    259:259:boolean isTypeOrSuperTypeOf(java.lang.Class) -> c
    264:264:boolean isAbstract() -> g
    274:281:boolean isConcrete() -> h
    285:285:boolean isThrowable() -> i
    288:288:boolean isArrayType() -> j
    291:291:boolean isEnumType() -> k
    294:294:boolean isInterface() -> l
    297:297:boolean isPrimitive() -> m
    300:300:boolean isFinal() -> n
    boolean isContainerType() -> o
    315:315:boolean isCollectionLikeType() -> p
    323:323:boolean isMapLikeType() -> q
    334:334:boolean isJavaLangObject() -> r
    344:344:boolean useStaticType() -> s
    353:353:boolean hasGenericTypes() -> t
    356:356:com.fasterxml.jackson.databind.JavaType getKeyType() -> u
    359:359:com.fasterxml.jackson.databind.JavaType getContentType() -> v
    362:362:com.fasterxml.jackson.databind.JavaType getReferencedType() -> w
    int containedTypeCount() -> x
    com.fasterxml.jackson.databind.JavaType containedType(int) -> a
    403:404:com.fasterxml.jackson.databind.JavaType containedTypeOrUnknown(int) -> b
    com.fasterxml.jackson.databind.type.TypeBindings getBindings() -> y
    com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class) -> d
    com.fasterxml.jackson.databind.JavaType getSuperClass() -> z
    java.util.List getInterfaces() -> A
    457:457:java.lang.Object getValueHandler() -> B
    463:463:java.lang.Object getTypeHandler() -> C
    489:489:boolean hasHandlers() -> D
    509:511:java.lang.String getGenericSignature() -> E
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    561:561:int hashCode() -> hashCode
    20:20:com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> b
com.fasterxml.jackson.databind.JsonDeserializer -> b.a.a.c.o:
    46:46:void <init>() -> <init>
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    128:132:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    154:154:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    173:173:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    208:208:java.lang.Class handledType() -> a
    224:224:boolean isCachable() -> b
    254:254:java.util.Collection getKnownPropertyNames() -> c
    281:281:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
    306:306:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> d
    334:334:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    355:355:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> e
    365:366:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> a
    389:389:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    402:402:java.lang.Object getNullValue() -> f
com.fasterxml.jackson.databind.JsonDeserializer$None -> b.a.a.c.p:
    424:424:void <init>() -> <init>
com.fasterxml.jackson.databind.JsonMappingException -> b.a.a.c.q:
    java.util.LinkedList _path -> a
    java.io.Closeable _processor -> b
    237:245:void <init>(java.io.Closeable,java.lang.String) -> <init>
    251:256:void <init>(java.io.Closeable,java.lang.String,java.lang.Throwable) -> <init>
    262:264:void <init>(java.io.Closeable,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    270:270:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> a
    277:277:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable) -> a
    284:284:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> a
    291:291:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable) -> a
    298:298:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> a
    305:305:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Throwable) -> a
    336:338:com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException) -> a
    351:351:com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String) -> a
    363:363:com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int) -> a
    375:394:com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException$Reference) -> a
    426:427:java.lang.StringBuilder getPathReference(java.lang.StringBuilder) -> a
    436:438:void prependPath(java.lang.Object,java.lang.String) -> a
    451:461:void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference) -> a
    471:471:java.lang.Object getProcessor() -> b
    475:475:java.lang.String getLocalizedMessage() -> getLocalizedMessage
    484:484:java.lang.String getMessage() -> getMessage
    492:505:java.lang.String _buildMessage() -> a
    511:511:java.lang.String toString() -> toString
    522:532:void _appendPathDesc(java.lang.StringBuilder) -> b
com.fasterxml.jackson.databind.JsonMappingException$Reference -> b.a.a.c.r:
    java.lang.Object _from -> a
    java.lang.String _fieldName -> b
    int _index -> c
    java.lang.String _desc -> d
    66:81:void <init>() -> <init>
    66:91:void <init>(java.lang.Object,java.lang.String) -> <init>
    66:96:void <init>(java.lang.Object,int) -> <init>
    119:160:java.lang.String getDescription() -> a
    165:165:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.JsonNode -> b.a.a.c.s:
    49:49:void <init>() -> <init>
    82:82:int size() -> c
    108:108:boolean isArray() -> d
    113:113:boolean isObject() -> e
    156:156:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> a
    183:183:java.util.Iterator fieldNames() -> f
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> g
    261:261:boolean isPojo() -> h
    268:268:boolean isNumber() -> i
    362:362:boolean isBinary() -> j
    413:413:java.lang.String textValue() -> k
    426:426:byte[] binaryValue() -> l
    447:447:java.lang.Number numberValue() -> m
    471:471:int intValue() -> n
    483:483:long longValue() -> o
    509:509:double doubleValue() -> p
    518:518:java.math.BigDecimal decimalValue() -> q
    527:527:java.math.BigInteger bigIntegerValue() -> r
    java.lang.String asText() -> s
    695:695:boolean has(java.lang.String) -> b
    768:768:java.util.Iterator iterator() -> iterator
    777:777:java.util.Iterator elements() -> t
    785:785:java.util.Iterator fields() -> u
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> c
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.JsonSerializable -> b.a.a.c.t:
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
com.fasterxml.jackson.databind.JsonSerializable$Base -> b.a.a.c.u:
    54:54:void <init>() -> <init>
    61:61:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.JsonSerializer -> b.a.a.c.v:
    53:53:void <init>() -> <init>
    77:77:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    156:163:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    182:182:java.lang.Class handledType() -> a
    211:211:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    219:219:boolean usesObjectId() -> b
    229:229:boolean isUnwrappingSerializer() -> c
com.fasterxml.jackson.databind.JsonSerializer$None -> b.a.a.c.w:
    292:292:void <init>() -> <init>
com.fasterxml.jackson.databind.KeyDeserializer -> b.a.a.c.x:
    10:10:void <init>() -> <init>
    java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.KeyDeserializer$None -> b.a.a.c.y:
    25:25:void <init>() -> <init>
com.fasterxml.jackson.databind.MapperFeature -> b.a.a.c.z:
    com.fasterxml.jackson.databind.MapperFeature USE_ANNOTATIONS -> a
    com.fasterxml.jackson.databind.MapperFeature USE_GETTERS_AS_SETTERS -> b
    com.fasterxml.jackson.databind.MapperFeature PROPAGATE_TRANSIENT_MARKER -> c
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_CREATORS -> d
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_FIELDS -> e
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_GETTERS -> f
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_IS_GETTERS -> g
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_SETTERS -> h
    com.fasterxml.jackson.databind.MapperFeature REQUIRE_SETTERS_FOR_GETTERS -> i
    com.fasterxml.jackson.databind.MapperFeature ALLOW_FINAL_FIELDS_AS_MUTATORS -> j
    com.fasterxml.jackson.databind.MapperFeature INFER_PROPERTY_MUTATORS -> k
    com.fasterxml.jackson.databind.MapperFeature INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES -> l
    com.fasterxml.jackson.databind.MapperFeature CAN_OVERRIDE_ACCESS_MODIFIERS -> m
    com.fasterxml.jackson.databind.MapperFeature OVERRIDE_PUBLIC_ACCESS_MODIFIERS -> n
    com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING -> o
    com.fasterxml.jackson.databind.MapperFeature DEFAULT_VIEW_INCLUSION -> p
    com.fasterxml.jackson.databind.MapperFeature SORT_PROPERTIES_ALPHABETICALLY -> q
    com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_PROPERTIES -> r
    com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_ENUMS -> s
    com.fasterxml.jackson.databind.MapperFeature USE_WRAPPER_NAME_AS_PROPERTY_NAME -> t
    com.fasterxml.jackson.databind.MapperFeature USE_STD_BEAN_NAMING -> u
    com.fasterxml.jackson.databind.MapperFeature ALLOW_EXPLICIT_PROPERTY_RENAMING -> v
    com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS -> w
    com.fasterxml.jackson.databind.MapperFeature IGNORE_DUPLICATE_MODULE_REGISTRATIONS -> x
    com.fasterxml.jackson.databind.MapperFeature IGNORE_MERGE_FOR_UNMERGEABLE -> y
    boolean _defaultState -> z
    int _mask -> A
    com.fasterxml.jackson.databind.MapperFeature[] $VALUES -> B
    17:17:com.fasterxml.jackson.databind.MapperFeature[] values() -> values
    17:17:com.fasterxml.jackson.databind.MapperFeature valueOf(java.lang.String) -> valueOf
    484:487:void <init>(java.lang.String,int,boolean) -> <init>
    490:490:boolean enabledByDefault() -> a
    493:493:int getMask() -> b
    17:477:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.MappingJsonFactory -> b.a.a.c.A:
    24:25:void <init>() -> <init>
    29:33:void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    48:48:com.fasterxml.jackson.databind.ObjectMapper getCodec() -> f
    74:74:java.lang.String getFormatName() -> c
    83:86:com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) -> a
    17:17:com.fasterxml.jackson.core.ObjectCodec getCodec() -> d
com.fasterxml.jackson.databind.Module -> b.a.a.c.B:
    24:24:void <init>() -> <init>
    java.lang.String getModuleName() -> a
    com.fasterxml.jackson.core.Version version() -> b
    61:61:java.lang.Object getTypeId() -> c
    void setupModule(com.fasterxml.jackson.databind.Module$SetupContext) -> a
com.fasterxml.jackson.databind.Module$SetupContext -> b.a.a.c.C:
    void addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> a
    void addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> a
    void addSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> a
    void addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> b
    void addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> a
    void addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> a
    void addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> a
    void addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> a
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> a
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> a
    void setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> a
com.fasterxml.jackson.databind.ObjectMapper -> b.a.a.c.D:
    com.fasterxml.jackson.databind.JavaType JSON_NODE_TYPE -> p
    com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR -> a
    com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE -> b
    com.fasterxml.jackson.core.JsonFactory _jsonFactory -> c
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> d
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> e
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver -> f
    com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides -> g
    com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns -> h
    com.fasterxml.jackson.databind.SerializationConfig _serializationConfig -> i
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider -> j
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> k
    com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig -> l
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext -> m
    java.util.Set _registeredModuleTypes -> n
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> o
    480:481:void <init>() -> <init>
    489:490:void <init>(com.fasterxml.jackson.core.JsonFactory) -> <init>
    458:582:void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext) -> <init>
    591:591:com.fasterxml.jackson.databind.introspect.ClassIntrospector defaultClassIntrospector() -> c
    646:646:com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    658:658:com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues) -> a
    722:915:com.fasterxml.jackson.databind.ObjectMapper registerModule(com.fasterxml.jackson.databind.Module) -> a
    950:953:com.fasterxml.jackson.databind.ObjectMapper registerModules(java.lang.Iterable) -> a
    966:966:java.util.List findModules() -> d
    980:985:java.util.List findModules(java.lang.ClassLoader) -> a
    989:994:java.util.ServiceLoader secureGetServiceLoader(java.lang.Class,java.lang.ClassLoader) -> a
    1016:1016:com.fasterxml.jackson.databind.ObjectMapper findAndRegisterModules() -> e
    1034:1034:com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig() -> f
    1047:1047:com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig() -> g
    1164:1165:com.fasterxml.jackson.databind.ObjectMapper addMixIn(java.lang.Class,java.lang.Class) -> a
    1278:1278:com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> h
    1333:1335:com.fasterxml.jackson.databind.ObjectMapper setPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> a
    1604:1605:void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> a
    1651:1651:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> i
    1695:1695:com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> j
    1834:1834:com.fasterxml.jackson.core.JsonFactory getFactory() -> b
    1841:1841:com.fasterxml.jackson.core.JsonFactory getJsonFactory() -> a
    1929:1929:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> a
    1937:1941:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.MapperFeature,boolean) -> a
    1983:1985:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.SerializationFeature,boolean) -> a
    1993:1994:com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature) -> a
    2037:2037:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> a
    2110:2111:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> a
    2264:2264:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> a
    2364:2378:com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> a
    2539:2539:com.fasterxml.jackson.databind.JsonNode readTree(java.lang.String) -> a
    2627:2648:void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> a
    2690:2690:com.fasterxml.jackson.databind.node.ObjectNode createObjectNode() -> k
    2713:2713:com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> a
    2733:2750:java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> a
    2778:2792:com.fasterxml.jackson.databind.JsonNode valueToTree(java.lang.Object) -> a
    2992:2992:java.lang.Object readValue(java.lang.String,java.lang.Class) -> a
    3123:3124:java.lang.Object readValue(java.io.DataInput,java.lang.Class) -> a
    3205:3213:java.lang.String writeValueAsString(java.lang.Object) -> b
    3229:3239:byte[] writeValueAsBytes(java.lang.Object) -> c
    3457:3457:com.fasterxml.jackson.databind.ObjectReader reader() -> l
    3517:3517:com.fasterxml.jackson.databind.ObjectReader readerFor(java.lang.Class) -> a
    3876:3876:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig) -> a
    3886:3899:void _configAndWriteValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> b
    3908:3919:void _configAndWriteCloseable(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig) -> a
    3928:3939:void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig) -> b
    3959:3980:java.lang.Object _readValue(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> a
    3986:4009:java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> a
    4020:4052:com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser) -> b
    4060:4091:java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    4101:4101:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig) -> a
    4121:4137:com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> b
    4152:4157:void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> a
    4173:4184:com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> a
    286:304:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectMapper$1 -> b.a.a.c.E:
    com.fasterxml.jackson.databind.ObjectMapper this$0 -> a
    752:752:void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    813:815:void addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> a
    819:821:void addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> a
    825:827:void addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> a
    833:834:void addSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> a
    838:839:void addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> b
    843:844:void addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> a
    850:852:void addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> a
    863:865:void addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> a
    892:893:void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> a
    902:903:void setMixInAnnotations(java.lang.Class,java.lang.Class) -> a
    912:913:void setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> a
com.fasterxml.jackson.databind.ObjectMapper$2 -> b.a.a.c.F:
    java.lang.ClassLoader val$classLoader -> a
    java.lang.Class val$clazz -> b
    994:994:void <init>(java.lang.ClassLoader,java.lang.Class) -> <init>
    997:998:java.util.ServiceLoader run() -> a
    994:994:java.lang.Object run() -> run
com.fasterxml.jackson.databind.ObjectReader -> b.a.a.c.G:
    com.fasterxml.jackson.databind.JavaType JSON_NODE_TYPE -> l
    com.fasterxml.jackson.databind.DeserializationConfig _config -> a
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _context -> b
    com.fasterxml.jackson.core.JsonFactory _parserFactory -> c
    boolean _unwrapRoot -> d
    com.fasterxml.jackson.core.filter.TokenFilter _filter -> m
    com.fasterxml.jackson.databind.JavaType _valueType -> e
    com.fasterxml.jackson.databind.JsonDeserializer _rootDeserializer -> f
    java.lang.Object _valueToUpdate -> g
    com.fasterxml.jackson.core.FormatSchema _schema -> h
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> i
    com.fasterxml.jackson.databind.deser.DataFormatReaders _dataFormatReaders -> j
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> k
    168:169:void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    178:192:void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    201:216:void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders) -> <init>
    318:318:com.fasterxml.jackson.databind.ObjectReader _new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders) -> a
    344:362:com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser) -> a
    568:571:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.InjectableValues) -> a
    674:683:com.fasterxml.jackson.databind.ObjectReader forType(com.fasterxml.jackson.databind.JavaType) -> a
    697:697:com.fasterxml.jackson.databind.ObjectReader forType(java.lang.Class) -> a
    755:773:com.fasterxml.jackson.databind.ObjectReader withValueToUpdate(java.lang.Object) -> a
    925:925:com.fasterxml.jackson.core.JsonFactory getFactory() -> b
    965:965:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser) -> b
    982:982:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> a
    1144:1145:com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> a
    1162:1162:com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> a
    1231:1234:java.lang.Object readValue(byte[]) -> a
    1292:1295:java.lang.Object readValue(com.fasterxml.jackson.databind.JsonNode) -> a
    1530:1534:java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> a
    1540:1540:void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> a
    1558:1587:java.lang.Object _bind(com.fasterxml.jackson.core.JsonParser,java.lang.Object) -> a
    1592:1622:java.lang.Object _bindAndClose(com.fasterxml.jackson.core.JsonParser) -> c
    1636:1662:com.fasterxml.jackson.databind.JsonNode _bindAsTree(com.fasterxml.jackson.core.JsonParser) -> d
    1679:1717:java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    1726:1726:com.fasterxml.jackson.core.JsonParser _considerFilter(com.fasterxml.jackson.core.JsonParser,boolean) -> a
    1737:1747:void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> a
    1758:1763:java.lang.Object _detectBindAndClose(byte[],int,int) -> a
    1820:1821:void _reportUnkownFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders,com.fasterxml.jackson.databind.deser.DataFormatReaders$Match) -> a
    1849:1849:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser) -> e
    1863:1864:void _reportUndetectableSource(java.lang.Object) -> b
    1879:1900:com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> a
    1909:1919:com.fasterxml.jackson.databind.JsonDeserializer _findTreeDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> b
    1929:1947:com.fasterxml.jackson.databind.JsonDeserializer _prefetchRootDeserializer(com.fasterxml.jackson.databind.JavaType) -> b
    49:49:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyMetadata -> b.a.a.c.H:
    com.fasterxml.jackson.databind.PropertyMetadata STD_REQUIRED -> a
    com.fasterxml.jackson.databind.PropertyMetadata STD_OPTIONAL -> b
    com.fasterxml.jackson.databind.PropertyMetadata STD_REQUIRED_OR_OPTIONAL -> c
    java.lang.Boolean _required -> d
    java.lang.String _description -> e
    java.lang.Integer _index -> f
    java.lang.String _defaultValue -> g
    com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo _mergeInfo -> h
    com.fasterxml.jackson.annotation.Nulls _valueNulls -> i
    com.fasterxml.jackson.annotation.Nulls _contentNulls -> j
    122:130:void <init>(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String,com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> <init>
    137:144:com.fasterxml.jackson.databind.PropertyMetadata construct(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String) -> a
    175:175:com.fasterxml.jackson.databind.PropertyMetadata withDescription(java.lang.String) -> a
    183:183:com.fasterxml.jackson.databind.PropertyMetadata withMergeInfo(com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo) -> a
    192:192:com.fasterxml.jackson.databind.PropertyMetadata withNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> a
    247:247:boolean isRequired() -> a
    264:264:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo getMergeInfo() -> b
    269:269:com.fasterxml.jackson.annotation.Nulls getValueNulls() -> c
    274:274:com.fasterxml.jackson.annotation.Nulls getContentNulls() -> d
    19:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo -> b.a.a.c.I:
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getter -> a
    boolean fromDefaults -> b
    46:49:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean) -> <init>
    52:52:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForDefaults(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    56:56:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForTypeOverride(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
    60:60:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForPropertyOverride(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> c
com.fasterxml.jackson.databind.PropertyName -> b.a.a.c.J:
    com.fasterxml.jackson.databind.PropertyName USE_DEFAULT -> a
    com.fasterxml.jackson.databind.PropertyName NO_NAME -> b
    java.lang.String _simpleName -> c
    java.lang.String _namespace -> d
    com.fasterxml.jackson.core.SerializableString _encodedSimple -> e
    61:62:void <init>(java.lang.String) -> <init>
    65:68:void <init>(java.lang.String,java.lang.String) -> <init>
    92:95:com.fasterxml.jackson.databind.PropertyName construct(java.lang.String) -> a
    100:106:com.fasterxml.jackson.databind.PropertyName construct(java.lang.String,java.lang.String) -> a
    111:118:com.fasterxml.jackson.databind.PropertyName internSimpleName() -> a
    127:133:com.fasterxml.jackson.databind.PropertyName withSimpleName(java.lang.String) -> b
    158:158:java.lang.String getSimpleName() -> b
    168:177:com.fasterxml.jackson.core.SerializableString simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig) -> a
    185:185:boolean hasSimpleName() -> c
    193:193:boolean hasSimpleName(java.lang.String) -> c
    197:197:boolean hasNamespace() -> d
    209:209:boolean isEmpty() -> e
    221:240:boolean equals(java.lang.Object) -> equals
    245:248:int hashCode() -> hashCode
    253:256:java.lang.String toString() -> toString
    29:36:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategy -> b.a.a.c.K:
    com.fasterxml.jackson.databind.PropertyNamingStrategy SNAKE_CASE -> a
    com.fasterxml.jackson.databind.PropertyNamingStrategy UPPER_CAMEL_CASE -> b
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CAMEL_CASE -> c
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CASE -> d
    com.fasterxml.jackson.databind.PropertyNamingStrategy KEBAB_CASE -> e
    com.fasterxml.jackson.databind.PropertyNamingStrategy CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES -> f
    com.fasterxml.jackson.databind.PropertyNamingStrategy PASCAL_CASE_TO_CAMEL_CASE -> g
    30:30:void <init>() -> <init>
    101:101:java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> a
    122:122:java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> a
    142:142:java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> b
    160:160:java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> a
    40:416:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategy$KebabCaseStrategy -> b.a.a.c.L:
    360:360:void <init>() -> <init>
    365:396:java.lang.String translate(java.lang.String) -> a
com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseStrategy -> b.a.a.c.M:
    345:345:void <init>() -> <init>
    349:349:java.lang.String translate(java.lang.String) -> a
com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase -> b.a.a.c.N:
    169:169:void <init>() -> <init>
    174:174:java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> a
    180:180:java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> a
    186:186:java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> b
    193:193:java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> a
    java.lang.String translate(java.lang.String) -> a
com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy -> b.a.a.c.O:
    257:257:void <init>() -> <init>
    262:290:java.lang.String translate(java.lang.String) -> a
com.fasterxml.jackson.databind.PropertyNamingStrategy$UpperCamelCaseStrategy -> b.a.a.c.P:
    309:309:void <init>() -> <init>
    322:333:java.lang.String translate(java.lang.String) -> a
com.fasterxml.jackson.databind.RuntimeJsonMappingException -> b.a.a.c.Q:
    11:12:void <init>(com.fasterxml.jackson.databind.JsonMappingException) -> <init>
com.fasterxml.jackson.databind.SerializationConfig -> b.a.a.c.R:
    com.fasterxml.jackson.core.PrettyPrinter DEFAULT_PRETTY_PRINTER -> a
    com.fasterxml.jackson.databind.ser.FilterProvider _filterProvider -> b
    com.fasterxml.jackson.core.PrettyPrinter _defaultPrettyPrinter -> c
    int _serFeatures -> d
    int _generatorFeatures -> e
    int _generatorFeaturesToChange -> f
    int _formatWriteFeatures -> g
    int _formatWriteFeaturesToChange -> h
    114:122:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    167:175:void <init>(com.fasterxml.jackson.databind.SerializationConfig,int,int,int,int,int,int) -> <init>
    179:187:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    278:278:com.fasterxml.jackson.databind.SerializationConfig _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> a
    283:283:com.fasterxml.jackson.databind.SerializationConfig _withMapperFeatures(int) -> a
    348:349:com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.SerializationFeature) -> a
    393:394:com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature) -> b
    628:632:com.fasterxml.jackson.core.PrettyPrinter constructDefaultPrettyPrinter() -> a
    650:676:void initialize(com.fasterxml.jackson.core.JsonGenerator) -> a
    710:710:boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> c
    749:749:com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider() -> b
    778:778:com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType) -> a
    29:29:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(int) -> b
    29:29:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> b
    37:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.SerializationFeature -> b.a.a.c.S:
    com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE -> a
    com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT -> b
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS -> c
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_SELF_REFERENCES -> d
    com.fasterxml.jackson.databind.SerializationFeature WRAP_EXCEPTIONS -> e
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS -> f
    com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE -> g
    com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE -> h
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS -> i
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS -> j
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_WITH_ZONE_ID -> k
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DURATIONS_AS_TIMESTAMPS -> l
    com.fasterxml.jackson.databind.SerializationFeature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS -> m
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING -> n
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_INDEX -> o
    com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES -> p
    com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS -> q
    com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED -> r
    com.fasterxml.jackson.databind.SerializationFeature WRITE_BIGDECIMAL_AS_PLAIN -> s
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS -> t
    com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS -> u
    com.fasterxml.jackson.databind.SerializationFeature EAGER_SERIALIZER_FETCH -> v
    com.fasterxml.jackson.databind.SerializationFeature USE_EQUALITY_FOR_OBJECT_ID -> w
    boolean _defaultState -> x
    int _mask -> y
    com.fasterxml.jackson.databind.SerializationFeature[] $VALUES -> z
    16:16:com.fasterxml.jackson.databind.SerializationFeature[] values() -> values
    16:16:com.fasterxml.jackson.databind.SerializationFeature valueOf(java.lang.String) -> valueOf
    428:431:void <init>(java.lang.String,int,boolean) -> <init>
    434:434:boolean enabledByDefault() -> a
    438:438:int getMask() -> b
    441:441:boolean enabledIn(int) -> a
    16:422:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.SerializerProvider -> b.a.a.c.T:
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER -> a
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER -> b
    com.fasterxml.jackson.databind.SerializationConfig _config -> c
    java.lang.Class _serializationView -> d
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> e
    com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache -> f
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> g
    com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer -> h
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> i
    com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer -> j
    com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer -> k
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers -> l
    java.text.DateFormat _dateFormat -> m
    boolean _stdNullValueSerializer -> n
    131:205:void <init>() -> <init>
    131:234:void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    325:325:com.fasterxml.jackson.databind.SerializationConfig getConfig() -> c
    329:329:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> d
    334:334:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> b
    338:338:java.lang.Class getActiveView() -> e
    348:348:boolean canOverrideAccessModifiers() -> f
    353:353:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> a
    358:358:com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> a
    376:376:java.util.Locale getLocale() -> g
    387:387:java.util.TimeZone getTimeZone() -> h
    398:398:java.lang.Object getAttribute(java.lang.Object) -> a
    404:405:com.fasterxml.jackson.databind.SerializerProvider setAttribute(java.lang.Object,java.lang.Object) -> a
    423:423:boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> a
    444:444:com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider() -> i
    455:455:com.fasterxml.jackson.core.JsonGenerator getGenerator() -> j
    com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> a
    501:524:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> a
    543:561:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> a
    574:590:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class) -> b
    604:617:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType) -> a
    636:651:com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> b
    662:679:com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> b
    702:723:com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty) -> a
    794:796:com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> c
    805:805:com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> c
    825:825:com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer() -> k
    849:849:com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> d
    865:865:com.fasterxml.jackson.databind.JsonSerializer findNullValueSerializer(com.fasterxml.jackson.databind.BeanProperty) -> a
    882:886:com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> c
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> b
    java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> a
    boolean includeFilterSuppressNulls(java.lang.Object) -> b
    974:979:com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> a
    1002:1007:com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> b
    1087:1092:void defaultSerializeDateValue(java.util.Date,com.fasterxml.jackson.core.JsonGenerator) -> a
    1101:1106:void defaultSerializeDateKey(long,com.fasterxml.jackson.core.JsonGenerator) -> a
    1115:1120:void defaultSerializeDateKey(java.util.Date,com.fasterxml.jackson.core.JsonGenerator) -> b
    1124:1129:void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator) -> a
    1145:1145:void reportMappingProblem(java.lang.String,java.lang.Object[]) -> b
    1157:1163:java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object[]) -> a
    1175:1186:java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object[]) -> a
    1191:1191:java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> b
    1209:1211:java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String,java.lang.Throwable) -> a
    1222:1223:void reportMappingProblem(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    1229:1231:com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> a
    1251:1251:com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String,java.lang.Object[]) -> c
    1333:1349:com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class) -> d
    1357:1369:com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType) -> b
    1383:1386:com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType) -> c
    1398:1401:com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> c
    1408:1411:com.fasterxml.jackson.databind.JsonSerializer _handleResolvable(com.fasterxml.jackson.databind.JsonSerializer) -> a
    1422:1439:java.text.DateFormat _dateFormat() -> l
    47:47:com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> a
    57:69:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.JacksonStdImpl -> b.a.a.c.a.a:
com.fasterxml.jackson.databind.annotation.JsonAppend -> b.a.a.c.a.b:
    com.fasterxml.jackson.databind.annotation.JsonAppend$Attr[] attrs() -> a
    com.fasterxml.jackson.databind.annotation.JsonAppend$Prop[] props() -> b
    boolean prepend() -> c
com.fasterxml.jackson.databind.annotation.JsonAppend$Attr -> b.a.a.c.a.c:
    java.lang.String value() -> a
    java.lang.String propName() -> b
    java.lang.String propNamespace() -> c
    com.fasterxml.jackson.annotation.JsonInclude$Include include() -> d
    boolean required() -> e
com.fasterxml.jackson.databind.annotation.JsonAppend$Prop -> b.a.a.c.a.d:
    java.lang.Class value() -> a
    java.lang.String name() -> b
    java.lang.String namespace() -> c
    com.fasterxml.jackson.annotation.JsonInclude$Include include() -> d
    boolean required() -> e
    java.lang.Class type() -> f
com.fasterxml.jackson.databind.annotation.JsonDeserialize -> b.a.a.c.a.e:
    java.lang.Class using() -> a
    java.lang.Class contentUsing() -> b
    java.lang.Class keyUsing() -> c
    java.lang.Class builder() -> d
    java.lang.Class converter() -> e
    java.lang.Class contentConverter() -> f
    java.lang.Class as() -> g
    java.lang.Class keyAs() -> h
    java.lang.Class contentAs() -> i
com.fasterxml.jackson.databind.annotation.JsonNaming -> b.a.a.c.a.f:
    java.lang.Class value() -> a
com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder -> b.a.a.c.a.g:
    java.lang.String buildMethodName() -> a
    java.lang.String withPrefix() -> b
com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value -> b.a.a.c.a.h:
    java.lang.String buildMethodName -> a
    java.lang.String withPrefix -> b
    87:88:void <init>(com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder) -> <init>
    91:94:void <init>(java.lang.String,java.lang.String) -> <init>
com.fasterxml.jackson.databind.annotation.JsonSerialize -> b.a.a.c.a.i:
    java.lang.Class using() -> a
    java.lang.Class contentUsing() -> b
    java.lang.Class keyUsing() -> c
    java.lang.Class nullsUsing() -> d
    java.lang.Class as() -> e
    java.lang.Class keyAs() -> f
    java.lang.Class contentAs() -> g
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing typing() -> h
    java.lang.Class converter() -> i
    java.lang.Class contentConverter() -> j
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion include() -> k
com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion -> b.a.a.c.a.j:
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion ALWAYS -> a
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_NULL -> b
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_DEFAULT -> c
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_EMPTY -> d
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion DEFAULT_INCLUSION -> e
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] $VALUES -> f
    188:188:com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] values() -> values
    188:188:com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion valueOf(java.lang.String) -> valueOf
    189:189:void <init>(java.lang.String,int) -> <init>
    188:238:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing -> b.a.a.c.a.k:
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing DYNAMIC -> a
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing STATIC -> b
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing DEFAULT_TYPING -> c
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing[] $VALUES -> d
    247:247:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing[] values() -> values
    247:247:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing valueOf(java.lang.String) -> valueOf
    247:247:void <init>(java.lang.String,int) -> <init>
    247:267:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver -> b.a.a.c.a.l:
    java.lang.Class value() -> a
com.fasterxml.jackson.databind.annotation.JsonTypeResolver -> b.a.a.c.a.m:
    java.lang.Class value() -> a
com.fasterxml.jackson.databind.annotation.JsonValueInstantiator -> b.a.a.c.a.n:
    java.lang.Class value() -> a
com.fasterxml.jackson.databind.annotation.NoClass -> b.a.a.c.a.o:
    17:17:void <init>() -> <init>
com.fasterxml.jackson.databind.cfg.BaseSettings -> b.a.a.c.b.a:
    java.util.TimeZone DEFAULT_TIMEZONE -> k
    com.fasterxml.jackson.databind.introspect.ClassIntrospector _classIntrospector -> a
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> b
    com.fasterxml.jackson.databind.PropertyNamingStrategy _propertyNamingStrategy -> c
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> d
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _typeResolverBuilder -> e
    java.text.DateFormat _dateFormat -> f
    com.fasterxml.jackson.databind.cfg.HandlerInstantiator _handlerInstantiator -> g
    java.util.Locale _locale -> h
    java.util.TimeZone _timeZone -> i
    com.fasterxml.jackson.core.Base64Variant _defaultBase64 -> j
    137:148:void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.PropertyNamingStrategy,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder,java.text.DateFormat,com.fasterxml.jackson.databind.cfg.HandlerInstantiator,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.core.Base64Variant) -> <init>
    157:160:com.fasterxml.jackson.databind.cfg.BaseSettings withClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> a
    193:196:com.fasterxml.jackson.databind.cfg.BaseSettings withPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> a
    292:292:com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector() -> a
    296:296:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> b
    300:300:com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> c
    304:304:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> d
    308:308:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getTypeResolverBuilder() -> e
    312:312:java.text.DateFormat getDateFormat() -> f
    316:316:com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator() -> g
    320:320:java.util.Locale getLocale() -> h
    324:325:java.util.TimeZone getTimeZone() -> i
    340:340:com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> j
    29:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ConfigFeature -> b.a.a.c.b.b:
    boolean enabledByDefault() -> a
    int getMask() -> b
com.fasterxml.jackson.databind.cfg.ConfigOverride -> b.a.a.c.b.c:
    com.fasterxml.jackson.annotation.JsonFormat$Value _format -> a
    com.fasterxml.jackson.annotation.JsonInclude$Value _include -> b
    com.fasterxml.jackson.annotation.JsonInclude$Value _includeAsProperty -> c
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value _ignorals -> d
    com.fasterxml.jackson.annotation.JsonSetter$Value _setterInfo -> e
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value _visibility -> f
    java.lang.Boolean _isIgnoredType -> g
    java.lang.Boolean _mergeable -> h
    76:76:void <init>() -> <init>
    92:92:com.fasterxml.jackson.databind.cfg.ConfigOverride empty() -> a
    95:95:com.fasterxml.jackson.annotation.JsonFormat$Value getFormat() -> b
    96:96:com.fasterxml.jackson.annotation.JsonInclude$Value getInclude() -> c
    101:101:com.fasterxml.jackson.annotation.JsonInclude$Value getIncludeAsProperty() -> d
    103:103:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getIgnorals() -> e
    106:106:java.lang.Boolean getIsIgnoredType() -> f
    112:112:com.fasterxml.jackson.annotation.JsonSetter$Value getSetterInfo() -> g
    117:117:com.fasterxml.jackson.annotation.JsonAutoDetect$Value getVisibility() -> h
    122:122:java.lang.Boolean getMergeable() -> i
com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty -> b.a.a.c.b.d:
    com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty INSTANCE -> i
    133:133:void <init>() -> <init>
    131:131:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ConfigOverrides -> b.a.a.c.b.e:
    java.util.Map _overrides -> a
    com.fasterxml.jackson.annotation.JsonInclude$Value _defaultInclusion -> b
    com.fasterxml.jackson.annotation.JsonSetter$Value _defaultSetterInfo -> c
    com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker -> d
    java.lang.Boolean _defaultMergeable -> e
    53:60:void <init>() -> <init>
    66:72:void <init>(java.util.Map,com.fasterxml.jackson.annotation.JsonInclude$Value,com.fasterxml.jackson.annotation.JsonSetter$Value,com.fasterxml.jackson.databind.introspect.VisibilityChecker,java.lang.Boolean) -> <init>
    96:99:com.fasterxml.jackson.databind.cfg.ConfigOverride findOverride(java.lang.Class) -> a
    121:121:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion() -> a
    125:125:com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> b
    129:129:java.lang.Boolean getDefaultMergeable() -> c
    136:136:com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibility() -> d
com.fasterxml.jackson.databind.cfg.ContextAttributes -> b.a.a.c.b.f:
    21:21:void <init>() -> <init>
    24:24:com.fasterxml.jackson.databind.cfg.ContextAttributes getEmpty() -> a
    java.lang.Object getAttribute(java.lang.Object) -> a
    com.fasterxml.jackson.databind.cfg.ContextAttributes withPerCallAttribute(java.lang.Object,java.lang.Object) -> a
com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl -> b.a.a.c.b.g:
    com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl EMPTY -> a
    java.lang.Object NULL_SURROGATE -> b
    java.util.Map _shared -> c
    java.util.Map _nonShared -> d
    92:95:void <init>(java.util.Map) -> <init>
    97:100:void <init>(java.util.Map,java.util.Map) -> <init>
    103:103:com.fasterxml.jackson.databind.cfg.ContextAttributes getEmpty() -> b
    160:169:java.lang.Object getAttribute(java.lang.Object) -> a
    176:193:com.fasterxml.jackson.databind.cfg.ContextAttributes withPerCallAttribute(java.lang.Object,java.lang.Object) -> a
    208:213:com.fasterxml.jackson.databind.cfg.ContextAttributes nonSharedInstance(java.lang.Object,java.lang.Object) -> b
    67:69:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig -> b.a.a.c.b.h:
    com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS -> a
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] NO_MODIFIERS -> b
    com.fasterxml.jackson.databind.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS -> c
    com.fasterxml.jackson.databind.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS -> d
    com.fasterxml.jackson.databind.deser.KeyDeserializers[] DEFAULT_KEY_DESERIALIZERS -> e
    com.fasterxml.jackson.databind.deser.Deserializers[] _additionalDeserializers -> f
    com.fasterxml.jackson.databind.deser.KeyDeserializers[] _additionalKeyDeserializers -> g
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] _modifiers -> h
    com.fasterxml.jackson.databind.AbstractTypeResolver[] _abstractTypeResolvers -> i
    com.fasterxml.jackson.databind.deser.ValueInstantiators[] _valueInstantiators -> j
    71:72:void <init>() -> <init>
    83:91:void <init>(com.fasterxml.jackson.databind.deser.Deserializers[],com.fasterxml.jackson.databind.deser.KeyDeserializers[],com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[],com.fasterxml.jackson.databind.AbstractTypeResolver[],com.fasterxml.jackson.databind.deser.ValueInstantiators[]) -> <init>
    101:105:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> a
    117:121:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> a
    133:137:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> a
    150:154:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> a
    170:174:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> a
    180:180:boolean hasKeyDeserializers() -> a
    182:182:boolean hasDeserializerModifiers() -> b
    184:184:boolean hasAbstractTypeResolvers() -> c
    186:186:boolean hasValueInstantiators() -> d
    189:189:java.lang.Iterable deserializers() -> e
    193:193:java.lang.Iterable keyDeserializers() -> f
    197:197:java.lang.Iterable deserializerModifiers() -> g
    201:201:java.lang.Iterable abstractTypeResolvers() -> h
    205:205:java.lang.Iterable valueInstantiators() -> i
    17:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.HandlerInstantiator -> b.a.a.c.b.i:
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> a
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> b
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> a
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> a
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> b
    115:115:com.fasterxml.jackson.databind.deser.ValueInstantiator valueInstantiatorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> c
    126:126:com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> d
    130:130:com.fasterxml.jackson.annotation.ObjectIdResolver resolverIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> e
    141:141:com.fasterxml.jackson.databind.PropertyNamingStrategy namingStrategyInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> f
    151:151:com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> g
    162:162:com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter virtualPropertyWriterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> a
    180:180:java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> a
com.fasterxml.jackson.databind.cfg.MapperConfig -> b.a.a.c.b.j:
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> i
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY_FORMAT -> j
    int _mapperFeatures -> k
    com.fasterxml.jackson.databind.cfg.BaseSettings _base -> l
    69:72:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,int) -> <init>
    75:78:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,int) -> <init>
    81:84:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    98:104:int collectFeatureDefaults(java.lang.Class) -> a
    141:141:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> a
    161:161:boolean isAnnotationProcessingEnabled() -> e
    176:176:boolean canOverrideAccessModifiers() -> f
    184:184:boolean shouldSortPropertiesAlphabetically() -> g
    216:216:com.fasterxml.jackson.core.SerializableString compileString(java.lang.String) -> a
    226:226:com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector() -> h
    236:239:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> i
    243:243:com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> j
    247:247:com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator() -> k
    263:263:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getDefaultTyper(com.fasterxml.jackson.databind.JavaType) -> e
    269:269:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> l
    281:281:com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class) -> b
    297:297:com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> a
    311:311:com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class) -> c
    319:319:com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> f
    com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class) -> d
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class) -> e
    403:407:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class,com.fasterxml.jackson.annotation.JsonInclude$Value) -> a
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class) -> a
    440:444:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class,com.fasterxml.jackson.annotation.JsonInclude$Value) -> a
    com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> f
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> a
    com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> m
    java.lang.Boolean getDefaultMergeable() -> n
    553:553:java.text.DateFormat getDateFormat() -> o
    560:560:java.util.Locale getLocale() -> p
    567:567:java.util.TimeZone getTimeZone() -> q
    582:582:com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> r
    617:624:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> a
    634:641:com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> b
    45:50:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.MapperConfigBase -> b.a.a.c.b.k:
    com.fasterxml.jackson.databind.cfg.ConfigOverride EMPTY_OVERRIDE -> m
    int DEFAULT_MAPPER_FEATURES -> a
    int AUTO_DETECT_MASK -> b
    com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns -> n
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver -> o
    com.fasterxml.jackson.databind.PropertyName _rootName -> p
    java.lang.Class _view -> q
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> r
    com.fasterxml.jackson.databind.util.RootNameLookup _rootNames -> s
    com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides -> t
    125:134:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    171:179:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    183:191:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,int) -> <init>
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> b
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(int) -> b
    287:294:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.MapperFeature[]) -> a
    305:312:com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.MapperFeature[]) -> b
    452:452:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> a
    562:562:com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> s
    577:577:com.fasterxml.jackson.databind.PropertyName getFullRootName() -> t
    582:582:java.lang.Class getActiveView() -> u
    587:587:com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes() -> v
    598:599:com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class) -> d
    609:609:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion() -> w
    614:619:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class) -> e
    625:630:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class) -> a
    635:642:com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> f
    647:656:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class) -> g
    663:667:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> b
    673:693:com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker() -> x
    699:708:com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> a
    713:713:com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> m
    718:718:java.lang.Boolean getDefaultMergeable() -> n
    724:731:java.lang.Boolean getDefaultMergeable(java.lang.Class) -> h
    742:745:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType) -> g
    750:753:com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class) -> i
    768:768:java.lang.Class findMixInClassFor(java.lang.Class) -> j
    30:42:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig -> b.a.a.c.b.l:
    com.fasterxml.jackson.databind.ser.Serializers[] NO_SERIALIZERS -> a
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] NO_MODIFIERS -> b
    com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers -> c
    com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers -> d
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers -> e
    42:43:void <init>() -> <init>
    48:54:void <init>(com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.BeanSerializerModifier[]) -> <init>
    58:62:com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> a
    67:71:com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> b
    76:80:com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> a
    84:84:boolean hasKeySerializers() -> a
    85:85:boolean hasSerializerModifiers() -> b
    86:86:java.lang.Iterable serializers() -> c
    87:87:java.lang.Iterable keySerializers() -> d
    88:88:java.lang.Iterable serializerModifiers() -> e
    19:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.AbstractDeserializer -> b.a.a.c.c.a:
    com.fasterxml.jackson.databind.JavaType _baseType -> a
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> b
    java.util.Map _backRefProperties -> c
    java.util.Map _properties -> d
    boolean _acceptString -> e
    boolean _acceptBoolean -> f
    boolean _acceptInt -> g
    boolean _acceptDouble -> h
    64:74:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,java.util.Map,java.util.Map) -> <init>
    83:92:void <init>(com.fasterxml.jackson.databind.BeanDescription) -> <init>
    99:109:void <init>(com.fasterxml.jackson.databind.deser.AbstractDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.util.Map) -> <init>
    118:118:com.fasterxml.jackson.databind.deser.AbstractDeserializer constructForNonPOJO(com.fasterxml.jackson.databind.BeanDescription) -> a
    125:173:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    184:184:java.lang.Class handledType() -> a
    188:188:boolean isCachable() -> b
    197:197:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    207:207:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> e
    216:216:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> a
    232:254:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    264:265:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    283:310:java.lang.Object _deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    319:327:java.lang.Object _deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> c
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory -> b.a.a.c.c.b:
    java.lang.Class CLASS_OBJECT -> e
    java.lang.Class CLASS_STRING -> g
    java.lang.Class CLASS_CHAR_SEQUENCE -> h
    java.lang.Class CLASS_ITERABLE -> i
    java.lang.Class CLASS_MAP_ENTRY -> j
    com.fasterxml.jackson.databind.PropertyName UNWRAPPED_CREATOR_PARAM_NAME -> a
    java.util.HashMap _mapFallbacks -> b
    java.util.HashMap _collectionFallbacks -> c
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig _factoryConfig -> d
    112:114:void <init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> <init>
    com.fasterxml.jackson.databind.deser.DeserializerFactory withConfig(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> a
    141:141:com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> a
    150:150:com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> a
    159:159:com.fasterxml.jackson.databind.deser.DeserializerFactory withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> a
    168:168:com.fasterxml.jackson.databind.deser.DeserializerFactory withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> a
    177:177:com.fasterxml.jackson.databind.deser.DeserializerFactory withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> a
    191:203:com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> a
    213:222:com.fasterxml.jackson.databind.JavaType _mapAbstractType2(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> c
    241:279:com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> a
    286:303:com.fasterxml.jackson.databind.deser.ValueInstantiator _findStdValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
    314:339:com.fasterxml.jackson.databind.deser.ValueInstantiator _constructDefaultValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> b
    345:370:java.util.Map _findCreatorsFromProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> c
    377:407:com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiatorInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> a
    425:599:void _addDeserializerConstructors(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.Map) -> a
    614:651:void _addExplicitDelegatingCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> a
    663:691:void _addExplicitPropertyCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> b
    704:745:void _addExplicitAnyCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> c
    751:766:boolean _checkIfCreatorPropertyBased(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> a
    774:821:void _checkImplicitlyNamedConstructors(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.List) -> a
    829:969:void _addDeserializerFactoryMethods(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.Map) -> b
    975:1011:boolean _handleSingleArgumentCreator(com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,boolean) -> a
    1020:1023:void _reportUnwrappedCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> a
    1036:1076:com.fasterxml.jackson.databind.deser.SettableBeanProperty constructCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.PropertyName,int,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.annotation.JacksonInject$Value) -> a
    1081:1094:com.fasterxml.jackson.databind.PropertyName _findParamName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.AnnotationIntrospector) -> a
    1108:1140:com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription) -> a
    1154:1230:com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription) -> a
    1235:1240:com.fasterxml.jackson.databind.type.CollectionType _mapAbstractCollectionType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig) -> a
    1249:1270:com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription) -> a
    1284:1381:com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription) -> a
    1390:1421:com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription) -> a
    1438:1477:com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    1486:1493:com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    1501:1538:com.fasterxml.jackson.databind.JsonDeserializer createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription) -> a
    1552:1577:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> b
    1589:1589:com.fasterxml.jackson.databind.JsonDeserializer findOptionalStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> b
    1603:1630:com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> a
    1637:1681:com.fasterxml.jackson.databind.KeyDeserializer _createEnumKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> b
    1707:1716:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    1734:1744:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyContentTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
    1758:1816:com.fasterxml.jackson.databind.JsonDeserializer findDefaultDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> c
    1820:1821:com.fasterxml.jackson.databind.JavaType _findRemappedType(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> a
    1834:1840:com.fasterxml.jackson.databind.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
    1848:1855:com.fasterxml.jackson.databind.JsonDeserializer _findCustomReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    1863:1869:com.fasterxml.jackson.databind.JsonDeserializer _findCustomBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
    1877:1884:com.fasterxml.jackson.databind.JsonDeserializer _findCustomArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    1892:1899:com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    1907:1914:com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    1921:1927:com.fasterxml.jackson.databind.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> b
    1936:1943:com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    1952:1959:com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    1980:1987:com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> a
    1999:2006:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> b
    2016:2023:com.fasterxml.jackson.databind.JsonDeserializer findContentDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> c
    2039:2083:com.fasterxml.jackson.databind.JavaType resolveMemberAndTypeAnnotations(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> a
    2089:2099:com.fasterxml.jackson.databind.util.EnumResolver constructEnumResolver(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    2107:2112:boolean _hasCreatorAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> d
    42:92:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$1 -> b.a.a.c.c.c:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonCreator$Mode -> a
    455:455:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializer -> b.a.a.c.c.d:
    java.lang.Exception _nullFromCreator -> a
    com.fasterxml.jackson.databind.util.NameTransformer _currentlyTransforming -> v
    64:66:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean) -> <init>
    73:74:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase) -> <init>
    81:82:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    85:86:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    89:90:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set) -> <init>
    93:94:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    101:112:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    117:117:com.fasterxml.jackson.databind.deser.BeanDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> a
    122:122:com.fasterxml.jackson.databind.deser.BeanDeserializer withIgnorableProperties(java.util.Set) -> a
    127:127:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> a
    132:133:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> g
    149:161:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    168:198:java.lang.Object _deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> a
    215:260:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    277:297:java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> b
    313:378:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    394:506:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> c
    517:520:com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring handleUnresolvedReference(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> a
    528:532:java.lang.Object _deserializeWithErrorWrapping(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    550:562:java.lang.Object deserializeFromNull(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    575:596:java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class) -> a
    613:674:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    682:732:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    743:832:java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> f
    845:858:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> g
    865:910:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> c
    917:996:java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> h
    1007:1010:java.lang.Exception _creatorReturnedNullException() -> h
    17:17:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> b
    17:17:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> b
com.fasterxml.jackson.databind.deser.BeanDeserializer$1 -> b.a.a.c.c.e:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    169:169:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring -> b.a.a.c.c.f:
    com.fasterxml.jackson.databind.DeserializationContext _context -> a
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _prop -> b
    java.lang.Object _bean -> c
    1025:1028:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    1031:1032:void setBean(java.lang.Object) -> a
    1037:1043:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.BeanDeserializerBase -> b.a.a.c.c.g:
    com.fasterxml.jackson.databind.PropertyName TEMP_PROPERTY_NAME -> b
    com.fasterxml.jackson.databind.JavaType _beanType -> c
    com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape -> d
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> e
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> f
    com.fasterxml.jackson.databind.JsonDeserializer _arrayDelegateDeserializer -> g
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> h
    boolean _nonStandardCreation -> i
    boolean _vanillaProcessing -> j
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties -> k
    com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables -> l
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter -> m
    java.util.Set _ignorableProps -> n
    boolean _ignoreAllUnknown -> o
    boolean _needViewProcesing -> p
    java.util.Map _backRefs -> q
    java.util.HashMap _subDeserializers -> r
    com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler -> s
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler _externalTypeIdHandler -> t
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> u
    201:233:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,boolean) -> <init>
    236:237:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase) -> <init>
    241:263:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean) -> <init>
    267:301:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    305:338:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    342:366:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set) -> <init>
    373:394:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> b
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> b
    410:410:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> a
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> g
    437:588:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> c
    596:618:void _replaceProperty(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    623:636:com.fasterxml.jackson.databind.JsonDeserializer _findDelegateDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> a
    654:666:com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    680:763:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    774:795:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveManagedReferenceProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> b
    805:811:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolvedObjectIdProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> c
    822:836:com.fasterxml.jackson.databind.util.NameTransformer _findPropertyUnwrapper(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> d
    849:874:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveInnerClassValuedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> e
    882:914:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveMergeAndNullSettings(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata) -> a
    932:932:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> d
    939:941:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    952:952:boolean isCachable() -> b
    959:959:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    964:964:java.lang.Class handledType() -> a
    974:974:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> e
    994:998:java.util.Collection getKnownPropertyNames() -> c
    1008:1008:com.fasterxml.jackson.databind.JavaType getValueType() -> i
    1043:1043:com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(com.fasterxml.jackson.databind.PropertyName) -> a
    1055:1060:com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(java.lang.String) -> b
    1090:1093:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> a
    1098:1098:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> j
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    1144:1171:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    1186:1204:java.lang.Object _handleTypedObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object) -> a
    1220:1237:java.lang.Object _convertObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    1250:1250:java.lang.Object deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> i
    1259:1268:java.lang.Object deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> j
    1274:1290:java.lang.Object deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> k
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> c
    1301:1343:java.lang.Object deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> l
    1350:1366:java.lang.Object deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> m
    1375:1399:java.lang.Object deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> n
    1407:1419:java.lang.Object deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> o
    1425:1454:java.lang.Object deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> p
    1462:1489:java.lang.Object deserializeFromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> q
    1496:1500:com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer() -> h
    1512:1515:void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    1528:1538:java.lang.Object handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> a
    1549:1562:void handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> a
    1573:1583:void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> b
    1595:1599:void handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> c
    1618:1641:java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> a
    1655:1679:com.fasterxml.jackson.databind.JsonDeserializer _findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> b
    1704:1704:void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> a
    1714:1728:java.lang.Throwable throwOrReturnThrowable(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> b
    1734:1747:java.lang.Object wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> a
    34:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder -> b.a.a.c.c.h:
    com.fasterxml.jackson.databind.DeserializationConfig _config -> a
    com.fasterxml.jackson.databind.DeserializationContext _context -> b
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> c
    java.util.Map _properties -> d
    java.util.List _injectables -> e
    java.util.HashMap _backRefProperties -> f
    java.util.HashSet _ignorableProps -> g
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> h
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> i
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter -> j
    boolean _ignoreAllUnknown -> k
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> l
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value _builderConfig -> m
    54:120:void <init>(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.DeserializationContext) -> <init>
    167:168:void addOrReplaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean) -> a
    177:181:void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    190:207:void addBackReferenceProperty(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    213:222:void addInjectable(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object) -> a
    230:234:void addIgnorable(java.lang.String) -> a
    248:249:void addCreatorProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> b
    253:257:void setAnySetter(com.fasterxml.jackson.databind.deser.SettableAnyProperty) -> a
    260:261:void setIgnoreUnknownProperties(boolean) -> a
    264:265:void setValueInstantiator(com.fasterxml.jackson.databind.deser.ValueInstantiator) -> a
    268:269:void setObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> a
    272:274:void setPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value) -> a
    295:295:com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(com.fasterxml.jackson.databind.PropertyName) -> a
    307:307:com.fasterxml.jackson.databind.deser.SettableAnyProperty getAnySetter() -> a
    311:311:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> b
    315:315:java.util.List getInjectables() -> c
    319:319:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> d
    323:323:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getBuildMethod() -> e
    334:334:boolean hasIgnorable(java.lang.String) -> b
    349:379:com.fasterxml.jackson.databind.JsonDeserializer build() -> f
    392:392:com.fasterxml.jackson.databind.deser.AbstractDeserializer buildAbstract() -> g
    403:452:com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBased(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> a
    477:501:void _fixAccess(java.util.Collection) -> a
    505:522:java.util.Map _collectAliases(java.util.Collection) -> b
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory -> b.a.a.c.c.i:
    java.lang.Class[] INIT_CAUSE_PARAMS -> g
    com.fasterxml.jackson.databind.deser.BeanDeserializerFactory instance -> e
    54:55:void <init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> <init>
    65:75:com.fasterxml.jackson.databind.deser.DeserializerFactory withConfig(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> a
    94:137:com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> d
    146:148:com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class) -> a
    161:170:com.fasterxml.jackson.databind.JsonDeserializer findStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> e
    178:184:com.fasterxml.jackson.databind.JavaType materializeAbstractType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> f
    214:254:com.fasterxml.jackson.databind.JsonDeserializer buildBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> g
    272:320:com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> h
    327:358:void addObjectIdReader(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> a
    365:418:com.fasterxml.jackson.databind.JsonDeserializer buildThrowableDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> i
    435:435:com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> d
    449:593:void addBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> b
    599:600:boolean _isSetterlessType(java.lang.Class) -> b
    615:636:java.util.List filterBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,java.util.List,java.util.Set) -> a
    650:674:void addBackReferenceProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> c
    692:701:void addInjectables(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> d
    721:767:com.fasterxml.jackson.databind.deser.SettableAnyProperty constructAnySetter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    784:820:com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSettableProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> a
    831:844:com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSetterlessProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> a
    863:877:boolean isPotentialBeanType(java.lang.Class) -> a
    887:907:boolean isIgnorableType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class,java.util.Map) -> a
    917:918:void _validateSubType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> j
    38:50:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializerModifier -> b.a.a.c.c.j:
    50:50:void <init>() -> <init>
    64:64:java.util.List updateProperties(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> a
    77:77:com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder updateBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> a
    90:90:com.fasterxml.jackson.databind.JsonDeserializer modifyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    104:104:com.fasterxml.jackson.databind.JsonDeserializer modifyEnumDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    112:112:com.fasterxml.jackson.databind.JsonDeserializer modifyReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    134:134:com.fasterxml.jackson.databind.JsonDeserializer modifyArrayDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    142:142:com.fasterxml.jackson.databind.JsonDeserializer modifyCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    150:150:com.fasterxml.jackson.databind.JsonDeserializer modifyCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    158:158:com.fasterxml.jackson.databind.JsonDeserializer modifyMapDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    166:166:com.fasterxml.jackson.databind.JsonDeserializer modifyMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    180:180:com.fasterxml.jackson.databind.KeyDeserializer modifyKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer) -> a
com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer -> b.a.a.c.c.k:
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> a
    com.fasterxml.jackson.databind.JavaType _targetType -> v
    53:62:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,boolean) -> <init>
    96:99:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    102:105:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    108:111:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,java.util.Set) -> <init>
    114:117:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    126:126:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    131:131:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> b
    136:136:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> b
    141:141:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> a
    146:147:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> g
    159:159:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    172:178:java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    190:219:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    233:244:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    261:277:java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> a
    288:322:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    341:425:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> c
    432:473:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    486:506:java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class) -> a
    523:573:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    581:642:java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    649:679:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> b
    692:695:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> f
    702:748:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> c
    756:757:java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> g
com.fasterxml.jackson.databind.deser.ContextualDeserializer -> b.a.a.c.c.l:
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer -> b.a.a.c.c.m:
    com.fasterxml.jackson.databind.KeyDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.deser.CreatorProperty -> b.a.a.c.c.n:
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter _annotated -> c
    java.lang.Object _injectableValueId -> d
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _fallbackSetter -> e
    int _creatorIndex -> f
    boolean _ignorable -> g
    95:100:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,java.lang.Object,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    106:112:void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    116:122:void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    126:126:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> a
    131:134:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> a
    139:139:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> a
    144:147:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    156:157:void setFallbackSetter(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    161:162:void markAsIgnorable() -> f
    166:166:boolean isIgnorable() -> g
    213:213:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    216:216:int getCreatorIndex() -> h
    229:231:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    237:238:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    244:246:void set(java.lang.Object,java.lang.Object) -> a
    251:252:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> b
    257:257:java.lang.Object getInjectableValueId() -> i
    261:261:java.lang.String toString() -> toString
    265:268:void _verifySetter() -> s
    273:281:void _reportMissingSetter(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
com.fasterxml.jackson.databind.deser.DataFormatReaders -> b.a.a.c.c.o:
    com.fasterxml.jackson.databind.ObjectReader[] _readers -> a
    com.fasterxml.jackson.core.format.MatchStrength _optimalMatch -> b
    com.fasterxml.jackson.core.format.MatchStrength _minimalMatch -> c
    int _maxInputLookahead -> d
    76:81:void <init>(com.fasterxml.jackson.databind.ObjectReader[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int) -> <init>
    133:138:com.fasterxml.jackson.databind.deser.DataFormatReaders withType(com.fasterxml.jackson.databind.JavaType) -> a
    183:183:com.fasterxml.jackson.databind.deser.DataFormatReaders$Match findFormat(byte[],int,int) -> a
    195:206:java.lang.String toString() -> toString
    217:239:com.fasterxml.jackson.databind.deser.DataFormatReaders$Match _findFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader) -> a
com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader -> b.a.a.c.c.p:
    com.fasterxml.jackson.databind.deser.DataFormatReaders this$0 -> f
    259:261:void <init>(com.fasterxml.jackson.databind.deser.DataFormatReaders,byte[],int,int) -> <init>
    265:265:com.fasterxml.jackson.databind.deser.DataFormatReaders$Match createMatcher(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.format.MatchStrength) -> a
com.fasterxml.jackson.databind.deser.DataFormatReaders$Match -> b.a.a.c.c.q:
    java.io.InputStream _originalStream -> a
    byte[] _bufferedData -> b
    int _bufferedStart -> c
    int _bufferedLength -> d
    com.fasterxml.jackson.databind.ObjectReader _match -> e
    com.fasterxml.jackson.core.format.MatchStrength _matchStrength -> f
    305:312:void <init>(java.io.InputStream,byte[],int,int,com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.format.MatchStrength) -> <init>
    324:324:boolean hasMatch() -> a
    337:337:com.fasterxml.jackson.databind.ObjectReader getReader() -> b
    363:370:com.fasterxml.jackson.core.JsonParser createParserWithMatch() -> c
    381:384:java.io.InputStream getDataStream() -> d
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext -> b.a.a.c.c.r:
    java.util.LinkedHashMap _objectIds -> m
    java.util.List _objectIdResolvers -> n
    44:45:void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache) -> <init>
    49:50:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    54:55:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    88:125:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver) -> a
    141:141:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId createReadableObjectId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> a
    147:176:void checkUnresolvedObjectId() -> m
    190:190:boolean tryToResolveUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId) -> a
    204:237:com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> b
    244:278:com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> c
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext with(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> a
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> a
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl -> b.a.a.c.c.s:
    318:319:void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    323:324:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    329:330:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    341:341:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> a
    346:346:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext with(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> a
com.fasterxml.jackson.databind.deser.DeserializationProblemHandler -> b.a.a.c.c.t:
    java.lang.Object NOT_HANDLED -> a
    33:33:void <init>() -> <init>
    74:74:boolean handleUnknownProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String) -> a
    106:106:java.lang.Object handleWeirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String,java.lang.String) -> a
    140:140:java.lang.Object handleWeirdStringValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String,java.lang.String) -> b
    173:173:java.lang.Object handleWeirdNumberValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Number,java.lang.String) -> a
    201:201:java.lang.Object handleWeirdNativeValue(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser) -> a
    236:236:java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> a
    270:270:java.lang.Object handleInstantiationProblem(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Object,java.lang.Throwable) -> a
    306:306:java.lang.Object handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> a
    344:344:com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> a
    380:380:com.fasterxml.jackson.databind.JavaType handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> a
    398:398:java.lang.Object handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> a
    41:41:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.DeserializerCache -> b.a.a.c.c.u:
    java.util.concurrent.ConcurrentHashMap _cachedDeserializers -> a
    java.util.HashMap _incompleteDeserializers -> b
    42:59:void <init>() -> <init>
    139:151:com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> a
    166:174:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> b
    204:210:com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType) -> a
    228:251:com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> c
    264:299:com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> d
    318:358:com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> e
    365:411:com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    423:429:com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> a
    442:447:com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    454:458:com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> b
    480:529:com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> a
    545:561:boolean _hasCustomHandlers(com.fasterxml.jackson.databind.JavaType) -> b
    566:576:java.lang.Class _verifyAsClass(java.lang.Object,java.lang.String,java.lang.Class) -> a
    589:593:com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> a
    599:599:com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> b
com.fasterxml.jackson.databind.deser.DeserializerFactory -> b.a.a.c.c.v:
    com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS -> f
    41:41:void <init>() -> <init>
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> a
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> a
    com.fasterxml.jackson.databind.deser.DeserializerFactory withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> a
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> a
    com.fasterxml.jackson.databind.deser.DeserializerFactory withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> a
    com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> a
    com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> d
    com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class) -> a
    com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    com.fasterxml.jackson.databind.JsonDeserializer createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription) -> a
    com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription) -> a
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription) -> a
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription) -> a
    com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription) -> a
    com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription) -> a
    com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> a
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> b
    43:43:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.Deserializers -> b.a.a.c.c.w:
    com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
    com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> b
    com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
    com.fasterxml.jackson.databind.JsonDeserializer findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
com.fasterxml.jackson.databind.deser.KeyDeserializers -> b.a.a.c.c.x:
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
com.fasterxml.jackson.databind.deser.NullValueProvider -> b.a.a.c.c.y:
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.ResolvableDeserializer -> b.a.a.c.c.z:
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> c
com.fasterxml.jackson.databind.deser.SettableAnyProperty -> b.a.a.c.c.A:
    com.fasterxml.jackson.databind.BeanProperty _property -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _setter -> b
    boolean _setterIsField -> c
    com.fasterxml.jackson.databind.JavaType _type -> d
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> e
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> f
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> g
    61:69:void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    79:79:com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> a
    84:86:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    111:111:com.fasterxml.jackson.databind.BeanProperty getProperty() -> a
    113:113:boolean hasValueDeserializer() -> b
    115:115:com.fasterxml.jackson.databind.JavaType getType() -> c
    132:143:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> a
    147:154:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    162:181:void set(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    197:214:void _throwAsIOE(java.lang.Exception,java.lang.Object,java.lang.Object) -> a
    217:217:java.lang.String getClassName() -> d
    219:219:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring -> b.a.a.c.c.B:
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _parent -> a
    java.lang.Object _pojo -> b
    java.lang.String _propName -> c
    229:233:void <init>(com.fasterxml.jackson.databind.deser.SettableAnyProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object,java.lang.String) -> <init>
    239:244:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.SettableBeanProperty -> b.a.a.c.c.C:
    com.fasterxml.jackson.databind.JsonDeserializer MISSING_VALUE_DESERIALIZER -> h
    com.fasterxml.jackson.databind.PropertyName _propName -> i
    com.fasterxml.jackson.databind.JavaType _type -> j
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> k
    com.fasterxml.jackson.databind.util.Annotations _contextAnnotations -> l
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> m
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> n
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> o
    java.lang.String _managedReferenceName -> p
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo _objectIdInfo -> q
    com.fasterxml.jackson.databind.util.ViewMatcher _viewMatcher -> r
    int _propertyIndex -> s
    136:138:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations) -> <init>
    125:167:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    125:192:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    125:210:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    125:239:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    125:257:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> a
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> a
    287:289:com.fasterxml.jackson.databind.deser.SettableBeanProperty withSimpleName(java.lang.String) -> a
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> a
    298:299:void setManagedReferenceName(java.lang.String) -> b
    302:303:void setObjectIdInfo(com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> a
    306:311:void setViews(java.lang.Class[]) -> a
    317:321:void assignIndex(int) -> a
    332:332:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    337:337:void markAsIgnorable() -> f
    342:342:boolean isIgnorable() -> g
    352:352:java.lang.String getName() -> a
    357:357:com.fasterxml.jackson.databind.PropertyName getFullName() -> b
    361:361:com.fasterxml.jackson.databind.JavaType getType() -> c
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    398:398:java.lang.Class getDeclaringClass() -> j
    401:401:java.lang.String getManagedReferenceName() -> k
    403:403:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> l
    406:406:boolean hasValueDeserializer() -> m
    409:409:boolean hasValueTypeDeserializer() -> n
    412:416:com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer() -> o
    419:419:com.fasterxml.jackson.databind.jsontype.TypeDeserializer getValueTypeDeserializer() -> p
    427:427:boolean visibleInView(java.lang.Class) -> a
    430:430:boolean hasViews() -> q
    449:451:int getCreatorIndex() -> h
    458:458:java.lang.Object getInjectableValueId() -> i
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    void set(java.lang.Object,java.lang.Object) -> a
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> b
    523:529:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    540:554:java.lang.Object deserializeWith(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> c
    569:587:void _throwAsIOE(com.fasterxml.jackson.core.JsonParser,java.lang.Exception,java.lang.Object) -> a
    594:598:java.io.IOException _throwAsIOE(com.fasterxml.jackson.core.JsonParser,java.lang.Exception) -> a
    609:610:void _throwAsIOE(java.lang.Exception,java.lang.Object) -> a
    612:612:java.lang.String toString() -> toString
    36:36:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating -> b.a.a.c.c.D:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty delegate -> c
    636:638:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    647:650:com.fasterxml.jackson.databind.deser.SettableBeanProperty _with(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> b
    655:655:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> a
    660:660:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> a
    665:665:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> a
    670:671:void assignIndex(int) -> a
    675:676:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    685:685:java.lang.Class getDeclaringClass() -> j
    688:688:java.lang.String getManagedReferenceName() -> k
    691:691:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> l
    694:694:boolean hasValueDeserializer() -> m
    697:697:boolean hasValueTypeDeserializer() -> n
    700:700:com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer() -> o
    703:703:com.fasterxml.jackson.databind.jsontype.TypeDeserializer getValueTypeDeserializer() -> p
    706:706:boolean visibleInView(java.lang.Class) -> a
    709:709:boolean hasViews() -> q
    715:715:int getCreatorIndex() -> h
    718:718:java.lang.Object getInjectableValueId() -> i
    722:722:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    749:750:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    756:756:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    761:762:void set(java.lang.Object,java.lang.Object) -> a
    766:766:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference -> b.a.a.c.c.E:
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId _roid -> d
    java.util.List _unresolvedIds -> e
    28:30:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.databind.deser.impl.ReadableObjectId) -> <init>
    36:38:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    65:65:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId getRoid() -> f
    69:69:java.lang.Object getUnresolvedId() -> g
    73:74:void addUnresolvedId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation) -> a
    83:98:java.lang.String getMessage() -> getMessage
com.fasterxml.jackson.databind.deser.UnresolvedId -> b.a.a.c.c.F:
    java.lang.Object _id -> a
    com.fasterxml.jackson.core.JsonLocation _location -> b
    java.lang.Class _type -> c
    16:20:void <init>(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation) -> <init>
    35:36:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.ValueInstantiator -> b.a.a.c.c.G:
    31:31:void <init>() -> <init>
    50:50:java.lang.Class getValueClass() -> a
    58:62:java.lang.String getValueTypeDesc() -> b
    71:75:boolean canInstantiate() -> c
    82:82:boolean canCreateFromString() -> d
    88:88:boolean canCreateFromInt() -> e
    94:94:boolean canCreateFromLong() -> f
    100:100:boolean canCreateFromDouble() -> g
    106:106:boolean canCreateFromBoolean() -> h
    113:113:boolean canCreateUsingDefault() -> i
    120:120:boolean canCreateUsingDelegate() -> j
    129:129:boolean canCreateUsingArrayDelegate() -> k
    136:136:boolean canCreateFromObjectWith() -> l
    149:149:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    159:159:com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> b
    170:170:com.fasterxml.jackson.databind.JavaType getArrayDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> c
    189:189:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> a
    203:203:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> a
    229:229:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer) -> a
    237:237:java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    246:246:java.lang.Object createUsingArrayDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    258:258:java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> a
    262:264:java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> a
    268:270:java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> a
    274:276:java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> a
    280:282:java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> a
    301:301:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> m
    311:311:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> n
    321:321:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getArrayDelegateCreator() -> o
    338:338:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getIncompleteParameter() -> p
    356:371:java.lang.Object _createFromStringFallbacks(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> b
com.fasterxml.jackson.databind.deser.ValueInstantiator$Base -> b.a.a.c.c.H:
    java.lang.Class _valueType -> a
    403:405:void <init>(java.lang.Class) -> <init>
    407:409:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    413:413:java.lang.String getValueTypeDesc() -> b
    418:418:java.lang.Class getValueClass() -> a
com.fasterxml.jackson.databind.deser.ValueInstantiators -> b.a.a.c.c.I:
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> a
com.fasterxml.jackson.databind.deser.ValueInstantiators$Base -> b.a.a.c.c.J:
    44:44:com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> a
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer -> b.a.a.c.c.a.a:
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate -> a
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties -> v
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> w
    com.fasterxml.jackson.databind.JavaType _targetType -> x
    55:60:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    69:69:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    74:74:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> b
    80:80:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> b
    86:86:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> a
    92:92:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> g
    104:104:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    117:119:java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    128:169:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    177:177:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    184:184:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    203:247:java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    263:332:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> c
    345:349:java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer -> b.a.a.c.c.a.b:
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate -> a
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties -> v
    47:50:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> <init>
    59:59:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    64:64:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> b
    70:70:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> b
    76:76:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> a
    82:82:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> g
    96:139:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    147:193:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    201:201:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    217:264:java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    279:353:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> c
    365:369:java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap -> b.a.a.c.c.a.c:
    boolean _caseInsensitive -> a
    int _hashMask -> b
    int _size -> c
    int _spillCount -> d
    java.lang.Object[] _hashArea -> e
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propsInOrder -> f
    java.util.Map _aliasDefs -> g
    java.util.Map _aliasMapping -> h
    84:90:void <init>(boolean,java.util.Collection,java.util.Map) -> <init>
    102:110:void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,boolean) -> <init>
    120:123:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withCaseInsensitivity(boolean) -> a
    128:173:void init(java.util.Collection) -> a
    177:188:int findSize(int) -> a
    196:196:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap construct(java.util.Collection,boolean,java.util.Map) -> a
    215:259:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    265:272:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap assignIndexes() -> a
    281:300:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap renameAll(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    318:336:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withoutProperties(java.util.Collection) -> b
    362:375:void replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    383:408:void remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> b
    416:416:int size() -> b
    422:422:boolean isCaseInsensitive() -> c
    429:429:boolean hasAliases() -> d
    437:437:java.util.Iterator iterator() -> iterator
    441:448:java.util.List _properties() -> f
    460:460:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getPropertiesInInsertionOrder() -> e
    466:466:java.lang.String getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> c
    493:510:com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String) -> a
    515:536:com.fasterxml.jackson.databind.deser.SettableBeanProperty _find2(java.lang.String,int,java.lang.Object) -> a
    541:555:com.fasterxml.jackson.databind.deser.SettableBeanProperty _findWithAlias(java.lang.String) -> b
    561:576:com.fasterxml.jackson.databind.deser.SettableBeanProperty _find2ViaAlias(java.lang.String,int,java.lang.Object) -> b
    618:639:java.lang.String toString() -> toString
    650:664:com.fasterxml.jackson.databind.deser.SettableBeanProperty _rename(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.util.NameTransformer) -> a
    723:728:int _findFromOrdered(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> d
    742:742:int _hashCode(java.lang.String) -> c
    748:765:java.util.Map _buildAliasMapping(java.util.Map) -> a
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate -> b.a.a.c.c.a.d:
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _creator -> b
    int _paramCount -> c
    com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param[] _params -> d
    18:23:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param[],int) -> <init>
    28:35:com.fasterxml.jackson.databind.deser.impl.CreatorCandidate construct(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition[]) -> a
    38:38:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams creator() -> a
    39:39:int paramCount() -> b
    40:40:com.fasterxml.jackson.annotation.JacksonInject$Value injection(int) -> a
    41:41:com.fasterxml.jackson.databind.introspect.AnnotatedParameter parameter(int) -> b
    42:42:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition propertyDef(int) -> c
    45:49:com.fasterxml.jackson.databind.PropertyName paramName(int) -> d
    53:59:com.fasterxml.jackson.databind.PropertyName explicitParamName(int) -> e
    63:67:com.fasterxml.jackson.databind.PropertyName findImplicitParamName(int) -> f
    77:86:int findOnlyParamWithoutInjection() -> c
    91:91:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param -> b.a.a.c.c.a.e:
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter annotated -> a
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition propDef -> b
    com.fasterxml.jackson.annotation.JacksonInject$Value injection -> c
    101:105:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.annotation.JacksonInject$Value) -> <init>
com.fasterxml.jackson.databind.deser.impl.CreatorCollector -> b.a.a.c.c.a.f:
    java.lang.String[] TYPE_DESCS -> a
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> b
    boolean _canFixAccess -> c
    boolean _forceAccess -> d
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams[] _creators -> e
    int _explicitCreators -> f
    boolean _hasNonDefaultCreator -> g
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _delegateArgs -> h
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _arrayDelegateArgs -> i
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propertyBasedArgs -> j
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter _incompleteParameter -> k
    51:84:void <init>(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.cfg.MapperConfig) -> <init>
    88:112:com.fasterxml.jackson.databind.deser.ValueInstantiator constructValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    132:133:void setDefaultCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> a
    136:137:void addStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> a
    140:141:void addIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> b
    144:145:void addLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> c
    148:149:void addDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> d
    152:153:void addBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> e
    159:168:void addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],int) -> a
    173:194:void addPropertyCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> a
    212:212:boolean hasDefaultCreator() -> a
    219:219:boolean hasDelegatingCreator() -> b
    226:226:boolean hasPropertyBasedCreator() -> c
    237:250:com.fasterxml.jackson.databind.JavaType _computeDelegateType(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> a
    254:258:com.fasterxml.jackson.databind.introspect.AnnotatedMember _fixAccess(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    266:322:boolean verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean) -> a
    331:332:boolean _isEnumValueOf(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> b
    32:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor -> b.a.a.c.c.a.g:
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _base -> a
    int _type -> d
    363:366:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int) -> <init>
    370:382:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams tryToOptimize(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> a
    386:394:java.lang.Object _construct() -> a
    399:399:int getParameterCount() -> b
    404:404:java.lang.Class getRawParameterType(int) -> a
    409:409:com.fasterxml.jackson.databind.JavaType getParameterType(int) -> b
    420:420:java.lang.Object call() -> c
    425:425:java.lang.Object call(java.lang.Object[]) -> a
    430:430:java.lang.Object call1(java.lang.Object) -> a
    435:435:java.lang.Class getDeclaringClass() -> d
    440:440:java.lang.reflect.Member getMember() -> e
    446:446:void setValue(java.lang.Object,java.lang.Object) -> a
    452:452:java.lang.Object getValue(java.lang.Object) -> b
    457:457:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> a
    462:462:java.lang.reflect.AnnotatedElement getAnnotated() -> f
    472:472:java.lang.String getName() -> g
    477:477:com.fasterxml.jackson.databind.JavaType getType() -> h
    482:482:java.lang.Class getRawType() -> i
    487:487:boolean equals(java.lang.Object) -> equals
    492:492:int hashCode() -> hashCode
    497:497:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer -> b.a.a.c.c.a.h:
    java.lang.Error _cause -> a
    21:23:void <init>(java.lang.NoClassDefFoundError) -> <init>
    27:27:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler -> b.a.a.c.c.a.i:
    com.fasterxml.jackson.databind.JavaType _beanType -> a
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty[] _properties -> b
    java.util.Map _nameToPropertyIndex -> c
    java.lang.String[] _typeIds -> d
    com.fasterxml.jackson.databind.util.TokenBuffer[] _tokens -> e
    40:46:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty[],java.util.Map,java.lang.String[],com.fasterxml.jackson.databind.util.TokenBuffer[]) -> <init>
    49:56:void <init>(com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler) -> <init>
    62:62:com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder builder(com.fasterxml.jackson.databind.JavaType) -> a
    70:70:com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler start() -> a
    85:102:boolean handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object) -> a
    109:123:boolean _handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object,java.lang.String,int) -> a
    138:194:boolean handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object) -> b
    205:248:java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    260:310:java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator) -> a
    317:332:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String) -> a
    342:359:void _deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String) -> a
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder -> b.a.a.c.c.a.j:
    com.fasterxml.jackson.databind.JavaType _beanType -> a
    java.util.List _properties -> b
    java.util.Map _nameToPropertyIndex -> c
    371:376:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    380:384:void addExternal(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    387:400:void _addPropertyIndex(java.lang.String,java.lang.Integer) -> a
    411:422:com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler build(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> a
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty -> b.a.a.c.c.a.k:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _property -> a
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer -> b
    java.lang.String _typePropertyName -> c
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _typeProperty -> d
    439:443:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    449:450:void linkTypeProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    453:453:boolean hasTypePropertyName(java.lang.String) -> a
    457:457:boolean hasDefaultType() -> a
    466:470:java.lang.String getDefaultTypeId() -> b
    473:473:java.lang.String getTypePropertyName() -> c
    476:476:com.fasterxml.jackson.databind.deser.SettableBeanProperty getProperty() -> d
    483:483:com.fasterxml.jackson.databind.deser.SettableBeanProperty getTypeProperty() -> e
com.fasterxml.jackson.databind.deser.impl.FailingDeserializer -> b.a.a.c.c.a.l:
    java.lang.String _message -> a
    23:25:void <init>(java.lang.String) -> <init>
    29:30:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.impl.FieldProperty -> b.a.a.c.c.a.m:
    com.fasterxml.jackson.databind.introspect.AnnotatedField _annotated -> c
    java.lang.reflect.Field _field -> d
    boolean _skipNulls -> e
    46:50:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedField) -> <init>
    54:58:void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    61:65:void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    84:84:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> a
    89:92:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> a
    97:97:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> a
    102:104:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    117:117:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    130:145:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    152:167:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    174:179:void set(java.lang.Object,java.lang.Object) -> a
    185:190:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.impl.InnerClassProperty -> b.a.a.c.c.a.n:
    java.lang.reflect.Constructor _creator -> d
    39:41:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.reflect.Constructor) -> <init>
    59:62:com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    75:93:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    99:99:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers -> b.a.a.c.c.a.o:
    java.lang.Class CLASS_AS_ARRAYS_LIST -> a
    java.lang.Class CLASS_SINGLETON_SET -> b
    java.lang.Class CLASS_SINGLETON_LIST -> c
    java.lang.Class CLASS_SINGLETON_MAP -> d
    java.lang.Class CLASS_UNMODIFIABLE_SET -> e
    java.lang.Class CLASS_UNMODIFIABLE_LIST -> f
    java.lang.Class CLASS_UNMODIFIABLE_MAP -> g
    66:79:com.fasterxml.jackson.databind.JsonDeserializer findForCollection(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> a
    89:96:com.fasterxml.jackson.databind.JsonDeserializer findForMap(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> b
    102:102:com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter converter(int,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> a
    35:57:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$1 -> b.a.a.c.c.a.p:
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter -> b.a.a.c.c.a.q:
    com.fasterxml.jackson.databind.JavaType _inputType -> a
    int _kind -> b
    116:119:void <init>(int,com.fasterxml.jackson.databind.JavaType) -> <init>
    123:158:java.lang.Object convert(java.lang.Object) -> a
    164:164:com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory) -> a
    170:170:com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory) -> b
    174:178:void _checkSingleton(int) -> a
    110:110:void <init>(int,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$1) -> <init>
com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty -> b.a.a.c.c.a.r:
    java.lang.String _referenceName -> d
    boolean _isContainer -> e
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _backProperty -> f
    35:39:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean) -> <init>
    43:43:com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    49:51:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    62:63:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    68:68:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    73:74:void set(java.lang.Object,java.lang.Object) -> a
    82:105:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty -> b.a.a.c.c.a.s:
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> d
    41:43:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> <init>
    55:55:com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty construct(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    60:60:com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    73:87:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    93:112:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    119:122:void set(java.lang.Object,java.lang.Object) -> a
    128:131:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.impl.MethodProperty -> b.a.a.c.c.a.t:
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated -> c
    java.lang.reflect.Method _setter -> d
    boolean _skipNulls -> e
    42:46:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    50:54:void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    57:61:void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    75:75:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> a
    80:83:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> a
    88:88:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> a
    93:95:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    108:108:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    121:136:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    143:158:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    166:171:void set(java.lang.Object,java.lang.Object) -> a
    177:182:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider -> b.a.a.c.c.a.u:
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> a
    19:21:void <init>(com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    31:31:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider -> b.a.a.c.c.a.v:
    com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider SKIPPER -> c
    com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider NULLER -> d
    java.lang.Object _nullValue -> a
    com.fasterxml.jackson.databind.util.AccessPattern _access -> b
    25:29:void <init>(java.lang.Object) -> <init>
    38:38:com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider skipper() -> a
    42:42:com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider nuller() -> b
    46:49:com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider forValue(java.lang.Object) -> a
    58:58:boolean isSkipper(com.fasterxml.jackson.databind.deser.NullValueProvider) -> a
    77:77:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
    17:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.NullsFailProvider -> b.a.a.c.c.a.w:
    com.fasterxml.jackson.databind.PropertyName _name -> a
    com.fasterxml.jackson.databind.JavaType _type -> b
    20:23:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType) -> <init>
    26:26:com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
    30:30:com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForRootValue(com.fasterxml.jackson.databind.JavaType) -> a
    42:42:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader -> b.a.a.c.c.a.x:
    com.fasterxml.jackson.databind.JavaType _idType -> a
    com.fasterxml.jackson.databind.PropertyName propertyName -> b
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> c
    com.fasterxml.jackson.annotation.ObjectIdResolver resolver -> d
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> e
    com.fasterxml.jackson.databind.deser.SettableBeanProperty idProperty -> f
    50:57:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver) -> <init>
    68:68:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver) -> a
    78:78:com.fasterxml.jackson.databind.JsonDeserializer getDeserializer() -> a
    82:82:com.fasterxml.jackson.databind.JavaType getIdType() -> b
    97:97:boolean maySerializeAsObject() -> c
    112:112:boolean isValidReferencePropertyName(java.lang.String,com.fasterxml.jackson.core.JsonParser) -> a
    122:122:java.lang.Object readObjectReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty -> b.a.a.c.c.a.y:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _forward -> c
    23:26:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> <init>
    31:34:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    38:41:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    45:45:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> a
    50:53:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> a
    58:58:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> a
    63:66:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    75:75:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    80:80:int getCreatorIndex() -> h
    85:86:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    92:99:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    105:106:void set(java.lang.Object,java.lang.Object) -> a
    110:110:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring -> b.a.a.c.c.a.z:
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty _parent -> b
    java.lang.Object _pojo -> a
    120:123:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object) -> <init>
    128:133:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty -> b.a.a.c.c.a.A:
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> c
    27:30:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    35:37:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    40:42:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    46:46:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> a
    51:54:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> a
    59:59:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> a
    69:69:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    81:82:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    94:105:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    110:111:void set(java.lang.Object,java.lang.Object) -> a
    116:121:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator -> b.a.a.c.c.a.B:
    int _propertyCount -> a
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> b
    java.util.HashMap _propertyLookup -> c
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _allProperties -> d
    58:93:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],boolean,boolean) -> <init>
    106:117:com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> a
    132:141:com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],boolean) -> a
    165:165:com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(java.lang.String) -> a
    190:190:com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> a
    195:207:java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer) -> a
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator$CaseInsensitiveMap -> b.a.a.c.c.a.C:
    222:222:void <init>() -> <init>
    228:228:com.fasterxml.jackson.databind.deser.SettableBeanProperty get(java.lang.Object) -> a
    233:234:com.fasterxml.jackson.databind.deser.SettableBeanProperty put(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    222:222:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    222:222:java.lang.Object get(java.lang.Object) -> get
com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator -> b.a.a.c.c.a.D:
    13:14:void <init>(java.lang.Class) -> <init>
    18:18:java.lang.Object generateId(java.lang.Object) -> c
    23:23:com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> a
    28:28:com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> a
    33:37:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.impl.PropertyValue -> b.a.a.c.c.a.E:
    com.fasterxml.jackson.databind.deser.impl.PropertyValue next -> a
    java.lang.Object value -> b
    24:27:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object) -> <init>
    void assign(java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any -> b.a.a.c.c.a.F:
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _property -> c
    java.lang.String _propertyName -> d
    82:85:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String) -> <init>
    91:92:void assign(java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map -> b.a.a.c.c.a.G:
    java.lang.Object _key -> c
    106:108:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,java.lang.Object) -> <init>
    115:116:void assign(java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular -> b.a.a.c.c.a.H:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _property -> c
    54:56:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    62:63:void assign(java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer -> b.a.a.c.c.a.I:
    com.fasterxml.jackson.core.JsonParser _parser -> a
    com.fasterxml.jackson.databind.DeserializationContext _context -> b
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> c
    java.lang.Object[] _creatorParameters -> d
    int _paramsNeeded -> e
    int _paramsSeen -> f
    java.util.BitSet _paramsSeenBig -> g
    com.fasterxml.jackson.databind.deser.impl.PropertyValue _buffered -> h
    java.lang.Object _idValue -> i
    87:98:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    152:181:java.lang.Object[] getParameters(com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> a
    187:204:java.lang.Object _findMissing(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    221:225:boolean readIdProperty(java.lang.String) -> a
    233:247:java.lang.Object handleIdValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    250:250:com.fasterxml.jackson.databind.deser.impl.PropertyValue buffered() -> a
    264:285:boolean assignParameter(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object) -> a
    289:290:void bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object) -> b
    293:294:void bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object) -> a
    297:298:void bufferMapProperty(java.lang.Object,java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId -> b.a.a.c.c.a.J:
    java.lang.Object _item -> a
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey _key -> b
    java.util.LinkedList _referringProperties -> c
    com.fasterxml.jackson.annotation.ObjectIdResolver _resolver -> d
    32:34:void <init>(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> <init>
    37:38:void setResolver(com.fasterxml.jackson.annotation.ObjectIdResolver) -> a
    41:41:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey getKey() -> a
    45:49:void appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring) -> a
    57:67:void bindItem(java.lang.Object) -> a
    70:70:java.lang.Object resolve() -> b
    74:74:boolean hasReferringProperties() -> c
    78:81:java.util.Iterator referringProperties() -> d
    101:101:boolean tryToResolveUnresolved(com.fasterxml.jackson.databind.DeserializationContext) -> a
    119:119:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring -> b.a.a.c.c.a.K:
    com.fasterxml.jackson.databind.deser.UnresolvedForwardReference _reference -> a
    java.lang.Class _beanType -> b
    132:135:void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class) -> <init>
    137:140:void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,com.fasterxml.jackson.databind.JavaType) -> <init>
    142:142:com.fasterxml.jackson.core.JsonLocation getLocation() -> a
    143:143:java.lang.Class getBeanType() -> b
    void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> a
    147:147:boolean hasId(java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.impl.SetterlessProperty -> b.a.a.c.c.a.L:
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated -> c
    java.lang.reflect.Method _getter -> d
    39:42:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    46:49:void <init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    52:55:void <init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    59:59:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> a
    64:67:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> a
    72:72:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> a
    77:79:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    92:92:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    104:134:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    140:141:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    146:146:void set(java.lang.Object,java.lang.Object) -> a
    152:153:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer -> b.a.a.c.c.a.M:
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer -> a
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> b
    30:33:void <init>(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    37:37:java.lang.Class handledType() -> a
    42:42:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    52:52:java.util.Collection getKnownPropertyNames() -> c
    57:57:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
    62:62:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    68:68:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    76:76:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    86:86:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler -> b.a.a.c.c.a.N:
    java.util.List _properties -> a
    22:24:void <init>() -> <init>
    25:27:void <init>(java.util.List) -> <init>
    30:31:void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    35:50:com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler renameAll(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    58:64:java.lang.Object processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> a
com.fasterxml.jackson.databind.deser.impl.ValueInjector -> b.a.a.c.c.a.O:
    java.lang.Object _valueId -> h
    27:29:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object) -> <init>
    45:45:java.lang.Object findValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    51:52:void inject(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer -> b.a.a.c.c.b.a:
    33:34:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    45:47:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    66:66:com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    85:85:java.util.Collection createDefaultInstance(com.fasterxml.jackson.databind.DeserializationContext) -> c
    92:100:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> a
    106:106:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    18:18:com.fasterxml.jackson.databind.deser.std.CollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> b
    18:18:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer -> b.a.a.c.c.b.b:
    13:13:void <init>() -> <init>
    17:17:java.util.concurrent.atomic.AtomicBoolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    9:9:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer -> b.a.a.c.c.b.c:
    26:27:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    37:37:com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    42:42:java.util.concurrent.atomic.AtomicReference getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> c
    47:47:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    52:52:java.util.concurrent.atomic.AtomicReference referenceValue(java.lang.Object) -> a
    57:57:java.lang.Object getReferenced(java.util.concurrent.atomic.AtomicReference) -> a
    62:63:java.util.concurrent.atomic.AtomicReference updateReference(java.util.concurrent.atomic.AtomicReference,java.lang.Object) -> a
    69:69:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    9:9:java.lang.Object getReferenced(java.lang.Object) -> b
    9:9:java.lang.Object updateReference(java.lang.Object,java.lang.Object) -> a
    9:9:java.lang.Object referenceValue(java.lang.Object) -> c
    9:9:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
    9:9:com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> b
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer -> b.a.a.c.c.b.d:
    java.lang.Boolean _supportsUpdates -> a
    174:176:void <init>(java.lang.Class,java.lang.Boolean) -> <init>
    184:184:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    192:192:boolean isCachable() -> b
    196:196:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    225:230:void _handleDuplicateField(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode) -> a
    245:287:com.fasterxml.jackson.databind.node.ObjectNode deserializeObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> a
    299:341:com.fasterxml.jackson.databind.node.ObjectNode deserializeObjectAtName(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> b
    354:423:com.fasterxml.jackson.databind.JsonNode updateObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ObjectNode) -> a
    429:463:com.fasterxml.jackson.databind.node.ArrayNode deserializeArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> c
    475:509:com.fasterxml.jackson.databind.JsonNode updateArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ArrayNode) -> a
    515:550:com.fasterxml.jackson.databind.JsonNode deserializeAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> d
    557:575:com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> e
    581:596:com.fasterxml.jackson.databind.JsonNode _fromFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> f
    602:619:com.fasterxml.jackson.databind.JsonNode _fromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> g
com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer -> b.a.a.c.c.b.e:
    14:14:void <init>() -> <init>
    18:19:java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    25:28:java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.nio.ByteBuffer) -> a
    10:10:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    10:10:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer -> b.a.a.c.c.b.f:
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> a
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> b
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> c
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> d
    73:74:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    86:91:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    117:117:com.fasterxml.jackson.databind.deser.std.CollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> b
    127:127:boolean isCachable() -> b
    149:202:com.fasterxml.jackson.databind.deser.std.CollectionDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> b
    213:213:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> g
    218:218:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> h
    232:245:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    255:255:java.util.Collection createDefaultInstance(com.fasterxml.jackson.databind.DeserializationContext) -> c
    264:305:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> a
    314:314:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    328:357:java.util.Collection handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> b
    365:402:java.util.Collection _deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> c
    27:27:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    27:27:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    27:27:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring -> b.a.a.c.c.b.g:
    com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator _parent -> b
    java.util.List next -> a
    470:477:void <init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class) -> <init>
    481:482:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator -> b.a.a.c.c.b.h:
    java.lang.Class _elementType -> a
    java.util.Collection _result -> b
    java.util.List _accumulator -> c
    416:421:void <init>(java.lang.Class,java.util.Collection) -> <init>
    425:431:void add(java.lang.Object) -> a
    435:437:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> a
    442:458:void resolveForwardReference(java.lang.Object,java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase -> b.a.a.c.c.b.i:
    com.fasterxml.jackson.databind.JavaType _containerType -> e
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> f
    java.lang.Boolean _unwrapSingle -> g
    boolean _skipNullValues -> h
    52:57:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    60:61:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    67:68:void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase) -> <init>
    75:80:void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    89:89:com.fasterxml.jackson.databind.JavaType getValueType() -> i
    93:93:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    98:104:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> a
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> g
    134:134:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> h
    141:141:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> d
    146:155:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    171:182:java.lang.Object wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String) -> a
com.fasterxml.jackson.databind.deser.std.DateDeserializers -> b.a.a.c.c.b.j:
    java.util.HashSet _classNames -> a
    42:60:com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> a
    26:38:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer -> b.a.a.c.c.b.k:
    java.lang.reflect.Constructor _defaultCtor -> a
    217:219:void <init>() -> <init>
    223:225:void <init>(java.lang.Class) -> <init>
    228:230:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    234:234:com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> a
    240:256:java.util.Calendar deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    205:205:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    205:205:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> b
    205:205:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer -> b.a.a.c.c.b.l:
    java.text.DateFormat _customFormat -> b
    java.lang.String _formatString -> c
    85:88:void <init>(java.lang.Class) -> <init>
    92:95:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> b
    104:172:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    179:195:java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a_
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer -> b.a.a.c.c.b.m:
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer instance -> a
    273:273:void <init>() -> <init>
    275:276:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    280:280:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> a
    285:285:java.util.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    268:268:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    268:268:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> b
    268:268:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    271:271:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer -> b.a.a.c.c.b.n:
    296:296:void <init>() -> <init>
    298:299:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    303:303:com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> a
    308:309:java.sql.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    293:293:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    293:293:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> b
    293:293:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer -> b.a.a.c.c.b.o:
    322:322:void <init>() -> <init>
    324:325:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    329:329:com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> a
    335:336:java.sql.Timestamp deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    320:320:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    320:320:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> b
    320:320:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.EnumDeserializer -> b.a.a.c.c.b.p:
    java.lang.Object[] _enumsByIndex -> a
    java.lang.Enum _enumDefaultValue -> e
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByName -> b
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByToString -> c
    java.lang.Boolean _caseInsensitive -> d
    57:62:void <init>(com.fasterxml.jackson.databind.util.EnumResolver,java.lang.Boolean) -> <init>
    69:74:void <init>(com.fasterxml.jackson.databind.deser.std.EnumDeserializer,java.lang.Boolean) -> <init>
    105:110:com.fasterxml.jackson.databind.JsonDeserializer deserializerForCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> a
    125:129:com.fasterxml.jackson.databind.JsonDeserializer deserializerForNoArgsCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> a
    136:139:com.fasterxml.jackson.databind.deser.std.EnumDeserializer withResolved(java.lang.Boolean) -> a
    146:151:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    165:165:boolean isCachable() -> b
    170:206:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    218:258:java.lang.Object _deserializeAltString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.CompactStringObjectMap,java.lang.String) -> a
    264:267:java.lang.Object _deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    271:271:java.lang.Class _enumClass() -> g
    276:287:com.fasterxml.jackson.databind.util.CompactStringObjectMap _getToStringLookup(com.fasterxml.jackson.databind.DeserializationContext) -> c
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer -> b.a.a.c.c.b.q:
    java.lang.Class _enumClass -> a
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> b
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> c
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> d
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> i
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> j
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> k
    77:83:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    92:101:void <init>(com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    114:118:com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> a
    132:161:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> c
    173:188:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    198:198:boolean isCachable() -> b
    211:211:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> g
    217:217:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    230:248:java.util.EnumMap deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    257:312:java.util.EnumMap deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumMap) -> a
    321:321:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    325:336:java.util.EnumMap constructMap(com.fasterxml.jackson.databind.DeserializationContext) -> d
    342:413:java.util.EnumMap _deserializeUsingProperties(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    24:24:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    24:24:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer -> b.a.a.c.c.b.r:
    com.fasterxml.jackson.databind.JavaType _enumType -> a
    java.lang.Class _enumClass -> b
    com.fasterxml.jackson.databind.JsonDeserializer _enumDeserializer -> c
    java.lang.Boolean _unwrapSingle -> d
    49:58:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    66:71:void <init>(com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Boolean) -> <init>
    81:84:com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Boolean) -> a
    94:97:boolean isCachable() -> b
    102:102:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    109:117:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    129:134:java.util.EnumSet deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    142:145:java.util.EnumSet deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> a
    155:175:java.util.EnumSet _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> b
    183:183:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    189:189:java.util.EnumSet constructSet() -> g
    197:216:java.util.EnumSet handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> c
    18:18:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    18:18:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer -> b.a.a.c.c.b.s:
    com.fasterxml.jackson.databind.JavaType _inputType -> a
    boolean _hasArgs -> b
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _factory -> c
    com.fasterxml.jackson.databind.JsonDeserializer _deser -> d
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> e
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _creatorProps -> f
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propCreator -> g
    49:57:void <init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> <init>
    64:71:void <init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    75:83:void <init>(com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    90:94:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    99:99:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    105:142:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    148:151:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    158:174:java.lang.Object deserializeEnumUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator) -> a
    183:185:java.lang.Object _deserializeWithErrorWrapping(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> a
    192:192:java.lang.Object wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> a
    197:209:java.lang.Throwable throwOrReturnThrowable(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer -> b.a.a.c.c.b.t:
    57:57:java.lang.Class[] types() -> g
    81:82:void <init>(java.lang.Class) -> <init>
    90:120:com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std findDeserializer(java.lang.Class) -> a
    134:177:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> a
    184:187:java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> a
    191:191:java.lang.Object _deserializeFromEmptyString() -> h
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std -> b.a.a.c.c.b.u:
    int _kind -> a
    227:229:void <init>(java.lang.Class,int) -> <init>
    234:304:java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> a
    310:320:java.lang.Object _deserializeFromEmptyString() -> h
    325:331:int _firstHyphenOrUnderscore(java.lang.String) -> b
com.fasterxml.jackson.databind.deser.std.JdkDeserializers -> b.a.a.c.c.b.v:
    java.util.HashSet _classNames -> a
    30:49:com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> a
    15:26:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator -> b.a.a.c.c.b.w:
    22:23:void <init>() -> <init>
    26:26:boolean canCreateFromObjectWith() -> l
    30:37:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    42:42:com.fasterxml.jackson.databind.deser.CreatorProperty creatorProp(java.lang.String,com.fasterxml.jackson.databind.JavaType,int) -> a
    48:49:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> a
    53:53:long _long(java.lang.Object) -> a
    57:57:int _int(java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer -> b.a.a.c.c.b.x:
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance -> b
    29:30:void <init>() -> <init>
    37:44:com.fasterxml.jackson.databind.JsonDeserializer getDeserializer(java.lang.Class) -> a
    55:55:com.fasterxml.jackson.databind.JsonNode getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> c
    66:73:com.fasterxml.jackson.databind.JsonNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    15:15:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    15:15:boolean isCachable() -> b
    15:15:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    15:15:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
    15:15:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    23:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer -> b.a.a.c.c.b.y:
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance -> b
    133:133:void <init>() -> <init>
    135:135:com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance() -> g
    140:143:com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    155:158:com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ArrayNode) -> b
    126:126:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    126:126:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    131:131:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer -> b.a.a.c.c.b.z:
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance -> b
    89:89:void <init>() -> <init>
    91:91:com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance() -> g
    96:107:com.fasterxml.jackson.databind.node.ObjectNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    119:122:com.fasterxml.jackson.databind.node.ObjectNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ObjectNode) -> b
    82:82:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    82:82:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    87:87:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.MapDeserializer -> b.a.a.c.c.b.A:
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> a
    boolean _standardStringKey -> b
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> c
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> d
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> i
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> j
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> k
    boolean _hasDefaultCreator -> l
    java.util.Set _ignorableProperties -> m
    99:108:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    136:147:void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set) -> <init>
    160:165:com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set) -> a
    176:185:boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer) -> a
    194:196:void setIgnorableProperties(java.util.Set) -> a
    208:236:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> c
    246:288:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    299:299:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> g
    304:304:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> h
    330:330:boolean isCachable() -> b
    340:368:java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    378:391:java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> a
    400:400:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    410:410:java.lang.Class getMapClass() -> j
    412:412:com.fasterxml.jackson.databind.JavaType getValueType() -> i
    423:480:void _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> b
    490:543:void _readAndBindStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> c
    548:614:java.util.Map _deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    630:684:void _readAndUpdate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> d
    696:747:void _readAndUpdateStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> e
    760:766:void handleUnresolvedReference(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> a
    29:29:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    29:29:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring -> b.a.a.c.c.b.B:
    com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator _parent -> c
    java.util.Map next -> a
    java.lang.Object key -> b
    829:838:void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object) -> <init>
    842:843:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator -> b.a.a.c.c.b.C:
    java.lang.Class _valueType -> a
    java.util.Map _result -> b
    java.util.List _accumulator -> c
    774:779:void <init>(java.lang.Class,java.util.Map) -> <init>
    783:789:void put(java.lang.Object,java.lang.Object) -> a
    793:795:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Object) -> a
    800:816:void resolveForwardReference(java.lang.Object,java.lang.Object) -> b
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer -> b.a.a.c.c.b.D:
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> a
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> b
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> c
    58:65:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    83:87:void <init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    98:102:com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    120:140:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    156:156:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> g
    170:223:java.util.Map$Entry deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    230:230:java.util.Map$Entry deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map$Entry) -> a
    239:239:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer -> b.a.a.c.c.b.E:
    com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer instance -> a
    22:22:void <init>() -> <init>
    32:32:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    40:51:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    60:66:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    20:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers -> b.a.a.c.c.b.F:
    java.util.HashSet _classNames -> a
    45:109:com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> a
    24:42:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$1 -> b.a.a.c.c.b.G:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> a
    889:889:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer -> b.a.a.c.c.b.H:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer instance -> a
    929:929:void <init>() -> <init>
    933:933:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    940:961:java.math.BigDecimal deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    922:922:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    927:927:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer -> b.a.a.c.c.b.I:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer instance -> a
    876:876:void <init>() -> <init>
    880:880:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    887:918:java.math.BigInteger deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    869:869:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    874:874:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer -> b.a.a.c.c.b.J:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer wrapperInstance -> b
    186:187:void <init>(java.lang.Class,java.lang.Boolean) -> <init>
    192:199:java.lang.Boolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    209:216:java.lang.Boolean deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> b
    222:262:java.lang.Boolean _parseBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    175:175:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    175:175:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    175:175:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    181:182:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer -> b.a.a.c.c.b.K:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer wrapperInstance -> b
    277:278:void <init>(java.lang.Class,java.lang.Byte) -> <init>
    283:286:java.lang.Byte deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    291:334:java.lang.Byte _parseByte(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    266:266:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    266:266:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    272:273:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer -> b.a.a.c.c.b.L:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer wrapperInstance -> b
    416:417:void <init>(java.lang.Class,java.lang.Character) -> <init>
    423:448:java.lang.Character deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    405:405:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    405:405:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    411:412:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer -> b.a.a.c.c.b.M:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer wrapperInstance -> b
    679:680:void <init>(java.lang.Class,java.lang.Double) -> <init>
    684:684:java.lang.Double deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    693:693:java.lang.Double deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> b
    698:741:java.lang.Double _parseDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    669:669:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    669:669:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    669:669:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    675:676:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer -> b.a.a.c.c.b.N:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer wrapperInstance -> b
    607:608:void <init>(java.lang.Class,java.lang.Float) -> <init>
    613:613:java.lang.Float deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    620:665:java.lang.Float _parseFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    597:597:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    597:597:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    603:604:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer -> b.a.a.c.c.b.O:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer wrapperInstance -> b
    462:463:void <init>(java.lang.Class,java.lang.Integer) -> <init>
    467:467:boolean isCachable() -> b
    471:474:java.lang.Integer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    483:486:java.lang.Integer deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> b
    491:531:java.lang.Integer _parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    452:452:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    452:452:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    452:452:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    458:459:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer -> b.a.a.c.c.b.P:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer wrapperInstance -> b
    545:546:void <init>(java.lang.Class,java.lang.Long) -> <init>
    550:550:boolean isCachable() -> b
    554:557:java.lang.Long deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    562:593:java.lang.Long _parseLong(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    535:535:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    535:535:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    541:542:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer -> b.a.a.c.c.b.Q:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer instance -> a
    763:764:void <init>() -> <init>
    769:833:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    847:854:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    760:760:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer -> b.a.a.c.c.b.R:
    java.lang.Object _nullValue -> c
    java.lang.Object _emptyValue -> d
    boolean _primitive -> e
    132:136:void <init>(java.lang.Class,java.lang.Object,java.lang.Object) -> <init>
    155:160:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
    165:165:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer -> b.a.a.c.c.b.S:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer wrapperInstance -> b
    349:350:void <init>(java.lang.Class,java.lang.Short) -> <init>
    356:356:java.lang.Short deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    361:401:java.lang.Short _parseShort(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    338:338:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    338:338:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    344:345:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer -> b.a.a.c.c.b.T:
    java.lang.Object[] NO_OBJECTS -> a
    boolean _untyped -> b
    java.lang.Class _elementClass -> c
    com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer -> d
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer -> i
    64:69:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    75:81:void <init>(com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    100:105:com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    114:114:boolean isCachable() -> b
    121:137:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    148:148:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> g
    154:154:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> d
    160:160:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    174:217:java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    227:227:java.lang.Object[] deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> b
    234:284:java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> a
    297:303:java.lang.Byte[] deserializeFromBase64(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    310:355:java.lang.Object[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    21:21:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    28:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers -> b.a.a.c.c.b.U:
    java.lang.Boolean _unwrapSingle -> a
    java.lang.Object _emptyValue -> c
    com.fasterxml.jackson.databind.deser.NullValueProvider _nuller -> b
    54:57:void <init>(java.lang.Class) -> <init>
    64:67:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    72:97:com.fasterxml.jackson.databind.JsonDeserializer forType(java.lang.Class) -> a
    104:121:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> a
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    java.lang.Object _constructEmpty() -> g
    155:155:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    161:161:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> d
    166:170:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    179:179:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    185:193:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    228:240:java.lang.Object handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser -> b.a.a.c.c.b.V:
    369:369:void <init>() -> <init>
    371:372:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    377:377:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    382:382:boolean[] _constructEmpty() -> h
    389:423:boolean[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    429:429:boolean[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> f
    434:438:boolean[] _concat(boolean[],boolean[]) -> a
    363:363:java.lang.Object _constructEmpty() -> g
    363:363:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    363:363:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> a
    363:363:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser -> b.a.a.c.c.b.W:
    452:452:void <init>() -> <init>
    454:455:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    460:460:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    465:465:byte[] _constructEmpty() -> h
    471:533:byte[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    541:558:byte[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> f
    563:567:byte[] _concat(byte[],byte[]) -> a
    446:446:java.lang.Object _constructEmpty() -> g
    446:446:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    446:446:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> a
    446:446:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser -> b.a.a.c.c.b.X:
    260:260:void <init>() -> <init>
    269:269:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    274:274:char[] _constructEmpty() -> h
    284:337:char[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    344:344:char[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> f
    349:353:char[] _concat(char[],char[]) -> a
    254:254:java.lang.Object _constructEmpty() -> g
    254:254:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    254:254:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> a
    254:254:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser -> b.a.a.c.c.b.Y:
    878:878:void <init>() -> <init>
    880:881:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    886:886:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    891:891:double[] _constructEmpty() -> h
    897:923:double[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    929:929:double[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> f
    934:938:double[] _concat(double[],double[]) -> a
    872:872:java.lang.Object _constructEmpty() -> g
    872:872:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    872:872:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> a
    872:872:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser -> b.a.a.c.c.b.Z:
    807:807:void <init>() -> <init>
    809:810:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    815:815:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    820:820:float[] _constructEmpty() -> h
    826:853:float[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    859:859:float[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> f
    864:868:float[] _concat(float[],float[]) -> a
    801:801:java.lang.Object _constructEmpty() -> g
    801:801:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    801:801:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> a
    801:801:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser -> b.a.a.c.c.b.aa:
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser instance -> c
    653:653:void <init>() -> <init>
    655:656:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    661:661:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    666:666:int[] _constructEmpty() -> h
    672:704:int[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    710:710:int[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> f
    715:719:int[] _concat(int[],int[]) -> a
    645:645:java.lang.Object _constructEmpty() -> g
    645:645:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    645:645:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> a
    645:645:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    651:651:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser -> b.a.a.c.c.b.ab:
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser instance -> c
    731:731:void <init>() -> <init>
    733:734:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    739:739:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    744:744:long[] _constructEmpty() -> h
    750:782:long[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    788:788:long[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> f
    793:797:long[] _concat(long[],long[]) -> a
    723:723:java.lang.Object _constructEmpty() -> g
    723:723:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    723:723:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> a
    723:723:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    729:729:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser -> b.a.a.c.c.b.ac:
    577:577:void <init>() -> <init>
    579:580:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    585:585:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    590:590:short[] _constructEmpty() -> h
    596:626:short[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    632:632:short[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> f
    637:641:short[] _concat(short[],short[]) -> a
    571:571:java.lang.Object _constructEmpty() -> g
    571:571:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    571:571:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> a
    571:571:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer -> b.a.a.c.c.b.ad:
    com.fasterxml.jackson.databind.JavaType _fullType -> a
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> b
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> c
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> d
    49:54:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    67:81:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    101:101:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> d
    com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> b
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
    125:125:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    java.lang.Object referenceValue(java.lang.Object) -> c
    java.lang.Object updateReference(java.lang.Object,java.lang.Object) -> a
    java.lang.Object getReferenced(java.lang.Object) -> b
    156:156:com.fasterxml.jackson.databind.JavaType getValueType() -> i
    165:166:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    179:187:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    195:214:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    221:240:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer -> b.a.a.c.c.b.ae:
    16:16:void <init>() -> <init>
    21:72:java.lang.StackTraceElement deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    94:94:java.lang.StackTraceElement constructValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> a
    11:11:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer -> b.a.a.c.c.b.af:
    com.fasterxml.jackson.databind.util.Converter _converter -> a
    com.fasterxml.jackson.databind.JavaType _delegateType -> b
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> c
    65:69:void <init>(com.fasterxml.jackson.databind.util.Converter) -> <init>
    75:79:void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    99:100:com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    115:118:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> c
    125:136:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    152:152:java.lang.Class handledType() -> a
    157:157:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    169:173:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    191:195:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    203:206:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    222:224:java.lang.Object _handleIncompatibleUpdateValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    246:246:java.lang.Object convertValue(java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.std.StdDeserializer -> b.a.a.c.c.b.ag:
    int F_MASK_INT_COERCIONS -> y
    int F_MASK_ACCEPT_ARRAYS -> z
    java.lang.Class _valueClass -> A
    61:63:void <init>(java.lang.Class) -> <init>
    65:68:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    76:78:void <init>(com.fasterxml.jackson.databind.deser.std.StdDeserializer) -> <init>
    87:87:java.lang.Class handledType() -> a
    106:106:com.fasterxml.jackson.databind.JavaType getValueType() -> i
    115:115:boolean isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> a
    119:119:boolean isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer) -> a
    136:136:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    149:187:boolean _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> r
    197:200:boolean _parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> s
    206:213:byte _parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> t
    219:226:short _parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> u
    232:262:int _parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> v
    271:285:int _parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> a
    292:320:long _parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> w
    329:334:long _parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> b
    341:367:float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> x
    376:396:float _parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> c
    402:428:double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> y
    437:459:double _parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> d
    465:485:java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a_
    493:508:java.util.Date _parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> z
    519:525:java.util.Date _parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> b
    536:539:double parseDouble(java.lang.String) -> c
    550:569:java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> A
    582:599:java.lang.Object _deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> B
    610:610:boolean _hasTextualNull(java.lang.String) -> d
    617:617:boolean _isEmptyOrTextualNull(java.lang.String) -> e
    621:621:boolean _isNegInf(java.lang.String) -> f
    625:625:boolean _isPosInf(java.lang.String) -> g
    628:628:boolean _isNaN(java.lang.String) -> h
    656:675:java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> C
    711:714:void _failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> a
    729:736:java.lang.Object _coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> D
    747:750:java.lang.Object _coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> a
    763:773:java.lang.Object _coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> b
    786:796:java.lang.Object _coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> c
    802:807:void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext) -> e
    816:827:void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> e
    833:837:void _verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> f
    842:847:void _verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> g
    852:860:void _verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser) -> a
    865:868:void _reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String) -> a
    883:897:java.lang.String _coercedTypeDesc() -> k
    919:919:com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> a
    928:941:boolean _isIntNumber(java.lang.String) -> i
    964:979:com.fasterxml.jackson.databind.JsonDeserializer findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    1000:1004:com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> a
    1020:1024:java.lang.Boolean findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Feature) -> a
    1038:1042:com.fasterxml.jackson.databind.deser.NullValueProvider findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata) -> b
    1057:1065:com.fasterxml.jackson.databind.deser.NullValueProvider findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer) -> b
    1071:1074:com.fasterxml.jackson.annotation.Nulls findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> c
    1082:1121:com.fasterxml.jackson.databind.deser.NullValueProvider _findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    1148:1159:void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> b
    1164:1169:void handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> E
    1173:1177:void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> F
    1189:1189:boolean _neitherNull(java.lang.Object,java.lang.Object) -> b
    1198:1198:boolean _byteOverflow(int) -> a
    1205:1205:boolean _shortOverflow(int) -> b
    1212:1212:boolean _intOverflow(long) -> a
    1219:1222:java.lang.Number _nonNullNumber(java.lang.Number) -> a
    43:50:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer -> b.a.a.c.c.b.ah:
    int _kind -> a
    java.lang.Class _keyClass -> b
    com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser -> c
    61:62:void <init>(int,java.lang.Class) -> <init>
    64:68:void <init>(int,java.lang.Class,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer) -> <init>
    75:117:com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer forType(java.lang.Class) -> a
    124:139:java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> a
    146:236:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> b
    247:247:int _parseInt(java.lang.String) -> a
    251:251:long _parseLong(java.lang.String) -> b
    255:255:double _parseDouble(java.lang.String) -> c
    260:260:java.lang.Object _weirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception) -> a
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD -> b.a.a.c.c.b.ai:
    java.lang.Class _keyClass -> a
    com.fasterxml.jackson.databind.JsonDeserializer _delegate -> b
    316:319:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    326:341:java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD -> b.a.a.c.c.b.aj:
    com.fasterxml.jackson.databind.util.EnumResolver _byNameResolver -> d
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _factory -> e
    com.fasterxml.jackson.databind.util.EnumResolver _byToStringResolver -> f
    java.lang.Enum _enumDefaultValue -> g
    368:372:void <init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    377:397:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> b
    402:409:com.fasterxml.jackson.databind.util.EnumResolver _getToStringResolver(com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer -> b.a.a.c.c.b.ak:
    java.lang.reflect.Constructor _ctor -> d
    424:426:void <init>(java.lang.reflect.Constructor) -> <init>
    431:431:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> b
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer -> b.a.a.c.c.b.al:
    java.lang.reflect.Method _factoryMethod -> d
    446:448:void <init>(java.lang.reflect.Method) -> <init>
    453:453:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> b
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD -> b.a.a.c.c.b.am:
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sString -> d
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sObject -> e
    276:276:void <init>(java.lang.Class) -> <init>
    280:286:com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class) -> b
    291:291:java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> a
    273:274:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers -> b.a.a.c.c.b.an:
    28:28:void <init>() -> <init>
    34:34:com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver) -> a
    39:39:com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> a
    45:45:com.fasterxml.jackson.databind.KeyDeserializer constructDelegatingKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    54:74:com.fasterxml.jackson.databind.KeyDeserializer findStringBasedKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> a
    87:92:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer -> b.a.a.c.c.b.ao:
    18:18:void <init>(java.lang.Class) -> <init>
    22:22:void <init>(com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer) -> <init>
    26:26:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    36:38:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    47:47:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    60:60:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> d
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator -> b.a.a.c.c.b.ap:
    java.lang.String _valueTypeDesc -> a
    java.lang.Class _valueClass -> b
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _defaultCreator -> c
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _withArgsCreator -> d
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _constructorArguments -> e
    com.fasterxml.jackson.databind.JavaType _delegateType -> f
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _delegateCreator -> g
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _delegateArguments -> h
    com.fasterxml.jackson.databind.JavaType _arrayDelegateType -> i
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _arrayDelegateCreator -> j
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _arrayDelegateArguments -> k
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromStringCreator -> l
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromIntCreator -> m
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromLongCreator -> n
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromDoubleCreator -> o
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBooleanCreator -> p
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter _incompleteParameter -> q
    87:90:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> <init>
    130:136:void configureFromObjectSettings(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> a
    143:146:void configureFromArraySettings(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> a
    149:150:void configureFromStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> a
    153:154:void configureFromIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> b
    157:158:void configureFromLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> c
    161:162:void configureFromDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> d
    165:166:void configureFromBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> e
    169:170:void configureIncompleteParameter(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> a
    180:180:java.lang.String getValueTypeDesc() -> b
    185:185:java.lang.Class getValueClass() -> a
    190:190:boolean canCreateFromString() -> d
    195:195:boolean canCreateFromInt() -> e
    200:200:boolean canCreateFromLong() -> f
    205:205:boolean canCreateFromDouble() -> g
    210:210:boolean canCreateFromBoolean() -> h
    215:215:boolean canCreateUsingDefault() -> i
    220:220:boolean canCreateUsingDelegate() -> j
    225:225:boolean canCreateUsingArrayDelegate() -> k
    230:230:boolean canCreateFromObjectWith() -> l
    235:239:boolean canInstantiate() -> c
    244:244:com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> b
    249:249:com.fasterxml.jackson.databind.JavaType getArrayDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> c
    254:254:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    266:272:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> a
    279:285:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> a
    293:298:java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    304:310:java.lang.Object createUsingArrayDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> b
    322:329:java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> a
    337:356:java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> a
    362:370:java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> a
    377:385:java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> a
    392:400:java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> a
    412:412:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> n
    417:417:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getArrayDelegateCreator() -> o
    422:422:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> m
    432:432:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getIncompleteParameter() -> p
    481:484:com.fasterxml.jackson.databind.JsonMappingException wrapAsJsonMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable) -> a
    495:503:com.fasterxml.jackson.databind.JsonMappingException rewrapCtorProblem(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable) -> b
    519:541:java.lang.Object _createUsingDelegate(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer -> b.a.a.c.c.b.aq:
    java.lang.String[] NO_STRINGS -> f
    com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer instance -> a
    com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer -> b
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> c
    java.lang.Boolean _unwrapSingle -> d
    boolean _skipNullValues -> e
    65:66:void <init>() -> <init>
    71:76:void <init>(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    80:80:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    86:86:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> d
    91:91:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    102:124:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    131:171:java.lang.String[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    180:231:java.lang.String[] _deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String[]) -> a
    236:236:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    244:292:java.lang.String[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String[]) -> b
    298:314:java.lang.String[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    31:33:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer -> b.a.a.c.c.b.ar:
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> a
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> b
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> c
    60:61:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    69:73:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    79:83:com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> a
    91:91:boolean isCachable() -> b
    104:132:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    144:145:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> g
    150:150:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> h
    164:169:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    178:210:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> a
    223:242:java.util.Collection deserializeUsingCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    249:249:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    262:284:java.util.Collection handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> b
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.StringDeserializer -> b.a.a.c.c.b.as:
    com.fasterxml.jackson.databind.deser.std.StringDeserializer instance -> a
    20:20:void <init>() -> <init>
    24:24:boolean isCachable() -> b
    28:28:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> b
    34:63:java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    71:71:java.lang.String deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> b
    10:10:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    10:10:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    18:18:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer -> b.a.a.c.c.b.at:
    30:33:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializer) -> <init>
    39:40:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    44:51:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    64:159:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer -> b.a.a.c.c.b.au:
    27:27:void <init>() -> <init>
    31:31:com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    35:35:com.fasterxml.jackson.databind.util.TokenBuffer createBufferInstance(com.fasterxml.jackson.core.JsonParser) -> a
    23:23:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer -> b.a.a.c.c.b.av:
    int[] HEX_DIGITS -> a
    27:27:void <init>() -> <init>
    34:63:java.util.UUID _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> c
    69:73:java.util.UUID _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> b
    79:79:java.util.UUID _badFormat(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> d
    84:87:int intFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> a
    91:91:int shortFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> b
    96:108:int byteFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> c
    114:117:int _badChar(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext,char) -> a
    121:126:java.util.UUID _fromBytes(byte[],com.fasterxml.jackson.databind.DeserializationContext) -> a
    130:134:long _long(byte[],int) -> a
    138:138:int _int(byte[],int) -> b
    13:13:java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> a
    13:13:java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> a
    17:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer -> b.a.a.c.c.b.aw:
    java.lang.Object[] NO_OBJECTS -> a
    com.fasterxml.jackson.databind.JsonDeserializer _mapDeserializer -> b
    com.fasterxml.jackson.databind.JsonDeserializer _listDeserializer -> c
    com.fasterxml.jackson.databind.JsonDeserializer _stringDeserializer -> d
    com.fasterxml.jackson.databind.JsonDeserializer _numberDeserializer -> e
    com.fasterxml.jackson.databind.JavaType _listType -> f
    com.fasterxml.jackson.databind.JavaType _mapType -> g
    boolean _nonMerging -> h
    81:82:void <init>() -> <init>
    85:89:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> <init>
    112:120:void <init>(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,boolean) -> <init>
    137:173:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> c
    180:180:com.fasterxml.jackson.databind.JsonDeserializer _findCustomDeser(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> a
    184:184:com.fasterxml.jackson.databind.JsonDeserializer _clearIfStdImpl(com.fasterxml.jackson.databind.JsonDeserializer) -> b
    196:208:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> a
    227:227:boolean isCachable() -> b
    233:233:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    239:299:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    306:354:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    362:426:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    441:475:java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    483:486:java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> a
    496:545:java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    554:568:java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    574:598:java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> a
    39:39:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla -> b.a.a.c.c.b.ax:
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla std -> a
    boolean _nonMerging -> b
    621:621:void <init>() -> <init>
    624:626:void <init>(boolean) -> <init>
    629:632:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla instance(boolean) -> a
    639:639:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> a
    645:702:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    708:740:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> a
    748:806:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    811:842:java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    849:860:java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    869:897:java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    614:614:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.exc.IgnoredPropertyException -> b.a.a.c.d.a:
    28:29:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    57:68:com.fasterxml.jackson.databind.exc.IgnoredPropertyException from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection) -> a
com.fasterxml.jackson.databind.exc.InvalidDefinitionException -> b.a.a.c.d.b:
    com.fasterxml.jackson.databind.JavaType _type -> d
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> e
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition _property -> f
    30:34:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    38:42:void <init>(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    46:50:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    54:58:void <init>(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    62:62:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> a
    67:67:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> a
    72:72:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> a
    77:77:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> a
com.fasterxml.jackson.databind.exc.InvalidFormatException -> b.a.a.c.d.c:
    java.lang.Object _value -> d
    60:62:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class) -> <init>
    67:67:com.fasterxml.jackson.databind.exc.InvalidFormatException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class) -> a
com.fasterxml.jackson.databind.exc.InvalidNullException -> b.a.a.c.d.d:
    com.fasterxml.jackson.databind.PropertyName _propertyName -> d
    33:35:void <init>(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.PropertyName) -> <init>
    40:46:com.fasterxml.jackson.databind.exc.InvalidNullException from(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType) -> a
com.fasterxml.jackson.databind.exc.InvalidTypeIdException -> b.a.a.c.d.e:
    com.fasterxml.jackson.databind.JavaType _baseType -> d
    java.lang.String _typeId -> e
    36:39:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> <init>
    43:43:com.fasterxml.jackson.databind.exc.InvalidTypeIdException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> a
com.fasterxml.jackson.databind.exc.MismatchedInputException -> b.a.a.c.d.f:
    java.lang.Class _targetType -> f
    35:36:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    39:40:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    43:45:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Class) -> <init>
    48:50:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    59:59:com.fasterxml.jackson.databind.exc.MismatchedInputException from(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> a
    63:63:com.fasterxml.jackson.databind.exc.MismatchedInputException from(com.fasterxml.jackson.core.JsonParser,java.lang.Class,java.lang.String) -> a
    67:68:com.fasterxml.jackson.databind.exc.MismatchedInputException setTargetType(com.fasterxml.jackson.databind.JavaType) -> a
com.fasterxml.jackson.databind.exc.PropertyBindingException -> b.a.a.c.d.g:
    java.lang.Class _referringClass -> d
    java.lang.String _propertyName -> e
    java.util.Collection _propertyIds -> g
    java.lang.String _propertiesAsString -> h
    52:56:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    84:112:java.lang.String getMessageSuffix() -> e
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException -> b.a.a.c.d.h:
    24:25:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    53:64:com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection) -> a
com.fasterxml.jackson.databind.ext.Java7Support -> b.a.a.c.e.a:
    com.fasterxml.jackson.databind.ext.Java7Support IMPL -> a
    17:17:void <init>() -> <init>
    35:35:com.fasterxml.jackson.databind.ext.Java7Support instance() -> a
    java.lang.Boolean findTransient(com.fasterxml.jackson.databind.introspect.Annotated) -> a
    java.lang.Boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> b
    com.fasterxml.jackson.databind.PropertyName findConstructorName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> a
    com.fasterxml.jackson.databind.JsonDeserializer getDeserializerForJavaNioFilePath(java.lang.Class) -> a
    com.fasterxml.jackson.databind.JsonSerializer getSerializerForJavaNioFilePath(java.lang.Class) -> b
    22:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.Java7SupportImpl -> b.a.a.c.e.b:
    java.lang.Class _bogus -> a
    22:27:void <init>() -> <init>
    36:39:com.fasterxml.jackson.databind.JsonDeserializer getDeserializerForJavaNioFilePath(java.lang.Class) -> a
    44:47:com.fasterxml.jackson.databind.JsonSerializer getSerializerForJavaNioFilePath(java.lang.Class) -> b
    52:56:java.lang.Boolean findTransient(com.fasterxml.jackson.databind.introspect.Annotated) -> a
    61:67:java.lang.Boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> b
    73:84:com.fasterxml.jackson.databind.PropertyName findConstructorName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> a
com.fasterxml.jackson.databind.ext.NioPathDeserializer -> b.a.a.c.e.c:
    21:21:void <init>() -> <init>
    25:38:java.nio.file.Path deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    17:17:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.ext.NioPathSerializer -> b.a.a.c.e.d:
    22:22:void <init>() -> <init>
    27:28:void serialize(java.nio.file.Path,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    37:41:void serializeWithType(java.nio.file.Path,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    18:18:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory -> b.a.a.c.e.e:
    java.lang.Class CLASS_DOM_NODE -> b
    java.lang.Class CLASS_DOM_DOCUMENT -> c
    com.fasterxml.jackson.databind.ext.Java7Support _jdk7Helper -> d
    com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance -> a
    78:78:void <init>() -> <init>
    89:112:com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    119:145:com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
    157:161:java.lang.Object instantiate(java.lang.String) -> a
    174:182:boolean hasSuperClassStartingWith(java.lang.Class,java.lang.String) -> a
    50:76:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.Annotated -> b.a.a.c.f.a:
    17:17:void <init>() -> <init>
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> a
    boolean hasAnnotation(java.lang.Class) -> b
    boolean hasOneOf(java.lang.Class[]) -> a
    java.lang.reflect.AnnotatedElement getAnnotated() -> f
    java.lang.String getName() -> g
    com.fasterxml.jackson.databind.JavaType getType() -> h
    java.lang.Class getRawType() -> i
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.introspect.AnnotatedClass -> b.a.a.c.f.b:
    com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators NO_CREATORS -> n
    com.fasterxml.jackson.databind.JavaType _type -> a
    java.lang.Class _class -> b
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> c
    java.util.List _superTypes -> d
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> e
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> f
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> g
    java.lang.Class _primaryMixIn -> h
    com.fasterxml.jackson.databind.util.Annotations _classAnnotations -> i
    com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators _creators -> j
    com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods -> k
    java.util.List _fields -> l
    java.lang.Boolean _nonStaticInnerClass -> m
    133:143:void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.List,java.lang.Class,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    151:161:void <init>(java.lang.Class) -> <init>
    212:212:com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> a
    222:222:java.lang.Class getAnnotated() -> a
    228:228:java.lang.String getName() -> g
    232:232:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> a
    237:237:boolean hasAnnotation(java.lang.Class) -> b
    242:242:boolean hasOneOf(java.lang.Class[]) -> a
    247:247:java.lang.Class getRawType() -> i
    264:264:com.fasterxml.jackson.databind.JavaType getType() -> h
    274:274:com.fasterxml.jackson.databind.util.Annotations getAnnotations() -> b
    278:278:boolean hasAnnotations() -> c
    282:282:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor getDefaultConstructor() -> d
    286:286:java.util.List getConstructors() -> e
    293:293:java.util.List getFactoryMethods() -> j
    305:305:java.lang.Iterable memberMethods() -> k
    313:313:com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> a
    321:321:java.lang.Iterable fields() -> l
    329:333:boolean isNonStaticInnerClass() -> m
    343:354:java.util.List _fields() -> n
    358:372:com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _methods() -> o
    376:386:com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators _creators() -> p
    397:397:java.lang.String toString() -> toString
    402:402:int hashCode() -> hashCode
    407:411:boolean equals(java.lang.Object) -> equals
    16:16:java.lang.reflect.AnnotatedElement getAnnotated() -> f
    20:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators -> b.a.a.c.f.c:
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor defaultConstructor -> a
    java.util.List constructors -> b
    java.util.List creatorMethods -> c
    441:445:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,java.util.List,java.util.List) -> <init>
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver -> b.a.a.c.f.d:
    com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS -> a
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> b
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> c
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> d
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> e
    com.fasterxml.jackson.databind.JavaType _type -> f
    java.lang.Class _class -> g
    java.lang.Class _primaryMixin -> h
    36:45:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    47:61:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    66:69:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolve(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> a
    73:73:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> a
    88:91:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> a
    95:95:boolean skippableArray(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> c
    104:104:com.fasterxml.jackson.databind.introspect.AnnotatedClass createPrimordial(java.lang.Class) -> a
    112:112:com.fasterxml.jackson.databind.introspect.AnnotatedClass createArrayType(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> b
    116:119:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveFully() -> a
    124:127:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes() -> b
    144:177:com.fasterxml.jackson.databind.util.Annotations resolveClassAnnotations(java.util.List) -> a
    183:196:com.fasterxml.jackson.databind.introspect.AnnotationCollector _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.Class,java.lang.Class) -> a
    202:213:com.fasterxml.jackson.databind.introspect.AnnotationCollector _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> a
    219:231:com.fasterxml.jackson.databind.introspect.AnnotationCollector _addFromBundleIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> a
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor -> b.a.a.c.f.e:
    java.lang.reflect.Constructor _constructor -> a
    32:37:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    52:52:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> b
    62:62:java.lang.reflect.Constructor getAnnotated() -> a
    68:68:java.lang.String getName() -> g
    72:72:com.fasterxml.jackson.databind.JavaType getType() -> h
    77:77:java.lang.Class getRawType() -> i
    88:88:int getParameterCount() -> b
    94:95:java.lang.Class getRawParameterType(int) -> a
    100:104:com.fasterxml.jackson.databind.JavaType getParameterType(int) -> b
    119:119:java.lang.Object call() -> c
    124:124:java.lang.Object call(java.lang.Object[]) -> a
    129:129:java.lang.Object call1(java.lang.Object) -> a
    139:139:java.lang.Class getDeclaringClass() -> d
    142:142:java.lang.reflect.Member getMember() -> e
    148:149:void setValue(java.lang.Object,java.lang.Object) -> a
    156:157:java.lang.Object getValue(java.lang.Object) -> b
    168:168:java.lang.String toString() -> toString
    173:173:int hashCode() -> hashCode
    178:179:boolean equals(java.lang.Object) -> equals
    8:8:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> a
    8:8:java.lang.reflect.AnnotatedElement getAnnotated() -> f
com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector -> b.a.a.c.f.f:
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext -> d
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor -> e
    37:39:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext) -> <init>
    46:47:com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators collectCreators(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> a
    56:81:com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators collect(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> a
    92:174:java.util.List _findPotentialConstructors(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> b
    179:233:java.util.List _findPotentialFactories(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> c
    239:246:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor constructDefaultConstructor(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> a
    252:303:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor constructNonDefaultConstructor(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> b
    308:319:com.fasterxml.jackson.databind.introspect.AnnotatedMethod constructFactoryCreator(java.lang.reflect.Method,java.lang.reflect.Method) -> a
    323:333:com.fasterxml.jackson.databind.introspect.AnnotationMap[] collectAnnotations(java.lang.annotation.Annotation[][],java.lang.annotation.Annotation[][]) -> a
    339:343:com.fasterxml.jackson.databind.introspect.AnnotationMap collectAnnotations(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> c
    347:351:com.fasterxml.jackson.databind.introspect.AnnotationMap collectAnnotations(java.lang.reflect.AnnotatedElement,java.lang.reflect.AnnotatedElement) -> a
    356:356:boolean isIncludableConstructor(java.lang.reflect.Constructor) -> a
com.fasterxml.jackson.databind.introspect.AnnotatedField -> b.a.a.c.f.g:
    java.lang.reflect.Field _field -> a
    39:41:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> <init>
    45:45:com.fasterxml.jackson.databind.introspect.AnnotatedField withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> b
    65:65:java.lang.reflect.Field getAnnotated() -> a
    68:68:int getModifiers() -> b
    71:71:java.lang.String getName() -> g
    75:75:java.lang.Class getRawType() -> i
    86:86:com.fasterxml.jackson.databind.JavaType getType() -> h
    96:96:java.lang.Class getDeclaringClass() -> d
    99:99:java.lang.reflect.Member getMember() -> e
    105:110:void setValue(java.lang.Object,java.lang.Object) -> a
    116:119:java.lang.Object getValue(java.lang.Object) -> b
    134:134:boolean isTransient() -> c
    138:138:int hashCode() -> hashCode
    143:144:boolean equals(java.lang.Object) -> equals
    150:150:java.lang.String toString() -> toString
    12:12:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> a
    12:12:java.lang.reflect.AnnotatedElement getAnnotated() -> f
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector -> b.a.a.c.f.h:
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> d
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> e
    26:29:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    36:36:java.util.List collectFields(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType) -> a
    41:49:java.util.List collect(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType) -> a
    58:90:java.util.Map _findFields(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.Map) -> a
    101:116:void _addFieldMixIns(java.lang.Class,java.lang.Class,java.util.Map) -> a
    121:130:boolean _isIncludableField(java.lang.reflect.Field) -> a
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder -> b.a.a.c.f.i:
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext typeContext -> a
    java.lang.reflect.Field field -> b
    com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations -> c
    139:143:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Field) -> <init>
    146:146:com.fasterxml.jackson.databind.introspect.AnnotatedField build() -> a
com.fasterxml.jackson.databind.introspect.AnnotatedMember -> b.a.a.c.f.j:
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext -> b
    com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations -> c
    36:39:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> <init>
    46:49:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> <init>
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> a
    java.lang.Class getDeclaringClass() -> d
    java.lang.reflect.Member getMember() -> e
    67:67:java.lang.String getFullName() -> j
    85:88:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> a
    93:96:boolean hasAnnotation(java.lang.Class) -> b
    101:104:boolean hasOneOf(java.lang.Class[]) -> a
    121:121:com.fasterxml.jackson.databind.introspect.AnnotationMap getAllAnnotations() -> k
    137:141:void fixAccess(boolean) -> a
    void setValue(java.lang.Object,java.lang.Object) -> a
    java.lang.Object getValue(java.lang.Object) -> b
com.fasterxml.jackson.databind.introspect.AnnotatedMethod -> b.a.a.c.f.k:
    java.lang.reflect.Method _method -> a
    java.lang.Class[] _paramClasses -> d
    37:42:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    57:57:com.fasterxml.jackson.databind.introspect.AnnotatedMethod withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> b
    62:62:java.lang.reflect.Method getAnnotated() -> a
    68:68:java.lang.String getName() -> g
    77:77:com.fasterxml.jackson.databind.JavaType getType() -> h
    87:87:java.lang.Class getRawType() -> i
    104:104:java.lang.Object call() -> c
    109:109:java.lang.Object call(java.lang.Object[]) -> a
    114:114:java.lang.Object call1(java.lang.Object) -> a
    122:122:java.lang.Object callOnWith(java.lang.Object,java.lang.Object[]) -> a
    133:133:int getParameterCount() -> b
    139:140:java.lang.Class getRawParameterType(int) -> a
    145:149:com.fasterxml.jackson.databind.JavaType getParameterType(int) -> b
    163:163:java.lang.Class getDeclaringClass() -> d
    166:166:java.lang.reflect.Method getMember() -> l
    172:177:void setValue(java.lang.Object,java.lang.Object) -> a
    183:186:java.lang.Object getValue(java.lang.Object) -> b
    198:198:java.lang.String getFullName() -> j
    203:206:java.lang.Class[] getRawParameterTypes() -> m
    215:215:java.lang.Class getRawReturnType() -> n
    226:227:boolean hasReturnType() -> o
    238:238:java.lang.String toString() -> toString
    243:243:int hashCode() -> hashCode
    248:249:boolean equals(java.lang.Object) -> equals
    8:8:java.lang.reflect.Member getMember() -> e
    8:8:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> a
    8:8:java.lang.reflect.AnnotatedElement getAnnotated() -> f
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector -> b.a.a.c.f.l:
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> d
    22:24:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    32:33:com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap collectMethods(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType,java.util.List,java.lang.Class) -> a
    39:93:com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap collect(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.List,java.lang.Class) -> a
    100:140:void _addMemberMethods(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class) -> b
    145:165:void _addMethodMixIns(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class) -> a
    169:178:boolean _isIncludableMemberMethod(java.lang.reflect.Method) -> a
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder -> b.a.a.c.f.m:
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext typeContext -> a
    java.lang.reflect.Method method -> b
    com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations -> c
    189:193:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationCollector) -> <init>
    196:201:com.fasterxml.jackson.databind.introspect.AnnotatedMethod build() -> a
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap -> b.a.a.c.f.n:
    java.util.Map _methods -> a
    16:16:void <init>() -> <init>
    21:23:void <init>(java.util.Map) -> <init>
    31:34:com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[]) -> a
    54:57:java.util.Iterator iterator() -> iterator
com.fasterxml.jackson.databind.introspect.AnnotatedParameter -> b.a.a.c.f.o:
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _owner -> a
    com.fasterxml.jackson.databind.JavaType _type -> d
    int _index -> e
    45:49:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap,int) -> <init>
    53:56:com.fasterxml.jackson.databind.introspect.AnnotatedParameter withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> b
    70:70:java.lang.reflect.AnnotatedElement getAnnotated() -> f
    84:84:java.lang.String getName() -> g
    88:88:java.lang.Class getRawType() -> i
    93:93:com.fasterxml.jackson.databind.JavaType getType() -> h
    110:110:java.lang.Class getDeclaringClass() -> d
    118:118:java.lang.reflect.Member getMember() -> e
    124:125:void setValue(java.lang.Object,java.lang.Object) -> a
    131:132:java.lang.Object getValue(java.lang.Object) -> b
    149:149:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getOwner() -> a
    156:156:int getIndex() -> b
    166:166:int hashCode() -> hashCode
    171:176:boolean equals(java.lang.Object) -> equals
    181:181:java.lang.String toString() -> toString
    15:15:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> a
com.fasterxml.jackson.databind.introspect.AnnotatedWithParams -> b.a.a.c.f.p:
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] _paramAnnotations -> e
    31:33:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    39:41:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    65:66:com.fasterxml.jackson.databind.introspect.AnnotatedParameter replaceParameterAnnotations(int,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> a
    77:82:com.fasterxml.jackson.databind.introspect.AnnotationMap getParameterAnnotations(int) -> c
    86:87:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getParameter(int) -> d
    int getParameterCount() -> b
    java.lang.Class getRawParameterType(int) -> a
    com.fasterxml.jackson.databind.JavaType getParameterType(int) -> b
    java.lang.Object call() -> c
    java.lang.Object call(java.lang.Object[]) -> a
    java.lang.Object call1(java.lang.Object) -> a
com.fasterxml.jackson.databind.introspect.AnnotationCollector -> b.a.a.c.f.q:
    com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS -> a
    java.lang.Object _data -> b
    25:27:void <init>(java.lang.Object) -> <init>
    29:29:com.fasterxml.jackson.databind.util.Annotations emptyAnnotations() -> a
    32:32:com.fasterxml.jackson.databind.introspect.AnnotationCollector emptyCollector() -> b
    com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> c
    com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> d
    boolean isPresent(java.lang.annotation.Annotation) -> a
    com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> b
    18:18:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector -> b.a.a.c.f.r:
    com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector instance -> c
    66:66:void <init>(java.lang.Object) -> <init>
    70:70:com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> c
    75:75:com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> d
    79:79:boolean isPresent(java.lang.annotation.Annotation) -> a
    83:83:com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> b
    64:64:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector -> b.a.a.c.f.s:
    java.util.HashMap _annotations -> c
    133:137:void <init>(java.lang.Object,java.lang.Class,java.lang.annotation.Annotation,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    141:147:com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> c
    152:156:com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> d
    161:161:boolean isPresent(java.lang.annotation.Annotation) -> a
    166:167:com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> b
com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations -> b.a.a.c.f.t:
    188:188:void <init>() -> <init>
    192:192:java.lang.annotation.Annotation get(java.lang.Class) -> a
    197:197:boolean has(java.lang.Class) -> b
    202:202:boolean hasOneOf(java.lang.Class[]) -> a
    207:207:int size() -> a
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation -> b.a.a.c.f.u:
    java.lang.Class _type -> a
    java.lang.annotation.Annotation _value -> b
    219:222:void <init>(java.lang.Class,java.lang.annotation.Annotation) -> <init>
    227:230:java.lang.annotation.Annotation get(java.lang.Class) -> a
    235:235:boolean has(java.lang.Class) -> b
    240:245:boolean hasOneOf(java.lang.Class[]) -> a
    250:250:int size() -> a
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector -> b.a.a.c.f.v:
    java.lang.Class _type -> c
    java.lang.annotation.Annotation _value -> d
    94:97:void <init>(java.lang.Object,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    101:101:com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> c
    106:106:com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> d
    111:111:boolean isPresent(java.lang.annotation.Annotation) -> a
    116:122:com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> b
com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations -> b.a.a.c.f.w:
    java.lang.Class _type1 -> a
    java.lang.Class _type2 -> b
    java.lang.annotation.Annotation _value1 -> c
    java.lang.annotation.Annotation _value2 -> d
    263:268:void <init>(java.lang.Class,java.lang.annotation.Annotation,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    273:279:java.lang.annotation.Annotation get(java.lang.Class) -> a
    284:284:boolean has(java.lang.Class) -> b
    289:294:boolean hasOneOf(java.lang.Class[]) -> a
    299:299:int size() -> a
com.fasterxml.jackson.databind.introspect.AnnotationMap -> b.a.a.c.f.x:
    java.util.HashMap _annotations -> a
    18:18:void <init>() -> <init>
    21:23:com.fasterxml.jackson.databind.introspect.AnnotationMap of(java.lang.Class,java.lang.annotation.Annotation) -> a
    26:28:void <init>(java.util.HashMap) -> <init>
    40:43:java.lang.annotation.Annotation get(java.lang.Class) -> a
    49:52:boolean has(java.lang.Class) -> b
    63:70:boolean hasOneOf(java.lang.Class[]) -> a
    91:106:com.fasterxml.jackson.databind.introspect.AnnotationMap merge(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> a
    111:111:int size() -> a
    134:134:boolean add(java.lang.annotation.Annotation) -> a
    139:142:java.lang.String toString() -> toString
    152:156:boolean _add(java.lang.annotation.Annotation) -> b
com.fasterxml.jackson.databind.introspect.BasicBeanDescription -> b.a.a.c.f.y:
    java.lang.Class[] NO_VIEWS -> j
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector _propCollector -> b
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> c
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> d
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _classInfo -> e
    java.lang.Class[] _defaultViews -> f
    boolean _defaultViewsResolved -> g
    java.util.List _properties -> h
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo _objectIdInfo -> i
    96:106:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> <init>
    115:126:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> <init>
    130:132:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> <init>
    139:139:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> a
    147:147:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> b
    158:159:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forOtherUse(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> a
    163:166:java.util.List _properties() -> w
    184:192:boolean removeProperty(java.lang.String) -> a
    198:202:boolean addProperty(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> a
    209:209:boolean hasProperty(com.fasterxml.jackson.databind.PropertyName) -> a
    217:222:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition findProperty(com.fasterxml.jackson.databind.PropertyName) -> b
    232:232:com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> d
    235:235:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> e
    239:239:java.util.List findProperties() -> h
    251:252:com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor() -> n
    257:262:java.util.Set getIgnoredPropertyNames() -> i
    267:267:boolean hasKnownClassAnnotations() -> f
    272:272:com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> g
    292:292:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor() -> m
    298:328:com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterAccessor() -> p
    333:336:java.util.Map findInjectables() -> s
    341:341:java.util.List getConstructors() -> k
    346:362:java.lang.Object instantiateBean(boolean) -> a
    374:374:com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> a
    388:406:com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> a
    412:424:java.lang.Class[] findDefaultViews() -> v
    436:439:com.fasterxml.jackson.databind.util.Converter findSerializationConverter() -> q
    450:456:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> a
    468:479:com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter() -> o
    485:504:java.util.List findBackReferences() -> j
    532:548:java.util.List getFactoryMethods() -> l
    554:568:java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> a
    575:588:java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> b
    595:623:boolean isFactoryMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> a
    650:651:java.lang.Class findPOJOBuilder() -> t
    657:658:com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig() -> u
    664:667:com.fasterxml.jackson.databind.util.Converter findDeserializationConverter() -> r
    723:748:com.fasterxml.jackson.databind.util.Converter _createConverter(java.lang.Object) -> a
    31:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector -> b.a.a.c.f.z:
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription STRING_DESC -> a
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription BOOLEAN_DESC -> b
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription INT_DESC -> c
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription LONG_DESC -> d
    com.fasterxml.jackson.databind.util.LRUMap _cachedFCA -> e
    65:68:void <init>() -> <init>
    81:93:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> a
    101:113:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> a
    122:126:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> b
    133:145:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> c
    152:161:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> a
    186:187:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean,java.lang.String) -> a
    194:198:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectPropertiesWithBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean) -> a
    208:208:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.String) -> a
    217:233:com.fasterxml.jackson.databind.introspect.BasicBeanDescription _findStdTypeDesc(com.fasterxml.jackson.databind.JavaType) -> a
    243:260:boolean _isStdJDKCollection(com.fasterxml.jackson.databind.JavaType) -> b
    265:269:com.fasterxml.jackson.databind.introspect.BasicBeanDescription _findStdJdkCollectionDesc(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> a
    277:277:com.fasterxml.jackson.databind.introspect.AnnotatedClass _resolveAnnotatedClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> b
    16:16:com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> c
    16:16:com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> d
    16:16:com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> e
    16:16:com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> f
    16:16:com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> b
    32:49:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition -> b.a.a.c.f.A:
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> a
    20:20:void <init>() -> <init>
    java.lang.String getName() -> a
    com.fasterxml.jackson.databind.PropertyName getFullName() -> b
    67:67:boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> a
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> c
    boolean isExplicitlyIncluded() -> d
    108:108:boolean isExplicitlyNamed() -> e
    com.fasterxml.jackson.databind.JavaType getPrimaryType() -> f
    java.lang.Class getRawPrimaryType() -> g
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> h
    152:152:boolean couldDeserialize() -> i
    153:153:boolean couldSerialize() -> j
    boolean hasSetter() -> k
    boolean hasField() -> l
    boolean hasConstructorParameter() -> m
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> n
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> o
    com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> p
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> q
    178:178:java.util.Iterator getConstructorParameters() -> r
    188:192:com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor() -> s
    201:208:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMutator() -> t
    215:219:com.fasterxml.jackson.databind.introspect.AnnotatedMember getNonConstructorMutator() -> u
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> v
    245:245:java.lang.Class[] findViews() -> w
    251:251:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType() -> x
    257:258:java.lang.String findReferenceName() -> y
    266:266:boolean isTypeId() -> z
    273:273:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo() -> A
    com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> B
    23:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.ClassIntrospector -> b.a.a.c.f.B:
    48:48:void <init>() -> <init>
    com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> b
    com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> f
    com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> e
    com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> d
    com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> c
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver -> b.a.a.c.f.C:
    java.lang.Class findMixInClassFor(java.lang.Class) -> j
com.fasterxml.jackson.databind.introspect.CollectorBase -> b.a.a.c.f.D:
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS -> a
    java.lang.annotation.Annotation[] NO_ANNOTATIONS -> b
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> c
    18:20:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector) -> <init>
    25:33:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(java.lang.annotation.Annotation[]) -> a
    37:44:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> a
    48:65:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> a
    72:81:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> b
    85:100:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> b
    104:104:boolean _ignorableAnnotation(java.lang.annotation.Annotation) -> a
    108:108:com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap() -> a
    112:119:com.fasterxml.jackson.databind.introspect.AnnotationMap[] _emptyAnnotationMaps(int) -> a
    13:14:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase -> b.a.a.c.f.E:
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> t
    com.fasterxml.jackson.annotation.JsonFormat$Value _propertyFormat -> u
    java.util.List _aliases -> v
    44:46:void <init>(com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    48:51:void <init>(com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase) -> <init>
    54:54:boolean isRequired() -> r
    57:57:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> d
    83:101:com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> a
    107:121:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> b
    127:138:java.util.List findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig) -> a
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector -> b.a.a.c.f.F:
    java.lang.Class[] ANNOTATIONS_TO_INFER_SER -> c
    java.lang.Class[] ANNOTATIONS_TO_INFER_DESER -> d
    com.fasterxml.jackson.databind.ext.Java7Support _java7Helper -> e
    com.fasterxml.jackson.databind.util.LRUMap _annotationsInside -> a
    boolean _cfgConstructorPropertiesImpliesCreator -> b
    82:106:void <init>() -> <init>
    158:164:boolean isAnnotationBundle(java.lang.annotation.Annotation) -> a
    206:234:java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[]) -> a
    248:248:java.lang.Enum findDefaultEnumValue(java.lang.Class) -> a
    260:268:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> a
    274:278:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnorals(com.fasterxml.jackson.databind.introspect.Annotated) -> b
    283:284:java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> b
    289:297:java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated) -> c
    303:304:java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> c
    323:324:com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> a
    335:336:java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> g
    341:354:java.util.List findPropertyAliases(com.fasterxml.jackson.databind.introspect.Annotated) -> k
    359:359:boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> d
    365:369:java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> f
    374:378:com.fasterxml.jackson.annotation.JsonProperty$Access findPropertyAccess(com.fasterxml.jackson.databind.introspect.Annotated) -> l
    383:384:java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated) -> i
    389:396:java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated) -> j
    401:407:java.lang.String findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated) -> h
    412:413:com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> f
    419:427:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
    433:441:com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> c
    446:467:com.fasterxml.jackson.annotation.JacksonInject$Value findInjectableValue(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> e
    473:474:java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> h
    480:481:java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> e
    488:509:com.fasterxml.jackson.databind.introspect.AnnotatedMethod resolveSetterConflict(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> a
    522:522:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> a
    533:537:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> a
    547:550:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> b
    556:563:java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> d
    569:570:java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> d
    575:575:java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    586:592:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> a
    597:604:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> a
    616:635:java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> m
    641:649:java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> n
    655:663:java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> o
    669:677:java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> p
    683:690:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated) -> s
    695:710:com.fasterxml.jackson.annotation.JsonInclude$Value _refinePropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude$Value) -> a
    716:717:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> q
    722:723:java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> r
    728:729:java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> i
    742:853:com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> a
    882:883:java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> e
    888:888:java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated) -> t
    892:898:java.lang.Boolean _findSortAlpha(com.fasterxml.jackson.databind.introspect.Annotated) -> J
    904:937:void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> a
    942:960:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend$Attr,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> a
    966:988:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend$Prop,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> a
    1000:1011:com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> u
    1016:1020:java.lang.Boolean hasAsValue(com.fasterxml.jackson.databind.introspect.Annotated) -> v
    1025:1029:java.lang.Boolean hasAnyGetter(com.fasterxml.jackson.databind.introspect.Annotated) -> w
    1036:1036:boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> b
    1042:1044:boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> a
    1056:1064:java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> x
    1070:1077:java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> y
    1083:1091:java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> z
    1097:1098:java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> A
    1104:1105:java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> j
    1118:1172:com.fasterxml.jackson.databind.JavaType refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> b
    1202:1204:java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> f
    1210:1211:java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> g
    1217:1218:com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> h
    1232:1243:com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> B
    1248:1249:java.lang.Boolean hasAnySetter(com.fasterxml.jackson.databind.introspect.Annotated) -> C
    1254:1254:com.fasterxml.jackson.annotation.JsonSetter$Value findSetterInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> D
    1259:1260:java.lang.Boolean findMergeInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> E
    1276:1292:boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> F
    1298:1299:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated) -> G
    1304:1322:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> a
    1333:1343:boolean _isIgnorable(com.fasterxml.jackson.databind.introspect.Annotated) -> H
    1347:1350:java.lang.Class _classIfExplicit(java.lang.Class) -> b
    1354:1355:java.lang.Class _classIfExplicit(java.lang.Class,java.lang.Class) -> a
    1359:1365:com.fasterxml.jackson.databind.PropertyName _propertyName(java.lang.String,java.lang.String) -> a
    1370:1383:com.fasterxml.jackson.databind.PropertyName _findConstructorName(com.fasterxml.jackson.databind.introspect.Annotated) -> I
    1396:1446:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> c
    1454:1454:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder() -> b
    1462:1462:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructNoTypeResolverBuilder() -> c
    1467:1473:boolean _primitiveAndWrapper(java.lang.Class,java.lang.Class) -> b
    1478:1484:boolean _primitiveAndWrapper(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> a
    37:71:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector$1 -> b.a.a.c.f.G:
    int[] $SwitchMap$com$fasterxml$jackson$databind$annotation$JsonSerialize$Inclusion -> a
    697:697:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.MemberKey -> b.a.a.c.f.H:
    java.lang.Class[] NO_CLASSES -> a
    java.lang.String _name -> b
    java.lang.Class[] _argTypes -> c
    20:21:void <init>(java.lang.reflect.Method) -> <init>
    25:26:void <init>(java.lang.reflect.Constructor) -> <init>
    29:32:void <init>(java.lang.String,java.lang.Class[]) -> <init>
    36:36:java.lang.String toString() -> toString
    42:42:int hashCode() -> hashCode
    48:87:boolean equals(java.lang.Object) -> equals
    13:13:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector -> b.a.a.c.f.I:
    com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector instance -> a
    12:12:void <init>() -> <init>
    23:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1 -> b.a.a.c.f.J:
    23:23:void <init>() -> <init>
com.fasterxml.jackson.databind.introspect.ObjectIdInfo -> b.a.a.c.f.K:
    com.fasterxml.jackson.databind.PropertyName _propertyName -> a
    java.lang.Class _generator -> b
    java.lang.Class _resolver -> c
    java.lang.Class _scope -> d
    boolean _alwaysAsId -> e
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo EMPTY -> f
    31:32:void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,java.lang.Class) -> <init>
    43:52:void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean,java.lang.Class) -> <init>
    55:55:com.fasterxml.jackson.databind.introspect.ObjectIdInfo empty() -> a
    59:62:com.fasterxml.jackson.databind.introspect.ObjectIdInfo withAlwaysAsId(boolean) -> a
    65:65:com.fasterxml.jackson.databind.PropertyName getPropertyName() -> b
    66:66:java.lang.Class getScope() -> c
    67:67:java.lang.Class getGeneratorType() -> d
    68:68:java.lang.Class getResolverType() -> e
    69:69:boolean getAlwaysAsId() -> f
    73:75:java.lang.String toString() -> toString
    26:26:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector -> b.a.a.c.f.L:
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> a
    boolean _forSerialization -> b
    boolean _stdBeanNaming -> c
    com.fasterxml.jackson.databind.JavaType _type -> d
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _classDef -> e
    com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker -> f
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> g
    boolean _useAnnotations -> h
    java.lang.String _mutatorPrefix -> i
    boolean _collected -> j
    java.util.LinkedHashMap _properties -> k
    java.util.LinkedList _creatorProperties -> l
    java.util.LinkedList _anyGetters -> m
    java.util.LinkedList _anySetters -> n
    java.util.LinkedList _anySetterField -> o
    java.util.LinkedList _jsonValueAccessors -> p
    java.util.HashSet _ignoredPropertyNames -> q
    java.util.LinkedHashMap _injectables -> r
    128:144:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.String) -> <init>
    153:153:com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> a
    157:157:com.fasterxml.jackson.databind.JavaType getType() -> b
    161:161:com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassDef() -> c
    170:171:java.util.List getProperties() -> d
    175:178:java.util.Map getInjectables() -> e
    195:208:com.fasterxml.jackson.databind.introspect.AnnotatedMember getJsonValueAccessor() -> f
    213:223:com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnyGetter() -> g
    228:238:com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnySetterField() -> h
    243:253:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getAnySetterMethod() -> i
    261:261:java.util.Set getIgnoredPropertyNames() -> j
    270:274:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> k
    286:289:java.util.Map getPropertyMap() -> l
    305:358:void collectAll() -> m
    371:449:void _addFields(java.util.Map) -> a
    457:476:void _addCreators(java.util.Map) -> b
    485:517:void _addCreatorParam(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> a
    524:547:void _addMethods(java.util.Map) -> c
    553:613:void _addGetterMethod(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector) -> a
    620:650:void _addSetterMethod(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector) -> b
    654:667:void _addInjectables(java.util.Map) -> d
    671:687:void _doAddInjectable(com.fasterxml.jackson.annotation.JacksonInject$Value,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    690:690:com.fasterxml.jackson.databind.PropertyName _propNameFromSimple(java.lang.String) -> a
    705:729:void _removeUnwantedProperties(java.util.Map) -> e
    738:749:void _removeUnwantedAccessor(java.util.Map) -> f
    758:764:void _collectIgnorals(java.lang.String) -> b
    775:827:void _renameProperties(java.util.Map) -> g
    832:880:void _renameUsing(java.util.Map,com.fasterxml.jackson.databind.PropertyNamingStrategy) -> a
    886:923:void _renameWithWrappers(java.util.Map) -> h
    937:1015:void _sortProperties(java.util.Map) -> i
    1024:1027:void reportProblem(java.lang.String,java.lang.Object[]) -> a
    1032:1039:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder _property(java.util.Map,com.fasterxml.jackson.databind.PropertyName) -> a
    1046:1052:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder _property(java.util.Map,java.lang.String) -> a
    1057:1089:com.fasterxml.jackson.databind.PropertyNamingStrategy _findNamingStrategy() -> n
    1093:1101:void _updateCreatorProperty(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,java.util.List) -> a
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder -> b.a.a.c.f.M:
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty NOT_REFEFERENCE_PROP -> m
    boolean _forSerialization -> b
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> c
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> d
    com.fasterxml.jackson.databind.PropertyName _name -> e
    com.fasterxml.jackson.databind.PropertyName _internalName -> f
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _fields -> g
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _ctorParameters -> h
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _getters -> i
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _setters -> j
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> k
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty _referenceInfo -> l
    75:76:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean,com.fasterxml.jackson.databind.PropertyName) -> <init>
    80:86:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName) -> <init>
    90:100:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,com.fasterxml.jackson.databind.PropertyName) -> <init>
    110:110:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder withName(com.fasterxml.jackson.databind.PropertyName) -> b
    116:117:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder withSimpleName(java.lang.String) -> a
    132:142:int compareTo(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> a
    153:153:java.lang.String getName() -> a
    158:158:com.fasterxml.jackson.databind.PropertyName getFullName() -> b
    163:163:boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> a
    167:167:java.lang.String getInternalName() -> C
    176:178:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> c
    191:198:boolean isExplicitlyIncluded() -> d
    204:207:boolean isExplicitlyNamed() -> e
    219:234:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> h
    244:314:com.fasterxml.jackson.databind.PropertyMetadata _getSetterInfo(com.fasterxml.jackson.databind.PropertyMetadata) -> a
    324:353:com.fasterxml.jackson.databind.JavaType getPrimaryType() -> f
    358:358:java.lang.Class getRawPrimaryType() -> g
    368:368:boolean hasGetter() -> D
    371:371:boolean hasSetter() -> k
    374:374:boolean hasField() -> l
    377:377:boolean hasConstructorParameter() -> m
    381:381:boolean couldDeserialize() -> i
    386:386:boolean couldSerialize() -> j
    393:437:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> n
    444:503:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> o
    509:531:com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> p
    537:555:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> q
    560:563:java.util.Iterator getConstructorParameters() -> r
    568:576:com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> v
    581:590:int _getterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> a
    595:600:int _setterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> b
    611:611:java.lang.Class[] findViews() -> w
    623:637:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType() -> x
    642:648:boolean isTypeId() -> z
    652:652:java.lang.Boolean _findRequired() -> E
    661:661:java.lang.String _findDescription() -> F
    670:670:java.lang.Integer _findIndex() -> G
    679:679:java.lang.String _findDefaultValue() -> H
    689:689:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo() -> A
    703:710:com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> B
    714:714:com.fasterxml.jackson.annotation.JsonProperty$Access findAccess() -> I
    729:730:void addField(com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> a
    733:734:void addCtor(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> a
    737:738:void addGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> a
    741:742:void addSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> b
    750:754:void addAll(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> b
    758:764:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked merge(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> a
    779:783:void removeIgnored() -> J
    795:828:com.fasterxml.jackson.annotation.JsonProperty$Access removeNonVisible(boolean) -> a
    837:838:void removeConstructors() -> K
    847:851:void trimByVisibility() -> L
    856:876:void mergeAnnotations(boolean) -> b
    881:887:com.fasterxml.jackson.databind.introspect.AnnotationMap _mergeAnnotations(int,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked[]) -> a
    900:904:com.fasterxml.jackson.databind.introspect.AnnotationMap _getAllAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> a
    918:922:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _applyAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> a
    927:930:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeIgnored(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> b
    935:938:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeNonVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> c
    943:946:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _trimByVisibility(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> d
    957:962:boolean _anyExplicits(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> e
    967:972:boolean _anyExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> f
    976:979:boolean anyVisible() -> M
    985:990:boolean _anyVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> g
    994:997:boolean anyIgnorals() -> N
    1003:1008:boolean _anyIgnorals(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> h
    1019:1027:java.util.Set findExplicitNames() -> O
    1040:1045:java.util.Collection explode(java.util.Collection) -> a
    1053:1089:void _explode(java.util.Collection,java.util.Map,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> a
    1094:1109:java.util.Set _findExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,java.util.Set) -> a
    1116:1124:java.lang.String toString() -> toString
    1139:1157:java.lang.Object fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember) -> a
    1162:1219:java.lang.Object fromMemberAnnotationsExcept(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember,java.lang.Object) -> a
    19:19:int compareTo(java.lang.Object) -> compareTo
    29:30:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1 -> b.a.a.c.f.N:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    611:611:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    614:614:java.lang.Class[] withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    611:611:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10 -> b.a.a.c.f.O:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonProperty$Access -> a
    799:799:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2 -> b.a.a.c.f.P:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    630:630:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    633:633:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    630:630:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3 -> b.a.a.c.f.Q:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    642:642:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    645:645:java.lang.Boolean withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    642:642:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4 -> b.a.a.c.f.R:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    652:652:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    655:655:java.lang.Boolean withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    652:652:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5 -> b.a.a.c.f.S:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    661:661:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    664:664:java.lang.String withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    661:661:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6 -> b.a.a.c.f.T:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    670:670:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    673:673:java.lang.Integer withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    670:670:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7 -> b.a.a.c.f.U:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    679:679:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    682:682:java.lang.String withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    679:679:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$8 -> b.a.a.c.f.V:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    689:689:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    692:696:com.fasterxml.jackson.databind.introspect.ObjectIdInfo withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    689:689:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9 -> b.a.a.c.f.W:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    714:714:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    717:717:com.fasterxml.jackson.annotation.JsonProperty$Access withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    714:714:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked -> b.a.a.c.f.X:
    java.lang.Object value -> a
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked next -> b
    com.fasterxml.jackson.databind.PropertyName name -> c
    boolean isNameExplicit -> d
    boolean isVisible -> e
    boolean isMarkedIgnored -> f
    1280:1300:void <init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> <init>
    1303:1306:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNext() -> a
    1310:1313:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withValue(java.lang.Object) -> a
    1317:1320:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> a
    1324:1333:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored() -> b
    1337:1338:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNonVisible() -> c
    1346:1349:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked append(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> b
    1353:1371:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked trimByVisibility() -> d
    1376:1381:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$MemberIterator -> b.a.a.c.f.Y:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked next -> a
    1240:1242:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> <init>
    1246:1246:boolean hasNext() -> hasNext
    1251:1254:com.fasterxml.jackson.databind.introspect.AnnotatedMember next() -> a
    1259:1259:void remove() -> remove
    1235:1235:java.lang.Object next() -> next
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember -> b.a.a.c.f.Z:
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver -> b.a.a.c.f.aa:
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _overrides -> a
    java.util.Map _localMixIns -> b
    35:37:void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    74:78:void addLocalDefinition(java.lang.Class,java.lang.Class) -> a
    92:96:java.lang.Class findMixInClassFor(java.lang.Class) -> j
com.fasterxml.jackson.databind.introspect.TypeResolutionContext -> b.a.a.c.f.ab:
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> a
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic -> b.a.a.c.f.ac:
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> a
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> b
    24:27:void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings) -> <init>
    31:31:com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> a
com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember -> b.a.a.c.f.ad:
    java.lang.Class _declaringClass -> a
    com.fasterxml.jackson.databind.JavaType _type -> d
    java.lang.String _name -> e
    37:41:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    45:45:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> a
    55:55:java.lang.reflect.Field getAnnotated() -> a
    61:61:java.lang.String getName() -> g
    65:65:java.lang.Class getRawType() -> i
    70:70:com.fasterxml.jackson.databind.JavaType getType() -> h
    80:80:java.lang.Class getDeclaringClass() -> d
    83:83:java.lang.reflect.Member getMember() -> e
    87:87:void setValue(java.lang.Object,java.lang.Object) -> a
    92:92:java.lang.Object getValue(java.lang.Object) -> b
    105:105:int hashCode() -> hashCode
    110:116:boolean equals(java.lang.Object) -> equals
    121:121:java.lang.String toString() -> toString
    14:14:java.lang.reflect.AnnotatedElement getAnnotated() -> f
com.fasterxml.jackson.databind.introspect.VisibilityChecker -> b.a.a.c.f.ae:
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> a
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> a
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> a
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> b
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> c
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> d
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> e
    boolean isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> a
    boolean isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> b
    boolean isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> c
    boolean isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    boolean isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> a
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std -> b.a.a.c.f.af:
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std DEFAULT -> a
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _getterMinLevel -> b
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _isGetterMinLevel -> c
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _setterMinLevel -> d
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _creatorMinLevel -> e
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _fieldMinLevel -> f
    178:178:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std defaultInstance() -> a
    201:207:void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> <init>
    249:257:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std _with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> a
    263:273:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> b
    279:289:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> b
    293:296:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _defaultOrOverride(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> a
    333:335:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> f
    340:342:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> g
    347:349:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> h
    354:356:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> i
    361:363:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> j
    374:374:boolean isCreatorVisible(java.lang.reflect.Member) -> a
    379:379:boolean isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    384:384:boolean isFieldVisible(java.lang.reflect.Field) -> a
    389:389:boolean isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> a
    394:394:boolean isGetterVisible(java.lang.reflect.Method) -> a
    399:399:boolean isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> a
    404:404:boolean isIsGetterVisible(java.lang.reflect.Method) -> b
    409:409:boolean isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> b
    414:414:boolean isSetterVisible(java.lang.reflect.Method) -> c
    419:419:boolean isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> c
    430:430:java.lang.String toString() -> toString
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> e
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> d
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> c
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> b
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> a
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> a
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> a
    164:164:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.NamedType -> b.a.a.c.g.a:
    java.lang.Class _class -> a
    int _hashCode -> b
    java.lang.String _name -> c
    16:16:void <init>(java.lang.Class) -> <init>
    18:22:void <init>(java.lang.Class,java.lang.String) -> <init>
    24:24:java.lang.Class getType() -> a
    25:25:java.lang.String getName() -> b
    26:26:void setName(java.lang.String) -> a
    28:28:boolean hasName() -> c
    35:38:boolean equals(java.lang.Object) -> equals
    42:42:int hashCode() -> hashCode
    46:46:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsontype.SubtypeResolver -> b.a.a.c.g.b:
    15:15:void <init>() -> <init>
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> a
    58:59:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> a
    76:76:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> a
    94:95:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> b
    112:112:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> b
    130:130:java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType) -> a
    142:142:java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector) -> a
com.fasterxml.jackson.databind.jsontype.TypeDeserializer -> b.a.a.c.g.c:
    24:24:void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    java.lang.String getPropertyName() -> b
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> c
    java.lang.Class getDefaultImpl() -> d
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> c
    java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    137:137:java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> a
    144:176:java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> a
com.fasterxml.jackson.databind.jsontype.TypeDeserializer$1 -> b.a.a.c.g.d:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    148:148:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.TypeIdResolver -> b.a.a.c.g.e:
    void init(com.fasterxml.jackson.databind.JavaType) -> a
    java.lang.String idFromValue(java.lang.Object) -> a
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> a
    java.lang.String idFromBaseType() -> a
    com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> a
    java.lang.String getDescForKnownTypeIds() -> b
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder -> b.a.a.c.g.f:
    java.lang.Class getDefaultImpl() -> a
    com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> a
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> a
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> a
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> a
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> a
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> a
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean) -> a
com.fasterxml.jackson.databind.jsontype.TypeSerializer -> b.a.a.c.g.g:
    23:23:void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    java.lang.String getPropertyName() -> b
    78:101:com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> a
    106:108:com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> a
    113:115:com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonToken) -> a
    com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> a
    com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> b
com.fasterxml.jackson.databind.jsontype.TypeSerializer$1 -> b.a.a.c.g.h:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As -> a
    79:79:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer -> b.a.a.c.g.a.a:
    32:33:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    36:37:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    42:42:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
    46:46:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    53:53:java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    61:61:java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    66:66:java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> c
    71:71:java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    89:126:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
    131:153:java.lang.String _locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> f
    160:160:boolean _usesExternalId() -> e
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer -> b.a.a.c.g.a.b:
    15:16:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    20:20:com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> b
    24:24:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    12:12:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer -> b.a.a.c.g.a.c:
    18:19:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    23:23:com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> c
    28:28:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    12:12:com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> d
    12:12:com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> b
    12:12:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer -> b.a.a.c.g.a.d:
    28:29:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    33:34:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    38:41:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
    45:45:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    50:50:boolean _usesExternalId() -> e
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer -> b.a.a.c.g.a.e:
    java.lang.String _typePropertyName -> a
    29:31:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    35:35:com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> b
    39:39:java.lang.String getPropertyName() -> b
    42:42:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    24:24:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer -> b.a.a.c.g.a.f:
    com.fasterxml.jackson.annotation.JsonTypeInfo$As _inclusion -> a
    43:45:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> <init>
    48:50:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    54:54:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
    58:58:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    69:105:java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    112:130:java.lang.Object _deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer) -> a
    139:178:java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer) -> b
    190:193:java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer -> b.a.a.c.g.a.g:
    java.lang.String _typePropertyName -> a
    22:24:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    28:28:com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> d
    33:33:java.lang.String getPropertyName() -> b
    36:36:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    15:15:com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> b
    15:15:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer -> b.a.a.c.g.a.h:
    32:33:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    36:37:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    41:41:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
    45:45:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    52:52:java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    57:57:java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    62:62:java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> c
    67:67:java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> d
    85:127:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> e
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer -> b.a.a.c.g.a.i:
    23:24:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    28:28:com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> b
    32:32:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    20:20:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver -> b.a.a.c.g.a.j:
    22:23:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    34:34:java.lang.String idFromValue(java.lang.Object) -> a
    39:39:java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> a
    44:44:com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> a
    49:57:com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,com.fasterxml.jackson.databind.DatabindContext) -> a
    69:114:java.lang.String _idFrom(java.lang.Object,java.lang.Class,com.fasterxml.jackson.databind.type.TypeFactory) -> a
    119:119:java.lang.String getDescForKnownTypeIds() -> b
com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver -> b.a.a.c.g.a.k:
    java.lang.String _basePackageName -> a
    java.lang.String _basePackagePrefix -> b
    27:37:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    45:50:java.lang.String idFromValue(java.lang.Object) -> a
    56:67:com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,com.fasterxml.jackson.databind.DatabindContext) -> a
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver -> b.a.a.c.g.a.l:
    java.util.LinkedHashSet _registeredSubtypes -> a
    24:24:void <init>() -> <init>
    34:40:void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> a
    72:107:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> a
    114:131:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> a
    144:178:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> b
    185:202:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> b
    219:247:void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap) -> a
    257:279:void _collectAndResolveByTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map) -> a
    288:304:java.util.Collection _combineNamedAndUnnamed(java.lang.Class,java.util.Set,java.util.Map) -> a
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder -> b.a.a.c.g.a.m:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id _idType -> a
    com.fasterxml.jackson.annotation.JsonTypeInfo$As _includeAs -> b
    java.lang.String _typeProperty -> c
    boolean _typeIdVisible -> d
    java.lang.Class _defaultImpl -> e
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver -> f
    29:47:void <init>() -> <init>
    60:60:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder noTypeInfoBuilder() -> b
    67:74:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> b
    81:101:com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> a
    114:159:com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> a
    170:174:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> b
    184:188:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String) -> b
    193:194:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class) -> b
    199:200:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeIdVisibility(boolean) -> b
    209:209:java.lang.Class getDefaultImpl() -> a
    229:242:com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean) -> a
    15:15:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean) -> a
    15:15:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> a
    15:15:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> a
    15:15:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> a
    15:15:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> a
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1 -> b.a.a.c.g.a.n:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As -> a
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id -> b
    88:231:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator -> b.a.a.c.g.a.o:
    java.util.Set DEFAULT_NO_DESER_CLASS_NAMES -> a
    java.util.Set _cfgIllegalClassNames -> b
    com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance -> c
    68:72:void <init>() -> <init>
    74:74:com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance() -> a
    81:121:void validateSubType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    32:70:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase -> b.a.a.c.g.a.p:
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver -> b
    com.fasterxml.jackson.databind.JavaType _baseType -> c
    com.fasterxml.jackson.databind.BeanProperty _property -> d
    com.fasterxml.jackson.databind.JavaType _defaultImpl -> e
    java.lang.String _typePropertyName -> f
    boolean _typeIdVisible -> g
    java.util.Map _deserializers -> h
    com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer -> i
    74:83:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    86:95:void <init>(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    109:109:java.lang.String baseTypeName() -> f
    112:112:java.lang.String getPropertyName() -> b
    115:115:com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> c
    119:119:java.lang.Class getDefaultImpl() -> d
    126:126:com.fasterxml.jackson.databind.JavaType baseType() -> g
    132:137:java.lang.String toString() -> toString
    149:198:com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> a
    207:224:com.fasterxml.jackson.databind.JsonDeserializer _findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> a
    249:262:java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> a
    281:291:com.fasterxml.jackson.databind.JavaType _handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> b
    300:300:com.fasterxml.jackson.databind.JavaType _handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> c
com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase -> b.a.a.c.g.a.q:
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> c
    com.fasterxml.jackson.databind.JavaType _baseType -> d
    37:40:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    44:44:void init(com.fasterxml.jackson.databind.JavaType) -> a
    53:53:java.lang.String idFromBaseType() -> a
    60:60:com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> a
    70:70:java.lang.String getDescForKnownTypeIds() -> b
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver -> b.a.a.c.g.a.r:
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> a
    java.util.Map _typeToId -> b
    java.util.Map _idToType -> e
    29:33:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Map,java.util.Map) -> <init>
    39:75:com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean) -> a
    83:83:java.lang.String idFromValue(java.lang.Object) -> a
    88:111:java.lang.String idFromClass(java.lang.Class) -> a
    119:122:java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> a
    127:127:com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> a
    136:136:com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String) -> a
    141:141:java.lang.String getDescForKnownTypeIds() -> b
    146:146:java.lang.String toString() -> toString
    161:163:java.lang.String _defaultTypeId(java.lang.Class) -> b
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase -> b.a.a.c.g.a.s:
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver -> b
    com.fasterxml.jackson.databind.BeanProperty _property -> c
    21:24:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    36:36:java.lang.String getPropertyName() -> b
    45:46:com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> a
    53:53:com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> b
    62:73:void _generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId) -> a
    82:86:java.lang.String idFromValue(java.lang.Object) -> a
    90:94:java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> a
    104:104:void handleMissingId(java.lang.Object) -> b
com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver -> b.a.a.c.h.a:
    java.util.HashMap _mappings -> a
    74:80:com.fasterxml.jackson.databind.JavaType findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> a
    94:94:com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
com.fasterxml.jackson.databind.module.SimpleDeserializers -> b.a.a.c.h.b:
    java.util.HashMap _classMappings -> a
    boolean _hasEnumDeserializer -> b
    25:40:void <init>() -> <init>
    51:60:void addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    88:88:com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    96:96:com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
    106:106:com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    116:116:com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    124:133:com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
    141:144:com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> b
    154:154:com.fasterxml.jackson.databind.JsonDeserializer findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    165:165:com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    176:176:com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    180:183:com.fasterxml.jackson.databind.JsonDeserializer _find(com.fasterxml.jackson.databind.JavaType) -> a
com.fasterxml.jackson.databind.module.SimpleKeyDeserializers -> b.a.a.c.h.c:
    java.util.HashMap _classMappings -> a
    56:59:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
com.fasterxml.jackson.databind.module.SimpleModule -> b.a.a.c.h.d:
    java.lang.String _name -> a
    com.fasterxml.jackson.core.Version _version -> b
    com.fasterxml.jackson.databind.module.SimpleSerializers _serializers -> c
    com.fasterxml.jackson.databind.module.SimpleDeserializers _deserializers -> d
    com.fasterxml.jackson.databind.module.SimpleSerializers _keySerializers -> e
    com.fasterxml.jackson.databind.module.SimpleKeyDeserializers _keyDeserializers -> f
    com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver _abstractTypes -> g
    com.fasterxml.jackson.databind.module.SimpleValueInstantiators _valueInstantiators -> h
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier _deserializerModifier -> i
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier _serializerModifier -> j
    java.util.HashMap _mixins -> k
    java.util.LinkedHashSet _subtypes -> l
    com.fasterxml.jackson.databind.PropertyNamingStrategy _namingStrategy -> m
    48:112:void <init>() -> <init>
    48:143:void <init>(java.lang.String,com.fasterxml.jackson.core.Version) -> <init>
    185:188:java.lang.Object getTypeId() -> c
    279:284:com.fasterxml.jackson.databind.module.SimpleModule addSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> a
    296:302:com.fasterxml.jackson.databind.module.SimpleModule addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> a
    331:337:com.fasterxml.jackson.databind.module.SimpleModule addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    479:479:java.lang.String getModuleName() -> a
    492:527:void setupModule(com.fasterxml.jackson.databind.Module$SetupContext) -> a
    530:530:com.fasterxml.jackson.core.Version version() -> b
    543:547:void _checkNotNull(java.lang.Object,java.lang.String) -> a
com.fasterxml.jackson.databind.module.SimpleSerializers -> b.a.a.c.h.e:
    java.util.HashMap _classMappings -> a
    java.util.HashMap _interfaceMappings -> b
    boolean _hasEnumSerializer -> c
    37:57:void <init>() -> <init>
    78:85:void addSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> a
    89:90:void addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> a
    111:165:com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    172:172:com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    179:179:com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    186:186:com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    194:194:com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    202:202:com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    213:224:com.fasterxml.jackson.databind.JsonSerializer _findInterfaceMapping(java.lang.Class,com.fasterxml.jackson.databind.type.ClassKey) -> a
    229:245:void _addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> b
com.fasterxml.jackson.databind.module.SimpleValueInstantiators -> b.a.a.c.h.f:
    java.util.HashMap _classMappings -> a
    45:46:com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> a
com.fasterxml.jackson.databind.node.ArrayNode -> b.a.a.c.i.a:
    java.util.List _children -> b
    30:32:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    76:76:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> a
    87:87:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> g
    92:92:boolean isArray() -> d
    95:95:com.fasterxml.jackson.core.JsonToken asToken() -> a
    99:99:int size() -> c
    104:104:java.util.Iterator elements() -> t
    116:116:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> a
    159:168:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    174:180:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    191:197:com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> c
    274:278:com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode) -> a
    822:827:boolean equals(java.lang.Object) -> equals
    839:839:int hashCode() -> hashCode
    845:854:java.lang.String toString() -> toString
    864:865:com.fasterxml.jackson.databind.node.ArrayNode _add(com.fasterxml.jackson.databind.JsonNode) -> b
com.fasterxml.jackson.databind.node.BaseJsonNode -> b.a.a.c.i.b:
    22:22:void <init>() -> <init>
    76:76:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> b
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.node.BigIntegerNode -> b.a.a.c.i.c:
    java.math.BigInteger MIN_INTEGER -> b
    java.math.BigInteger MAX_INTEGER -> c
    java.math.BigInteger MIN_LONG -> d
    java.math.BigInteger MAX_LONG -> e
    java.math.BigInteger _value -> a
    29:29:void <init>(java.math.BigInteger) -> <init>
    31:31:com.fasterxml.jackson.databind.node.BigIntegerNode valueOf(java.math.BigInteger) -> a
    40:40:com.fasterxml.jackson.core.JsonToken asToken() -> a
    43:43:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> b
    60:60:java.lang.Number numberValue() -> m
    67:67:int intValue() -> n
    70:70:long longValue() -> o
    73:73:java.math.BigInteger bigIntegerValue() -> r
    79:79:double doubleValue() -> p
    82:82:java.math.BigDecimal decimalValue() -> q
    92:92:java.lang.String asText() -> s
    104:105:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    110:115:boolean equals(java.lang.Object) -> equals
    120:120:int hashCode() -> hashCode
    16:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.BinaryNode -> b.a.a.c.i.d:
    com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE -> a
    byte[] _data -> b
    22:24:void <init>(byte[]) -> <init>
    38:44:com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[]) -> a
    61:61:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> g
    70:70:com.fasterxml.jackson.core.JsonToken asToken() -> a
    79:79:byte[] binaryValue() -> l
    87:87:java.lang.String asText() -> s
    94:96:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    101:106:boolean equals(java.lang.Object) -> equals
    111:111:int hashCode() -> hashCode
    121:121:java.lang.String toString() -> toString
    17:17:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.BooleanNode -> b.a.a.c.i.e:
    com.fasterxml.jackson.databind.node.BooleanNode TRUE -> a
    com.fasterxml.jackson.databind.node.BooleanNode FALSE -> b
    boolean _value -> c
    28:28:void <init>(boolean) -> <init>
    30:30:com.fasterxml.jackson.databind.node.BooleanNode getTrue() -> v
    31:31:com.fasterxml.jackson.databind.node.BooleanNode getFalse() -> w
    37:37:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> g
    41:41:com.fasterxml.jackson.core.JsonToken asToken() -> a
    51:51:java.lang.String asText() -> s
    79:80:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    84:84:int hashCode() -> hashCode
    94:99:boolean equals(java.lang.Object) -> equals
    19:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.ContainerNode -> b.a.a.c.i.f:
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> a
    25:27:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    36:36:java.lang.String asText() -> s
    int size() -> c
    80:80:com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> v
    83:83:com.fasterxml.jackson.databind.node.NullNode nullNode() -> w
    124:124:com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String) -> d
com.fasterxml.jackson.databind.node.DecimalNode -> b.a.a.c.i.g:
    com.fasterxml.jackson.databind.node.DecimalNode ZERO -> a
    java.math.BigDecimal MIN_INTEGER -> c
    java.math.BigDecimal MAX_INTEGER -> d
    java.math.BigDecimal MIN_LONG -> e
    java.math.BigDecimal MAX_LONG -> f
    java.math.BigDecimal _value -> b
    32:32:void <init>(java.math.BigDecimal) -> <init>
    34:34:com.fasterxml.jackson.databind.node.DecimalNode valueOf(java.math.BigDecimal) -> a
    42:42:com.fasterxml.jackson.core.JsonToken asToken() -> a
    45:45:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> b
    67:67:java.lang.Number numberValue() -> m
    73:73:int intValue() -> n
    76:76:long longValue() -> o
    80:80:java.math.BigInteger bigIntegerValue() -> r
    86:86:double doubleValue() -> p
    89:89:java.math.BigDecimal decimalValue() -> q
    93:93:java.lang.String asText() -> s
    110:111:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    116:121:boolean equals(java.lang.Object) -> equals
    125:125:int hashCode() -> hashCode
    17:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.DoubleNode -> b.a.a.c.i.h:
    double _value -> a
    27:27:void <init>(double) -> <init>
    29:29:com.fasterxml.jackson.databind.node.DoubleNode valueOf(double) -> a
    37:37:com.fasterxml.jackson.core.JsonToken asToken() -> a
    40:40:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> b
    63:63:java.lang.Number numberValue() -> m
    70:70:int intValue() -> n
    73:73:long longValue() -> o
    79:79:double doubleValue() -> p
    82:82:java.math.BigDecimal decimalValue() -> q
    86:86:java.math.BigInteger bigIntegerValue() -> r
    91:91:java.lang.String asText() -> s
    97:97:boolean isNaN() -> v
    102:103:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    108:116:boolean equals(java.lang.Object) -> equals
    123:124:int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.FloatNode -> b.a.a.c.i.i:
    float _value -> a
    27:27:void <init>(float) -> <init>
    29:29:com.fasterxml.jackson.databind.node.FloatNode valueOf(float) -> a
    37:37:com.fasterxml.jackson.core.JsonToken asToken() -> a
    40:40:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> b
    64:64:java.lang.Number numberValue() -> m
    71:71:int intValue() -> n
    74:74:long longValue() -> o
    80:80:double doubleValue() -> p
    83:83:java.math.BigDecimal decimalValue() -> q
    87:87:java.math.BigInteger bigIntegerValue() -> r
    92:92:java.lang.String asText() -> s
    98:98:boolean isNaN() -> v
    103:104:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    109:117:boolean equals(java.lang.Object) -> equals
    122:122:int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.IntNode -> b.a.a.c.i.j:
    com.fasterxml.jackson.databind.node.IntNode[] CANONICALS -> b
    int _value -> a
    43:43:void <init>(int) -> <init>
    46:47:com.fasterxml.jackson.databind.node.IntNode valueOf(int) -> a
    56:56:com.fasterxml.jackson.core.JsonToken asToken() -> a
    59:59:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> b
    78:78:java.lang.Number numberValue() -> m
    85:85:int intValue() -> n
    88:88:long longValue() -> o
    94:94:double doubleValue() -> p
    98:98:java.math.BigDecimal decimalValue() -> q
    101:101:java.math.BigInteger bigIntegerValue() -> r
    105:105:java.lang.String asText() -> s
    117:118:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    123:128:boolean equals(java.lang.Object) -> equals
    132:132:int hashCode() -> hashCode
    25:30:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.JsonNodeFactory -> b.a.a.c.i.k:
    boolean _cfgBigDecimalExact -> b
    com.fasterxml.jackson.databind.node.JsonNodeFactory decimalsNormalized -> c
    com.fasterxml.jackson.databind.node.JsonNodeFactory decimalsAsIs -> d
    com.fasterxml.jackson.databind.node.JsonNodeFactory instance -> a
    62:64:void <init>(boolean) -> <init>
    74:75:void <init>() -> <init>
    101:101:com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean) -> a
    109:109:com.fasterxml.jackson.databind.node.NullNode nullNode() -> a
    158:158:com.fasterxml.jackson.databind.node.NumericNode numberNode(int) -> a
    177:177:com.fasterxml.jackson.databind.node.NumericNode numberNode(long) -> a
    199:202:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger) -> a
    210:210:com.fasterxml.jackson.databind.node.NumericNode numberNode(float) -> a
    228:228:com.fasterxml.jackson.databind.node.NumericNode numberNode(double) -> a
    254:275:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal) -> a
    289:289:com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String) -> a
    297:297:com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[]) -> a
    319:319:com.fasterxml.jackson.databind.node.ArrayNode arrayNode() -> b
    333:333:com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> c
    342:342:com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object) -> a
    346:346:com.fasterxml.jackson.databind.node.ValueNode rawValueNode(com.fasterxml.jackson.databind.util.RawValue) -> a
    24:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.JsonNodeType -> b.a.a.c.i.l:
    com.fasterxml.jackson.databind.node.JsonNodeType ARRAY -> a
    com.fasterxml.jackson.databind.node.JsonNodeType BINARY -> b
    com.fasterxml.jackson.databind.node.JsonNodeType BOOLEAN -> c
    com.fasterxml.jackson.databind.node.JsonNodeType MISSING -> d
    com.fasterxml.jackson.databind.node.JsonNodeType NULL -> e
    com.fasterxml.jackson.databind.node.JsonNodeType NUMBER -> f
    com.fasterxml.jackson.databind.node.JsonNodeType OBJECT -> g
    com.fasterxml.jackson.databind.node.JsonNodeType POJO -> h
    com.fasterxml.jackson.databind.node.JsonNodeType STRING -> i
    com.fasterxml.jackson.databind.node.JsonNodeType[] $VALUES -> j
    17:17:com.fasterxml.jackson.databind.node.JsonNodeType[] values() -> values
    17:17:com.fasterxml.jackson.databind.node.JsonNodeType valueOf(java.lang.String) -> valueOf
    17:17:void <init>(java.lang.String,int) -> <init>
    17:27:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.LongNode -> b.a.a.c.i.m:
    long _value -> a
    26:26:void <init>(long) -> <init>
    28:28:com.fasterxml.jackson.databind.node.LongNode valueOf(long) -> a
    36:36:com.fasterxml.jackson.core.JsonToken asToken() -> a
    39:39:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> b
    55:55:java.lang.Number numberValue() -> m
    62:62:int intValue() -> n
    65:65:long longValue() -> o
    71:71:double doubleValue() -> p
    74:74:java.math.BigDecimal decimalValue() -> q
    77:77:java.math.BigInteger bigIntegerValue() -> r
    81:81:java.lang.String asText() -> s
    93:94:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    99:104:boolean equals(java.lang.Object) -> equals
    109:109:int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.NodeCursor -> b.a.a.c.i.n:
    com.fasterxml.jackson.databind.node.NodeCursor _parent -> c
    java.lang.String _currentName -> d
    java.lang.Object _currentValue -> e
    33:37:void <init>(int,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    47:47:com.fasterxml.jackson.databind.node.NodeCursor getParent() -> j
    51:51:java.lang.String getCurrentName() -> h
    63:63:java.lang.Object getCurrentValue() -> i
    68:69:void setCurrentValue(java.lang.Object) -> a
    com.fasterxml.jackson.core.JsonToken nextToken() -> k
    com.fasterxml.jackson.core.JsonToken endToken() -> l
    com.fasterxml.jackson.databind.JsonNode currentNode() -> m
    boolean currentHasChildren() -> n
    89:97:com.fasterxml.jackson.databind.node.NodeCursor iterateChildren() -> o
    12:12:com.fasterxml.jackson.core.JsonStreamContext getParent() -> a
com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor -> b.a.a.c.i.o:
    java.util.Iterator _contents -> f
    com.fasterxml.jackson.databind.JsonNode _currentNode -> g
    159:161:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    166:171:com.fasterxml.jackson.core.JsonToken nextToken() -> k
    177:177:com.fasterxml.jackson.core.JsonToken endToken() -> l
    180:180:com.fasterxml.jackson.databind.JsonNode currentNode() -> m
    184:184:boolean currentHasChildren() -> n
    151:151:com.fasterxml.jackson.core.JsonStreamContext getParent() -> a
com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor -> b.a.a.c.i.p:
    java.util.Iterator _contents -> f
    java.util.Map$Entry _current -> g
    boolean _needEntry -> h
    201:204:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    210:222:com.fasterxml.jackson.core.JsonToken nextToken() -> k
    236:236:com.fasterxml.jackson.core.JsonToken endToken() -> l
    240:240:com.fasterxml.jackson.databind.JsonNode currentNode() -> m
    245:245:boolean currentHasChildren() -> n
    191:191:com.fasterxml.jackson.core.JsonStreamContext getParent() -> a
com.fasterxml.jackson.databind.node.NodeCursor$RootCursor -> b.a.a.c.i.q:
    com.fasterxml.jackson.databind.JsonNode _node -> f
    boolean _done -> g
    116:121:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    130:135:com.fasterxml.jackson.core.JsonToken nextToken() -> k
    141:141:com.fasterxml.jackson.core.JsonToken endToken() -> l
    143:143:com.fasterxml.jackson.databind.JsonNode currentNode() -> m
    145:145:boolean currentHasChildren() -> n
    111:111:com.fasterxml.jackson.core.JsonStreamContext getParent() -> a
com.fasterxml.jackson.databind.node.NullNode -> b.a.a.c.i.r:
    com.fasterxml.jackson.databind.node.NullNode instance -> a
    24:24:void <init>() -> <init>
    26:26:com.fasterxml.jackson.databind.node.NullNode getInstance() -> v
    30:30:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> g
    33:33:com.fasterxml.jackson.core.JsonToken asToken() -> a
    36:36:java.lang.String asText() -> s
    51:52:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    56:56:boolean equals(java.lang.Object) -> equals
    61:61:int hashCode() -> hashCode
    18:18:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.NumericNode -> b.a.a.c.i.s:
    14:14:void <init>() -> <init>
    19:19:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> g
    90:90:boolean isNaN() -> v
com.fasterxml.jackson.databind.node.ObjectNode -> b.a.a.c.i.t:
    java.util.Map _children -> b
    26:28:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    67:67:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> a
    78:78:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> g
    83:83:boolean isObject() -> e
    86:86:com.fasterxml.jackson.core.JsonToken asToken() -> a
    90:90:int size() -> c
    95:95:java.util.Iterator elements() -> t
    103:103:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> a
    108:108:java.util.Iterator fieldNames() -> f
    132:132:java.util.Iterator fields() -> u
    201:210:com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> c
    293:314:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    322:341:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    367:371:com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> a
    426:429:com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> b
    497:497:com.fasterxml.jackson.databind.JsonNode remove(java.lang.String) -> e
    620:622:com.fasterxml.jackson.databind.node.ObjectNode putObject(java.lang.String) -> f
    790:791:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.String) -> a
    833:838:boolean equals(java.lang.Object) -> equals
    846:846:boolean _childrenEqual(com.fasterxml.jackson.databind.node.ObjectNode) -> a
    852:852:int hashCode() -> hashCode
    858:871:java.lang.String toString() -> toString
    882:883:com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> c
com.fasterxml.jackson.databind.node.POJONode -> b.a.a.c.i.u:
    java.lang.Object _value -> a
    20:20:void <init>(java.lang.Object) -> <init>
    30:30:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> g
    33:33:com.fasterxml.jackson.core.JsonToken asToken() -> a
    43:46:byte[] binaryValue() -> l
    56:56:java.lang.String asText() -> s
    107:114:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    125:125:java.lang.Object getPojo() -> v
    136:141:boolean equals(java.lang.Object) -> equals
    149:152:boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode) -> a
    156:156:int hashCode() -> hashCode
    162:168:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.node.TextNode -> b.a.a.c.i.v:
    com.fasterxml.jackson.databind.node.TextNode EMPTY_STRING_NODE -> a
    java.lang.String _value -> b
    23:23:void <init>(java.lang.String) -> <init>
    36:42:com.fasterxml.jackson.databind.node.TextNode valueOf(java.lang.String) -> d
    47:47:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> g
    50:50:com.fasterxml.jackson.core.JsonToken asToken() -> a
    54:54:java.lang.String textValue() -> k
    65:76:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> a
    81:81:byte[] binaryValue() -> l
    92:92:java.lang.String asText() -> s
    140:145:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    156:161:boolean equals(java.lang.Object) -> equals
    165:165:int hashCode() -> hashCode
    173:177:java.lang.String toString() -> toString
    182:185:void appendQuoted(java.lang.StringBuilder,java.lang.String) -> a
    19:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.TreeTraversingParser -> b.a.a.c.i.w:
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> c
    com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor -> d
    com.fasterxml.jackson.core.JsonToken _nextToken -> e
    boolean _startContainer -> f
    boolean _closed -> g
    69:80:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    89:89:com.fasterxml.jackson.core.ObjectCodec getCodec() -> a
    106:111:void close() -> close
    122:159:com.fasterxml.jackson.core.JsonToken nextToken() -> f
    168:175:com.fasterxml.jackson.core.JsonParser skipChildren() -> j
    191:191:java.lang.String getCurrentName() -> s
    204:204:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> c
    209:209:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> d
    214:214:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> e
    226:245:java.lang.String getText() -> t
    251:251:char[] getTextCharacters() -> u
    256:256:int getTextLength() -> v
    261:261:int getTextOffset() -> w
    267:267:boolean hasTextCharacters() -> x
    280:281:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> z
    287:287:java.math.BigInteger getBigIntegerValue() -> E
    292:292:java.math.BigDecimal getDecimalValue() -> H
    297:297:double getDoubleValue() -> G
    302:302:float getFloatValue() -> F
    307:307:long getLongValue() -> D
    312:312:int getIntValue() -> C
    317:317:java.lang.Number getNumberValue() -> y
    323:334:java.lang.Object getEmbeddedObject() -> I
    339:345:boolean isNaN() -> q
    359:375:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> a
    383:388:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> a
    398:401:com.fasterxml.jackson.databind.JsonNode currentNode() -> U
    407:412:com.fasterxml.jackson.databind.JsonNode currentNumericNode() -> V
    417:418:void _handleEOF() -> aa
com.fasterxml.jackson.databind.node.TreeTraversingParser$1 -> b.a.a.c.i.x:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    230:230:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.ValueNode -> b.a.a.c.i.y:
    20:20:void <init>() -> <init>
    com.fasterxml.jackson.core.JsonToken asToken() -> a
    44:48:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    57:57:java.lang.String toString() -> toString
    78:78:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> a
    84:84:boolean has(java.lang.String) -> b
    97:97:com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> c
com.fasterxml.jackson.databind.ser.AnyGetterWriter -> b.a.a.c.j.a:
    com.fasterxml.jackson.databind.BeanProperty _property -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> b
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> c
    com.fasterxml.jackson.databind.ser.std.MapSerializer _mapSerializer -> d
    31:38:void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    44:46:void fixAccess(com.fasterxml.jackson.databind.SerializationConfig) -> a
    51:66:void getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    75:92:void getAndFilter(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter) -> a
    99:106:void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.BasicSerializerFactory -> b.a.a.c.j.b:
    java.util.HashMap _concrete -> a
    java.util.HashMap _concreteLazy -> b
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig -> c
    135:137:void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> <init>
    com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> a
    168:168:com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> a
    177:177:com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> b
    186:186:com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> a
    208:250:com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> a
    262:280:com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> a
    java.lang.Iterable customSerializers() -> a
    305:317:com.fasterxml.jackson.databind.JsonSerializer findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean) -> a
    340:356:com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    371:427:com.fasterxml.jackson.databind.JsonSerializer findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> a
    439:439:com.fasterxml.jackson.databind.JsonSerializer findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> b
    453:470:com.fasterxml.jackson.databind.JsonSerializer findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> a
    485:491:com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> a
    504:509:com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer) -> a
    516:520:com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> b
    536:625:com.fasterxml.jackson.databind.JsonSerializer buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> c
    639:702:com.fasterxml.jackson.databind.JsonSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    713:713:boolean isIndexedList(java.lang.Class) -> a
    718:718:com.fasterxml.jackson.databind.ser.ContainerSerializer buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    723:723:com.fasterxml.jackson.databind.ser.ContainerSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> b
    727:727:com.fasterxml.jackson.databind.JsonSerializer buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType) -> a
    748:790:com.fasterxml.jackson.databind.JsonSerializer buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    804:853:com.fasterxml.jackson.databind.ser.std.MapSerializer _checkMapContentInclusion(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.std.MapSerializer) -> a
    866:920:com.fasterxml.jackson.databind.JsonSerializer buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> a
    936:961:com.fasterxml.jackson.annotation.JsonInclude$Value _findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> a
    984:1017:com.fasterxml.jackson.databind.JsonSerializer buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    1034:1052:com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> a
    1060:1107:com.fasterxml.jackson.databind.JsonSerializer buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    1124:1124:com.fasterxml.jackson.databind.JsonSerializer buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType) -> a
    1135:1135:com.fasterxml.jackson.databind.JsonSerializer buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType) -> b
    1147:1163:com.fasterxml.jackson.databind.JsonSerializer buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    1181:1186:com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> c
    1198:1203:com.fasterxml.jackson.databind.JsonSerializer _findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> d
    1211:1211:java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> a
    1228:1236:boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    62:110:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1 -> b.a.a.c.j.c:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> a
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> b
    413:823:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanPropertyFilter -> b.a.a.c.j.d:
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> a
com.fasterxml.jackson.databind.ser.BeanPropertyWriter -> b.a.a.c.j.e:
    java.lang.Object MARKER_FOR_EMPTY -> c
    com.fasterxml.jackson.core.io.SerializedString _name -> d
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> e
    com.fasterxml.jackson.databind.JavaType _declaredType -> f
    com.fasterxml.jackson.databind.JavaType _cfgSerializationType -> g
    com.fasterxml.jackson.databind.JavaType _nonTrivialBaseType -> h
    com.fasterxml.jackson.databind.util.Annotations _contextAnnotations -> i
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> j
    java.lang.reflect.Method _accessorMethod -> k
    java.lang.reflect.Field _field -> l
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> m
    com.fasterxml.jackson.databind.JsonSerializer _nullSerializer -> n
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> o
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> p
    boolean _suppressNulls -> q
    java.lang.Object _suppressableValue -> r
    java.lang.Class[] _includeInViews -> s
    java.util.HashMap _internalSettings -> w
    216:248:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object,java.lang.Class[]) -> <init>
    270:290:void <init>() -> <init>
    296:297:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    303:334:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName) -> <init>
    337:359:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString) -> <init>
    362:366:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    375:375:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _new(com.fasterxml.jackson.databind.PropertyName) -> a
    385:386:void assignTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    393:399:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> a
    406:412:void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> b
    419:419:com.fasterxml.jackson.databind.ser.BeanPropertyWriter unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer) -> b
    428:429:void setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType) -> a
    439:440:void fixAccess(com.fasterxml.jackson.databind.SerializationConfig) -> a
    476:476:java.lang.String getName() -> a
    482:482:com.fasterxml.jackson.databind.PropertyName getFullName() -> b
    487:487:com.fasterxml.jackson.databind.JavaType getType() -> c
    510:510:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    575:575:boolean hasSerializer() -> f
    579:579:boolean hasNullSerializer() -> g
    586:586:com.fasterxml.jackson.databind.jsontype.TypeSerializer getTypeSerializer() -> h
    604:604:boolean willSuppressNulls() -> i
    614:618:boolean wouldConflictWithName(com.fasterxml.jackson.databind.PropertyName) -> b
    627:627:com.fasterxml.jackson.databind.JavaType getSerializationType() -> j
    669:669:java.lang.Class[] getViews() -> k
    687:731:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    743:746:void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    759:805:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> c
    818:823:void serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> d
    892:903:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> a
    915:916:java.lang.Object get(java.lang.Object) -> a
    936:947:boolean _handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> a
    952:971:java.lang.String toString() -> toString
    48:48:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializer -> b.a.a.c.j.f:
    45:46:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    64:65:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    68:69:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set) -> <init>
    83:83:com.fasterxml.jackson.databind.ser.BeanSerializer createDummy(com.fasterxml.jackson.databind.JavaType) -> a
    88:88:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    93:93:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> a
    98:98:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> a
    103:103:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.util.Set) -> a
    121:128:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> d
    146:158:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    167:167:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder -> b.a.a.c.j.g:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPERTIES -> i
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> a
    com.fasterxml.jackson.databind.SerializationConfig _config -> b
    java.util.List _properties -> c
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties -> d
    com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter -> e
    java.lang.Object _filterId -> f
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId -> g
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter -> h
    40:78:void <init>(com.fasterxml.jackson.databind.BeanDescription) -> <init>
    101:102:void setConfig(com.fasterxml.jackson.databind.SerializationConfig) -> a
    105:106:void setProperties(java.util.List) -> a
    114:122:void setFilteredProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> a
    125:126:void setAnyGetter(com.fasterxml.jackson.databind.ser.AnyGetterWriter) -> a
    129:130:void setFilterId(java.lang.Object) -> a
    134:138:void setTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    141:142:void setObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> a
    154:154:com.fasterxml.jackson.databind.BeanDescription getBeanDescription() -> a
    156:156:java.util.List getProperties() -> b
    163:163:com.fasterxml.jackson.databind.ser.AnyGetterWriter getAnyGetter() -> c
    165:165:java.lang.Object getFilterId() -> d
    167:167:com.fasterxml.jackson.databind.introspect.AnnotatedMember getTypeId() -> e
    169:169:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter getObjectIdWriter() -> f
    187:216:com.fasterxml.jackson.databind.JsonSerializer build() -> g
    226:226:com.fasterxml.jackson.databind.ser.BeanSerializer createDummy() -> h
    19:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializerFactory -> b.a.a.c.j.h:
    com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance -> d
    77:78:void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> <init>
    89:103:com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> a
    108:108:java.lang.Iterable customSerializers() -> a
    134:179:com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> a
    186:253:com.fasterxml.jackson.databind.JsonSerializer _createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> d
    272:279:com.fasterxml.jackson.databind.JsonSerializer findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> b
    296:308:com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    325:338:com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> b
    359:449:com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription) -> a
    456:497:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> a
    508:508:com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> a
    514:514:com.fasterxml.jackson.databind.ser.PropertyBuilder constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> b
    518:518:com.fasterxml.jackson.databind.ser.BeanSerializerBuilder constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription) -> a
    537:537:boolean isPotentialBeanType(java.lang.Class) -> b
    548:588:java.util.List findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> a
    608:621:java.util.List filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> a
    636:659:void processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> a
    670:705:void removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> b
    713:722:void removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> c
    734:750:java.util.List removeOverlappingTypeIds(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,java.util.List) -> a
    768:791:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    64:64:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializerModifier -> b.a.a.c.j.i:
    36:36:void <init>() -> <init>
    49:49:java.util.List changeProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> a
    64:64:java.util.List orderProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> b
    78:78:com.fasterxml.jackson.databind.ser.BeanSerializerBuilder updateBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> a
    95:95:com.fasterxml.jackson.databind.JsonSerializer modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> a
    123:123:com.fasterxml.jackson.databind.JsonSerializer modifyArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> a
    131:131:com.fasterxml.jackson.databind.JsonSerializer modifyCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> a
    139:139:com.fasterxml.jackson.databind.JsonSerializer modifyCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> a
    147:147:com.fasterxml.jackson.databind.JsonSerializer modifyMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> a
    155:155:com.fasterxml.jackson.databind.JsonSerializer modifyMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> a
    163:163:com.fasterxml.jackson.databind.JsonSerializer modifyEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> a
    185:185:com.fasterxml.jackson.databind.JsonSerializer modifyKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> b
com.fasterxml.jackson.databind.ser.ContainerSerializer -> b.a.a.c.j.j:
    25:26:void <init>(java.lang.Class) -> <init>
    32:33:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    42:43:void <init>(java.lang.Class,boolean) -> <init>
    46:47:void <init>(com.fasterxml.jackson.databind.ser.ContainerSerializer) -> <init>
    60:61:com.fasterxml.jackson.databind.ser.ContainerSerializer withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    boolean hasSingleElement(java.lang.Object) -> a
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
com.fasterxml.jackson.databind.ser.ContextualSerializer -> b.a.a.c.j.k:
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider -> b.a.a.c.j.l:
    java.util.Map _seenObjectIds -> o
    java.util.ArrayList _objectIdGenerators -> p
    com.fasterxml.jackson.core.JsonGenerator _generator -> q
    66:66:void <init>() -> <init>
    70:71:void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> a
    107:139:com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> b
    146:155:java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> a
    161:173:boolean includeFilterSuppressNulls(java.lang.Object) -> b
    186:214:com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> a
    229:232:java.util.Map _createObjectIdMap() -> m
    284:284:com.fasterxml.jackson.core.JsonGenerator getGenerator() -> j
    301:320:void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> a
    466:473:void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.PropertyName) -> a
    480:484:void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer) -> a
    493:499:void _serializeNull(com.fasterxml.jackson.core.JsonGenerator) -> b
    502:509:java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception) -> a
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl -> b.a.a.c.j.m:
    609:609:void <init>() -> <init>
    614:615:void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    628:628:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> b
    606:606:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> a
com.fasterxml.jackson.databind.ser.FilterProvider -> b.a.a.c.j.n:
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(java.lang.Object) -> a
    52:56:com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(java.lang.Object,java.lang.Object) -> a
com.fasterxml.jackson.databind.ser.PropertyBuilder -> b.a.a.c.j.o:
    java.lang.Object NO_DEFAULT_MARKER -> g
    com.fasterxml.jackson.databind.SerializationConfig _config -> a
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> b
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> c
    java.lang.Object _defaultBean -> d
    com.fasterxml.jackson.annotation.JsonInclude$Value _defaultInclusion -> e
    boolean _useRealPropertyDefaults -> f
    53:74:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> <init>
    100:243:com.fasterxml.jackson.databind.ser.BeanPropertyWriter buildWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean) -> a
    261:299:com.fasterxml.jackson.databind.JavaType findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType) -> a
    310:328:java.lang.Object getDefaultBean() -> a
    377:383:java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object) -> a
    18:18:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.PropertyBuilder$1 -> b.a.a.c.j.p:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> a
    156:156:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.PropertyFilter -> b.a.a.c.j.q:
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> a
com.fasterxml.jackson.databind.ser.PropertyWriter -> b.a.a.c.j.r:
    27:28:void <init>(com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    31:32:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    35:36:void <init>(com.fasterxml.jackson.databind.ser.PropertyWriter) -> <init>
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
com.fasterxml.jackson.databind.ser.ResolvableSerializer -> b.a.a.c.j.s:
    void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.SerializerCache -> b.a.a.c.j.t:
    java.util.HashMap _sharedMap -> a
    java.util.concurrent.atomic.AtomicReference _readOnlyMap -> b
    33:42:void <init>() -> <init>
    50:54:com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap() -> a
    60:65:com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _makeReadOnlyLookupMap() -> b
    84:86:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class) -> a
    91:93:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> a
    105:107:com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class) -> b
    133:139:void addTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> a
    164:177:void addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> a
    190:200:void addAndResolveNonTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.SerializerFactory -> b.a.a.c.j.u:
    11:11:void <init>() -> <init>
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> a
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> b
    com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> a
    com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> a
    com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> a
    com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> a
com.fasterxml.jackson.databind.ser.Serializers -> b.a.a.c.j.v:
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
com.fasterxml.jackson.databind.ser.Serializers$Base -> b.a.a.c.j.w:
    101:101:void <init>() -> <init>
    107:107:com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> a
    116:116:com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    124:124:com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    132:132:com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    140:140:com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    149:149:com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    158:158:com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter -> b.a.a.c.j.x:
    45:46:void <init>() -> <init>
    57:61:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude$Value,java.lang.Class[]) -> <init>
    81:85:boolean _suppressNulls(com.fasterxml.jackson.annotation.JsonInclude$Value) -> a
    89:98:java.lang.Object _suppressableValue(com.fasterxml.jackson.annotation.JsonInclude$Value) -> b
    java.lang.Object value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> e
    com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter withConfig(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> a
    151:190:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    200:240:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> c
com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter -> b.a.a.c.j.a.a:
    java.lang.String _attrName -> x
    35:36:void <init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType) -> <init>
    42:48:void <init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude$Value) -> <init>
    55:55:com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter construct(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType) -> a
    71:71:com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter withConfig(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> a
    82:82:java.lang.Object value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> e
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer -> b.a.a.c.j.a.b:
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer -> a
    64:66:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase) -> <init>
    69:71:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set) -> <init>
    75:77:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    90:90:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    95:95:boolean isUnwrappingSerializer() -> c
    101:101:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> a
    106:106:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> a
    111:111:com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer withIgnorals(java.util.Set) -> b
    117:117:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> d
    135:144:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    155:169:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    179:184:boolean hasSingleElement(com.fasterxml.jackson.databind.SerializerProvider) -> b
    191:220:void serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    229:229:java.lang.String toString() -> toString
    46:46:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.util.Set) -> a
com.fasterxml.jackson.databind.ser.impl.FailingSerializer -> b.a.a.c.j.a.c:
    java.lang.String _msg -> a
    28:30:void <init>(java.lang.String) -> <init>
    35:36:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter -> b.a.a.c.j.a.d:
    19:22:com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructViewBased(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> a
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView -> b.a.a.c.j.a.e:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate -> x
    java.lang.Class[] _views -> y
    109:112:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> <init>
    116:116:com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView rename(com.fasterxml.jackson.databind.util.NameTransformer) -> c
    121:122:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> a
    126:127:void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> b
    133:138:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    144:149:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> c
    162:171:boolean _inView(java.lang.Class) -> a
    98:98:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> a
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView -> b.a.a.c.j.a.f:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate -> x
    java.lang.Class _view -> y
    43:46:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class) -> <init>
    50:50:com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView rename(com.fasterxml.jackson.databind.util.NameTransformer) -> c
    55:56:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> a
    60:61:void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> b
    67:73:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    79:85:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> c
    31:31:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> a
com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer -> b.a.a.c.j.a.g:
    27:28:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    33:34:void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    40:40:com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> a
    51:51:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.List) -> a
    56:56:boolean hasSingleElement(java.util.List) -> a
    61:61:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    69:81:void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    87:125:void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    131:151:void serializeContentsUsing(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> a
    156:188:void serializeTypedContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> c
    18:18:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    18:18:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> b
    18:18:boolean hasSingleElement(java.lang.Object) -> a
    18:18:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer -> b.a.a.c.j.a.h:
    com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer instance -> a
    37:38:void <init>() -> <init>
    42:43:void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer,java.lang.Boolean) -> <init>
    47:47:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    67:79:void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    86:90:void serializeWithType(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    95:109:void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int) -> a
    22:22:void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    22:22:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    22:22:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    28:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.IteratorSerializer -> b.a.a.c.j.a.i:
    19:20:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    25:26:void <init>(com.fasterxml.jackson.databind.ser.impl.IteratorSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    30:30:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Iterator) -> a
    36:36:boolean hasSingleElement(java.util.Iterator) -> a
    41:41:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    48:48:com.fasterxml.jackson.databind.ser.impl.IteratorSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> a
    66:69:void serialize(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    75:94:void serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    99:124:void _serializeDynamicContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> c
    13:13:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    13:13:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    13:13:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> b
    13:13:boolean hasSingleElement(java.lang.Object) -> a
    13:13:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer -> b.a.a.c.j.a.j:
    java.lang.Object MARKER_FOR_EMPTY -> a
    com.fasterxml.jackson.databind.BeanProperty _property -> b
    boolean _valueTypeIsStatic -> c
    com.fasterxml.jackson.databind.JavaType _entryType -> d
    com.fasterxml.jackson.databind.JavaType _keyType -> e
    com.fasterxml.jackson.databind.JavaType _valueType -> f
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> g
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> h
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> i
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers -> j
    java.lang.Object _suppressableValue -> k
    boolean _suppressNulls -> l
    111:121:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    138:150:void <init>(com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object,boolean) -> <init>
    154:154:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    164:164:com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object,boolean) -> a
    173:177:com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer withContentInclusion(java.lang.Object,boolean) -> a
    185:275:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    286:286:com.fasterxml.jackson.databind.JavaType getContentType() -> d
    296:296:boolean hasSingleElement(java.util.Map$Entry) -> a
    302:326:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Map$Entry) -> a
    339:342:void serialize(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    349:354:void serializeWithType(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    360:414:void serializeDynamic(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    425:429:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> a
    435:439:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> a
    24:24:boolean hasSingleElement(java.lang.Object) -> a
    24:24:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    24:24:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    24:24:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    33:33:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer$1 -> b.a.a.c.j.a.k:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> a
    230:230:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter -> b.a.a.c.j.a.l:
    com.fasterxml.jackson.databind.JavaType idType -> a
    com.fasterxml.jackson.core.SerializableString propertyName -> b
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> c
    com.fasterxml.jackson.databind.JsonSerializer serializer -> d
    boolean alwaysAsId -> e
    52:58:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.SerializableString,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> <init>
    70:72:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean) -> a
    76:76:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> a
    83:86:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withAlwaysAsId(boolean) -> a
com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator -> b.a.a.c.j.a.m:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _property -> b
    18:19:void <init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    23:25:void <init>(java.lang.Class,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    33:45:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> a
    51:56:java.lang.Object generateId(java.lang.Object) -> c
    62:62:com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> a
    68:68:com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> a
    73:77:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> b
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap -> b.a.a.c.j.a.n:
    boolean _resetWhenFull -> a
    35:37:void <init>(boolean) -> <init>
    39:41:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> a
    64:65:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    72:73:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    90:91:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> b
    98:99:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> b
    144:145:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> c
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> a
    179:179:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties() -> a
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double -> b.a.a.c.j.a.o:
    java.lang.Class _type1 -> b
    java.lang.Class _type2 -> c
    com.fasterxml.jackson.databind.JsonSerializer _serializer1 -> d
    com.fasterxml.jackson.databind.JsonSerializer _serializer2 -> e
    300:305:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    310:316:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> a
    322:326:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> a
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty -> b.a.a.c.j.a.p:
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_PROPERTIES -> b
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_ROOT_VALUES -> c
    245:246:void <init>(boolean) -> <init>
    250:250:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> a
    255:255:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> a
    239:242:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi -> b.a.a.c.j.a.q:
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer[] _entries -> b
    345:347:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer[]) -> <init>
    352:358:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> a
    364:375:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> a
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult -> b.a.a.c.j.a.r:
    com.fasterxml.jackson.databind.JsonSerializer serializer -> a
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map -> b
    206:209:void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap) -> <init>
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single -> b.a.a.c.j.a.s:
    java.lang.Class _type -> b
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> c
    271:274:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    279:282:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> a
    287:287:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> a
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer -> b.a.a.c.j.a.t:
    java.lang.Class type -> a
    com.fasterxml.jackson.databind.JsonSerializer serializer -> b
    220:223:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap -> b.a.a.c.j.a.u:
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] _buckets -> a
    int _size -> b
    int _mask -> c
    27:38:void <init>(java.util.Map) -> <init>
    43:48:int findSize(int) -> a
    55:55:com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap from(java.util.HashMap) -> a
    85:97:com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class) -> a
    102:114:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> a
    119:131:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class) -> b
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket -> b.a.a.c.j.a.v:
    com.fasterxml.jackson.databind.JsonSerializer value -> a
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket next -> b
    java.lang.Class _class -> c
    com.fasterxml.jackson.databind.JavaType _type -> d
    boolean _isTyped -> e
    151:157:void <init>(com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket,com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    160:160:boolean matchesTyped(java.lang.Class) -> a
    164:164:boolean matchesUntyped(java.lang.Class) -> b
    172:172:boolean matchesUntyped(com.fasterxml.jackson.databind.JavaType) -> a
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter -> b.a.a.c.j.a.w:
    88:88:com.fasterxml.jackson.databind.ser.PropertyFilter from(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> a
    132:132:boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> a
    142:142:boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter) -> a
    167:172:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> a
    207:212:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> a
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$1 -> b.a.a.c.j.a.x:
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter val$src -> a
    88:88:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> <init>
    93:94:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> a
com.fasterxml.jackson.databind.ser.impl.StringArraySerializer -> b.a.a.c.j.a.y:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> e
    com.fasterxml.jackson.databind.ser.impl.StringArraySerializer instance -> a
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> b
    49:51:void <init>() -> <init>
    56:58:void <init>(com.fasterxml.jackson.databind.ser.impl.StringArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    62:62:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    71:71:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    89:122:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    143:143:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String[]) -> a
    148:148:boolean hasSingleElement(java.lang.String[]) -> a
    161:173:void serialize(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    179:195:void serializeContents(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    200:208:void serializeContentsSlow(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> a
    22:22:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    22:22:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    22:22:boolean hasSingleElement(java.lang.Object) -> a
    22:22:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    32:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer -> b.a.a.c.j.a.z:
    com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer instance -> a
    36:37:void <init>() -> <init>
    42:43:void <init>(com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer,java.lang.Boolean) -> <init>
    47:47:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    70:83:void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    90:95:void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    101:115:void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    22:22:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    22:22:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    27:27:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer -> b.a.a.c.j.a.A:
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> a
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> b
    25:28:void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    32:33:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    41:42:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    45:45:java.lang.Class handledType() -> a
    58:65:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer -> b.a.a.c.j.a.B:
    18:19:void <init>() -> <init>
    25:26:void <init>(java.lang.Class) -> <init>
    32:38:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    44:50:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    54:54:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    71:74:void failForEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> b
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter -> b.a.a.c.j.a.C:
    com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer -> x
    43:45:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    49:51:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString) -> <init>
    56:62:com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> c
    72:72:com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter _new(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString) -> a
    90:131:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    137:145:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> a
    206:219:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> a
    24:24:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> a
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer -> b.a.a.c.j.a.D:
    com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer -> a
    36:38:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    42:44:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> <init>
    48:50:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    53:55:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,java.util.Set) -> <init>
    66:66:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    71:71:boolean isUnwrappingSerializer() -> c
    76:76:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> a
    81:81:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> a
    86:86:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.util.Set) -> a
    95:95:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> d
    112:122:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    128:142:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    151:151:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.ser.impl.WritableObjectId -> b.a.a.c.j.a.E:
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> a
    java.lang.Object id -> b
    boolean idWritten -> c
    26:30:void <init>(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> <init>
    34:43:boolean writeAsId(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> a
    50:53:java.lang.Object generateId(java.lang.Object) -> a
    62:76:void writeAsField(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> b
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase -> b.a.a.c.j.b.a:
    com.fasterxml.jackson.databind.BeanProperty _property -> c
    java.lang.Boolean _unwrapSingle -> d
    36:39:void <init>(java.lang.Class) -> <init>
    68:71:void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    94:106:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    115:126:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    134:139:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    148:151:boolean _shouldUnwrapSingle(com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase -> b.a.a.c.j.b.b:
    com.fasterxml.jackson.databind.JavaType _elementType -> a
    com.fasterxml.jackson.databind.BeanProperty _property -> b
    boolean _staticTyping -> c
    java.lang.Boolean _unwrapSingle -> d
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> e
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> f
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> g
    79:88:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    115:123:void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> b
    168:210:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    241:251:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    258:263:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    305:310:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> a
    316:320:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer -> b.a.a.c.j.b.c:
    24:25:void <init>(com.fasterxml.jackson.databind.type.ReferenceType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    32:34:void <init>(com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer,java.lang.Object,boolean) -> <init>
    41:41:com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer) -> a
    49:49:com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean) -> a
    62:62:boolean _isValuePresent(java.util.concurrent.atomic.AtomicReference) -> a
    67:67:java.lang.Object _getReferenced(java.util.concurrent.atomic.AtomicReference) -> b
    72:72:java.lang.Object _getReferencedIfPresent(java.util.concurrent.atomic.AtomicReference) -> c
    10:10:java.lang.Object _getReferencedIfPresent(java.lang.Object) -> a
    10:10:java.lang.Object _getReferenced(java.lang.Object) -> b
    10:10:boolean _isValuePresent(java.lang.Object) -> c
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase -> b.a.a.c.j.b.d:
    com.fasterxml.jackson.databind.PropertyName NAME_FOR_OBJECT_REF -> b
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPS -> c
    com.fasterxml.jackson.databind.JavaType _beanType -> d
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props -> e
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps -> f
    com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter -> g
    java.lang.Object _propertyFilterId -> h
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId -> i
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter -> j
    com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape -> k
    112:130:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    135:145:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    150:151:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> <init>
    159:169:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    179:208:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set) -> <init>
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> a
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.util.Set) -> a
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> d
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> a
    268:269:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    274:285:com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] rename(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.util.NameTransformer) -> a
    302:376:void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> a
    389:404:com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> a
    413:556:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    578:578:boolean usesObjectId() -> b
    592:607:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    612:636:void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean) -> a
    641:654:void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    660:671:void _serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId) -> a
    678:686:com.fasterxml.jackson.core.type.WritableTypeId _typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> a
    709:740:void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> c
    755:788:void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> d
    41:43:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase$1 -> b.a.a.c.j.b.e:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> a
    427:427:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.BooleanSerializer -> b.a.a.c.j.b.f:
    boolean _forPrimitive -> a
    42:44:void <init>(boolean) -> <init>
    50:58:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    63:64:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    70:71:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber -> b.a.a.c.j.b.g:
    boolean _forPrimitive -> a
    102:104:void <init>(boolean) -> <init>
    108:109:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    119:120:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    133:141:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer -> b.a.a.c.j.b.h:
    36:37:void <init>() -> <init>
    41:41:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,byte[]) -> a
    48:50:void serialize(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    58:70:void serializeWithType(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    30:30:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    30:30:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    30:30:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer -> b.a.a.c.j.b.i:
    16:16:void <init>() -> <init>
    22:35:void serialize(java.nio.ByteBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    13:13:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.CalendarSerializer -> b.a.a.c.j.b.j:
    com.fasterxml.jackson.databind.ser.std.CalendarSerializer instance -> a
    23:23:void <init>() -> <init>
    26:27:void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    31:31:com.fasterxml.jackson.databind.ser.std.CalendarSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> a
    36:36:long _timestamp(java.util.Calendar) -> a
    42:47:void serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    16:16:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    16:16:com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> b
    21:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ClassSerializer -> b.a.a.c.j.b.k:
    22:22:void <init>() -> <init>
    27:28:void serialize(java.lang.Class,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.CollectionSerializer -> b.a.a.c.j.b.l:
    41:42:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    57:58:void <init>(com.fasterxml.jackson.databind.ser.std.CollectionSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    62:62:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    69:69:com.fasterxml.jackson.databind.ser.std.CollectionSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> a
    80:80:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection) -> a
    85:85:boolean hasSingleElement(java.util.Collection) -> a
    97:109:void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    114:155:void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    160:182:void serializeContentsUsing(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> a
    25:25:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    25:25:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    25:25:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> b
    25:25:boolean hasSingleElement(java.lang.Object) -> a
    25:25:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
com.fasterxml.jackson.databind.ser.std.DateSerializer -> b.a.a.c.j.b.m:
    com.fasterxml.jackson.databind.ser.std.DateSerializer instance -> a
    27:28:void <init>() -> <init>
    31:32:void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    36:36:com.fasterxml.jackson.databind.ser.std.DateSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> a
    41:41:long _timestamp(java.util.Date) -> a
    47:52:void serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    15:15:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    15:15:com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> b
    24:24:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase -> b.a.a.c.j.b.n:
    java.lang.Boolean _useTimestamp -> b
    java.text.DateFormat _customFormat -> c
    java.util.concurrent.atomic.AtomicReference _reusedCustomFormat -> d
    53:57:void <init>(java.lang.Class,java.lang.Boolean,java.text.DateFormat) -> <init>
    com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> b
    65:133:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    147:147:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    182:192:boolean _asTimestamp(com.fasterxml.jackson.databind.SerializerProvider) -> a
    211:229:void _serializeAsString(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
com.fasterxml.jackson.databind.ser.std.EnumSerializer -> b.a.a.c.j.b.o:
    com.fasterxml.jackson.databind.util.EnumValues _values -> a
    java.lang.Boolean _serializeAsIndex -> b
    58:61:void <init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean) -> <init>
    77:79:com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat$Value) -> a
    91:101:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    123:133:void serialize(java.lang.Enum,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    197:200:boolean _serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider) -> a
    211:230:java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Value,boolean,java.lang.Boolean) -> a
    27:27:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.EnumSetSerializer -> b.a.a.c.j.b.p:
    18:19:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    24:25:void <init>(com.fasterxml.jackson.databind.ser.std.EnumSetSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    30:30:com.fasterxml.jackson.databind.ser.std.EnumSetSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> c
    37:37:com.fasterxml.jackson.databind.ser.std.EnumSetSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> a
    42:42:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.EnumSet) -> a
    47:47:boolean hasSingleElement(java.util.EnumSet) -> a
    54:66:void serialize(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    73:87:void serializeContents(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    10:10:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    10:10:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    10:10:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> b
    10:10:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    10:10:boolean hasSingleElement(java.lang.Object) -> a
    10:10:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
com.fasterxml.jackson.databind.ser.std.FileSerializer -> b.a.a.c.j.b.q:
    22:22:void <init>() -> <init>
    26:27:void serialize(java.io.File,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer -> b.a.a.c.j.b.r:
    boolean _asNumeric -> a
    36:37:void <init>() -> <init>
    43:45:void <init>(boolean) -> <init>
    51:63:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    71:86:void serialize(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    93:97:void serializeWithType(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    25:25:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    25:25:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer -> b.a.a.c.j.b.s:
    19:19:void <init>() -> <init>
    24:39:void serialize(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    46:50:void serializeWithType(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    15:15:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    15:15:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.IterableSerializer -> b.a.a.c.j.b.t:
    19:20:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    25:26:void <init>(com.fasterxml.jackson.databind.ser.std.IterableSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    30:30:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    37:37:com.fasterxml.jackson.databind.ser.std.IterableSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> a
    43:43:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Iterable) -> a
    49:58:boolean hasSingleElement(java.lang.Iterable) -> a
    65:76:void serialize(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    82:113:void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    12:12:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    12:12:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    12:12:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> b
    12:12:boolean hasSingleElement(java.lang.Object) -> a
    12:12:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer -> b.a.a.c.j.b.u:
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> a
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> b
    com.fasterxml.jackson.databind.BeanProperty _property -> c
    boolean _forceTypeInformation -> d
    78:83:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    89:94:void <init>(com.fasterxml.jackson.databind.ser.std.JsonValueSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> <init>
    98:98:java.lang.Class _notNullClass(java.lang.Class) -> a
    104:108:com.fasterxml.jackson.databind.ser.std.JsonValueSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> a
    126:153:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    166:185:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    192:224:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    308:318:boolean isNaturalTypeWithStdHandling(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> a
    329:329:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter -> b.a.a.c.j.b.v:
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> a
    java.lang.Object _forObject -> b
    349:352:void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object) -> <init>
    356:356:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> a
    361:361:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> a
    366:366:java.lang.String getPropertyName() -> b
    380:381:com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> a
    388:388:com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> b
com.fasterxml.jackson.databind.ser.std.MapProperty -> b.a.a.c.j.b.w:
    com.fasterxml.jackson.databind.BeanProperty BOGUS_PROP -> i
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> c
    com.fasterxml.jackson.databind.BeanProperty _property -> d
    java.lang.Object _key -> e
    java.lang.Object _value -> f
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> g
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> h
    37:40:void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    51:55:void reset(java.lang.Object,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> a
    66:69:java.lang.String getName() -> a
    88:88:com.fasterxml.jackson.databind.PropertyName getFullName() -> b
    105:111:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    117:120:void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    163:163:com.fasterxml.jackson.databind.JavaType getType() -> c
    173:173:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> e
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.MapSerializer -> b.a.a.c.j.b.x:
    com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE -> a
    java.lang.Object MARKER_FOR_EMPTY -> b
    com.fasterxml.jackson.databind.BeanProperty _property -> c
    boolean _valueTypeIsStatic -> d
    com.fasterxml.jackson.databind.JavaType _keyType -> e
    com.fasterxml.jackson.databind.JavaType _valueType -> f
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> g
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> h
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> i
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers -> j
    java.util.Set _ignoredEntries -> k
    java.lang.Object _filterId -> l
    java.lang.Object _suppressableValue -> m
    boolean _suppressNulls -> n
    boolean _sortKeys -> o
    168:183:void <init>(java.util.Set,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    190:205:void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set) -> <init>
    213:227:void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean) -> <init>
    231:245:void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean) -> <init>
    249:253:com.fasterxml.jackson.databind.ser.std.MapSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> c
    263:268:com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,boolean) -> a
    273:277:com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object) -> b
    287:291:com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object,boolean) -> a
    304:324:com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object) -> a
    331:332:void _ensureOverride(java.lang.String) -> a
    394:514:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    525:525:com.fasterxml.jackson.databind.JavaType getContentType() -> d
    536:588:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Map) -> a
    593:593:boolean hasSingleElement(java.util.Map) -> a
    626:643:void serialize(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    651:670:void serializeWithType(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    687:723:void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    733:783:void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    794:822:void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> a
    835:884:void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object) -> a
    893:938:void serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> b
    953:1002:void serializeFilteredAnyProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,java.util.Map,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object) -> a
    1043:1048:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> a
    1054:1058:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> a
    1065:1084:java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> c
    1100:1100:boolean _hasNullKey(java.util.Map) -> b
    1106:1134:void _writeNullKeyedEntry(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    1139:1148:com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> b
    33:33:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    33:33:boolean hasSingleElement(java.lang.Object) -> a
    33:33:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    33:33:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    33:33:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    40:45:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.MapSerializer$1 -> b.a.a.c.j.b.y:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> a
    472:472:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NullSerializer -> b.a.a.c.j.b.z:
    com.fasterxml.jackson.databind.ser.std.NullSerializer instance -> a
    26:26:void <init>() -> <init>
    30:31:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    44:45:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    24:24:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializer -> b.a.a.c.j.b.A:
    com.fasterxml.jackson.databind.ser.std.NumberSerializer instance -> a
    boolean _isInt -> b
    38:41:void <init>(java.lang.Class) -> <init>
    47:55:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    62:81:void serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    21:21:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    30:30:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializer$1 -> b.a.a.c.j.b.B:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> a
    49:49:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers -> b.a.a.c.j.b.C:
    26:41:void addAll(java.util.Map) -> a
com.fasterxml.jackson.databind.ser.std.NumberSerializers$1 -> b.a.a.c.j.b.D:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> a
    87:87:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base -> b.a.a.c.j.b.E:
    com.fasterxml.jackson.core.JsonParser$NumberType _numberType -> a
    java.lang.String _schemaType -> b
    boolean _isInt -> c
    57:63:void <init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser$NumberType,java.lang.String) -> <init>
    85:93:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer -> b.a.a.c.j.b.F:
    208:209:void <init>(java.lang.Class) -> <init>
    214:215:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    223:224:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    205:205:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer -> b.a.a.c.j.b.G:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer instance -> d
    188:189:void <init>() -> <init>
    194:195:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    183:183:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    185:185:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer -> b.a.a.c.j.b.H:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance -> d
    160:161:void <init>() -> <init>
    166:167:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    155:155:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    157:157:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer -> b.a.a.c.j.b.I:
    131:132:void <init>(java.lang.Class) -> <init>
    137:138:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    146:147:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    128:128:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer -> b.a.a.c.j.b.J:
    173:174:void <init>(java.lang.Class) -> <init>
    179:180:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    170:170:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer -> b.a.a.c.j.b.K:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer instance -> d
    108:109:void <init>() -> <init>
    114:115:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    103:103:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    105:105:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer -> b.a.a.c.j.b.L:
    boolean _staticTyping -> a
    com.fasterxml.jackson.databind.JavaType _elementType -> b
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> e
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> f
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> g
    64:70:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    87:93:void <init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    97:97:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    103:103:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    108:112:com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> a
    126:162:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    183:183:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object[]) -> a
    188:188:boolean hasSingleElement(java.lang.Object[]) -> a
    200:212:void serialize(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    217:254:void serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    259:280:void serializeContentsUsing(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> a
    284:306:void serializeTypedContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> c
    336:341:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> a
    347:352:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> a
    22:22:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    22:22:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    22:22:boolean hasSingleElement(java.lang.Object) -> a
    22:22:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
com.fasterxml.jackson.databind.ser.std.RawSerializer -> b.a.a.c.j.b.M:
    26:27:void <init>(java.lang.Class) -> <init>
    31:32:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    39:43:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer -> b.a.a.c.j.b.N:
    java.lang.Object MARKER_FOR_EMPTY -> a
    com.fasterxml.jackson.databind.JavaType _referredType -> b
    com.fasterxml.jackson.databind.BeanProperty _property -> c
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> d
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> e
    com.fasterxml.jackson.databind.util.NameTransformer _unwrapper -> f
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> g
    java.lang.Object _suppressableValue -> h
    boolean _suppressNulls -> i
    100:109:void <init>(com.fasterxml.jackson.databind.type.ReferenceType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    117:126:void <init>(com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer,java.lang.Object,boolean) -> <init>
    130:139:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> a
    com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer) -> a
    com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean) -> a
    boolean _isValuePresent(java.lang.Object) -> c
    java.lang.Object _getReferenced(java.lang.Object) -> b
    java.lang.Object _getReferencedIfPresent(java.lang.Object) -> a
    195:274:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    281:307:boolean _useStatic(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> a
    320:341:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    346:346:boolean isUnwrappingSerializer() -> c
    366:382:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    389:412:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    447:465:com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class) -> a
    476:476:com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> a
    35:35:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer$1 -> b.a.a.c.j.b.O:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> a
    231:231:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.SerializableSerializer -> b.a.a.c.j.b.P:
    com.fasterxml.jackson.databind.ser.std.SerializableSerializer instance -> a
    27:27:void <init>() -> <init>
    31:34:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializable) -> a
    39:40:void serialize(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    45:46:void serializeWithType(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    20:20:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    20:20:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    20:20:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.SqlDateSerializer -> b.a.a.c.j.b.Q:
    23:24:void <init>() -> <init>
    27:28:void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    32:32:com.fasterxml.jackson.databind.ser.std.SqlDateSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> a
    37:37:long _timestamp(java.sql.Date) -> a
    44:57:void serialize(java.sql.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    16:16:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    16:16:com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> b
com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer -> b.a.a.c.j.b.R:
    17:17:void <init>() -> <init>
    22:23:void serialize(java.sql.Time,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    12:12:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase -> b.a.a.c.j.b.S:
    java.lang.Boolean _unwrapSingle -> b
    35:37:void <init>(java.lang.Class) -> <init>
    44:46:void <init>(com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    66:97:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    103:103:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection) -> a
    void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    20:20:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    20:20:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
com.fasterxml.jackson.databind.ser.std.StdArraySerializers -> b.a.a.c.j.b.T:
    java.util.HashMap _arraySerializers -> a
    46:46:com.fasterxml.jackson.databind.JsonSerializer findStandardImpl(java.lang.Class) -> a
    25:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer -> b.a.a.c.j.b.U:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    94:94:void <init>() -> <init>
    98:99:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    103:103:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    112:112:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    128:128:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,boolean[]) -> a
    133:133:boolean hasSingleElement(boolean[]) -> a
    139:148:void serialize(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    154:157:void serializeContents(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    86:86:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    86:86:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    86:86:boolean hasSingleElement(java.lang.Object) -> a
    86:86:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    92:92:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer -> b.a.a.c.j.b.V:
    264:264:void <init>() -> <init>
    268:268:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,char[]) -> a
    276:284:void serialize(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    292:304:void serializeWithType(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    309:312:void _writeArrayContents(com.fasterxml.jackson.core.JsonGenerator,char[]) -> a
    261:261:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    261:261:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    261:261:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer -> b.a.a.c.j.b.W:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    576:576:void <init>() -> <init>
    583:584:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    588:588:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    597:597:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    613:613:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,double[]) -> a
    618:618:boolean hasSingleElement(double[]) -> a
    624:632:void serialize(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    637:640:void serializeContents(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    569:569:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    569:569:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    569:569:boolean hasSingleElement(java.lang.Object) -> a
    569:569:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    574:574:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer -> b.a.a.c.j.b.X:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    501:502:void <init>() -> <init>
    505:506:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    510:510:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    526:526:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,float[]) -> a
    531:531:boolean hasSingleElement(float[]) -> a
    537:546:void serialize(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    552:555:void serializeContents(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    493:493:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    493:493:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    493:493:boolean hasSingleElement(java.lang.Object) -> a
    493:493:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    498:498:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer -> b.a.a.c.j.b.Y:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    338:338:void <init>() -> <init>
    345:346:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    350:350:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    359:359:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
    375:375:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,int[]) -> a
    380:380:boolean hasSingleElement(int[]) -> a
    386:394:void serialize(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    400:403:void serializeContents(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    331:331:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    331:331:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    331:331:boolean hasSingleElement(java.lang.Object) -> a
    331:331:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    336:336:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer -> b.a.a.c.j.b.Z:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    424:424:void <init>() -> <init>
    427:428:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    432:432:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    448:448:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,long[]) -> a
    453:453:boolean hasSingleElement(long[]) -> a
    459:467:void serialize(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    473:476:void serializeContents(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    417:417:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    417:417:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    417:417:boolean hasSingleElement(java.lang.Object) -> a
    417:417:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    422:422:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer -> b.a.a.c.j.b.aa:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    182:182:void <init>() -> <init>
    185:186:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    190:190:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> a
    206:206:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,short[]) -> a
    211:211:boolean hasSingleElement(short[]) -> a
    217:226:void serialize(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    233:236:void serializeContents(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    175:175:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    175:175:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    175:175:boolean hasSingleElement(java.lang.Object) -> a
    175:175:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    180:180:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer -> b.a.a.c.j.b.ab:
    63:64:void <init>(java.lang.Class) -> <init>
    68:69:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    76:76:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> b
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer -> b.a.a.c.j.b.ac:
    com.fasterxml.jackson.databind.util.Converter _converter -> a
    com.fasterxml.jackson.databind.JavaType _delegateType -> b
    com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer -> c
    74:78:void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    87:88:com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> a
    100:104:void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> a
    110:130:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> a
    157:169:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    178:184:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    189:196:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    256:256:java.lang.Object convertValue(java.lang.Object) -> a
    271:271:com.fasterxml.jackson.databind.JsonSerializer _findSerializer(java.lang.Object,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers -> b.a.a.c.j.b.ad:
    27:64:java.util.Collection all() -> a
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer -> b.a.a.c.j.b.ae:
    76:76:void <init>() -> <init>
    80:81:void serialize(java.util.concurrent.atomic.AtomicBoolean,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    73:73:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer -> b.a.a.c.j.b.af:
    97:97:void <init>() -> <init>
    101:102:void serialize(java.util.concurrent.atomic.AtomicInteger,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    94:94:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer -> b.a.a.c.j.b.ag:
    119:119:void <init>() -> <init>
    123:124:void serialize(java.util.concurrent.atomic.AtomicLong,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    116:116:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.StdKeySerializer -> b.a.a.c.j.b.ah:
    18:18:void <init>() -> <init>
    23:24:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.StdKeySerializers -> b.a.a.c.j.b.ai:
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER -> a
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER -> b
    38:78:com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,boolean) -> a
    91:107:com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class) -> a
    18:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default -> b.a.a.c.j.b.aj:
    int _typeId -> a
    145:147:void <init>(int,java.lang.Class) -> <init>
    151:192:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic -> b.a.a.c.j.b.ak:
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> a
    205:207:void <init>() -> <init>
    219:226:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    237:250:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer -> b.a.a.c.j.b.al:
    com.fasterxml.jackson.databind.util.EnumValues _values -> a
    277:279:void <init>(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues) -> <init>
    284:284:com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer construct(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues) -> a
    291:301:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer -> b.a.a.c.j.b.am:
    259:259:void <init>() -> <init>
    263:264:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.StdScalarSerializer -> b.a.a.c.j.b.an:
    20:21:void <init>(java.lang.Class) -> <init>
    29:30:void <init>(java.lang.Class,boolean) -> <init>
    44:48:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
com.fasterxml.jackson.databind.ser.std.StdSerializer -> b.a.a.c.j.b.ao:
    java.lang.Object KEY_CONTENT_CONVERTER_LOCK -> a
    java.lang.Class _handledType -> p
    58:60:void <init>(java.lang.Class) -> <init>
    63:65:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    72:74:void <init>(java.lang.Class,boolean) -> <init>
    80:82:void <init>(com.fasterxml.jackson.databind.ser.std.StdSerializer) -> <init>
    91:91:java.lang.Class handledType() -> a
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    301:316:void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String) -> a
    323:338:void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int) -> a
    364:383:com.fasterxml.jackson.databind.JsonSerializer findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> a
    394:410:com.fasterxml.jackson.databind.JsonSerializer findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> b
    423:430:com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object) -> a
    445:449:com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> a
    464:468:java.lang.Boolean findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Feature) -> a
    493:504:com.fasterxml.jackson.databind.JsonSerializer findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> b
    520:520:boolean isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> a
    527:527:boolean _neitherNull(java.lang.Object,java.lang.Object) -> a
    534:534:boolean _nonEmpty(java.util.Collection) -> b
    44:44:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StringSerializer -> b.a.a.c.j.b.ap:
    31:31:void <init>() -> <init>
    35:36:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    41:42:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    49:50:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer -> b.a.a.c.j.b.aq:
    14:14:void <init>() -> <init>
    18:19:void serialize(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    26:30:void serializeWithType(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    11:11:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    11:11:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
com.fasterxml.jackson.databind.ser.std.ToStringSerializer -> b.a.a.c.j.b.ar:
    com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance -> a
    39:39:void <init>() -> <init>
    47:48:void <init>(java.lang.Class) -> <init>
    52:52:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    59:60:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    78:82:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    29:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer -> b.a.a.c.j.b.as:
    28:28:void <init>() -> <init>
    34:35:void serialize(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    53:57:void serializeWithType(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    23:23:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    23:23:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
com.fasterxml.jackson.databind.ser.std.UUIDSerializer -> b.a.a.c.j.b.at:
    char[] HEX_CHARS -> a
    23:23:void <init>() -> <init>
    29:33:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.UUID) -> a
    41:73:void serialize(java.util.UUID,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    77:79:void _appendInt(int,char[],int) -> a
    83:88:void _appendShort(int,char[],int) -> b
    92:99:byte[] _asBytes(java.util.UUID) -> a
    104:108:void _appendInt(int,byte[],int) -> a
    17:17:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    17:17:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    21:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.ArrayType -> b.a.a.c.k.a:
    com.fasterxml.jackson.databind.JavaType _componentType -> f
    java.lang.Object _emptyArray -> g
    33:38:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> <init>
    41:41:com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings) -> a
    47:48:com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Object,java.lang.Object) -> a
    53:54:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> b
    61:64:com.fasterxml.jackson.databind.type.ArrayType withTypeHandler(java.lang.Object) -> e
    70:73:com.fasterxml.jackson.databind.type.ArrayType withContentTypeHandler(java.lang.Object) -> f
    79:82:com.fasterxml.jackson.databind.type.ArrayType withValueHandler(java.lang.Object) -> g
    87:90:com.fasterxml.jackson.databind.type.ArrayType withContentValueHandler(java.lang.Object) -> h
    96:99:com.fasterxml.jackson.databind.type.ArrayType withStaticTyping() -> F
    124:124:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    138:138:boolean isArrayType() -> j
    146:146:boolean isAbstract() -> g
    154:154:boolean isConcrete() -> h
    159:159:boolean hasGenericTypes() -> t
    169:169:boolean isContainerType() -> o
    172:172:com.fasterxml.jackson.databind.JavaType getContentType() -> v
    186:186:boolean hasHandlers() -> D
    191:192:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> a
    210:210:java.lang.String toString() -> toString
    216:221:boolean equals(java.lang.Object) -> equals
    12:12:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> d
    12:12:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> d
    12:12:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> c
    12:12:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> b
    12:12:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> a
com.fasterxml.jackson.databind.type.ClassKey -> b.a.a.c.k.b:
    java.lang.String _className -> a
    java.lang.Class _class -> b
    int _hashCode -> c
    36:40:void <init>() -> <init>
    43:47:void <init>(java.lang.Class) -> <init>
    51:54:void reset(java.lang.Class) -> a
    66:66:int compareTo(com.fasterxml.jackson.databind.type.ClassKey) -> a
    78:90:boolean equals(java.lang.Object) -> equals
    93:93:int hashCode() -> hashCode
    95:95:java.lang.String toString() -> toString
    19:19:int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.databind.type.ClassStack -> b.a.a.c.k.c:
    com.fasterxml.jackson.databind.type.ClassStack _parent -> a
    java.lang.Class _current -> b
    java.util.ArrayList _selfRefs -> c
    21:22:void <init>(java.lang.Class) -> <init>
    24:27:void <init>(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class) -> <init>
    33:33:com.fasterxml.jackson.databind.type.ClassStack child(java.lang.Class) -> a
    42:46:void addSelfReference(com.fasterxml.jackson.databind.type.ResolvedRecursiveType) -> a
    55:60:void resolveSelfReferences(com.fasterxml.jackson.databind.JavaType) -> a
    64:70:com.fasterxml.jackson.databind.type.ClassStack find(java.lang.Class) -> b
    75:84:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.CollectionLikeType -> b.a.a.c.k.d:
    com.fasterxml.jackson.databind.JavaType _elementType -> f
    34:37:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    102:105:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> b
    111:111:com.fasterxml.jackson.databind.type.CollectionLikeType withTypeHandler(java.lang.Object) -> e
    118:119:com.fasterxml.jackson.databind.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> f
    125:125:com.fasterxml.jackson.databind.type.CollectionLikeType withValueHandler(java.lang.Object) -> g
    131:132:com.fasterxml.jackson.databind.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> h
    138:146:com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> a
    151:155:com.fasterxml.jackson.databind.type.CollectionLikeType withStaticTyping() -> F
    162:162:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    174:174:boolean isContainerType() -> o
    177:177:boolean isCollectionLikeType() -> p
    180:180:com.fasterxml.jackson.databind.JavaType getContentType() -> v
    194:194:boolean hasHandlers() -> D
    204:208:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> a
    213:220:java.lang.String buildCanonicalName() -> G
    236:236:boolean isTrueCollectionType() -> H
    248:253:boolean equals(java.lang.Object) -> equals
    259:259:java.lang.String toString() -> toString
    15:15:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> d
    15:15:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> d
    15:15:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> c
    15:15:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> b
    15:15:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> a
com.fasterxml.jackson.databind.type.CollectionType -> b.a.a.c.k.e:
    25:26:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    40:40:com.fasterxml.jackson.databind.type.CollectionType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType) -> a
    73:76:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> b
    82:82:com.fasterxml.jackson.databind.type.CollectionType withTypeHandler(java.lang.Object) -> i
    89:90:com.fasterxml.jackson.databind.type.CollectionType withContentTypeHandler(java.lang.Object) -> j
    96:96:com.fasterxml.jackson.databind.type.CollectionType withValueHandler(java.lang.Object) -> k
    102:103:com.fasterxml.jackson.databind.type.CollectionType withContentValueHandler(java.lang.Object) -> l
    109:113:com.fasterxml.jackson.databind.type.CollectionType withStaticTyping() -> I
    120:120:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    134:134:java.lang.String toString() -> toString
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withStaticTyping() -> F
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> h
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withValueHandler(java.lang.Object) -> g
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> f
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withTypeHandler(java.lang.Object) -> e
    10:10:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> d
    10:10:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> d
    10:10:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> c
    10:10:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> b
    10:10:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> a
com.fasterxml.jackson.databind.type.MapLikeType -> b.a.a.c.k.f:
    com.fasterxml.jackson.databind.JavaType _keyType -> f
    com.fasterxml.jackson.databind.JavaType _valueType -> g
    39:43:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    102:105:com.fasterxml.jackson.databind.type.MapLikeType withKeyType(com.fasterxml.jackson.databind.JavaType) -> c
    112:115:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> b
    122:122:com.fasterxml.jackson.databind.type.MapLikeType withTypeHandler(java.lang.Object) -> e
    129:130:com.fasterxml.jackson.databind.type.MapLikeType withContentTypeHandler(java.lang.Object) -> f
    136:136:com.fasterxml.jackson.databind.type.MapLikeType withValueHandler(java.lang.Object) -> g
    143:144:com.fasterxml.jackson.databind.type.MapLikeType withContentValueHandler(java.lang.Object) -> h
    150:168:com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> a
    173:177:com.fasterxml.jackson.databind.type.MapLikeType withStaticTyping() -> F
    184:184:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    190:199:java.lang.String buildCanonicalName() -> G
    210:210:boolean isContainerType() -> o
    215:215:boolean isMapLikeType() -> q
    220:220:com.fasterxml.jackson.databind.JavaType getKeyType() -> u
    225:225:com.fasterxml.jackson.databind.JavaType getContentType() -> v
    240:241:boolean hasHandlers() -> D
    251:256:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> a
    272:273:com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object) -> i
    283:283:boolean isTrueMapType() -> H
    294:295:java.lang.String toString() -> toString
    300:306:boolean equals(java.lang.Object) -> equals
    16:16:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> d
    16:16:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> d
    16:16:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> c
    16:16:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> b
    16:16:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> a
com.fasterxml.jackson.databind.type.MapType -> b.a.a.c.k.g:
    23:25:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    40:40:com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> a
    70:70:com.fasterxml.jackson.databind.type.MapType withTypeHandler(java.lang.Object) -> j
    77:78:com.fasterxml.jackson.databind.type.MapType withContentTypeHandler(java.lang.Object) -> k
    84:84:com.fasterxml.jackson.databind.type.MapType withValueHandler(java.lang.Object) -> l
    90:91:com.fasterxml.jackson.databind.type.MapType withContentValueHandler(java.lang.Object) -> m
    97:101:com.fasterxml.jackson.databind.type.MapType withStaticTyping() -> I
    107:110:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> b
    116:119:com.fasterxml.jackson.databind.type.MapType withKeyType(com.fasterxml.jackson.databind.JavaType) -> d
    126:126:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    147:148:com.fasterxml.jackson.databind.type.MapType withKeyValueHandler(java.lang.Object) -> n
    161:161:java.lang.String toString() -> toString
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object) -> i
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withStaticTyping() -> F
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withContentValueHandler(java.lang.Object) -> h
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withValueHandler(java.lang.Object) -> g
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withContentTypeHandler(java.lang.Object) -> f
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withTypeHandler(java.lang.Object) -> e
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withKeyType(com.fasterxml.jackson.databind.JavaType) -> c
    10:10:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> d
    10:10:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> d
    10:10:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> c
    10:10:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> b
    10:10:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> a
com.fasterxml.jackson.databind.type.PlaceholderForType -> b.a.a.c.k.h:
    int _ordinal -> f
    com.fasterxml.jackson.databind.JavaType _actualType -> g
    25:29:void <init>(int) -> <init>
    31:31:com.fasterxml.jackson.databind.JavaType actualType() -> F
    32:32:void actualType(com.fasterxml.jackson.databind.JavaType) -> c
    37:37:java.lang.String buildCanonicalName() -> G
    42:42:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> a
    47:48:java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> b
    53:53:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> a
    58:58:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> b
    63:63:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> c
    68:68:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> d
    73:73:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> b
    78:78:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> d
    83:83:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    94:94:boolean isContainerType() -> o
    99:99:java.lang.String toString() -> toString
    104:104:boolean equals(java.lang.Object) -> equals
    108:108:java.lang.Object _unsupported() -> H
com.fasterxml.jackson.databind.type.ReferenceType -> b.a.a.c.k.i:
    com.fasterxml.jackson.databind.JavaType _referencedType -> f
    com.fasterxml.jackson.databind.JavaType _anchorType -> g
    34:38:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    82:82:com.fasterxml.jackson.databind.type.ReferenceType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType) -> a
    95:98:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> b
    105:108:com.fasterxml.jackson.databind.type.ReferenceType withTypeHandler(java.lang.Object) -> e
    115:119:com.fasterxml.jackson.databind.type.ReferenceType withContentTypeHandler(java.lang.Object) -> f
    125:128:com.fasterxml.jackson.databind.type.ReferenceType withValueHandler(java.lang.Object) -> g
    135:139:com.fasterxml.jackson.databind.type.ReferenceType withContentValueHandler(java.lang.Object) -> h
    146:150:com.fasterxml.jackson.databind.type.ReferenceType withStaticTyping() -> F
    157:157:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    165:169:java.lang.String buildCanonicalName() -> G
    196:196:com.fasterxml.jackson.databind.JavaType getContentType() -> v
    201:201:com.fasterxml.jackson.databind.JavaType getReferencedType() -> w
    206:206:boolean hasContentType() -> f
    211:211:boolean isReferenceType() -> a
    222:226:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> a
    256:263:java.lang.String toString() -> toString
    269:278:boolean equals(java.lang.Object) -> equals
    13:13:com.fasterxml.jackson.databind.type.SimpleType withStaticTyping() -> H
    13:13:com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object) -> i
    13:13:com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object) -> j
    13:13:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> b
    13:13:com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object) -> k
    13:13:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> d
    13:13:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> d
    13:13:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> c
    13:13:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> a
    13:13:com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> b
com.fasterxml.jackson.databind.type.ResolvedRecursiveType -> b.a.a.c.k.j:
    com.fasterxml.jackson.databind.JavaType _referencedType -> f
    17:18:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> <init>
    23:27:void setReference(com.fasterxml.jackson.databind.JavaType) -> c
    31:34:com.fasterxml.jackson.databind.JavaType getSuperClass() -> z
    37:37:com.fasterxml.jackson.databind.JavaType getSelfReferencedType() -> F
    41:41:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> a
    51:51:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> b
    56:56:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> a
    61:61:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> b
    66:66:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> c
    71:71:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> d
    76:76:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> d
    88:88:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    93:93:boolean isContainerType() -> o
    98:107:java.lang.String toString() -> toString
    112:130:boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.type.SimpleType -> b.a.a.c.k.k:
    33:34:void <init>(java.lang.Class) -> <init>
    38:39:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> <init>
    55:57:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean) -> <init>
    68:70:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean) -> <init>
    82:82:com.fasterxml.jackson.databind.type.SimpleType constructUnsafe(java.lang.Class) -> e
    171:171:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> b
    176:179:com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object) -> k
    185:185:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> b
    190:193:com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object) -> j
    199:199:com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object) -> i
    204:204:com.fasterxml.jackson.databind.type.SimpleType withStaticTyping() -> H
    212:212:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    218:233:java.lang.String buildCanonicalName() -> G
    243:243:boolean isContainerType() -> o
    246:246:boolean hasContentType() -> f
    256:267:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> a
    304:306:java.lang.String toString() -> toString
    312:324:boolean equals(java.lang.Object) -> equals
    13:13:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> d
    13:13:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> d
    13:13:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> c
    13:13:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> a
com.fasterxml.jackson.databind.type.TypeBase -> b.a.a.c.k.l:
    com.fasterxml.jackson.databind.type.TypeBindings NO_BINDINGS -> f
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> g
    com.fasterxml.jackson.databind.JavaType _superClass -> h
    com.fasterxml.jackson.databind.JavaType[] _superInterfaces -> i
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> j
    java.lang.String _canonicalName -> k
    47:51:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean) -> <init>
    68:72:java.lang.String toCanonical() -> c
    76:76:java.lang.String buildCanonicalName() -> G
    87:87:com.fasterxml.jackson.databind.type.TypeBindings getBindings() -> y
    92:92:int containedTypeCount() -> x
    97:97:com.fasterxml.jackson.databind.JavaType containedType(int) -> a
    108:108:com.fasterxml.jackson.databind.JavaType getSuperClass() -> z
    113:122:java.util.List getInterfaces() -> A
    128:147:com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class) -> d
    171:175:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    181:182:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    197:238:java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean) -> a
    19:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeBindings -> b.a.a.c.k.m:
    java.lang.String[] NO_STRINGS -> a
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> b
    com.fasterxml.jackson.databind.type.TypeBindings EMPTY -> c
    java.lang.String[] _names -> d
    com.fasterxml.jackson.databind.JavaType[] _types -> e
    java.lang.String[] _unboundVariables -> f
    int _hashCode -> g
    53:65:void <init>(java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.String[]) -> <init>
    68:68:com.fasterxml.jackson.databind.type.TypeBindings emptyBindings() -> a
    85:87:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,java.util.List) -> a
    92:117:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> a
    123:129:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> a
    136:142:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> a
    153:162:com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> b
    173:191:com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> b
    201:205:com.fasterxml.jackson.databind.type.TypeBindings withUnboundVariable(java.lang.String) -> a
    219:242:com.fasterxml.jackson.databind.JavaType findBoundType(java.lang.String) -> b
    246:246:boolean isEmpty() -> b
    253:253:int size() -> c
    266:269:com.fasterxml.jackson.databind.JavaType getBoundType(int) -> a
    277:280:java.util.List getTypeParameters() -> d
    287:294:boolean hasUnbound(java.lang.String) -> c
    306:306:java.lang.Object asKey(java.lang.Class) -> a
    317:331:java.lang.String toString() -> toString
    334:334:int hashCode() -> hashCode
    338:353:boolean equals(java.lang.Object) -> equals
    363:363:com.fasterxml.jackson.databind.JavaType[] typeParameterArray() -> e
    17:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeBindings$AsKey -> b.a.a.c.k.n:
    java.lang.Class _raw -> a
    com.fasterxml.jackson.databind.JavaType[] _params -> b
    int _hash -> c
    439:443:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType[],int) -> <init>
    446:446:int hashCode() -> hashCode
    450:468:boolean equals(java.lang.Object) -> equals
    473:473:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash -> b.a.a.c.k.o:
    java.lang.reflect.TypeVariable[] VARS_ABSTRACT_LIST -> a
    java.lang.reflect.TypeVariable[] VARS_COLLECTION -> b
    java.lang.reflect.TypeVariable[] VARS_ITERABLE -> c
    java.lang.reflect.TypeVariable[] VARS_LIST -> d
    java.lang.reflect.TypeVariable[] VARS_ARRAY_LIST -> e
    java.lang.reflect.TypeVariable[] VARS_MAP -> f
    java.lang.reflect.TypeVariable[] VARS_HASH_MAP -> g
    java.lang.reflect.TypeVariable[] VARS_LINKED_HASH_MAP -> h
    396:411:java.lang.reflect.TypeVariable[] paramsFor1(java.lang.Class) -> a
    416:425:java.lang.reflect.TypeVariable[] paramsFor2(java.lang.Class) -> b
    384:392:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeFactory -> b.a.a.c.k.p:
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> o
    com.fasterxml.jackson.databind.type.TypeFactory instance -> a
    com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS -> b
    java.lang.Class CLS_STRING -> p
    java.lang.Class CLS_OBJECT -> q
    java.lang.Class CLS_COMPARABLE -> r
    java.lang.Class CLS_CLASS -> s
    java.lang.Class CLS_ENUM -> t
    java.lang.Class CLS_BOOL -> u
    java.lang.Class CLS_INT -> v
    java.lang.Class CLS_LONG -> w
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL -> c
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT -> d
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG -> e
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING -> f
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT -> g
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_COMPARABLE -> h
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_ENUM -> i
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_CLASS -> j
    com.fasterxml.jackson.databind.util.LRUMap _typeCache -> k
    com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers -> l
    com.fasterxml.jackson.databind.type.TypeParser _parser -> m
    java.lang.ClassLoader _classLoader -> n
    145:146:void <init>() -> <init>
    151:159:void <init>(com.fasterxml.jackson.databind.util.LRUMap) -> <init>
    211:211:com.fasterxml.jackson.databind.type.TypeFactory defaultInstance() -> a
    228:228:java.lang.ClassLoader getClassLoader() -> b
    243:243:com.fasterxml.jackson.databind.JavaType unknownType() -> c
    274:301:java.lang.Class findClass(java.lang.String) -> a
    306:306:java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader) -> a
    310:310:java.lang.Class classForName(java.lang.String) -> b
    315:324:java.lang.Class _findPrimitive(java.lang.String) -> c
    343:409:com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> a
    414:446:com.fasterxml.jackson.databind.type.TypeBindings _bindingsForSubtype(com.fasterxml.jackson.databind.JavaType,int,java.lang.Class) -> a
    452:462:java.lang.String _resolveTypePlaceholders(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> a
    468:487:boolean _verifyAndResolvePlaceholders(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> b
    503:519:com.fasterxml.jackson.databind.JavaType constructGeneralizedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> b
    534:534:com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String) -> d
    548:552:com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> c
    608:608:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> a
    612:612:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> a
    711:712:com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class) -> a
    724:737:com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> a
    775:781:com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class) -> a
    791:810:com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> a
    889:889:com.fasterxml.jackson.databind.JavaType uncheckedSimpleType(java.lang.Class) -> a
    1063:1080:com.fasterxml.jackson.databind.JavaType _mapType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> c
    1086:1096:com.fasterxml.jackson.databind.JavaType _collectionType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> d
    1102:1112:com.fasterxml.jackson.databind.JavaType _referenceType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> e
    1126:1132:com.fasterxml.jackson.databind.JavaType _constructSimple(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    1145:1145:com.fasterxml.jackson.databind.JavaType _newSimpleType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> b
    1154:1154:com.fasterxml.jackson.databind.JavaType _unknownType() -> d
    1165:1173:com.fasterxml.jackson.databind.JavaType _findWellKnownSimple(java.lang.Class) -> b
    1192:1234:com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> a
    1244:1322:com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> a
    1327:1331:com.fasterxml.jackson.databind.JavaType _resolveSuperClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> b
    1336:1346:com.fasterxml.jackson.databind.JavaType[] _resolveSuperInterfaces(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> c
    1357:1376:com.fasterxml.jackson.databind.JavaType _fromWellKnownClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> a
    1384:1392:com.fasterxml.jackson.databind.JavaType _fromWellKnownInterface(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> b
    1403:1433:com.fasterxml.jackson.databind.JavaType _fromParamType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.TypeBindings) -> a
    1438:1439:com.fasterxml.jackson.databind.JavaType _fromArrayType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.GenericArrayType,com.fasterxml.jackson.databind.type.TypeBindings) -> a
    1445:1459:com.fasterxml.jackson.databind.JavaType _fromVariable(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.TypeVariable,com.fasterxml.jackson.databind.type.TypeBindings) -> a
    1469:1469:com.fasterxml.jackson.databind.JavaType _fromWildcard(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.WildcardType,com.fasterxml.jackson.databind.type.TypeBindings) -> a
    39:110:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeModifier -> b.a.a.c.k.q:
    com.fasterxml.jackson.databind.JavaType modifyType(com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.type.TypeFactory) -> a
com.fasterxml.jackson.databind.type.TypeParser -> b.a.a.c.k.r:
    com.fasterxml.jackson.databind.type.TypeFactory _factory -> a
    19:21:void <init>(com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    32:38:com.fasterxml.jackson.databind.JavaType parse(java.lang.String) -> a
    44:60:com.fasterxml.jackson.databind.JavaType parseType(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> a
    66:76:java.util.List parseTypes(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> b
    82:85:java.lang.Class findClass(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> a
    91:92:java.lang.IllegalArgumentException _problem(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer,java.lang.String) -> a
com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer -> b.a.a.c.k.s:
    java.lang.String _input -> a
    int _index -> b
    java.lang.String _pushbackToken -> c
    104:106:void <init>(java.lang.String) -> <init>
    110:110:boolean hasMoreTokens() -> hasMoreTokens
    116:124:java.lang.String nextToken() -> nextToken
    128:130:void pushBack(java.lang.String) -> a
    132:132:java.lang.String getAllInput() -> a
    134:134:java.lang.String getRemainingInput() -> b
com.fasterxml.jackson.databind.util.AccessPattern -> b.a.a.c.l.a:
    com.fasterxml.jackson.databind.util.AccessPattern ALWAYS_NULL -> a
    com.fasterxml.jackson.databind.util.AccessPattern CONSTANT -> b
    com.fasterxml.jackson.databind.util.AccessPattern DYNAMIC -> c
    com.fasterxml.jackson.databind.util.AccessPattern[] $VALUES -> d
    9:9:com.fasterxml.jackson.databind.util.AccessPattern[] values() -> values
    9:9:com.fasterxml.jackson.databind.util.AccessPattern valueOf(java.lang.String) -> valueOf
    9:9:void <init>(java.lang.String,int) -> <init>
    9:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.Annotations -> b.a.a.c.l.b:
    java.lang.annotation.Annotation get(java.lang.Class) -> a
    boolean has(java.lang.Class) -> b
    boolean hasOneOf(java.lang.Class[]) -> a
    int size() -> a
com.fasterxml.jackson.databind.util.ArrayBuilders -> b.a.a.c.l.c:
    com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder _booleanBuilder -> a
    com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder _byteBuilder -> b
    com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder _shortBuilder -> c
    com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder _intBuilder -> d
    com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder _longBuilder -> e
    com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder _floatBuilder -> f
    com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder _doubleBuilder -> g
    17:29:void <init>() -> <init>
    33:36:com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder getBooleanBuilder() -> a
    41:44:com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder getByteBuilder() -> b
    48:51:com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder getShortBuilder() -> c
    55:58:com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder getIntBuilder() -> d
    62:65:com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder getLongBuilder() -> e
    70:73:com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder getFloatBuilder() -> f
    77:80:com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder getDoubleBuilder() -> g
    159:161:java.lang.Object getArrayComparator(java.lang.Object) -> a
    209:237:java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object) -> a
com.fasterxml.jackson.databind.util.ArrayBuilders$1 -> b.a.a.c.l.d:
    java.lang.Class val$defaultValueType -> a
    int val$length -> b
    java.lang.Object val$defaultValue -> c
    161:161:void <init>(java.lang.Class,int,java.lang.Object) -> <init>
    164:180:boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder -> b.a.a.c.l.e:
    92:92:void <init>() -> <init>
    94:94:boolean[] _constructArray(int) -> a
    89:89:java.lang.Object _constructArray(int) -> b
com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder -> b.a.a.c.l.f:
    100:100:void <init>() -> <init>
    102:102:byte[] _constructArray(int) -> a
    97:97:java.lang.Object _constructArray(int) -> b
com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder -> b.a.a.c.l.g:
    136:136:void <init>() -> <init>
    138:138:double[] _constructArray(int) -> a
    133:133:java.lang.Object _constructArray(int) -> b
com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder -> b.a.a.c.l.h:
    129:129:void <init>() -> <init>
    131:131:float[] _constructArray(int) -> a
    126:126:java.lang.Object _constructArray(int) -> b
com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder -> b.a.a.c.l.i:
    114:114:void <init>() -> <init>
    116:116:int[] _constructArray(int) -> a
    111:111:java.lang.Object _constructArray(int) -> b
com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder -> b.a.a.c.l.j:
    121:121:void <init>() -> <init>
    123:123:long[] _constructArray(int) -> a
    118:118:java.lang.Object _constructArray(int) -> b
com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder -> b.a.a.c.l.k:
    107:107:void <init>() -> <init>
    109:109:short[] _constructArray(int) -> a
    104:104:java.lang.Object _constructArray(int) -> b
com.fasterxml.jackson.databind.util.ArrayIterator -> b.a.a.c.l.l:
    java.lang.Object[] _a -> a
    int _index -> b
    16:19:void <init>(java.lang.Object[]) -> <init>
    22:22:boolean hasNext() -> hasNext
    26:29:java.lang.Object next() -> next
    32:32:void remove() -> remove
    33:33:java.util.Iterator iterator() -> iterator
com.fasterxml.jackson.databind.util.BeanUtil -> b.a.a.c.l.m:
    27:32:java.lang.String okNameForGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean) -> a
    41:63:java.lang.String okNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> a
    72:80:java.lang.String okNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> b
    102:108:java.lang.String okNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> c
    134:158:java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType) -> a
    177:197:boolean isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> a
    216:217:boolean isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> b
    235:259:java.lang.String legacyManglePropertyName(java.lang.String,int) -> a
    267:288:java.lang.String stdManglePropertyName(java.lang.String,int) -> b
com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream -> b.a.a.c.l.n:
    java.nio.ByteBuffer _b -> a
    14:14:void <init>(java.nio.ByteBuffer) -> <init>
    16:16:int available() -> available
    19:19:int read() -> read
    23:26:int read(byte[],int,int) -> read
com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream -> b.a.a.c.l.o:
    java.nio.ByteBuffer _b -> a
    13:13:void <init>(java.nio.ByteBuffer) -> <init>
    15:15:void write(int) -> write
    16:16:void write(byte[],int,int) -> write
com.fasterxml.jackson.databind.util.ClassUtil -> b.a.a.c.l.p:
    java.lang.Class CLS_OBJECT -> a
    java.lang.annotation.Annotation[] NO_ANNOTATIONS -> b
    com.fasterxml.jackson.databind.util.ClassUtil$Ctor[] NO_CTORS -> c
    java.util.Iterator EMPTY_ITERATOR -> d
    35:35:java.util.Iterator emptyIterator() -> a
    60:65:java.util.List findSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean) -> a
    72:77:java.util.List findRawSuperTypes(java.lang.Class,java.lang.Class,boolean) -> a
    89:101:java.util.List findSuperClasses(java.lang.Class,java.lang.Class,boolean) -> b
    118:133:void _addSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.Collection,boolean) -> a
    136:147:void _addRawSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean) -> a
    162:176:java.lang.String canBeABeanType(java.lang.Class) -> a
    187:205:java.lang.String isLocalType(java.lang.Class,boolean) -> a
    216:223:java.lang.Class getOuterClass(java.lang.Class) -> b
    241:248:boolean isProxyType(java.lang.Class) -> c
    257:258:boolean isConcrete(java.lang.Class) -> d
    276:276:boolean isBogusClass(java.lang.Class) -> e
    281:282:boolean isNonStaticInnerClass(java.lang.Class) -> f
    289:289:boolean isObjectOrPrimitive(java.lang.Class) -> g
    298:298:boolean hasClass(java.lang.Object,java.lang.Class) -> a
    307:312:void verifyMustOverride(java.lang.Class,java.lang.Object,java.lang.String) -> a
    356:359:java.lang.Throwable throwIfError(java.lang.Throwable) -> a
    369:372:java.lang.Throwable throwIfRTE(java.lang.Throwable) -> b
    382:385:java.lang.Throwable throwIfIOE(java.lang.Throwable) -> c
    400:403:java.lang.Throwable getRootCause(java.lang.Throwable) -> d
    414:414:java.lang.Throwable throwRootCauseIfIOE(java.lang.Throwable) -> e
    422:423:void throwAsIAE(java.lang.Throwable) -> f
    432:434:void throwAsIAE(java.lang.Throwable,java.lang.String) -> a
    442:447:java.lang.Object throwAsMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException) -> a
    457:458:void unwrapAndThrowAsIAE(java.lang.Throwable) -> g
    467:468:void unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String) -> b
    485:493:void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception) -> a
    509:526:void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception) -> a
    551:559:java.lang.Object createInstance(java.lang.Class,boolean) -> b
    567:582:java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean) -> c
    595:598:java.lang.Class classOf(java.lang.Object) -> a
    605:608:java.lang.Class rawClass(com.fasterxml.jackson.databind.JavaType) -> a
    615:615:java.lang.Object nonNull(java.lang.Object,java.lang.Object) -> a
    622:625:java.lang.String nullOrToString(java.lang.Object) -> b
    632:635:java.lang.String nonNullString(java.lang.String) -> a
    645:648:java.lang.String quotedOr(java.lang.Object,java.lang.String) -> a
    680:683:java.lang.String classNameOf(java.lang.Object) -> c
    693:709:java.lang.String nameOf(java.lang.Class) -> h
    719:722:java.lang.String nameOf(com.fasterxml.jackson.databind.util.Named) -> a
    731:734:java.lang.String backticked(java.lang.String) -> b
    749:773:java.lang.Object defaultValue(java.lang.Class) -> i
    782:806:java.lang.Class wrapperType(java.lang.Class) -> j
    817:845:java.lang.Class primitiveType(java.lang.Class) -> k
    881:901:void checkAndFixAccess(java.lang.reflect.Member,boolean) -> a
    918:922:java.lang.Class findEnumType(java.util.EnumSet) -> a
    933:937:java.lang.Class findEnumType(java.util.EnumMap) -> a
    950:954:java.lang.Class findEnumType(java.lang.Enum) -> a
    967:970:java.lang.Class findEnumType(java.lang.Class) -> l
    986:1000:java.lang.Enum findFirstAnnotatedEnumValue(java.lang.Class,java.lang.Class) -> a
    1020:1020:boolean isJacksonStdImpl(java.lang.Object) -> d
    1024:1024:boolean isJacksonStdImpl(java.lang.Class) -> m
    1040:1041:java.lang.String getPackageName(java.lang.Class) -> n
    1048:1048:boolean hasEnclosingMethod(java.lang.Class) -> o
    1055:1055:java.lang.reflect.Field[] getDeclaredFields(java.lang.Class) -> p
    1062:1062:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> q
    1069:1072:java.lang.annotation.Annotation[] findClassAnnotations(java.lang.Class) -> r
    1085:1101:java.lang.reflect.Method[] getClassMethods(java.lang.Class) -> s
    1111:1120:com.fasterxml.jackson.databind.util.ClassUtil$Ctor[] getConstructors(java.lang.Class) -> t
    1137:1137:java.lang.reflect.Type getGenericSuperclass(java.lang.Class) -> u
    1144:1144:java.lang.reflect.Type[] getGenericInterfaces(java.lang.Class) -> v
    1152:1152:java.lang.Class getEnclosingClass(java.lang.Class) -> w
    1156:1156:java.lang.Class[] _interfaces(java.lang.Class) -> x
    17:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ClassUtil$Ctor -> b.a.a.c.l.q:
    java.lang.reflect.Constructor _ctor -> a
    java.lang.annotation.Annotation[][] _paramAnnotations -> b
    int _paramCount -> c
    1260:1264:void <init>(java.lang.reflect.Constructor) -> <init>
    1267:1267:java.lang.reflect.Constructor getConstructor() -> a
    1271:1276:int getParamCount() -> b
    1280:1280:java.lang.Class getDeclaringClass() -> c
    1293:1298:java.lang.annotation.Annotation[][] getParameterAnnotations() -> d
com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator -> b.a.a.c.l.r:
    com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator instance -> a
    java.lang.reflect.Field enumSetTypeField -> b
    java.lang.reflect.Field enumMapTypeField -> c
    1176:1181:void <init>() -> <init>
    1186:1189:java.lang.Class enumTypeFor(java.util.EnumSet) -> a
    1195:1198:java.lang.Class enumTypeFor(java.util.EnumMap) -> a
    1204:1206:java.lang.Object get(java.lang.Object,java.lang.reflect.Field) -> a
    1212:1236:java.lang.reflect.Field locateField(java.lang.Class,java.lang.String,java.lang.Class) -> a
    1171:1171:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.CompactStringObjectMap -> b.a.a.c.l.s:
    com.fasterxml.jackson.databind.util.CompactStringObjectMap EMPTY -> a
    int _hashMask -> b
    int _spillCount -> c
    java.lang.Object[] _hashArea -> d
    33:37:void <init>(int,int,java.lang.Object[]) -> <init>
    41:75:com.fasterxml.jackson.databind.util.CompactStringObjectMap construct(java.util.Map) -> a
    80:91:int findSize(int) -> a
    95:101:java.lang.Object find(java.lang.String) -> a
    106:124:java.lang.Object _find2(java.lang.String,int,java.lang.Object) -> a
    131:140:java.lang.Object findCaseInsensitive(java.lang.String) -> b
    144:152:java.util.List keys() -> a
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ConstantValueInstantiator -> b.a.a.c.l.t:
    java.lang.Object _value -> a
    19:21:void <init>(java.lang.Object) -> <init>
    25:25:java.lang.Class getValueClass() -> a
    29:29:boolean canInstantiate() -> c
    32:32:boolean canCreateUsingDefault() -> i
    36:36:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.util.Converter -> b.a.a.c.l.u:
    java.lang.Object convert(java.lang.Object) -> a
    com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory) -> a
    com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory) -> b
com.fasterxml.jackson.databind.util.Converter$None -> b.a.a.c.l.v:
    65:65:void <init>() -> <init>
com.fasterxml.jackson.databind.util.EnumResolver -> b.a.a.c.l.w:
    java.lang.Class _enumClass -> a
    java.lang.Enum[] _enums -> b
    java.util.HashMap _enumsById -> c
    java.lang.Enum _defaultValue -> d
    25:30:void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum) -> <init>
    38:54:com.fasterxml.jackson.databind.util.EnumResolver constructFor(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> a
    74:82:com.fasterxml.jackson.databind.util.EnumResolver constructUsingToString(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> b
    92:107:com.fasterxml.jackson.databind.util.EnumResolver constructUsingMethod(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.AnnotationIntrospector) -> a
    120:121:com.fasterxml.jackson.databind.util.EnumResolver constructUnsafe(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> c
    135:136:com.fasterxml.jackson.databind.util.EnumResolver constructUnsafeUsingToString(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> d
    151:152:com.fasterxml.jackson.databind.util.EnumResolver constructUnsafeUsingMethod(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.AnnotationIntrospector) -> b
    156:156:com.fasterxml.jackson.databind.util.CompactStringObjectMap constructLookup() -> a
    159:159:java.lang.Enum findEnum(java.lang.String) -> a
    169:169:java.lang.Enum getDefaultValue() -> b
    173:173:java.lang.Enum[] getRawEnums() -> c
    188:188:java.util.Collection getEnumIds() -> d
    191:191:java.lang.Class getEnumClass() -> e
com.fasterxml.jackson.databind.util.EnumValues -> b.a.a.c.l.x:
    java.lang.Class _enumClass -> a
    java.lang.Enum[] _values -> b
    com.fasterxml.jackson.core.SerializableString[] _textual -> c
    26:30:void <init>(java.lang.Class,com.fasterxml.jackson.core.SerializableString[]) -> <init>
    46:61:com.fasterxml.jackson.databind.util.EnumValues constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> a
    79:79:com.fasterxml.jackson.core.SerializableString serializedValueFor(java.lang.Enum) -> a
    115:115:java.lang.Class getEnumClass() -> a
com.fasterxml.jackson.databind.util.LRUMap -> b.a.a.c.l.y:
    int _maxEntries -> a
    java.util.concurrent.ConcurrentHashMap _map -> b
    33:37:void <init>(int,int) -> <init>
    40:48:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    57:64:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> b
    68:68:java.lang.Object get(java.lang.Object) -> a
    70:70:void clear() -> a
com.fasterxml.jackson.databind.util.LinkedNode -> b.a.a.c.l.z:
    java.lang.Object value -> a
    com.fasterxml.jackson.databind.util.LinkedNode next -> b
    15:18:void <init>(java.lang.Object,com.fasterxml.jackson.databind.util.LinkedNode) -> <init>
    22:26:void linkNext(com.fasterxml.jackson.databind.util.LinkedNode) -> a
    28:28:com.fasterxml.jackson.databind.util.LinkedNode next() -> a
    30:30:java.lang.Object value() -> b
com.fasterxml.jackson.databind.util.NameTransformer -> b.a.a.c.l.A:
    com.fasterxml.jackson.databind.util.NameTransformer NOP -> a
    33:33:void <init>() -> <init>
    41:92:com.fasterxml.jackson.databind.util.NameTransformer simpleTransformer(java.lang.String,java.lang.String) -> a
    101:101:com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer) -> a
    java.lang.String transform(java.lang.String) -> a
    14:14:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.NameTransformer$1 -> b.a.a.c.l.B:
    java.lang.String val$prefix -> b
    java.lang.String val$suffix -> c
    46:46:void <init>(java.lang.String,java.lang.String) -> <init>
    48:48:java.lang.String transform(java.lang.String) -> a
    60:60:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$2 -> b.a.a.c.l.C:
    java.lang.String val$prefix -> b
    63:63:void <init>(java.lang.String) -> <init>
    65:65:java.lang.String transform(java.lang.String) -> a
    74:74:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$3 -> b.a.a.c.l.D:
    java.lang.String val$suffix -> b
    78:78:void <init>(java.lang.String) -> <init>
    80:80:java.lang.String transform(java.lang.String) -> a
    89:89:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$Chained -> b.a.a.c.l.E:
    com.fasterxml.jackson.databind.util.NameTransformer _t1 -> b
    com.fasterxml.jackson.databind.util.NameTransformer _t2 -> c
    123:126:void <init>(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    130:130:java.lang.String transform(java.lang.String) -> a
    143:143:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer -> b.a.a.c.l.F:
    16:16:void <init>() -> <init>
    24:24:java.lang.String transform(java.lang.String) -> a
com.fasterxml.jackson.databind.util.Named -> b.a.a.c.l.G:
    java.lang.String getName() -> a
com.fasterxml.jackson.databind.util.ObjectBuffer -> b.a.a.c.l.H:
    com.fasterxml.jackson.databind.util.LinkedNode _head -> a
    com.fasterxml.jackson.databind.util.LinkedNode _tail -> b
    int _size -> c
    java.lang.Object[] _freeBuffer -> d
    54:54:void <init>() -> <init>
    68:72:java.lang.Object[] resetAndStart() -> a
    80:85:java.lang.Object[] resetAndStart(java.lang.Object[],int) -> a
    104:119:java.lang.Object[] appendCompletedChunk(java.lang.Object[]) -> a
    134:138:java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int) -> b
    151:156:java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class) -> a
    161:172:void completeAndClearBuffer(java.lang.Object[],int,java.util.List) -> a
    181:181:int initialCapacity() -> b
    188:188:int bufferedSize() -> c
    199:205:void _reset() -> d
    210:225:void _copyTo(java.lang.Object,int,java.lang.Object[],int) -> a
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder -> b.a.a.c.l.I:
    java.lang.Object _freeBuffer -> a
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferHead -> b
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail -> c
    int _bufferedEntryCount -> d
    45:45:void <init>() -> <init>
    53:53:int bufferedSize() -> a
    57:59:java.lang.Object resetAndStart() -> b
    67:82:java.lang.Object appendCompletedChunk(java.lang.Object,int) -> a
    87:102:java.lang.Object completeAndClearBuffer(java.lang.Object,int) -> b
    java.lang.Object _constructArray(int) -> b
    122:128:void _reset() -> c
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node -> b.a.a.c.l.J:
    java.lang.Object _data -> a
    int _dataLength -> b
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next -> c
    158:161:void <init>(java.lang.Object,int) -> <init>
    163:163:java.lang.Object getData() -> a
    167:169:int copyData(java.lang.Object,int) -> a
    172:172:com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node next() -> b
    176:180:void linkNext(com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node) -> a
com.fasterxml.jackson.databind.util.RawValue -> b.a.a.c.l.K:
    java.lang.Object _value -> a
    29:31:void <init>(java.lang.String) -> <init>
    63:68:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    74:82:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> a
    86:92:void serialize(com.fasterxml.jackson.core.JsonGenerator) -> a
    96:101:void _serialize(com.fasterxml.jackson.core.JsonGenerator) -> b
    105:112:boolean equals(java.lang.Object) -> equals
    117:117:int hashCode() -> hashCode
    122:122:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.RootNameLookup -> b.a.a.c.l.L:
    com.fasterxml.jackson.databind.util.LRUMap _rootNames -> a
    21:23:void <init>() -> <init>
    26:26:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig) -> a
    31:46:com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig) -> a
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition -> b.a.a.c.l.M:
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> b
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> c
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> d
    com.fasterxml.jackson.databind.PropertyName _fullName -> e
    com.fasterxml.jackson.annotation.JsonInclude$Value _inclusion -> f
    60:66:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Value) -> <init>
    83:83:com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName) -> a
    95:98:com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Include) -> a
    108:108:com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Value) -> a
    165:165:java.lang.String getName() -> a
    168:168:com.fasterxml.jackson.databind.PropertyName getFullName() -> b
    172:172:boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> a
    180:183:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> c
    188:188:boolean isExplicitlyIncluded() -> d
    189:189:boolean isExplicitlyNamed() -> e
    197:197:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> h
    202:205:com.fasterxml.jackson.databind.JavaType getPrimaryType() -> f
    210:213:java.lang.Class getRawPrimaryType() -> g
    218:218:com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> B
    231:231:boolean hasSetter() -> k
    234:234:boolean hasField() -> l
    237:237:boolean hasConstructorParameter() -> m
    241:245:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> n
    250:254:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> o
    259:259:com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> p
    264:264:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> q
    269:273:java.util.Iterator getConstructorParameters() -> r
    277:277:com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> v
com.fasterxml.jackson.databind.util.StdDateFormat -> b.a.a.c.l.N:
    java.util.regex.Pattern PATTERN_PLAIN -> a
    java.util.regex.Pattern PATTERN_ISO8601 -> b
    java.lang.String[] ALL_FORMATS -> c
    java.util.TimeZone DEFAULT_TIMEZONE -> d
    java.util.Locale DEFAULT_LOCALE -> e
    java.text.DateFormat DATE_FORMAT_RFC1123 -> f
    java.text.DateFormat DATE_FORMAT_ISO8601 -> g
    com.fasterxml.jackson.databind.util.StdDateFormat instance -> h
    java.util.Calendar CALENDAR -> i
    java.util.TimeZone _timezone -> j
    java.util.Locale _locale -> k
    java.lang.Boolean _lenient -> l
    java.util.Calendar _calendar -> m
    java.text.DateFormat _formatRFC1123 -> n
    boolean _tzSerializedWithColon -> o
    151:161:void <init>() -> <init>
    151:182:void <init>(java.util.TimeZone,java.util.Locale,java.lang.Boolean,boolean) -> <init>
    193:199:com.fasterxml.jackson.databind.util.StdDateFormat withTimeZone(java.util.TimeZone) -> a
    209:212:com.fasterxml.jackson.databind.util.StdDateFormat withLocale(java.util.Locale) -> a
    223:226:com.fasterxml.jackson.databind.util.StdDateFormat withLenient(java.lang.Boolean) -> a
    253:253:com.fasterxml.jackson.databind.util.StdDateFormat clone() -> a
    293:293:java.util.TimeZone getTimeZone() -> getTimeZone
    302:306:void setTimeZone(java.util.TimeZone) -> setTimeZone
    315:321:void setLenient(boolean) -> setLenient
    326:326:boolean isLenient() -> isLenient
    356:374:java.util.Date parse(java.lang.String) -> parse
    382:386:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    391:411:java.util.Date _parseDate(java.lang.String,java.text.ParsePosition) -> a
    424:429:java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    435:473:void _format(java.util.TimeZone,java.util.Locale,java.util.Date,java.lang.StringBuffer) -> a
    476:484:void pad2(java.lang.StringBuffer,int) -> a
    487:495:void pad3(java.lang.StringBuffer,int) -> b
    498:506:void pad4(java.lang.StringBuffer,int) -> c
    516:517:java.lang.String toString() -> toString
    521:531:java.lang.String toPattern() -> b
    536:536:boolean equals(java.lang.Object) -> equals
    541:541:int hashCode() -> hashCode
    556:564:boolean looksLikeISO8601(java.lang.String) -> a
    571:577:java.util.Date _parseDateFromLong(java.lang.String,java.text.ParsePosition) -> e
    584:588:java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition) -> b
    595:695:java.util.Date _parseAsISO8601(java.lang.String,java.text.ParsePosition) -> c
    703:706:int _parse4D(java.lang.String,int) -> a
    710:711:int _parse2D(java.lang.String,int) -> b
    716:720:java.util.Date parseAsRFC1123(java.lang.String,java.text.ParsePosition) -> d
    732:744:java.text.DateFormat _cloneFormat(java.text.DateFormat,java.lang.String,java.util.TimeZone,java.util.Locale,java.lang.Boolean) -> a
    748:749:void _clearFormats() -> c
    752:760:java.util.Calendar _getCalendar(java.util.TimeZone) -> b
    764:767:boolean _equals(java.lang.Object,java.lang.Object) -> a
    20:20:java.lang.Object clone() -> clone
    31:117:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer -> b.a.a.c.l.O:
    int DEFAULT_GENERATOR_FEATURES -> b
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> c
    com.fasterxml.jackson.core.JsonStreamContext _parentContext -> d
    int _generatorFeatures -> e
    boolean _closed -> f
    boolean _hasNativeTypeIds -> g
    boolean _hasNativeObjectIds -> h
    boolean _mayHaveNativeIds -> i
    boolean _forceBigDecimal -> j
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first -> k
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last -> l
    int _appendAt -> m
    java.lang.Object _typeId -> n
    java.lang.Object _objectId -> o
    boolean _hasNativeId -> p
    com.fasterxml.jackson.core.json.JsonWriteContext _writeContext -> q
    126:161:void <init>(com.fasterxml.jackson.core.ObjectCodec,boolean) -> <init>
    167:168:void <init>(com.fasterxml.jackson.core.JsonParser) -> <init>
    126:187:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> <init>
    200:202:com.fasterxml.jackson.databind.util.TokenBuffer asCopyOfValue(com.fasterxml.jackson.core.JsonParser) -> c
    222:223:com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean) -> b
    242:242:com.fasterxml.jackson.core.JsonParser asParser() -> o
    256:258:com.fasterxml.jackson.core.JsonParser asParserOnFirstToken() -> p
    276:276:com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.ObjectCodec) -> a
    285:287:com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.JsonParser) -> d
    298:298:com.fasterxml.jackson.core.JsonToken firstToken() -> q
    318:330:com.fasterxml.jackson.databind.util.TokenBuffer append(com.fasterxml.jackson.databind.util.TokenBuffer) -> a
    345:471:void serialize(com.fasterxml.jackson.core.JsonGenerator) -> a
    480:499:com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    507:552:java.lang.String toString() -> toString
    557:565:void _appendNativeIds(java.lang.StringBuilder) -> a
    581:582:com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> a
    594:594:int getFeatureMask() -> a
    600:601:com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> a
    606:608:com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> a
    627:627:com.fasterxml.jackson.core.json.JsonWriteContext getOutputContext() -> r
    640:640:boolean canWriteBinaryNatively() -> e
    650:650:void flush() -> flush
    654:655:void close() -> close
    669:672:void writeStartArray() -> g
    677:683:void writeEndArray() -> h
    688:691:void writeStartObject() -> i
    696:703:void writeStartObject(java.lang.Object) -> b
    708:714:void writeEndObject() -> j
    719:721:void writeFieldName(java.lang.String) -> a
    726:728:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> b
    738:743:void writeString(java.lang.String) -> b
    747:748:void writeString(char[],int,int) -> a
    752:757:void writeString(com.fasterxml.jackson.core.SerializableString) -> c
    775:776:void writeRaw(java.lang.String) -> c
    785:786:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> d
    790:791:void writeRaw(char[],int,int) -> b
    795:796:void writeRaw(char) -> a
    800:801:void writeRawValue(java.lang.String) -> d
    824:825:void writeNumber(short) -> a
    829:830:void writeNumber(int) -> d
    834:835:void writeNumber(long) -> b
    839:840:void writeNumber(double) -> a
    844:845:void writeNumber(float) -> a
    849:854:void writeNumber(java.math.BigDecimal) -> a
    858:863:void writeNumber(java.math.BigInteger) -> a
    870:871:void writeNumber(java.lang.String) -> e
    875:876:void writeBoolean(boolean) -> a
    880:881:void writeNull() -> k
    892:910:void writeObject(java.lang.Object) -> g
    943:946:void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> a
    956:956:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> a
    967:967:boolean canWriteTypeId() -> d
    972:972:boolean canWriteObjectId() -> c
    977:979:void writeTypeId(java.lang.Object) -> f
    983:985:void writeObjectId(java.lang.Object) -> d
    989:990:void writeEmbeddedObject(java.lang.Object) -> c
    1001:1075:void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> a
    1080:1114:void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> b
    1119:1125:void _checkNativeIds(com.fasterxml.jackson.core.JsonParser) -> e
    1135:1144:void _append(com.fasterxml.jackson.core.JsonToken) -> a
    1148:1157:void _append(com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> a
    1167:1177:void _appendValue(com.fasterxml.jackson.core.JsonToken) -> b
    1187:1197:void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> b
    1217:1217:void _reportUnsupportedOperation() -> n
    26:26:com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> l
    32:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer$1 -> b.a.a.c.l.P:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> b
    373:1028:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer$Parser -> b.a.a.c.l.Q:
    com.fasterxml.jackson.core.ObjectCodec _codec -> c
    boolean _hasNativeTypeIds -> d
    boolean _hasNativeObjectIds -> e
    boolean _hasNativeIds -> f
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _segment -> g
    int _segmentPtr -> h
    com.fasterxml.jackson.databind.util.TokenBufferReadContext _parsingContext -> i
    boolean _closed -> j
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteBuilder -> k
    com.fasterxml.jackson.core.JsonLocation _location -> l
    1275:1302:void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,com.fasterxml.jackson.core.JsonStreamContext) -> <init>
    1305:1306:void setLocation(com.fasterxml.jackson.core.JsonLocation) -> a
    1309:1309:com.fasterxml.jackson.core.ObjectCodec getCodec() -> a
    1346:1349:void close() -> close
    1361:1386:com.fasterxml.jackson.core.JsonToken nextToken() -> f
    1393:1406:java.lang.String nextFieldName() -> h
    1419:1419:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> c
    1422:1422:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> d
    1426:1426:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> e
    1432:1436:java.lang.String getCurrentName() -> s
    1466:1482:java.lang.String getText() -> t
    1488:1489:char[] getTextCharacters() -> u
    1494:1495:int getTextLength() -> v
    1499:1499:int getTextOffset() -> w
    1504:1504:boolean hasTextCharacters() -> x
    1516:1527:boolean isNaN() -> q
    1533:1541:java.math.BigInteger getBigIntegerValue() -> E
    1547:1560:java.math.BigDecimal getDecimalValue() -> H
    1565:1565:double getDoubleValue() -> G
    1570:1570:float getFloatValue() -> F
    1576:1581:int getIntValue() -> C
    1586:1591:long getLongValue() -> D
    1597:1605:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> z
    1610:1629:java.lang.Number getNumberValue() -> y
    1633:1633:boolean _smallerThanInt(java.lang.Number) -> c
    1637:1637:boolean _smallerThanLong(java.lang.Number) -> d
    1644:1674:int _convertNumberToInt(java.lang.Number) -> a
    1679:1701:long _convertNumberToLong(java.lang.Number) -> b
    1713:1716:java.lang.Object getEmbeddedObject() -> I
    1724:1746:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> a
    1752:1757:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> a
    1768:1768:boolean canReadObjectId() -> N
    1773:1773:boolean canReadTypeId() -> O
    1778:1778:java.lang.Object getTypeId() -> Q
    1783:1783:java.lang.Object getObjectId() -> P
    1793:1793:java.lang.Object _currentObject() -> U
    1798:1801:void _checkIsNumber() -> V
    1805:1806:void _handleEOF() -> aa
com.fasterxml.jackson.databind.util.TokenBuffer$Segment -> b.a.a.c.l.R:
    com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX -> e
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next -> a
    long _tokenTypes -> b
    java.lang.Object[] _tokens -> c
    java.util.TreeMap _nativeIds -> d
    1848:1855:void <init>() -> <init>
    1861:1866:com.fasterxml.jackson.core.JsonToken type(int) -> a
    1880:1880:java.lang.Object get(int) -> b
    1883:1883:com.fasterxml.jackson.databind.util.TokenBuffer$Segment next() -> a
    1890:1890:boolean hasIds() -> b
    1897:1903:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken) -> a
    1909:1915:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object) -> a
    1920:1926:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> a
    1932:1938:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    1992:1997:void set(int,com.fasterxml.jackson.core.JsonToken) -> b
    2002:2008:void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object) -> b
    2012:2018:void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> b
    2023:2030:void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object) -> b
    2034:2043:void assignNativeIds(int,java.lang.Object,java.lang.Object) -> a
    2049:2049:java.lang.Object findObjectId(int) -> c
    2056:2056:java.lang.Object findTypeId(int) -> d
    2059:2059:int _typeIdIndex(int) -> e
    2060:2060:int _objectIdIndex(int) -> f
    1816:1816:java.lang.Object access$000(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,int) -> a
    1816:1816:java.lang.Object access$100(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,int) -> b
    1827:1831:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBufferReadContext -> b.a.a.c.l.S:
    com.fasterxml.jackson.core.JsonStreamContext _parent -> c
    com.fasterxml.jackson.core.JsonLocation _startLocation -> d
    java.lang.String _currentName -> e
    java.lang.Object _currentValue -> f
    47:52:void <init>(com.fasterxml.jackson.core.JsonStreamContext,com.fasterxml.jackson.core.JsonLocation) -> <init>
    59:62:void <init>() -> <init>
    65:68:void <init>(com.fasterxml.jackson.databind.util.TokenBufferReadContext,int,int) -> <init>
    72:72:java.lang.Object getCurrentValue() -> i
    77:78:void setCurrentValue(java.lang.Object) -> a
    88:91:com.fasterxml.jackson.databind.util.TokenBufferReadContext createRootContext(com.fasterxml.jackson.core.JsonStreamContext) -> a
    95:95:com.fasterxml.jackson.databind.util.TokenBufferReadContext createChildArrayContext() -> j
    99:99:com.fasterxml.jackson.databind.util.TokenBufferReadContext createChildObjectContext() -> k
    110:116:com.fasterxml.jackson.databind.util.TokenBufferReadContext parentOrCopy() -> l
    125:125:java.lang.String getCurrentName() -> h
    130:130:com.fasterxml.jackson.core.JsonStreamContext getParent() -> a
    133:134:void setCurrentName(java.lang.String) -> a
com.fasterxml.jackson.databind.util.TypeKey -> b.a.a.c.l.T:
    int _hashCode -> a
    java.lang.Class _class -> b
    com.fasterxml.jackson.databind.JavaType _type -> c
    boolean _isTyped -> d
    25:25:void <init>() -> <init>
    34:39:void <init>(java.lang.Class,boolean) -> <init>
    41:46:void <init>(com.fasterxml.jackson.databind.JavaType,boolean) -> <init>
    49:49:int untypedHash(java.lang.Class) -> a
    53:53:int typedHash(java.lang.Class) -> b
    57:57:int untypedHash(com.fasterxml.jackson.databind.JavaType) -> a
    61:61:int typedHash(com.fasterxml.jackson.databind.JavaType) -> b
    93:93:boolean isTyped() -> a
    97:97:java.lang.Class getRawType() -> b
    101:101:com.fasterxml.jackson.databind.JavaType getType() -> c
    104:104:int hashCode() -> hashCode
    107:110:java.lang.String toString() -> toString
    116:128:boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.util.ViewMatcher -> b.a.a.c.l.U:
    com.fasterxml.jackson.databind.util.ViewMatcher EMPTY -> a
    7:7:void <init>() -> <init>
    13:13:boolean isVisibleForView(java.lang.Class) -> a
    17:26:com.fasterxml.jackson.databind.util.ViewMatcher construct(java.lang.Class[]) -> a
    11:11:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ViewMatcher$Multi -> b.a.a.c.l.V:
    java.lang.Class[] _views -> b
    54:54:void <init>(java.lang.Class[]) -> <init>
    59:65:boolean isVisibleForView(java.lang.Class) -> a
com.fasterxml.jackson.databind.util.ViewMatcher$Single -> b.a.a.c.l.W:
    java.lang.Class _view -> b
    40:40:void <init>(java.lang.Class) -> <init>
    43:43:boolean isVisibleForView(java.lang.Class) -> a
dagger.internal.DoubleCheck -> c.a.a:
    java.lang.Object UNINITIALIZED -> b
    javax.inject.Provider provider -> c
    java.lang.Object instance -> d
    boolean $assertionsDisabled -> a
    32:37:void <init>(javax.inject.Provider) -> <init>
    42:55:java.lang.Object get() -> a
    64:73:java.lang.Object reentrantCheck(java.lang.Object,java.lang.Object) -> a
    80:86:javax.inject.Provider provider(javax.inject.Provider) -> a
    28:29:void <clinit>() -> <clinit>
dagger.internal.Factory -> c.a.b:
dagger.internal.MemoizedSentinel -> c.a.c:
    20:20:void <init>() -> <init>
dagger.internal.Preconditions -> c.a.d:
    32:35:java.lang.Object checkNotNull(java.lang.Object) -> a
    47:50:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> a
io.crnk.core.boot.CrnkBoot -> io.crnk.core.a.a:
    org.slf4j.Logger LOGGER -> a
    io.crnk.core.module.ModuleRegistry moduleRegistry -> b
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> c
    io.crnk.legacy.queryParams.QueryParamsBuilder queryParamsBuilder -> d
    boolean configured -> e
    io.crnk.legacy.locator.JsonServiceLocator serviceLocator -> f
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> g
    io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl requestDispatcher -> h
    io.crnk.core.engine.properties.PropertiesProvider propertiesProvider -> i
    io.crnk.core.module.discovery.ServiceDiscoveryFactory serviceDiscoveryFactory -> j
    io.crnk.core.module.discovery.ServiceDiscovery serviceDiscovery -> k
    io.crnk.core.engine.internal.document.mapper.DocumentMapper documentMapper -> l
    java.util.List registeredModules -> m
    java.lang.Long defaultPageLimit -> n
    java.lang.Long maxPageLimit -> o
    java.lang.Boolean allowUnknownAttributes -> p
    java.lang.Boolean allowUnknownParameters -> q
    io.crnk.core.engine.query.QueryAdapterBuilder queryAdapterBuilder -> r
    io.crnk.core.engine.internal.CoreModule coreModule -> s
    java.util.Map serverInfo -> t
    io.crnk.core.engine.internal.dispatcher.ControllerRegistry controllerRegistry -> u
    81:121:void <init>() -> <init>
    124:124:java.lang.String buildServiceUrl(java.lang.String,java.lang.String) -> a
    168:171:void addModule(io.crnk.core.module.Module) -> a
    183:186:void checkNotConfiguredYet() -> i
    192:207:void boot() -> a
    210:217:void setupServiceDiscovery() -> j
    220:234:void bootDiscovery() -> k
    237:240:void setupRepositories(io.crnk.core.engine.registry.ResourceRegistryPart) -> a
    243:260:io.crnk.core.engine.registry.ResourceRegistryPart setupResourceRegistry() -> l
    264:272:void setupObjectMapper() -> m
    279:280:io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl createRequestDispatcher(io.crnk.core.engine.internal.exception.ExceptionMapperRegistry) -> a
    284:287:io.crnk.core.engine.query.QueryAdapterBuilder createQueryAdapterBuilder() -> b
    292:294:io.crnk.core.engine.internal.document.mapper.DocumentMapper createDocumentMapper() -> c
    299:317:io.crnk.core.engine.internal.dispatcher.ControllerRegistry createControllerRegistry() -> d
    321:321:io.crnk.core.engine.internal.document.mapper.DocumentMapper getDocumentMapper() -> e
    331:368:void setupComponents() -> n
    371:375:java.util.List getInstancesByType(java.lang.Class) -> a
    379:383:void setupInstance(java.lang.Object) -> a
    386:401:void addModules() -> o
    404:410:void setupServiceUrlProvider() -> p
    413:414:io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl getRequestDispatcher() -> f
    461:461:java.lang.String getWebPathPrefix() -> g
    469:473:void setServiceDiscovery(io.crnk.core.module.discovery.ServiceDiscovery) -> a
    528:528:io.crnk.core.module.ModuleRegistry getModuleRegistry() -> h
    545:583:void setupQuerySpecUrlMapper() -> q
    586:604:void setupPagingBehavior() -> r
    619:622:void setQuerySpecDeserializerUnchecked(io.crnk.core.queryspec.QuerySpecDeserializer) -> a
    590:590:boolean lambda$setupPagingBehavior$0(io.crnk.core.queryspec.pagingspec.PagingBehavior) -> a
    81:81:io.crnk.core.engine.internal.dispatcher.ControllerRegistry access$002(io.crnk.core.boot.CrnkBoot,io.crnk.core.engine.internal.dispatcher.ControllerRegistry) -> a
    81:81:io.crnk.core.engine.query.QueryAdapterBuilder access$102(io.crnk.core.boot.CrnkBoot,io.crnk.core.engine.query.QueryAdapterBuilder) -> a
    81:81:io.crnk.core.engine.internal.dispatcher.ControllerRegistry access$000(io.crnk.core.boot.CrnkBoot) -> a
    81:81:io.crnk.core.engine.query.QueryAdapterBuilder access$100(io.crnk.core.boot.CrnkBoot) -> b
    83:83:void <clinit>() -> <clinit>
io.crnk.core.boot.CrnkBoot$1 -> io.crnk.core.a.b:
    io.crnk.core.boot.CrnkBoot this$0 -> a
    332:332:void <init>(io.crnk.core.boot.CrnkBoot,java.lang.String) -> <init>
    336:341:void setupModule(io.crnk.core.module.Module$ModuleContext) -> a
io.crnk.core.engine.dispatcher.RepositoryRequestSpec -> io.crnk.core.engine.a.a:
    io.crnk.core.engine.http.HttpMethod getMethod() -> a
    io.crnk.core.engine.query.QueryAdapter getQueryAdapter() -> b
    io.crnk.core.queryspec.QuerySpec getQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    io.crnk.legacy.queryParams.QueryParams getQueryParams() -> c
    io.crnk.core.engine.information.resource.ResourceField getRelationshipField() -> d
    io.crnk.core.queryspec.QuerySpec getResponseQuerySpec() -> e
    io.crnk.core.engine.information.resource.ResourceInformation getResponseResourceInformation() -> f
    java.lang.Object getEntity() -> g
    java.io.Serializable getId() -> h
    java.lang.Iterable getIds() -> i
io.crnk.core.engine.dispatcher.RequestDispatcher -> io.crnk.core.engine.a.b:
    java.util.Optional process(io.crnk.core.engine.http.HttpRequestContextBase) -> a
    void dispatchAction(java.lang.String,java.lang.String,java.util.Map) -> a
io.crnk.core.engine.dispatcher.Response -> io.crnk.core.engine.a.c:
    java.lang.Integer httpStatus -> a
    io.crnk.core.engine.document.Document document -> b
    14:17:void <init>(io.crnk.core.engine.document.Document,java.lang.Integer) -> <init>
    20:20:java.lang.Integer getHttpStatus() -> a
    28:28:io.crnk.core.engine.document.Document getDocument() -> b
    37:37:int hashCode() -> hashCode
    42:45:boolean equals(java.lang.Object) -> equals
io.crnk.core.engine.document.Document -> io.crnk.core.engine.b.a:
    io.crnk.core.utils.Nullable data -> a
    java.util.List included -> b
    com.fasterxml.jackson.databind.node.ObjectNode links -> c
    com.fasterxml.jackson.databind.node.ObjectNode meta -> d
    java.util.List errors -> e
    com.fasterxml.jackson.databind.node.ObjectNode jsonapi -> f
    24:29:void <init>() -> <init>
    47:47:io.crnk.core.utils.Nullable getData() -> a
    51:53:void setData(io.crnk.core.utils.Nullable) -> a
    57:57:com.fasterxml.jackson.databind.node.ObjectNode getLinks() -> b
    62:63:void setLinks(com.fasterxml.jackson.databind.node.ObjectNode) -> a
    66:66:java.util.List getIncluded() -> c
    70:71:void setIncluded(java.util.List) -> a
    80:81:void setMeta(com.fasterxml.jackson.databind.node.ObjectNode) -> b
    88:89:void setErrors(java.util.List) -> b
    93:93:boolean isMultiple() -> d
    98:98:io.crnk.core.utils.Nullable getSingleData() -> e
    103:103:int hashCode() -> hashCode
    108:114:boolean equals(java.lang.Object) -> equals
    119:129:io.crnk.core.utils.Nullable getCollectionData() -> f
    137:138:void setJsonapi(com.fasterxml.jackson.databind.node.ObjectNode) -> c
io.crnk.core.engine.document.ErrorData -> io.crnk.core.engine.b.b:
    java.lang.String id -> a
    java.lang.String aboutLink -> b
    java.lang.String status -> c
    java.lang.String code -> d
    java.lang.String title -> e
    java.lang.String detail -> f
    java.lang.String sourcePointer -> g
    java.lang.String sourceParameter -> h
    java.util.Map meta -> i
    68:78:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> <init>
    80:90:void <init>(io.crnk.core.engine.document.ErrorDataBuilder) -> <init>
    93:93:io.crnk.core.engine.document.ErrorDataBuilder builder() -> a
    97:97:java.lang.String getId() -> b
    101:101:java.lang.String getAboutLink() -> c
    105:105:java.lang.String getStatus() -> d
    109:109:java.lang.String getCode() -> e
    113:113:java.lang.String getTitle() -> f
    117:117:java.lang.String getDetail() -> g
    121:121:java.lang.String getSourcePointer() -> h
    125:125:java.lang.String getSourceParameter() -> i
    129:129:java.util.Map getMeta() -> j
    134:149:boolean equals(java.lang.Object) -> equals
    154:154:int hashCode() -> hashCode
    159:159:java.lang.String toString() -> toString
io.crnk.core.engine.document.ErrorDataBuilder -> io.crnk.core.engine.b.c:
    java.lang.String id -> a
    java.lang.String aboutLink -> b
    java.lang.String status -> c
    java.lang.String code -> d
    java.lang.String title -> e
    java.lang.String detail -> f
    java.lang.String sourcePointer -> g
    java.lang.String sourceParameter -> h
    java.util.Map meta -> i
    6:6:void <init>() -> <init>
    44:45:io.crnk.core.engine.document.ErrorDataBuilder setStatus(java.lang.String) -> a
    55:56:io.crnk.core.engine.document.ErrorDataBuilder setCode(java.lang.String) -> b
    67:68:io.crnk.core.engine.document.ErrorDataBuilder setTitle(java.lang.String) -> c
    78:79:io.crnk.core.engine.document.ErrorDataBuilder setDetail(java.lang.String) -> d
    105:106:io.crnk.core.engine.document.ErrorDataBuilder setSourceParameter(java.lang.String) -> e
    129:129:io.crnk.core.engine.document.ErrorData build() -> a
    133:133:java.lang.String getId() -> b
    137:137:java.lang.String getAboutLink() -> c
    141:141:java.lang.String getStatus() -> d
    145:145:java.lang.String getCode() -> e
    149:149:java.lang.String getTitle() -> f
    153:153:java.lang.String getDetail() -> g
    157:157:java.lang.String getSourcePointer() -> h
    161:161:java.lang.String getSourceParameter() -> i
    165:165:java.util.Map getMeta() -> j
io.crnk.core.engine.document.Relationship -> io.crnk.core.engine.b.d:
    io.crnk.core.utils.Nullable data -> a
    com.fasterxml.jackson.databind.node.ObjectNode links -> b
    com.fasterxml.jackson.databind.node.ObjectNode meta -> c
    24:36:void <init>() -> <init>
    53:54:void setMeta(com.fasterxml.jackson.databind.node.ObjectNode) -> b
    57:57:io.crnk.core.utils.Nullable getData() -> a
    61:81:void setData(io.crnk.core.utils.Nullable) -> a
    85:85:com.fasterxml.jackson.databind.node.ObjectNode getLinks() -> b
    90:91:void setLinks(com.fasterxml.jackson.databind.node.ObjectNode) -> a
    100:107:io.crnk.core.utils.Nullable getCollectionData() -> c
    112:112:int hashCode() -> hashCode
    117:122:boolean equals(java.lang.Object) -> equals
io.crnk.core.engine.document.Resource -> io.crnk.core.engine.b.e:
    java.util.Map attributes -> c
    java.util.Map relationships -> d
    com.fasterxml.jackson.databind.node.ObjectNode links -> e
    com.fasterxml.jackson.databind.node.ObjectNode meta -> f
    19:24:void <init>() -> <init>
    35:35:com.fasterxml.jackson.databind.node.ObjectNode getLinks() -> b
    40:41:void setLinks(com.fasterxml.jackson.databind.node.ObjectNode) -> a
    45:45:com.fasterxml.jackson.databind.node.ObjectNode getMeta() -> a
    50:51:void setMeta(com.fasterxml.jackson.databind.node.ObjectNode) -> b
    54:54:java.util.Map getAttributes() -> c
    58:59:void setAttributes(java.util.Map) -> a
    62:62:java.util.Map getRelationships() -> d
    75:75:int hashCode() -> hashCode
    80:86:boolean equals(java.lang.Object) -> equals
    90:90:io.crnk.core.engine.document.ResourceIdentifier toIdentifier() -> e
io.crnk.core.engine.document.ResourceIdentifier -> io.crnk.core.engine.b.f:
    java.lang.String id -> a
    java.lang.String type -> b
    14:15:void <init>() -> <init>
    17:23:void <init>(java.lang.String,java.lang.String) -> <init>
    26:26:java.lang.String getId() -> f
    30:31:void setId(java.lang.String) -> a
    34:34:java.lang.String getType() -> g
    38:39:void setType(java.lang.String) -> b
    43:43:int hashCode() -> hashCode
    48:52:boolean equals(java.lang.Object) -> equals
    57:61:int compareTo(io.crnk.core.engine.document.ResourceIdentifier) -> a
    66:66:java.lang.String toString() -> toString
    8:8:int compareTo(java.lang.Object) -> compareTo
io.crnk.core.engine.error.ErrorResponse -> io.crnk.core.engine.error.a:
    java.util.Collection data -> a
    int httpStatus -> b
    18:21:void <init>(java.util.Collection,int) -> <init>
    24:24:io.crnk.core.engine.error.ErrorResponseBuilder builder() -> a
    28:31:java.util.Collection getErrors() -> b
    35:35:int getHttpStatus() -> c
    45:53:boolean equals(java.lang.Object) -> equals
    58:58:int hashCode() -> hashCode
    62:69:io.crnk.core.engine.dispatcher.Response toResponse() -> d
io.crnk.core.engine.error.ErrorResponseBuilder -> io.crnk.core.engine.error.b:
    java.util.Collection data -> a
    int status -> b
    9:9:void <init>() -> <init>
    19:22:io.crnk.core.engine.error.ErrorResponseBuilder setSingleErrorData(io.crnk.core.engine.document.ErrorData) -> a
    26:27:io.crnk.core.engine.error.ErrorResponseBuilder setStatus(int) -> a
    31:31:io.crnk.core.engine.error.ErrorResponse build() -> a
io.crnk.core.engine.error.ExceptionMapper -> io.crnk.core.engine.error.ExceptionMapper:
    io.crnk.core.engine.error.ErrorResponse toErrorResponse(java.lang.Throwable) -> toErrorResponse
    java.lang.Throwable fromErrorResponse(io.crnk.core.engine.error.ErrorResponse) -> fromErrorResponse
    boolean accepts(io.crnk.core.engine.error.ErrorResponse) -> accepts
io.crnk.core.engine.error.JsonApiExceptionMapper -> io.crnk.core.engine.error.c:
    io.crnk.core.engine.error.ErrorResponse toErrorResponse(java.lang.Throwable) -> toErrorResponse
io.crnk.core.engine.filter.DocumentFilter -> io.crnk.core.engine.c.a:
    io.crnk.core.engine.dispatcher.Response filter(io.crnk.core.engine.filter.DocumentFilterContext,io.crnk.core.engine.filter.DocumentFilterChain) -> a
io.crnk.core.engine.filter.DocumentFilterChain -> io.crnk.core.engine.c.b:
    io.crnk.core.engine.dispatcher.Response doFilter(io.crnk.core.engine.filter.DocumentFilterContext) -> a
io.crnk.core.engine.filter.DocumentFilterContext -> io.crnk.core.engine.c.c:
    io.crnk.core.engine.document.Document getRequestBody() -> a
    io.crnk.legacy.internal.RepositoryMethodParameterProvider getParameterProvider() -> b
    io.crnk.core.engine.internal.dispatcher.path.JsonPath getJsonPath() -> c
    io.crnk.core.engine.query.QueryAdapter getQueryAdapter() -> d
io.crnk.core.engine.filter.FilterBehavior -> io.crnk.core.engine.c.d:
    io.crnk.core.engine.filter.FilterBehavior NONE -> a
    io.crnk.core.engine.filter.FilterBehavior IGNORED -> b
    io.crnk.core.engine.filter.FilterBehavior FORBIDDEN -> c
    io.crnk.core.engine.filter.FilterBehavior[] $VALUES -> d
    3:3:io.crnk.core.engine.filter.FilterBehavior[] values() -> values
    3:3:io.crnk.core.engine.filter.FilterBehavior valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    24:24:io.crnk.core.engine.filter.FilterBehavior merge(io.crnk.core.engine.filter.FilterBehavior) -> a
    3:18:void <clinit>() -> <clinit>
io.crnk.core.engine.filter.RepositoryBulkRequestFilterChain -> io.crnk.core.engine.c.e:
io.crnk.core.engine.filter.RepositoryFilter -> io.crnk.core.engine.c.f:
    io.crnk.core.repository.response.JsonApiResponse filterRequest(io.crnk.core.engine.filter.RepositoryFilterContext,io.crnk.core.engine.filter.RepositoryRequestFilterChain) -> a
    java.util.Map filterBulkRequest(io.crnk.core.engine.filter.RepositoryFilterContext,io.crnk.core.engine.filter.RepositoryBulkRequestFilterChain) -> a
    java.lang.Iterable filterResult(io.crnk.core.engine.filter.RepositoryFilterContext,io.crnk.core.engine.filter.RepositoryResultFilterChain) -> a
    io.crnk.core.resource.meta.MetaInformation filterMeta(io.crnk.core.engine.filter.RepositoryFilterContext,java.lang.Iterable,io.crnk.core.engine.filter.RepositoryMetaFilterChain) -> a
    io.crnk.core.resource.links.LinksInformation filterLinks(io.crnk.core.engine.filter.RepositoryFilterContext,java.lang.Iterable,io.crnk.core.engine.filter.RepositoryLinksFilterChain) -> a
io.crnk.core.engine.filter.RepositoryFilterContext -> io.crnk.core.engine.c.g:
    io.crnk.core.engine.dispatcher.RepositoryRequestSpec getRequest() -> a
io.crnk.core.engine.filter.RepositoryLinksFilterChain -> io.crnk.core.engine.c.h:
io.crnk.core.engine.filter.RepositoryMetaFilterChain -> io.crnk.core.engine.c.i:
io.crnk.core.engine.filter.RepositoryRequestFilterChain -> io.crnk.core.engine.c.j:
io.crnk.core.engine.filter.RepositoryResultFilterChain -> io.crnk.core.engine.c.k:
io.crnk.core.engine.filter.ResourceFilter -> io.crnk.core.engine.c.l:
    io.crnk.core.engine.filter.FilterBehavior filterResource(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.http.HttpMethod) -> a
    io.crnk.core.engine.filter.FilterBehavior filterField(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod) -> a
io.crnk.core.engine.filter.ResourceFilterDirectory -> io.crnk.core.engine.c.m:
    io.crnk.core.engine.filter.FilterBehavior get(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext) -> a
    io.crnk.core.engine.filter.FilterBehavior get(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext) -> a
io.crnk.core.engine.filter.ResourceModificationFilter -> io.crnk.core.engine.c.n:
    java.lang.Object modifyAttribute(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,java.lang.String,java.lang.Object) -> a
    io.crnk.core.engine.document.ResourceIdentifier modifyOneRelationship(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.ResourceIdentifier) -> a
    java.util.List modifyManyRelationship(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.filter.ResourceRelationshipModificationType,java.util.List) -> a
io.crnk.core.engine.filter.ResourceRelationshipModificationType -> io.crnk.core.engine.c.o:
    io.crnk.core.engine.filter.ResourceRelationshipModificationType ADD -> a
    io.crnk.core.engine.filter.ResourceRelationshipModificationType REMOVE -> b
    io.crnk.core.engine.filter.ResourceRelationshipModificationType SET -> c
    io.crnk.core.engine.filter.ResourceRelationshipModificationType[] $VALUES -> d
    3:3:io.crnk.core.engine.filter.ResourceRelationshipModificationType[] values() -> values
    3:3:io.crnk.core.engine.filter.ResourceRelationshipModificationType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
io.crnk.core.engine.http.HttpMethod -> io.crnk.core.engine.d.a:
    io.crnk.core.engine.http.HttpMethod GET -> a
    io.crnk.core.engine.http.HttpMethod POST -> b
    io.crnk.core.engine.http.HttpMethod DELETE -> c
    io.crnk.core.engine.http.HttpMethod PATCH -> d
    io.crnk.core.engine.http.HttpMethod[] $VALUES -> e
    7:7:io.crnk.core.engine.http.HttpMethod[] values() -> values
    7:7:io.crnk.core.engine.http.HttpMethod valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:11:void <clinit>() -> <clinit>
io.crnk.core.engine.http.HttpRequestContext -> io.crnk.core.engine.d.b:
    boolean accepts(java.lang.String) -> a
    boolean acceptsAny() -> a
    io.crnk.core.engine.query.QueryContext getQueryContext() -> b
io.crnk.core.engine.http.HttpRequestContextAware -> io.crnk.core.engine.d.c:
    void setHttpRequestContextProvider(io.crnk.core.engine.http.HttpRequestContextProvider) -> a
io.crnk.core.engine.http.HttpRequestContextBase -> io.crnk.core.engine.d.d:
    io.crnk.legacy.internal.RepositoryMethodParameterProvider getRequestParameterProvider() -> c
    java.lang.String getRequestHeader(java.lang.String) -> b
    java.util.Map getRequestParameters() -> d
    java.lang.String getPath() -> e
    java.lang.String getBaseUrl() -> f
    byte[] getRequestBody() -> g
    java.lang.String getMethod() -> h
    io.crnk.core.engine.http.HttpResponse getResponse() -> i
    void setResponse(io.crnk.core.engine.http.HttpResponse) -> a
io.crnk.core.engine.http.HttpRequestContextProvider -> io.crnk.core.engine.d.e:
    io.crnk.core.utils.Supplier resultFactory -> a
    io.crnk.core.engine.url.ServiceUrlProvider serviceUrlProvider -> b
    12:25:void <init>(io.crnk.core.utils.Supplier) -> <init>
    31:31:io.crnk.core.engine.http.HttpRequestContext getRequestContext() -> a
    39:39:io.crnk.core.engine.result.Result getRequestContextResult() -> b
    44:45:void onRequestStarted(io.crnk.core.engine.http.HttpRequestContext) -> a
    49:49:boolean hasThreadRequestContext() -> c
    56:57:void onRequestFinished() -> d
    60:60:io.crnk.core.engine.url.ServiceUrlProvider getServiceUrlProvider() -> e
    64:65:void setServiceUrlProvider(io.crnk.core.engine.url.ServiceUrlProvider) -> a
    68:69:io.crnk.core.engine.result.Result attach(io.crnk.core.engine.result.Result) -> a
io.crnk.core.engine.http.HttpRequestContextProvider$1 -> io.crnk.core.engine.d.f:
    io.crnk.core.engine.http.HttpRequestContextProvider this$0 -> a
    12:12:void <init>(io.crnk.core.engine.http.HttpRequestContextProvider) -> <init>
    15:19:java.lang.String getUrl() -> a
io.crnk.core.engine.http.HttpRequestProcessor -> io.crnk.core.engine.d.g:
    10:10:boolean supportsAsync() -> a
    14:14:boolean accepts(io.crnk.core.engine.http.HttpRequestContext) -> a
    19:23:void process(io.crnk.core.engine.http.HttpRequestContext) -> a_
    26:26:io.crnk.core.engine.result.Result processAsync(io.crnk.core.engine.http.HttpRequestContext) -> c
io.crnk.core.engine.http.HttpResponse -> io.crnk.core.engine.d.h:
    java.util.Map headers -> a
    int statusCode -> b
    byte[] body -> c
    7:9:void <init>() -> <init>
    17:18:void setHeader(java.lang.String,java.lang.String) -> a
    21:21:java.util.Map getHeaders() -> a
    29:29:int getStatusCode() -> b
    33:34:void setStatusCode(int) -> a
    37:37:byte[] getBody() -> c
    45:46:void setBody(java.lang.String) -> a
    53:54:void setContentType(java.lang.String) -> b
    62:62:java.lang.String toString() -> toString
io.crnk.core.engine.information.InformationBuilder -> io.crnk.core.engine.e.a:
    io.crnk.core.engine.information.InformationBuilder$Field createResourceField() -> a
io.crnk.core.engine.information.InformationBuilder$Field -> io.crnk.core.engine.e.b:
    io.crnk.core.engine.information.resource.ResourceField build() -> a
    io.crnk.core.engine.information.InformationBuilder$Field relationshipRepositoryBehavior(io.crnk.core.resource.annotations.RelationshipRepositoryBehavior) -> a
    io.crnk.core.engine.information.InformationBuilder$Field jsonName(java.lang.String) -> a
    io.crnk.core.engine.information.InformationBuilder$Field underlyingName(java.lang.String) -> b
    io.crnk.core.engine.information.InformationBuilder$Field type(java.lang.Class) -> a
    io.crnk.core.engine.information.InformationBuilder$Field genericType(java.lang.reflect.Type) -> a
    io.crnk.core.engine.information.InformationBuilder$Field serializeType(io.crnk.core.resource.annotations.SerializeType) -> a
    io.crnk.core.engine.information.InformationBuilder$Field oppositeResourceType(java.lang.String) -> c
    io.crnk.core.engine.information.InformationBuilder$Field lookupIncludeBehavior(io.crnk.core.resource.annotations.LookupIncludeBehavior) -> a
    io.crnk.core.engine.information.InformationBuilder$Field fieldType(io.crnk.core.engine.information.resource.ResourceFieldType) -> a
    io.crnk.core.engine.information.InformationBuilder$Field oppositeName(java.lang.String) -> d
    io.crnk.core.engine.information.InformationBuilder$Field access(io.crnk.core.engine.information.resource.ResourceFieldAccess) -> a
    io.crnk.core.engine.information.InformationBuilder$Field idName(java.lang.String) -> e
    io.crnk.core.engine.information.InformationBuilder$Field idType(java.lang.Class) -> b
io.crnk.core.engine.information.InformationBuilder$RelationshipRepository -> io.crnk.core.engine.e.c:
    io.crnk.core.engine.information.repository.RelationshipRepositoryInformation build() -> a
io.crnk.core.engine.information.InformationBuilder$Resource -> io.crnk.core.engine.e.d:
    void from(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    io.crnk.core.engine.information.resource.ResourceInformation build() -> a
io.crnk.core.engine.information.InformationBuilder$ResourceRepository -> io.crnk.core.engine.e.e:
    void from(io.crnk.core.engine.information.repository.ResourceRepositoryInformation) -> a
    void setResourceInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation build() -> a
io.crnk.core.engine.information.bean.BeanAttributeInformation -> io.crnk.core.engine.e.a.a:
    java.lang.String name -> a
    java.lang.reflect.Field field -> b
    java.lang.reflect.Method getter -> c
    java.lang.reflect.Method setter -> d
    io.crnk.core.engine.information.bean.BeanInformation beanInformation -> e
    java.lang.String jsonName -> f
    java.util.Map annotations -> g
    28:71:void <init>(io.crnk.core.engine.information.bean.BeanInformation) -> <init>
    33:33:java.lang.reflect.Field getField() -> a
    37:37:java.lang.reflect.Method getGetter() -> b
    41:41:java.lang.reflect.Method getSetter() -> c
    45:46:void setSetter(java.lang.reflect.Method) -> a
    49:50:void setName(java.lang.String) -> a
    53:53:java.lang.String getName() -> d
    57:58:void setGetter(java.lang.reflect.Method) -> b
    61:62:void setField(java.lang.reflect.Field) -> a
    65:68:java.lang.Class getImplementationClass() -> e
    74:112:io.crnk.core.utils.Optional getAnnotation(java.lang.Class) -> a
    121:129:java.lang.Object getValue(java.lang.Object) -> a
    148:156:java.lang.String getJsonName() -> f
    160:163:java.lang.reflect.Type getImplementationType() -> g
io.crnk.core.engine.information.bean.BeanInformation -> io.crnk.core.engine.e.a.b:
    java.lang.Class implementationClass -> a
    java.util.Map attributeMap -> b
    java.util.Map jsonAttributeMap -> c
    java.util.List attributeNames -> d
    io.crnk.core.engine.information.bean.BeanInformation superType -> e
    java.util.List implementedInterfaces -> f
    java.util.concurrent.ConcurrentHashMap cache -> g
    19:91:void <init>(java.lang.Class) -> <init>
    94:94:io.crnk.core.engine.information.bean.BeanInformation getSuperType() -> a
    98:98:java.util.List getImplementedInterfaces() -> b
    102:102:io.crnk.core.engine.information.bean.BeanAttributeInformation getAttribute(java.lang.String) -> a
    106:106:io.crnk.core.engine.information.bean.BeanAttributeInformation getAttributeByJsonName(java.lang.String) -> b
    111:111:java.util.List getAttributeNames() -> c
    121:126:io.crnk.core.engine.information.bean.BeanInformation get(java.lang.Class) -> a
    118:118:void <clinit>() -> <clinit>
io.crnk.core.engine.information.contributor.ResourceFieldContributor -> io.crnk.core.engine.e.b.a:
    java.util.List getResourceFields(io.crnk.core.engine.information.contributor.ResourceFieldContributorContext) -> a
io.crnk.core.engine.information.contributor.ResourceFieldContributorContext -> io.crnk.core.engine.e.b.b:
io.crnk.core.engine.information.repository.RelationshipRepositoryInformation -> io.crnk.core.engine.e.c.a:
    io.crnk.core.repository.RelationshipMatcher getMatcher() -> a
io.crnk.core.engine.information.repository.RepositoryInformation -> io.crnk.core.engine.e.c.b:
    io.crnk.core.engine.information.repository.RepositoryMethodAccess getAccess() -> b
io.crnk.core.engine.information.repository.RepositoryInformationProvider -> io.crnk.core.engine.e.c.c:
    boolean accept(java.lang.Object) -> a
    io.crnk.core.engine.information.repository.RepositoryInformation build(java.lang.Object,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> a
io.crnk.core.engine.information.repository.RepositoryInformationProviderContext -> io.crnk.core.engine.e.c.d:
    io.crnk.core.engine.information.resource.ResourceInformationProvider getResourceInformationBuilder() -> a
io.crnk.core.engine.information.repository.RepositoryMethodAccess -> io.crnk.core.engine.e.c.e:
    io.crnk.core.engine.information.repository.RepositoryMethodAccess ALL -> a
    boolean postable -> b
    boolean patchable -> c
    boolean readable -> d
    boolean deletable -> e
    18:23:void <init>(boolean,boolean,boolean,boolean) -> <init>
    55:61:int hashCode() -> hashCode
    66:73:boolean equals(java.lang.Object) -> equals
    8:8:void <clinit>() -> <clinit>
io.crnk.core.engine.information.repository.ResourceRepositoryInformation -> io.crnk.core.engine.e.c.f:
    io.crnk.core.utils.Optional getResourceInformation() -> a
    io.crnk.core.engine.information.resource.ResourceInformation getResource() -> c
    java.util.Map getActions() -> d
io.crnk.core.engine.information.resource.AnyResourceFieldAccessor -> io.crnk.core.engine.e.d.a:
    void setValue(java.lang.Object,java.lang.String,java.lang.Object) -> a
io.crnk.core.engine.information.resource.ResourceField -> io.crnk.core.engine.e.d.b:
    io.crnk.core.engine.information.resource.ResourceFieldType getResourceFieldType() -> a
    io.crnk.core.resource.annotations.LookupIncludeBehavior getLookupIncludeAutomatically() -> b
    java.lang.String getOppositeName() -> c
    java.lang.String getOppositeResourceType() -> d
    java.lang.String getJsonName() -> e
    java.lang.String getUnderlyingName() -> f
    java.lang.Class getType() -> g
    java.lang.reflect.Type getGenericType() -> h
    io.crnk.core.resource.annotations.SerializeType getSerializeType() -> i
    java.lang.Class getElementType() -> j
    io.crnk.core.engine.information.resource.ResourceInformation getParentResourceInformation() -> k
    void setResourceInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    boolean isCollection() -> l
    io.crnk.core.engine.information.resource.ResourceFieldAccessor getAccessor() -> m
    boolean hasIdField() -> n
    java.lang.String getIdName() -> o
    java.lang.Class getIdType() -> p
    io.crnk.core.engine.information.resource.ResourceFieldAccessor getIdAccessor() -> q
    io.crnk.core.engine.information.resource.ResourceFieldAccess getAccess() -> r
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior getRelationshipRepositoryBehavior() -> s
io.crnk.core.engine.information.resource.ResourceFieldAccess -> io.crnk.core.engine.e.d.c:
    boolean readable -> a
    boolean postable -> b
    boolean patchable -> c
    boolean sortable -> d
    boolean filterable -> e
    23:29:void <init>(boolean,boolean,boolean,boolean,boolean) -> <init>
    35:35:boolean isReadable() -> a
    42:42:boolean isPostable() -> b
    49:49:boolean isPatchable() -> c
    77:84:int hashCode() -> hashCode
    89:96:boolean equals(java.lang.Object) -> equals
io.crnk.core.engine.information.resource.ResourceFieldAccessor -> io.crnk.core.engine.e.d.d:
    java.lang.Object getValue(java.lang.Object) -> a
    void setValue(java.lang.Object,java.lang.Object) -> a
io.crnk.core.engine.information.resource.ResourceFieldInformationProvider -> io.crnk.core.engine.e.d.e:
    void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> a
    io.crnk.core.utils.Optional isIgnored(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> a
    io.crnk.core.utils.Optional getJsonName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> b
    io.crnk.core.utils.Optional isPostable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> c
    io.crnk.core.utils.Optional isPatchable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> d
    io.crnk.core.utils.Optional isReadable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> e
    io.crnk.core.utils.Optional isSortable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> f
    io.crnk.core.utils.Optional isFilterable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> g
    io.crnk.core.utils.Optional getFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> h
    io.crnk.core.utils.Optional getOppositeName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> i
    io.crnk.core.utils.Optional useFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> j
    io.crnk.core.utils.Optional getLookupIncludeBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> k
    io.crnk.core.utils.Optional getSerializeType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> l
    io.crnk.core.utils.Optional getRelationshipRepositoryBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> m
io.crnk.core.engine.information.resource.ResourceFieldInformationProviderBase -> io.crnk.core.engine.e.d.f:
    io.crnk.core.engine.information.resource.ResourceInformationProviderContext context -> a
    9:9:void <init>() -> <init>
    15:16:void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> a
    20:20:io.crnk.core.utils.Optional isIgnored(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> a
    25:25:io.crnk.core.utils.Optional getJsonName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> b
    30:30:io.crnk.core.utils.Optional isPostable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> c
    35:35:io.crnk.core.utils.Optional isPatchable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> d
    40:40:io.crnk.core.utils.Optional isReadable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> e
    45:45:io.crnk.core.utils.Optional isSortable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> f
    50:50:io.crnk.core.utils.Optional isFilterable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> g
    55:55:io.crnk.core.utils.Optional getFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> h
    60:60:io.crnk.core.utils.Optional getOppositeName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> i
    65:65:io.crnk.core.utils.Optional useFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> j
    70:70:io.crnk.core.utils.Optional getLookupIncludeBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> k
    75:75:io.crnk.core.utils.Optional getSerializeType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> l
    80:80:io.crnk.core.utils.Optional getRelationshipRepositoryBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> m
io.crnk.core.engine.information.resource.ResourceFieldType -> io.crnk.core.engine.e.d.g:
    io.crnk.core.engine.information.resource.ResourceFieldType ID -> a
    io.crnk.core.engine.information.resource.ResourceFieldType ATTRIBUTE -> b
    io.crnk.core.engine.information.resource.ResourceFieldType RELATIONSHIP -> c
    io.crnk.core.engine.information.resource.ResourceFieldType META_INFORMATION -> d
    io.crnk.core.engine.information.resource.ResourceFieldType LINKS_INFORMATION -> e
    io.crnk.core.engine.information.resource.ResourceFieldType[] $VALUES -> f
    6:6:io.crnk.core.engine.information.resource.ResourceFieldType[] values() -> values
    6:6:io.crnk.core.engine.information.resource.ResourceFieldType valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    26:32:java.util.List filter(java.util.List) -> a
    6:7:void <clinit>() -> <clinit>
io.crnk.core.engine.information.resource.ResourceInformation -> io.crnk.core.engine.e.d.h:
    java.lang.Class resourceClass -> a
    io.crnk.core.engine.information.resource.ResourceField idField -> b
    java.util.List attributeFields -> c
    java.util.List relationshipFields -> d
    io.crnk.core.engine.information.resource.ResourceField metaField -> e
    io.crnk.core.engine.information.resource.ResourceField linksField -> f
    java.lang.String resourceType -> g
    java.lang.String resourcePath -> h
    io.crnk.core.engine.information.resource.ResourceInstanceBuilder instanceBuilder -> i
    io.crnk.core.engine.parser.TypeParser parser -> j
    java.lang.String superResourceType -> k
    java.util.Map fieldByJsonName -> l
    java.util.Map fieldByUnderlyingName -> m
    java.util.List fields -> n
    io.crnk.core.engine.information.resource.AnyResourceFieldAccessor anyFieldAccessor -> o
    io.crnk.core.engine.information.resource.ResourceValidator validator -> p
    io.crnk.core.queryspec.pagingspec.PagingBehavior pagingBehavior -> q
    io.crnk.core.engine.parser.StringMapper idStringMapper -> r
    127:128:void <init>(io.crnk.core.engine.parser.TypeParser,java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.util.List,io.crnk.core.queryspec.pagingspec.PagingBehavior) -> <init>
    92:153:void <init>(io.crnk.core.engine.parser.TypeParser,java.lang.Class,java.lang.String,java.lang.String,java.lang.String,io.crnk.core.engine.information.resource.ResourceInstanceBuilder,java.util.List,io.crnk.core.queryspec.pagingspec.PagingBehavior) -> <init>
    157:158:void setValidator(io.crnk.core.engine.information.resource.ResourceValidator) -> a
    162:162:io.crnk.core.engine.information.resource.ResourceValidator getValidator() -> a
    167:168:void setIdStringMapper(io.crnk.core.engine.parser.StringMapper) -> a
    171:171:io.crnk.core.engine.parser.StringMapper getIdStringMapper() -> b
    175:175:io.crnk.core.engine.information.resource.AnyResourceFieldAccessor getAnyFieldAccessor() -> c
    179:215:void initAny() -> p
    224:224:boolean absentAnySetter(java.lang.reflect.Method,java.lang.reflect.Method) -> a
    229:256:void initFields() -> q
    260:262:void setFields(java.util.List) -> a
    265:278:io.crnk.core.engine.information.resource.ResourceField getMetaField(java.lang.Class,java.util.Collection) -> a
    282:295:io.crnk.core.engine.information.resource.ResourceField getLinksField(java.lang.Class,java.util.Collection) -> b
    299:299:java.lang.String getResourceType() -> d
    303:303:java.lang.String getResourcePath() -> e
    307:307:java.lang.String getSuperResourceType() -> f
    311:311:io.crnk.core.engine.information.resource.ResourceInstanceBuilder getInstanceBuilder() -> g
    315:315:java.lang.Class getResourceClass() -> h
    319:319:io.crnk.core.engine.information.resource.ResourceField getIdField() -> i
    323:323:java.util.List getAttributeFields() -> j
    327:327:java.util.List getRelationshipFields() -> k
    331:331:io.crnk.core.engine.information.resource.ResourceField findFieldByName(java.lang.String) -> a
    335:335:io.crnk.core.engine.information.resource.ResourceField findFieldByUnderlyingName(java.lang.String) -> b
    339:341:io.crnk.core.engine.information.resource.ResourceField findRelationshipFieldByName(java.lang.String) -> c
    345:347:io.crnk.core.engine.information.resource.ResourceField findAttributeFieldByName(java.lang.String) -> d
    351:351:io.crnk.core.engine.information.resource.ResourceField getMetaField() -> l
    355:355:io.crnk.core.engine.information.resource.ResourceField getLinksField() -> m
    360:367:boolean equals(java.lang.Object) -> equals
    372:372:int hashCode() -> hashCode
    382:385:java.lang.String toIdString(java.lang.Object) -> a
    424:424:java.io.Serializable parseIdString(java.lang.String) -> e
    431:431:java.lang.Object getId(java.lang.Object) -> b
    440:443:void verify(java.lang.Object,io.crnk.core.engine.document.Document) -> a
    446:446:java.util.List getFields() -> n
    450:450:io.crnk.core.queryspec.pagingspec.PagingBehavior getPagingBehavior() -> o
    35:35:io.crnk.core.engine.parser.TypeParser access$000(io.crnk.core.engine.information.resource.ResourceInformation) -> a
io.crnk.core.engine.information.resource.ResourceInformation$1 -> io.crnk.core.engine.e.d.i:
    io.crnk.core.engine.information.resource.ResourceInformation this$0 -> a
    107:107:void <init>(io.crnk.core.engine.information.resource.ResourceInformation) -> <init>
    110:110:java.lang.String toString(java.lang.Object) -> a
    115:116:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.information.resource.ResourceInformation$2 -> io.crnk.core.engine.e.d.j:
    java.lang.reflect.Method val$jsonAnyGetter -> a
    java.lang.reflect.Method val$jsonAnySetter -> b
    io.crnk.core.engine.information.resource.ResourceInformation this$0 -> c
    189:189:void <init>(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    205:212:void setValue(java.lang.Object,java.lang.String,java.lang.Object) -> a
io.crnk.core.engine.information.resource.ResourceInformationProvider -> io.crnk.core.engine.e.d.k:
    boolean accept(java.lang.Class) -> a
    io.crnk.core.engine.information.resource.ResourceInformation build(java.lang.Class) -> b
    void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> a
    java.lang.String getResourceType(java.lang.Class) -> c
io.crnk.core.engine.information.resource.ResourceInformationProviderContext -> io.crnk.core.engine.e.d.l:
    java.lang.String getResourceType(java.lang.Class) -> a
    boolean accept(java.lang.Class) -> b
    io.crnk.core.engine.parser.TypeParser getTypeParser() -> a
    io.crnk.core.engine.information.InformationBuilder getInformationBuilder() -> b
    com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> c
io.crnk.core.engine.information.resource.ResourceInformationProviderModule -> io.crnk.core.engine.e.d.m:
    16:17:void <init>() -> <init>
    22:33:void setupModule(io.crnk.core.module.Module$ModuleContext) -> a
io.crnk.core.engine.information.resource.ResourceInstanceBuilder -> io.crnk.core.engine.e.d.n:
    java.lang.Object buildResource(io.crnk.core.engine.document.Resource) -> a
io.crnk.core.engine.information.resource.ResourceValidator -> io.crnk.core.engine.e.d.o:
    void validate(java.lang.Object,io.crnk.core.engine.document.Document) -> a
io.crnk.core.engine.internal.CoreModule -> io.crnk.core.engine.internal.a:
    io.crnk.core.engine.information.repository.RepositoryInformationProvider defaultRepositoryInformationProvider -> a
    9:11:void <init>() -> <init>
    21:26:void setupModule(io.crnk.core.module.Module$ModuleContext) -> a
io.crnk.core.engine.internal.dispatcher.ControllerRegistry -> io.crnk.core.engine.internal.a.a:
    org.slf4j.Logger LOGGER -> a
    java.util.List controllers -> b
    24:30:void <init>(java.util.Collection) -> <init>
    49:55:io.crnk.core.engine.internal.dispatcher.controller.Controller getController(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    22:22:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.dispatcher.controller.BaseController -> io.crnk.core.engine.internal.a.a.a:
    org.slf4j.Logger logger -> a
    io.crnk.core.engine.internal.dispatcher.controller.ControllerContext context -> b
    22:24:void <init>() -> <init>
    30:31:void init(io.crnk.core.engine.internal.dispatcher.controller.ControllerContext) -> a
    48:50:io.crnk.core.engine.dispatcher.Response handle(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> a
    56:64:void verifyTypes(io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.registry.RegistryEntry) -> a
io.crnk.core.engine.internal.dispatcher.controller.CollectionGet -> io.crnk.core.engine.internal.a.a.b:
    21:21:void <init>() -> <init>
    28:30:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    36:60:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> b
    66:70:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> a
    60:60:io.crnk.core.engine.result.Result lambda$handleAsync$0(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> a
io.crnk.core.engine.internal.dispatcher.controller.Controller -> io.crnk.core.engine.internal.a.a.c:
    void init(io.crnk.core.engine.internal.dispatcher.controller.ControllerContext) -> a
    boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    io.crnk.core.engine.dispatcher.Response handle(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> a
    io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> b
io.crnk.core.engine.internal.dispatcher.controller.ControllerContext -> io.crnk.core.engine.internal.a.a.d:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> a
    io.crnk.core.utils.Supplier documentMapper -> b
    24:27:void <init>(io.crnk.core.module.ModuleRegistry,io.crnk.core.utils.Supplier) -> <init>
    30:30:io.crnk.core.engine.filter.ResourceFilterDirectory getResourceFilterDirectory() -> a
    34:34:io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> b
    38:38:io.crnk.core.engine.properties.PropertiesProvider getPropertiesProvider() -> c
    42:42:io.crnk.core.engine.parser.TypeParser getTypeParser() -> d
    46:46:com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> e
    50:50:io.crnk.core.engine.internal.document.mapper.DocumentMapper getDocumentMapper() -> f
    54:54:java.util.List getModificationFilters() -> g
    58:58:io.crnk.core.engine.result.ResultFactory getResultFactory() -> h
io.crnk.core.engine.internal.dispatcher.controller.FieldResourceGet -> io.crnk.core.engine.internal.a.a.e:
    24:24:void <init>() -> <init>
    28:30:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    36:61:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> b
    67:70:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> a
    74:81:java.io.Serializable getResourceId(io.crnk.core.engine.internal.dispatcher.path.PathIds,io.crnk.core.engine.registry.RegistryEntry) -> a
    61:61:io.crnk.core.engine.result.Result lambda$handleAsync$0(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> a
io.crnk.core.engine.internal.dispatcher.controller.FieldResourcePost -> io.crnk.core.engine.internal.a.a.f:
    37:37:void <init>() -> <init>
    41:41:io.crnk.core.engine.http.HttpMethod getHttpMethod() -> a
    46:50:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    57:90:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> b
    95:95:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> a
    99:132:io.crnk.core.engine.result.Result attachToParent(io.crnk.core.repository.response.JsonApiResponse,io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.Document,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.query.QueryAdapter) -> a
    136:144:java.io.Serializable getResourceId(io.crnk.core.engine.internal.dispatcher.path.PathIds,io.crnk.core.engine.registry.RegistryEntry) -> a
    132:132:io.crnk.core.engine.document.Document lambda$attachToParent$4(io.crnk.core.engine.document.Document,io.crnk.core.repository.response.JsonApiResponse) -> a
    89:89:io.crnk.core.engine.result.Result lambda$handleAsync$3(io.crnk.core.engine.result.Result) -> a
    88:88:io.crnk.core.engine.result.Result lambda$handleAsync$2(io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.information.resource.ResourceField,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document,io.crnk.core.repository.response.JsonApiResponse) -> a
    83:83:io.crnk.core.engine.result.Result lambda$handleAsync$1(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> a
    82:82:io.crnk.core.engine.result.Result lambda$handleAsync$0(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,java.util.List) -> a
io.crnk.core.engine.internal.dispatcher.controller.RelationshipsResourceDelete -> io.crnk.core.engine.internal.a.a.g:
    18:18:void <init>() -> <init>
    22:22:io.crnk.core.engine.http.HttpMethod method() -> a
    28:28:io.crnk.core.engine.result.Result processToManyRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> a
    51:51:io.crnk.core.engine.result.Result processToOneRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> a
    52:61:io.crnk.core.engine.result.Result lambda$processToOneRelationship$1(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> a
    29:44:io.crnk.core.engine.result.Result lambda$processToManyRelationship$0(java.lang.Iterable,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> a
io.crnk.core.engine.internal.dispatcher.controller.RelationshipsResourceGet -> io.crnk.core.engine.internal.a.a.h:
    23:23:void <init>() -> <init>
    27:27:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    32:52:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> b
    58:61:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> a
    66:70:java.io.Serializable getResourceId(io.crnk.core.engine.internal.dispatcher.path.PathIds,io.crnk.core.engine.registry.RegistryEntry) -> a
    52:52:io.crnk.core.engine.result.Result lambda$handleAsync$0(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> a
io.crnk.core.engine.internal.dispatcher.controller.RelationshipsResourcePatch -> io.crnk.core.engine.internal.a.a.i:
    18:18:void <init>() -> <init>
    22:22:io.crnk.core.engine.http.HttpMethod method() -> a
    29:29:io.crnk.core.engine.result.Result processToManyRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> a
    54:54:io.crnk.core.engine.result.Result processToOneRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> a
    56:68:io.crnk.core.engine.result.Result lambda$processToOneRelationship$1(io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> a
    30:46:io.crnk.core.engine.result.Result lambda$processToManyRelationship$0(java.lang.Iterable,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> a
io.crnk.core.engine.internal.dispatcher.controller.RelationshipsResourcePost -> io.crnk.core.engine.internal.a.a.j:
    18:18:void <init>() -> <init>
    22:22:io.crnk.core.engine.http.HttpMethod method() -> a
    28:28:io.crnk.core.engine.result.Result processToManyRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> a
    53:53:io.crnk.core.engine.result.Result processToOneRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> a
    54:66:io.crnk.core.engine.result.Result lambda$processToOneRelationship$1(io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> a
    29:46:io.crnk.core.engine.result.Result lambda$processToManyRelationship$0(java.lang.Iterable,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> a
io.crnk.core.engine.internal.dispatcher.controller.RelationshipsResourceUpsert -> io.crnk.core.engine.internal.a.a.k:
    27:27:void <init>() -> <init>
    io.crnk.core.engine.http.HttpMethod method() -> a
    io.crnk.core.engine.result.Result processToManyRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> a
    io.crnk.core.engine.result.Result processToOneRelationship(io.crnk.core.engine.result.Result,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.document.ResourceIdentifier,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> a
    66:69:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    75:106:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> b
    111:117:java.io.Serializable getResourceId(io.crnk.core.engine.internal.dispatcher.path.PathIds,io.crnk.core.engine.registry.RegistryEntry) -> a
    106:106:java.lang.Object lambda$handleAsync$0(java.lang.Object) -> a
io.crnk.core.engine.internal.dispatcher.controller.ResourceDelete -> io.crnk.core.engine.internal.a.a.l:
    22:22:void <init>() -> <init>
    26:28:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    34:57:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> b
    58:59:io.crnk.core.engine.dispatcher.Response lambda$handleAsync$0(io.crnk.core.engine.dispatcher.Response,java.util.List) -> a
io.crnk.core.engine.internal.dispatcher.controller.ResourceGet -> io.crnk.core.engine.internal.a.a.m:
    21:21:void <init>() -> <init>
    31:31:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    41:58:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> b
    63:66:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> a
    57:57:io.crnk.core.engine.result.Result lambda$handleAsync$0(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> a
io.crnk.core.engine.internal.dispatcher.controller.ResourceIncludeField -> io.crnk.core.engine.internal.a.a.n:
    12:12:void <init>() -> <init>
    15:18:void verifyFieldNotNull(io.crnk.core.engine.information.resource.ResourceField,java.lang.String) -> a
    21:24:void assertRequestDocument(io.crnk.core.engine.document.Document,io.crnk.core.engine.http.HttpMethod,java.lang.String) -> a
    27:32:io.crnk.core.engine.registry.RegistryEntry getRegistryEntry(java.lang.String) -> a
io.crnk.core.engine.internal.dispatcher.controller.ResourcePatch -> io.crnk.core.engine.internal.a.a.o:
    29:29:void <init>() -> <init>
    33:33:io.crnk.core.engine.http.HttpMethod getHttpMethod() -> a
    38:40:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    47:75:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> b
    79:79:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> a
    84:108:io.crnk.core.engine.result.Result applyChanges(io.crnk.core.engine.registry.RegistryEntry,java.lang.Object,io.crnk.core.engine.document.Resource,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    113:147:void mergeNestedAttribute(io.crnk.core.engine.document.Resource,io.crnk.core.engine.document.Resource) -> a
    150:153:void checkNotNull(java.lang.Object,io.crnk.core.engine.internal.dispatcher.path.JsonPath) -> a
    157:157:java.util.Map emptyIfNull(java.util.Map) -> a
    162:169:java.lang.String extractAttributesFromResourceAsJson(io.crnk.core.engine.document.Resource) -> b
    175:195:void updateValues(java.util.Map,java.util.Map) -> a
    108:108:io.crnk.core.engine.result.Result lambda$applyChanges$7(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> a
    107:107:void lambda$applyChanges$6(io.crnk.core.repository.response.JsonApiResponse) -> a
    98:98:io.crnk.core.engine.result.Result lambda$applyChanges$5(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,java.util.List) -> a
    73:73:io.crnk.core.engine.result.Result lambda$handleAsync$4(io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.document.Resource,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,java.lang.Object) -> a
    65:71:io.crnk.core.engine.result.Result lambda$handleAsync$3(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.document.Document,io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.engine.document.Resource,io.crnk.core.repository.response.JsonApiResponse) -> a
    71:71:java.lang.Object lambda$handleAsync$2(java.lang.Object,io.crnk.core.engine.document.Resource) -> a
    70:70:void lambda$handleAsync$1(io.crnk.core.engine.document.Resource,io.crnk.core.engine.document.Resource) -> b
    69:69:io.crnk.core.engine.document.Resource lambda$handleAsync$0(io.crnk.core.engine.document.Document) -> b
    29:29:java.lang.String access$000(io.crnk.core.engine.internal.dispatcher.controller.ResourcePatch,io.crnk.core.engine.document.Resource) -> a
    29:29:java.util.Map access$100(io.crnk.core.engine.internal.dispatcher.controller.ResourcePatch,java.util.Map) -> a
    29:29:void access$200(io.crnk.core.engine.internal.dispatcher.controller.ResourcePatch,java.util.Map,java.util.Map) -> a
io.crnk.core.engine.internal.dispatcher.controller.ResourcePatch$1 -> io.crnk.core.engine.internal.a.a.p:
    io.crnk.core.engine.document.Resource val$existingReseource -> a
    io.crnk.core.engine.document.Resource val$requestResource -> b
    io.crnk.core.engine.internal.dispatcher.controller.ResourcePatch this$0 -> c
    113:113:void <init>(io.crnk.core.engine.internal.dispatcher.controller.ResourcePatch,io.crnk.core.engine.document.Resource,io.crnk.core.engine.document.Resource) -> <init>
    116:144:java.lang.Object call() -> call
io.crnk.core.engine.internal.dispatcher.controller.ResourcePost -> io.crnk.core.engine.internal.a.a.q:
    23:23:void <init>() -> <init>
    27:27:io.crnk.core.engine.http.HttpMethod getHttpMethod() -> a
    32:32:boolean isAcceptable(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    39:69:io.crnk.core.engine.result.Result handleAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document) -> b
    73:75:io.crnk.core.engine.dispatcher.Response toResponse(io.crnk.core.engine.document.Document) -> a
    79:89:void validateResponse(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.repository.response.JsonApiResponse) -> a
    68:68:io.crnk.core.engine.result.Result lambda$handleAsync$2(io.crnk.core.engine.internal.document.mapper.DocumentMapper,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.repository.response.JsonApiResponse) -> a
    67:67:void lambda$handleAsync$1(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.repository.response.JsonApiResponse) -> b
    59:59:java.lang.Object lambda$handleAsync$0(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> a
io.crnk.core.engine.internal.dispatcher.controller.ResourceUpsert -> io.crnk.core.engine.internal.a.a.r:
    56:56:void <init>() -> <init>
    59:75:io.crnk.core.engine.document.Resource getRequestBody(io.crnk.core.engine.document.Document,io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.http.HttpMethod) -> a
    79:80:io.crnk.core.engine.registry.RegistryEntry getRegistryEntry(io.crnk.core.engine.internal.dispatcher.path.JsonPath) -> a
    84:85:java.lang.Object newResource(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.document.Resource) -> a
    89:97:void setId(io.crnk.core.engine.document.Resource,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    100:106:java.util.Set getLoadedRelationshipNames(io.crnk.core.engine.document.Resource) -> a
    110:119:void setAttributes(io.crnk.core.engine.document.Resource,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryContext) -> a
    123:158:void setAttribute(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonNode,io.crnk.core.engine.query.QueryContext) -> a
    166:184:boolean canModifyField(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.String,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryContext) -> a
    190:195:io.crnk.core.engine.filter.FilterBehavior getDefaultFilterBehavior() -> b
    io.crnk.core.engine.http.HttpMethod getHttpMethod() -> a
    202:210:java.lang.Object buildNewResource(io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.document.Resource,java.lang.String) -> a
    216:253:io.crnk.core.engine.result.Result setRelationsAsync(java.lang.Object,io.crnk.core.engine.registry.RegistryEntry,io.crnk.core.engine.document.Resource,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,boolean) -> a
    259:312:java.util.Optional setRelationsFieldAsync(java.lang.Object,io.crnk.core.engine.registry.RegistryEntry,java.util.Map$Entry,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    317:317:boolean decideSetRelationObjectsField(io.crnk.core.engine.information.resource.ResourceField) -> a
    324:358:java.util.Optional setRelationFieldAsync(java.lang.Object,io.crnk.core.engine.registry.RegistryEntry,java.lang.String,io.crnk.core.engine.document.Relationship,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    362:363:java.io.Serializable parseId(io.crnk.core.engine.document.ResourceIdentifier,java.lang.Class) -> a
    371:371:boolean decideSetRelationObjectField(io.crnk.core.engine.registry.RegistryEntry,java.io.Serializable,io.crnk.core.engine.information.resource.ResourceField) -> a
    377:378:io.crnk.core.engine.result.Result fetchRelated(io.crnk.core.engine.registry.RegistryEntry,java.io.Serializable,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.query.QueryAdapter) -> a
    353:353:void lambda$setRelationFieldAsync$1(io.crnk.core.engine.information.resource.ResourceField,java.lang.Object,java.lang.Object) -> a
    305:308:void lambda$setRelationsFieldAsync$0(io.crnk.core.engine.information.resource.ResourceField,java.lang.Object,java.util.List) -> a
io.crnk.core.engine.internal.dispatcher.path.ActionPath -> io.crnk.core.engine.internal.a.b.a:
    12:13:void <init>(java.lang.String) -> <init>
    17:17:boolean isCollection() -> a
    22:22:java.lang.String getResourceType() -> b
io.crnk.core.engine.internal.dispatcher.path.FieldPath -> io.crnk.core.engine.internal.a.b.b:
    12:13:void <init>(java.lang.String) -> <init>
    17:17:boolean isCollection() -> a
    22:22:java.lang.String getResourceType() -> b
    27:27:io.crnk.core.engine.internal.dispatcher.path.PathIds getIds() -> c
    32:32:void setIds(io.crnk.core.engine.internal.dispatcher.path.PathIds) -> a
io.crnk.core.engine.internal.dispatcher.path.JsonPath -> io.crnk.core.engine.internal.a.b.c:
    java.lang.String elementName -> a
    io.crnk.core.engine.internal.dispatcher.path.PathIds ids -> b
    io.crnk.core.engine.internal.dispatcher.path.JsonPath parentResource -> c
    33:34:void <init>(java.lang.String) -> <init>
    36:39:void <init>(java.lang.String,io.crnk.core.engine.internal.dispatcher.path.PathIds) -> <init>
    boolean isCollection() -> a
    java.lang.String getResourceType() -> b
    64:64:java.lang.String getElementName() -> d
    68:68:io.crnk.core.engine.internal.dispatcher.path.PathIds getIds() -> c
    72:73:void setIds(io.crnk.core.engine.internal.dispatcher.path.PathIds) -> a
    76:76:io.crnk.core.engine.internal.dispatcher.path.JsonPath getParentResource() -> e
    80:81:void setParentResource(io.crnk.core.engine.internal.dispatcher.path.JsonPath) -> a
    85:94:boolean equals(java.lang.Object) -> equals
    99:99:int hashCode() -> hashCode
    104:116:java.lang.String toString() -> toString
io.crnk.core.engine.internal.dispatcher.path.PathBuilder -> io.crnk.core.engine.internal.a.b.d:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> a
    25:27:void <init>(io.crnk.core.engine.registry.ResourceRegistry) -> <init>
    30:31:io.crnk.core.engine.internal.dispatcher.path.PathIds createPathIds(java.lang.String) -> b
    35:41:java.lang.String[] splitPath(java.lang.String) -> c
    51:72:java.lang.String build(io.crnk.core.engine.internal.dispatcher.path.JsonPath) -> a
    76:76:java.lang.String mergeIds(io.crnk.core.engine.internal.dispatcher.path.PathIds) -> a
    87:173:io.crnk.core.engine.internal.dispatcher.path.JsonPath build(java.lang.String) -> a
    177:193:io.crnk.core.engine.internal.dispatcher.path.JsonPath getNonResourcePath(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String,boolean) -> a
io.crnk.core.engine.internal.dispatcher.path.PathIds -> io.crnk.core.engine.internal.a.b.e:
    java.util.List ids -> a
    14:22:void <init>(java.util.Collection) -> <init>
    25:25:java.util.List getIds() -> a
    30:39:boolean equals(java.lang.Object) -> equals
    45:45:int hashCode() -> hashCode
    50:50:java.lang.String toString() -> toString
io.crnk.core.engine.internal.dispatcher.path.RelationshipsPath -> io.crnk.core.engine.internal.a.b.f:
    12:13:void <init>(java.lang.String) -> <init>
io.crnk.core.engine.internal.dispatcher.path.ResourcePath -> io.crnk.core.engine.internal.a.b.g:
    10:11:void <init>(java.lang.String) -> <init>
    19:19:boolean isCollection() -> a
    24:24:java.lang.String getResourceType() -> b
io.crnk.core.engine.internal.document.mapper.DocumentMapper -> io.crnk.core.engine.internal.b.a.a:
    org.slf4j.Logger LOGGER -> b
    io.crnk.core.engine.filter.ResourceFilterDirectory resourceFilterDirectory -> c
    com.fasterxml.jackson.databind.node.ObjectNode jsonapi -> d
    io.crnk.core.engine.properties.PropertiesProvider propertiesProvider -> a
    io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil util -> e
    io.crnk.core.engine.internal.document.mapper.ResourceMapper resourceMapper -> f
    io.crnk.core.engine.internal.document.mapper.IncludeLookupSetter includeLookupSetter -> g
    io.crnk.core.engine.result.ResultFactory resultFactory -> h
    boolean client -> i
    48:49:void <init>(io.crnk.core.engine.registry.ResourceRegistry,com.fasterxml.jackson.databind.ObjectMapper,io.crnk.core.engine.properties.PropertiesProvider,io.crnk.core.engine.filter.ResourceFilterDirectory,io.crnk.core.engine.result.ResultFactory,java.util.Map) -> <init>
    53:68:void <init>(io.crnk.core.engine.registry.ResourceRegistry,com.fasterxml.jackson.databind.ObjectMapper,io.crnk.core.engine.properties.PropertiesProvider,io.crnk.core.engine.filter.ResourceFilterDirectory,io.crnk.core.engine.result.ResultFactory,java.util.Map,boolean) -> <init>
    72:72:io.crnk.core.engine.internal.document.mapper.IncludeLookupSetter newIncludeLookupSetter(io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.internal.document.mapper.ResourceMapper,io.crnk.core.engine.properties.PropertiesProvider) -> a
    77:77:io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil newDocumentMapperUtil(io.crnk.core.engine.registry.ResourceRegistry,com.fasterxml.jackson.databind.ObjectMapper,io.crnk.core.engine.properties.PropertiesProvider) -> a
    81:81:io.crnk.core.engine.internal.document.mapper.ResourceMapper newResourceMapper(io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil,boolean,com.fasterxml.jackson.databind.ObjectMapper) -> a
    87:105:io.crnk.core.engine.result.Result toDocument(io.crnk.core.repository.response.JsonApiResponse,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig) -> a
    112:125:void compact(io.crnk.core.engine.document.Document,io.crnk.core.engine.query.QueryAdapter) -> a
    128:133:void compact(java.util.List) -> a
    136:144:void compact(io.crnk.core.engine.document.Resource) -> a
    149:153:io.crnk.core.engine.result.Result addRelationDataAndInclusions(io.crnk.core.engine.document.Document,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig) -> a
    158:171:void addData(io.crnk.core.engine.document.Document,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig) -> a
    174:182:void addErrors(io.crnk.core.engine.document.Document,java.lang.Iterable) -> a
    104:104:void lambda$toDocument$0(io.crnk.core.engine.document.Document,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.document.Document) -> a
    28:28:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil -> io.crnk.core.engine.internal.b.a.b:
    org.slf4j.Logger LOGGER -> a
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> b
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> c
    io.crnk.core.engine.internal.utils.SerializerUtil serializerUtil -> d
    50:57:void <init>(io.crnk.core.engine.registry.ResourceRegistry,com.fasterxml.jackson.databind.ObjectMapper,io.crnk.core.engine.properties.PropertiesProvider) -> <init>
    61:68:java.util.List getRequestedFields(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,java.util.List,boolean) -> a
    74:96:java.util.List computeRequestedFields(io.crnk.legacy.queryParams.params.IncludedFieldsParams,boolean,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.information.resource.ResourceInformation,java.util.List) -> a
    100:100:boolean noResourceIncludedFieldsSpecified(io.crnk.legacy.queryParams.params.IncludedFieldsParams) -> a
    105:114:java.util.List toList(java.lang.Object) -> a
    120:123:java.lang.String getRelationshipLink(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,boolean,io.crnk.core.engine.query.QueryContext) -> a
    144:146:java.lang.String getIdString(java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    150:164:void setLinks(io.crnk.core.resource.list.LinksContainer,io.crnk.core.resource.links.LinksInformation,io.crnk.core.engine.query.QueryAdapter) -> a
    167:171:void setMeta(io.crnk.core.resource.meta.MetaContainer,io.crnk.core.resource.meta.MetaInformation) -> a
    174:174:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation(java.lang.Class) -> a
    182:183:java.lang.String getSelfUrl(io.crnk.core.engine.query.QueryContext,io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object) -> a
    187:187:io.crnk.core.engine.internal.utils.SerializerUtil getSerializerUtil() -> a
    41:41:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil$DefaultSelfRelatedLinksInformation -> io.crnk.core.engine.internal.b.a.c:
    java.lang.String self -> a
    191:191:void <init>() -> <init>
    211:211:java.lang.String getSelf() -> a
    216:217:void setSelf(java.lang.String) -> a
io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig -> io.crnk.core.engine.internal.b.a.d:
    java.util.Set fieldsWithEnforceIdSerialization -> a
    io.crnk.legacy.internal.RepositoryMethodParameterProvider parameterProvider -> b
    io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig resourceMapping -> c
    8:14:void <init>() -> <init>
    17:17:io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig create() -> a
    21:21:java.util.Set getFieldsWithEnforcedIdSerialization() -> b
    25:26:io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig setFieldsWithEnforcedIdSerialization(java.util.Set) -> a
    30:30:io.crnk.legacy.internal.RepositoryMethodParameterProvider getParameterProvider() -> c
    34:35:io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig setParameterProvider(io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    39:39:io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig getResourceMapping() -> d
io.crnk.core.engine.internal.document.mapper.IncludeBehavior -> io.crnk.core.engine.internal.b.a.e:
    io.crnk.core.engine.internal.document.mapper.IncludeBehavior PER_TYPE -> a
    io.crnk.core.engine.internal.document.mapper.IncludeBehavior PER_ROOT_PATH -> b
    io.crnk.core.engine.internal.document.mapper.IncludeBehavior[] $VALUES -> c
    8:8:io.crnk.core.engine.internal.document.mapper.IncludeBehavior[] values() -> values
    8:8:io.crnk.core.engine.internal.document.mapper.IncludeBehavior valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:9:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.document.mapper.IncludeLookupSetter -> io.crnk.core.engine.internal.b.a.f:
    org.slf4j.Logger LOGGER -> a
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> b
    io.crnk.core.engine.result.ResultFactory resultFactory -> c
    io.crnk.core.engine.internal.document.mapper.ResourceMapper resourceMapper -> d
    io.crnk.core.engine.internal.document.mapper.IncludeLookupUtil util -> e
    io.crnk.core.engine.internal.document.mapper.IncludeRelationshipLoader relationshipLoader -> f
    boolean allowPagination -> g
    45:59:void <init>(io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.internal.document.mapper.ResourceMapper,io.crnk.core.engine.properties.PropertiesProvider,io.crnk.core.engine.result.ResultFactory) -> <init>
    64:80:io.crnk.core.engine.result.Result processInclusions(io.crnk.core.engine.document.Document,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig) -> a
    92:102:io.crnk.core.engine.result.Result populate(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,java.util.List) -> a
    108:188:io.crnk.core.engine.result.Result populateField(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,java.util.List) -> a
    192:196:void checkNoRecursion(java.util.List) -> a
    205:241:java.util.Set fetchRelationFromEntity(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.List,io.crnk.core.engine.information.resource.ResourceField,boolean,boolean,boolean) -> a
    180:184:io.crnk.core.engine.result.Result lambda$populateField$3(boolean,io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.List,java.util.Set) -> a
    154:154:java.util.Set lambda$populateField$2(java.util.Set,java.util.Set) -> a
    99:99:java.lang.Object lambda$populate$1(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,java.util.List,java.lang.Object) -> a
    81:86:java.lang.Object lambda$processInclusions$0(io.crnk.core.engine.internal.document.mapper.IncludeRequest,io.crnk.core.engine.document.Document,java.lang.Object) -> a
    32:32:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.document.mapper.IncludeLookupUtil -> io.crnk.core.engine.internal.b.a.g:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> a
    io.crnk.core.engine.internal.document.mapper.IncludeBehavior includeBehavior -> b
    36:39:void <init>(io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.internal.document.mapper.IncludeBehavior) -> <init>
    42:47:java.util.List getIds(java.util.Collection,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    51:71:io.crnk.core.resource.annotations.LookupIncludeBehavior getGlolbalLookupIncludeBehavior(io.crnk.core.engine.properties.PropertiesProvider) -> a
    75:79:io.crnk.core.engine.internal.document.mapper.IncludeBehavior getIncludeBehavior(io.crnk.core.engine.properties.PropertiesProvider) -> b
    83:91:java.util.Set getRelationshipFields(java.util.Collection) -> a
    95:115:void process(java.lang.String,java.util.Set,java.util.Set) -> a
    118:123:io.crnk.core.engine.information.resource.ResourceInformation getSuperInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    127:133:java.util.List filterByType(java.util.Collection,io.crnk.core.engine.information.resource.ResourceInformation) -> b
    137:149:boolean isInstance(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.document.Resource) -> a
    153:161:boolean isInclusionRequested(io.crnk.core.engine.query.QueryAdapter,java.util.List) -> a
    166:180:boolean isInclusionRequestedForQueryspec(io.crnk.core.engine.query.QueryAdapter,java.util.List) -> b
    185:196:boolean isInclusionRequestedForQueryParams(io.crnk.core.engine.query.QueryAdapter,java.util.List) -> c
    200:206:boolean contains(io.crnk.legacy.queryParams.params.IncludedRelationsParams,java.lang.String) -> a
    210:215:boolean contains(io.crnk.core.queryspec.QuerySpec,java.util.List) -> a
    219:220:boolean startsWith(io.crnk.core.queryspec.IncludeRelationSpec,java.util.List) -> a
    224:232:java.lang.String toPath(java.util.List,int) -> a
    236:242:java.util.List toPathList(java.util.List,int) -> b
    252:258:java.util.List filterByLoadedRelationship(java.util.List,io.crnk.core.engine.information.resource.ResourceField) -> a
    262:266:java.util.Set toIds(java.util.Set) -> a
    270:274:java.util.List toIds(java.util.List) -> a
    278:285:java.util.Set union(java.util.Collection,java.util.Collection) -> a
    290:297:java.util.List findResourcesWithoutRelationshipToLoad(java.util.List,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.internal.document.mapper.IncludeRequest) -> a
    301:306:boolean isLoaded(io.crnk.core.engine.document.Relationship,io.crnk.core.engine.internal.document.mapper.IncludeRequest) -> a
    310:317:io.crnk.core.engine.document.ResourceIdentifier idToResourceId(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object) -> a
io.crnk.core.engine.internal.document.mapper.IncludePopulatedCache -> io.crnk.core.engine.internal.b.a.h:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> a
    java.util.HashSet processed -> b
    18:22:void <init>(io.crnk.core.engine.registry.ResourceRegistry) -> <init>
    25:27:void markProcessed(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField) -> a
    30:37:java.util.Collection filterProcessed(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> a
    41:42:boolean wasProcessed(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField) -> b
    46:47:java.lang.String getKey(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField) -> c
io.crnk.core.engine.internal.document.mapper.IncludeRelationshipLoader -> io.crnk.core.engine.internal.b.a.i:
    io.crnk.core.engine.result.ResultFactory resultFactory -> a
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> b
    37:40:void <init>(io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.result.ResultFactory) -> <init>
    51:84:io.crnk.core.engine.result.Result lookupRelatedResource(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> a
    88:91:java.util.Set mergeList(java.util.Set,java.util.Set) -> a
    97:151:io.crnk.core.engine.result.Result lookupRelatedResourcesWithId(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> b
    157:178:io.crnk.core.engine.result.Result lookupRelatedResourceWithRelationship(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> c
    179:196:java.util.Set lambda$lookupRelatedResourceWithRelationship$1(java.util.Collection,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.internal.document.mapper.IncludeRequest,io.crnk.core.engine.information.resource.ResourceField,java.util.Map) -> a
    136:147:java.util.Set lambda$lookupRelatedResourcesWithId$0(io.crnk.core.engine.internal.document.mapper.IncludeRequest,java.util.Set,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Set,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.repository.response.JsonApiResponse) -> a
io.crnk.core.engine.internal.document.mapper.IncludeRequest -> io.crnk.core.engine.internal.b.a.j:
    org.slf4j.Logger LOGGER -> a
    io.crnk.core.engine.internal.document.mapper.IncludePopulatedCache populatedCache -> b
    java.util.HashSet inclusions -> c
    java.util.List dataList -> d
    io.crnk.core.engine.query.QueryAdapter queryAdapter -> e
    io.crnk.core.engine.internal.document.mapper.IncludeLookupUtil util -> f
    io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig mappingConfig -> g
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> h
    io.crnk.core.engine.internal.document.mapper.ResourceMapper resourceMapper -> i
    java.util.Map dataMap -> j
    java.util.Map entityMap -> k
    java.util.Map resourceMap -> l
    58:81:void <init>(java.lang.Object,io.crnk.core.engine.document.Document,io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.internal.document.mapper.DocumentMappingConfig,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.IncludeLookupUtil,io.crnk.core.engine.internal.document.mapper.ResourceMapper) -> <init>
    85:86:boolean isInclusionRequest(java.util.List,io.crnk.core.engine.information.resource.ResourceField) -> a
    90:90:java.util.List getDataList() -> a
    95:96:void removeDataFromIncluded() -> b
    100:108:java.util.List getIncluded() -> c
    112:116:boolean isRelationIdSerialized(java.util.List) -> a
    120:120:java.util.Collection filterProcessed(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> a
    124:125:void markForInclusion(java.util.Set) -> a
    128:140:io.crnk.core.engine.document.Resource merge(java.lang.Object) -> a
    145:163:void setupRelationId(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField,java.lang.Object) -> a
    168:182:java.util.List setupRelation(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField,java.lang.Object) -> b
    187:187:io.crnk.legacy.internal.RepositoryMethodParameterProvider getParameterProvider() -> d
    191:191:io.crnk.core.engine.query.QueryAdapter getQueryAdapter() -> e
    195:195:boolean containsResource(io.crnk.core.engine.document.ResourceIdentifier) -> a
    199:199:io.crnk.core.engine.document.Resource getResource(io.crnk.core.engine.document.ResourceIdentifier) -> b
    203:203:java.lang.Object getEntity(io.crnk.core.engine.document.ResourceIdentifier) -> c
    32:32:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.document.mapper.ResourceMapper -> io.crnk.core.engine.internal.b.a.k:
    java.lang.String RELATED_FIELD_NAME -> a
    io.crnk.core.engine.filter.ResourceFilterDirectory resourceFilterDirectory -> b
    io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil util -> c
    boolean client -> d
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> e
    26:42:void <init>(io.crnk.core.engine.internal.document.mapper.DocumentMapperUtil,boolean,com.fasterxml.jackson.databind.ObjectMapper,io.crnk.core.engine.filter.ResourceFilterDirectory) -> <init>
    50:72:io.crnk.core.engine.document.Resource toData(java.lang.Object,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig) -> a
    77:80:io.crnk.core.resource.meta.MetaInformation getResourceMeta(java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    85:96:io.crnk.core.resource.links.LinksInformation getResourceLinks(java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryContext) -> a
    102:112:void setAttributes(io.crnk.core.engine.document.Resource,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter) -> a
    115:115:boolean isIgnored(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryContext) -> a
    119:122:void setAttribute(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField,java.lang.Object) -> a
    126:134:void setRelationships(io.crnk.core.engine.document.Resource,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig) -> a
    139:154:void setRelationship(io.crnk.core.engine.document.Resource,io.crnk.core.engine.information.resource.ResourceField,java.lang.Object,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig) -> a
io.crnk.core.engine.internal.document.mapper.ResourceMappingConfig -> io.crnk.core.engine.internal.b.a.l:
    boolean serializeLinks -> a
    5:7:void <init>() -> <init>
    10:10:boolean getSerializeLinks() -> a
io.crnk.core.engine.internal.exception.CrnkExceptionMapper -> io.crnk.core.engine.internal.exception.CrnkExceptionMapper:
    org.slf4j.Logger LOGGER -> LOGGER
    22:22:void <init>() -> <init>
    29:36:io.crnk.core.engine.error.ErrorResponse toErrorResponse(io.crnk.core.exception.CrnkMappableException) -> toErrorResponse
    41:62:io.crnk.core.exception.CrnkMappableException fromErrorResponse(io.crnk.core.engine.error.ErrorResponse) -> fromErrorResponse
    66:72:java.lang.String getMessage(io.crnk.core.engine.error.ErrorResponse) -> getMessage
    77:78:boolean accepts(io.crnk.core.engine.error.ErrorResponse) -> accepts
    22:22:java.lang.Throwable fromErrorResponse(io.crnk.core.engine.error.ErrorResponse) -> fromErrorResponse
    22:22:io.crnk.core.engine.error.ErrorResponse toErrorResponse(java.lang.Throwable) -> toErrorResponse
    24:24:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.exception.ExceptionMapperLookup -> io.crnk.core.engine.internal.exception.a:
    java.util.Set getExceptionMappers() -> a
io.crnk.core.engine.internal.exception.ExceptionMapperRegistry -> io.crnk.core.engine.internal.exception.b:
    java.util.Set exceptionMappers -> a
    14:16:void <init>(java.util.Set) -> <init>
    23:35:io.crnk.core.utils.Optional findMapperFor(java.lang.Class) -> a
    62:73:int getDistanceBetweenExceptions(java.lang.Class,java.lang.Class) -> a
io.crnk.core.engine.internal.exception.ExceptionMapperRegistryBuilder -> io.crnk.core.engine.internal.exception.c:
    java.util.Set exceptionMappers -> a
    13:14:void <init>() -> <init>
    21:25:io.crnk.core.engine.internal.exception.ExceptionMapperRegistry build(io.crnk.core.engine.internal.exception.ExceptionMapperLookup) -> a
    29:31:void addDefaultMappers() -> a
    34:43:void registerExceptionMapper(io.crnk.core.engine.error.JsonApiExceptionMapper) -> a
    46:47:boolean isProxy(java.lang.Class) -> a
    52:72:java.lang.Class getGenericType(java.lang.Class) -> b
io.crnk.core.engine.internal.exception.ExceptionMapperType -> io.crnk.core.engine.internal.exception.d:
    io.crnk.core.engine.error.JsonApiExceptionMapper exceptionMapper -> a
    java.lang.Class exceptionClass -> b
    12:16:void <init>(java.lang.Class,io.crnk.core.engine.error.JsonApiExceptionMapper) -> <init>
    19:19:java.lang.Class getExceptionClass() -> a
    23:23:io.crnk.core.engine.error.JsonApiExceptionMapper getExceptionMapper() -> b
    28:36:boolean equals(java.lang.Object) -> equals
    41:41:int hashCode() -> hashCode
    46:47:java.lang.String toString() -> toString
io.crnk.core.engine.internal.exception.TimeoutExceptionMapper -> io.crnk.core.engine.internal.exception.TimeoutExceptionMapper:
    org.slf4j.Logger LOGGER -> LOGGER
    11:11:void <init>() -> <init>
    17:19:io.crnk.core.engine.error.ErrorResponse toErrorResponse(java.util.concurrent.TimeoutException) -> toErrorResponse
    24:24:java.util.concurrent.TimeoutException fromErrorResponse(io.crnk.core.engine.error.ErrorResponse) -> fromErrorResponse
    29:30:boolean accepts(io.crnk.core.engine.error.ErrorResponse) -> accepts
    11:11:java.lang.Throwable fromErrorResponse(io.crnk.core.engine.error.ErrorResponse) -> fromErrorResponse
    11:11:io.crnk.core.engine.error.ErrorResponse toErrorResponse(java.lang.Throwable) -> toErrorResponse
    13:13:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.http.DocumentFilterChainImpl -> io.crnk.core.engine.internal.c.a:
    io.crnk.core.module.Module$ModuleContext moduleContext -> c
    int filterIndex -> a
    io.crnk.core.engine.internal.dispatcher.controller.Controller controller -> b
    15:22:void <init>(io.crnk.core.module.Module$ModuleContext,io.crnk.core.engine.internal.dispatcher.controller.Controller) -> <init>
    26:33:io.crnk.core.engine.dispatcher.Response doFilter(io.crnk.core.engine.filter.DocumentFilterContext) -> a
io.crnk.core.engine.internal.http.DocumentFilterContextImpl -> io.crnk.core.engine.internal.c.b:
    io.crnk.core.engine.internal.dispatcher.path.JsonPath jsonPath -> a
    io.crnk.core.engine.query.QueryAdapter queryAdapter -> b
    io.crnk.legacy.internal.RepositoryMethodParameterProvider parameterProvider -> c
    io.crnk.core.engine.document.Document requestBody -> d
    java.lang.String method -> e
    24:30:void <init>(io.crnk.core.engine.internal.dispatcher.path.JsonPath,io.crnk.core.engine.query.QueryAdapter,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document,java.lang.String) -> <init>
    34:34:io.crnk.core.engine.document.Document getRequestBody() -> a
    39:39:io.crnk.legacy.internal.RepositoryMethodParameterProvider getParameterProvider() -> b
    49:49:io.crnk.core.engine.query.QueryAdapter getQueryAdapter() -> d
    54:54:io.crnk.core.engine.internal.dispatcher.path.JsonPath getJsonPath() -> c
io.crnk.core.engine.internal.http.HttpRequestContextBaseAdapter -> io.crnk.core.engine.internal.c.c:
    io.crnk.core.engine.http.HttpRequestContextBase base -> a
    boolean hasResponse -> b
    java.util.Map requestAttributes -> c
    io.crnk.core.engine.query.QueryContext queryContext -> d
    23:31:void <init>(io.crnk.core.engine.http.HttpRequestContextBase) -> <init>
    34:34:boolean hasResponse() -> j
    39:49:boolean accepts(java.lang.String) -> a
    92:93:boolean acceptsAny() -> a
    119:119:io.crnk.core.engine.query.QueryContext getQueryContext() -> b
    123:131:boolean isCompatible(java.lang.String,java.lang.String) -> a
    136:136:io.crnk.legacy.internal.RepositoryMethodParameterProvider getRequestParameterProvider() -> c
    141:141:java.lang.String getRequestHeader(java.lang.String) -> b
    146:146:java.util.Map getRequestParameters() -> d
    151:151:java.lang.String getPath() -> e
    156:156:java.lang.String getBaseUrl() -> f
    161:161:byte[] getRequestBody() -> g
    177:177:java.lang.String getMethod() -> h
    187:187:io.crnk.core.engine.http.HttpResponse getResponse() -> i
    192:193:void setResponse(io.crnk.core.engine.http.HttpResponse) -> a
io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl -> io.crnk.core.engine.internal.c.d:
    io.crnk.core.engine.internal.exception.ExceptionMapperRegistry exceptionMapperRegistry -> a
    org.slf4j.Logger logger -> b
    io.crnk.core.module.ModuleRegistry moduleRegistry -> c
    38:48:void <init>(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.internal.exception.ExceptionMapperRegistry) -> <init>
    52:96:java.util.Optional process(io.crnk.core.engine.http.HttpRequestContextBase) -> a
    120:127:void dispatchAction(java.lang.String,java.lang.String,java.util.Map) -> a
    80:80:void lambda$process$0(io.crnk.core.engine.internal.http.HttpRequestContextBaseAdapter,io.crnk.core.engine.http.HttpResponse) -> a
    33:33:io.crnk.core.module.ModuleRegistry access$000(io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl) -> a
io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl$ActionFilterChain -> io.crnk.core.engine.internal.c.e:
    int filterIndex -> a
    io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl this$0 -> b
    130:132:void <init>(io.crnk.core.engine.internal.http.HttpRequestDispatcherImpl) -> <init>
    137:143:io.crnk.core.engine.dispatcher.Response doFilter(io.crnk.core.engine.filter.DocumentFilterContext) -> a
io.crnk.core.engine.internal.http.JsonApiRequestProcessor -> io.crnk.core.engine.internal.c.f:
    org.slf4j.Logger LOGGER -> d
    44:45:void <init>(io.crnk.core.module.Module$ModuleContext,io.crnk.core.engine.internal.dispatcher.ControllerRegistry,io.crnk.core.engine.query.QueryAdapterBuilder) -> <init>
    57:75:boolean isJsonApiRequest(io.crnk.core.engine.http.HttpRequestContext,boolean) -> a
    81:81:boolean supportsAsync() -> a
    86:91:boolean accepts(io.crnk.core.engine.http.HttpRequestContext) -> a
    96:127:io.crnk.core.engine.result.Result processAsync(io.crnk.core.engine.http.HttpRequestContext) -> c
    131:141:io.crnk.core.engine.result.Result checkMethod(io.crnk.core.engine.http.HttpRequestContext) -> e
    148:171:io.crnk.core.engine.result.Result processAsync(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String,java.util.Map,io.crnk.legacy.internal.RepositoryMethodParameterProvider,io.crnk.core.engine.document.Document,io.crnk.core.engine.query.QueryContext) -> a
    176:188:io.crnk.core.engine.dispatcher.Response toErrorResponse(java.lang.Throwable) -> a
    192:193:io.crnk.core.engine.filter.DocumentFilterChain getFilterChain(io.crnk.core.engine.internal.dispatcher.path.JsonPath,java.lang.String) -> a
    39:39:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.http.JsonApiRequestProcessorBase -> io.crnk.core.engine.internal.c.g:
    org.slf4j.Logger logger -> d
    io.crnk.core.module.Module$ModuleContext moduleContext -> a
    java.lang.Boolean acceptingPlainJson -> e
    io.crnk.core.engine.query.QueryAdapterBuilder queryAdapterBuilder -> b
    io.crnk.core.engine.internal.dispatcher.ControllerRegistry controllerRegistry -> c
    33:48:void <init>(io.crnk.core.module.Module$ModuleContext,io.crnk.core.engine.query.QueryAdapterBuilder,io.crnk.core.engine.internal.dispatcher.ControllerRegistry) -> <init>
    51:55:boolean isAcceptingPlainJson() -> b
    59:62:io.crnk.core.engine.http.HttpResponse getErrorResponse(com.fasterxml.jackson.core.JsonProcessingException) -> a
    66:70:io.crnk.core.engine.http.HttpResponse buildMethodNotAllowedResponse(java.lang.String) -> a
    74:90:io.crnk.core.engine.http.HttpResponse toHttpResponse(io.crnk.core.engine.dispatcher.Response) -> a
    94:105:io.crnk.core.engine.document.Document getRequestDocument(io.crnk.core.engine.http.HttpRequestContext) -> b
    110:116:io.crnk.core.engine.dispatcher.Response buildBadRequestResponse(java.lang.String,java.lang.String) -> a
    121:123:io.crnk.core.engine.internal.dispatcher.path.JsonPath getJsonPath(io.crnk.core.engine.http.HttpRequestContext) -> d
    127:139:io.crnk.core.engine.information.resource.ResourceInformation getRequestedResource(io.crnk.core.engine.internal.dispatcher.path.JsonPath) -> a
io.crnk.core.engine.internal.information.DefaultInformationBuilder -> io.crnk.core.engine.internal.d.a:
    io.crnk.core.engine.parser.TypeParser typeParser -> a
    39:39:io.crnk.core.engine.information.InformationBuilder$Field createResourceField() -> a
    59:59:io.crnk.core.engine.information.InformationBuilder$ResourceRepository createResourceRepository() -> b
    69:73:io.crnk.core.engine.information.InformationBuilder$Resource createResource(java.lang.Class,java.lang.String,java.lang.String) -> a
    402:404:void <init>(io.crnk.core.engine.parser.TypeParser) -> <init>
    33:33:io.crnk.core.engine.parser.TypeParser access$100(io.crnk.core.engine.internal.information.DefaultInformationBuilder) -> a
io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField -> io.crnk.core.engine.internal.d.b:
    java.lang.String jsonName -> b
    java.lang.String underlyingName -> c
    java.lang.Class type -> d
    java.lang.reflect.Type genericType -> e
    java.lang.String oppositeResourceType -> f
    io.crnk.core.resource.annotations.LookupIncludeBehavior lookupIncludeBehavior -> g
    io.crnk.core.engine.information.resource.ResourceFieldType fieldType -> h
    io.crnk.core.resource.annotations.SerializeType serializeType -> i
    java.lang.String oppositeName -> j
    io.crnk.core.engine.information.resource.ResourceFieldAccessor accessor -> k
    java.lang.String idName -> l
    java.lang.Class idType -> m
    io.crnk.core.engine.information.resource.ResourceFieldAccessor idAccessor -> n
    io.crnk.core.engine.information.resource.ResourceFieldAccess access -> o
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior relationshipRepositoryBehavior -> p
    io.crnk.core.engine.internal.information.DefaultInformationBuilder this$0 -> a
    217:247:void <init>(io.crnk.core.engine.internal.information.DefaultInformationBuilder) -> <init>
    251:270:void from(io.crnk.core.engine.information.resource.ResourceField) -> a
    275:291:io.crnk.core.engine.information.resource.ResourceField build() -> a
    304:305:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField relationshipRepositoryBehavior(io.crnk.core.resource.annotations.RelationshipRepositoryBehavior) -> b
    311:312:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField jsonName(java.lang.String) -> f
    317:318:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField underlyingName(java.lang.String) -> g
    323:327:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField type(java.lang.Class) -> c
    332:336:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField genericType(java.lang.reflect.Type) -> b
    341:342:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField serializeType(io.crnk.core.resource.annotations.SerializeType) -> b
    347:348:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField oppositeResourceType(java.lang.String) -> h
    353:354:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField lookupIncludeBehavior(io.crnk.core.resource.annotations.LookupIncludeBehavior) -> b
    359:360:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField fieldType(io.crnk.core.engine.information.resource.ResourceFieldType) -> b
    365:366:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField oppositeName(java.lang.String) -> i
    383:384:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField idName(java.lang.String) -> j
    389:390:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField idType(java.lang.Class) -> d
    396:397:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultField access(io.crnk.core.engine.information.resource.ResourceFieldAccess) -> b
    217:217:io.crnk.core.engine.information.InformationBuilder$Field idType(java.lang.Class) -> b
    217:217:io.crnk.core.engine.information.InformationBuilder$Field idName(java.lang.String) -> e
    217:217:io.crnk.core.engine.information.InformationBuilder$Field access(io.crnk.core.engine.information.resource.ResourceFieldAccess) -> a
    217:217:io.crnk.core.engine.information.InformationBuilder$Field oppositeName(java.lang.String) -> d
    217:217:io.crnk.core.engine.information.InformationBuilder$Field fieldType(io.crnk.core.engine.information.resource.ResourceFieldType) -> a
    217:217:io.crnk.core.engine.information.InformationBuilder$Field lookupIncludeBehavior(io.crnk.core.resource.annotations.LookupIncludeBehavior) -> a
    217:217:io.crnk.core.engine.information.InformationBuilder$Field oppositeResourceType(java.lang.String) -> c
    217:217:io.crnk.core.engine.information.InformationBuilder$Field serializeType(io.crnk.core.resource.annotations.SerializeType) -> a
    217:217:io.crnk.core.engine.information.InformationBuilder$Field genericType(java.lang.reflect.Type) -> a
    217:217:io.crnk.core.engine.information.InformationBuilder$Field type(java.lang.Class) -> a
    217:217:io.crnk.core.engine.information.InformationBuilder$Field underlyingName(java.lang.String) -> b
    217:217:io.crnk.core.engine.information.InformationBuilder$Field jsonName(java.lang.String) -> a
    217:217:io.crnk.core.engine.information.InformationBuilder$Field relationshipRepositoryBehavior(io.crnk.core.resource.annotations.RelationshipRepositoryBehavior) -> a
io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResource -> io.crnk.core.engine.internal.d.c:
    java.util.List fields -> b
    java.lang.Class resourceClass -> c
    java.lang.String resourceType -> d
    java.lang.String resourcePath -> e
    java.lang.String superResourceType -> f
    io.crnk.core.engine.parser.StringMapper idStringMapper -> g
    io.crnk.core.engine.information.resource.ResourceValidator validator -> h
    io.crnk.core.queryspec.pagingspec.PagingBehavior pagingBehavior -> i
    io.crnk.core.engine.internal.information.DefaultInformationBuilder this$0 -> a
    125:127:void <init>(io.crnk.core.engine.internal.information.DefaultInformationBuilder) -> <init>
    145:157:void from(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    172:173:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResource resourceClass(java.lang.Class) -> a
    177:178:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResource resourceType(java.lang.String) -> a
    182:183:io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResource resourcePath(java.lang.String) -> b
    200:213:io.crnk.core.engine.information.resource.ResourceInformation build() -> a
io.crnk.core.engine.internal.information.DefaultInformationBuilder$DefaultResourceRepository -> io.crnk.core.engine.internal.d.d:
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> b
    java.util.Map actions -> c
    io.crnk.core.engine.information.repository.RepositoryMethodAccess access -> d
    io.crnk.core.engine.internal.information.DefaultInformationBuilder this$0 -> a
    92:98:void <init>(io.crnk.core.engine.internal.information.DefaultInformationBuilder) -> <init>
    102:107:void from(io.crnk.core.engine.information.repository.ResourceRepositoryInformation) -> a
    111:112:void setResourceInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    120:120:io.crnk.core.engine.information.repository.ResourceRepositoryInformation build() -> a
io.crnk.core.engine.internal.information.repository.RelationshipRepositoryInformationImpl -> io.crnk.core.engine.internal.d.a.a:
    io.crnk.core.engine.information.repository.RepositoryMethodAccess access -> a
    io.crnk.core.repository.RelationshipMatcher matcher -> b
    15:18:void <init>(io.crnk.core.repository.RelationshipMatcher,io.crnk.core.engine.information.repository.RepositoryMethodAccess) -> <init>
    22:22:io.crnk.core.engine.information.repository.RepositoryMethodAccess getAccess() -> b
    27:27:io.crnk.core.repository.RelationshipMatcher getMatcher() -> a
io.crnk.core.engine.internal.information.repository.ResourceRepositoryInformationImpl -> io.crnk.core.engine.internal.d.a.b:
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> a
    java.lang.String resourceType -> b
    java.lang.String path -> c
    java.util.Map actions -> d
    io.crnk.core.engine.information.repository.RepositoryMethodAccess access -> e
    32:38:void <init>(java.lang.String,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map,io.crnk.core.engine.information.repository.RepositoryMethodAccess) -> <init>
    42:42:io.crnk.core.utils.Optional getResourceInformation() -> a
    47:47:io.crnk.core.engine.information.resource.ResourceInformation getResource() -> c
    62:62:java.util.Map getActions() -> d
    67:67:io.crnk.core.engine.information.repository.RepositoryMethodAccess getAccess() -> b
io.crnk.core.engine.internal.information.resource.AnnotatedClassBuilder -> io.crnk.core.engine.internal.d.b.a:
    32:44:com.fasterxml.jackson.databind.introspect.AnnotatedClass build(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> a
    50:55:com.fasterxml.jackson.databind.introspect.AnnotatedClass buildAnnotatedClass(java.lang.reflect.Method,java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> b
    62:63:com.fasterxml.jackson.databind.introspect.AnnotatedClass buildNewAnnotatedClass(java.lang.reflect.Method,java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> c
    69:71:com.fasterxml.jackson.databind.introspect.AnnotatedClass buildOldAnnotatedClass(java.lang.reflect.Method,java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> d
    21:21:com.fasterxml.jackson.databind.introspect.AnnotatedClass access$000(java.lang.reflect.Method,java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> a
io.crnk.core.engine.internal.information.resource.AnnotatedClassBuilder$1 -> io.crnk.core.engine.internal.d.b.b:
    java.lang.reflect.Method val$method -> a
    java.lang.Class val$declaringClass -> b
    com.fasterxml.jackson.databind.SerializationConfig val$serializationConfig -> c
    36:36:void <init>(java.lang.reflect.Method,java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig) -> <init>
    39:39:com.fasterxml.jackson.databind.introspect.AnnotatedClass call() -> a
    36:36:java.lang.Object call() -> call
io.crnk.core.engine.internal.information.resource.AnnotatedFieldBuilder -> io.crnk.core.engine.internal.d.b.c:
    31:32:com.fasterxml.jackson.databind.introspect.AnnotatedField build(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> a
    43:47:com.fasterxml.jackson.databind.introspect.AnnotatedField buildAnnotatedField(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.reflect.Constructor) -> b
    20:20:com.fasterxml.jackson.databind.introspect.AnnotatedField access$000(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.reflect.Constructor) -> a
io.crnk.core.engine.internal.information.resource.AnnotatedFieldBuilder$1 -> io.crnk.core.engine.internal.d.b.d:
    com.fasterxml.jackson.databind.introspect.AnnotatedClass val$annotatedClass -> a
    java.lang.reflect.Field val$field -> b
    com.fasterxml.jackson.databind.introspect.AnnotationMap val$annotationMap -> c
    java.lang.reflect.Constructor val$constructor -> d
    32:32:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.reflect.Constructor) -> <init>
    35:35:com.fasterxml.jackson.databind.introspect.AnnotatedField call() -> a
    32:32:java.lang.Object call() -> call
io.crnk.core.engine.internal.information.resource.AnnotatedMethodBuilder -> io.crnk.core.engine.internal.d.b.e:
    33:35:com.fasterxml.jackson.databind.introspect.AnnotatedMethod build(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> a
    47:51:com.fasterxml.jackson.databind.introspect.AnnotatedMethod buildAnnotatedField(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[],java.lang.reflect.Constructor) -> b
    20:20:com.fasterxml.jackson.databind.introspect.AnnotatedMethod access$000(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[],java.lang.reflect.Constructor) -> a
io.crnk.core.engine.internal.information.resource.AnnotatedMethodBuilder$1 -> io.crnk.core.engine.internal.d.b.f:
    com.fasterxml.jackson.databind.introspect.AnnotatedClass val$annotatedClass -> a
    java.lang.reflect.Method val$method -> b
    com.fasterxml.jackson.databind.introspect.AnnotationMap val$annotationMap -> c
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] val$paramAnnotations -> d
    java.lang.reflect.Constructor val$constructor -> e
    35:35:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[],java.lang.reflect.Constructor) -> <init>
    38:38:com.fasterxml.jackson.databind.introspect.AnnotatedMethod call() -> a
    35:35:java.lang.Object call() -> call
io.crnk.core.engine.internal.information.resource.DefaultResourceFieldInformationProvider -> io.crnk.core.engine.internal.d.b.g:
    18:18:void <init>() -> <init>
    23:37:io.crnk.core.utils.Optional useFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> j
    43:62:io.crnk.core.utils.Optional getSerializeType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> l
    67:71:io.crnk.core.utils.Optional getRelationshipRepositoryBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> m
    76:92:io.crnk.core.utils.Optional getLookupIncludeBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> k
    97:111:io.crnk.core.utils.Optional getOppositeName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> i
    118:118:void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> a
    122:128:io.crnk.core.utils.Optional isIgnored(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> a
    133:133:io.crnk.core.utils.Optional getJsonName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> b
    138:142:io.crnk.core.utils.Optional isPostable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> c
    147:151:io.crnk.core.utils.Optional isPatchable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> d
    156:160:io.crnk.core.utils.Optional isReadable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> e
    165:169:io.crnk.core.utils.Optional isSortable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> f
    174:178:io.crnk.core.utils.Optional isFilterable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> g
    183:201:io.crnk.core.utils.Optional getFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> h
io.crnk.core.engine.internal.information.resource.DefaultResourceInformationProvider -> io.crnk.core.engine.internal.d.b.h:
    java.util.ArrayList pagingBehaviors -> c
    45:46:void <init>(io.crnk.core.engine.properties.PropertiesProvider,java.util.List,io.crnk.core.engine.information.resource.ResourceFieldInformationProvider[]) -> <init>
    51:55:void <init>(io.crnk.core.engine.properties.PropertiesProvider,java.util.List,java.util.List) -> <init>
    59:60:boolean accept(java.lang.Class) -> a
    65:65:io.crnk.core.engine.information.resource.ResourceInformation build(java.lang.Class) -> b
    69:109:io.crnk.core.engine.information.resource.ResourceInformation build(java.lang.Class,boolean) -> a
    114:114:java.lang.String getResourceType(java.lang.Class) -> c
    123:128:java.lang.String getResourcePath(java.lang.Class,boolean) -> b
    132:143:java.lang.String getResourceType(java.lang.Class,boolean) -> c
    92:92:boolean lambda$build$0(java.lang.Class,io.crnk.core.queryspec.pagingspec.PagingBehavior) -> a
io.crnk.core.engine.internal.information.resource.DefaultResourceInstanceBuilder -> io.crnk.core.engine.internal.d.b.i:
    java.lang.Class resourceClass -> a
    15:17:void <init>(java.lang.Class) -> <init>
    21:21:java.lang.Object buildResource(io.crnk.core.engine.document.Resource) -> a
io.crnk.core.engine.internal.information.resource.RawResourceFieldAccessor -> io.crnk.core.engine.internal.d.b.j:
    io.crnk.core.engine.information.resource.ResourceFieldType fieldType -> a
    java.lang.String fieldName -> b
    java.lang.Class type -> c
    com.fasterxml.jackson.databind.ObjectReader reader -> d
    23:30:void <init>(java.lang.String,io.crnk.core.engine.information.resource.ResourceFieldType,java.lang.Class) -> <init>
    34:52:java.lang.Object getValue(java.lang.Object) -> a
    58:63:java.lang.Object toObject(com.fasterxml.jackson.databind.JsonNode) -> a
    70:70:void setValue(java.lang.Object,java.lang.Object) -> a
io.crnk.core.engine.internal.information.resource.RawResourceFieldAccessor$1 -> io.crnk.core.engine.internal.d.b.k:
    int[] $SwitchMap$io$crnk$core$engine$information$resource$ResourceFieldType -> a
    35:35:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.information.resource.ReflectionFieldAccessor -> io.crnk.core.engine.internal.d.b.l:
    java.lang.reflect.Method getter -> a
    java.lang.reflect.Method setter -> b
    java.lang.reflect.Field field -> c
    java.lang.Class resourceType -> d
    java.lang.String fieldName -> e
    java.lang.Class fieldType -> f
    27:47:void <init>(java.lang.Class,java.lang.String,java.lang.Class) -> <init>
    51:66:java.lang.Object getValue(java.lang.Object) -> a
    71:89:void setValue(java.lang.Object,java.lang.Object) -> a
io.crnk.core.engine.internal.information.resource.ResourceFieldImpl -> io.crnk.core.engine.internal.d.b.m:
    java.lang.String jsonName -> a
    java.lang.String underlyingName -> b
    java.lang.Class type -> c
    java.lang.reflect.Type genericType -> d
    io.crnk.core.resource.annotations.SerializeType serializeType -> e
    java.lang.String oppositeResourceType -> f
    io.crnk.core.resource.annotations.LookupIncludeBehavior lookupIncludeBehavior -> g
    io.crnk.core.engine.information.resource.ResourceFieldType resourceFieldType -> h
    java.lang.String oppositeName -> i
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior relationshipRepositoryBehavior -> j
    io.crnk.core.engine.information.resource.ResourceInformation parentResourceInformation -> k
    io.crnk.core.engine.information.resource.ResourceFieldAccessor accessor -> l
    io.crnk.core.engine.information.resource.ResourceFieldAccess access -> m
    java.lang.String idName -> n
    io.crnk.core.engine.information.resource.ResourceFieldAccessor idAccessor -> o
    java.lang.Class idType -> p
    65:80:void <init>(java.lang.String,java.lang.String,io.crnk.core.engine.information.resource.ResourceFieldType,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.lang.String,io.crnk.core.resource.annotations.SerializeType,io.crnk.core.resource.annotations.LookupIncludeBehavior,io.crnk.core.engine.information.resource.ResourceFieldAccess,java.lang.String,java.lang.Class,io.crnk.core.engine.information.resource.ResourceFieldAccessor,io.crnk.core.resource.annotations.RelationshipRepositoryBehavior) -> <init>
    83:83:io.crnk.core.engine.information.resource.ResourceFieldType getResourceFieldType() -> a
    87:87:io.crnk.core.resource.annotations.RelationshipRepositoryBehavior getRelationshipRepositoryBehavior() -> s
    98:98:io.crnk.core.resource.annotations.LookupIncludeBehavior getLookupIncludeAutomatically() -> b
    105:105:java.lang.String getOppositeName() -> c
    109:109:java.lang.String getJsonName() -> e
    113:113:java.lang.String getUnderlyingName() -> f
    117:121:java.lang.String getOppositeResourceType() -> d
    125:125:java.lang.Class getType() -> g
    129:129:java.lang.reflect.Type getGenericType() -> h
    133:133:io.crnk.core.resource.annotations.SerializeType getSerializeType() -> i
    138:145:boolean equals(java.lang.Object) -> equals
    150:150:int hashCode() -> hashCode
    160:160:java.lang.Class getElementType() -> j
    164:164:io.crnk.core.engine.information.resource.ResourceInformation getParentResourceInformation() -> k
    169:170:io.crnk.core.engine.information.resource.ResourceFieldAccessor getAccessor() -> m
    175:176:boolean hasIdField() -> n
    181:181:java.lang.String getIdName() -> o
    186:187:java.lang.Class getIdType() -> p
    192:193:io.crnk.core.engine.information.resource.ResourceFieldAccessor getIdAccessor() -> q
    203:206:void assertRelationship() -> t
    211:212:void setAccessor(io.crnk.core.engine.information.resource.ResourceFieldAccessor) -> a
    215:228:void setResourceInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    269:276:java.lang.String toString() -> toString
    280:280:boolean isCollection() -> l
    285:285:io.crnk.core.engine.information.resource.ResourceFieldAccess getAccess() -> r
    19:19:java.lang.String access$000(io.crnk.core.engine.internal.information.resource.ResourceFieldImpl) -> a
io.crnk.core.engine.internal.information.resource.ResourceFieldImpl$ResourceFieldAccessorWrapper -> io.crnk.core.engine.internal.d.b.n:
    io.crnk.core.engine.information.resource.ResourceFieldAccessor wrappedAccessor -> a
    234:236:void <init>(io.crnk.core.engine.information.resource.ResourceFieldAccessor) -> <init>
    240:240:java.lang.Object getValue(java.lang.Object) -> a
    245:246:void setValue(java.lang.Object,java.lang.Object) -> a
io.crnk.core.engine.internal.information.resource.ResourceFieldImpl$ResourceIdentifierAccessorAdapter -> io.crnk.core.engine.internal.d.b.o:
    io.crnk.core.engine.internal.information.resource.ResourceFieldImpl this$0 -> b
    251:253:void <init>(io.crnk.core.engine.internal.information.resource.ResourceFieldImpl,io.crnk.core.engine.information.resource.ResourceFieldAccessor) -> <init>
    257:264:void setValue(java.lang.Object,java.lang.Object) -> a
io.crnk.core.engine.internal.information.resource.ResourceInformationProviderBase -> io.crnk.core.engine.internal.d.b.p:
    io.crnk.core.engine.information.resource.ResourceInformationProviderContext context -> a
    java.util.List resourceFieldInformationProviders -> b
    io.crnk.core.resource.annotations.LookupIncludeBehavior globalLookupIncludeBehavior -> c
    45:48:void <init>(io.crnk.core.engine.properties.PropertiesProvider,java.util.List) -> <init>
    52:57:void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> a
    60:77:java.util.List getResourceFields(java.lang.Class) -> d
    81:91:void verifyRelationIdFields(java.lang.Class,java.util.Set,java.util.List) -> a
    95:147:void buildResourceField(io.crnk.core.engine.information.bean.BeanInformation,io.crnk.core.engine.information.bean.BeanAttributeInformation,io.crnk.core.engine.information.InformationBuilder$Field) -> a
    150:157:io.crnk.core.resource.annotations.RelationshipRepositoryBehavior getRelationshipRepositoryBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> a
    161:166:java.lang.String getResourceType(java.lang.reflect.Type,io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> a
    171:177:boolean useFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> c
    181:187:io.crnk.core.resource.annotations.SerializeType getSerializeType(io.crnk.core.engine.information.bean.BeanAttributeInformation,io.crnk.core.engine.information.resource.ResourceFieldType) -> a
    191:213:io.crnk.core.resource.annotations.LookupIncludeBehavior getLookupIncludeBehavior(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> b
    217:217:io.crnk.core.resource.annotations.LookupIncludeBehavior getDefaultLookupIncludeBehavior() -> a
    221:226:io.crnk.core.engine.information.resource.ResourceFieldAccess getAccess(io.crnk.core.engine.information.bean.BeanAttributeInformation,io.crnk.core.engine.information.resource.ResourceFieldType) -> b
    230:236:boolean isSortable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> d
    240:246:boolean isFilterable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> e
    250:259:boolean isPatchable(io.crnk.core.engine.information.bean.BeanAttributeInformation,io.crnk.core.engine.information.resource.ResourceFieldType) -> c
    263:272:boolean isPostable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> f
    276:282:boolean isReadable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> g
    286:288:boolean isReadOnly(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> h
    293:299:boolean isIgnored(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> i
    304:310:io.crnk.core.engine.information.resource.ResourceFieldType getFieldType(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> j
    314:320:java.lang.String getJsonName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> k
    324:330:java.lang.String getOppositeName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> l
io.crnk.core.engine.internal.jackson.DocumentDataDeserializer -> io.crnk.core.engine.internal.e.a:
    19:29:io.crnk.core.utils.Nullable deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    35:35:io.crnk.core.utils.Nullable getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> c
    15:15:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
    15:15:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
io.crnk.core.engine.internal.jackson.ErrorDataDeserializer -> io.crnk.core.engine.internal.e.b:
    16:16:void <init>() -> <init>
    20:24:java.util.Map readMeta(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.core.JsonParser) -> a
    28:32:java.lang.String readSourcePointer(com.fasterxml.jackson.databind.JsonNode) -> a
    36:40:java.lang.String readSourceParameter(com.fasterxml.jackson.databind.JsonNode) -> b
    44:48:java.lang.String readAboutLink(com.fasterxml.jackson.databind.JsonNode) -> c
    53:63:io.crnk.core.engine.document.ErrorData deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    16:16:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
io.crnk.core.engine.internal.jackson.ErrorDataSerializer -> io.crnk.core.engine.internal.e.c:
    15:15:void <init>() -> <init>
    30:33:void writeMeta(io.crnk.core.engine.document.ErrorData,com.fasterxml.jackson.core.JsonGenerator) -> a
    36:42:void writeSource(io.crnk.core.engine.document.ErrorData,com.fasterxml.jackson.core.JsonGenerator) -> b
    45:52:void writeAboutLink(io.crnk.core.engine.document.ErrorData,com.fasterxml.jackson.core.JsonGenerator) -> c
    58:68:void serialize(io.crnk.core.engine.document.ErrorData,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    72:72:java.lang.Class handledType() -> a
    15:15:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
io.crnk.core.engine.internal.jackson.JacksonModule -> io.crnk.core.engine.internal.e.d:
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> a
    boolean serializeLinksAsObjects -> b
    18:21:void <init>(com.fasterxml.jackson.databind.ObjectMapper,boolean) -> <init>
    30:31:void setupModule(io.crnk.core.module.Module$ModuleContext) -> a
    53:60:com.fasterxml.jackson.databind.module.SimpleModule createJacksonModule(boolean) -> a
io.crnk.core.engine.internal.jackson.JacksonResourceFieldInformationProvider -> io.crnk.core.engine.internal.e.e:
    29:29:void <init>() -> <init>
    34:38:io.crnk.core.utils.Optional isIgnored(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> a
    43:43:io.crnk.core.utils.Optional isPostable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> c
    48:48:io.crnk.core.utils.Optional isPatchable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> d
    53:53:io.crnk.core.utils.Optional isReadable(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> e
    57:57:io.crnk.core.utils.Optional isReadOnly(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> n
    61:71:io.crnk.core.utils.Optional isAccessible(io.crnk.core.engine.information.bean.BeanAttributeInformation,com.fasterxml.jackson.annotation.JsonProperty$Access) -> a
    76:96:io.crnk.core.utils.Optional getJsonName(io.crnk.core.engine.information.bean.BeanAttributeInformation) -> b
    100:104:com.fasterxml.jackson.databind.introspect.AnnotationMap buildAnnotationMap(java.lang.annotation.Annotation[]) -> a
    108:118:io.crnk.core.utils.Optional getName(java.lang.reflect.Field) -> a
    122:140:io.crnk.core.utils.Optional getName(java.lang.reflect.Method) -> a
io.crnk.core.engine.internal.jackson.LinksInformationSerializer -> io.crnk.core.engine.internal.e.f:
    16:16:void <init>() -> <init>
    22:43:void serialize(io.crnk.core.resource.links.LinksInformation,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    47:47:java.lang.Class handledType() -> a
    16:16:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
io.crnk.core.engine.internal.jackson.NullableSerializer -> io.crnk.core.engine.internal.e.g:
    14:22:void serialize(io.crnk.core.utils.Nullable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    26:26:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,io.crnk.core.utils.Nullable) -> a
    10:10:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> a
    10:10:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
io.crnk.core.engine.internal.jackson.RelationshipDataDeserializer -> io.crnk.core.engine.internal.e.h:
    19:29:io.crnk.core.utils.Nullable deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> b
    35:35:io.crnk.core.utils.Nullable getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> c
    15:15:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> a
    15:15:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder -> io.crnk.core.engine.internal.f.a:
    org.slf4j.Logger LOGGER -> a
    io.crnk.core.engine.internal.information.DefaultInformationBuilder informationBuilder -> b
    io.crnk.core.module.ModuleRegistry moduleRegistry -> c
    io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultResourceRepository resourceRepository -> d
    java.util.Map relationshipRepositoryMap -> e
    io.crnk.core.engine.information.InformationBuilder$Resource resource -> f
    61:68:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    119:131:void fromImplementation(java.lang.Object) -> a
    136:139:io.crnk.core.engine.registry.RegistryEntryBuilder$ResourceRepository resourceRepository() -> a
    144:147:io.crnk.core.engine.information.InformationBuilder$Resource resource() -> b
    162:178:io.crnk.core.engine.registry.RegistryEntry build() -> c
    183:183:boolean isLegacy() -> d
    187:187:boolean isLegacy(java.lang.Object) -> c
    191:199:void checkRelationshipNaming(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    203:215:java.util.Map buildRelationshipAdapters(io.crnk.core.engine.information.resource.ResourceInformation) -> b
    220:232:java.util.Map buildRelationships(io.crnk.core.engine.information.resource.ResourceInformation) -> c
    236:254:io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship findMatchedRelationship(io.crnk.core.engine.information.resource.ResourceField) -> a
    258:282:io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship findRelationshipMatch(io.crnk.core.engine.information.resource.ResourceField) -> b
    286:288:io.crnk.core.engine.information.resource.ResourceInformation buildResource() -> e
    293:319:void contributeFields(io.crnk.core.engine.information.resource.ResourceInformation) -> d
    324:340:io.crnk.core.engine.registry.ResourceEntry buildResourceRepository(io.crnk.core.engine.information.resource.ResourceInformation) -> e
    345:391:io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship setupImplicitRelationshipRepository(io.crnk.core.engine.information.resource.ResourceField) -> c
    397:407:java.lang.Object decorateRepository(java.lang.Object) -> b
    478:498:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter buildResourceRepositoryAdapter(io.crnk.core.engine.information.resource.ResourceInformation) -> f
    51:51:io.crnk.core.engine.internal.information.DefaultInformationBuilder access$000(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder) -> a
    51:51:io.crnk.core.module.ModuleRegistry access$600(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder) -> b
    53:53:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$1 -> io.crnk.core.engine.internal.f.b:
    io.crnk.core.engine.information.resource.ResourceInformation val$resourceInformation -> a
    io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder this$0 -> b
    303:303:void <init>(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder,io.crnk.core.engine.information.resource.ResourceInformation) -> <init>
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$2 -> io.crnk.core.engine.internal.f.c:
    java.lang.Object val$decoratedRepository -> a
    io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder this$0 -> b
    329:329:void <init>(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder,io.crnk.legacy.locator.JsonServiceLocator,java.lang.Class,java.lang.Object) -> <init>
    333:333:java.lang.Object buildRepository() -> a
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultRelationshipRepository -> io.crnk.core.engine.internal.f.d:
    io.crnk.core.engine.information.InformationBuilder$RelationshipRepository information -> a
    java.lang.Object instance -> b
    92:92:io.crnk.core.engine.information.InformationBuilder$RelationshipRepository access$400(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultRelationshipRepository) -> a
    92:92:java.lang.Object access$500(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultRelationshipRepository) -> b
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultResourceRepository -> io.crnk.core.engine.internal.f.e:
    java.lang.Object instance -> b
    io.crnk.core.engine.information.InformationBuilder$ResourceRepository information -> c
    io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder this$0 -> a
    77:79:void <init>(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder) -> <init>
    83:83:io.crnk.core.engine.information.InformationBuilder$ResourceRepository information() -> a
    88:89:void instance(java.lang.Object) -> a
    71:71:java.lang.Object access$100(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$DefaultResourceRepository) -> a
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship -> io.crnk.core.engine.internal.f.f:
    io.crnk.core.engine.information.resource.ResourceField relationshipField -> b
    io.crnk.core.engine.information.repository.RelationshipRepositoryInformation relationshipRepositoryInformation -> c
    java.lang.Object relRepository -> d
    io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder this$0 -> a
    420:424:void <init>(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,java.lang.Object) -> <init>
    430:444:io.crnk.core.engine.registry.ResponseRelationshipEntry getLegacyEntry() -> a
    455:471:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter getAdapter() -> b
    411:411:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter access$200(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship) -> a
    411:411:io.crnk.core.engine.registry.ResponseRelationshipEntry access$300(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship) -> b
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship$1 -> io.crnk.core.engine.internal.f.g:
    java.lang.Object val$decoratedRepository -> a
    io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship this$1 -> b
    432:432:void <init>(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship,io.crnk.legacy.locator.JsonServiceLocator,java.lang.Class,java.lang.Object) -> <init>
    436:436:java.lang.Object buildRepository() -> a
io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship$2 -> io.crnk.core.engine.internal.f.h:
    java.lang.String val$targetResourceType -> a
    io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship this$1 -> b
    444:444:void <init>(io.crnk.core.engine.internal.registry.DefaultRegistryEntryBuilder$MatchedRelationship,io.crnk.legacy.registry.RepositoryInstanceBuilder,java.lang.String) -> <init>
io.crnk.core.engine.internal.registry.LegacyRegistryEntry -> io.crnk.core.engine.internal.f.i:
    io.crnk.core.engine.registry.ResourceEntry resourceEntry -> a
    java.util.Map relationshipEntries -> b
    io.crnk.core.engine.registry.RegistryEntry parentRegistryEntry -> c
    io.crnk.core.module.ModuleRegistry moduleRegistry -> d
    45:58:void <init>(io.crnk.core.engine.registry.ResourceEntry,java.util.Map) -> <init>
    61:63:void initialize(io.crnk.core.module.ModuleRegistry) -> a
    67:79:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter getResourceRepository(io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    94:111:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter getRelationshipRepository(io.crnk.core.engine.information.resource.ResourceField,io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    115:115:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> a
    119:119:io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> b
    123:129:io.crnk.core.engine.registry.RegistryEntry getParentRegistryEntry() -> c
    148:155:boolean isParent(io.crnk.core.engine.registry.RegistryEntry) -> a
    164:164:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter getResourceRepository() -> d
io.crnk.core.engine.internal.registry.RegistryEntryImpl -> io.crnk.core.engine.internal.f.j:
    org.slf4j.Logger LOGGER -> a
    io.crnk.core.engine.registry.RegistryEntry parentRegistryEntry -> b
    io.crnk.core.module.ModuleRegistry moduleRegistry -> c
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter resourceRepositoryAdapter -> d
    java.util.Map relationshipRepositoryAdapter -> e
    33:49:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter,java.util.Map,io.crnk.core.module.ModuleRegistry) -> <init>
    53:53:java.lang.String toString() -> toString
    58:58:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter getResourceRepository(io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    74:79:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter getRelationshipRepository(io.crnk.core.engine.information.resource.ResourceField,io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    84:84:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> a
    89:89:io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> b
    94:100:io.crnk.core.engine.registry.RegistryEntry getParentRegistryEntry() -> c
    119:126:boolean isParent(io.crnk.core.engine.registry.RegistryEntry) -> a
    135:135:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter getResourceRepository() -> d
    31:31:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.registry.ResourceRegistryImpl -> io.crnk.core.engine.internal.f.k:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> a
    java.util.concurrent.ConcurrentHashMap baseTypeCache -> b
    io.crnk.core.engine.registry.ResourceRegistryPart rootPart -> c
    io.crnk.core.engine.registry.ResourceRegistryPartListener rootListener -> d
    27:44:void <init>(io.crnk.core.engine.registry.ResourceRegistryPart,io.crnk.core.module.ModuleRegistry) -> <init>
    57:63:io.crnk.core.engine.registry.RegistryEntry findEntry(java.lang.Class,boolean) -> a
    74:74:io.crnk.core.engine.registry.RegistryEntry findEntry(java.lang.Class) -> a
    78:86:io.crnk.core.utils.Optional getResourceClass(java.lang.Class) -> b
    90:90:io.crnk.core.engine.url.ServiceUrlProvider getServiceUrlProvider() -> a
    98:98:io.crnk.core.engine.registry.RegistryEntry getEntryForClass(java.lang.Class) -> c
    136:138:java.lang.String getResourceUrl(io.crnk.core.engine.query.QueryContext,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    169:184:io.crnk.core.engine.information.resource.ResourceInformation getBaseResourceInformation(java.lang.String) -> a
    189:189:io.crnk.core.engine.registry.RegistryEntry addEntry(io.crnk.core.engine.registry.RegistryEntry) -> a
    194:194:boolean hasEntry(java.lang.Class) -> d
    199:199:boolean hasEntry(java.lang.String) -> b
    204:204:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.String) -> c
    209:209:java.util.Collection getResources() -> b
    214:214:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.Class) -> e
    218:225:void setRootPart(io.crnk.core.engine.registry.ResourceRegistryPart) -> a
    23:23:void access$000(io.crnk.core.engine.internal.registry.ResourceRegistryImpl) -> a
io.crnk.core.engine.internal.registry.ResourceRegistryImpl$1 -> io.crnk.core.engine.internal.f.l:
    io.crnk.core.engine.internal.registry.ResourceRegistryImpl this$0 -> a
    31:31:void <init>(io.crnk.core.engine.internal.registry.ResourceRegistryImpl) -> <init>
    34:35:void onChanged(io.crnk.core.engine.registry.ResourceRegistryPartEvent) -> a
io.crnk.core.engine.internal.repository.DefaultRepositoryAdapterFactory -> io.crnk.core.engine.internal.g.a:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> a
    20:22:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    26:30:boolean accepts(java.lang.Object) -> a
    35:35:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter createResourceRepositoryAdapter(io.crnk.core.engine.information.repository.ResourceRepositoryInformation,java.lang.Object) -> a
    40:40:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter createRelationshipRepositoryAdapter(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,java.lang.Object) -> a
    45:45:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter) -> a
    50:50:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> a
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter -> io.crnk.core.engine.internal.g.b:
    io.crnk.core.engine.result.Result setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    io.crnk.core.engine.result.Result setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    io.crnk.core.engine.result.Result addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    io.crnk.core.engine.result.Result removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> c
    io.crnk.core.engine.result.Result findOneTarget(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    io.crnk.core.engine.result.Result findManyTargets(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    io.crnk.core.engine.result.Result findBulkManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    io.crnk.core.engine.result.Result findBulkOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    java.lang.Object getRelationshipRepository() -> a
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl -> io.crnk.core.engine.internal.g.c:
    java.lang.Object relationshipRepository -> b
    boolean isAnnotated -> c
    io.crnk.core.engine.information.resource.ResourceField field -> d
    41:45:void <init>(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.module.ModuleRegistry,java.lang.Object) -> <init>
    49:71:io.crnk.core.engine.result.Result setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    77:100:io.crnk.core.engine.result.Result setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    106:129:io.crnk.core.engine.result.Result addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    135:159:io.crnk.core.engine.result.Result removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> c
    164:193:io.crnk.core.engine.result.Result findOneTarget(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    197:226:io.crnk.core.engine.result.Result findManyTargets(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    232:261:io.crnk.core.engine.result.Result findBulkManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    269:299:io.crnk.core.engine.result.Result findBulkOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    306:319:java.util.Map toResponses(io.crnk.core.engine.internal.utils.MultivaluedMap,boolean,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod) -> a
    323:323:java.lang.Object getRelationshipRepository() -> a
    32:32:boolean access$000(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> a
    32:32:java.lang.Object access$100(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> b
    32:32:java.util.Map access$200(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl,io.crnk.core.engine.internal.utils.MultivaluedMap,boolean,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod) -> a
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$1 -> io.crnk.core.engine.internal.g.d:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> a
    49:49:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    53:66:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$2 -> io.crnk.core.engine.internal.g.e:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> a
    77:77:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    81:95:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$3 -> io.crnk.core.engine.internal.g.f:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> a
    106:106:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    110:124:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$4 -> io.crnk.core.engine.internal.g.g:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> a
    135:135:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    139:154:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$5 -> io.crnk.core.engine.internal.g.h:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> a
    164:164:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    168:188:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$6 -> io.crnk.core.engine.internal.g.i:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> a
    197:197:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    201:221:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$7 -> io.crnk.core.engine.internal.g.j:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> a
    233:233:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    237:248:java.util.Map invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl$8 -> io.crnk.core.engine.internal.g.k:
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl this$0 -> a
    271:271:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapterImpl) -> <init>
    275:286:java.util.Map invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.RepositoryAdapterFactory -> io.crnk.core.engine.internal.g.l:
    boolean accepts(java.lang.Object) -> a
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter createResourceRepositoryAdapter(io.crnk.core.engine.information.repository.ResourceRepositoryInformation,java.lang.Object) -> a
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter createRelationshipRepositoryAdapter(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,java.lang.Object) -> a
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter) -> a
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> a
io.crnk.core.engine.internal.repository.RepositoryAdapterUtils -> io.crnk.core.engine.internal.g.m:
    20:31:io.crnk.core.resource.links.LinksInformation enrichLinksInformation(io.crnk.core.module.ModuleRegistry,io.crnk.core.resource.links.LinksInformation,java.lang.Object,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> a
    37:47:io.crnk.core.resource.links.LinksInformation enrichPageLinksInformation(io.crnk.core.module.ModuleRegistry,io.crnk.core.resource.links.LinksInformation,io.crnk.core.resource.list.ResourceList,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> a
io.crnk.core.engine.internal.repository.RepositoryRequestSpecImpl -> io.crnk.core.engine.internal.g.n:
    io.crnk.core.engine.information.resource.ResourceField relationshipField -> a
    io.crnk.core.engine.query.QueryAdapter queryAdapter -> b
    java.lang.Iterable ids -> c
    java.lang.Object entity -> d
    io.crnk.core.module.ModuleRegistry moduleRegistry -> e
    io.crnk.core.engine.http.HttpMethod method -> f
    io.crnk.core.engine.information.resource.ResourceInformation owningResourceInformation -> g
    43:46:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    50:55:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forDelete(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,java.io.Serializable) -> a
    61:66:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forSave(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,java.lang.Object) -> a
    71:76:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forFindIds(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,java.lang.Iterable) -> a
    81:85:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forFindAll(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter) -> a
    90:95:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forFindId(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.query.QueryAdapter,java.io.Serializable) -> b
    101:108:io.crnk.core.engine.dispatcher.RepositoryRequestSpec forFindTarget(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.query.QueryAdapter,java.util.List,io.crnk.core.engine.information.resource.ResourceField) -> a
    113:121:io.crnk.core.engine.internal.repository.RepositoryRequestSpecImpl forRelation(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.http.HttpMethod,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,java.lang.Iterable,io.crnk.core.engine.information.resource.ResourceField) -> a
    126:126:io.crnk.core.engine.http.HttpMethod getMethod() -> a
    131:131:io.crnk.core.engine.query.QueryAdapter getQueryAdapter() -> b
    136:136:io.crnk.core.engine.information.resource.ResourceField getRelationshipField() -> d
    141:142:io.crnk.core.queryspec.QuerySpec getResponseQuerySpec() -> e
    147:153:io.crnk.core.engine.information.resource.ResourceInformation getResponseResourceInformation() -> f
    163:170:io.crnk.core.queryspec.QuerySpec getQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    175:175:io.crnk.legacy.queryParams.QueryParams getQueryParams() -> c
    180:187:java.io.Serializable getId() -> h
    193:197:java.lang.Iterable getIds() -> i
    202:202:java.lang.Object getEntity() -> g
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter -> io.crnk.core.engine.internal.g.o:
    io.crnk.core.engine.result.Result findOne(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> a
    io.crnk.core.engine.result.Result findAll(io.crnk.core.engine.query.QueryAdapter) -> a
    io.crnk.core.engine.result.Result findAll(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> a
    io.crnk.core.engine.result.Result update(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> b
    io.crnk.core.engine.result.Result create(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> c
    io.crnk.core.engine.result.Result delete(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> d
    java.lang.Object getResourceRepository() -> a
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> b
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl -> io.crnk.core.engine.internal.g.p:
    java.lang.Object resourceRepository -> b
    boolean isAnnotated -> c
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation repositoryInformation -> d
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> e
    boolean return404OnNull -> f
    39:46:void <init>(io.crnk.core.engine.information.repository.ResourceRepositoryInformation,io.crnk.core.module.ModuleRegistry,java.lang.Object) -> <init>
    51:51:io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> b
    56:82:io.crnk.core.engine.result.Result findOne(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> a
    87:109:io.crnk.core.engine.result.Result findAll(io.crnk.core.engine.query.QueryAdapter) -> a
    114:137:io.crnk.core.engine.result.Result findAll(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> a
    142:142:io.crnk.core.engine.result.Result update(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> b
    147:147:io.crnk.core.engine.result.Result create(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> c
    151:177:io.crnk.core.engine.result.Result save(java.lang.Object,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.http.HttpMethod) -> a
    182:202:io.crnk.core.engine.result.Result delete(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> d
    206:206:java.lang.Object getResourceRepository() -> a
    26:26:boolean access$000(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> a
    26:26:java.lang.Object access$100(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> b
    26:26:io.crnk.core.engine.information.resource.ResourceInformation access$200(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> c
    26:26:boolean access$300(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> d
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$1 -> io.crnk.core.engine.internal.g.q:
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl this$0 -> a
    56:56:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> <init>
    61:76:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$2 -> io.crnk.core.engine.internal.g.r:
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl this$0 -> a
    87:87:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> <init>
    92:103:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$3 -> io.crnk.core.engine.internal.g.s:
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl this$0 -> a
    114:114:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> <init>
    119:131:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$4 -> io.crnk.core.engine.internal.g.t:
    io.crnk.core.engine.http.HttpMethod val$method -> a
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl this$0 -> b
    151:151:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl,io.crnk.core.engine.http.HttpMethod) -> <init>
    156:171:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl$5 -> io.crnk.core.engine.internal.g.u:
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl this$0 -> a
    182:182:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapterImpl) -> <init>
    187:197:io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter -> io.crnk.core.engine.internal.g.v:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> a
    50:53:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    57:58:java.lang.Iterable filterResult(java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> a
    62:91:io.crnk.core.repository.response.JsonApiResponse getResponse(java.lang.Object,java.lang.Object,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> a
    95:96:io.crnk.core.resource.meta.MetaInformation getMetaInformation(java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> a
    101:115:io.crnk.core.resource.meta.MetaInformation doGetMetaInformation(java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> b
    119:120:io.crnk.core.resource.links.LinksInformation getLinksInformation(java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> c
    124:124:io.crnk.core.engine.filter.RepositoryFilterContext newRepositoryFilterContext(io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> a
    136:158:io.crnk.core.resource.links.LinksInformation doGetLinksInformation(java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> d
    45:45:io.crnk.core.resource.meta.MetaInformation access$000(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> a
    45:45:io.crnk.core.resource.links.LinksInformation access$100(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,java.lang.Object,java.lang.Iterable,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> b
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$1 -> io.crnk.core.engine.internal.g.w:
    io.crnk.core.engine.dispatcher.RepositoryRequestSpec val$requestSpec -> a
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> b
    124:124:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> <init>
    128:128:io.crnk.core.engine.dispatcher.RepositoryRequestSpec getRequest() -> a
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryBulkRequestFilterChainImpl -> io.crnk.core.engine.internal.g.x:
    int filterIndex -> b
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> c
    265:267:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter) -> <init>
    271:277:java.util.Map doFilter(io.crnk.core.engine.filter.RepositoryFilterContext) -> b
    java.util.Map invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryLinksFilterChainImpl -> io.crnk.core.engine.internal.g.y:
    int filterIndex -> a
    java.lang.Object repository -> c
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> b
    186:192:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,java.lang.Object) -> <init>
    196:202:io.crnk.core.resource.links.LinksInformation doFilter(io.crnk.core.engine.filter.RepositoryFilterContext,java.lang.Iterable) -> a
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryMetaFilterChainImpl -> io.crnk.core.engine.internal.g.z:
    int filterIndex -> a
    java.lang.Object repository -> c
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> b
    163:169:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,java.lang.Object) -> <init>
    173:179:io.crnk.core.resource.meta.MetaInformation doFilter(io.crnk.core.engine.filter.RepositoryFilterContext,java.lang.Iterable) -> a
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryRequestFilterChainImpl -> io.crnk.core.engine.internal.g.A:
    int filterIndex -> c
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> d
    230:232:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter) -> <init>
    236:245:io.crnk.core.repository.response.JsonApiResponse doFilter(io.crnk.core.engine.filter.RepositoryFilterContext) -> b
    250:260:void checkResourceAccess(io.crnk.core.engine.filter.RepositoryFilterContext) -> c
    io.crnk.core.repository.response.JsonApiResponse invoke(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter$RepositoryResultFilterChainImpl -> io.crnk.core.engine.internal.g.B:
    int filterIndex -> a
    java.lang.Iterable result -> c
    io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter this$0 -> b
    209:215:void <init>(io.crnk.core.engine.internal.repository.ResponseRepositoryAdapter,java.lang.Iterable) -> <init>
    219:225:java.lang.Iterable doFilter(io.crnk.core.engine.filter.RepositoryFilterContext) -> a
io.crnk.core.engine.internal.utils.CastableInformation -> io.crnk.core.engine.internal.h.a:
    java.lang.Object as(java.lang.Class) -> a
io.crnk.core.engine.internal.utils.ClassUtils -> io.crnk.core.engine.internal.h.b:
    java.util.Map primitiveWrapperMap -> a
    java.util.Map wrapperPrimitiveMap -> b
    82:99:java.util.List getClassFields(java.lang.Class) -> a
    111:119:io.crnk.core.utils.Optional getAnnotation(java.lang.Class,java.lang.Class) -> a
    130:144:java.lang.reflect.Field findClassField(java.lang.Class,java.lang.String) -> a
    148:157:java.lang.reflect.Method findGetter(java.lang.Class,java.lang.String) -> b
    162:167:java.lang.String getGetterFieldName(java.lang.reflect.Method) -> a
    172:174:boolean isValidBeanGetter(java.lang.reflect.Method) -> c
    178:199:int getPropertyGetterPrefixLength(java.lang.reflect.Method) -> d
    203:203:boolean isBoolean(java.lang.Class) -> d
    208:225:java.lang.reflect.Method findSetter(java.lang.Class,java.lang.String,java.lang.Class) -> a
    244:253:java.util.List getClassGetters(java.lang.Class) -> b
    258:267:void getDeclaredClassGetters(java.lang.Class,java.util.Map,java.util.LinkedList) -> a
    304:312:java.lang.reflect.Method findMethodWith(java.lang.Class,java.lang.Class) -> b
    324:327:java.lang.Object newInstance(java.lang.Class) -> c
    332:332:boolean isGetter(java.lang.reflect.Method) -> e
    336:342:boolean isBooleanGetter(java.lang.reflect.Method) -> b
    347:357:boolean isNonBooleanGetter(java.lang.reflect.Method) -> f
    373:380:java.lang.Class getRawType(java.lang.reflect.Type) -> a
    391:398:java.lang.reflect.Type getElementType(java.lang.reflect.Type) -> b
    24:48:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.utils.CompareUtils -> io.crnk.core.engine.internal.h.c:
    9:9:boolean isEquals(java.lang.Object,java.lang.Object) -> a
io.crnk.core.engine.internal.utils.Decorator -> io.crnk.core.engine.internal.h.d:
    18:18:void setDecoratedObject(java.lang.Object) -> a_
io.crnk.core.engine.internal.utils.ExceptionUtil -> io.crnk.core.engine.internal.h.e:
    18:24:java.lang.Object wrapCatchedExceptions(java.util.concurrent.Callable) -> a
    36:40:java.lang.Object wrapCatchedExceptions(java.util.concurrent.Callable,java.lang.String,java.lang.Object[]) -> a
io.crnk.core.engine.internal.utils.FieldOrderedComparator -> io.crnk.core.engine.internal.h.f:
    java.util.Map fieldNames -> a
    boolean alphabetic -> b
    18:23:void <init>(java.lang.String[],boolean) -> <init>
    26:29:void init(java.lang.String[]) -> a
    33:43:int compare(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceField) -> a
    13:13:int compare(java.lang.Object,java.lang.Object) -> compare
io.crnk.core.engine.internal.utils.JsonApiUrlBuilder -> io.crnk.core.engine.internal.h.g:
    io.crnk.core.engine.query.QueryContext queryContext -> a
    io.crnk.core.module.ModuleRegistry moduleRegistry -> b
    io.crnk.legacy.queryParams.QueryParamsSerializer queryParamsSerializer -> c
    31:37:void <init>(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.query.QueryContext) -> <init>
    49:53:java.lang.String buildUrl(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object,io.crnk.core.engine.query.QueryAdapter,java.lang.String) -> a
    58:58:java.lang.String buildUrl(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object,io.crnk.core.queryspec.QuerySpec,java.lang.String) -> a
    63:63:java.lang.String buildUrl(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object,io.crnk.legacy.queryParams.QueryParams,java.lang.String) -> a
    67:102:java.lang.String buildUrlInternal(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object,java.lang.Object,java.lang.String) -> a
io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder -> io.crnk.core.engine.internal.h.h:
    java.lang.StringBuilder builder -> b
    boolean firstParam -> c
    java.lang.String encoding -> d
    io.crnk.core.engine.internal.utils.JsonApiUrlBuilder this$0 -> a
    107:116:void <init>(io.crnk.core.engine.internal.utils.JsonApiUrlBuilder,java.lang.String) -> <init>
    120:120:java.lang.String toString() -> toString
    124:131:void addQueryParameters(java.util.Map) -> a
    134:150:void addQueryParameter(java.lang.String,java.lang.String) -> a
    153:161:void addQueryParameter(java.lang.String,java.lang.Object) -> a
    105:105:void access$000(io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder,java.util.Map) -> a
    105:105:java.lang.String access$100(io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder) -> a
    105:105:java.lang.StringBuilder access$200(io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder) -> b
io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder$1 -> io.crnk.core.engine.internal.h.i:
    java.lang.String val$value -> a
    io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder this$1 -> b
    143:143:void <init>(io.crnk.core.engine.internal.utils.JsonApiUrlBuilder$UrlParameterBuilder,java.lang.String) -> <init>
    146:147:java.lang.Object call() -> call
io.crnk.core.engine.internal.utils.MethodCache -> io.crnk.core.engine.internal.h.j:
    java.util.Map cache -> a
    10:12:void <init>() -> <init>
    15:26:io.crnk.core.utils.Optional find(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
io.crnk.core.engine.internal.utils.MethodCache$MethodCacheKey -> io.crnk.core.engine.internal.h.k:
    java.lang.Class clazz -> a
    java.lang.String name -> b
    java.lang.Class[] parameters -> c
    38:42:void <init>(java.lang.Class,java.lang.String,java.lang.Class[]) -> <init>
    46:51:int hashCode() -> hashCode
    56:61:boolean equals(java.lang.Object) -> equals
io.crnk.core.engine.internal.utils.MultivaluedMap -> io.crnk.core.engine.internal.h.l:
    java.util.Map map -> a
    9:11:void <init>() -> <init>
    14:20:void add(java.lang.Object,java.lang.Object) -> a
    23:23:java.util.List newList() -> a
    27:30:void addAll(java.lang.Object,java.lang.Iterable) -> a
    33:33:boolean isEmpty() -> b
    37:37:boolean containsKey(java.lang.Object) -> a
    41:41:java.lang.Object getUnique(java.lang.Object) -> b
    45:52:java.lang.Object getUnique(java.lang.Object,boolean) -> a
    56:58:java.util.List getList(java.lang.Object) -> c
    62:62:java.util.Set keySet() -> c
io.crnk.core.engine.internal.utils.PreconditionUtil -> io.crnk.core.engine.internal.h.m:
    23:26:void assertEquals(java.lang.String,java.lang.Object,java.lang.Object) -> a
    29:35:java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object) -> b
    46:46:void fail(java.lang.String) -> a
    58:59:void assertNotNull(java.lang.String,java.lang.Object) -> a
    70:71:void assertTrue(java.lang.String,boolean) -> a
    82:83:void assertFalse(java.lang.String,boolean) -> b
    94:95:void assertNull(java.lang.String,java.lang.Object) -> b
    98:102:void verify(boolean,java.lang.String,java.lang.Object[]) -> a
io.crnk.core.engine.internal.utils.PropertyException -> io.crnk.core.engine.internal.h.n:
    java.lang.Class resourceClass -> a
    java.lang.String field -> b
    14:17:void <init>(java.lang.Throwable,java.lang.Class,java.lang.String) -> <init>
    20:23:void <init>(java.lang.String,java.lang.Class,java.lang.String) -> <init>
io.crnk.core.engine.internal.utils.PropertyUtils -> io.crnk.core.engine.internal.h.o:
    io.crnk.core.engine.internal.utils.PropertyUtils INSTANCE -> a
    26:27:void <init>() -> <init>
    46:52:java.lang.Object getProperty(java.lang.Object,java.lang.String) -> a
    65:65:java.lang.Class getPropertyClass(java.lang.Class,java.lang.String) -> a
    88:107:java.lang.Object getProperty(java.lang.Object,java.util.List) -> a
    119:123:java.lang.Class getPropertyClass(java.lang.Class,java.util.List) -> a
    165:169:java.lang.RuntimeException handleReflectionException(java.lang.Class,java.lang.String,java.lang.ReflectiveOperationException) -> a
    174:180:java.lang.Object prepareValue(java.lang.Object,java.lang.Class) -> a
    184:190:void checkParameters(java.lang.Object,java.lang.String) -> b
    195:208:java.lang.Object getPropertyValue(java.lang.Object,java.lang.String) -> c
    213:218:void checkGetterNotNull(java.lang.reflect.Method,java.lang.Class,java.lang.String) -> a
    221:228:java.lang.Class findPropertyClass(java.lang.Class,java.lang.String) -> b
    245:253:java.lang.reflect.Method findGetter(java.lang.Class,java.lang.String) -> c
    257:263:java.lang.reflect.Field findField(java.lang.Class,java.lang.String) -> d
    267:273:java.lang.reflect.Method getGetter(java.lang.Class,java.lang.String) -> e
    24:24:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.utils.SerializerUtil -> io.crnk.core.engine.internal.h.p:
    java.lang.String HREF -> a
    boolean serializeLinksAsObjects -> b
    25:27:void <init>(boolean) -> <init>
    30:38:com.fasterxml.jackson.databind.node.ObjectNode serializeLink(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String,java.lang.String) -> a
    42:50:void serializeLink(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.String) -> a
    53:57:java.lang.String deserializeLink(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> a
    61:65:java.lang.String readStringIfExists(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> b
    70:73:void writeStringIfExists(java.lang.String,java.lang.String,com.fasterxml.jackson.core.JsonGenerator) -> a
    16:16:void <clinit>() -> <clinit>
io.crnk.core.engine.internal.utils.StringUtils -> io.crnk.core.engine.internal.h.q:
    15:33:java.lang.String join(java.lang.String,java.lang.Iterable) -> a
    51:59:boolean isBlank(java.lang.String) -> a
    63:66:java.lang.String emptyToNull(java.lang.String) -> b
    85:90:java.lang.String decapitalize(java.lang.String) -> c
io.crnk.core.engine.internal.utils.UrlUtils -> io.crnk.core.engine.internal.h.r:
    9:13:java.lang.String removeTrailingSlash(java.lang.String) -> a
io.crnk.core.engine.internal.utils.WrappedList -> io.crnk.core.engine.internal.h.s:
    java.util.List list -> a
    12:14:void <init>(java.util.List) -> <init>
    18:18:int size() -> size
    23:23:boolean isEmpty() -> isEmpty
    28:28:boolean contains(java.lang.Object) -> contains
    33:33:java.util.Iterator iterator() -> iterator
    38:38:java.lang.Object[] toArray() -> toArray
    44:44:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    49:49:boolean add(java.lang.Object) -> add
    54:54:boolean remove(java.lang.Object) -> remove
    59:59:boolean containsAll(java.util.Collection) -> containsAll
    64:64:boolean addAll(java.util.Collection) -> addAll
    69:69:boolean addAll(int,java.util.Collection) -> addAll
    74:74:boolean removeAll(java.util.Collection) -> removeAll
    79:79:boolean retainAll(java.util.Collection) -> retainAll
    84:85:void clear() -> clear
    89:89:java.lang.Object get(int) -> get
    94:94:java.lang.Object set(int,java.lang.Object) -> set
    99:100:void add(int,java.lang.Object) -> add
    104:104:java.lang.Object remove(int) -> remove
    109:109:int indexOf(java.lang.Object) -> indexOf
    114:114:int lastIndexOf(java.lang.Object) -> lastIndexOf
    119:119:java.util.ListIterator listIterator() -> listIterator
    124:124:java.util.ListIterator listIterator(int) -> listIterator
    129:129:java.util.List subList(int,int) -> subList
    134:134:java.lang.String toString() -> toString
    139:139:boolean equals(java.lang.Object) -> equals
    144:144:int hashCode() -> hashCode
io.crnk.core.engine.parser.DefaultStringParsers -> io.crnk.core.engine.f.a:
    19:101:java.util.Map get() -> a
    105:108:void addType(java.util.Map,java.util.List,io.crnk.core.engine.parser.StringParser) -> a
    111:111:io.crnk.core.engine.parser.ParserException newException(java.lang.Class,java.lang.String) -> b
    13:13:io.crnk.core.engine.parser.ParserException access$000(java.lang.Class,java.lang.String) -> a
io.crnk.core.engine.parser.DefaultStringParsers$1 -> io.crnk.core.engine.f.b:
    21:21:void <init>() -> <init>
    24:24:java.lang.Byte parse(java.lang.String) -> b
    21:21:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.DefaultStringParsers$10 -> io.crnk.core.engine.f.c:
    78:78:void <init>() -> <init>
    81:87:java.lang.Boolean parse(java.lang.String) -> b
    78:78:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.DefaultStringParsers$11 -> io.crnk.core.engine.f.d:
    90:90:void <init>() -> <init>
    94:96:java.util.UUID parse(java.lang.String) -> b
    90:90:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.DefaultStringParsers$2 -> io.crnk.core.engine.f.e:
    27:27:void <init>() -> <init>
    30:30:java.lang.Short parse(java.lang.String) -> b
    27:27:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.DefaultStringParsers$3 -> io.crnk.core.engine.f.f:
    33:33:void <init>() -> <init>
    36:36:java.lang.Integer parse(java.lang.String) -> b
    33:33:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.DefaultStringParsers$4 -> io.crnk.core.engine.f.g:
    39:39:void <init>() -> <init>
    42:42:java.lang.Long parse(java.lang.String) -> b
    39:39:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.DefaultStringParsers$5 -> io.crnk.core.engine.f.h:
    45:45:void <init>() -> <init>
    48:48:java.lang.Float parse(java.lang.String) -> b
    45:45:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.DefaultStringParsers$6 -> io.crnk.core.engine.f.i:
    51:51:void <init>() -> <init>
    54:54:java.lang.Double parse(java.lang.String) -> b
    51:51:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.DefaultStringParsers$7 -> io.crnk.core.engine.f.j:
    57:57:void <init>() -> <init>
    60:60:java.math.BigInteger parse(java.lang.String) -> b
    57:57:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.DefaultStringParsers$8 -> io.crnk.core.engine.f.k:
    63:63:void <init>() -> <init>
    66:66:java.math.BigDecimal parse(java.lang.String) -> b
    63:63:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.DefaultStringParsers$9 -> io.crnk.core.engine.f.l:
    69:69:void <init>() -> <init>
    72:75:java.lang.Character parse(java.lang.String) -> b
    69:69:java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.ParserException -> io.crnk.core.engine.f.m:
    11:12:void <init>(java.lang.String) -> <init>
    15:16:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.crnk.core.engine.parser.StringMapper -> io.crnk.core.engine.f.n:
    java.lang.String toString(java.lang.Object) -> a
io.crnk.core.engine.parser.StringParser -> io.crnk.core.engine.f.o:
    java.lang.Object parse(java.lang.String) -> a
io.crnk.core.engine.parser.TypeParser -> io.crnk.core.engine.f.p:
    java.util.Map parsers -> a
    io.crnk.core.engine.internal.utils.MethodCache methodCache -> b
    44:49:void <init>() -> <init>
    52:52:boolean isEnum(java.lang.Class) -> a
    75:80:java.lang.Iterable parse(java.lang.Iterable,java.lang.Class) -> a
    93:95:java.lang.Object parse(java.lang.String,java.lang.Class) -> a
    101:126:java.lang.Object parseInput(java.lang.String,java.lang.Class) -> b
    130:136:boolean containsStringConstructor(java.lang.Class) -> b
io.crnk.core.engine.parser.TypeParser$1 -> io.crnk.core.engine.f.q:
    io.crnk.core.utils.Optional val$finalMethod -> a
    java.lang.Class val$clazz -> b
    java.lang.String val$input -> c
    io.crnk.core.engine.parser.TypeParser this$0 -> d
    119:119:void <init>(io.crnk.core.engine.parser.TypeParser,io.crnk.core.utils.Optional,java.lang.Class,java.lang.String) -> <init>
    122:122:java.lang.Object call() -> call
io.crnk.core.engine.properties.NullPropertiesProvider -> io.crnk.core.engine.g.a:
    6:6:void <init>() -> <init>
    10:10:java.lang.String getProperty(java.lang.String) -> a
io.crnk.core.engine.properties.PropertiesProvider -> io.crnk.core.engine.g.b:
    java.lang.String getProperty(java.lang.String) -> a
io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior -> io.crnk.core.engine.g.c:
    io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior IGNORE -> a
    io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior FAIL -> b
    io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior[] $VALUES -> c
    11:11:io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior[] values() -> values
    11:11:io.crnk.core.engine.properties.ResourceFieldImmutableWriteBehavior valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    11:23:void <clinit>() -> <clinit>
io.crnk.core.engine.query.QueryAdapter -> io.crnk.core.engine.h.a:
    io.crnk.legacy.queryParams.params.TypedParams getIncludedRelations() -> a
    io.crnk.legacy.queryParams.params.TypedParams getIncludedFields() -> b
    io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> c
    io.crnk.core.engine.query.QueryContext getQueryContext() -> d
    io.crnk.core.engine.query.QueryAdapter duplicate() -> e
    io.crnk.legacy.queryParams.QueryParams toQueryParams() -> f
    io.crnk.core.queryspec.QuerySpec toQuerySpec() -> g
    boolean getCompactMode() -> h
    void setPagingSpec(io.crnk.core.queryspec.pagingspec.PagingSpec) -> a
    io.crnk.core.queryspec.pagingspec.PagingSpec getPagingSpec() -> i
    boolean isEmpty() -> j
io.crnk.core.engine.query.QueryAdapterBuilder -> io.crnk.core.engine.h.b:
    io.crnk.core.engine.query.QueryAdapter build(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map,io.crnk.core.engine.query.QueryContext) -> a
io.crnk.core.engine.query.QueryContext -> io.crnk.core.engine.h.c:
    java.lang.String baseUrl -> a
    java.util.Map attributes -> b
    7:11:void <init>() -> <init>
    14:14:java.lang.String getBaseUrl() -> a
    18:19:void setBaseUrl(java.lang.String) -> a
    22:22:java.lang.Object getAttribute(java.lang.String) -> b
    26:27:void setAttribute(java.lang.String,java.lang.Object) -> a
    34:35:void setAttributes(java.util.Map) -> a
io.crnk.core.engine.registry.DefaultResourceRegistryPart -> io.crnk.core.engine.i.a:
    org.slf4j.Logger logger -> a
    java.util.Map resourcesByType -> b
    java.util.Map resourcesByClass -> c
    21:31:void <init>() -> <init>
    35:43:io.crnk.core.engine.registry.RegistryEntry addEntry(io.crnk.core.engine.registry.RegistryEntry) -> a
    47:47:boolean hasEntry(java.lang.Class) -> d
    52:52:boolean hasEntry(java.lang.String) -> b
    56:56:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.Class) -> e
    65:65:java.util.Set getResources() -> a
    77:77:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.String) -> c
    19:19:java.util.Collection getResources() -> b
io.crnk.core.engine.registry.HierarchicalResourceRegistryPart -> io.crnk.core.engine.i.b:
    java.util.Map partMap -> a
    java.util.List partList -> b
    io.crnk.core.engine.registry.ResourceRegistryPartListener childListener -> c
    12:20:void <init>() -> <init>
    28:34:void putPart(java.lang.String,io.crnk.core.engine.registry.ResourceRegistryPart) -> a
    39:44:io.crnk.core.engine.registry.RegistryEntry addEntry(io.crnk.core.engine.registry.RegistryEntry) -> a
    49:54:boolean hasEntry(java.lang.Class) -> d
    59:64:boolean hasEntry(java.lang.String) -> b
    69:73:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.String) -> c
    77:85:io.crnk.core.engine.registry.ResourceRegistryPart getPart(java.lang.String) -> a
    90:94:java.util.Collection getResources() -> b
    99:104:io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.Class) -> e
io.crnk.core.engine.registry.HierarchicalResourceRegistryPart$1 -> io.crnk.core.engine.i.c:
    io.crnk.core.engine.registry.HierarchicalResourceRegistryPart this$0 -> a
    20:20:void <init>(io.crnk.core.engine.registry.HierarchicalResourceRegistryPart) -> <init>
    23:24:void onChanged(io.crnk.core.engine.registry.ResourceRegistryPartEvent) -> a
io.crnk.core.engine.registry.RegistryEntry -> io.crnk.core.engine.i.d:
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter getResourceRepository(io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter getRelationshipRepository(io.crnk.core.engine.information.resource.ResourceField,io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> a
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> b
    io.crnk.core.engine.registry.RegistryEntry getParentRegistryEntry() -> c
    boolean isParent(io.crnk.core.engine.registry.RegistryEntry) -> a
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter getResourceRepository() -> d
io.crnk.core.engine.registry.RegistryEntryBuilder -> io.crnk.core.engine.i.e:
    void fromImplementation(java.lang.Object) -> a
    io.crnk.core.engine.registry.RegistryEntry build() -> c
io.crnk.core.engine.registry.RegistryEntryBuilder$ResourceRepository -> io.crnk.core.engine.i.f:
    io.crnk.core.engine.information.InformationBuilder$ResourceRepository information() -> a
    void instance(java.lang.Object) -> a
io.crnk.core.engine.registry.ResourceEntry -> io.crnk.core.engine.i.g:
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> a
io.crnk.core.engine.registry.ResourceRegistry -> io.crnk.core.engine.i.h:
    io.crnk.core.engine.registry.RegistryEntry findEntry(java.lang.Class) -> a
    io.crnk.core.engine.url.ServiceUrlProvider getServiceUrlProvider() -> a
    java.lang.String getResourceUrl(io.crnk.core.engine.query.QueryContext,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    io.crnk.core.engine.registry.RegistryEntry getEntryForClass(java.lang.Class) -> c
    io.crnk.core.engine.information.resource.ResourceInformation getBaseResourceInformation(java.lang.String) -> a
io.crnk.core.engine.registry.ResourceRegistryAware -> io.crnk.core.engine.i.i:
    void setResourceRegistry(io.crnk.core.engine.registry.ResourceRegistry) -> a
io.crnk.core.engine.registry.ResourceRegistryPart -> io.crnk.core.engine.i.j:
    io.crnk.core.engine.registry.RegistryEntry addEntry(io.crnk.core.engine.registry.RegistryEntry) -> a
    boolean hasEntry(java.lang.Class) -> d
    boolean hasEntry(java.lang.String) -> b
    io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.String) -> c
    java.util.Collection getResources() -> b
    io.crnk.core.engine.registry.RegistryEntry getEntry(java.lang.Class) -> e
    void addListener(io.crnk.core.engine.registry.ResourceRegistryPartListener) -> a
    void removeListener(io.crnk.core.engine.registry.ResourceRegistryPartListener) -> b
io.crnk.core.engine.registry.ResourceRegistryPartBase -> io.crnk.core.engine.i.k:
    java.util.concurrent.CopyOnWriteArrayList listeners -> a
    5:8:void <init>() -> <init>
    12:13:void addListener(io.crnk.core.engine.registry.ResourceRegistryPartListener) -> a
    17:18:void removeListener(io.crnk.core.engine.registry.ResourceRegistryPartListener) -> b
    21:25:void notifyChange() -> c
io.crnk.core.engine.registry.ResourceRegistryPartEvent -> io.crnk.core.engine.i.l:
    io.crnk.core.engine.registry.ResourceRegistryPart part -> a
    7:8:void <init>() -> <init>
    11:13:io.crnk.core.engine.registry.ResourceRegistryPartEvent create(io.crnk.core.engine.registry.ResourceRegistryPart) -> a
io.crnk.core.engine.registry.ResourceRegistryPartListener -> io.crnk.core.engine.i.m:
    void onChanged(io.crnk.core.engine.registry.ResourceRegistryPartEvent) -> a
io.crnk.core.engine.registry.ResponseRelationshipEntry -> io.crnk.core.engine.i.n:
io.crnk.core.engine.result.ImmediateResult -> io.crnk.core.engine.j.a:
    java.lang.Object object -> a
    12:14:void <init>(java.lang.Object) -> <init>
    18:18:java.lang.Object get() -> a
    23:23:io.crnk.core.engine.result.Result map(java.util.function.Function) -> a
    28:28:io.crnk.core.engine.result.Result onErrorResume(java.util.function.Function) -> b
    38:39:io.crnk.core.engine.result.Result doWork(java.util.function.Consumer) -> a
    44:45:io.crnk.core.engine.result.Result zipWith(io.crnk.core.engine.result.Result,java.util.function.BiFunction) -> a
    50:50:io.crnk.core.engine.result.Result merge(java.util.function.Function) -> c
io.crnk.core.engine.result.ImmediateResultFactory -> io.crnk.core.engine.j.b:
    java.lang.ThreadLocal threadLocal -> a
    10:12:void <init>() -> <init>
    16:19:io.crnk.core.engine.result.Result just(java.lang.Object) -> a
    24:28:io.crnk.core.engine.result.Result zip(java.util.List) -> a
    33:33:boolean isAsync() -> a
    37:37:java.lang.Object getThreadContext() -> b
    42:42:io.crnk.core.engine.result.Result getContext() -> c
    46:47:void setThreadContext(java.lang.Object) -> b
    50:51:void clearContext() -> d
    55:55:boolean hasThreadContext() -> e
    60:60:io.crnk.core.engine.result.Result attachContext(io.crnk.core.engine.result.Result,java.lang.Object) -> a
io.crnk.core.engine.result.Result -> io.crnk.core.engine.j.c:
    java.lang.Object get() -> a
    io.crnk.core.engine.result.Result map(java.util.function.Function) -> a
    io.crnk.core.engine.result.Result onErrorResume(java.util.function.Function) -> b
    io.crnk.core.engine.result.Result doWork(java.util.function.Consumer) -> a
    io.crnk.core.engine.result.Result zipWith(io.crnk.core.engine.result.Result,java.util.function.BiFunction) -> a
    io.crnk.core.engine.result.Result merge(java.util.function.Function) -> c
io.crnk.core.engine.result.ResultFactory -> io.crnk.core.engine.j.d:
    io.crnk.core.engine.result.Result just(java.lang.Object) -> a
    io.crnk.core.engine.result.Result zip(java.util.List) -> a
    boolean isAsync() -> a
    java.lang.Object getThreadContext() -> b
    io.crnk.core.engine.result.Result getContext() -> c
    void setThreadContext(java.lang.Object) -> b
    void clearContext() -> d
    boolean hasThreadContext() -> e
    io.crnk.core.engine.result.Result attachContext(io.crnk.core.engine.result.Result,java.lang.Object) -> a
io.crnk.core.engine.url.ConstantServiceUrlProvider -> io.crnk.core.engine.k.a:
    java.lang.String result -> a
    6:10:void <init>(java.lang.String) -> <init>
    14:14:java.lang.String getUrl() -> a
io.crnk.core.engine.url.ServiceUrlProvider -> io.crnk.core.engine.k.b:
    java.lang.String getUrl() -> a
io.crnk.core.exception.BadRequestException -> io.crnk.core.b.a:
    11:13:void <init>(java.lang.String) -> <init>
    21:22:void <init>(int,io.crnk.core.engine.document.ErrorData) -> <init>
    25:26:void <init>(int,io.crnk.core.engine.document.ErrorData,java.lang.Throwable) -> <init>
io.crnk.core.exception.CrnkException -> io.crnk.core.b.b:
    9:10:void <init>(java.lang.String) -> <init>
    13:14:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.crnk.core.exception.CrnkInitializationException -> io.crnk.core.b.c:
    9:10:void <init>(java.lang.String) -> <init>
    13:14:void <init>(java.lang.String,java.lang.Exception) -> <init>
io.crnk.core.exception.CrnkMappableException -> io.crnk.core.b.d:
    io.crnk.core.engine.document.ErrorData errorData -> a
    int httpStatus -> b
    14:15:void <init>(int,io.crnk.core.engine.document.ErrorData) -> <init>
    18:21:void <init>(int,io.crnk.core.engine.document.ErrorData,java.lang.Throwable) -> <init>
    24:24:io.crnk.core.engine.document.ErrorData getErrorData() -> a
    28:28:int getHttpStatus() -> b
io.crnk.core.exception.ForbiddenException -> io.crnk.core.b.e:
    11:13:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.InternalServerErrorException -> io.crnk.core.b.f:
    11:16:void <init>(java.lang.String) -> <init>
    19:20:void <init>(int,io.crnk.core.engine.document.ErrorData) -> <init>
    23:24:void <init>(int,io.crnk.core.engine.document.ErrorData,java.lang.Throwable) -> <init>
io.crnk.core.exception.InvalidResourceException -> io.crnk.core.b.g:
    6:7:void <init>(java.lang.String) -> <init>
    10:11:void <init>(java.lang.String,java.lang.Exception) -> <init>
io.crnk.core.exception.MethodNotAllowedException -> io.crnk.core.b.h:
    9:10:void <init>(java.lang.String) -> <init>
    13:17:io.crnk.core.engine.document.ErrorData createErrorData(java.lang.String) -> a
io.crnk.core.exception.MultipleJsonApiLinksInformationException -> io.crnk.core.b.i:
    9:10:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.MultipleJsonApiMetaInformationException -> io.crnk.core.b.j:
    9:10:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.ParametersDeserializationException -> io.crnk.core.b.k:
    13:14:void <init>(java.lang.String) -> <init>
    17:23:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.crnk.core.exception.RelationshipRepositoryNotFoundException -> io.crnk.core.b.l:
    10:11:void <init>(java.lang.String,java.lang.String) -> <init>
io.crnk.core.exception.RepositoryAnnotationNotFoundException -> io.crnk.core.b.m:
    6:7:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.RepositoryInstanceNotFoundException -> io.crnk.core.b.n:
    9:10:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.RepositoryMethodException -> io.crnk.core.b.o:
    10:15:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.RepositoryNotFoundException -> io.crnk.core.b.p:
    8:9:void <init>(java.lang.Class) -> <init>
    12:13:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.RequestBodyException -> io.crnk.core.b.q:
    12:18:void <init>(io.crnk.core.engine.http.HttpMethod,java.lang.String,java.lang.String) -> <init>
io.crnk.core.exception.RequestBodyNotFoundException -> io.crnk.core.b.r:
    12:17:void <init>(io.crnk.core.engine.http.HttpMethod,java.lang.String) -> <init>
io.crnk.core.exception.ResourceDuplicateIdException -> io.crnk.core.b.s:
    9:10:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.ResourceException -> io.crnk.core.b.t:
    14:19:void <init>(java.lang.String) -> <init>
    22:27:void <init>(java.lang.String,java.lang.Exception) -> <init>
io.crnk.core.exception.ResourceFieldNotFoundException -> io.crnk.core.b.u:
    9:10:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.ResourceIdNotFoundException -> io.crnk.core.b.v:
    9:10:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.ResourceNotFoundException -> io.crnk.core.b.w:
    12:14:void <init>(java.lang.String) -> <init>
io.crnk.core.exception.UnauthorizedException -> io.crnk.core.b.x:
    11:13:void <init>(java.lang.String) -> <init>
io.crnk.core.module.InitializingModule -> io.crnk.core.c.a:
    void init() -> a
io.crnk.core.module.Module -> io.crnk.core.c.b:
    void setupModule(io.crnk.core.module.Module$ModuleContext) -> a
io.crnk.core.module.Module$ModuleContext -> io.crnk.core.c.c:
    void setResultFactory(io.crnk.core.engine.result.ResultFactory) -> a
    void addExtension(io.crnk.core.module.ModuleExtension) -> a
    void addHttpRequestProcessor(io.crnk.core.engine.http.HttpRequestProcessor) -> a
    com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> a
    void addRegistryPart(java.lang.String,io.crnk.core.engine.registry.ResourceRegistryPart) -> a
    io.crnk.core.engine.properties.PropertiesProvider getPropertiesProvider() -> b
    void addResourceInformationBuilder(io.crnk.core.engine.information.resource.ResourceInformationProvider) -> a
    void addRepositoryInformationBuilder(io.crnk.core.engine.information.repository.RepositoryInformationProvider) -> a
    void addPagingBehavior(io.crnk.core.queryspec.pagingspec.PagingBehavior) -> a
    void addResourceLookup(io.crnk.core.module.discovery.ResourceLookup) -> a
    void addJacksonModule(com.fasterxml.jackson.databind.Module) -> a
    void addRepository(java.lang.Object) -> a
    void addExceptionMapperLookup(io.crnk.core.engine.internal.exception.ExceptionMapperLookup) -> a
    void addFilter(io.crnk.core.engine.filter.DocumentFilter) -> a
    void addRepositoryFilter(io.crnk.core.engine.filter.RepositoryFilter) -> a
    void addResourceFilter(io.crnk.core.engine.filter.ResourceFilter) -> a
    void addResourceFieldContributor(io.crnk.core.engine.information.contributor.ResourceFieldContributor) -> a
    void addRepositoryDecoratorFactory(io.crnk.core.repository.decorate.RepositoryDecoratorFactory) -> a
    io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> c
    io.crnk.core.engine.internal.exception.ExceptionMapperRegistry getExceptionMapperRegistry() -> d
    io.crnk.core.engine.dispatcher.RequestDispatcher getRequestDispatcher() -> e
    io.crnk.core.engine.registry.RegistryEntryBuilder newRegistryEntryBuilder() -> f
    io.crnk.core.engine.filter.ResourceFilterDirectory getResourceFilterDirectory() -> g
    void addResourceModificationFilter(io.crnk.core.engine.filter.ResourceModificationFilter) -> a
    io.crnk.core.engine.result.ResultFactory getResultFactory() -> h
    java.util.List getDocumentFilters() -> i
    void addRepositoryAdapterFactory(io.crnk.core.engine.internal.repository.RepositoryAdapterFactory) -> a
    io.crnk.core.module.ModuleRegistry getModuleRegistry() -> j
io.crnk.core.module.ModuleExtension -> io.crnk.core.c.d:
    java.lang.Class getTargetModule() -> a
    boolean isOptional() -> b
io.crnk.core.module.ModuleExtensionAware -> io.crnk.core.c.e:
    void setExtensions(java.util.List) -> a
io.crnk.core.module.ModuleRegistry -> io.crnk.core.c.f:
    org.slf4j.Logger LOGGER -> a
    io.crnk.core.engine.result.ResultFactory resultFactory -> b
    java.util.Map serverInfo -> c
    io.crnk.core.engine.parser.TypeParser typeParser -> d
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> e
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> f
    io.crnk.core.queryspec.mapper.QuerySpecUrlMapper urlMapper -> g
    java.util.List modules -> h
    io.crnk.core.module.SimpleModule aggregatedModule -> i
    io.crnk.core.module.ModuleRegistry$InitializedState initializedState -> j
    io.crnk.core.engine.information.resource.ResourceInformationProvider resourceInformationProvider -> k
    io.crnk.core.module.discovery.ServiceDiscovery serviceDiscovery -> l
    boolean isServer -> m
    io.crnk.core.engine.internal.exception.ExceptionMapperRegistry exceptionMapperRegistry -> n
    io.crnk.core.engine.dispatcher.RequestDispatcher requestDispatcher -> o
    io.crnk.core.engine.http.HttpRequestContextProvider httpRequestContextProvider -> p
    io.crnk.core.engine.properties.PropertiesProvider propertiesProvider -> q
    io.crnk.core.engine.filter.ResourceFilterDirectory filterBehaviorProvider -> r
    io.crnk.core.engine.internal.utils.MultivaluedMap extensionMap -> s
    120:121:void <init>() -> <init>
    89:345:void <init>(boolean) -> <init>
    128:128:io.crnk.core.engine.internal.information.DefaultInformationBuilder getInformationBuilder() -> a
    132:132:java.util.List getResourceModificationFilters() -> b
    140:140:java.util.Map getServerInfo() -> c
    144:147:io.crnk.core.engine.result.ResultFactory getResultFactory() -> d
    151:151:java.util.Collection getRepositories() -> e
    155:159:void setResultFactory(io.crnk.core.engine.result.ResultFactory) -> a
    167:170:void addModule(io.crnk.core.module.Module) -> a
    178:179:void addPagingBehavior(io.crnk.core.queryspec.pagingspec.PagingBehavior) -> a
    182:185:void addAllPagingBehaviors(java.util.List) -> a
    188:188:java.util.List getPagingBehaviors() -> f
    192:192:java.util.List getResourceFieldContributors() -> g
    196:199:io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> h
    203:204:void setResourceRegistry(io.crnk.core.engine.registry.ResourceRegistry) -> a
    207:208:void setRequestDispatcher(io.crnk.core.engine.dispatcher.RequestDispatcher) -> a
    214:214:java.util.List getJacksonModules() -> i
    223:226:void checkState(io.crnk.core.module.ModuleRegistry$InitializedState,io.crnk.core.module.ModuleRegistry$InitializedState) -> a
    235:244:io.crnk.core.engine.information.resource.ResourceInformationProvider getResourceInformationBuilder() -> j
    254:254:io.crnk.core.engine.information.repository.RepositoryInformationProvider getRepositoryInformationBuilder() -> k
    269:270:java.util.List getHttpRequestProcessors() -> l
    299:300:void setServiceDiscovery(io.crnk.core.module.discovery.ServiceDiscovery) -> a
    308:308:io.crnk.core.engine.properties.PropertiesProvider getPropertiesProvider() -> m
    312:313:void setPropertiesProvider(io.crnk.core.engine.properties.PropertiesProvider) -> a
    323:343:void init(com.fasterxml.jackson.databind.ObjectMapper) -> a
    348:354:void initializeModules() -> A
    357:373:void setExtensions() -> B
    376:397:void initializeModule(io.crnk.core.module.Module,java.util.HashSet) -> a
    400:400:io.crnk.core.engine.http.HttpRequestContextProvider getHttpRequestContextProvider() -> n
    405:409:void applyRepositoryRegistrations() -> C
    412:414:java.util.List filterDecorators(java.util.List) -> b
    418:428:void applyRepositoryRegistration(java.lang.Object) -> a
    434:434:java.util.List getFilters() -> o
    442:442:java.util.List getRepositoryFilters() -> p
    449:449:java.util.List getRepositoryDecoratorFactories() -> q
    456:456:io.crnk.core.engine.internal.exception.ExceptionMapperLookup getExceptionMapperLookup() -> r
    464:469:io.crnk.core.utils.Optional getModule(java.lang.Class) -> a
    473:473:io.crnk.core.engine.parser.TypeParser getTypeParser() -> s
    477:477:io.crnk.core.module.Module$ModuleContext getContext() -> t
    481:482:io.crnk.core.engine.internal.exception.ExceptionMapperRegistry getExceptionMapperRegistry() -> u
    486:486:java.util.Map getRegistryParts() -> v
    490:490:java.util.List getRegistryEntries() -> w
    494:495:void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper) -> b
    498:498:java.util.List getRepositoryAdapterFactories() -> x
    891:917:java.util.List prioritze(java.util.List) -> c
    921:921:io.crnk.core.queryspec.mapper.QuerySpecUrlMapper getUrlMapper() -> y
    925:941:void setUrlMapper(io.crnk.core.queryspec.mapper.QuerySpecUrlMapper) -> a
    413:413:boolean lambda$filterDecorators$1(java.lang.Object) -> b
    113:113:io.crnk.core.engine.result.ResultFactory lambda$new$0() -> D
    74:74:org.slf4j.Logger access$000() -> z
    74:74:io.crnk.core.module.SimpleModule access$100(io.crnk.core.module.ModuleRegistry) -> a
    74:74:io.crnk.core.engine.registry.ResourceRegistry access$200(io.crnk.core.module.ModuleRegistry) -> b
    74:74:io.crnk.core.engine.internal.utils.MultivaluedMap access$300(io.crnk.core.module.ModuleRegistry) -> c
    74:74:com.fasterxml.jackson.databind.ObjectMapper access$400(io.crnk.core.module.ModuleRegistry) -> d
    74:74:io.crnk.core.engine.dispatcher.RequestDispatcher access$700(io.crnk.core.module.ModuleRegistry) -> e
    74:74:io.crnk.core.engine.filter.ResourceFilterDirectory access$800(io.crnk.core.module.ModuleRegistry) -> f
    74:74:io.crnk.core.engine.result.ResultFactory access$900(io.crnk.core.module.ModuleRegistry) -> g
    74:74:io.crnk.core.engine.properties.PropertiesProvider access$1000(io.crnk.core.module.ModuleRegistry) -> h
    76:76:void <clinit>() -> <clinit>
io.crnk.core.module.ModuleRegistry$1 -> io.crnk.core.c.g:
    java.util.Map val$indexMap -> a
    898:898:void <init>(java.util.Map) -> <init>
    901:907:int compare(java.lang.Object,java.lang.Object) -> compare
    911:914:int getPriority(java.lang.Object) -> a
io.crnk.core.module.ModuleRegistry$2 -> io.crnk.core.c.h:
    io.crnk.core.module.ModuleRegistry this$0 -> a
    928:928:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    932:932:io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> a
    937:937:io.crnk.core.engine.parser.TypeParser getTypeParser() -> b
io.crnk.core.module.ModuleRegistry$CombinedExceptionMapperLookup -> io.crnk.core.c.i:
    java.util.Collection lookups -> a
    625:627:void <init>(java.util.List) -> <init>
    632:636:java.util.Set getExceptionMappers() -> a
io.crnk.core.module.ModuleRegistry$CombinedRepositoryInformationProvider -> io.crnk.core.c.j:
    java.util.Collection builders -> a
    570:572:void <init>(java.util.List) -> <init>
    576:581:boolean accept(java.lang.Object) -> a
    586:592:io.crnk.core.engine.information.repository.RepositoryInformation build(java.lang.Object,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> a
io.crnk.core.module.ModuleRegistry$CombinedResourceInformationProvider -> io.crnk.core.c.k:
    java.util.Collection builders -> a
    509:511:void <init>(java.util.List) -> <init>
    515:520:boolean accept(java.lang.Class) -> a
    525:531:io.crnk.core.engine.information.resource.ResourceInformation build(java.lang.Class) -> b
    536:541:java.lang.String getResourceType(java.lang.Class) -> c
    556:559:void init(io.crnk.core.engine.information.resource.ResourceInformationProviderContext) -> a
io.crnk.core.module.ModuleRegistry$InitializedState -> io.crnk.core.c.l:
    io.crnk.core.module.ModuleRegistry$InitializedState NOT_INITIALIZED -> a
    io.crnk.core.module.ModuleRegistry$InitializedState INITIALIZING -> b
    io.crnk.core.module.ModuleRegistry$InitializedState INITIALIZED -> c
    io.crnk.core.module.ModuleRegistry$InitializedState[] $VALUES -> d
    83:83:io.crnk.core.module.ModuleRegistry$InitializedState[] values() -> values
    83:83:io.crnk.core.module.ModuleRegistry$InitializedState valueOf(java.lang.String) -> valueOf
    83:83:void <init>(java.lang.String,int) -> <init>
    83:86:void <clinit>() -> <clinit>
io.crnk.core.module.ModuleRegistry$ModuleContextImpl -> io.crnk.core.c.m:
    io.crnk.core.module.Module module -> b
    io.crnk.core.module.ModuleRegistry this$0 -> a
    644:646:void <init>(io.crnk.core.module.ModuleRegistry,io.crnk.core.module.Module) -> <init>
    650:653:void addPagingBehavior(io.crnk.core.queryspec.pagingspec.PagingBehavior) -> a
    657:660:void addResourceInformationBuilder(io.crnk.core.engine.information.resource.ResourceInformationProvider) -> a
    664:667:void addRepositoryInformationBuilder(io.crnk.core.engine.information.repository.RepositoryInformationProvider) -> a
    671:674:void addResourceLookup(io.crnk.core.module.discovery.ResourceLookup) -> a
    678:681:void addJacksonModule(com.fasterxml.jackson.databind.Module) -> a
    685:689:io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> c
    694:697:void addFilter(io.crnk.core.engine.filter.DocumentFilter) -> a
    701:703:void addExceptionMapperLookup(io.crnk.core.engine.internal.exception.ExceptionMapperLookup) -> a
    740:741:void setResultFactory(io.crnk.core.engine.result.ResultFactory) -> a
    745:749:void addExtension(io.crnk.core.module.ModuleExtension) -> a
    753:756:void addHttpRequestProcessor(io.crnk.core.engine.http.HttpRequestProcessor) -> a
    760:761:com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> a
    766:769:void addRegistryPart(java.lang.String,io.crnk.core.engine.registry.ResourceRegistryPart) -> a
    778:781:void addRepositoryFilter(io.crnk.core.engine.filter.RepositoryFilter) -> a
    785:788:void addResourceFilter(io.crnk.core.engine.filter.ResourceFilter) -> a
    792:795:void addResourceFieldContributor(io.crnk.core.engine.information.contributor.ResourceFieldContributor) -> a
    799:802:void addRepositoryDecoratorFactory(io.crnk.core.repository.decorate.RepositoryDecoratorFactory) -> a
    806:809:void addRepository(java.lang.Object) -> a
    829:830:io.crnk.core.engine.internal.exception.ExceptionMapperRegistry getExceptionMapperRegistry() -> d
    835:836:io.crnk.core.engine.dispatcher.RequestDispatcher getRequestDispatcher() -> e
    841:841:io.crnk.core.engine.registry.RegistryEntryBuilder newRegistryEntryBuilder() -> f
    853:854:io.crnk.core.engine.filter.ResourceFilterDirectory getResourceFilterDirectory() -> g
    859:861:void addResourceModificationFilter(io.crnk.core.engine.filter.ResourceModificationFilter) -> a
    865:865:io.crnk.core.engine.result.ResultFactory getResultFactory() -> h
    870:870:java.util.List getDocumentFilters() -> i
    875:877:void addRepositoryAdapterFactory(io.crnk.core.engine.internal.repository.RepositoryAdapterFactory) -> a
    881:881:io.crnk.core.module.ModuleRegistry getModuleRegistry() -> j
    886:886:io.crnk.core.engine.properties.PropertiesProvider getPropertiesProvider() -> b
io.crnk.core.module.SimpleModule -> io.crnk.core.c.n:
    java.util.List resourceInformationProviders -> a
    java.util.List httpRequestProcessors -> b
    java.util.List repositoryInformationProviders -> c
    java.util.List documentFilters -> d
    java.util.List repositoryFilters -> e
    java.util.List resourceFilters -> f
    java.util.List resourceModificationFilters -> g
    java.util.List resourceFieldContributors -> h
    java.util.List repositoryDecoratorFactories -> i
    java.util.List securityProviders -> j
    java.util.List resourceLookups -> k
    java.util.List pagingBehaviors -> l
    java.util.List jacksonModules -> m
    java.util.List repositories -> n
    java.util.List exceptionMapperLookups -> o
    java.util.List registryEntries -> p
    java.util.List extensions -> q
    java.util.List repositoryAdapterFactories -> r
    java.lang.String moduleName -> s
    io.crnk.core.module.Module$ModuleContext context -> t
    java.util.Map registryParts -> u
    35:79:void <init>(java.lang.String) -> <init>
    88:137:void setupModule(io.crnk.core.module.Module$ModuleContext) -> a
    140:143:void checkInitialized() -> r
    151:153:void addResourceInformationProvider(io.crnk.core.engine.information.resource.ResourceInformationProvider) -> a
    161:163:void addRepositoryInformationBuilder(io.crnk.core.engine.information.repository.RepositoryInformationProvider) -> a
    166:168:void addExceptionMapperLookup(io.crnk.core.engine.internal.exception.ExceptionMapperLookup) -> a
    171:174:void addExceptionMapper(io.crnk.core.engine.error.JsonApiExceptionMapper) -> a
    177:178:java.util.List getResourceInformationProviders() -> a
    182:183:java.util.List getRepositoryInformationProviders() -> b
    187:187:java.util.Map getRegistryParts() -> c
    191:193:void addExtension(io.crnk.core.module.ModuleExtension) -> a
    196:198:void addFilter(io.crnk.core.engine.filter.DocumentFilter) -> a
    201:203:void addRepositoryFilter(io.crnk.core.engine.filter.RepositoryFilter) -> a
    206:208:void addResourceFilter(io.crnk.core.engine.filter.ResourceFilter) -> a
    211:213:void addResourceFieldContributor(io.crnk.core.engine.information.contributor.ResourceFieldContributor) -> a
    216:217:java.util.List getResourceFieldContributors() -> d
    221:223:void addResourceModificationFilter(io.crnk.core.engine.filter.ResourceModificationFilter) -> a
    226:228:void addRepositoryDecoratorFactory(io.crnk.core.repository.decorate.RepositoryDecoratorFactory) -> a
    231:232:java.util.List getFilters() -> e
    236:237:java.util.List getRepositoryFilters() -> f
    241:242:java.util.List getResourceFilters() -> g
    246:247:java.util.List getResourceModificationFilters() -> h
    251:252:java.util.List getExtensions() -> i
    256:257:java.util.List getRepositoryDecoratorFactories() -> j
    266:268:void addJacksonModule(com.fasterxml.jackson.databind.Module) -> a
    271:272:java.util.List getJacksonModules() -> k
    281:295:void addPagingBehavior(io.crnk.core.queryspec.pagingspec.PagingBehavior) -> a
    298:299:java.util.List getPagingBehaviors() -> l
    308:310:void addResourceLookup(io.crnk.core.module.discovery.ResourceLookup) -> a
    318:320:void addRepository(java.lang.Object) -> a
    327:329:void addRepository(java.lang.Class,java.lang.Object) -> a
    336:338:void addRepository(java.lang.Class,java.lang.Class,java.lang.Object) -> a
    341:341:java.util.List getRepositories() -> m
    345:345:java.util.List getExceptionMapperLookups() -> n
    353:354:void addHttpRequestProcessor(io.crnk.core.engine.http.HttpRequestProcessor) -> a
    357:357:java.util.List getHttpRequestProcessors() -> o
    361:362:void addRepositoryAdapterFactory(io.crnk.core.engine.internal.repository.RepositoryAdapterFactory) -> a
    365:365:java.util.List getRepositoryAdapterFactories() -> p
    369:373:void addRegistryPart(java.lang.String,io.crnk.core.engine.registry.ResourceRegistryPart) -> a
    376:376:java.util.List getRegistryEntries() -> q
    286:286:boolean lambda$addPagingBehavior$0(io.crnk.core.queryspec.pagingspec.PagingBehavior,io.crnk.core.queryspec.pagingspec.PagingBehavior) -> a
io.crnk.core.module.SimpleModule$CollectionExceptionMapperLookup -> io.crnk.core.c.o:
    java.util.Set set -> a
    388:390:void <init>(java.util.Set) -> <init>
    393:394:void <init>(io.crnk.core.engine.error.JsonApiExceptionMapper) -> <init>
    398:398:java.util.Set getExceptionMappers() -> a
io.crnk.core.module.discovery.DefaultServiceDiscoveryFactory -> io.crnk.core.c.a.a:
    12:12:void <init>() -> <init>
    16:23:io.crnk.core.module.discovery.ServiceDiscovery getInstance() -> a
io.crnk.core.module.discovery.EmptyServiceDiscovery -> io.crnk.core.c.a.b:
    7:7:void <init>() -> <init>
    12:12:java.util.List getInstancesByType(java.lang.Class) -> a
    17:17:java.util.List getInstancesByAnnotation(java.lang.Class) -> b
io.crnk.core.module.discovery.FallbackServiceDiscoveryFactory -> io.crnk.core.c.a.c:
    io.crnk.core.module.discovery.ServiceDiscoveryFactory factory -> a
    io.crnk.legacy.locator.JsonServiceLocator serviceLocator -> b
    io.crnk.core.engine.properties.PropertiesProvider propertiesProvider -> c
    16:20:void <init>(io.crnk.core.module.discovery.ServiceDiscoveryFactory,io.crnk.legacy.locator.JsonServiceLocator,io.crnk.core.engine.properties.PropertiesProvider) -> <init>
    24:32:io.crnk.core.module.discovery.ServiceDiscovery getInstance() -> a
io.crnk.core.module.discovery.ReflectionsServiceDiscovery -> io.crnk.core.c.a.d:
    org.reflections.Reflections reflections -> a
    io.crnk.legacy.locator.JsonServiceLocator locator -> b
    37:59:void <init>(java.lang.String,io.crnk.legacy.locator.JsonServiceLocator) -> <init>
    66:67:boolean isValid(java.lang.Class) -> c
    71:76:boolean hasDefaultConstructor(java.lang.Class) -> d
    81:82:java.util.List getInstancesByType(java.lang.Class) -> a
    87:88:java.util.List getInstancesByAnnotation(java.lang.Class) -> b
    92:102:java.util.List getInstances(java.util.Set) -> a
io.crnk.core.module.discovery.ResourceLookup -> io.crnk.core.c.a.e:
io.crnk.core.module.discovery.ServiceDiscovery -> io.crnk.core.c.a.f:
    java.util.List getInstancesByType(java.lang.Class) -> a
    java.util.List getInstancesByAnnotation(java.lang.Class) -> b
io.crnk.core.module.discovery.ServiceDiscoveryFactory -> io.crnk.core.c.a.g:
    io.crnk.core.module.discovery.ServiceDiscovery getInstance() -> a
io.crnk.core.module.internal.DefaultRepositoryInformationProviderContext -> io.crnk.core.c.b.a:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> a
    13:15:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    19:19:io.crnk.core.engine.information.resource.ResourceInformationProvider getResourceInformationBuilder() -> a
io.crnk.core.module.internal.ResourceFilterDirectoryImpl -> io.crnk.core.c.b.b:
    org.slf4j.Logger LOGGER -> a
    java.util.List filters -> b
    io.crnk.core.engine.http.HttpRequestContextProvider requestContextProvider -> c
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> d
    33:37:void <init>(java.util.List,io.crnk.core.engine.http.HttpRequestContextProvider,io.crnk.core.engine.registry.ResourceRegistry) -> <init>
    47:62:io.crnk.core.engine.filter.FilterBehavior get(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext) -> a
    73:104:io.crnk.core.engine.filter.FilterBehavior get(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext) -> a
    108:114:java.util.Map getCache(io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.query.QueryContext) -> a
    25:25:void <clinit>() -> <clinit>
io.crnk.core.queryspec.AbstractPathSpec -> io.crnk.core.d.a:
    java.util.List attributePath -> a
    9:11:void <init>() -> <init>
    13:15:void <init>(java.util.List) -> <init>
    18:18:java.util.List getAttributePath() -> a
    23:26:int hashCode() -> hashCode
    31:43:boolean equals(java.lang.Object) -> equals
io.crnk.core.queryspec.DefaultQuerySpecDeserializer -> io.crnk.core.d.b:
    org.slf4j.Logger LOGGER -> a
    io.crnk.core.queryspec.FilterOperator defaultOperator -> b
    java.util.Set supportedOperators -> c
    boolean allowUnknownAttributes -> d
    boolean enforceDotPathSeparator -> e
    boolean ignoreParseExceptions -> f
    boolean allowUnknownParameters -> g
    io.crnk.core.queryspec.QuerySpecDeserializerContext context -> h
    37:59:void <init>() -> <init>
    79:80:void setAllowUnknownAttributes(boolean) -> a
    83:83:io.crnk.core.queryspec.FilterOperator getDefaultOperator() -> a
    91:91:java.util.Set getSupportedOperators() -> b
    100:101:void init(io.crnk.core.queryspec.QuerySpecDeserializerContext) -> a
    104:104:io.crnk.core.queryspec.QuerySpec createQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    109:150:io.crnk.core.queryspec.QuerySpec deserialize(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> a
    154:160:void deserializeIncludes(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> d
    163:163:java.lang.String[] splitValues(java.lang.String) -> a
    167:173:void deserializeFields(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> a
    176:197:void deserializeFilter(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> b
    201:216:java.lang.Class getAttributeType(io.crnk.core.queryspec.QuerySpec,java.util.List) -> a
    222:231:java.lang.Class getAttributeType(java.lang.Class,java.lang.String) -> a
    235:246:void deserializeSort(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> e
    249:252:void deserializeUnknown(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> c
    255:260:java.util.List parseParameters(java.util.Map,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    264:306:io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter parseParameter(java.lang.String,java.util.Set,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    310:319:java.util.List parseParameterNameArguments(java.lang.String,int) -> a
    324:345:void parseFilterParameterName(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.util.List,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    352:363:void legacyParseFilterParameterName(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.util.List,io.crnk.core.engine.information.resource.ResourceInformation) -> b
    366:374:void parseFilterOperator(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.util.List) -> a
    377:378:boolean isResourceType(java.lang.String) -> b
    382:387:io.crnk.core.queryspec.FilterOperator findOperator(java.lang.String) -> c
    391:397:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation(java.lang.String,java.lang.String) -> a
    401:401:java.util.List splitAttributePath(java.lang.String,io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> a
    419:420:void setAllowUnknownParameters(boolean) -> b
    35:35:void <clinit>() -> <clinit>
io.crnk.core.queryspec.DefaultQuerySpecDeserializer$1 -> io.crnk.core.d.c:
    int[] $SwitchMap$io$crnk$core$resource$RestrictedQueryParamsMembers -> a
    121:121:void <clinit>() -> <clinit>
io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter -> io.crnk.core.d.d:
    java.lang.String pageParameter -> b
    java.lang.String name -> c
    io.crnk.core.resource.RestrictedQueryParamsMembers paramType -> d
    java.lang.String strParamType -> e
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> f
    io.crnk.core.queryspec.FilterOperator operator -> g
    java.util.List attributePath -> h
    java.util.Set values -> i
    io.crnk.core.queryspec.DefaultQuerySpecDeserializer this$0 -> a
    426:426:void <init>(io.crnk.core.queryspec.DefaultQuerySpecDeserializer) -> <init>
    458:458:java.lang.String toString() -> toString
    490:490:java.util.Set getValues() -> a
    426:426:io.crnk.core.engine.information.resource.ResourceInformation access$000(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> a
    426:426:io.crnk.core.resource.RestrictedQueryParamsMembers access$100(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> b
    426:426:java.lang.String access$200(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> c
    426:426:java.util.Set access$300(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> d
    426:426:java.util.List access$400(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> e
    426:426:io.crnk.core.queryspec.FilterOperator access$500(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> f
    426:426:java.lang.String access$600(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter) -> g
    426:426:java.lang.String access$602(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.lang.String) -> a
    426:426:io.crnk.core.resource.RestrictedQueryParamsMembers access$102(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,io.crnk.core.resource.RestrictedQueryParamsMembers) -> a
    426:426:java.lang.String access$702(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.lang.String) -> b
    426:426:java.util.Set access$302(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.util.Set) -> a
    426:426:io.crnk.core.engine.information.resource.ResourceInformation access$002(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    426:426:java.lang.String access$202(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.lang.String) -> c
    426:426:io.crnk.core.queryspec.FilterOperator access$502(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,io.crnk.core.queryspec.FilterOperator) -> a
    426:426:java.util.List access$402(io.crnk.core.queryspec.DefaultQuerySpecDeserializer$Parameter,java.util.List) -> a
io.crnk.core.queryspec.DefaultQuerySpecSerializer -> io.crnk.core.d.e:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> a
    25:27:void <init>(io.crnk.core.engine.registry.ResourceRegistry) -> <init>
    30:31:void put(java.util.Map,java.lang.String,java.lang.String) -> a
    34:34:java.lang.String toKey(java.util.List) -> a
    38:38:java.lang.String addResourceType(io.crnk.core.resource.RestrictedQueryParamsMembers,java.lang.String,java.lang.String) -> a
    42:42:java.lang.String serializeValue(java.lang.Object) -> a
    47:49:java.util.Map serialize(io.crnk.core.queryspec.QuerySpec) -> a
    53:75:void serialize(io.crnk.core.queryspec.QuerySpec,java.util.Map,io.crnk.core.queryspec.QuerySpec) -> a
    78:98:void serializeFilters(io.crnk.core.queryspec.QuerySpec,java.lang.String,java.util.Map) -> a
    101:116:void serializeSorting(io.crnk.core.queryspec.QuerySpec,java.lang.String,java.util.Map) -> b
    119:131:void serializeIncludedFields(io.crnk.core.queryspec.QuerySpec,java.lang.String,java.util.Map) -> c
    134:146:void serializeIncludedRelations(io.crnk.core.queryspec.QuerySpec,java.lang.String,java.util.Map) -> d
io.crnk.core.queryspec.Direction -> io.crnk.core.d.f:
    io.crnk.core.queryspec.Direction ASC -> a
    io.crnk.core.queryspec.Direction DESC -> b
    io.crnk.core.queryspec.Direction[] $VALUES -> c
    3:3:io.crnk.core.queryspec.Direction[] values() -> values
    3:3:io.crnk.core.queryspec.Direction valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:4:void <clinit>() -> <clinit>
io.crnk.core.queryspec.FilterOperator -> io.crnk.core.d.g:
    io.crnk.core.queryspec.FilterOperator AND -> a
    io.crnk.core.queryspec.FilterOperator LIKE -> b
    io.crnk.core.queryspec.FilterOperator OR -> c
    io.crnk.core.queryspec.FilterOperator NOT -> d
    io.crnk.core.queryspec.FilterOperator EQ -> e
    io.crnk.core.queryspec.FilterOperator LT -> f
    io.crnk.core.queryspec.FilterOperator LE -> g
    io.crnk.core.queryspec.FilterOperator GT -> h
    io.crnk.core.queryspec.FilterOperator GE -> i
    io.crnk.core.queryspec.FilterOperator NEQ -> j
    java.lang.String id -> k
    173:175:void <init>(java.lang.String) -> <init>
    178:178:java.lang.String name() -> a
    183:186:int hashCode() -> hashCode
    191:195:boolean equals(java.lang.Object) -> equals
    200:200:java.lang.String toString() -> toString
    204:204:java.lang.String getName() -> b
    boolean matches(java.lang.Object,java.lang.Object) -> a
    15:163:void <clinit>() -> <clinit>
io.crnk.core.queryspec.FilterOperator$1 -> io.crnk.core.d.h:
    15:15:void <init>(java.lang.String) -> <init>
    19:19:boolean matches(java.lang.Object,java.lang.Object) -> a
io.crnk.core.queryspec.FilterOperator$10 -> io.crnk.core.d.i:
    163:163:void <init>(java.lang.String) -> <init>
    167:167:boolean matches(java.lang.Object,java.lang.Object) -> a
io.crnk.core.queryspec.FilterOperator$2 -> io.crnk.core.d.j:
    31:31:void <init>(java.lang.String) -> <init>
    35:58:boolean matches(java.lang.Object,java.lang.Object) -> a
io.crnk.core.queryspec.FilterOperator$3 -> io.crnk.core.d.k:
    66:66:void <init>(java.lang.String) -> <init>
    70:70:boolean matches(java.lang.Object,java.lang.Object) -> a
io.crnk.core.queryspec.FilterOperator$4 -> io.crnk.core.d.l:
    78:78:void <init>(java.lang.String) -> <init>
    82:82:boolean matches(java.lang.Object,java.lang.Object) -> a
io.crnk.core.queryspec.FilterOperator$5 -> io.crnk.core.d.m:
    90:90:void <init>(java.lang.String) -> <init>
    94:97:boolean matches(java.lang.Object,java.lang.Object) -> a
io.crnk.core.queryspec.FilterOperator$6 -> io.crnk.core.d.n:
    105:105:void <init>(java.lang.String) -> <init>
    110:112:boolean matches(java.lang.Object,java.lang.Object) -> a
io.crnk.core.queryspec.FilterOperator$7 -> io.crnk.core.d.o:
    120:120:void <init>(java.lang.String) -> <init>
    125:127:boolean matches(java.lang.Object,java.lang.Object) -> a
io.crnk.core.queryspec.FilterOperator$8 -> io.crnk.core.d.p:
    135:135:void <init>(java.lang.String) -> <init>
    140:142:boolean matches(java.lang.Object,java.lang.Object) -> a
io.crnk.core.queryspec.FilterOperator$9 -> io.crnk.core.d.q:
    149:149:void <init>(java.lang.String) -> <init>
    154:156:boolean matches(java.lang.Object,java.lang.Object) -> a
io.crnk.core.queryspec.FilterSpec -> io.crnk.core.d.r:
    io.crnk.core.queryspec.FilterOperator operator -> b
    java.lang.Object value -> c
    java.util.List expressions -> d
    18:19:void <init>() -> <init>
    22:28:void <init>(io.crnk.core.queryspec.FilterSpec) -> <init>
    37:42:void <init>(java.util.List,io.crnk.core.queryspec.FilterOperator,java.lang.Object) -> <init>
    45:49:void <init>(java.util.List,io.crnk.core.queryspec.FilterOperator,java.lang.Object,java.util.List) -> <init>
    52:52:io.crnk.core.queryspec.FilterSpec and(java.util.Collection) -> a
    56:64:io.crnk.core.queryspec.FilterSpec and(io.crnk.core.queryspec.FilterSpec[]) -> a
    91:102:java.util.List cloneExpressions(java.util.List,boolean) -> a
    106:109:void assertOperator() -> h
    112:118:void assertNotExpressions() -> i
    121:121:io.crnk.core.queryspec.FilterOperator getOperator() -> b
    125:126:void setOperator(io.crnk.core.queryspec.FilterOperator) -> a
    129:129:java.lang.Object getValue() -> c
    137:137:java.util.List getExpression() -> d
    147:151:io.crnk.core.queryspec.FilterSpec addExpression(io.crnk.core.queryspec.FilterSpec) -> a
    157:157:boolean hasExpressions() -> e
    162:162:int hashCode() -> hashCode
    167:174:boolean equals(java.lang.Object) -> equals
    179:194:java.lang.String toString() -> toString
    198:208:void appendExpressions(java.lang.StringBuilder,int) -> a
    211:226:void appendNot(java.lang.StringBuilder,int) -> b
    235:238:io.crnk.core.queryspec.FilterSpec normalize() -> f
    243:243:io.crnk.core.queryspec.FilterSpec clone() -> g
    248:248:int compareTo(io.crnk.core.queryspec.FilterSpec) -> b
    12:12:java.lang.Object clone() -> clone
    12:12:int compareTo(java.lang.Object) -> compareTo
io.crnk.core.queryspec.InMemoryEvaluator -> io.crnk.core.d.s:
    21:21:void <init>() -> <init>
    24:37:boolean matches(java.lang.Object,io.crnk.core.queryspec.FilterSpec) -> a
    41:51:boolean matchesPrimitiveOperator(java.lang.Object,io.crnk.core.queryspec.FilterSpec) -> b
    56:62:boolean matchesAny(java.util.Collection,io.crnk.core.queryspec.FilterOperator,java.lang.Object) -> a
    66:71:boolean matchesOr(java.lang.Object,java.util.List) -> a
    75:80:boolean matchesAnd(java.lang.Object,java.util.List) -> b
    84:114:void eval(java.lang.Iterable,io.crnk.core.queryspec.QuerySpec,io.crnk.core.resource.list.ResourceList) -> a
    117:120:void applySorting(java.util.List,java.util.List) -> a
    123:134:void applyPaging(java.util.List,io.crnk.core.queryspec.QuerySpec) -> a
    137:146:void applyFilter(java.util.List,io.crnk.core.queryspec.FilterSpec) -> a
io.crnk.core.queryspec.InMemoryEvaluator$SortSpecComparator -> io.crnk.core.d.t:
    java.util.List sortSpecs -> a
    152:154:void <init>(java.util.List) -> <init>
    159:171:int compare(java.lang.Object,java.lang.Object) -> compare
    175:185:int compare(java.lang.Comparable,java.lang.Comparable) -> a
io.crnk.core.queryspec.IncludeFieldSpec -> io.crnk.core.d.u:
    10:11:void <init>(java.util.List) -> <init>
io.crnk.core.queryspec.IncludeRelationSpec -> io.crnk.core.d.v:
    10:11:void <init>(java.util.List) -> <init>
io.crnk.core.queryspec.IncludeSpec -> io.crnk.core.d.w:
    13:17:void <init>(java.util.List) -> <init>
    21:21:java.lang.String toString() -> toString
io.crnk.core.queryspec.QuerySpec -> io.crnk.core.d.x:
    java.lang.Class resourceClass -> a
    java.lang.String resourceType -> b
    java.util.List filters -> c
    java.util.List sort -> d
    java.util.List includedFields -> e
    java.util.List includedRelations -> f
    java.util.Map relatedSpecs -> g
    io.crnk.core.queryspec.pagingspec.PagingSpec pagingSpec -> h
    42:43:void <init>(java.lang.Class) -> <init>
    29:56:void <init>(java.lang.Class,java.lang.String) -> <init>
    59:60:void <init>(io.crnk.core.engine.information.resource.ResourceInformation) -> <init>
    63:63:java.lang.String getResourceType() -> a
    67:67:java.lang.Class getResourceClass() -> b
    82:85:io.crnk.core.resource.list.DefaultResourceList apply(java.lang.Iterable) -> a
    101:103:void apply(java.lang.Iterable,io.crnk.core.resource.list.ResourceList) -> a
    107:115:int hashCode() -> hashCode
    120:132:boolean equals(java.lang.Object) -> equals
    136:140:java.lang.Long getLimit() -> c
    144:150:void setLimit(java.lang.Long) -> a
    153:157:long getOffset() -> d
    161:167:void setOffset(long) -> a
    170:170:io.crnk.core.queryspec.pagingspec.PagingSpec getPagingSpec() -> e
    174:175:io.crnk.core.queryspec.QuerySpec setPagingSpec(io.crnk.core.queryspec.pagingspec.PagingSpec) -> a
    179:179:java.util.List getFilters() -> f
    206:206:java.util.List getSort() -> g
    214:214:java.util.List getIncludedFields() -> h
    222:222:java.util.List getIncludedRelations() -> i
    234:234:java.util.Map getRelatedSpecs() -> j
    238:238:java.util.Collection getNestedSpecs() -> k
    259:260:void addFilter(io.crnk.core.queryspec.FilterSpec) -> a
    263:264:void addSort(io.crnk.core.queryspec.SortSpec) -> a
    267:268:void includeField(java.util.List) -> a
    271:272:void includeRelation(java.util.List) -> b
    275:278:io.crnk.core.queryspec.QuerySpec getQuerySpec(java.lang.String) -> a
    287:290:io.crnk.core.queryspec.QuerySpec getQuerySpec(java.lang.Class) -> a
    295:299:io.crnk.core.queryspec.QuerySpec getQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    307:307:io.crnk.core.queryspec.QuerySpec getOrCreateQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> b
    311:311:io.crnk.core.queryspec.QuerySpec getOrCreateQuerySpec(java.lang.Class) -> b
    315:334:io.crnk.core.queryspec.QuerySpec getOrCreateQuerySpec(java.lang.Class,java.lang.String) -> a
    338:343:void verifyNotNull(java.lang.Class,java.lang.String) -> b
    358:358:io.crnk.core.queryspec.QuerySpec duplicate() -> l
    362:379:io.crnk.core.queryspec.QuerySpec clone() -> m
    385:393:java.lang.String toString() -> toString
    23:23:java.lang.Object clone() -> clone
io.crnk.core.queryspec.QuerySpecDeserializer -> io.crnk.core.d.y:
    void init(io.crnk.core.queryspec.QuerySpecDeserializerContext) -> a
    io.crnk.core.queryspec.QuerySpec deserialize(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> a
io.crnk.core.queryspec.QuerySpecDeserializerContext -> io.crnk.core.d.z:
    io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> a
    io.crnk.core.engine.parser.TypeParser getTypeParser() -> b
io.crnk.core.queryspec.QuerySpecSerializer -> io.crnk.core.d.A:
    java.util.Map serialize(io.crnk.core.queryspec.QuerySpec) -> a
io.crnk.core.queryspec.SortSpec -> io.crnk.core.d.B:
    io.crnk.core.queryspec.Direction direction -> b
    16:19:void <init>(java.util.List,io.crnk.core.queryspec.Direction) -> <init>
    30:30:io.crnk.core.queryspec.Direction getDirection() -> b
    39:42:int hashCode() -> hashCode
    47:54:boolean equals(java.lang.Object) -> equals
    59:63:java.lang.String toString() -> toString
    68:68:io.crnk.core.queryspec.SortSpec clone() -> c
    9:9:java.lang.Object clone() -> clone
io.crnk.core.queryspec.internal.DefaultQueryPathResolver -> io.crnk.core.d.a.a:
    io.crnk.core.queryspec.mapper.QuerySpecUrlContext ctx -> a
    boolean allowUnknownAttributes -> b
    boolean mapJsonNames -> c
    28:34:void <init>() -> <init>
    38:39:void init(io.crnk.core.queryspec.mapper.QuerySpecUrlContext) -> a
    43:123:io.crnk.core.queryspec.mapper.QueryPathSpec resolve(io.crnk.core.engine.information.resource.ResourceInformation,java.util.List,io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType,java.lang.String) -> a
    133:134:void setAllowUnknownAttributes(boolean) -> a
io.crnk.core.queryspec.internal.DefaultQueryPathResolver$SubTypeMap -> io.crnk.core.d.a.b:
    io.crnk.core.engine.internal.utils.MultivaluedMap mapping -> b
    io.crnk.core.queryspec.internal.DefaultQueryPathResolver this$0 -> a
    147:159:void <init>(io.crnk.core.queryspec.internal.DefaultQueryPathResolver,io.crnk.core.engine.registry.ResourceRegistry) -> <init>
    162:164:java.util.List findSubTypes(java.lang.String) -> a
    168:179:void findSubTypes(java.util.List,java.lang.String) -> a
io.crnk.core.queryspec.internal.QuerySpecAdapter -> io.crnk.core.d.a.c:
    io.crnk.core.engine.query.QueryContext queryContext -> a
    io.crnk.core.queryspec.QuerySpec querySpec -> b
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> c
    boolean compactMode -> d
    32:36:void <init>(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.registry.ResourceRegistry,io.crnk.core.engine.query.QueryContext) -> <init>
    39:39:io.crnk.core.queryspec.QuerySpec getQuerySpec() -> k
    44:51:io.crnk.legacy.queryParams.params.TypedParams getIncludedRelations() -> a
    55:62:void addRelations(java.util.Map,io.crnk.core.queryspec.QuerySpec) -> a
    65:70:java.lang.String getResourceType(io.crnk.core.queryspec.QuerySpec) -> a
    75:82:io.crnk.legacy.queryParams.params.TypedParams getIncludedFields() -> b
    86:93:void addFields(java.util.Map,io.crnk.core.queryspec.QuerySpec) -> b
    97:97:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> c
    102:102:io.crnk.core.engine.query.QueryContext getQueryContext() -> d
    127:129:io.crnk.core.engine.query.QueryAdapter duplicate() -> e
    134:135:io.crnk.legacy.queryParams.QueryParams toQueryParams() -> f
    140:140:io.crnk.core.queryspec.QuerySpec toQuerySpec() -> g
    145:145:boolean getCompactMode() -> h
    150:151:void setPagingSpec(io.crnk.core.queryspec.pagingspec.PagingSpec) -> a
    155:155:io.crnk.core.queryspec.pagingspec.PagingSpec getPagingSpec() -> i
    160:160:boolean isEmpty() -> j
    164:165:void setCompactMode(boolean) -> a
    169:169:java.lang.String toString() -> toString
io.crnk.core.queryspec.internal.QuerySpecAdapterBuilder -> io.crnk.core.d.a.d:
    io.crnk.core.queryspec.mapper.QuerySpecUrlMapper querySpecUrlMapper -> a
    io.crnk.core.module.ModuleRegistry moduleRegistry -> b
    23:26:void <init>(io.crnk.core.queryspec.mapper.QuerySpecUrlMapper,io.crnk.core.module.ModuleRegistry) -> <init>
    31:37:io.crnk.core.engine.query.QueryAdapter build(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map,io.crnk.core.engine.query.QueryContext) -> a
io.crnk.core.queryspec.internal.UrlMapperAdapter -> io.crnk.core.d.a.e:
    io.crnk.core.queryspec.QuerySpecDeserializer deserializer -> a
    io.crnk.core.queryspec.QuerySpecSerializer serializer -> b
    io.crnk.core.queryspec.mapper.QuerySpecUrlContext ctx -> c
    25:27:void <init>(io.crnk.core.queryspec.QuerySpecDeserializer) -> <init>
    31:33:void init(io.crnk.core.queryspec.mapper.QuerySpecUrlContext) -> a
    37:40:java.util.Map serialize(io.crnk.core.queryspec.QuerySpec) -> a
    45:45:io.crnk.core.queryspec.QuerySpec deserialize(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> a
    58:61:void setAllowUnknownAttributes(boolean) -> a
    73:76:void setAllowUnknownParameters(boolean) -> b
io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper -> io.crnk.core.d.b.a:
    org.slf4j.Logger LOGGER -> c
    io.crnk.core.queryspec.FilterOperator defaultOperator -> d
    java.util.Set supportedOperators -> e
    boolean enforceDotPathSeparator -> f
    boolean ignoreParseExceptions -> g
    boolean allowUnknownParameters -> h
    io.crnk.core.queryspec.mapper.QuerySpecUrlContext context -> a
    io.crnk.core.queryspec.mapper.QueryPathResolver pathResolver -> b
    24:46:void <init>() -> <init>
    50:52:void init(io.crnk.core.queryspec.mapper.QuerySpecUrlContext) -> a
    75:76:void setAllowUnknownAttributes(boolean) -> a
    107:107:io.crnk.core.queryspec.QuerySpec createQuerySpec(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    112:123:void init(io.crnk.core.queryspec.QuerySpecDeserializerContext) -> a
    127:168:io.crnk.core.queryspec.QuerySpec deserialize(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> a
    172:173:void put(java.util.Map,java.lang.String,java.lang.String) -> a
    176:177:java.lang.String toJsonPath(io.crnk.core.engine.information.resource.ResourceInformation,java.util.List) -> a
    181:182:java.lang.String addResourceType(io.crnk.core.queryspec.mapper.QueryParameterType,java.lang.String,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    186:186:java.lang.String serializeValue(java.lang.Object) -> a
    191:193:java.util.Map serialize(io.crnk.core.queryspec.QuerySpec) -> a
    197:229:void serialize(io.crnk.core.queryspec.QuerySpec,java.util.Map,io.crnk.core.queryspec.QuerySpec) -> a
    232:251:void serializeFilters(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> a
    254:269:void serializeSorting(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> b
    272:284:void serializeIncludedFields(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> c
    287:299:void serializeIncludedRelations(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> d
    303:312:void deserializeIncludes(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.mapper.QueryParameter) -> a
    315:315:java.lang.String[] splitValues(java.lang.String) -> c
    319:327:void deserializeFields(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.mapper.QueryParameter) -> b
    330:356:void deserializeFilter(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.mapper.QueryParameter) -> c
    360:375:void deserializeSort(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.mapper.QueryParameter) -> e
    378:381:void deserializeUnknown(io.crnk.core.queryspec.QuerySpec,io.crnk.core.queryspec.mapper.QueryParameter) -> d
    385:390:java.util.List parseParameters(java.util.Map,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    395:430:io.crnk.core.queryspec.mapper.QueryParameter parseParameter(java.lang.String,java.util.Set,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    434:443:java.util.List parseParameterNameArguments(java.lang.String,int) -> a
    449:468:void parseFilterParameterName(io.crnk.core.queryspec.mapper.QueryParameter,java.util.List,io.crnk.core.engine.information.resource.ResourceInformation) -> a
    475:486:void legacyParseFilterParameterName(io.crnk.core.queryspec.mapper.QueryParameter,java.util.List,io.crnk.core.engine.information.resource.ResourceInformation) -> b
    489:497:void parseFilterOperator(io.crnk.core.queryspec.mapper.QueryParameter,java.util.List) -> a
    500:501:boolean isResourceType(java.lang.String) -> a
    505:510:io.crnk.core.queryspec.FilterOperator findOperator(java.lang.String) -> b
    514:520:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation(java.lang.String,java.lang.String) -> a
    524:524:java.util.List splitAttributePath(java.lang.String,io.crnk.core.queryspec.mapper.QueryParameter) -> a
    540:541:void setAllowUnknownParameters(boolean) -> b
    22:22:void <clinit>() -> <clinit>
io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper$1 -> io.crnk.core.d.b.b:
    io.crnk.core.queryspec.QuerySpecDeserializerContext val$ctx -> a
    io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper this$0 -> b
    112:112:void <init>(io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper,io.crnk.core.queryspec.QuerySpecDeserializerContext) -> <init>
    115:115:io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> a
    120:120:io.crnk.core.engine.parser.TypeParser getTypeParser() -> b
io.crnk.core.queryspec.mapper.DefaultQuerySpecUrlMapper$2 -> io.crnk.core.d.b.c:
    int[] $SwitchMap$io$crnk$core$queryspec$mapper$QueryParameterType -> a
    139:139:void <clinit>() -> <clinit>
io.crnk.core.queryspec.mapper.QueryParameter -> io.crnk.core.d.b.d:
    java.lang.String name -> a
    io.crnk.core.queryspec.mapper.QueryParameterType type -> b
    java.lang.String pagingType -> c
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> d
    io.crnk.core.queryspec.FilterOperator operator -> e
    java.util.List attributePath -> f
    java.util.Set values -> g
    io.crnk.core.engine.parser.TypeParser typeParser -> h
    30:32:void <init>(io.crnk.core.engine.parser.TypeParser) -> <init>
    49:49:java.lang.String toString() -> toString
    54:54:java.lang.String getName() -> a
    58:58:io.crnk.core.queryspec.mapper.QueryParameterType getType() -> b
    62:62:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> c
    66:66:io.crnk.core.queryspec.FilterOperator getOperator() -> d
    70:70:java.util.List getAttributePath() -> e
    74:74:java.util.Set getValues() -> f
    78:79:void setName(java.lang.String) -> a
    82:83:void setType(io.crnk.core.queryspec.mapper.QueryParameterType) -> a
    86:87:void setValues(java.util.Set) -> a
    90:91:void setOperator(io.crnk.core.queryspec.FilterOperator) -> a
    94:95:void setResourceInformation(io.crnk.core.engine.information.resource.ResourceInformation) -> a
    98:98:java.lang.String getPagingType() -> g
    102:103:void setPagingType(java.lang.String) -> b
    106:107:void setAttributePath(java.util.List) -> a
io.crnk.core.queryspec.mapper.QueryParameterType -> io.crnk.core.d.b.e:
    io.crnk.core.queryspec.mapper.QueryParameterType FILTER -> a
    io.crnk.core.queryspec.mapper.QueryParameterType SORT -> b
    io.crnk.core.queryspec.mapper.QueryParameterType PAGE -> c
    io.crnk.core.queryspec.mapper.QueryParameterType FIELDS -> d
    io.crnk.core.queryspec.mapper.QueryParameterType INCLUDE -> e
    io.crnk.core.queryspec.mapper.QueryParameterType UNKNOWN -> f
    io.crnk.core.queryspec.mapper.QueryParameterType[] $VALUES -> g
    3:3:io.crnk.core.queryspec.mapper.QueryParameterType[] values() -> values
    3:3:io.crnk.core.queryspec.mapper.QueryParameterType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:29:void <clinit>() -> <clinit>
io.crnk.core.queryspec.mapper.QueryPathResolver -> io.crnk.core.d.b.f:
    void init(io.crnk.core.queryspec.mapper.QuerySpecUrlContext) -> a
    io.crnk.core.queryspec.mapper.QueryPathSpec resolve(io.crnk.core.engine.information.resource.ResourceInformation,java.util.List,io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType,java.lang.String) -> a
    void setAllowUnknownAttributes(boolean) -> a
io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType -> io.crnk.core.d.b.g:
    io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType JAVA -> a
    io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType JSON -> b
    io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType[] $VALUES -> c
    10:10:io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType[] values() -> values
    10:10:io.crnk.core.queryspec.mapper.QueryPathResolver$NamingType valueOf(java.lang.String) -> valueOf
    10:10:void <init>(java.lang.String,int) -> <init>
    10:12:void <clinit>() -> <clinit>
io.crnk.core.queryspec.mapper.QueryPathSpec -> io.crnk.core.d.b.h:
    java.lang.reflect.Type valueType -> a
    java.util.List attributePath -> b
    12:15:void <init>(java.lang.reflect.Type,java.util.List) -> <init>
    18:18:java.lang.reflect.Type getValueType() -> a
    22:22:java.util.List getAttributePath() -> b
io.crnk.core.queryspec.mapper.QuerySpecUrlContext -> io.crnk.core.d.b.i:
    io.crnk.core.engine.registry.ResourceRegistry getResourceRegistry() -> a
    io.crnk.core.engine.parser.TypeParser getTypeParser() -> b
io.crnk.core.queryspec.mapper.QuerySpecUrlMapper -> io.crnk.core.d.b.j:
    void init(io.crnk.core.queryspec.mapper.QuerySpecUrlContext) -> a
    java.util.Map serialize(io.crnk.core.queryspec.QuerySpec) -> a
    io.crnk.core.queryspec.QuerySpec deserialize(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map) -> a
io.crnk.core.queryspec.mapper.UnkonwnMappingAware -> io.crnk.core.d.b.k:
    void setAllowUnknownAttributes(boolean) -> a
    void setAllowUnknownParameters(boolean) -> b
io.crnk.core.queryspec.pagingspec.OffsetLimitPagingBehavior -> io.crnk.core.d.c.a:
    long defaultOffset -> a
    java.lang.Long defaultLimit -> b
    java.lang.Long maxPageLimit -> c
    17:27:void <init>() -> <init>
    31:39:java.util.Map serialize(io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec,java.lang.String) -> a
    44:62:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec deserialize(java.util.Map) -> a
    67:67:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec createEmptyPagingSpec() -> a
    72:72:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec createDefaultPagingSpec() -> b
    80:88:void build(io.crnk.core.resource.links.PagedLinksInformation,io.crnk.core.resource.list.ResourceList,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.queryspec.pagingspec.PagingSpecUrlBuilder) -> a
    92:92:boolean isRequired(io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec) -> a
    99:132:void doEnrichPageLinksInformation(io.crnk.core.resource.links.PagedLinksInformation,java.lang.Long,java.lang.Boolean,io.crnk.core.engine.query.QueryAdapter,boolean,io.crnk.core.queryspec.pagingspec.PagingSpecUrlBuilder) -> a
    135:140:java.lang.Long getTotalCount(io.crnk.core.resource.list.ResourceList) -> a
    144:149:java.lang.Boolean isNextPageAvailable(io.crnk.core.resource.list.ResourceList) -> b
    153:154:boolean hasPageLinks(io.crnk.core.resource.links.PagedLinksInformation) -> a
    158:165:java.lang.Long getValue(java.lang.String,java.util.Set) -> a
    182:183:void setDefaultLimit(java.lang.Long) -> a
    190:191:void setMaxPageLimit(java.lang.Long) -> b
    17:17:boolean isRequired(io.crnk.core.queryspec.pagingspec.PagingSpec) -> a
    17:17:io.crnk.core.queryspec.pagingspec.PagingSpec createEmptyPagingSpec() -> c
    17:17:io.crnk.core.queryspec.pagingspec.PagingSpec deserialize(java.util.Map) -> b
    17:17:java.util.Map serialize(io.crnk.core.queryspec.pagingspec.PagingSpec,java.lang.String) -> a
io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec -> io.crnk.core.d.c.b:
    java.lang.Long limit -> a
    java.lang.Long offset -> b
    7:12:void <init>() -> <init>
    7:17:void <init>(java.lang.Long,java.lang.Long) -> <init>
    20:20:java.lang.Long getLimit() -> a
    24:24:long getOffset() -> b
    28:29:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec setLimit(java.lang.Long) -> a
    33:34:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec setOffset(long) -> a
    39:39:io.crnk.core.queryspec.pagingspec.OffsetLimitPagingSpec clone() -> c
    44:48:int hashCode() -> hashCode
    53:61:boolean equals(java.lang.Object) -> equals
    66:68:java.lang.String toString() -> toString
    5:5:java.lang.Object clone() -> clone
    5:5:io.crnk.core.queryspec.pagingspec.PagingSpec clone() -> d
io.crnk.core.queryspec.pagingspec.PagingBehavior -> io.crnk.core.d.c.c:
    java.util.Map serialize(io.crnk.core.queryspec.pagingspec.PagingSpec,java.lang.String) -> a
    io.crnk.core.queryspec.pagingspec.PagingSpec deserialize(java.util.Map) -> b
    io.crnk.core.queryspec.pagingspec.PagingSpec createEmptyPagingSpec() -> c
    void build(io.crnk.core.resource.links.PagedLinksInformation,io.crnk.core.resource.list.ResourceList,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.queryspec.pagingspec.PagingSpecUrlBuilder) -> a
    boolean isRequired(io.crnk.core.queryspec.pagingspec.PagingSpec) -> a
io.crnk.core.queryspec.pagingspec.PagingSpec -> io.crnk.core.d.c.d:
    10:10:io.crnk.core.queryspec.pagingspec.PagingSpec clone() -> d
io.crnk.core.queryspec.pagingspec.PagingSpecUrlBuilder -> io.crnk.core.d.c.e:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> a
    io.crnk.core.engine.dispatcher.RepositoryRequestSpec requestSpec -> b
    18:21:void <init>(io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> <init>
    24:37:java.lang.String build(io.crnk.core.engine.query.QueryAdapter) -> a
io.crnk.core.queryspec.pagingspec.VoidPagingBehavior -> io.crnk.core.d.c.f:
    17:17:void <init>() -> <init>
    21:21:java.util.Map serialize(io.crnk.core.queryspec.pagingspec.PagingSpec,java.lang.String) -> a
    26:26:io.crnk.core.queryspec.pagingspec.PagingSpec deserialize(java.util.Map) -> b
    31:31:io.crnk.core.queryspec.pagingspec.PagingSpec createEmptyPagingSpec() -> c
    42:42:void build(io.crnk.core.resource.links.PagedLinksInformation,io.crnk.core.resource.list.ResourceList,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.queryspec.pagingspec.PagingSpecUrlBuilder) -> a
    47:47:boolean isRequired(io.crnk.core.queryspec.pagingspec.PagingSpec) -> a
io.crnk.core.repository.BulkRelationshipRepositoryV2 -> io.crnk.core.e.a:
    io.crnk.core.engine.internal.utils.MultivaluedMap findTargets(java.lang.Iterable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> a
io.crnk.core.repository.LinksRepositoryV2 -> io.crnk.core.e.b:
    io.crnk.core.resource.links.LinksInformation getLinksInformation(java.lang.Iterable,io.crnk.core.queryspec.QuerySpec) -> a
io.crnk.core.repository.MatchedRelationshipRepository -> io.crnk.core.e.c:
    io.crnk.core.repository.RelationshipMatcher getMatcher() -> a
io.crnk.core.repository.MetaRepositoryV2 -> io.crnk.core.e.d:
    io.crnk.core.resource.meta.MetaInformation getMetaInformation(java.lang.Iterable,io.crnk.core.queryspec.QuerySpec) -> a
io.crnk.core.repository.RelationshipMatcher -> io.crnk.core.e.e:
    java.util.List rules -> a
    11:13:void <init>() -> <init>
    16:16:io.crnk.core.repository.RelationshipMatcherRule rule() -> a
    20:20:boolean matches(io.crnk.core.engine.information.resource.ResourceField) -> a
    20:20:boolean lambda$matches$0(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.repository.RelationshipMatcherRule) -> a
io.crnk.core.repository.RelationshipMatcherRule -> io.crnk.core.e.f:
    io.crnk.core.repository.RelationshipMatcher matcher -> a
    java.lang.String sourceResourceType -> b
    java.lang.Class sourceResourceClass -> c
    boolean sourceMatchSubTypes -> d
    java.lang.String sourceField -> e
    java.lang.String targetResourceType -> f
    java.lang.Class targetResourceClass -> g
    boolean targetMatchSubTypes -> h
    java.lang.String targetField -> i
    31:33:void <init>(io.crnk.core.repository.RelationshipMatcher) -> <init>
    36:37:io.crnk.core.repository.RelationshipMatcherRule source(java.lang.String) -> a
    41:41:io.crnk.core.repository.RelationshipMatcherRule source(java.lang.Class) -> a
    45:47:io.crnk.core.repository.RelationshipMatcherRule source(java.lang.Class,boolean) -> a
    51:52:io.crnk.core.repository.RelationshipMatcherRule field(java.lang.String) -> b
    56:58:io.crnk.core.repository.RelationshipMatcherRule field(io.crnk.core.engine.information.resource.ResourceField) -> a
    62:63:io.crnk.core.repository.RelationshipMatcherRule target(java.lang.String) -> c
    67:67:io.crnk.core.repository.RelationshipMatcherRule target(java.lang.Class) -> b
    71:73:io.crnk.core.repository.RelationshipMatcherRule target(java.lang.Class,boolean) -> b
    83:84:io.crnk.core.repository.RelationshipMatcher add() -> a
    88:95:boolean matches(io.crnk.core.engine.information.resource.ResourceField) -> b
    100:100:boolean nullOrMatch(java.lang.String,java.lang.String) -> a
    104:104:boolean nullOrMatch(java.lang.Class,java.lang.Class,boolean) -> a
io.crnk.core.repository.RelationshipRepositoryV2 -> io.crnk.core.e.g:
    java.lang.Class getSourceResourceClass() -> b
    java.lang.Class getTargetResourceClass() -> c
    52:66:io.crnk.core.repository.RelationshipMatcher getMatcher() -> a
    void setRelation(java.lang.Object,java.io.Serializable,java.lang.String) -> a
    void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> a
    void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> b
    void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> c
    java.lang.Object findOneTarget(java.io.Serializable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> a
    io.crnk.core.resource.list.ResourceList findManyTargets(java.io.Serializable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> b
io.crnk.core.repository.Repository -> io.crnk.core.e.h:
io.crnk.core.repository.ResourceRepositoryBase -> io.crnk.core.e.i:
    java.lang.Class resourceClass -> a
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> b
    36:38:void <init>(java.lang.Class) -> <init>
    42:42:java.lang.Class getResourceClass() -> a
    54:66:java.lang.Object findOne(java.io.Serializable,io.crnk.core.queryspec.QuerySpec) -> a
    79:84:io.crnk.core.resource.list.ResourceList findAll(java.lang.Iterable,io.crnk.core.queryspec.QuerySpec) -> a
    95:95:java.lang.Object save(java.lang.Object) -> a
    100:100:java.lang.Object create(java.lang.Object) -> b
    110:110:void delete(java.io.Serializable) -> a
    115:116:void setResourceRegistry(io.crnk.core.engine.registry.ResourceRegistry) -> a
io.crnk.core.repository.ResourceRepositoryV2 -> io.crnk.core.e.j:
    java.lang.Class getResourceClass() -> a
    java.lang.Object findOne(java.io.Serializable,io.crnk.core.queryspec.QuerySpec) -> a
    io.crnk.core.resource.list.ResourceList findAll(io.crnk.core.queryspec.QuerySpec) -> a
    io.crnk.core.resource.list.ResourceList findAll(java.lang.Iterable,io.crnk.core.queryspec.QuerySpec) -> a
    java.lang.Object save(java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    void delete(java.io.Serializable) -> a
io.crnk.core.repository.UntypedRelationshipRepository -> io.crnk.core.e.k:
    java.lang.String getSourceResourceType() -> d
    java.lang.String getTargetResourceType() -> e
io.crnk.core.repository.UntypedResourceRepository -> io.crnk.core.e.l:
io.crnk.core.repository.decorate.RelationshipRepositoryDecorator -> io.crnk.core.e.a.a:
    void setDecoratedObject(io.crnk.core.repository.RelationshipRepositoryV2) -> a
    8:8:void setDecoratedObject(java.lang.Object) -> a_
io.crnk.core.repository.decorate.RepositoryDecoratorFactory -> io.crnk.core.e.a.b:
    23:32:java.lang.Object decorateRepository(java.lang.Object) -> a
    io.crnk.core.repository.decorate.ResourceRepositoryDecorator decorateRepository(io.crnk.core.repository.ResourceRepositoryV2) -> a
    io.crnk.core.repository.decorate.RelationshipRepositoryDecorator decorateRepository(io.crnk.core.repository.RelationshipRepositoryV2) -> a
io.crnk.core.repository.decorate.ResourceRepositoryDecorator -> io.crnk.core.e.a.c:
    void setDecoratedObject(io.crnk.core.repository.ResourceRepositoryV2) -> a
    8:8:void setDecoratedObject(java.lang.Object) -> a_
io.crnk.core.repository.foward.ForwardingDirection -> io.crnk.core.e.b.a:
    io.crnk.core.repository.foward.ForwardingDirection OWNER -> a
    io.crnk.core.repository.foward.ForwardingDirection OPPOSITE -> b
    io.crnk.core.repository.foward.ForwardingDirection[] $VALUES -> c
    3:3:io.crnk.core.repository.foward.ForwardingDirection[] values() -> values
    3:3:io.crnk.core.repository.foward.ForwardingDirection valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:13:void <clinit>() -> <clinit>
io.crnk.core.repository.foward.ForwardingRelationshipRepository -> io.crnk.core.e.b.b:
    io.crnk.core.repository.RelationshipMatcher matcher -> a
    io.crnk.core.repository.foward.strategy.ForwardingGetStrategy getStrategy -> b
    io.crnk.core.repository.foward.strategy.ForwardingSetStrategy setStrategy -> c
    java.lang.Class sourceClass -> d
    java.lang.String sourceType -> e
    io.crnk.core.repository.foward.strategy.ForwardingStrategyContext context -> f
    io.crnk.core.engine.http.HttpRequestContextProvider requestContextProvider -> g
    61:62:void <init>() -> <init>
    81:82:void <init>(java.lang.String,io.crnk.core.repository.RelationshipMatcher,io.crnk.core.repository.foward.ForwardingDirection,io.crnk.core.repository.foward.ForwardingDirection) -> <init>
    85:85:io.crnk.core.repository.foward.strategy.ForwardingGetStrategy toGetStrategy(io.crnk.core.repository.foward.ForwardingDirection) -> a
    89:89:io.crnk.core.repository.foward.strategy.ForwardingSetStrategy toSetStrategy(io.crnk.core.repository.foward.ForwardingDirection) -> b
    93:98:void <init>(java.lang.String,io.crnk.core.repository.RelationshipMatcher,io.crnk.core.repository.foward.strategy.ForwardingGetStrategy,io.crnk.core.repository.foward.strategy.ForwardingSetStrategy) -> <init>
    103:109:void setResourceRegistry(io.crnk.core.engine.registry.ResourceRegistry) -> a
    113:113:io.crnk.core.repository.RelationshipMatcher getMatcher() -> a
    118:118:java.lang.Class getSourceResourceClass() -> b
    123:123:java.lang.Class getTargetResourceClass() -> c
    128:130:void setRelation(java.lang.Object,java.io.Serializable,java.lang.String) -> a
    134:136:void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> a
    140:142:void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> b
    146:148:void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> c
    152:156:java.lang.Object findOneTarget(java.io.Serializable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> a
    161:165:io.crnk.core.resource.list.ResourceList findManyTargets(java.io.Serializable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> b
    171:173:io.crnk.core.engine.internal.utils.MultivaluedMap findTargets(java.lang.Iterable,java.lang.String,io.crnk.core.queryspec.QuerySpec) -> a
    178:179:void setHttpRequestContextProvider(io.crnk.core.engine.http.HttpRequestContextProvider) -> a
io.crnk.core.repository.foward.strategy.ForwardingGetStrategy -> io.crnk.core.e.b.a.a:
    io.crnk.core.engine.internal.utils.MultivaluedMap findTargets(java.lang.Iterable,java.lang.String,io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.query.QueryContext) -> a
io.crnk.core.repository.foward.strategy.ForwardingSetStrategy -> io.crnk.core.e.b.a.b:
    void setRelation(java.lang.Object,java.io.Serializable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> a
    void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> a
    void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> b
    void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> c
io.crnk.core.repository.foward.strategy.ForwardingStrategy -> io.crnk.core.e.b.a.c:
    void init(io.crnk.core.repository.foward.strategy.ForwardingStrategyContext) -> a
io.crnk.core.repository.foward.strategy.ForwardingStrategyBase -> io.crnk.core.e.b.a.d:
    io.crnk.core.repository.foward.strategy.ForwardingStrategyContext context -> a
    5:5:void <init>() -> <init>
    10:12:void init(io.crnk.core.repository.foward.strategy.ForwardingStrategyContext) -> a
io.crnk.core.repository.foward.strategy.ForwardingStrategyContext -> io.crnk.core.e.b.a.e:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> a
    java.lang.String sourceType -> b
    java.lang.Class sourceClass -> c
    25:29:void <init>(io.crnk.core.engine.registry.ResourceRegistry,java.lang.String,java.lang.Class) -> <init>
    32:33:io.crnk.core.engine.registry.RegistryEntry getSourceEntry() -> a
    37:37:io.crnk.core.engine.registry.RegistryEntry getTargetEntry(io.crnk.core.engine.information.resource.ResourceField) -> a
    41:41:io.crnk.core.engine.query.QueryAdapter createQueryAdapter(io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.query.QueryContext) -> a
    45:47:io.crnk.core.engine.query.QueryAdapter createSaveQueryAdapter(java.lang.String,io.crnk.core.engine.query.QueryContext) -> a
    51:53:io.crnk.core.queryspec.QuerySpec createSourceQuerySpec() -> b
    57:59:java.lang.Iterable findAll(io.crnk.core.engine.registry.RegistryEntry,java.lang.Iterable,io.crnk.core.engine.query.QueryContext) -> a
    63:65:java.lang.Object findOne(io.crnk.core.engine.registry.RegistryEntry,java.io.Serializable,io.crnk.core.engine.query.QueryContext) -> a
io.crnk.core.repository.foward.strategy.GetFromOppositeStrategy -> io.crnk.core.e.b.a.f:
    34:34:void <init>() -> <init>
    40:76:io.crnk.core.engine.internal.utils.MultivaluedMap findTargets(java.lang.Iterable,java.lang.String,io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.query.QueryContext) -> a
    83:110:void handleTarget(io.crnk.core.engine.internal.utils.MultivaluedMap,java.lang.Object,java.util.Set,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation) -> a
io.crnk.core.repository.foward.strategy.GetFromOppositeStrategy$1 -> io.crnk.core.e.b.a.g:
    io.crnk.core.repository.foward.strategy.GetFromOppositeStrategy this$0 -> a
    60:60:void <init>(io.crnk.core.repository.foward.strategy.GetFromOppositeStrategy) -> <init>
    64:64:java.util.List newList() -> a
io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy -> io.crnk.core.e.b.a.h:
    22:22:void <init>() -> <init>
    28:75:io.crnk.core.engine.internal.utils.MultivaluedMap findTargets(java.lang.Iterable,java.lang.String,io.crnk.core.queryspec.QuerySpec,io.crnk.core.engine.query.QueryContext) -> a
    83:110:io.crnk.core.engine.internal.utils.MultivaluedMap toResult(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.resource.ResourceInformation,java.util.List,java.util.List) -> a
    114:120:void addResult(io.crnk.core.engine.internal.utils.MultivaluedMap,io.crnk.core.engine.information.resource.ResourceField,java.lang.Object,java.lang.Object,java.util.Map) -> a
io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy$1 -> io.crnk.core.e.b.a.i:
    io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy this$0 -> a
    56:56:void <init>(io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy) -> <init>
    60:60:java.util.List newList() -> a
io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy$2 -> io.crnk.core.e.b.a.j:
    io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy this$0 -> a
    83:83:void <init>(io.crnk.core.repository.foward.strategy.GetFromOwnerStrategy) -> <init>
    87:87:java.util.List newList() -> a
io.crnk.core.repository.foward.strategy.SetOppositeStrategy -> io.crnk.core.e.b.a.k:
    7:7:void <init>() -> <init>
    13:13:void setRelation(java.lang.Object,java.io.Serializable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> a
    18:18:void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> a
    23:23:void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> b
    28:28:void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> c
io.crnk.core.repository.foward.strategy.SetOwnerStrategy -> io.crnk.core.e.b.a.l:
    15:15:void <init>() -> <init>
    20:32:void setRelation(java.lang.Object,java.io.Serializable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> a
    36:48:void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> a
    52:69:void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> b
    73:90:void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryContext) -> c
    93:100:java.util.Collection getOrCreateCollection(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField) -> a
io.crnk.core.repository.response.JsonApiResponse -> io.crnk.core.e.c.a:
    java.lang.Object entity -> a
    io.crnk.core.resource.meta.MetaInformation metaInformation -> b
    io.crnk.core.resource.links.LinksInformation linksInformation -> c
    java.lang.Iterable errors -> d
    20:21:void <init>() -> <init>
    24:24:java.lang.Object getEntity() -> a
    28:29:io.crnk.core.repository.response.JsonApiResponse setEntity(java.lang.Object) -> a
    33:33:io.crnk.core.resource.meta.MetaInformation getMetaInformation() -> b
    37:38:io.crnk.core.repository.response.JsonApiResponse setMetaInformation(io.crnk.core.resource.meta.MetaInformation) -> a
    42:42:io.crnk.core.resource.links.LinksInformation getLinksInformation() -> c
    46:47:io.crnk.core.repository.response.JsonApiResponse setLinksInformation(io.crnk.core.resource.links.LinksInformation) -> a
    51:51:java.lang.Iterable getErrors() -> d
    61:61:java.lang.String toString() -> toString
io.crnk.core.resource.RestrictedQueryParamsMembers -> io.crnk.core.f.a:
    io.crnk.core.resource.RestrictedQueryParamsMembers filter -> a
    io.crnk.core.resource.RestrictedQueryParamsMembers sort -> b
    io.crnk.core.resource.RestrictedQueryParamsMembers group -> c
    io.crnk.core.resource.RestrictedQueryParamsMembers page -> d
    io.crnk.core.resource.RestrictedQueryParamsMembers fields -> e
    io.crnk.core.resource.RestrictedQueryParamsMembers unknown -> f
    io.crnk.core.resource.RestrictedQueryParamsMembers include -> g
    io.crnk.core.resource.RestrictedQueryParamsMembers[] $VALUES -> h
    3:3:io.crnk.core.resource.RestrictedQueryParamsMembers[] values() -> values
    3:3:io.crnk.core.resource.RestrictedQueryParamsMembers valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:28:void <clinit>() -> <clinit>
io.crnk.core.resource.annotations.JsonApiField -> io.crnk.core.f.a.a:
    boolean sortable() -> a
    boolean filterable() -> b
    boolean postable() -> c
    boolean patchable() -> d
    boolean readable() -> e
io.crnk.core.resource.annotations.JsonApiId -> io.crnk.core.f.a.b:
io.crnk.core.resource.annotations.JsonApiIncludeByDefault -> io.crnk.core.f.a.c:
io.crnk.core.resource.annotations.JsonApiLinksInformation -> io.crnk.core.f.a.d:
io.crnk.core.resource.annotations.JsonApiLookupIncludeAutomatically -> io.crnk.core.f.a.e:
    boolean overwrite() -> a
io.crnk.core.resource.annotations.JsonApiMetaInformation -> io.crnk.core.f.a.f:
io.crnk.core.resource.annotations.JsonApiRelation -> io.crnk.core.f.a.g:
    java.lang.String idField() -> a
    io.crnk.core.resource.annotations.SerializeType serialize() -> b
    io.crnk.core.resource.annotations.LookupIncludeBehavior lookUp() -> c
    java.lang.String opposite() -> d
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior repositoryBehavior() -> e
io.crnk.core.resource.annotations.JsonApiRelationId -> io.crnk.core.f.a.h:
io.crnk.core.resource.annotations.JsonApiResource -> io.crnk.core.f.a.i:
    java.lang.String type() -> a
    java.lang.String resourcePath() -> b
    java.lang.Class pagingBehavior() -> c
io.crnk.core.resource.annotations.JsonApiToMany -> io.crnk.core.f.a.j:
    boolean lazy() -> a
    java.lang.String opposite() -> b
io.crnk.core.resource.annotations.JsonApiToOne -> io.crnk.core.f.a.k:
    boolean lazy() -> a
    java.lang.String opposite() -> b
io.crnk.core.resource.annotations.LookupIncludeBehavior -> io.crnk.core.f.a.l:
    io.crnk.core.resource.annotations.LookupIncludeBehavior DEFAULT -> a
    io.crnk.core.resource.annotations.LookupIncludeBehavior NONE -> b
    io.crnk.core.resource.annotations.LookupIncludeBehavior AUTOMATICALLY_WHEN_NULL -> c
    io.crnk.core.resource.annotations.LookupIncludeBehavior AUTOMATICALLY_ALWAYS -> d
    io.crnk.core.resource.annotations.LookupIncludeBehavior[] $VALUES -> e
    9:9:io.crnk.core.resource.annotations.LookupIncludeBehavior[] values() -> values
    9:9:io.crnk.core.resource.annotations.LookupIncludeBehavior valueOf(java.lang.String) -> valueOf
    9:9:void <init>(java.lang.String,int) -> <init>
    9:27:void <clinit>() -> <clinit>
io.crnk.core.resource.annotations.RelationshipRepositoryBehavior -> io.crnk.core.f.a.m:
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior DEFAULT -> a
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior CUSTOM -> b
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior FORWARD_OWNER -> c
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior FORWARD_GET_OPPOSITE_SET_OWNER -> d
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior FORWARD_OPPOSITE -> e
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior IMPLICIT_FROM_OWNER -> f
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior IMPLICIT_GET_OPPOSITE_MODIFY_OWNER -> g
    io.crnk.core.resource.annotations.RelationshipRepositoryBehavior[] $VALUES -> h
    10:10:io.crnk.core.resource.annotations.RelationshipRepositoryBehavior[] values() -> values
    10:10:io.crnk.core.resource.annotations.RelationshipRepositoryBehavior valueOf(java.lang.String) -> valueOf
    10:10:void <init>(java.lang.String,int) -> <init>
    10:72:void <clinit>() -> <clinit>
io.crnk.core.resource.annotations.SerializeType -> io.crnk.core.f.a.n:
    io.crnk.core.resource.annotations.SerializeType LAZY -> a
    io.crnk.core.resource.annotations.SerializeType ONLY_ID -> b
    io.crnk.core.resource.annotations.SerializeType EAGER -> c
    io.crnk.core.resource.annotations.SerializeType[] $VALUES -> d
    13:13:io.crnk.core.resource.annotations.SerializeType[] values() -> values
    13:13:io.crnk.core.resource.annotations.SerializeType valueOf(java.lang.String) -> valueOf
    13:13:void <init>(java.lang.String,int) -> <init>
    13:27:void <clinit>() -> <clinit>
io.crnk.core.resource.links.DefaultPagedLinksInformation -> io.crnk.core.f.b.a:
    java.lang.String first -> a
    java.lang.String last -> b
    java.lang.String next -> c
    java.lang.String prev -> d
    5:5:void <init>() -> <init>
    21:21:java.lang.String getFirst() -> a
    26:27:void setFirst(java.lang.String) -> a
    31:31:java.lang.String getLast() -> b
    36:37:void setLast(java.lang.String) -> b
    41:41:java.lang.String getNext() -> c
    46:47:void setNext(java.lang.String) -> c
    51:51:java.lang.String getPrev() -> d
    56:57:void setPrev(java.lang.String) -> d
io.crnk.core.resource.links.LinksInformation -> io.crnk.core.f.b.b:
io.crnk.core.resource.links.PagedLinksInformation -> io.crnk.core.f.b.c:
    java.lang.String getFirst() -> a
    void setFirst(java.lang.String) -> a
    java.lang.String getLast() -> b
    void setLast(java.lang.String) -> b
    java.lang.String getNext() -> c
    void setNext(java.lang.String) -> c
    java.lang.String getPrev() -> d
    void setPrev(java.lang.String) -> d
io.crnk.core.resource.links.RelatedLinksInformation -> io.crnk.core.f.b.d:
io.crnk.core.resource.links.SelfLinksInformation -> io.crnk.core.f.b.e:
    java.lang.String getSelf() -> a
    void setSelf(java.lang.String) -> a
io.crnk.core.resource.list.DefaultResourceList -> io.crnk.core.f.c.a:
    io.crnk.core.resource.links.LinksInformation links -> a
    io.crnk.core.resource.meta.MetaInformation meta -> b
    23:24:void <init>() -> <init>
    27:28:void <init>(io.crnk.core.resource.meta.MetaInformation,io.crnk.core.resource.links.LinksInformation) -> <init>
    31:34:void <init>(java.util.List,io.crnk.core.resource.meta.MetaInformation,io.crnk.core.resource.links.LinksInformation) -> <init>
    52:60:io.crnk.core.resource.meta.MetaInformation getMeta(java.lang.Class) -> a
    66:66:io.crnk.core.resource.links.LinksInformation getLinks() -> a
    70:71:void setLinks(io.crnk.core.resource.links.LinksInformation) -> a
    75:75:io.crnk.core.resource.meta.MetaInformation getMeta() -> b
    79:80:void setMeta(io.crnk.core.resource.meta.MetaInformation) -> a
io.crnk.core.resource.list.LinksContainer -> io.crnk.core.f.c.b:
    com.fasterxml.jackson.databind.node.ObjectNode getLinks() -> b
    void setLinks(com.fasterxml.jackson.databind.node.ObjectNode) -> a
io.crnk.core.resource.list.ResourceList -> io.crnk.core.f.c.c:
    io.crnk.core.resource.links.LinksInformation getLinks() -> a
    io.crnk.core.resource.meta.MetaInformation getMeta() -> b
    io.crnk.core.resource.meta.MetaInformation getMeta(java.lang.Class) -> a
io.crnk.core.resource.meta.DefaultPagedMetaInformation -> io.crnk.core.f.d.a:
    java.lang.Long totalResourceCount -> a
    5:5:void <init>() -> <init>
    12:12:java.lang.Long getTotalResourceCount() -> a
    17:18:void setTotalResourceCount(java.lang.Long) -> a
io.crnk.core.resource.meta.HasMoreResourcesMetaInformation -> io.crnk.core.f.d.b:
    java.lang.Boolean getHasMoreResources() -> a
    void setHasMoreResources(java.lang.Boolean) -> a
io.crnk.core.resource.meta.MetaContainer -> io.crnk.core.f.d.c:
    void setMeta(com.fasterxml.jackson.databind.node.ObjectNode) -> b
io.crnk.core.resource.meta.MetaInformation -> io.crnk.core.f.d.d:
io.crnk.core.resource.meta.PagedMetaInformation -> io.crnk.core.f.d.e:
    java.lang.Long getTotalResourceCount() -> a
    void setTotalResourceCount(java.lang.Long) -> a
io.crnk.core.utils.Nullable -> io.crnk.core.g.a:
    io.crnk.core.utils.Nullable EMPTY -> a
    io.crnk.core.utils.Nullable NULL -> b
    java.lang.Object value -> c
    boolean present -> d
    18:21:void <init>() -> <init>
    23:26:void <init>(java.lang.Object) -> <init>
    30:30:io.crnk.core.utils.Nullable empty() -> a
    34:34:io.crnk.core.utils.Nullable of(java.lang.Object) -> a
    42:42:io.crnk.core.utils.Nullable nullValue() -> b
    46:46:boolean isPresent() -> c
    50:53:java.lang.Object get() -> d
    58:62:int hashCode() -> hashCode
    67:71:boolean equals(java.lang.Object) -> equals
    10:12:void <clinit>() -> <clinit>
io.crnk.core.utils.Optional -> io.crnk.core.g.b:
    io.crnk.core.utils.Optional EMPTY -> a
    java.lang.Object value -> b
    11:13:void <init>(java.lang.Object) -> <init>
    17:17:io.crnk.core.utils.Optional empty() -> a
    21:22:io.crnk.core.utils.Optional of(java.lang.Object) -> a
    26:26:io.crnk.core.utils.Optional ofNullable(java.lang.Object) -> b
    30:30:boolean isPresent() -> b
    34:37:java.lang.Object get() -> c
    7:7:void <clinit>() -> <clinit>
io.crnk.core.utils.Prioritizable -> io.crnk.core.g.c:
    int getPriority() -> b
io.crnk.core.utils.Supplier -> io.crnk.core.g.d:
    java.lang.Object get() -> get
io.crnk.example.vertx.AppComponent -> io.crnk.example.vertx.a:
    void inject(io.crnk.example.vertx.CrnkVerticle) -> a
io.crnk.example.vertx.AppModule -> io.crnk.example.vertx.b:
    12:12:void <init>() -> <init>
    18:18:io.crnk.core.repository.ResourceRepositoryV2 projectRepository() -> a
io.crnk.example.vertx.AppModule_ProjectRepositoryFactory -> io.crnk.example.vertx.c:
    io.crnk.example.vertx.AppModule module -> a
    15:17:void <init>(io.crnk.example.vertx.AppModule) -> <init>
    21:21:io.crnk.core.repository.ResourceRepositoryV2 get() -> b
    25:25:io.crnk.core.repository.ResourceRepositoryV2 provideInstance(io.crnk.example.vertx.AppModule) -> a
    29:29:io.crnk.example.vertx.AppModule_ProjectRepositoryFactory create(io.crnk.example.vertx.AppModule) -> b
    33:34:io.crnk.core.repository.ResourceRepositoryV2 proxyProjectRepository(io.crnk.example.vertx.AppModule) -> c
    8:8:java.lang.Object get() -> a
io.crnk.example.vertx.CrnkVerticle -> io.crnk.example.vertx.d:
    org.slf4j.Logger LOGGER -> e
    int port -> f
    java.util.Set repositories -> a
    23:25:void <init>(int) -> <init>
    29:44:void start() -> a
    40:40:void lambda$start$3(java.lang.Throwable) -> a
    40:40:void lambda$start$2(io.vertx.reactivex.core.http.HttpServerRequest) -> a
    39:39:org.reactivestreams.Publisher lambda$start$1(io.crnk.setup.vertx.CrnkVertxHandler,io.vertx.reactivex.core.http.HttpServerRequest) -> a
    35:36:void lambda$start$0(io.crnk.core.boot.CrnkBoot) -> a
    16:16:void <clinit>() -> <clinit>
io.crnk.example.vertx.CrnkVerticle_MembersInjector -> io.crnk.example.vertx.e:
    32:33:void injectRepositories(io.crnk.example.vertx.CrnkVerticle,java.util.Set) -> a
io.crnk.example.vertx.DaggerAppComponent -> io.crnk.example.vertx.f:
    javax.inject.Provider projectRepositoryProvider -> a
    18:20:void <init>(io.crnk.example.vertx.DaggerAppComponent$Builder) -> <init>
    23:23:io.crnk.example.vertx.DaggerAppComponent$Builder builder() -> a
    31:31:java.util.Set getSetOfResourceRepositoryV2() -> b
    36:38:void initialize(io.crnk.example.vertx.DaggerAppComponent$Builder) -> a
    42:43:void inject(io.crnk.example.vertx.CrnkVerticle) -> a
    46:47:io.crnk.example.vertx.CrnkVerticle injectCrnkVerticle(io.crnk.example.vertx.CrnkVerticle) -> b
    15:15:void <init>(io.crnk.example.vertx.DaggerAppComponent$Builder,io.crnk.example.vertx.DaggerAppComponent$1) -> <init>
io.crnk.example.vertx.DaggerAppComponent$1 -> io.crnk.example.vertx.g:
io.crnk.example.vertx.DaggerAppComponent$Builder -> io.crnk.example.vertx.h:
    io.crnk.example.vertx.AppModule appModule -> a
    53:53:void <init>() -> <init>
    56:59:io.crnk.example.vertx.AppComponent build() -> a
    50:50:void <init>(io.crnk.example.vertx.DaggerAppComponent$1) -> <init>
    50:50:io.crnk.example.vertx.AppModule access$100(io.crnk.example.vertx.DaggerAppComponent$Builder) -> a
io.crnk.example.vertx.VertxApplication -> io.crnk.example.vertx.VertxApplication:
    org.slf4j.Logger LOGGER -> a
    io.crnk.example.vertx.CrnkVerticle vehicle -> b
    io.vertx.core.Vertx vertx -> c
    int port -> d
    11:19:void <init>() -> <init>
    22:26:void main(java.lang.String[]) -> main
    39:63:void start() -> a
    73:73:java.lang.String getBaseUrl() -> b
    45:52:void lambda$start$0(io.reactivex.subjects.SingleSubject,io.vertx.core.AsyncResult) -> a
    13:13:void <clinit>() -> <clinit>
io.crnk.example.vertx.model.Project -> io.crnk.example.vertx.a.a:
    java.lang.Long id -> a
    java.lang.String name -> b
    14:15:void <init>() -> <init>
    17:20:void <init>(long,java.lang.String) -> <init>
    23:23:java.lang.Long getId() -> a
    27:28:void setId(java.lang.Long) -> a
io.crnk.example.vertx.repository.ProjectRepository -> io.crnk.example.vertx.b.a:
    java.util.concurrent.atomic.AtomicLong ID_GENERATOR -> a
    java.util.Map projects -> b
    16:21:void <init>() -> <init>
    25:26:void delete(java.lang.Long) -> a
    30:34:io.crnk.example.vertx.model.Project save(io.crnk.example.vertx.model.Project) -> a
    39:39:io.crnk.core.resource.list.ResourceList findAll(io.crnk.core.queryspec.QuerySpec) -> a
    12:12:void delete(java.io.Serializable) -> a
    12:12:java.lang.Object save(java.lang.Object) -> a
    14:14:void <clinit>() -> <clinit>
io.crnk.home.HomeFormat -> io.crnk.a.a:
    io.crnk.home.HomeFormat JSON_HOME -> a
    io.crnk.home.HomeFormat JSON_API -> b
    io.crnk.home.HomeFormat[] $VALUES -> c
    3:3:io.crnk.home.HomeFormat[] values() -> values
    3:3:io.crnk.home.HomeFormat valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
io.crnk.home.HomeModule -> io.crnk.a.b:
    org.slf4j.Logger LOGGER -> a
    java.util.List extensions -> b
    io.crnk.home.HomeFormat defaultFormat -> c
    io.crnk.core.module.Module$ModuleContext moduleContext -> d
    io.crnk.core.engine.http.HttpRequestProcessor requestProcessor -> e
    51:52:void <init>() -> <init>
    55:55:io.crnk.home.HomeModule create() -> b
    59:61:io.crnk.home.HomeModule create(io.crnk.home.HomeFormat) -> a
    75:78:void setupModule(io.crnk.core.module.Module$ModuleContext) -> a
    157:181:java.util.List list(java.lang.String,io.crnk.core.engine.query.QueryContext) -> a
    185:190:java.lang.String getChildName(java.lang.String,java.lang.String) -> a
    194:222:io.crnk.core.engine.http.HttpResponse getResponse(io.crnk.core.engine.http.HttpRequestContext,java.util.List) -> a
    226:246:io.crnk.core.engine.http.HttpResponse writeJsonHome(io.crnk.core.engine.http.HttpRequestContext,java.util.List) -> b
    252:253:void setExtensions(java.util.List) -> a
    258:258:void init() -> a
    177:177:boolean lambda$list$1(java.lang.String) -> a
    176:176:java.lang.String lambda$list$0(java.lang.String,java.lang.String) -> b
    34:34:io.crnk.core.module.Module$ModuleContext access$000(io.crnk.home.HomeModule) -> a
    34:34:org.slf4j.Logger access$100() -> c
    34:34:io.crnk.home.HomeFormat access$200(io.crnk.home.HomeModule) -> b
    34:34:io.crnk.core.engine.http.HttpResponse access$300(io.crnk.home.HomeModule,io.crnk.core.engine.http.HttpRequestContext,java.util.List) -> a
    34:34:io.crnk.core.engine.http.HttpResponse access$400(io.crnk.home.HomeModule,io.crnk.core.engine.http.HttpRequestContext,java.util.List) -> b
    36:36:void <clinit>() -> <clinit>
io.crnk.home.HomeModule$HomeHttpRequestProcessor -> io.crnk.a.c:
    io.crnk.home.HomeModule this$0 -> a
    80:80:void <init>(io.crnk.home.HomeModule) -> <init>
    84:84:boolean supportsAsync() -> a
    89:113:boolean accepts(io.crnk.core.engine.http.HttpRequestContext) -> a
    119:147:io.crnk.core.engine.result.Result processAsync(io.crnk.core.engine.http.HttpRequestContext) -> c
    152:152:int getPriority() -> b
io.crnk.home.HomeModuleExtension -> io.crnk.a.d:
    java.util.List paths -> a
    10:12:void <init>() -> <init>
    16:16:java.lang.Class getTargetModule() -> a
    21:21:boolean isOptional() -> b
    29:29:java.util.List getPaths() -> c
io.crnk.legacy.internal.AnnotatedRelationshipRepositoryAdapter -> io.crnk.b.a.a:
    java.lang.reflect.Method setRelationMethod -> d
    java.lang.reflect.Method setRelationsMethod -> e
    java.lang.reflect.Method addRelationsMethod -> f
    java.lang.reflect.Method removeRelationsMethod -> g
    java.lang.reflect.Method findOneTargetMethod -> h
    java.lang.reflect.Method findManyTargetsMethod -> i
    21:22:void <init>(java.lang.Object,io.crnk.legacy.internal.ParametersFactory) -> <init>
    25:30:void setRelation(java.lang.Object,java.io.Serializable,java.lang.String,io.crnk.core.engine.query.QueryAdapter) -> a
    33:38:void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryAdapter) -> a
    41:46:void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryAdapter) -> b
    49:54:void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String,io.crnk.core.engine.query.QueryAdapter) -> c
    57:61:java.lang.Object findOneTarget(java.io.Serializable,java.lang.String,io.crnk.core.engine.query.QueryAdapter) -> a
    65:69:java.lang.Object findManyTargets(java.io.Serializable,java.lang.String,io.crnk.core.engine.query.QueryAdapter) -> b
io.crnk.legacy.internal.AnnotatedRepositoryAdapter -> io.crnk.b.a.b:
    java.lang.Object implementationObject -> a
    java.lang.Class implementationClass -> b
    io.crnk.legacy.internal.ParametersFactory parametersFactory -> c
    java.lang.reflect.Method linksMethod -> d
    java.lang.reflect.Method metaMethod -> e
    24:28:void <init>(java.lang.Object,io.crnk.legacy.internal.ParametersFactory) -> <init>
    31:32:boolean linksRepositoryAvailable() -> a
    47:50:void assignLinksMethod() -> c
    53:54:boolean metaRepositoryAvailable() -> b
    58:65:io.crnk.core.resource.meta.MetaInformation getMetaInformation(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> a
    69:72:void assignMetaMethod() -> d
    75:79:void checkIfNotNull(java.lang.Class,java.lang.reflect.Method) -> a
    83:86:java.lang.Object invokeOperation(java.lang.reflect.Method,java.lang.Class,java.lang.Object[]) -> a
    91:94:java.lang.Object invokeOperation(java.lang.reflect.Method,java.lang.Class,java.lang.Object[],io.crnk.core.engine.query.QueryAdapter) -> a
    99:106:java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object[]) -> a
io.crnk.legacy.internal.AnnotatedResourceRepositoryAdapter -> io.crnk.b.a.c:
    java.lang.reflect.Method findOneMethod -> d
    java.lang.reflect.Method findAllMethod -> e
    java.lang.reflect.Method findAllWithIds -> f
    java.lang.reflect.Method saveMethod -> g
    java.lang.reflect.Method deleteMethod -> h
    24:25:void <init>(java.lang.Object,io.crnk.legacy.internal.ParametersFactory) -> <init>
    28:32:java.lang.Object findOne(java.io.Serializable,io.crnk.core.engine.query.QueryAdapter) -> a
    36:40:java.lang.Object findAll(io.crnk.core.engine.query.QueryAdapter) -> a
    44:48:java.lang.Object findAll(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> b
    52:56:java.lang.Object save(java.lang.Object) -> a
    60:65:void delete(java.io.Serializable,io.crnk.core.engine.query.QueryAdapter) -> b
io.crnk.legacy.internal.DefaultQuerySpecConverter -> io.crnk.b.a.d:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> a
    io.crnk.core.engine.parser.TypeParser typeParser -> b
    io.crnk.core.queryspec.DefaultQuerySpecDeserializer deserializer -> c
    29:33:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    37:44:io.crnk.core.queryspec.QuerySpec fromParams(java.lang.Class,io.crnk.legacy.queryParams.QueryParams) -> a
    48:53:java.lang.Class getResourceClass(java.lang.String) -> a
    57:70:void applyPaging(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> a
    74:88:void applyFiltering(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> b
    92:118:void applyFilter(io.crnk.core.queryspec.QuerySpec,java.lang.String,java.util.Set) -> a
    121:121:java.util.List splitPath(java.lang.String) -> b
    125:140:void applySorting(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> c
    143:156:void applyIncludedFields(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> d
    159:173:void applyRelatedFields(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> e
io.crnk.legacy.internal.DirectResponseRelationshipEntry -> io.crnk.b.a.e:
    io.crnk.legacy.registry.RepositoryInstanceBuilder repositoryInstanceBuilder -> a
    19:21:void <init>(io.crnk.legacy.registry.RepositoryInstanceBuilder) -> <init>
    38:38:java.lang.Object getRepositoryInstanceBuilder() -> a
    43:43:java.lang.String toString() -> toString
io.crnk.legacy.internal.DirectResponseResourceEntry -> io.crnk.b.a.f:
    io.crnk.legacy.registry.RepositoryInstanceBuilder repositoryInstanceBuilder -> a
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation information -> b
    15:18:void <init>(io.crnk.legacy.registry.RepositoryInstanceBuilder,io.crnk.core.engine.information.repository.ResourceRepositoryInformation) -> <init>
    21:21:java.lang.Object getResourceRepository() -> b
    26:26:java.lang.String toString() -> toString
    31:31:io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> a
io.crnk.legacy.internal.ParametersFactory -> io.crnk.b.a.g:
    io.crnk.legacy.internal.RepositoryMethodParameterProvider parameterProvider -> a
    15:17:void <init>(io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> <init>
    24:31:java.lang.Object[] concatenate(java.lang.Object[],java.lang.Object[]) -> a
    45:61:java.lang.Object[] buildParameters(java.lang.Object[],java.lang.reflect.Method,io.crnk.core.engine.query.QueryAdapter,java.lang.Class) -> a
    65:65:boolean isQueryType(java.lang.Class) -> a
    69:75:java.lang.Object toQueryObject(io.crnk.core.engine.query.QueryAdapter,java.lang.Class) -> a
    88:99:java.lang.Object[] buildParameters(java.lang.Object[],java.lang.reflect.Method,java.lang.Class) -> a
io.crnk.legacy.internal.QueryParamsAdapter -> io.crnk.b.a.h:
    io.crnk.core.engine.query.QueryContext queryContext -> a
    io.crnk.legacy.queryParams.QueryParams queryParams -> b
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> c
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> d
    io.crnk.core.module.ModuleRegistry moduleRegistry -> e
    28:34:void <init>(io.crnk.core.engine.information.resource.ResourceInformation,io.crnk.legacy.queryParams.QueryParams,io.crnk.core.module.ModuleRegistry,io.crnk.core.engine.query.QueryContext) -> <init>
    41:41:io.crnk.legacy.queryParams.QueryParams getQueryParams() -> k
    46:46:io.crnk.legacy.queryParams.params.TypedParams getIncludedRelations() -> a
    51:51:io.crnk.legacy.queryParams.params.TypedParams getIncludedFields() -> b
    56:59:io.crnk.core.engine.information.resource.ResourceInformation getResourceInformation() -> c
    64:64:io.crnk.core.engine.query.QueryContext getQueryContext() -> d
    96:96:void setPagingSpec(io.crnk.core.queryspec.pagingspec.PagingSpec) -> a
    101:101:io.crnk.core.queryspec.pagingspec.PagingSpec getPagingSpec() -> i
    106:106:boolean isEmpty() -> j
    111:111:io.crnk.core.engine.query.QueryAdapter duplicate() -> e
    116:116:io.crnk.legacy.queryParams.QueryParams toQueryParams() -> f
    121:122:io.crnk.core.queryspec.QuerySpec toQuerySpec() -> g
    127:127:boolean getCompactMode() -> h
io.crnk.legacy.internal.QueryParamsAdapterBuilder -> io.crnk.b.a.i:
    io.crnk.legacy.queryParams.QueryParamsBuilder queryParamsBuilder -> a
    io.crnk.core.module.ModuleRegistry moduleRegistry -> b
    19:22:void <init>(io.crnk.legacy.queryParams.QueryParamsBuilder,io.crnk.core.module.ModuleRegistry) -> <init>
    26:27:io.crnk.core.engine.query.QueryAdapter build(io.crnk.core.engine.information.resource.ResourceInformation,java.util.Map,io.crnk.core.engine.query.QueryContext) -> a
io.crnk.legacy.internal.RepositoryMethodParameterProvider -> io.crnk.b.a.j:
    java.lang.Object provide(java.lang.reflect.Method,int) -> a
io.crnk.legacy.locator.JsonServiceLocator -> io.crnk.b.b.a:
    java.lang.Object getInstance(java.lang.Class) -> a
io.crnk.legacy.locator.SampleJsonServiceLocator -> io.crnk.b.b.b:
    9:9:void <init>() -> <init>
    13:15:java.lang.Object getInstance(java.lang.Class) -> a
io.crnk.legacy.queryParams.DefaultQueryParamsConverter -> io.crnk.b.c.a:
    io.crnk.core.engine.registry.ResourceRegistry resourceRegistry -> a
    36:38:void <init>(io.crnk.core.engine.registry.ResourceRegistry) -> <init>
    42:50:io.crnk.legacy.queryParams.QueryParams fromParams(java.lang.Class,io.crnk.core.queryspec.QuerySpec) -> a
    54:59:java.lang.String getResourceType(java.lang.Class) -> a
    63:74:void applyFiltering(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> a
    77:90:void applyFilterSpec(java.util.Map,io.crnk.core.queryspec.FilterSpec) -> a
    93:93:java.lang.String joinPath(java.util.List) -> a
    97:110:void applyIncludedFields(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> b
    113:129:void applyRelatedFields(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> c
    132:147:void applySorting(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> d
    150:159:void applyPaging(io.crnk.core.queryspec.QuerySpec,io.crnk.legacy.queryParams.QueryParams) -> e
io.crnk.legacy.queryParams.DefaultQueryParamsSerializer -> io.crnk.b.c.b:
    17:17:void <init>() -> <init>
    21:34:java.util.Map serializeFilters(io.crnk.legacy.queryParams.QueryParams) -> a
    38:38:java.lang.String serializeKey(java.lang.String) -> a
    43:56:java.util.Map serializeSorting(io.crnk.legacy.queryParams.QueryParams) -> b
    61:72:java.util.Map serializeIncludedFields(io.crnk.legacy.queryParams.QueryParams) -> c
    77:94:java.util.Map serializeIncludedRelations(io.crnk.legacy.queryParams.QueryParams) -> d
    99:107:java.util.Map serializePagination(io.crnk.legacy.queryParams.QueryParams) -> e
    113:113:java.util.Map serializeGrouping(io.crnk.legacy.queryParams.QueryParams) -> f
io.crnk.legacy.queryParams.QueryParams -> io.crnk.b.c.c:
    io.crnk.legacy.queryParams.params.TypedParams filters -> a
    io.crnk.legacy.queryParams.params.TypedParams sorting -> b
    io.crnk.legacy.queryParams.params.TypedParams grouping -> c
    io.crnk.legacy.queryParams.params.TypedParams includedFields -> d
    io.crnk.legacy.queryParams.params.TypedParams includedRelations -> e
    java.util.Map pagination -> f
    13:13:void <init>() -> <init>
    28:28:io.crnk.legacy.queryParams.params.TypedParams getFilters() -> a
    32:33:void setFilters(io.crnk.legacy.queryParams.params.TypedParams) -> a
    36:36:io.crnk.legacy.queryParams.params.TypedParams getSorting() -> b
    40:41:void setSorting(io.crnk.legacy.queryParams.params.TypedParams) -> b
    48:49:void setGrouping(io.crnk.legacy.queryParams.params.TypedParams) -> c
    52:52:java.util.Map getPagination() -> c
    56:57:void setPagination(java.util.Map) -> a
    60:60:io.crnk.legacy.queryParams.params.TypedParams getIncludedFields() -> d
    64:65:void setIncludedFields(io.crnk.legacy.queryParams.params.TypedParams) -> d
    68:68:io.crnk.legacy.queryParams.params.TypedParams getIncludedRelations() -> e
    72:73:void setIncludedRelations(io.crnk.legacy.queryParams.params.TypedParams) -> e
    77:83:int hashCode() -> hashCode
    88:112:boolean equals(java.lang.Object) -> equals
    117:117:java.lang.String toString() -> toString
io.crnk.legacy.queryParams.QueryParamsBuilder -> io.crnk.b.c.d:
    io.crnk.legacy.queryParams.QueryParamsParser queryParamsParser -> a
    57:61:io.crnk.legacy.queryParams.QueryParams buildQueryParams(io.crnk.legacy.queryParams.context.QueryParamsParserContext) -> a
io.crnk.legacy.queryParams.QueryParamsParser -> io.crnk.b.c.e:
    io.crnk.legacy.queryParams.QueryParams parse(io.crnk.legacy.queryParams.context.QueryParamsParserContext) -> a
io.crnk.legacy.queryParams.QueryParamsSerializer -> io.crnk.b.c.f:
    java.util.Map serializeFilters(io.crnk.legacy.queryParams.QueryParams) -> a
    java.util.Map serializeGrouping(io.crnk.legacy.queryParams.QueryParams) -> f
    java.util.Map serializeSorting(io.crnk.legacy.queryParams.QueryParams) -> b
    java.util.Map serializeIncludedFields(io.crnk.legacy.queryParams.QueryParams) -> c
    java.util.Map serializeIncludedRelations(io.crnk.legacy.queryParams.QueryParams) -> d
    java.util.Map serializePagination(io.crnk.legacy.queryParams.QueryParams) -> e
io.crnk.legacy.queryParams.RestrictedPaginationKeys -> io.crnk.b.c.g:
    io.crnk.legacy.queryParams.RestrictedPaginationKeys offset -> a
    io.crnk.legacy.queryParams.RestrictedPaginationKeys limit -> b
    io.crnk.legacy.queryParams.RestrictedPaginationKeys number -> c
    io.crnk.legacy.queryParams.RestrictedPaginationKeys size -> d
    io.crnk.legacy.queryParams.RestrictedPaginationKeys[] $VALUES -> e
    6:6:io.crnk.legacy.queryParams.RestrictedPaginationKeys[] values() -> values
    6:6:io.crnk.legacy.queryParams.RestrictedPaginationKeys valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    6:8:void <clinit>() -> <clinit>
io.crnk.legacy.queryParams.RestrictedSortingValues -> io.crnk.b.c.h:
    io.crnk.legacy.queryParams.RestrictedSortingValues asc -> a
    io.crnk.legacy.queryParams.RestrictedSortingValues desc -> b
    io.crnk.legacy.queryParams.RestrictedSortingValues[] $VALUES -> c
    8:8:io.crnk.legacy.queryParams.RestrictedSortingValues[] values() -> values
    8:8:io.crnk.legacy.queryParams.RestrictedSortingValues valueOf(java.lang.String) -> valueOf
    9:9:void <init>(java.lang.String,int) -> <init>
    8:17:void <clinit>() -> <clinit>
io.crnk.legacy.queryParams.context.QueryParamsParserContext -> io.crnk.b.c.a.a:
io.crnk.legacy.queryParams.context.SimpleQueryParamsParserContext -> io.crnk.b.c.a.b:
    java.util.Map paramMap -> a
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> b
    25:28:void <init>(java.util.Map,io.crnk.core.engine.information.resource.ResourceInformation) -> <init>
io.crnk.legacy.queryParams.include.Inclusion -> io.crnk.b.c.b.a:
    java.lang.String path -> a
    java.util.List pathList -> b
    15:21:void <init>(java.lang.String) -> <init>
    24:24:java.lang.String getPath() -> a
    33:42:boolean equals(java.lang.Object) -> equals
    48:48:int hashCode() -> hashCode
    53:53:java.lang.String toString() -> toString
io.crnk.legacy.queryParams.params.FilterParams -> io.crnk.b.c.c.a:
    java.util.Map params -> a
    8:12:void <init>(java.util.Map) -> <init>
    16:16:int hashCode() -> hashCode
    21:21:java.util.Map getParams() -> a
    26:31:boolean equals(java.lang.Object) -> equals
    36:36:java.lang.String toString() -> toString
io.crnk.legacy.queryParams.params.IncludedFieldsParams -> io.crnk.b.c.c.b:
    java.util.Set params -> a
    8:10:void <init>(java.util.Set) -> <init>
    13:13:java.util.Set getParams() -> a
    18:23:boolean equals(java.lang.Object) -> equals
    28:28:int hashCode() -> hashCode
    33:33:java.lang.String toString() -> toString
io.crnk.legacy.queryParams.params.IncludedRelationsParams -> io.crnk.b.c.c.c:
    java.util.Set params -> a
    10:12:void <init>(java.util.Set) -> <init>
    15:15:java.util.Set getParams() -> a
    20:25:boolean equals(java.lang.Object) -> equals
    30:30:int hashCode() -> hashCode
    35:35:java.lang.String toString() -> toString
io.crnk.legacy.queryParams.params.SortingParams -> io.crnk.b.c.c.d:
    java.util.Map params -> a
    9:13:void <init>(java.util.Map) -> <init>
    16:16:java.util.Map getParams() -> a
    21:21:int hashCode() -> hashCode
    26:31:boolean equals(java.lang.Object) -> equals
    36:36:java.lang.String toString() -> toString
io.crnk.legacy.queryParams.params.TypedParams -> io.crnk.b.c.c.e:
    java.util.Map params -> a
    12:16:void <init>(java.util.Map) -> <init>
    19:19:java.util.Map getParams() -> a
    24:29:boolean equals(java.lang.Object) -> equals
    34:34:int hashCode() -> hashCode
    39:39:java.lang.String toString() -> toString
io.crnk.legacy.registry.AnnotatedRelationshipEntryBuilder -> io.crnk.b.d.a:
    io.crnk.legacy.registry.RepositoryInstanceBuilder repositoryInstanceBuilder -> a
    io.crnk.core.module.ModuleRegistry moduleRegistry -> b
    19:22:void <init>(io.crnk.core.module.ModuleRegistry,io.crnk.legacy.registry.RepositoryInstanceBuilder) -> <init>
    49:49:io.crnk.legacy.internal.AnnotatedRelationshipRepositoryAdapter build(io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    55:55:java.lang.String toString() -> toString
io.crnk.legacy.registry.AnnotatedResourceEntry -> io.crnk.b.d.b:
    io.crnk.legacy.registry.RepositoryInstanceBuilder repositoryInstanceBuilder -> a
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation information -> b
    16:19:void <init>(io.crnk.legacy.registry.RepositoryInstanceBuilder,io.crnk.core.engine.information.repository.ResourceRepositoryInformation) -> <init>
    22:22:io.crnk.legacy.internal.AnnotatedResourceRepositoryAdapter build(io.crnk.legacy.internal.RepositoryMethodParameterProvider) -> a
    28:28:java.lang.String toString() -> toString
    35:35:io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> a
io.crnk.legacy.registry.DefaultResourceInformationProviderContext -> io.crnk.b.d.c:
    io.crnk.core.engine.information.InformationBuilder informationBuilder -> a
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> b
    io.crnk.core.engine.information.resource.ResourceInformationProvider provider -> c
    io.crnk.core.engine.parser.TypeParser typeParser -> d
    18:26:void <init>(io.crnk.core.engine.information.resource.ResourceInformationProvider,io.crnk.core.engine.information.InformationBuilder,io.crnk.core.engine.parser.TypeParser,com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    30:30:java.lang.String getResourceType(java.lang.Class) -> a
    35:35:boolean accept(java.lang.Class) -> b
    40:40:io.crnk.core.engine.parser.TypeParser getTypeParser() -> a
    45:45:io.crnk.core.engine.information.InformationBuilder getInformationBuilder() -> b
    50:51:com.fasterxml.jackson.databind.ObjectMapper getObjectMapper() -> c
io.crnk.legacy.registry.RepositoryInstanceBuilder -> io.crnk.b.d.d:
    io.crnk.legacy.locator.JsonServiceLocator jsonServiceLocator -> a
    java.lang.Class repositoryClass -> b
    14:17:void <init>(io.crnk.legacy.locator.JsonServiceLocator,java.lang.Class) -> <init>
    20:24:java.lang.Object buildRepository() -> a
io.crnk.legacy.repository.LinksRepository -> io.crnk.b.e.a:
    io.crnk.core.resource.links.LinksInformation getLinksInformation(java.lang.Iterable,io.crnk.legacy.queryParams.QueryParams) -> a
io.crnk.legacy.repository.MetaRepository -> io.crnk.b.e.b:
    io.crnk.core.resource.meta.MetaInformation getMetaInformation(java.lang.Iterable,io.crnk.legacy.queryParams.QueryParams) -> a
io.crnk.legacy.repository.RelationshipRepository -> io.crnk.b.e.c:
    void setRelation(java.lang.Object,java.io.Serializable,java.lang.String) -> a
    void setRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> a
    void addRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> b
    void removeRelations(java.lang.Object,java.lang.Iterable,java.lang.String) -> c
    java.lang.Object findOneTarget(java.io.Serializable,java.lang.String,io.crnk.legacy.queryParams.QueryParams) -> a
    java.lang.Iterable findManyTargets(java.io.Serializable,java.lang.String,io.crnk.legacy.queryParams.QueryParams) -> b
io.crnk.legacy.repository.ResourceRepository -> io.crnk.b.e.d:
    java.lang.Object findOne(java.io.Serializable,io.crnk.legacy.queryParams.QueryParams) -> a
    java.lang.Iterable findAll(io.crnk.legacy.queryParams.QueryParams) -> a
    java.lang.Iterable findAll(java.lang.Iterable,io.crnk.legacy.queryParams.QueryParams) -> a
    java.lang.Object save(java.lang.Object) -> a
    void delete(java.io.Serializable) -> a
io.crnk.legacy.repository.annotations.JsonApiAddRelations -> io.crnk.b.e.a.a:
io.crnk.legacy.repository.annotations.JsonApiDelete -> io.crnk.b.e.a.b:
io.crnk.legacy.repository.annotations.JsonApiFindAll -> io.crnk.b.e.a.c:
io.crnk.legacy.repository.annotations.JsonApiFindAllWithIds -> io.crnk.b.e.a.d:
io.crnk.legacy.repository.annotations.JsonApiFindManyTargets -> io.crnk.b.e.a.e:
io.crnk.legacy.repository.annotations.JsonApiFindOne -> io.crnk.b.e.a.f:
io.crnk.legacy.repository.annotations.JsonApiFindOneTarget -> io.crnk.b.e.a.g:
io.crnk.legacy.repository.annotations.JsonApiLinks -> io.crnk.b.e.a.h:
io.crnk.legacy.repository.annotations.JsonApiMeta -> io.crnk.b.e.a.i:
io.crnk.legacy.repository.annotations.JsonApiRelationshipRepository -> io.crnk.b.e.a.j:
    java.lang.Class source() -> a
    java.lang.Class target() -> b
io.crnk.legacy.repository.annotations.JsonApiRemoveRelations -> io.crnk.b.e.a.k:
io.crnk.legacy.repository.annotations.JsonApiResourceRepository -> io.crnk.b.e.a.l:
    java.lang.Class value() -> a
io.crnk.legacy.repository.annotations.JsonApiSave -> io.crnk.b.e.a.m:
io.crnk.legacy.repository.annotations.JsonApiSetRelation -> io.crnk.b.e.a.n:
io.crnk.legacy.repository.annotations.JsonApiSetRelations -> io.crnk.b.e.a.o:
io.crnk.legacy.repository.information.DefaultRelationshipRepositoryInformationProvider -> io.crnk.b.e.b.a:
    19:19:void <init>() -> <init>
    23:24:boolean accept(java.lang.Object) -> a
    29:32:boolean accept(java.lang.Class) -> a
    37:37:io.crnk.core.engine.information.repository.RepositoryInformation build(java.lang.Object,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> a
    48:65:io.crnk.core.engine.information.repository.RepositoryInformation buildInformation(java.lang.Object,java.lang.Class,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> a
    70:70:io.crnk.core.engine.information.repository.RepositoryMethodAccess getAccess(java.lang.Object) -> b
    74:90:java.lang.Class getSourceResourceClass(java.lang.Object,java.lang.Class) -> a
    95:111:java.lang.Class getTargetResourceClass(java.lang.Object,java.lang.Class) -> b
io.crnk.legacy.repository.information.DefaultResourceRepositoryInformationProvider -> io.crnk.b.e.b.b:
    19:19:void <init>() -> <init>
    23:24:boolean accept(java.lang.Object) -> a
    29:33:boolean accept(java.lang.Class) -> a
    43:43:io.crnk.core.engine.information.repository.RepositoryInformation build(java.lang.Object,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> a
    48:57:io.crnk.core.engine.information.repository.RepositoryInformation build(java.lang.Object,java.lang.Class,io.crnk.core.engine.information.repository.RepositoryInformationProviderContext) -> a
    62:62:io.crnk.core.engine.information.repository.RepositoryMethodAccess getAccess(java.lang.Object) -> b
    66:66:java.util.Map buildActions(java.lang.Class) -> b
    70:70:java.lang.String getPath(io.crnk.core.engine.information.resource.ResourceInformation,java.lang.Object) -> a
    74:87:java.lang.Class getResourceClass(java.lang.Object,java.lang.Class) -> a
io.crnk.reactive.ReactiveModule -> io.crnk.c.a:
    reactor.core.scheduler.Scheduler workerScheduler -> a
    14:16:void <init>() -> <init>
    26:30:void setupModule(io.crnk.core.module.Module$ModuleContext) -> a
io.crnk.reactive.ReactiveModule$ReactiveRelationshipRepositoryInformationProvider -> io.crnk.c.b:
    io.crnk.reactive.ReactiveModule this$0 -> a
    61:61:void <init>(io.crnk.reactive.ReactiveModule) -> <init>
    65:65:boolean accept(java.lang.Class) -> a
io.crnk.reactive.ReactiveModule$ReactiveResourceRepositoryInformationProvider -> io.crnk.c.c:
    io.crnk.reactive.ReactiveModule this$0 -> a
    43:43:void <init>(io.crnk.reactive.ReactiveModule) -> <init>
    47:47:boolean accept(java.lang.Class) -> a
    51:56:java.lang.Class getResourceClass(java.lang.Object,java.lang.Class) -> a
io.crnk.reactive.internal.MonoResult -> io.crnk.c.a.a:
    reactor.core.publisher.Mono mono -> a
    15:17:void <init>(reactor.core.publisher.Mono) -> <init>
    21:21:java.lang.Object get() -> a
    26:26:io.crnk.core.engine.result.Result map(java.util.function.Function) -> a
    31:35:io.crnk.core.engine.result.Result onErrorResume(java.util.function.Function) -> b
    45:45:io.crnk.core.engine.result.Result doWork(java.util.function.Consumer) -> a
    50:52:io.crnk.core.engine.result.Result zipWith(io.crnk.core.engine.result.Result,java.util.function.BiFunction) -> a
    57:61:io.crnk.core.engine.result.Result merge(java.util.function.Function) -> c
    70:70:reactor.core.publisher.Mono getMono() -> b
    58:59:reactor.core.publisher.Mono lambda$merge$1(java.util.function.Function,java.lang.Object) -> a
    32:33:reactor.core.publisher.Mono lambda$onErrorResume$0(java.util.function.Function,java.lang.Throwable) -> a
io.crnk.reactive.internal.MonoResultFactory -> io.crnk.c.a.b:
    java.lang.ThreadLocal threadLocal -> a
    15:19:void <init>() -> <init>
    23:24:io.crnk.core.engine.result.Result just(java.lang.Object) -> a
    28:32:io.crnk.core.engine.result.Result toResult(reactor.core.publisher.Mono) -> a
    37:45:io.crnk.core.engine.result.Result zip(java.util.List) -> a
    50:50:boolean isAsync() -> a
    55:59:java.lang.Object getThreadContext() -> b
    64:64:boolean hasThreadContext() -> e
    69:70:io.crnk.core.engine.result.Result attachContext(io.crnk.core.engine.result.Result,java.lang.Object) -> a
    75:75:io.crnk.core.engine.result.Result getContext() -> c
    80:81:void setThreadContext(java.lang.Object) -> b
    85:86:void clearContext() -> d
    75:75:java.lang.Object lambda$getContext$2(reactor.util.context.Context) -> a
    44:44:java.util.List lambda$zip$1(java.lang.Object[]) -> a
    30:30:reactor.util.context.Context lambda$toResult$0(java.lang.Object,reactor.util.context.Context) -> a
io.crnk.reactive.internal.adapter.ReactiveManyRelationshipRepositoryAdapter -> io.crnk.c.a.a.a:
    io.crnk.reactive.repository.ReactiveManyRelationshipRepository repository -> c
    io.crnk.core.engine.information.resource.ResourceField field -> d
    32:35:void <init>(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,io.crnk.core.module.ModuleRegistry,io.crnk.reactive.repository.ReactiveManyRelationshipRepository) -> <init>
    39:39:io.crnk.core.engine.result.Result setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    45:48:io.crnk.core.engine.result.Result setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    54:57:io.crnk.core.engine.result.Result addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    63:66:io.crnk.core.engine.result.Result removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> c
    71:71:io.crnk.core.engine.result.Result findOneTarget(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    76:81:io.crnk.core.engine.result.Result findManyTargets(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    87:90:io.crnk.core.engine.result.Result findBulkManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    96:96:io.crnk.core.engine.result.Result findBulkOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    102:102:java.lang.Object getRelationshipRepository() -> a
io.crnk.reactive.internal.adapter.ReactiveOneRelationshipRepositoryAdapter -> io.crnk.c.a.a.b:
    io.crnk.reactive.repository.ReactiveOneRelationshipRepository repository -> c
    io.crnk.core.engine.information.resource.ResourceField field -> d
    31:34:void <init>(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,io.crnk.core.module.ModuleRegistry,io.crnk.reactive.repository.ReactiveOneRelationshipRepository) -> <init>
    38:41:io.crnk.core.engine.result.Result setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    46:50:io.crnk.core.engine.result.Result findOneTarget(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    56:59:io.crnk.core.engine.result.Result findBulkOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    64:64:io.crnk.core.engine.result.Result setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    69:69:io.crnk.core.engine.result.Result addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    74:74:io.crnk.core.engine.result.Result removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> c
    79:79:io.crnk.core.engine.result.Result findManyTargets(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    85:85:io.crnk.core.engine.result.Result findBulkManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    90:90:java.lang.Object getRelationshipRepository() -> a
io.crnk.reactive.internal.adapter.ReactiveRepositoryAdapterBase -> io.crnk.c.a.a.c:
    io.crnk.core.module.ModuleRegistry moduleRegistry -> a
    io.crnk.core.engine.result.ResultFactory resultFactory -> b
    28:31:void <init>(io.crnk.core.module.ModuleRegistry) -> <init>
    37:48:io.crnk.core.engine.result.Result toResponses(reactor.core.publisher.Mono,boolean,io.crnk.core.engine.query.QueryAdapter,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.http.HttpMethod,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> a
    52:58:io.crnk.core.repository.response.JsonApiResponse toSingleResult(java.util.Map) -> a
    62:64:io.crnk.core.engine.result.Result toResponse(reactor.core.publisher.Mono,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> a
    68:79:void setInformation(io.crnk.core.repository.response.JsonApiResponse,io.crnk.core.engine.dispatcher.RepositoryRequestSpec) -> a
    64:64:void lambda$toResponse$2(io.crnk.core.engine.dispatcher.RepositoryRequestSpec,java.lang.Object) -> a
    63:63:java.lang.Object lambda$toResponse$1(java.lang.Object) -> a
    38:46:java.util.Map lambda$toResponses$0(io.crnk.core.engine.dispatcher.RepositoryRequestSpec,java.util.Map) -> a
io.crnk.reactive.internal.adapter.ReactiveRepositoryAdapterFactory -> io.crnk.c.a.a.d:
    org.slf4j.Logger LOGGER -> a
    io.crnk.core.module.ModuleRegistry moduleRegistry -> b
    reactor.core.scheduler.Scheduler workerScheduler -> c
    26:29:void <init>(io.crnk.core.module.ModuleRegistry,reactor.core.scheduler.Scheduler) -> <init>
    37:37:boolean accepts(java.lang.Object) -> a
    42:42:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter createResourceRepositoryAdapter(io.crnk.core.engine.information.repository.ResourceRepositoryInformation,java.lang.Object) -> a
    47:50:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter createRelationshipRepositoryAdapter(io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.information.repository.RelationshipRepositoryInformation,java.lang.Object) -> a
    55:63:io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter) -> a
    68:76:io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter decorate(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter) -> a
    20:20:void <clinit>() -> <clinit>
io.crnk.reactive.internal.adapter.ReactiveResourceRepositoryAdapter -> io.crnk.c.a.a.e:
    io.crnk.reactive.repository.ReactiveResourceRepository repository -> c
    io.crnk.core.engine.information.repository.ResourceRepositoryInformation repositoryInformation -> d
    io.crnk.core.engine.information.resource.ResourceInformation resourceInformation -> e
    35:39:void <init>(io.crnk.core.engine.information.repository.ResourceRepositoryInformation,io.crnk.core.module.ModuleRegistry,io.crnk.reactive.repository.ReactiveResourceRepository) -> <init>
    44:48:io.crnk.core.engine.result.Result findOne(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> a
    54:58:io.crnk.core.engine.result.Result findAll(io.crnk.core.engine.query.QueryAdapter) -> a
    63:67:io.crnk.core.engine.result.Result findAll(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> a
    72:75:io.crnk.core.engine.result.Result update(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> b
    80:83:io.crnk.core.engine.result.Result create(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> c
    88:91:io.crnk.core.engine.result.Result delete(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> d
    96:96:java.lang.Object getResourceRepository() -> a
    101:101:io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> b
io.crnk.reactive.internal.adapter.Worker -> io.crnk.c.a.a.f:
    io.crnk.core.engine.http.HttpRequestContextProvider requestContextProvider -> a
    reactor.core.scheduler.Scheduler scheduler -> b
    19:22:void <init>(io.crnk.core.engine.http.HttpRequestContextProvider,reactor.core.scheduler.Scheduler) -> <init>
    25:25:io.crnk.core.engine.result.Result work(java.util.concurrent.Callable) -> a
    26:40:io.crnk.core.engine.result.Result lambda$work$1(java.util.concurrent.Callable,io.crnk.core.engine.http.HttpRequestContext) -> a
    27:38:java.lang.Object lambda$work$0(io.crnk.core.engine.http.HttpRequestContext,java.util.concurrent.Callable) -> a
io.crnk.reactive.internal.adapter.WorkerRelationshipRepositoryAdapter -> io.crnk.c.a.a.g:
    io.crnk.reactive.internal.adapter.Worker worker -> a
    io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter adapter -> b
    21:24:void <init>(io.crnk.core.engine.internal.repository.RelationshipRepositoryAdapter,reactor.core.scheduler.Scheduler,io.crnk.core.engine.http.HttpRequestContextProvider) -> <init>
    28:28:io.crnk.core.engine.result.Result setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    33:33:io.crnk.core.engine.result.Result setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    38:38:io.crnk.core.engine.result.Result addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    43:43:io.crnk.core.engine.result.Result removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> c
    48:48:io.crnk.core.engine.result.Result findOneTarget(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    53:53:io.crnk.core.engine.result.Result findManyTargets(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    58:58:io.crnk.core.engine.result.Result findBulkManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> a
    63:63:io.crnk.core.engine.result.Result findBulkOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
    68:68:java.lang.Object getRelationshipRepository() -> a
    63:63:io.crnk.core.engine.result.Result lambda$findBulkOneTargets$7(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> c
    58:58:io.crnk.core.engine.result.Result lambda$findBulkManyTargets$6(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> d
    53:53:io.crnk.core.engine.result.Result lambda$findManyTargets$5(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> c
    48:48:io.crnk.core.engine.result.Result lambda$findOneTarget$4(java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> d
    43:43:io.crnk.core.engine.result.Result lambda$removeRelations$3(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> d
    38:38:io.crnk.core.engine.result.Result lambda$addRelations$2(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> e
    33:33:io.crnk.core.engine.result.Result lambda$setRelations$1(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> f
    28:28:io.crnk.core.engine.result.Result lambda$setRelation$0(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.engine.query.QueryAdapter) -> b
io.crnk.reactive.internal.adapter.WorkerResourceRepositoryAdapter -> io.crnk.c.a.a.h:
    io.crnk.reactive.internal.adapter.Worker worker -> a
    io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter adapter -> b
    18:21:void <init>(io.crnk.core.engine.internal.repository.ResourceRepositoryAdapter,reactor.core.scheduler.Scheduler,io.crnk.core.engine.http.HttpRequestContextProvider) -> <init>
    25:25:io.crnk.core.engine.result.Result findOne(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> a
    30:30:io.crnk.core.engine.result.Result findAll(io.crnk.core.engine.query.QueryAdapter) -> a
    35:35:io.crnk.core.engine.result.Result findAll(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> a
    40:40:io.crnk.core.engine.result.Result update(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> b
    45:45:io.crnk.core.engine.result.Result create(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> c
    50:50:io.crnk.core.engine.result.Result delete(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> d
    55:55:java.lang.Object getResourceRepository() -> a
    60:60:io.crnk.core.engine.information.repository.ResourceRepositoryInformation getRepositoryInformation() -> b
    50:50:io.crnk.core.engine.result.Result lambda$delete$5(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> e
    45:45:io.crnk.core.engine.result.Result lambda$create$4(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> f
    40:40:io.crnk.core.engine.result.Result lambda$update$3(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> g
    35:35:io.crnk.core.engine.result.Result lambda$findAll$2(java.lang.Iterable,io.crnk.core.engine.query.QueryAdapter) -> b
    30:30:io.crnk.core.engine.result.Result lambda$findAll$1(io.crnk.core.engine.query.QueryAdapter) -> b
    25:25:io.crnk.core.engine.result.Result lambda$findOne$0(java.lang.Object,io.crnk.core.engine.query.QueryAdapter) -> h
io.crnk.reactive.repository.ImmediateRepository -> io.crnk.c.b.a:
io.crnk.reactive.repository.ReactiveManyRelationshipRepository -> io.crnk.c.b.b:
    reactor.core.publisher.Mono setRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> a
    reactor.core.publisher.Mono addRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> b
    reactor.core.publisher.Mono removeRelations(java.lang.Object,java.util.Collection,io.crnk.core.engine.information.resource.ResourceField) -> c
    reactor.core.publisher.Mono findManyTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.queryspec.QuerySpec) -> a
io.crnk.reactive.repository.ReactiveOneRelationshipRepository -> io.crnk.c.b.c:
    reactor.core.publisher.Mono findOneTargets(java.util.Collection,io.crnk.core.engine.information.resource.ResourceField,io.crnk.core.queryspec.QuerySpec) -> a
    reactor.core.publisher.Mono setRelation(java.lang.Object,java.lang.Object,io.crnk.core.engine.information.resource.ResourceField) -> a
io.crnk.reactive.repository.ReactiveRelationshipRepository -> io.crnk.c.b.d:
io.crnk.reactive.repository.ReactiveResourceRepository -> io.crnk.c.b.e:
    java.lang.Class getResourceClass() -> a
    reactor.core.publisher.Mono findOne(java.lang.Object,io.crnk.core.queryspec.QuerySpec) -> a
    reactor.core.publisher.Mono findAll(io.crnk.core.queryspec.QuerySpec) -> a
    reactor.core.publisher.Mono findAll(java.util.Collection,io.crnk.core.queryspec.QuerySpec) -> a
    reactor.core.publisher.Mono save(java.lang.Object) -> a
    reactor.core.publisher.Mono create(java.lang.Object) -> b
    reactor.core.publisher.Mono delete(java.lang.Object) -> c
io.crnk.setup.vertx.CrnkVertxHandler -> io.crnk.d.a.a:
    org.slf4j.Logger LOGGER -> b
    io.crnk.core.boot.CrnkBoot boot -> a
    34:36:void <init>() -> <init>
    31:46:void <init>(java.util.function.Consumer) -> <init>
    53:64:org.reactivestreams.Publisher process(io.vertx.reactivex.core.http.HttpServerRequest) -> a
    69:106:reactor.core.publisher.Mono processRequest(io.crnk.setup.vertx.internal.VertxRequestContext) -> a
    83:93:io.vertx.reactivex.core.http.HttpServerRequest lambda$processRequest$5(io.vertx.reactivex.core.http.HttpServerRequest,io.crnk.core.engine.http.HttpResponse) -> a
    86:86:void lambda$processRequest$4(io.vertx.reactivex.core.http.HttpServerResponse,java.lang.String,java.lang.String) -> a
    64:64:java.lang.Object lambda$process$3(io.crnk.setup.vertx.internal.VertxRequestContext,java.lang.Object) -> a
    64:64:reactor.core.publisher.Mono lambda$process$2(reactor.core.publisher.Mono,io.crnk.setup.vertx.internal.VertxRequestContext) -> a
    58:60:void lambda$process$1(io.crnk.setup.vertx.internal.VertxRequestContext,io.reactivex.subjects.SingleSubject,io.vertx.reactivex.core.buffer.Buffer) -> a
    35:35:void lambda$new$0(io.crnk.core.boot.CrnkBoot) -> a
    29:29:void <clinit>() -> <clinit>
io.crnk.setup.vertx.internal.VertxModule -> io.crnk.d.a.a.a:
    5:5:void <init>() -> <init>
    10:10:void setupModule(io.crnk.core.module.Module$ModuleContext) -> a
io.crnk.setup.vertx.internal.VertxRequestContext -> io.crnk.d.a.a.b:
    io.vertx.reactivex.core.http.HttpServerRequest serverRequest -> a
    byte[] requestBody -> b
    io.crnk.core.engine.http.HttpResponse response -> c
    java.lang.String pathPrefix -> d
    23:30:void <init>(io.vertx.reactivex.core.http.HttpServerRequest,java.lang.String) -> <init>
    33:34:void setRequestBody(byte[]) -> a
    38:38:io.crnk.legacy.internal.RepositoryMethodParameterProvider getRequestParameterProvider() -> c
    43:43:java.lang.String getRequestHeader(java.lang.String) -> b
    48:55:java.util.Map getRequestParameters() -> d
    60:64:java.lang.String getPath() -> e
    69:76:java.lang.String getBaseUrl() -> f
    82:82:byte[] getRequestBody() -> g
    87:87:java.lang.String getMethod() -> h
    93:93:io.crnk.core.engine.http.HttpResponse getResponse() -> i
    98:99:void setResponse(io.crnk.core.engine.http.HttpResponse) -> a
    121:121:io.vertx.reactivex.core.http.HttpServerRequest getServerRequest() -> a
io.netty.bootstrap.AbstractBootstrap -> io.netty.a.a:
    io.netty.channel.EventLoopGroup group -> a
    io.netty.bootstrap.ChannelFactory channelFactory -> b
    java.net.SocketAddress localAddress -> c
    java.util.Map options -> d
    java.util.Map attrs -> e
    io.netty.channel.ChannelHandler handler -> f
    56:62:void <init>() -> <init>
    56:75:void <init>(io.netty.bootstrap.AbstractBootstrap) -> <init>
    82:89:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup) -> a
    94:94:io.netty.bootstrap.AbstractBootstrap self() -> n
    103:106:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class) -> a
    114:122:io.netty.bootstrap.AbstractBootstrap channelFactory(io.netty.bootstrap.ChannelFactory) -> a
    134:134:io.netty.bootstrap.AbstractBootstrap channelFactory(io.netty.channel.ChannelFactory) -> a
    141:142:io.netty.bootstrap.AbstractBootstrap localAddress(java.net.SocketAddress) -> a
    156:156:io.netty.bootstrap.AbstractBootstrap localAddress(java.lang.String,int) -> a
    171:183:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object) -> a
    211:217:io.netty.bootstrap.AbstractBootstrap validate() -> a
    io.netty.bootstrap.AbstractBootstrap clone() -> b
    233:234:io.netty.channel.ChannelFuture register() -> c
    274:278:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> b
    282:313:io.netty.channel.ChannelFuture doBind(java.net.SocketAddress) -> c
    318:349:io.netty.channel.ChannelFuture initAndRegister() -> d
    void init(io.netty.channel.Channel) -> a
    360:370:void doBind0(io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> b
    376:380:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler) -> a
    390:390:io.netty.channel.EventLoopGroup group() -> e
    io.netty.bootstrap.AbstractBootstrapConfig config() -> f
    401:407:java.util.Map copiedMap(java.util.Map) -> a
    411:411:java.util.Map options0() -> g
    415:415:java.util.Map attrs0() -> h
    419:419:java.net.SocketAddress localAddress() -> i
    424:424:io.netty.bootstrap.ChannelFactory channelFactory() -> j
    428:428:io.netty.channel.ChannelHandler handler() -> k
    432:432:java.util.Map options() -> l
    436:436:java.util.Map attrs() -> m
    441:444:void setChannelOptions(io.netty.channel.Channel,java.util.Map,io.netty.util.internal.logging.InternalLogger) -> a
    448:451:void setChannelOptions(io.netty.channel.Channel,java.util.Map$Entry[],io.netty.util.internal.logging.InternalLogger) -> a
    457:464:void setChannelOption(io.netty.channel.Channel,io.netty.channel.ChannelOption,java.lang.Object,io.netty.util.internal.logging.InternalLogger) -> a
    468:471:java.lang.String toString() -> toString
    50:50:java.lang.Object clone() -> clone
    50:50:void access$000(io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> a
io.netty.bootstrap.AbstractBootstrap$1 -> io.netty.a.b:
    io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise val$promise -> a
    io.netty.channel.ChannelFuture val$regFuture -> b
    io.netty.channel.Channel val$channel -> c
    java.net.SocketAddress val$localAddress -> d
    io.netty.bootstrap.AbstractBootstrap this$0 -> e
    296:296:void <init>(io.netty.bootstrap.AbstractBootstrap,io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise,io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress) -> <init>
    299:311:void operationComplete(io.netty.channel.ChannelFuture) -> a
    296:296:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.bootstrap.AbstractBootstrap$2 -> io.netty.a.c:
    io.netty.channel.ChannelFuture val$regFuture -> a
    io.netty.channel.Channel val$channel -> b
    java.net.SocketAddress val$localAddress -> c
    io.netty.channel.ChannelPromise val$promise -> d
    360:360:void <init>(io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> <init>
    363:368:void run() -> run
io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise -> io.netty.a.d:
    boolean registered -> a
    481:482:void <init>(io.netty.channel.Channel) -> <init>
    485:486:void registered() -> a
    490:497:io.netty.util.concurrent.EventExecutor executor() -> executor
io.netty.bootstrap.AbstractBootstrapConfig -> io.netty.a.e:
    io.netty.bootstrap.AbstractBootstrap bootstrap -> a
    36:38:void <init>(io.netty.bootstrap.AbstractBootstrap) -> <init>
    44:44:java.net.SocketAddress localAddress() -> a
    52:52:io.netty.bootstrap.ChannelFactory channelFactory() -> b
    59:59:io.netty.channel.ChannelHandler handler() -> c
    66:66:java.util.Map options() -> d
    73:73:java.util.Map attrs() -> e
    81:81:io.netty.channel.EventLoopGroup group() -> f
    86:133:java.lang.String toString() -> toString
io.netty.bootstrap.Bootstrap -> io.netty.a.f:
    io.netty.util.internal.logging.InternalLogger logger -> b
    io.netty.resolver.AddressResolverGroup DEFAULT_RESOLVER -> c
    io.netty.bootstrap.BootstrapConfig config -> d
    io.netty.resolver.AddressResolverGroup resolver -> e
    java.net.SocketAddress remoteAddress -> f
    55:62:void <init>() -> <init>
    55:68:void <init>(io.netty.bootstrap.Bootstrap) -> <init>
    80:81:io.netty.bootstrap.Bootstrap resolver(io.netty.resolver.AddressResolverGroup) -> a
    140:145:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> c
    163:192:io.netty.channel.ChannelFuture doResolveAndConnect(java.net.SocketAddress,java.net.SocketAddress) -> a
    199:239:io.netty.channel.ChannelFuture doResolveAndConnect0(io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> a
    247:259:void doConnect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> b
    264:278:void init(io.netty.channel.Channel) -> a
    282:286:io.netty.bootstrap.Bootstrap validate() -> n
    292:292:io.netty.bootstrap.Bootstrap clone() -> o
    308:308:io.netty.bootstrap.BootstrapConfig config() -> p
    312:312:java.net.SocketAddress remoteAddress() -> q
    316:316:io.netty.resolver.AddressResolverGroup resolver() -> r
    49:49:io.netty.bootstrap.AbstractBootstrapConfig config() -> f
    49:49:io.netty.bootstrap.AbstractBootstrap clone() -> b
    49:49:io.netty.bootstrap.AbstractBootstrap validate() -> a
    49:49:java.lang.Object clone() -> clone
    49:49:io.netty.channel.ChannelFuture access$000(io.netty.bootstrap.Bootstrap,io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> a
    49:49:void access$100(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> a
    51:53:void <clinit>() -> <clinit>
io.netty.bootstrap.Bootstrap$1 -> io.netty.a.g:
    io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise val$promise -> a
    io.netty.channel.Channel val$channel -> b
    java.net.SocketAddress val$remoteAddress -> c
    java.net.SocketAddress val$localAddress -> d
    io.netty.bootstrap.Bootstrap this$0 -> e
    174:174:void <init>(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise,io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress) -> <init>
    179:190:void operationComplete(io.netty.channel.ChannelFuture) -> a
    174:174:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.bootstrap.Bootstrap$2 -> io.netty.a.h:
    io.netty.channel.Channel val$channel -> a
    io.netty.channel.ChannelPromise val$promise -> b
    java.net.SocketAddress val$localAddress -> c
    io.netty.bootstrap.Bootstrap this$0 -> d
    225:225:void <init>(io.netty.bootstrap.Bootstrap,io.netty.channel.Channel,io.netty.channel.ChannelPromise,java.net.SocketAddress) -> <init>
    228:234:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.bootstrap.Bootstrap$3 -> io.netty.a.i:
    java.net.SocketAddress val$localAddress -> a
    io.netty.channel.Channel val$channel -> b
    java.net.SocketAddress val$remoteAddress -> c
    io.netty.channel.ChannelPromise val$connectPromise -> d
    248:248:void <init>(java.net.SocketAddress,io.netty.channel.Channel,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> <init>
    251:257:void run() -> run
io.netty.bootstrap.BootstrapConfig -> io.netty.a.j:
    29:30:void <init>(io.netty.bootstrap.Bootstrap) -> <init>
    36:36:java.net.SocketAddress remoteAddress() -> g
    43:43:io.netty.resolver.AddressResolverGroup resolver() -> h
    48:56:java.lang.String toString() -> toString
io.netty.bootstrap.ChannelFactory -> io.netty.a.k:
    io.netty.channel.Channel newChannel() -> newChannel
io.netty.bootstrap.ServerBootstrap -> io.netty.a.l:
    io.netty.util.internal.logging.InternalLogger logger -> b
    java.util.Map childOptions -> c
    java.util.Map childAttrs -> d
    io.netty.bootstrap.ServerBootstrapConfig config -> e
    io.netty.channel.EventLoopGroup childGroup -> f
    io.netty.channel.ChannelHandler childHandler -> g
    47:53:void <init>() -> <init>
    47:65:void <init>(io.netty.bootstrap.ServerBootstrap) -> <init>
    72:72:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup) -> b
    81:89:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup) -> a
    98:110:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object) -> b
    133:137:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler) -> b
    142:187:void init(io.netty.channel.Channel) -> a
    191:199:io.netty.bootstrap.ServerBootstrap validate() -> n
    204:204:java.util.Map$Entry[] newAttrArray(int) -> a
    209:209:java.util.Map$Entry[] newOptionArray(int) -> b
    291:291:io.netty.bootstrap.ServerBootstrap clone() -> o
    302:302:io.netty.channel.EventLoopGroup childGroup() -> p
    306:306:io.netty.channel.ChannelHandler childHandler() -> q
    310:310:java.util.Map childOptions() -> r
    314:314:java.util.Map childAttrs() -> s
    319:319:io.netty.bootstrap.ServerBootstrapConfig config() -> t
    43:43:io.netty.bootstrap.AbstractBootstrapConfig config() -> f
    43:43:io.netty.bootstrap.AbstractBootstrap clone() -> b
    43:43:io.netty.bootstrap.AbstractBootstrap validate() -> a
    43:43:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup) -> a
    43:43:java.lang.Object clone() -> clone
    43:43:io.netty.bootstrap.ServerBootstrapConfig access$000(io.netty.bootstrap.ServerBootstrap) -> a
    43:43:io.netty.util.internal.logging.InternalLogger access$100() -> u
    45:45:void <clinit>() -> <clinit>
io.netty.bootstrap.ServerBootstrap$1 -> io.netty.a.m:
    io.netty.channel.EventLoopGroup val$currentChildGroup -> a
    io.netty.channel.ChannelHandler val$currentChildHandler -> b
    java.util.Map$Entry[] val$currentChildOptions -> c
    java.util.Map$Entry[] val$currentChildAttrs -> d
    io.netty.bootstrap.ServerBootstrap this$0 -> e
    169:169:void <init>(io.netty.bootstrap.ServerBootstrap,io.netty.channel.EventLoopGroup,io.netty.channel.ChannelHandler,java.util.Map$Entry[],java.util.Map$Entry[]) -> <init>
    172:185:void initChannel(io.netty.channel.Channel) -> initChannel
io.netty.bootstrap.ServerBootstrap$1$1 -> io.netty.a.n:
    io.netty.channel.ChannelPipeline val$pipeline -> a
    io.netty.channel.Channel val$ch -> b
    io.netty.bootstrap.ServerBootstrap$1 this$1 -> c
    178:178:void <init>(io.netty.bootstrap.ServerBootstrap$1,io.netty.channel.ChannelPipeline,io.netty.channel.Channel) -> <init>
    181:183:void run() -> run
io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor -> io.netty.a.o:
    io.netty.channel.EventLoopGroup childGroup -> a
    io.netty.channel.ChannelHandler childHandler -> b
    java.util.Map$Entry[] childOptions -> c
    java.util.Map$Entry[] childAttrs -> d
    java.lang.Runnable enableAutoReadTask -> e
    222:239:void <init>(io.netty.channel.Channel,io.netty.channel.EventLoopGroup,io.netty.channel.ChannelHandler,java.util.Map$Entry[],java.util.Map$Entry[]) -> <init>
    244:266:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    269:271:void forceClose(io.netty.channel.Channel,java.lang.Throwable) -> b
    275:285:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    212:212:void access$200(io.netty.channel.Channel,java.lang.Throwable) -> a
io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1 -> io.netty.a.p:
    io.netty.channel.Channel val$channel -> a
    io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor this$0 -> b
    233:233:void <init>(io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor,io.netty.channel.Channel) -> <init>
    236:237:void run() -> run
io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2 -> io.netty.a.q:
    io.netty.channel.Channel val$child -> a
    io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor this$0 -> b
    255:255:void <init>(io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor,io.netty.channel.Channel) -> <init>
    258:261:void operationComplete(io.netty.channel.ChannelFuture) -> a
    255:255:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.bootstrap.ServerBootstrapConfig -> io.netty.a.r:
    33:34:void <init>(io.netty.bootstrap.ServerBootstrap) -> <init>
    42:42:io.netty.channel.EventLoopGroup childGroup() -> g
    50:50:io.netty.channel.ChannelHandler childHandler() -> h
    57:57:java.util.Map childOptions() -> i
    64:64:java.util.Map childAttrs() -> j
    69:103:java.lang.String toString() -> toString
io.netty.buffer.AbstractByteBuf -> io.netty.b.a:
    io.netty.util.internal.logging.InternalLogger logger -> d
    boolean checkAccessible -> e
    io.netty.util.ResourceLeakDetector leakDetector -> a
    int readerIndex -> b
    int writerIndex -> c
    int markedReaderIndex -> f
    int markedWriterIndex -> g
    int maxCapacity -> h
    65:70:void <init>(int) -> <init>
    74:74:boolean isReadOnly() -> a
    80:83:io.netty.buffer.ByteBuf asReadOnly() -> b
    88:88:int maxCapacity() -> c
    92:93:void maxCapacity(int) -> a
    97:97:int readerIndex() -> d
    102:107:io.netty.buffer.ByteBuf readerIndex(int) -> b
    112:112:int writerIndex() -> e
    117:123:io.netty.buffer.ByteBuf writerIndex(int) -> c
    128:134:io.netty.buffer.ByteBuf setIndex(int,int) -> a
    139:140:io.netty.buffer.ByteBuf clear() -> f
    145:145:boolean isReadable() -> g
    150:150:boolean isReadable(int) -> d
    155:155:boolean isWritable() -> h
    160:160:boolean isWritable(int) -> e
    165:165:int readableBytes() -> i
    170:170:int writableBytes() -> j
    180:181:io.netty.buffer.ByteBuf markReaderIndex() -> k
    186:187:io.netty.buffer.ByteBuf resetReaderIndex() -> l
    192:193:io.netty.buffer.ByteBuf markWriterIndex() -> m
    204:218:io.netty.buffer.ByteBuf discardReadBytes() -> n
    223:240:io.netty.buffer.ByteBuf discardSomeReadBytes() -> o
    244:257:void adjustMarkers(int) -> f
    261:266:io.netty.buffer.ByteBuf ensureWritable(int) -> g
    270:286:void ensureWritable0(int) -> h
    290:316:int ensureWritable(int,boolean) -> a
    321:327:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    334:334:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> p
    339:340:byte getByte(int) -> i
    byte _getByte(int) -> j
    352:352:short getUnsignedByte(int) -> k
    357:358:short getShort(int) -> l
    short _getShort(int) -> m
    365:366:short getShortLE(int) -> n
    short _getShortLE(int) -> o
    373:373:int getUnsignedShort(int) -> p
    378:378:int getUnsignedShortLE(int) -> q
    383:384:int getUnsignedMedium(int) -> r
    int _getUnsignedMedium(int) -> s
    399:403:int getMedium(int) -> t
    417:418:int getInt(int) -> u
    int _getInt(int) -> v
    425:426:int getIntLE(int) -> w
    int _getIntLE(int) -> x
    433:433:long getUnsignedInt(int) -> y
    438:438:long getUnsignedIntLE(int) -> z
    443:444:long getLong(int) -> A
    long _getLong(int) -> B
    464:464:float getFloat(int) -> C
    469:469:double getDouble(int) -> D
    474:475:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> a
    506:508:io.netty.buffer.ByteBuf setByte(int,int) -> b
    void _setByte(int,int) -> c
    521:523:io.netty.buffer.ByteBuf setShort(int,int) -> d
    void _setShort(int,int) -> e
    530:532:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    void _setShortLE(int,int) -> g
    545:547:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    void _setMedium(int,int) -> i
    554:556:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    void _setMediumLE(int,int) -> k
    563:565:io.netty.buffer.ByteBuf setInt(int,int) -> l
    void _setInt(int,int) -> m
    587:589:io.netty.buffer.ByteBuf setLong(int,long) -> a
    void _setLong(int,long) -> b
    611:612:io.netty.buffer.ByteBuf setBytes(int,byte[]) -> b
    639:667:io.netty.buffer.ByteBuf setZero(int,int) -> n
    672:672:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> a
    676:702:int setCharSequence0(int,java.lang.CharSequence,java.nio.charset.Charset,boolean) -> a
    707:711:byte readByte() -> q
    721:721:short readUnsignedByte() -> r
    726:729:short readShort() -> s
    742:742:int readUnsignedShort() -> t
    752:756:int readMedium() -> u
    770:773:int readUnsignedMedium() -> v
    786:789:int readInt() -> w
    802:802:long readUnsignedInt() -> x
    812:815:long readLong() -> y
    843:851:io.netty.buffer.ByteBuf readBytes(int) -> E
    856:859:io.netty.buffer.ByteBuf readSlice(int) -> F
    864:867:io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    872:875:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    880:881:io.netty.buffer.ByteBuf readBytes(byte[]) -> a
    886:887:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> a
    892:898:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> a
    903:906:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> a
    921:924:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    946:948:io.netty.buffer.ByteBuf skipBytes(int) -> H
    959:961:io.netty.buffer.ByteBuf writeByte(int) -> I
    966:969:io.netty.buffer.ByteBuf writeShort(int) -> J
    974:977:io.netty.buffer.ByteBuf writeShortLE(int) -> K
    982:985:io.netty.buffer.ByteBuf writeMedium(int) -> L
    990:993:io.netty.buffer.ByteBuf writeMediumLE(int) -> M
    998:1001:io.netty.buffer.ByteBuf writeInt(int) -> N
    1014:1017:io.netty.buffer.ByteBuf writeLong(long) -> a
    1030:1031:io.netty.buffer.ByteBuf writeChar(int) -> O
    1036:1037:io.netty.buffer.ByteBuf writeFloat(float) -> a
    1042:1043:io.netty.buffer.ByteBuf writeDouble(double) -> a
    1048:1051:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> b
    1056:1057:io.netty.buffer.ByteBuf writeBytes(byte[]) -> b
    1062:1063:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> b
    1068:1074:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> b
    1079:1082:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> b
    1087:1091:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> a
    1107:1112:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> a
    1127:1158:io.netty.buffer.ByteBuf writeZero(int) -> P
    1163:1165:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> a
    1170:1170:io.netty.buffer.ByteBuf copy() -> z
    1175:1175:io.netty.buffer.ByteBuf duplicate() -> A
    1180:1180:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    1185:1185:io.netty.buffer.ByteBuf slice() -> C
    1190:1190:io.netty.buffer.ByteBuf retainedSlice() -> D
    1195:1195:io.netty.buffer.ByteBuf slice(int,int) -> o
    1200:1200:io.netty.buffer.ByteBuf retainedSlice(int,int) -> p
    1205:1205:java.nio.ByteBuffer nioBuffer() -> E
    1210:1210:java.nio.ByteBuffer[] nioBuffers() -> F
    1215:1215:java.lang.String toString(java.nio.charset.Charset) -> a
    1220:1220:java.lang.String toString(int,int,java.nio.charset.Charset) -> a
    1225:1225:int indexOf(int,int,byte) -> a
    1250:1255:int forEachByte(io.netty.util.ByteProcessor) -> a
    1261:1266:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    1271:1277:int forEachByteAsc0(int,int,io.netty.util.ByteProcessor) -> c
    1293:1298:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    1303:1308:int forEachByteDesc0(int,int,io.netty.util.ByteProcessor) -> d
    1313:1313:int hashCode() -> hashCode
    1318:1318:boolean equals(java.lang.Object) -> equals
    1323:1323:int compareTo(io.netty.buffer.ByteBuf) -> c
    1328:1346:java.lang.String toString() -> toString
    1350:1351:void checkIndex(int) -> Q
    1354:1356:void checkIndex(int,int) -> q
    1359:1363:void checkIndex0(int,int) -> r
    1366:1371:void checkSrcIndex(int,int,int,int) -> a
    1374:1379:void checkDstIndex(int,int,int,int) -> b
    1387:1391:void checkReadableBytes(int) -> R
    1394:1398:void checkNewCapacity(int) -> S
    1401:1407:void checkReadableBytes0(int) -> U
    1414:1417:void ensureAccessible() -> G
    1420:1422:void setIndex0(int,int) -> s
    1425:1426:void discardMarks() -> H
    44:44:int compareTo(java.lang.Object) -> compareTo
    45:57:void <clinit>() -> <clinit>
io.netty.buffer.AbstractByteBufAllocator -> io.netty.b.b:
    boolean directByDefault -> b
    io.netty.buffer.ByteBuf emptyBuf -> c
    39:56:io.netty.buffer.ByteBuf toLeakAwareBuffer(io.netty.buffer.ByteBuf) -> a
    61:78:io.netty.buffer.CompositeByteBuf toLeakAwareBuffer(io.netty.buffer.CompositeByteBuf) -> a
    88:89:void <init>() -> <init>
    97:100:void <init>(boolean) -> <init>
    104:107:io.netty.buffer.ByteBuf buffer() -> buffer
    112:115:io.netty.buffer.ByteBuf buffer(int) -> buffer
    120:123:io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    128:131:io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    136:139:io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    152:152:io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    157:157:io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    162:166:io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    171:171:io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    176:176:io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    181:185:io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    198:201:io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    206:206:io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    211:211:io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    216:216:io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    221:221:io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    225:233:void validate(int,int) -> c
    io.netty.buffer.ByteBuf newHeapBuffer(int,int) -> a
    io.netty.buffer.ByteBuf newDirectBuffer(int,int) -> b
    247:247:java.lang.String toString() -> toString
    252:283:int calculateNewCapacity(int,int) -> calculateNewCapacity
    34:35:void <clinit>() -> <clinit>
io.netty.buffer.AbstractByteBufAllocator$1 -> io.netty.b.c:
    int[] $SwitchMap$io$netty$util$ResourceLeakDetector$Level -> a
    39:39:void <clinit>() -> <clinit>
io.netty.buffer.AbstractDerivedByteBuf -> io.netty.b.d:
    31:32:void <init>(int) -> <init>
    36:36:int refCnt() -> refCnt
    40:40:int refCnt0() -> I
    45:45:io.netty.buffer.ByteBuf retain() -> J
    49:50:io.netty.buffer.ByteBuf retain0() -> K
    55:55:io.netty.buffer.ByteBuf retain(int) -> T
    59:60:io.netty.buffer.ByteBuf retain0(int) -> U
    65:65:io.netty.buffer.ByteBuf touch() -> L
    69:70:io.netty.buffer.ByteBuf touch0() -> b_
    75:75:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    79:80:io.netty.buffer.ByteBuf touch0(java.lang.Object) -> b
    85:85:boolean release() -> release
    89:89:boolean release0() -> c_
    94:94:boolean release(int) -> release
    98:98:boolean release0(int) -> V
    103:103:boolean isReadOnly() -> a
    108:108:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    113:113:java.nio.ByteBuffer nioBuffer(int,int) -> u
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
io.netty.buffer.AbstractPooledDerivedByteBuf -> io.netty.b.e:
    io.netty.util.Recycler$Handle recyclerHandle -> e
    io.netty.buffer.AbstractByteBuf rootParent -> f
    io.netty.buffer.ByteBuf parent -> g
    boolean $assertionsDisabled -> d
    42:44:void <init>(io.netty.util.Recycler$Handle) -> <init>
    48:50:void parent(io.netty.buffer.ByteBuf) -> d
    54:54:io.netty.buffer.AbstractByteBuf unwrap() -> I
    59:75:io.netty.buffer.AbstractPooledDerivedByteBuf init(io.netty.buffer.AbstractByteBuf,io.netty.buffer.ByteBuf,int,int,int) -> a
    85:88:void deallocate() -> K
    92:92:io.netty.buffer.ByteBufAllocator alloc() -> M
    98:98:java.nio.ByteOrder order() -> N
    103:103:boolean isReadOnly() -> a
    108:108:boolean isDirect() -> O
    113:113:boolean hasArray() -> P
    118:118:byte[] array() -> Q
    123:123:boolean hasMemoryAddress() -> R
    128:128:int nioBufferCount() -> S
    133:133:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    138:139:io.netty.buffer.ByteBuf retainedSlice() -> D
    145:145:io.netty.buffer.ByteBuf slice(int,int) -> o
    150:150:io.netty.buffer.ByteBuf duplicate0() -> d_
    28:28:io.netty.buffer.ByteBuf unwrap() -> U
    28:28:void <clinit>() -> <clinit>
io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf -> io.netty.b.f:
    io.netty.util.ReferenceCounted referenceCountDelegate -> d
    157:159:void <init>(io.netty.util.ReferenceCounted,io.netty.buffer.AbstractByteBuf) -> <init>
    163:163:int refCnt0() -> I
    168:169:io.netty.buffer.ByteBuf retain0() -> K
    174:175:io.netty.buffer.ByteBuf retain0(int) -> U
    180:181:io.netty.buffer.ByteBuf touch0() -> b_
    186:187:io.netty.buffer.ByteBuf touch0(java.lang.Object) -> b
    192:192:boolean release0() -> c_
    197:197:boolean release0(int) -> V
    202:202:io.netty.buffer.ByteBuf duplicate() -> A
    207:207:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    212:213:io.netty.buffer.ByteBuf slice(int,int) -> o
    219:219:io.netty.buffer.ByteBuf retainedSlice() -> D
    224:224:io.netty.buffer.ByteBuf retainedSlice(int,int) -> p
io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf -> io.netty.b.g:
    io.netty.util.ReferenceCounted referenceCountDelegate -> d
    233:235:void <init>(io.netty.util.ReferenceCounted,io.netty.buffer.AbstractByteBuf,int,int) -> <init>
    239:239:int refCnt0() -> I
    244:245:io.netty.buffer.ByteBuf retain0() -> K
    250:251:io.netty.buffer.ByteBuf retain0(int) -> U
    256:257:io.netty.buffer.ByteBuf touch0() -> b_
    262:263:io.netty.buffer.ByteBuf touch0(java.lang.Object) -> b
    268:268:boolean release0() -> c_
    273:273:boolean release0(int) -> V
    278:279:io.netty.buffer.ByteBuf duplicate() -> A
    284:284:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    289:290:io.netty.buffer.ByteBuf slice(int,int) -> o
    296:296:io.netty.buffer.ByteBuf retainedSlice() -> D
    301:301:io.netty.buffer.ByteBuf retainedSlice(int,int) -> p
io.netty.buffer.AbstractReferenceCountedByteBuf -> io.netty.b.h:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater refCntUpdater -> d
    int refCnt -> e
    36:38:void <init>(int) -> <init>
    42:42:int refCnt() -> refCnt
    49:50:void setRefCnt(int) -> U
    54:54:io.netty.buffer.ByteBuf retain() -> J
    59:59:io.netty.buffer.ByteBuf retain(int) -> T
    63:69:io.netty.buffer.ByteBuf retain0(int) -> V
    74:74:io.netty.buffer.ByteBuf touch() -> L
    79:79:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    84:84:boolean release() -> release
    89:89:boolean release(int) -> release
    93:102:boolean release0(int) -> W
    void deallocate() -> K
    28:28:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    28:28:io.netty.util.ReferenceCounted touch() -> touch
    28:28:io.netty.util.ReferenceCounted retain(int) -> retain
    28:28:io.netty.util.ReferenceCounted retain() -> retain
    30:31:void <clinit>() -> <clinit>
io.netty.buffer.AbstractUnpooledSlicedByteBuf -> io.netty.b.i:
    io.netty.buffer.ByteBuf buffer -> d
    int adjustment -> e
    37:53:void <init>(io.netty.buffer.ByteBuf,int,int) -> <init>
    60:60:void initLength(int) -> W
    68:68:io.netty.buffer.ByteBuf unwrap() -> U
    73:73:io.netty.buffer.ByteBufAllocator alloc() -> M
    79:79:java.nio.ByteOrder order() -> N
    84:84:boolean isDirect() -> O
    89:89:io.netty.buffer.ByteBuf capacity(int) -> X
    94:94:boolean hasArray() -> P
    99:99:byte[] array() -> Q
    104:104:int arrayOffset() -> T
    109:109:boolean hasMemoryAddress() -> R
    114:114:long memoryAddress() -> V
    119:120:byte getByte(int) -> i
    125:125:byte _getByte(int) -> j
    130:131:short getShort(int) -> l
    136:136:short _getShort(int) -> m
    141:142:short getShortLE(int) -> n
    147:147:short _getShortLE(int) -> o
    152:153:int getUnsignedMedium(int) -> r
    158:158:int _getUnsignedMedium(int) -> s
    174:175:int getInt(int) -> u
    180:180:int _getInt(int) -> v
    185:186:int getIntLE(int) -> w
    191:191:int _getIntLE(int) -> x
    196:197:long getLong(int) -> A
    202:202:long _getLong(int) -> B
    218:218:io.netty.buffer.ByteBuf duplicate() -> A
    223:224:io.netty.buffer.ByteBuf copy(int,int) -> v
    229:230:io.netty.buffer.ByteBuf slice(int,int) -> o
    235:237:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    242:244:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    249:251:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    256:258:io.netty.buffer.ByteBuf setByte(int,int) -> b
    269:270:void _setByte(int,int) -> c
    274:276:io.netty.buffer.ByteBuf setShort(int,int) -> d
    281:282:void _setShort(int,int) -> e
    286:288:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    293:294:void _setShortLE(int,int) -> g
    298:300:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    305:306:void _setMedium(int,int) -> i
    310:312:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    317:318:void _setMediumLE(int,int) -> k
    322:324:io.netty.buffer.ByteBuf setInt(int,int) -> l
    329:330:void _setInt(int,int) -> m
    346:348:io.netty.buffer.ByteBuf setLong(int,long) -> a
    353:354:void _setLong(int,long) -> b
    370:372:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    377:379:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    384:386:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    398:399:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    416:417:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    428:428:int nioBufferCount() -> S
    433:434:java.nio.ByteBuffer nioBuffer(int,int) -> u
    439:440:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    445:450:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    456:461:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    469:469:int idx(int) -> Y
    473:476:void checkSliceOutOfBounds(int,int,io.netty.buffer.ByteBuf) -> a
io.netty.buffer.AbstractUnsafeSwappedByteBuf -> io.netty.b.j:
    boolean nativeByteOrder -> b
    io.netty.buffer.AbstractByteBuf wrapped -> c
    boolean $assertionsDisabled -> a
    32:36:void <init>(io.netty.buffer.AbstractByteBuf) -> <init>
    40:42:long getLong(int) -> A
    47:47:float getFloat(int) -> C
    52:52:double getDouble(int) -> D
    62:62:long getUnsignedInt(int) -> y
    67:69:int getInt(int) -> u
    74:74:int getUnsignedShort(int) -> p
    79:81:short getShort(int) -> l
    86:88:io.netty.buffer.ByteBuf setShort(int,int) -> d
    93:95:io.netty.buffer.ByteBuf setInt(int,int) -> l
    100:102:io.netty.buffer.ByteBuf setLong(int,long) -> a
    125:128:io.netty.buffer.ByteBuf writeShort(int) -> J
    133:136:io.netty.buffer.ByteBuf writeInt(int) -> N
    141:144:io.netty.buffer.ByteBuf writeLong(long) -> a
    149:150:io.netty.buffer.ByteBuf writeChar(int) -> O
    155:156:io.netty.buffer.ByteBuf writeFloat(float) -> a
    161:162:io.netty.buffer.ByteBuf writeDouble(double) -> a
    short _getShort(io.netty.buffer.AbstractByteBuf,int) -> a
    int _getInt(io.netty.buffer.AbstractByteBuf,int) -> b
    long _getLong(io.netty.buffer.AbstractByteBuf,int) -> c
    void _setShort(io.netty.buffer.AbstractByteBuf,int,short) -> a
    void _setInt(io.netty.buffer.AbstractByteBuf,int,int) -> a
    void _setLong(io.netty.buffer.AbstractByteBuf,int,long) -> a
    27:27:void <clinit>() -> <clinit>
io.netty.buffer.AdvancedLeakAwareByteBuf -> io.netty.b.k:
    boolean ACQUIRE_AND_RELEASE_ONLY -> d
    io.netty.util.internal.logging.InternalLogger logger -> e
    55:56:void <init>(io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    59:60:void <init>(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    63:66:void recordLeakNonRefCountingOperation(io.netty.util.ResourceLeakTracker) -> a
    70:71:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    76:77:io.netty.buffer.ByteBuf slice() -> C
    82:83:io.netty.buffer.ByteBuf slice(int,int) -> o
    88:89:io.netty.buffer.ByteBuf retainedSlice() -> D
    100:101:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    106:107:io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    112:113:io.netty.buffer.ByteBuf duplicate() -> A
    118:119:io.netty.buffer.ByteBuf readSlice(int) -> F
    124:125:io.netty.buffer.ByteBuf discardReadBytes() -> n
    130:131:io.netty.buffer.ByteBuf discardSomeReadBytes() -> o
    136:137:io.netty.buffer.ByteBuf ensureWritable(int) -> g
    142:143:int ensureWritable(int,boolean) -> a
    154:155:byte getByte(int) -> i
    160:161:short getUnsignedByte(int) -> k
    166:167:short getShort(int) -> l
    172:173:int getUnsignedShort(int) -> p
    178:179:int getMedium(int) -> t
    184:185:int getUnsignedMedium(int) -> r
    190:191:int getInt(int) -> u
    196:197:long getUnsignedInt(int) -> y
    202:203:long getLong(int) -> A
    214:215:float getFloat(int) -> C
    220:221:double getDouble(int) -> D
    238:239:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    244:245:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> a
    250:251:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    256:257:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    268:269:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    286:287:io.netty.buffer.ByteBuf setByte(int,int) -> b
    292:293:io.netty.buffer.ByteBuf setShort(int,int) -> d
    298:299:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    304:305:io.netty.buffer.ByteBuf setInt(int,int) -> l
    310:311:io.netty.buffer.ByteBuf setLong(int,long) -> a
    346:347:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    358:359:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    364:365:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    376:377:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    382:383:io.netty.buffer.ByteBuf setZero(int,int) -> n
    388:389:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> a
    400:401:byte readByte() -> q
    406:407:short readUnsignedByte() -> r
    412:413:short readShort() -> s
    418:419:int readUnsignedShort() -> t
    424:425:int readMedium() -> u
    430:431:int readUnsignedMedium() -> v
    436:437:int readInt() -> w
    442:443:long readUnsignedInt() -> x
    448:449:long readLong() -> y
    472:473:io.netty.buffer.ByteBuf readBytes(int) -> E
    478:479:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> a
    496:497:io.netty.buffer.ByteBuf readBytes(byte[]) -> a
    502:503:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    520:521:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    532:533:io.netty.buffer.ByteBuf skipBytes(int) -> H
    544:545:io.netty.buffer.ByteBuf writeByte(int) -> I
    550:551:io.netty.buffer.ByteBuf writeShort(int) -> J
    556:557:io.netty.buffer.ByteBuf writeMedium(int) -> L
    562:563:io.netty.buffer.ByteBuf writeInt(int) -> N
    568:569:io.netty.buffer.ByteBuf writeLong(long) -> a
    574:575:io.netty.buffer.ByteBuf writeChar(int) -> O
    580:581:io.netty.buffer.ByteBuf writeFloat(float) -> a
    586:587:io.netty.buffer.ByteBuf writeDouble(double) -> a
    592:593:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> b
    604:605:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> b
    610:611:io.netty.buffer.ByteBuf writeBytes(byte[]) -> b
    616:617:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> b
    622:623:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> a
    634:635:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> a
    640:641:io.netty.buffer.ByteBuf writeZero(int) -> P
    646:647:int indexOf(int,int,byte) -> a
    670:671:int forEachByte(io.netty.util.ByteProcessor) -> a
    676:677:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    688:689:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    694:695:io.netty.buffer.ByteBuf copy() -> z
    700:701:io.netty.buffer.ByteBuf copy(int,int) -> v
    706:707:int nioBufferCount() -> S
    712:713:java.nio.ByteBuffer nioBuffer() -> E
    718:719:java.nio.ByteBuffer nioBuffer(int,int) -> u
    724:725:java.nio.ByteBuffer[] nioBuffers() -> F
    730:731:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    736:737:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    742:743:java.lang.String toString(java.nio.charset.Charset) -> a
    748:749:java.lang.String toString(int,int,java.nio.charset.Charset) -> a
    754:755:io.netty.buffer.ByteBuf capacity(int) -> X
    760:761:short getShortLE(int) -> n
    766:767:int getUnsignedShortLE(int) -> q
    784:785:int getIntLE(int) -> w
    790:791:long getUnsignedIntLE(int) -> z
    802:803:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    814:815:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    868:869:io.netty.buffer.ByteBuf writeShortLE(int) -> K
    874:875:io.netty.buffer.ByteBuf writeMediumLE(int) -> M
    892:893:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> a
    922:923:io.netty.buffer.ByteBuf asReadOnly() -> b
    928:929:io.netty.buffer.ByteBuf retain() -> J
    934:935:io.netty.buffer.ByteBuf retain(int) -> T
    940:941:boolean release() -> release
    946:947:boolean release(int) -> release
    952:953:io.netty.buffer.ByteBuf touch() -> L
    958:959:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    965:965:io.netty.buffer.AdvancedLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> a
    36:36:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> b
    36:36:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    36:36:io.netty.util.ReferenceCounted touch() -> touch
    36:36:io.netty.util.ReferenceCounted retain(int) -> retain
    36:36:io.netty.util.ReferenceCounted retain() -> retain
    41:52:void <clinit>() -> <clinit>
io.netty.buffer.AdvancedLeakAwareCompositeByteBuf -> io.netty.b.l:
    39:40:void <init>(io.netty.buffer.CompositeByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    44:45:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    50:51:io.netty.buffer.ByteBuf slice() -> C
    56:57:io.netty.buffer.ByteBuf retainedSlice() -> D
    62:63:io.netty.buffer.ByteBuf slice(int,int) -> o
    68:69:io.netty.buffer.ByteBuf retainedSlice(int,int) -> p
    74:75:io.netty.buffer.ByteBuf duplicate() -> A
    80:81:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    86:87:io.netty.buffer.ByteBuf readSlice(int) -> F
    92:93:io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    98:99:io.netty.buffer.ByteBuf asReadOnly() -> b
    104:105:boolean isReadOnly() -> a
    110:111:io.netty.buffer.CompositeByteBuf discardReadBytes() -> I
    116:117:io.netty.buffer.CompositeByteBuf discardSomeReadBytes() -> W
    122:123:io.netty.buffer.CompositeByteBuf ensureWritable(int) -> V
    128:129:int ensureWritable(int,boolean) -> a
    140:141:byte getByte(int) -> i
    146:147:short getUnsignedByte(int) -> k
    152:153:short getShort(int) -> l
    158:159:int getUnsignedShort(int) -> p
    164:165:int getMedium(int) -> t
    170:171:int getUnsignedMedium(int) -> r
    176:177:int getInt(int) -> u
    182:183:long getUnsignedInt(int) -> y
    188:189:long getLong(int) -> A
    200:201:float getFloat(int) -> C
    206:207:double getDouble(int) -> D
    224:225:io.netty.buffer.CompositeByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> c
    230:231:io.netty.buffer.CompositeByteBuf getBytes(int,byte[]) -> c
    236:237:io.netty.buffer.CompositeByteBuf getBytes(int,byte[],int,int) -> c
    242:243:io.netty.buffer.CompositeByteBuf getBytes(int,java.nio.ByteBuffer) -> c
    254:255:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    272:273:io.netty.buffer.CompositeByteBuf setByte(int,int) -> x
    278:279:io.netty.buffer.CompositeByteBuf setShort(int,int) -> y
    284:285:io.netty.buffer.CompositeByteBuf setMedium(int,int) -> z
    290:291:io.netty.buffer.CompositeByteBuf setInt(int,int) -> A
    296:297:io.netty.buffer.CompositeByteBuf setLong(int,long) -> c
    332:333:io.netty.buffer.CompositeByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> d
    338:339:io.netty.buffer.CompositeByteBuf setBytes(int,byte[]) -> d
    344:345:io.netty.buffer.CompositeByteBuf setBytes(int,byte[],int,int) -> d
    350:351:io.netty.buffer.CompositeByteBuf setBytes(int,java.nio.ByteBuffer) -> d
    362:363:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    368:369:io.netty.buffer.CompositeByteBuf setZero(int,int) -> B
    380:381:byte readByte() -> q
    386:387:short readUnsignedByte() -> r
    392:393:short readShort() -> s
    398:399:int readUnsignedShort() -> t
    404:405:int readMedium() -> u
    410:411:int readUnsignedMedium() -> v
    416:417:int readInt() -> w
    422:423:long readUnsignedInt() -> x
    428:429:long readLong() -> y
    452:453:io.netty.buffer.ByteBuf readBytes(int) -> E
    458:459:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf) -> d
    464:465:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> c
    470:471:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> c
    476:477:io.netty.buffer.CompositeByteBuf readBytes(byte[]) -> c
    482:483:io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int) -> c
    500:501:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    512:513:io.netty.buffer.CompositeByteBuf skipBytes(int) -> W
    524:525:io.netty.buffer.CompositeByteBuf writeByte(int) -> Y
    530:531:io.netty.buffer.CompositeByteBuf writeShort(int) -> Z
    536:537:io.netty.buffer.CompositeByteBuf writeMedium(int) -> aa
    542:543:io.netty.buffer.CompositeByteBuf writeInt(int) -> ab
    548:549:io.netty.buffer.CompositeByteBuf writeLong(long) -> b
    554:555:io.netty.buffer.CompositeByteBuf writeChar(int) -> ac
    560:561:io.netty.buffer.CompositeByteBuf writeFloat(float) -> b
    566:567:io.netty.buffer.CompositeByteBuf writeDouble(double) -> b
    572:573:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf) -> e
    578:579:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> d
    584:585:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> d
    590:591:io.netty.buffer.CompositeByteBuf writeBytes(byte[]) -> d
    596:597:io.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int) -> d
    602:603:io.netty.buffer.CompositeByteBuf writeBytes(java.nio.ByteBuffer) -> b
    614:615:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> a
    620:621:io.netty.buffer.CompositeByteBuf writeZero(int) -> ad
    626:627:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> a
    632:633:int indexOf(int,int,byte) -> a
    656:657:int forEachByte(io.netty.util.ByteProcessor) -> a
    662:663:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    674:675:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    680:681:io.netty.buffer.ByteBuf copy() -> z
    686:687:io.netty.buffer.ByteBuf copy(int,int) -> v
    692:693:int nioBufferCount() -> S
    698:699:java.nio.ByteBuffer nioBuffer() -> E
    704:705:java.nio.ByteBuffer nioBuffer(int,int) -> u
    710:711:java.nio.ByteBuffer[] nioBuffers() -> F
    716:717:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    722:723:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    728:729:java.lang.String toString(java.nio.charset.Charset) -> a
    734:735:java.lang.String toString(int,int,java.nio.charset.Charset) -> a
    740:741:io.netty.buffer.CompositeByteBuf capacity(int) -> ae
    746:747:short getShortLE(int) -> n
    752:753:int getUnsignedShortLE(int) -> q
    770:771:int getIntLE(int) -> w
    776:777:long getUnsignedIntLE(int) -> z
    788:789:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    794:795:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    812:813:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> a
    860:861:io.netty.buffer.ByteBuf writeShortLE(int) -> K
    866:867:io.netty.buffer.ByteBuf writeMediumLE(int) -> M
    920:921:io.netty.buffer.CompositeByteBuf addComponent(boolean,io.netty.buffer.ByteBuf) -> a
    926:927:io.netty.buffer.CompositeByteBuf addComponents(boolean,io.netty.buffer.ByteBuf[]) -> a
    956:957:java.util.Iterator iterator() -> iterator
    974:975:io.netty.buffer.CompositeByteBuf discardReadComponents() -> X
    1010:1011:io.netty.buffer.CompositeByteBuf retain() -> Y
    1016:1017:io.netty.buffer.CompositeByteBuf retain(int) -> af
    1022:1023:boolean release() -> release
    1028:1029:boolean release(int) -> release
    1034:1035:io.netty.buffer.CompositeByteBuf touch() -> Z
    1040:1041:io.netty.buffer.CompositeByteBuf touch(java.lang.Object) -> b
    1047:1047:io.netty.buffer.AdvancedLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> a
    36:36:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> b
    36:36:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    36:36:io.netty.buffer.ByteBuf touch() -> L
    36:36:io.netty.buffer.ByteBuf retain(int) -> T
    36:36:io.netty.buffer.ByteBuf retain() -> J
    36:36:io.netty.buffer.ByteBuf writeZero(int) -> P
    36:36:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> a
    36:36:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> b
    36:36:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> b
    36:36:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> b
    36:36:io.netty.buffer.ByteBuf writeBytes(byte[]) -> b
    36:36:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> b
    36:36:io.netty.buffer.ByteBuf writeDouble(double) -> a
    36:36:io.netty.buffer.ByteBuf writeFloat(float) -> a
    36:36:io.netty.buffer.ByteBuf writeChar(int) -> O
    36:36:io.netty.buffer.ByteBuf writeLong(long) -> a
    36:36:io.netty.buffer.ByteBuf writeInt(int) -> N
    36:36:io.netty.buffer.ByteBuf writeMedium(int) -> L
    36:36:io.netty.buffer.ByteBuf writeShort(int) -> J
    36:36:io.netty.buffer.ByteBuf writeByte(int) -> I
    36:36:io.netty.buffer.ByteBuf skipBytes(int) -> H
    36:36:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> a
    36:36:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> a
    36:36:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> a
    36:36:io.netty.buffer.ByteBuf readBytes(byte[]) -> a
    36:36:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    36:36:io.netty.buffer.ByteBuf setZero(int,int) -> n
    36:36:io.netty.buffer.ByteBuf setBytes(int,byte[]) -> b
    36:36:io.netty.buffer.ByteBuf setLong(int,long) -> a
    36:36:io.netty.buffer.ByteBuf setInt(int,int) -> l
    36:36:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    36:36:io.netty.buffer.ByteBuf setShort(int,int) -> d
    36:36:io.netty.buffer.ByteBuf setByte(int,int) -> b
    36:36:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> a
    36:36:io.netty.buffer.ByteBuf ensureWritable(int) -> g
    36:36:io.netty.buffer.ByteBuf discardSomeReadBytes() -> o
    36:36:io.netty.buffer.ByteBuf discardReadBytes() -> n
    36:36:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    36:36:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    36:36:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    36:36:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    36:36:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    36:36:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    36:36:io.netty.buffer.ByteBuf capacity(int) -> X
    36:36:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    36:36:io.netty.util.ReferenceCounted touch() -> touch
    36:36:io.netty.util.ReferenceCounted retain(int) -> retain
    36:36:io.netty.util.ReferenceCounted retain() -> retain
io.netty.buffer.ByteBuf -> io.netty.b.m:
    249:249:void <init>() -> <init>
    int capacity() -> aa
    io.netty.buffer.ByteBuf capacity(int) -> X
    int maxCapacity() -> c
    io.netty.buffer.ByteBufAllocator alloc() -> M
    java.nio.ByteOrder order() -> N
    io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    io.netty.buffer.ByteBuf unwrap() -> U
    boolean isDirect() -> O
    boolean isReadOnly() -> a
    io.netty.buffer.ByteBuf asReadOnly() -> b
    int readerIndex() -> d
    io.netty.buffer.ByteBuf readerIndex(int) -> b
    int writerIndex() -> e
    io.netty.buffer.ByteBuf writerIndex(int) -> c
    io.netty.buffer.ByteBuf setIndex(int,int) -> a
    int readableBytes() -> i
    int writableBytes() -> j
    boolean isReadable() -> g
    boolean isReadable(int) -> d
    boolean isWritable() -> h
    boolean isWritable(int) -> e
    io.netty.buffer.ByteBuf clear() -> f
    io.netty.buffer.ByteBuf markReaderIndex() -> k
    io.netty.buffer.ByteBuf resetReaderIndex() -> l
    io.netty.buffer.ByteBuf discardReadBytes() -> n
    io.netty.buffer.ByteBuf discardSomeReadBytes() -> o
    io.netty.buffer.ByteBuf ensureWritable(int) -> g
    int ensureWritable(int,boolean) -> a
    byte getByte(int) -> i
    short getUnsignedByte(int) -> k
    short getShort(int) -> l
    short getShortLE(int) -> n
    int getUnsignedShort(int) -> p
    int getUnsignedShortLE(int) -> q
    int getMedium(int) -> t
    int getUnsignedMedium(int) -> r
    int getInt(int) -> u
    int getIntLE(int) -> w
    long getUnsignedInt(int) -> y
    long getUnsignedIntLE(int) -> z
    long getLong(int) -> A
    float getFloat(int) -> C
    double getDouble(int) -> D
    io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    io.netty.buffer.ByteBuf getBytes(int,byte[]) -> a
    io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    io.netty.buffer.ByteBuf setByte(int,int) -> b
    io.netty.buffer.ByteBuf setShort(int,int) -> d
    io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    io.netty.buffer.ByteBuf setMedium(int,int) -> h
    io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    io.netty.buffer.ByteBuf setInt(int,int) -> l
    io.netty.buffer.ByteBuf setLong(int,long) -> a
    io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    io.netty.buffer.ByteBuf setZero(int,int) -> n
    int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> a
    byte readByte() -> q
    short readUnsignedByte() -> r
    short readShort() -> s
    int readUnsignedShort() -> t
    int readMedium() -> u
    int readUnsignedMedium() -> v
    int readInt() -> w
    long readUnsignedInt() -> x
    long readLong() -> y
    io.netty.buffer.ByteBuf readBytes(int) -> E
    io.netty.buffer.ByteBuf readSlice(int) -> F
    io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> a
    io.netty.buffer.ByteBuf readBytes(byte[]) -> a
    io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    io.netty.buffer.ByteBuf skipBytes(int) -> H
    io.netty.buffer.ByteBuf writeByte(int) -> I
    io.netty.buffer.ByteBuf writeShort(int) -> J
    io.netty.buffer.ByteBuf writeShortLE(int) -> K
    io.netty.buffer.ByteBuf writeMedium(int) -> L
    io.netty.buffer.ByteBuf writeMediumLE(int) -> M
    io.netty.buffer.ByteBuf writeInt(int) -> N
    io.netty.buffer.ByteBuf writeLong(long) -> a
    io.netty.buffer.ByteBuf writeChar(int) -> O
    io.netty.buffer.ByteBuf writeFloat(float) -> a
    io.netty.buffer.ByteBuf writeDouble(double) -> a
    io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> b
    io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> b
    io.netty.buffer.ByteBuf writeBytes(byte[]) -> b
    io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> b
    io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> a
    int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> a
    io.netty.buffer.ByteBuf writeZero(int) -> P
    int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> a
    int indexOf(int,int,byte) -> a
    int forEachByte(io.netty.util.ByteProcessor) -> a
    int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    io.netty.buffer.ByteBuf copy() -> z
    io.netty.buffer.ByteBuf copy(int,int) -> v
    io.netty.buffer.ByteBuf slice() -> C
    io.netty.buffer.ByteBuf retainedSlice() -> D
    io.netty.buffer.ByteBuf slice(int,int) -> o
    io.netty.buffer.ByteBuf duplicate() -> A
    io.netty.buffer.ByteBuf retainedDuplicate() -> B
    int nioBufferCount() -> S
    java.nio.ByteBuffer nioBuffer() -> E
    java.nio.ByteBuffer nioBuffer(int,int) -> u
    java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    java.nio.ByteBuffer[] nioBuffers() -> F
    java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    boolean hasArray() -> P
    byte[] array() -> Q
    int arrayOffset() -> T
    boolean hasMemoryAddress() -> R
    long memoryAddress() -> V
    java.lang.String toString(java.nio.charset.Charset) -> a
    java.lang.String toString(int,int,java.nio.charset.Charset) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(io.netty.buffer.ByteBuf) -> c
    java.lang.String toString() -> toString
    io.netty.buffer.ByteBuf retain(int) -> T
    io.netty.buffer.ByteBuf retain() -> J
    io.netty.buffer.ByteBuf touch() -> L
    io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    248:248:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    248:248:io.netty.util.ReferenceCounted touch() -> touch
    248:248:io.netty.util.ReferenceCounted retain(int) -> retain
    248:248:io.netty.util.ReferenceCounted retain() -> retain
    248:248:int compareTo(java.lang.Object) -> compareTo
io.netty.buffer.ByteBufAllocator -> io.netty.b.n:
    io.netty.buffer.ByteBufAllocator DEFAULT -> a
    io.netty.buffer.ByteBuf buffer() -> buffer
    io.netty.buffer.ByteBuf buffer(int) -> buffer
    io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    boolean isDirectBufferPooled() -> isDirectBufferPooled
    int calculateNewCapacity(int,int) -> calculateNewCapacity
    24:24:void <clinit>() -> <clinit>
io.netty.buffer.ByteBufHolder -> io.netty.b.o:
    io.netty.buffer.ByteBuf content() -> content
io.netty.buffer.ByteBufInputStream -> io.netty.b.p:
    io.netty.buffer.ByteBuf buffer -> a
    int startIndex -> b
    int endIndex -> c
    boolean closed -> d
    boolean releaseOnClose -> e
    java.lang.StringBuilder lineBuf -> f
    62:63:void <init>(io.netty.buffer.ByteBuf) -> <init>
    76:77:void <init>(io.netty.buffer.ByteBuf,int) -> <init>
    88:89:void <init>(io.netty.buffer.ByteBuf,boolean) -> <init>
    103:243:void <init>(io.netty.buffer.ByteBuf,int,boolean) -> <init>
    138:146:void close() -> close
    150:150:int available() -> available
    155:156:void mark(int) -> mark
    160:160:boolean markSupported() -> markSupported
    165:168:int read() -> read
    173:180:int read(byte[],int,int) -> read
    185:186:void reset() -> reset
    190:193:long skip(long) -> skip
    199:200:boolean readBoolean() -> readBoolean
    205:208:byte readByte() -> readByte
    213:213:char readChar() -> readChar
    218:218:double readDouble() -> readDouble
    223:223:float readFloat() -> readFloat
    228:229:void readFully(byte[]) -> readFully
    233:235:void readFully(byte[],int,int) -> readFully
    239:240:int readInt() -> readInt
    247:270:java.lang.String readLine() -> readLine
    275:276:long readLong() -> readLong
    281:282:short readShort() -> readShort
    287:287:java.lang.String readUTF() -> readUTF
    292:292:int readUnsignedByte() -> readUnsignedByte
    297:297:int readUnsignedShort() -> readUnsignedShort
    302:304:int skipBytes(int) -> skipBytes
    308:315:void checkAvailable(int) -> a
io.netty.buffer.ByteBufUtil -> io.netty.b.q:
    io.netty.util.internal.logging.InternalLogger logger -> b
    io.netty.util.concurrent.FastThreadLocal CHAR_BUFFERS -> c
    int MAX_CHAR_BUFFER_SIZE -> d
    int THREAD_LOCAL_BUFFER_SIZE -> e
    int MAX_BYTES_PER_CHAR_UTF8 -> f
    io.netty.buffer.ByteBufAllocator DEFAULT_ALLOCATOR -> a
    io.netty.util.ByteProcessor FIND_NON_ASCII -> g
    100:100:java.lang.String hexDump(io.netty.buffer.ByteBuf) -> a
    108:108:java.lang.String hexDump(io.netty.buffer.ByteBuf,int,int) -> a
    124:124:java.lang.String hexDump(byte[],int,int) -> a
    156:156:boolean ensureWritableSuccess(int) -> a
    164:190:int hashCode(io.netty.buffer.ByteBuf) -> b
    198:206:int indexOf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> a
    218:254:boolean equals(io.netty.buffer.ByteBuf,int,io.netty.buffer.ByteBuf,int,int) -> a
    263:267:boolean equals(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> b
    275:310:int compare(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> c
    315:321:long compareUintBigEndian(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int,int,int) -> a
    326:332:long compareUintLittleEndian(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int,int,int) -> b
    337:343:long compareUintBigEndianA(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int,int,int) -> c
    348:354:long compareUintBigEndianB(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int,int,int) -> d
    362:365:int indexOf(io.netty.buffer.ByteBuf,int,int,byte) -> a
    373:373:short swapShort(short) -> a
    380:384:int swapMedium(int) -> b
    391:391:int swapInt(int) -> c
    398:398:long swapLong(long) -> a
    406:406:io.netty.buffer.ByteBuf writeShortBE(io.netty.buffer.ByteBuf,int) -> a
    414:414:io.netty.buffer.ByteBuf setShortBE(io.netty.buffer.ByteBuf,int,int) -> b
    422:422:io.netty.buffer.ByteBuf writeMediumBE(io.netty.buffer.ByteBuf,int) -> b
    429:437:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,int) -> a
    443:448:int firstIndexOf(io.netty.buffer.ByteBuf,int,int,byte) -> b
    452:457:int lastIndexOf(io.netty.buffer.ByteBuf,int,int,byte) -> c
    470:472:io.netty.buffer.ByteBuf writeUtf8(io.netty.buffer.ByteBufAllocator,java.lang.CharSequence) -> a
    483:495:int writeUtf8(io.netty.buffer.ByteBuf,java.lang.CharSequence) -> a
    502:545:int writeUtf8(io.netty.buffer.AbstractByteBuf,int,java.lang.CharSequence,int) -> a
    552:552:int utf8MaxBytes(java.lang.CharSequence) -> a
    578:600:int writeAscii(io.netty.buffer.ByteBuf,java.lang.CharSequence) -> b
    608:611:int writeAscii(io.netty.buffer.AbstractByteBuf,int,java.lang.CharSequence,int) -> b
    637:664:io.netty.buffer.ByteBuf encodeString0(io.netty.buffer.ByteBufAllocator,boolean,java.nio.CharBuffer,java.nio.charset.Charset,int) -> a
    670:700:java.lang.String decodeString(io.netty.buffer.ByteBuf,int,int,java.nio.charset.Charset) -> a
    705:716:void decodeString(java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,java.nio.CharBuffer) -> a
    724:731:io.netty.buffer.ByteBuf threadLocalDirectBuffer() -> a
    740:740:byte[] getBytes(io.netty.buffer.ByteBuf) -> c
    748:748:byte[] getBytes(io.netty.buffer.ByteBuf,int,int) -> c
    758:774:byte[] getBytes(io.netty.buffer.ByteBuf,int,int,boolean) -> a
    784:785:void copy(io.netty.util.AsciiString,io.netty.buffer.ByteBuf) -> a
    799:805:void copy(io.netty.util.AsciiString,int,io.netty.buffer.ByteBuf,int,int) -> a
    816:822:void copy(io.netty.util.AsciiString,int,io.netty.buffer.ByteBuf,int) -> a
    844:845:void appendPrettyHexDump(java.lang.StringBuilder,io.netty.buffer.ByteBuf) -> a
    853:854:void appendPrettyHexDump(java.lang.StringBuilder,io.netty.buffer.ByteBuf,int,int) -> a
    1315:1315:void <init>() -> <init>
    51:51:int access$500() -> b
    53:1175:void <clinit>() -> <clinit>
io.netty.buffer.ByteBufUtil$1 -> io.netty.b.r:
    54:54:void <init>() -> <init>
    57:57:java.nio.CharBuffer initialValue() -> a
    54:54:java.lang.Object initialValue() -> initialValue
io.netty.buffer.ByteBufUtil$2 -> io.netty.b.s:
    1175:1175:void <init>() -> <init>
    1178:1178:boolean process(byte) -> a
io.netty.buffer.ByteBufUtil$HexUtil -> io.netty.b.t:
    char[] BYTE2CHAR -> a
    char[] HEXDUMP_TABLE -> b
    java.lang.String[] HEXPADDING -> c
    java.lang.String[] HEXDUMP_ROWPREFIXES -> d
    java.lang.String[] BYTE2HEX -> e
    java.lang.String[] BYTEPADDING -> f
    921:939:java.lang.String hexDump(io.netty.buffer.ByteBuf,int,int) -> b
    943:961:java.lang.String hexDump(byte[],int,int) -> b
    976:1037:void appendPrettyHexDump(java.lang.StringBuilder,io.netty.buffer.ByteBuf,int,int) -> b
    1040:1048:void appendHexDumpRowPrefix(java.lang.StringBuilder,int,int) -> a
    857:857:java.lang.String access$000(io.netty.buffer.ByteBuf,int,int) -> a
    857:857:java.lang.String access$100(byte[],int,int) -> a
    857:857:void access$300(java.lang.StringBuilder,io.netty.buffer.ByteBuf,int,int) -> a
    859:918:void <clinit>() -> <clinit>
io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf -> io.netty.b.u:
    io.netty.util.Recycler RECYCLER -> d
    io.netty.util.Recycler$Handle handle -> e
    1095:1097:io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf newInstance() -> I
    1103:1105:void <init>(io.netty.util.Recycler$Handle) -> <init>
    1109:1115:void deallocate() -> K
    1085:1085:void <init>(io.netty.util.Recycler$Handle,io.netty.buffer.ByteBufUtil$1) -> <init>
    1087:1087:void <clinit>() -> <clinit>
io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf$1 -> io.netty.b.v:
    1087:1087:void <init>() -> <init>
    1090:1090:io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf newObject(io.netty.util.Recycler$Handle) -> a
    1087:1087:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf -> io.netty.b.w:
    io.netty.util.Recycler RECYCLER -> f
    io.netty.util.Recycler$Handle handle -> g
    1062:1064:io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf newInstance() -> I
    1070:1072:void <init>(io.netty.util.Recycler$Handle) -> <init>
    1076:1082:void deallocate() -> K
    1051:1051:void <init>(io.netty.util.Recycler$Handle,io.netty.buffer.ByteBufUtil$1) -> <init>
    1053:1053:void <clinit>() -> <clinit>
io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1 -> io.netty.b.x:
    1054:1054:void <init>() -> <init>
    1057:1057:io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf newObject(io.netty.util.Recycler$Handle) -> a
    1054:1054:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.CompositeByteBuf -> io.netty.b.y:
    java.nio.ByteBuffer EMPTY_NIO_BUFFER -> e
    java.util.Iterator EMPTY_ITERATOR -> f
    io.netty.buffer.ByteBufAllocator alloc -> g
    boolean direct -> h
    io.netty.buffer.CompositeByteBuf$ComponentList components -> i
    int maxNumComponents -> j
    boolean freed -> k
    boolean $assertionsDisabled -> d
    57:65:void <init>(io.netty.buffer.ByteBufAllocator,boolean,int) -> <init>
    114:114:io.netty.buffer.CompositeByteBuf$ComponentList newList(int) -> ak
    119:124:void <init>(io.netty.buffer.ByteBufAllocator) -> <init>
    194:197:io.netty.buffer.CompositeByteBuf addComponent(boolean,io.netty.buffer.ByteBuf) -> a
    210:212:io.netty.buffer.CompositeByteBuf addComponents(boolean,io.netty.buffer.ByteBuf[]) -> a
    250:282:int addComponent0(boolean,int,io.netty.buffer.ByteBuf) -> a
    308:336:int addComponents0(boolean,int,io.netty.buffer.ByteBuf[],int,int) -> a
    401:419:void consolidateIfNeeded() -> ag
    422:428:void checkComponentIndex(int) -> al
    441:459:void updateComponentOffsets(int) -> am
    509:513:java.util.Iterator iterator() -> iterator
    563:572:boolean isDirect() -> O
    577:583:boolean hasArray() -> P
    589:595:byte[] array() -> Q
    601:607:int arrayOffset() -> T
    613:619:boolean hasMemoryAddress() -> R
    625:631:long memoryAddress() -> V
    637:641:int capacity() -> aa
    646:689:io.netty.buffer.CompositeByteBuf capacity(int) -> ae
    694:694:io.netty.buffer.ByteBufAllocator alloc() -> M
    699:699:java.nio.ByteOrder order() -> N
    706:706:int numComponents() -> ab
    720:734:int toComponentIndex(int) -> ag
    744:744:byte getByte(int) -> i
    749:750:byte _getByte(int) -> j
    755:761:short _getShort(int) -> m
    767:773:short _getShortLE(int) -> o
    779:785:int _getUnsignedMedium(int) -> s
    803:809:int _getInt(int) -> v
    815:821:int _getIntLE(int) -> x
    827:833:long _getLong(int) -> B
    851:868:io.netty.buffer.CompositeByteBuf getBytes(int,byte[],int,int) -> c
    873:897:io.netty.buffer.CompositeByteBuf getBytes(int,java.nio.ByteBuffer) -> c
    902:919:io.netty.buffer.CompositeByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> c
    925:933:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    979:981:io.netty.buffer.CompositeByteBuf setByte(int,int) -> x
    986:987:void _setByte(int,int) -> c
    991:991:io.netty.buffer.CompositeByteBuf setShort(int,int) -> y
    996:1006:void _setShort(int,int) -> e
    1010:1020:void _setShortLE(int,int) -> g
    1024:1024:io.netty.buffer.CompositeByteBuf setMedium(int,int) -> z
    1029:1039:void _setMedium(int,int) -> i
    1043:1053:void _setMediumLE(int,int) -> k
    1057:1057:io.netty.buffer.CompositeByteBuf setInt(int,int) -> A
    1062:1072:void _setInt(int,int) -> m
    1090:1090:io.netty.buffer.CompositeByteBuf setLong(int,long) -> c
    1095:1105:void _setLong(int,long) -> b
    1123:1140:io.netty.buffer.CompositeByteBuf setBytes(int,byte[],int,int) -> d
    1145:1169:io.netty.buffer.CompositeByteBuf setBytes(int,java.nio.ByteBuffer) -> d
    1174:1191:io.netty.buffer.CompositeByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> d
    1240:1283:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    1336:1341:io.netty.buffer.ByteBuf copy(int,int) -> v
    1345:1361:void copyTo(int,int,int,io.netty.buffer.ByteBuf) -> a
    1390:1391:io.netty.buffer.ByteBuf internalComponent(int) -> ah
    1405:1420:io.netty.buffer.CompositeByteBuf$Component findComponent(int) -> an
    1425:1437:int nioBufferCount() -> S
    1443:1449:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    1455:1475:java.nio.ByteBuffer nioBuffer(int,int) -> u
    1480:1507:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    1571:1603:io.netty.buffer.CompositeByteBuf discardReadComponents() -> X
    1608:1650:io.netty.buffer.CompositeByteBuf discardReadBytes() -> I
    1654:1654:io.netty.buffer.ByteBuf allocBuffer(int) -> ao
    1659:1661:java.lang.String toString() -> toString
    1682:1682:io.netty.buffer.CompositeByteBuf readerIndex(int) -> ai
    1687:1687:io.netty.buffer.CompositeByteBuf writerIndex(int) -> aj
    1692:1692:io.netty.buffer.CompositeByteBuf setIndex(int,int) -> C
    1697:1697:io.netty.buffer.CompositeByteBuf clear() -> ac
    1702:1702:io.netty.buffer.CompositeByteBuf markReaderIndex() -> ad
    1707:1707:io.netty.buffer.CompositeByteBuf resetReaderIndex() -> ae
    1712:1712:io.netty.buffer.CompositeByteBuf markWriterIndex() -> af
    1722:1722:io.netty.buffer.CompositeByteBuf ensureWritable(int) -> V
    1737:1737:io.netty.buffer.CompositeByteBuf getBytes(int,byte[]) -> c
    1772:1772:io.netty.buffer.CompositeByteBuf setBytes(int,byte[]) -> d
    1777:1777:io.netty.buffer.CompositeByteBuf setZero(int,int) -> B
    1782:1782:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf) -> d
    1787:1787:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> c
    1792:1792:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> c
    1797:1797:io.netty.buffer.CompositeByteBuf readBytes(byte[]) -> c
    1802:1802:io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int) -> c
    1817:1817:io.netty.buffer.CompositeByteBuf skipBytes(int) -> W
    1827:1827:io.netty.buffer.CompositeByteBuf writeByte(int) -> Y
    1832:1832:io.netty.buffer.CompositeByteBuf writeShort(int) -> Z
    1837:1837:io.netty.buffer.CompositeByteBuf writeMedium(int) -> aa
    1842:1842:io.netty.buffer.CompositeByteBuf writeInt(int) -> ab
    1847:1847:io.netty.buffer.CompositeByteBuf writeLong(long) -> b
    1852:1852:io.netty.buffer.CompositeByteBuf writeChar(int) -> ac
    1857:1857:io.netty.buffer.CompositeByteBuf writeFloat(float) -> b
    1862:1862:io.netty.buffer.CompositeByteBuf writeDouble(double) -> b
    1867:1867:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf) -> e
    1872:1872:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> d
    1877:1877:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> d
    1882:1882:io.netty.buffer.CompositeByteBuf writeBytes(byte[]) -> d
    1887:1887:io.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int) -> d
    1892:1892:io.netty.buffer.CompositeByteBuf writeBytes(java.nio.ByteBuffer) -> b
    1897:1897:io.netty.buffer.CompositeByteBuf writeZero(int) -> ad
    1902:1902:io.netty.buffer.CompositeByteBuf retain(int) -> af
    1907:1907:io.netty.buffer.CompositeByteBuf retain() -> Y
    1912:1912:io.netty.buffer.CompositeByteBuf touch() -> Z
    1917:1917:io.netty.buffer.CompositeByteBuf touch(java.lang.Object) -> b
    1922:1922:java.nio.ByteBuffer[] nioBuffers() -> F
    1927:1927:io.netty.buffer.CompositeByteBuf discardSomeReadBytes() -> W
    1932:1943:void deallocate() -> K
    1947:1947:io.netty.buffer.ByteBuf unwrap() -> U
    44:44:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    44:44:io.netty.buffer.ByteBuf touch() -> L
    44:44:io.netty.buffer.ByteBuf retain(int) -> T
    44:44:io.netty.buffer.ByteBuf retain() -> J
    44:44:io.netty.buffer.ByteBuf writeZero(int) -> P
    44:44:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> a
    44:44:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> b
    44:44:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> b
    44:44:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> b
    44:44:io.netty.buffer.ByteBuf writeBytes(byte[]) -> b
    44:44:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> b
    44:44:io.netty.buffer.ByteBuf writeDouble(double) -> a
    44:44:io.netty.buffer.ByteBuf writeFloat(float) -> a
    44:44:io.netty.buffer.ByteBuf writeChar(int) -> O
    44:44:io.netty.buffer.ByteBuf writeLong(long) -> a
    44:44:io.netty.buffer.ByteBuf writeInt(int) -> N
    44:44:io.netty.buffer.ByteBuf writeMedium(int) -> L
    44:44:io.netty.buffer.ByteBuf writeShort(int) -> J
    44:44:io.netty.buffer.ByteBuf writeByte(int) -> I
    44:44:io.netty.buffer.ByteBuf skipBytes(int) -> H
    44:44:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> a
    44:44:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> a
    44:44:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> a
    44:44:io.netty.buffer.ByteBuf readBytes(byte[]) -> a
    44:44:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    44:44:io.netty.buffer.ByteBuf setZero(int,int) -> n
    44:44:io.netty.buffer.ByteBuf setBytes(int,byte[]) -> b
    44:44:io.netty.buffer.ByteBuf setLong(int,long) -> a
    44:44:io.netty.buffer.ByteBuf setInt(int,int) -> l
    44:44:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    44:44:io.netty.buffer.ByteBuf setShort(int,int) -> d
    44:44:io.netty.buffer.ByteBuf setByte(int,int) -> b
    44:44:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> a
    44:44:io.netty.buffer.ByteBuf ensureWritable(int) -> g
    44:44:io.netty.buffer.ByteBuf discardSomeReadBytes() -> o
    44:44:io.netty.buffer.ByteBuf discardReadBytes() -> n
    44:44:io.netty.buffer.ByteBuf markWriterIndex() -> m
    44:44:io.netty.buffer.ByteBuf resetReaderIndex() -> l
    44:44:io.netty.buffer.ByteBuf markReaderIndex() -> k
    44:44:io.netty.buffer.ByteBuf clear() -> f
    44:44:io.netty.buffer.ByteBuf setIndex(int,int) -> a
    44:44:io.netty.buffer.ByteBuf writerIndex(int) -> c
    44:44:io.netty.buffer.ByteBuf readerIndex(int) -> b
    44:44:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    44:44:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    44:44:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    44:44:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    44:44:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    44:44:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    44:44:io.netty.buffer.ByteBuf capacity(int) -> X
    44:44:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    44:44:io.netty.util.ReferenceCounted touch() -> touch
    44:44:io.netty.util.ReferenceCounted retain(int) -> retain
    44:44:io.netty.util.ReferenceCounted retain() -> retain
    44:44:io.netty.buffer.CompositeByteBuf$ComponentList access$100(io.netty.buffer.CompositeByteBuf) -> a
    44:47:void <clinit>() -> <clinit>
io.netty.buffer.CompositeByteBuf$1 -> io.netty.b.z:
io.netty.buffer.CompositeByteBuf$Component -> io.netty.b.A:
    io.netty.buffer.ByteBuf buf -> a
    int length -> b
    int offset -> c
    int endOffset -> d
    1670:1673:void <init>(io.netty.buffer.ByteBuf) -> <init>
    1676:1677:void freeIfNecessary() -> a
io.netty.buffer.CompositeByteBuf$ComponentList -> io.netty.b.B:
    1983:1984:void <init>(int) -> <init>
    1989:1990:void removeRange(int,int) -> removeRange
io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator -> io.netty.b.C:
    int size -> b
    int index -> c
    io.netty.buffer.CompositeByteBuf this$0 -> a
    1950:1951:void <init>(io.netty.buffer.CompositeByteBuf) -> <init>
    1956:1956:boolean hasNext() -> hasNext
    1961:1970:io.netty.buffer.ByteBuf next() -> a
    1976:1976:void remove() -> remove
    1950:1950:java.lang.Object next() -> next
    1950:1950:void <init>(io.netty.buffer.CompositeByteBuf,io.netty.buffer.CompositeByteBuf$1) -> <init>
io.netty.buffer.DefaultByteBufHolder -> io.netty.b.D:
    io.netty.buffer.ByteBuf data -> data
    29:34:void <init>(io.netty.buffer.ByteBuf) -> <init>
    38:41:io.netty.buffer.ByteBuf content() -> content
    51:51:io.netty.buffer.ByteBufHolder copy() -> copy
    61:61:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    71:71:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    83:83:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    88:88:int refCnt() -> refCnt
    93:94:io.netty.buffer.ByteBufHolder retain() -> retain
    99:100:io.netty.buffer.ByteBufHolder retain(int) -> retain
    105:106:io.netty.buffer.ByteBufHolder touch() -> touch
    111:112:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    117:117:boolean release() -> release
    122:122:boolean release(int) -> release
    130:130:java.lang.String contentToString() -> contentToString
    135:135:java.lang.String toString() -> toString
    140:146:boolean equals(java.lang.Object) -> equals
    151:151:int hashCode() -> hashCode
    25:25:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:io.netty.util.ReferenceCounted touch() -> touch
    25:25:io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:io.netty.util.ReferenceCounted retain() -> retain
io.netty.buffer.DuplicatedByteBuf -> io.netty.b.E:
    io.netty.buffer.ByteBuf buffer -> d
    42:43:void <init>(io.netty.buffer.ByteBuf) -> <init>
    46:59:void <init>(io.netty.buffer.ByteBuf,int,int) -> <init>
    63:63:io.netty.buffer.ByteBuf unwrap() -> U
    68:68:io.netty.buffer.ByteBufAllocator alloc() -> M
    74:74:java.nio.ByteOrder order() -> N
    79:79:boolean isDirect() -> O
    84:84:int capacity() -> aa
    89:90:io.netty.buffer.ByteBuf capacity(int) -> X
    95:95:boolean hasArray() -> P
    100:100:byte[] array() -> Q
    105:105:int arrayOffset() -> T
    110:110:boolean hasMemoryAddress() -> R
    115:115:long memoryAddress() -> V
    120:120:byte getByte(int) -> i
    125:125:byte _getByte(int) -> j
    130:130:short getShort(int) -> l
    135:135:short _getShort(int) -> m
    140:140:short getShortLE(int) -> n
    145:145:short _getShortLE(int) -> o
    150:150:int getUnsignedMedium(int) -> r
    155:155:int _getUnsignedMedium(int) -> s
    170:170:int getInt(int) -> u
    175:175:int _getInt(int) -> v
    180:180:int getIntLE(int) -> w
    185:185:int _getIntLE(int) -> x
    190:190:long getLong(int) -> A
    195:195:long _getLong(int) -> B
    210:210:io.netty.buffer.ByteBuf copy(int,int) -> v
    215:215:io.netty.buffer.ByteBuf slice(int,int) -> o
    220:221:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    226:227:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    232:233:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    238:239:io.netty.buffer.ByteBuf setByte(int,int) -> b
    244:245:void _setByte(int,int) -> c
    249:250:io.netty.buffer.ByteBuf setShort(int,int) -> d
    255:256:void _setShort(int,int) -> e
    260:261:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    266:267:void _setShortLE(int,int) -> g
    271:272:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    277:278:void _setMedium(int,int) -> i
    282:283:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    288:289:void _setMediumLE(int,int) -> k
    293:294:io.netty.buffer.ByteBuf setInt(int,int) -> l
    299:300:void _setInt(int,int) -> m
    315:316:io.netty.buffer.ByteBuf setLong(int,long) -> a
    321:322:void _setLong(int,long) -> b
    337:338:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    343:344:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    349:350:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    363:363:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    381:381:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    392:392:int nioBufferCount() -> S
    397:397:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    402:402:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    407:407:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
io.netty.buffer.EmptyByteBuf -> io.netty.b.F:
    java.nio.ByteBuffer EMPTY_BYTE_BUFFER -> a
    long EMPTY_BYTE_BUFFER_ADDRESS -> b
    io.netty.buffer.ByteBufAllocator alloc -> c
    java.nio.ByteOrder order -> d
    java.lang.String str -> e
    io.netty.buffer.EmptyByteBuf swapped -> f
    60:61:void <init>(io.netty.buffer.ByteBufAllocator) -> <init>
    63:71:void <init>(io.netty.buffer.ByteBufAllocator,java.nio.ByteOrder) -> <init>
    75:75:int capacity() -> aa
    80:80:io.netty.buffer.ByteBuf capacity(int) -> X
    85:85:io.netty.buffer.ByteBufAllocator alloc() -> M
    90:90:java.nio.ByteOrder order() -> N
    95:95:io.netty.buffer.ByteBuf unwrap() -> U
    100:100:io.netty.buffer.ByteBuf asReadOnly() -> b
    105:105:boolean isReadOnly() -> a
    110:110:boolean isDirect() -> O
    115:115:int maxCapacity() -> c
    120:133:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    138:138:int readerIndex() -> d
    143:143:io.netty.buffer.ByteBuf readerIndex(int) -> b
    148:148:int writerIndex() -> e
    153:153:io.netty.buffer.ByteBuf writerIndex(int) -> c
    158:160:io.netty.buffer.ByteBuf setIndex(int,int) -> a
    165:165:int readableBytes() -> i
    170:170:int writableBytes() -> j
    180:180:boolean isReadable() -> g
    185:185:boolean isWritable() -> h
    190:190:io.netty.buffer.ByteBuf clear() -> f
    195:195:io.netty.buffer.ByteBuf markReaderIndex() -> k
    200:200:io.netty.buffer.ByteBuf resetReaderIndex() -> l
    215:215:io.netty.buffer.ByteBuf discardReadBytes() -> n
    220:220:io.netty.buffer.ByteBuf discardSomeReadBytes() -> o
    225:231:io.netty.buffer.ByteBuf ensureWritable(int) -> g
    236:244:int ensureWritable(int,boolean) -> a
    254:254:byte getByte(int) -> i
    259:259:short getUnsignedByte(int) -> k
    264:264:short getShort(int) -> l
    269:269:short getShortLE(int) -> n
    274:274:int getUnsignedShort(int) -> p
    279:279:int getUnsignedShortLE(int) -> q
    284:284:int getMedium(int) -> t
    294:294:int getUnsignedMedium(int) -> r
    304:304:int getInt(int) -> u
    309:309:int getIntLE(int) -> w
    314:314:long getUnsignedInt(int) -> y
    319:319:long getUnsignedIntLE(int) -> z
    324:324:long getLong(int) -> A
    339:339:float getFloat(int) -> C
    344:344:double getDouble(int) -> D
    359:359:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    364:364:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> a
    369:369:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    374:374:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    384:385:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    407:407:io.netty.buffer.ByteBuf setByte(int,int) -> b
    412:412:io.netty.buffer.ByteBuf setShort(int,int) -> d
    417:417:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    422:422:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    427:427:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    432:432:io.netty.buffer.ByteBuf setInt(int,int) -> l
    442:442:io.netty.buffer.ByteBuf setLong(int,long) -> a
    477:477:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    487:487:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    492:492:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    503:504:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    515:515:io.netty.buffer.ByteBuf setZero(int,int) -> n
    520:520:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> a
    530:530:byte readByte() -> q
    535:535:short readUnsignedByte() -> r
    540:540:short readShort() -> s
    550:550:int readUnsignedShort() -> t
    560:560:int readMedium() -> u
    570:570:int readUnsignedMedium() -> v
    580:580:int readInt() -> w
    590:590:long readUnsignedInt() -> x
    600:600:long readLong() -> y
    625:625:io.netty.buffer.ByteBuf readBytes(int) -> E
    630:630:io.netty.buffer.ByteBuf readSlice(int) -> F
    635:635:io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    640:640:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> a
    655:655:io.netty.buffer.ByteBuf readBytes(byte[]) -> a
    660:660:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    675:676:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    693:693:io.netty.buffer.ByteBuf skipBytes(int) -> H
    703:703:io.netty.buffer.ByteBuf writeByte(int) -> I
    708:708:io.netty.buffer.ByteBuf writeShort(int) -> J
    713:713:io.netty.buffer.ByteBuf writeShortLE(int) -> K
    718:718:io.netty.buffer.ByteBuf writeMedium(int) -> L
    723:723:io.netty.buffer.ByteBuf writeMediumLE(int) -> M
    728:728:io.netty.buffer.ByteBuf writeInt(int) -> N
    738:738:io.netty.buffer.ByteBuf writeLong(long) -> a
    748:748:io.netty.buffer.ByteBuf writeChar(int) -> O
    753:753:io.netty.buffer.ByteBuf writeFloat(float) -> a
    758:758:io.netty.buffer.ByteBuf writeDouble(double) -> a
    763:763:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> b
    773:773:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> b
    778:778:io.netty.buffer.ByteBuf writeBytes(byte[]) -> b
    783:783:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> b
    788:788:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> a
    799:800:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> a
    811:811:io.netty.buffer.ByteBuf writeZero(int) -> P
    816:816:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> a
    821:823:int indexOf(int,int,byte) -> a
    845:845:int forEachByte(io.netty.util.ByteProcessor) -> a
    850:851:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    861:862:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    867:867:io.netty.buffer.ByteBuf copy() -> z
    872:872:io.netty.buffer.ByteBuf copy(int,int) -> v
    877:877:io.netty.buffer.ByteBuf slice() -> C
    882:882:io.netty.buffer.ByteBuf retainedSlice() -> D
    887:887:io.netty.buffer.ByteBuf slice(int,int) -> o
    897:897:io.netty.buffer.ByteBuf duplicate() -> A
    902:902:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    907:907:int nioBufferCount() -> S
    912:912:java.nio.ByteBuffer nioBuffer() -> E
    917:918:java.nio.ByteBuffer nioBuffer(int,int) -> u
    923:923:java.nio.ByteBuffer[] nioBuffers() -> F
    928:929:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    934:934:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    939:939:boolean hasArray() -> P
    944:944:byte[] array() -> Q
    949:949:int arrayOffset() -> T
    954:954:boolean hasMemoryAddress() -> R
    959:962:long memoryAddress() -> V
    968:968:java.lang.String toString(java.nio.charset.Charset) -> a
    973:974:java.lang.String toString(int,int,java.nio.charset.Charset) -> a
    979:979:int hashCode() -> hashCode
    984:984:boolean equals(java.lang.Object) -> equals
    989:989:int compareTo(io.netty.buffer.ByteBuf) -> c
    994:994:java.lang.String toString() -> toString
    999:999:boolean isReadable(int) -> d
    1004:1004:boolean isWritable(int) -> e
    1009:1009:int refCnt() -> refCnt
    1014:1014:io.netty.buffer.ByteBuf retain() -> J
    1019:1019:io.netty.buffer.ByteBuf retain(int) -> T
    1024:1024:io.netty.buffer.ByteBuf touch() -> L
    1029:1029:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    1034:1034:boolean release() -> release
    1039:1039:boolean release(int) -> release
    1043:1046:io.netty.buffer.ByteBuf checkIndex(int) -> a
    1050:1056:io.netty.buffer.ByteBuf checkIndex(int,int) -> c
    1060:1066:io.netty.buffer.ByteBuf checkLength(int) -> f
    37:37:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    37:37:io.netty.util.ReferenceCounted touch() -> touch
    37:37:io.netty.util.ReferenceCounted retain(int) -> retain
    37:37:io.netty.util.ReferenceCounted retain() -> retain
    37:37:int compareTo(java.lang.Object) -> compareTo
    39:52:void <clinit>() -> <clinit>
io.netty.buffer.HeapByteBufUtil -> io.netty.b.G:
    24:24:byte getByte(byte[],int) -> a
    28:28:short getShort(byte[],int) -> b
    32:32:short getShortLE(byte[],int) -> c
    36:36:int getUnsignedMedium(byte[],int) -> d
    48:48:int getInt(byte[],int) -> e
    55:55:int getIntLE(byte[],int) -> f
    62:62:long getLong(byte[],int) -> g
    84:85:void setByte(byte[],int,int) -> a
    88:90:void setShort(byte[],int,int) -> b
    93:95:void setShortLE(byte[],int,int) -> c
    98:101:void setMedium(byte[],int,int) -> d
    104:107:void setMediumLE(byte[],int,int) -> e
    110:114:void setInt(byte[],int,int) -> f
    124:132:void setLong(byte[],int,long) -> a
io.netty.buffer.PoolArena -> io.netty.b.H:
    boolean HAS_UNSAFE -> a
    io.netty.buffer.PooledByteBufAllocator parent -> b
    int maxOrder -> l
    int pageSize -> c
    int pageShifts -> d
    int chunkSize -> e
    int subpageOverflowMask -> f
    int numSmallSubpagePools -> g
    int directMemoryCacheAlignment -> h
    int directMemoryCacheAlignmentMask -> i
    io.netty.buffer.PoolSubpage[] tinySubpagePools -> m
    io.netty.buffer.PoolSubpage[] smallSubpagePools -> n
    io.netty.buffer.PoolChunkList q050 -> o
    io.netty.buffer.PoolChunkList q025 -> p
    io.netty.buffer.PoolChunkList q000 -> q
    io.netty.buffer.PoolChunkList qInit -> r
    io.netty.buffer.PoolChunkList q075 -> s
    io.netty.buffer.PoolChunkList q100 -> t
    java.util.List chunkListMetrics -> u
    long allocationsNormal -> v
    io.netty.util.internal.LongCounter allocationsTiny -> w
    io.netty.util.internal.LongCounter allocationsSmall -> x
    io.netty.util.internal.LongCounter allocationsHuge -> y
    io.netty.util.internal.LongCounter activeBytesHuge -> z
    long deallocationsTiny -> A
    long deallocationsSmall -> B
    long deallocationsNormal -> C
    io.netty.util.internal.LongCounter deallocationsHuge -> D
    java.util.concurrent.atomic.AtomicInteger numThreadCaches -> j
    boolean $assertionsDisabled -> k
    67:128:void <init>(io.netty.buffer.PooledByteBufAllocator,int,int,int,int,int) -> <init>
    131:134:io.netty.buffer.PoolSubpage newSubpagePoolHead(int) -> j
    139:139:io.netty.buffer.PoolSubpage[] newSubpagePoolArray(int) -> k
    boolean isDirect() -> a
    145:147:io.netty.buffer.PooledByteBuf allocate(io.netty.buffer.PoolThreadCache,int,int) -> a
    151:151:int tinyIdx(int) -> a
    155:161:int smallIdx(int) -> b
    166:166:boolean isTinyOrSmall(int) -> c
    171:171:boolean isTiny(int) -> d
    175:233:void allocate(io.netty.buffer.PoolThreadCache,io.netty.buffer.PooledByteBuf,int) -> a
    237:249:void allocateNormal(io.netty.buffer.PooledByteBuf,int,int) -> a
    252:257:void incTinySmallAllocation(boolean) -> a
    260:264:void allocateHuge(io.netty.buffer.PooledByteBuf,int) -> a
    267:281:void free(io.netty.buffer.PoolChunk,long,int,io.netty.buffer.PoolThreadCache) -> a
    284:287:io.netty.buffer.PoolArena$SizeClass sizeClass(int) -> l
    292:312:void freeChunk(io.netty.buffer.PoolChunk,long,io.netty.buffer.PoolArena$SizeClass) -> a
    317:330:io.netty.buffer.PoolSubpage findSubpagePoolHead(int) -> e
    334:371:int normalizeCapacity(int) -> f
    375:376:int alignCapacity(int) -> g
    380:420:void reallocate(io.netty.buffer.PooledByteBuf,int,boolean) -> a
    569:577:long numActiveBytes() -> b
    io.netty.buffer.PoolChunk newChunk(int,int,int,int) -> a
    io.netty.buffer.PoolChunk newUnpooledChunk(int) -> h
    io.netty.buffer.PooledByteBuf newByteBuf(int) -> i
    void memoryCopy(java.lang.Object,int,java.lang.Object,int,int) -> a
    void destroyChunk(io.netty.buffer.PoolChunk) -> a
    588:620:java.lang.String toString() -> toString
    624:642:void appendPoolSubPages(java.lang.StringBuilder,io.netty.buffer.PoolSubpage[]) -> a
    647:653:void finalize() -> finalize
    656:659:void destroyPoolSubPages(io.netty.buffer.PoolSubpage[]) -> a
    662:665:void destroyPoolChunkLists(io.netty.buffer.PoolChunkList[]) -> a
    31:32:void <clinit>() -> <clinit>
io.netty.buffer.PoolArena$1 -> io.netty.b.I:
    int[] $SwitchMap$io$netty$buffer$PoolArena$SizeClass -> a
    293:293:void <clinit>() -> <clinit>
io.netty.buffer.PoolArena$DirectArena -> io.netty.b.J:
    719:721:void <init>(io.netty.buffer.PooledByteBufAllocator,int,int,int,int,int) -> <init>
    725:725:boolean isDirect() -> a
    731:732:int offsetCacheLine(java.nio.ByteBuffer) -> a
    738:747:io.netty.buffer.PoolChunk newChunk(int,int,int,int) -> a
    752:759:io.netty.buffer.PoolChunk newUnpooledChunk(int) -> h
    763:764:java.nio.ByteBuffer allocateDirect(int) -> j
    769:774:void destroyChunk(io.netty.buffer.PoolChunk) -> a
    778:781:io.netty.buffer.PooledByteBuf newByteBuf(int) -> i
    787:803:void memoryCopy(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int) -> a
    715:715:void memoryCopy(java.lang.Object,int,java.lang.Object,int,int) -> a
io.netty.buffer.PoolArena$HeapArena -> io.netty.b.K:
    671:673:void <init>(io.netty.buffer.PooledByteBufAllocator,int,int,int,int,int) -> <init>
    676:676:byte[] newByteArray(int) -> j
    681:681:boolean isDirect() -> a
    686:686:io.netty.buffer.PoolChunk newChunk(int,int,int,int) -> a
    691:691:io.netty.buffer.PoolChunk newUnpooledChunk(int) -> h
    697:697:void destroyChunk(io.netty.buffer.PoolChunk) -> a
    701:702:io.netty.buffer.PooledByteBuf newByteBuf(int) -> i
    707:712:void memoryCopy(byte[],int,byte[],int,int) -> a
    667:667:void memoryCopy(java.lang.Object,int,java.lang.Object,int,int) -> a
io.netty.buffer.PoolArena$SizeClass -> io.netty.b.L:
    io.netty.buffer.PoolArena$SizeClass Tiny -> a
    io.netty.buffer.PoolArena$SizeClass Small -> b
    io.netty.buffer.PoolArena$SizeClass Normal -> c
    io.netty.buffer.PoolArena$SizeClass[] $VALUES -> d
    34:34:io.netty.buffer.PoolArena$SizeClass[] values() -> values
    34:34:io.netty.buffer.PoolArena$SizeClass valueOf(java.lang.String) -> valueOf
    34:34:void <init>(java.lang.String,int) -> <init>
    34:37:void <clinit>() -> <clinit>
io.netty.buffer.PoolChunk -> io.netty.b.M:
    io.netty.buffer.PoolArena arena -> a
    java.lang.Object memory -> b
    boolean unpooled -> c
    int offset -> d
    byte[] memoryMap -> i
    byte[] depthMap -> j
    io.netty.buffer.PoolSubpage[] subpages -> k
    int subpageOverflowMask -> l
    int pageSize -> m
    int pageShifts -> n
    int maxOrder -> o
    int chunkSize -> p
    int log2ChunkSize -> q
    int maxSubpageAllocs -> r
    byte unusable -> s
    int freeBytes -> t
    io.netty.buffer.PoolChunkList parent -> e
    io.netty.buffer.PoolChunk prev -> f
    io.netty.buffer.PoolChunk next -> g
    boolean $assertionsDisabled -> h
    135:167:void <init>(io.netty.buffer.PoolArena,java.lang.Object,int,int,int,int,int) -> <init>
    170:186:void <init>(io.netty.buffer.PoolArena,java.lang.Object,int,int) -> <init>
    190:190:io.netty.buffer.PoolSubpage[] newSubpageArray(int) -> b
    196:199:int usage() -> a
    203:211:int usage(int) -> c
    215:218:long allocate(int) -> a
    231:239:void updateParentsAlloc(int) -> d
    249:265:void updateParentsFree(int) -> e
    275:294:int allocateNode(int) -> f
    304:310:long allocateRun(int) -> g
    323:345:long allocateSubpage(int) -> h
    357:376:void free(long) -> a
    379:389:void initBuf(io.netty.buffer.PooledByteBuf,long,int) -> a
    392:393:void initBufWithSubpage(io.netty.buffer.PooledByteBuf,long,int) -> b
    396:408:void initBufWithSubpage(io.netty.buffer.PooledByteBuf,long,int,int) -> a
    411:411:byte value(int) -> i
    415:416:void setValue(int,byte) -> a
    419:419:byte depth(int) -> j
    424:424:int log2(int) -> k
    429:429:int runLength(int) -> l
    434:435:int runOffset(int) -> m
    439:439:int subpageIdx(int) -> n
    443:443:int memoryMapIdx(long) -> b
    447:447:int bitmapIdx(long) -> c
    452:452:int chunkSize() -> b
    465:479:java.lang.String toString() -> toString
    483:484:void destroy() -> c
    103:103:void <clinit>() -> <clinit>
io.netty.buffer.PoolChunkList -> io.netty.b.N:
    java.util.Iterator EMPTY_METRICS -> b
    io.netty.buffer.PoolArena arena -> c
    io.netty.buffer.PoolChunkList nextList -> d
    int minUsage -> e
    int maxUsage -> f
    int maxCapacity -> g
    io.netty.buffer.PoolChunk head -> h
    io.netty.buffer.PoolChunkList prevList -> i
    boolean $assertionsDisabled -> a
    43:50:void <init>(io.netty.buffer.PoolArena,io.netty.buffer.PoolChunkList,int,int,int) -> <init>
    57:69:int calculateMaxCapacity(int,int) -> a
    73:75:void prevList(io.netty.buffer.PoolChunkList) -> a
    78:99:boolean allocate(io.netty.buffer.PooledByteBuf,int,int) -> a
    103:109:boolean free(io.netty.buffer.PoolChunk,long) -> a
    113:122:boolean move(io.netty.buffer.PoolChunk) -> c
    130:136:boolean move0(io.netty.buffer.PoolChunk) -> d
    140:145:void add(io.netty.buffer.PoolChunk) -> a
    151:162:void add0(io.netty.buffer.PoolChunk) -> b
    165:177:void remove(io.netty.buffer.PoolChunk) -> e
    190:190:int minUsage0(int) -> a
    195:208:java.util.Iterator iterator() -> iterator
    213:228:java.lang.String toString() -> toString
    232:238:void destroy(io.netty.buffer.PoolArena) -> a
    28:29:void <clinit>() -> <clinit>
io.netty.buffer.PoolChunkListMetric -> io.netty.b.O:
io.netty.buffer.PoolChunkMetric -> io.netty.b.P:
    int chunkSize() -> b
io.netty.buffer.PoolSubpage -> io.netty.b.Q:
    io.netty.buffer.PoolChunk chunk -> a
    int memoryMapIdx -> g
    int runOffset -> h
    int pageSize -> i
    long[] bitmap -> j
    io.netty.buffer.PoolSubpage prev -> b
    io.netty.buffer.PoolSubpage next -> c
    boolean doNotDestroy -> d
    int elemSize -> e
    int maxNumElems -> k
    int bitmapLength -> l
    int nextAvail -> m
    int numAvail -> n
    boolean $assertionsDisabled -> f
    41:48:void <init>(int) -> <init>
    50:57:void <init>(io.netty.buffer.PoolSubpage,io.netty.buffer.PoolChunk,int,int,int,int) -> <init>
    60:75:void init(io.netty.buffer.PoolSubpage,int) -> a
    81:99:long allocate() -> a
    107:134:boolean free(io.netty.buffer.PoolSubpage,int) -> b
    139:144:void addToPool(io.netty.buffer.PoolSubpage) -> a
    147:152:void removeFromPool() -> c
    155:156:void setNextAvail(int) -> a
    159:164:int getNextAvail() -> d
    168:176:int findNextAvail() -> e
    180:194:int findNextAvail0(int,long) -> a
    198:198:long toHandle(int) -> b
    207:224:java.lang.String toString() -> toString
    255:258:void destroy() -> b
    19:19:void <clinit>() -> <clinit>
io.netty.buffer.PoolThreadCache -> io.netty.b.R:
    io.netty.util.internal.logging.InternalLogger logger -> d
    io.netty.buffer.PoolArena heapArena -> a
    io.netty.buffer.PoolArena directArena -> b
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] tinySubPageHeapCaches -> e
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] smallSubPageHeapCaches -> f
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] tinySubPageDirectCaches -> g
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] smallSubPageDirectCaches -> h
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] normalHeapCaches -> i
    io.netty.buffer.PoolThreadCache$MemoryRegionCache[] normalDirectCaches -> j
    int numShiftsNormalDirect -> k
    int numShiftsNormalHeap -> l
    int freeSweepAllocationThreshold -> m
    java.lang.Thread deathWatchThread -> n
    java.lang.Runnable freeTask -> o
    int allocations -> p
    boolean $assertionsDisabled -> c
    70:142:void <init>(io.netty.buffer.PoolArena,io.netty.buffer.PoolArena,int,int,int,int,int,boolean) -> <init>
    146:155:io.netty.buffer.PoolThreadCache$MemoryRegionCache[] createSubPageCaches(int,int,io.netty.buffer.PoolArena$SizeClass) -> a
    161:172:io.netty.buffer.PoolThreadCache$MemoryRegionCache[] createNormalCaches(int,int,io.netty.buffer.PoolArena) -> a
    177:182:int log2(int) -> a
    189:189:boolean allocateTiny(io.netty.buffer.PoolArena,io.netty.buffer.PooledByteBuf,int,int) -> a
    196:196:boolean allocateSmall(io.netty.buffer.PoolArena,io.netty.buffer.PooledByteBuf,int,int) -> b
    203:203:boolean allocateNormal(io.netty.buffer.PoolArena,io.netty.buffer.PooledByteBuf,int,int) -> c
    208:217:boolean allocate(io.netty.buffer.PoolThreadCache$MemoryRegionCache,io.netty.buffer.PooledByteBuf,int) -> a
    226:230:boolean add(io.netty.buffer.PoolArena,io.netty.buffer.PoolChunk,long,int,io.netty.buffer.PoolArena$SizeClass) -> a
    234:242:io.netty.buffer.PoolThreadCache$MemoryRegionCache cache(io.netty.buffer.PoolArena,int,io.netty.buffer.PoolArena$SizeClass) -> a
    250:255:void free() -> a
    258:276:void free0() -> c
    279:287:int free(io.netty.buffer.PoolThreadCache$MemoryRegionCache[]) -> a
    291:294:int free(io.netty.buffer.PoolThreadCache$MemoryRegionCache) -> a
    298:304:void trim() -> b
    307:313:void trim(io.netty.buffer.PoolThreadCache$MemoryRegionCache[]) -> b
    316:320:void trim(io.netty.buffer.PoolThreadCache$MemoryRegionCache) -> b
    323:327:io.netty.buffer.PoolThreadCache$MemoryRegionCache cacheForTiny(io.netty.buffer.PoolArena,int) -> a
    331:335:io.netty.buffer.PoolThreadCache$MemoryRegionCache cacheForSmall(io.netty.buffer.PoolArena,int) -> b
    339:344:io.netty.buffer.PoolThreadCache$MemoryRegionCache cacheForNormal(io.netty.buffer.PoolArena,int) -> c
    348:351:io.netty.buffer.PoolThreadCache$MemoryRegionCache cache(io.netty.buffer.PoolThreadCache$MemoryRegionCache[],int) -> a
    39:39:void access$000(io.netty.buffer.PoolThreadCache) -> a
    39:41:void <clinit>() -> <clinit>
io.netty.buffer.PoolThreadCache$1 -> io.netty.b.S:
    io.netty.buffer.PoolThreadCache this$0 -> a
    126:126:void <init>(io.netty.buffer.PoolThreadCache) -> <init>
    129:130:void run() -> run
io.netty.buffer.PoolThreadCache$2 -> io.netty.b.T:
    int[] $SwitchMap$io$netty$buffer$PoolArena$SizeClass -> a
    234:234:void <clinit>() -> <clinit>
io.netty.buffer.PoolThreadCache$MemoryRegionCache -> io.netty.b.U:
    int size -> a
    java.util.Queue queue -> b
    io.netty.buffer.PoolArena$SizeClass sizeClass -> c
    int allocations -> d
    io.netty.util.Recycler RECYCLER -> e
    390:394:void <init>(int,io.netty.buffer.PoolArena$SizeClass) -> <init>
    void initBuf(io.netty.buffer.PoolChunk,long,io.netty.buffer.PooledByteBuf,int) -> a
    407:414:boolean add(io.netty.buffer.PoolChunk,long) -> a
    421:430:boolean allocate(io.netty.buffer.PooledByteBuf,int) -> a
    437:437:int free() -> a
    441:451:int free(int) -> a
    458:465:void trim() -> b
    469:476:void freeEntry(io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry) -> a
    496:499:io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry newEntry(io.netty.buffer.PoolChunk,long) -> b
    503:503:void <clinit>() -> <clinit>
io.netty.buffer.PoolThreadCache$MemoryRegionCache$1 -> io.netty.b.V:
    503:503:void <init>() -> <init>
    507:507:io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry newObject(io.netty.util.Recycler$Handle) -> a
    503:503:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry -> io.netty.b.W:
    io.netty.util.Recycler$Handle recyclerHandle -> a
    io.netty.buffer.PoolChunk chunk -> b
    long handle -> c
    481:485:void <init>(io.netty.util.Recycler$Handle) -> <init>
    488:491:void recycle() -> a
io.netty.buffer.PoolThreadCache$NormalMemoryRegionCache -> io.netty.b.X:
    374:375:void <init>(int) -> <init>
    380:381:void initBuf(io.netty.buffer.PoolChunk,long,io.netty.buffer.PooledByteBuf,int) -> a
io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache -> io.netty.b.Y:
    359:360:void <init>(int,io.netty.buffer.PoolArena$SizeClass) -> <init>
    365:366:void initBuf(io.netty.buffer.PoolChunk,long,io.netty.buffer.PooledByteBuf,int) -> a
io.netty.buffer.PooledByteBuf -> io.netty.b.Z:
    io.netty.util.Recycler$Handle recyclerHandle -> l
    io.netty.buffer.PoolChunk chunk -> d
    long handle -> e
    java.lang.Object memory -> f
    int offset -> g
    int length -> h
    int maxLength -> i
    io.netty.buffer.PoolThreadCache cache -> j
    java.nio.ByteBuffer tmpNioBuf -> m
    io.netty.buffer.ByteBufAllocator allocator -> n
    boolean $assertionsDisabled -> k
    41:43:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    46:47:void init(io.netty.buffer.PoolChunk,long,int,int,int,io.netty.buffer.PoolThreadCache) -> a
    50:51:void initUnpooled(io.netty.buffer.PoolChunk,int) -> a
    54:66:void init0(io.netty.buffer.PoolChunk,long,int,int,int,io.netty.buffer.PoolThreadCache) -> b
    72:76:void reuse(int) -> V
    80:80:int capacity() -> aa
    85:119:io.netty.buffer.ByteBuf capacity(int) -> X
    124:124:io.netty.buffer.ByteBufAllocator alloc() -> M
    129:129:java.nio.ByteOrder order() -> N
    134:134:io.netty.buffer.ByteBuf unwrap() -> U
    139:139:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    144:145:io.netty.buffer.ByteBuf retainedSlice() -> D
    150:150:io.netty.buffer.ByteBuf retainedSlice(int,int) -> p
    154:158:java.nio.ByteBuffer internalNioBuffer() -> I
    java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> b
    165:174:void deallocate() -> K
    177:178:void recycle() -> W
    181:181:int idx(int) -> W
    25:25:void <clinit>() -> <clinit>
io.netty.buffer.PooledByteBufAllocator -> io.netty.b.aa:
    io.netty.util.internal.logging.InternalLogger logger -> d
    int DEFAULT_NUM_HEAP_ARENA -> e
    int DEFAULT_NUM_DIRECT_ARENA -> f
    int DEFAULT_PAGE_SIZE -> g
    int DEFAULT_MAX_ORDER -> h
    int DEFAULT_TINY_CACHE_SIZE -> i
    int DEFAULT_SMALL_CACHE_SIZE -> j
    int DEFAULT_NORMAL_CACHE_SIZE -> k
    int DEFAULT_MAX_CACHED_BUFFER_CAPACITY -> l
    int DEFAULT_CACHE_TRIM_INTERVAL -> m
    boolean DEFAULT_USE_CACHE_FOR_ALL_THREADS -> n
    int DEFAULT_DIRECT_MEMORY_CACHE_ALIGNMENT -> o
    io.netty.buffer.PooledByteBufAllocator DEFAULT -> b
    io.netty.buffer.PoolArena[] heapArenas -> p
    io.netty.buffer.PoolArena[] directArenas -> q
    int tinyCacheSize -> r
    int smallCacheSize -> s
    int normalCacheSize -> t
    java.util.List heapArenaMetrics -> u
    java.util.List directArenaMetrics -> v
    io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache -> w
    int chunkSize -> x
    io.netty.buffer.PooledByteBufAllocatorMetric metric -> y
    boolean $assertionsDisabled -> c
    157:158:void <init>() -> <init>
    162:163:void <init>(boolean) -> <init>
    176:178:void <init>(boolean,int,int,int,int) -> <init>
    187:189:void <init>(boolean,int,int,int,int,int,int,int) -> <init>
    203:263:void <init>(boolean,int,int,int,int,int,int,int,boolean,int) -> <init>
    267:267:io.netty.buffer.PoolArena[] newArenaArray(int) -> a
    271:280:int validateAndCalculatePageShifts(int) -> b
    284:297:int validateAndCalculateChunkSize(int,int) -> c
    302:314:io.netty.buffer.ByteBuf newHeapBuffer(int,int) -> a
    319:331:io.netty.buffer.ByteBuf newDirectBuffer(int,int) -> b
    401:401:boolean isDirectMemoryCacheAlignmentSupported() -> a
    406:406:boolean isDirectBufferPooled() -> isDirectBufferPooled
    487:487:int numHeapArenas() -> b
    497:497:int numDirectArenas() -> c
    527:537:int numThreadLocalCaches() -> d
    547:547:int tinyCacheSize() -> e
    557:557:int smallCacheSize() -> f
    567:567:int normalCacheSize() -> g
    577:577:int chunkSize() -> h
    581:581:long usedHeapMemory() -> i
    585:585:long usedDirectMemory() -> j
    589:599:long usedMemory(io.netty.buffer.PoolArena[]) -> a
    603:605:io.netty.buffer.PoolThreadCache threadCache() -> k
    33:33:io.netty.buffer.PoolArena[] access$000(io.netty.buffer.PooledByteBufAllocator) -> a
    33:33:io.netty.buffer.PoolArena[] access$100(io.netty.buffer.PooledByteBufAllocator) -> b
    33:33:int access$200(io.netty.buffer.PooledByteBufAllocator) -> c
    33:33:int access$300(io.netty.buffer.PooledByteBufAllocator) -> d
    33:33:int access$400(io.netty.buffer.PooledByteBufAllocator) -> e
    33:33:int access$500() -> l
    33:33:int access$600() -> m
    33:143:void <clinit>() -> <clinit>
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache -> io.netty.b.ab:
    boolean useCacheForAllThreads -> b
    io.netty.buffer.PooledByteBufAllocator this$0 -> a
    429:431:void <init>(io.netty.buffer.PooledByteBufAllocator,boolean) -> <init>
    435:450:io.netty.buffer.PoolThreadCache initialValue() -> a
    455:456:void onRemoval(io.netty.buffer.PoolThreadCache) -> a
    459:471:io.netty.buffer.PoolArena leastUsedArena(io.netty.buffer.PoolArena[]) -> a
    426:426:void onRemoval(java.lang.Object) -> onRemoval
    426:426:java.lang.Object initialValue() -> initialValue
io.netty.buffer.PooledByteBufAllocatorMetric -> io.netty.b.ac:
    io.netty.buffer.PooledByteBufAllocator allocator -> a
    30:32:void <init>(io.netty.buffer.PooledByteBufAllocator) -> <init>
    38:38:int numHeapArenas() -> a
    45:45:int numDirectArenas() -> b
    66:66:int numThreadLocalCaches() -> c
    73:73:int tinyCacheSize() -> d
    80:80:int smallCacheSize() -> e
    87:87:int normalCacheSize() -> f
    94:94:int chunkSize() -> g
    99:99:long usedHeapMemory() -> h
    104:104:long usedDirectMemory() -> i
    109:120:java.lang.String toString() -> toString
io.netty.buffer.PooledDirectByteBuf -> io.netty.b.ad:
    io.netty.util.Recycler RECYCLER -> l
    40:42:io.netty.buffer.PooledDirectByteBuf newInstance(int) -> Y
    46:47:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    51:51:java.nio.ByteBuffer newInternalNioBuffer(java.nio.ByteBuffer) -> b
    56:56:boolean isDirect() -> O
    61:61:byte _getByte(int) -> j
    66:66:short _getShort(int) -> m
    71:71:short _getShortLE(int) -> o
    76:79:int _getUnsignedMedium(int) -> s
    92:92:int _getInt(int) -> v
    97:97:int _getIntLE(int) -> x
    102:102:long _getLong(int) -> B
    112:124:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    129:130:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    134:144:void getBytes(int,byte[],int,int,boolean) -> a
    148:151:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    156:157:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    161:171:void getBytes(int,java.nio.ByteBuffer,boolean) -> a
    216:216:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    220:233:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> a
    255:258:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    271:272:void _setByte(int,int) -> c
    276:277:void _setShort(int,int) -> e
    281:282:void _setShortLE(int,int) -> g
    286:290:void _setMedium(int,int) -> i
    294:298:void _setMediumLE(int,int) -> k
    302:303:void _setInt(int,int) -> m
    312:313:void _setLong(int,long) -> b
    322:334:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    339:344:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    349:358:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    377:384:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    403:406:io.netty.buffer.ByteBuf copy(int,int) -> v
    411:411:int nioBufferCount() -> S
    416:418:java.nio.ByteBuffer nioBuffer(int,int) -> u
    423:423:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    428:430:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    435:435:boolean hasArray() -> P
    440:440:byte[] array() -> Q
    445:445:int arrayOffset() -> T
    450:450:boolean hasMemoryAddress() -> R
    455:455:long memoryAddress() -> V
    30:30:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> b
    30:30:void <init>(io.netty.util.Recycler$Handle,int,io.netty.buffer.PooledDirectByteBuf$1) -> <init>
    32:32:void <clinit>() -> <clinit>
io.netty.buffer.PooledDirectByteBuf$1 -> io.netty.b.ae:
    32:32:void <init>() -> <init>
    35:35:io.netty.buffer.PooledDirectByteBuf newObject(io.netty.util.Recycler$Handle) -> a
    32:32:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PooledDuplicatedByteBuf -> io.netty.b.af:
    io.netty.util.Recycler RECYCLER -> e
    42:47:io.netty.buffer.PooledDuplicatedByteBuf newInstance(io.netty.buffer.AbstractByteBuf,io.netty.buffer.ByteBuf,int,int) -> a
    51:52:void <init>(io.netty.util.Recycler$Handle) -> <init>
    56:56:int capacity() -> aa
    61:62:io.netty.buffer.ByteBuf capacity(int) -> X
    67:67:int arrayOffset() -> T
    72:72:long memoryAddress() -> V
    77:77:java.nio.ByteBuffer nioBuffer(int,int) -> u
    82:82:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    87:87:io.netty.buffer.ByteBuf copy(int,int) -> v
    92:92:io.netty.buffer.ByteBuf retainedSlice(int,int) -> p
    97:97:io.netty.buffer.ByteBuf duplicate() -> A
    102:102:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    107:107:byte getByte(int) -> i
    112:112:byte _getByte(int) -> j
    117:117:short getShort(int) -> l
    122:122:short _getShort(int) -> m
    127:127:short getShortLE(int) -> n
    132:132:short _getShortLE(int) -> o
    137:137:int getUnsignedMedium(int) -> r
    142:142:int _getUnsignedMedium(int) -> s
    157:157:int getInt(int) -> u
    162:162:int _getInt(int) -> v
    167:167:int getIntLE(int) -> w
    172:172:int _getIntLE(int) -> x
    177:177:long getLong(int) -> A
    182:182:long _getLong(int) -> B
    197:198:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    203:204:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    209:210:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    215:216:io.netty.buffer.ByteBuf setByte(int,int) -> b
    221:222:void _setByte(int,int) -> c
    226:227:io.netty.buffer.ByteBuf setShort(int,int) -> d
    232:233:void _setShort(int,int) -> e
    237:238:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    243:244:void _setShortLE(int,int) -> g
    248:249:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    254:255:void _setMedium(int,int) -> i
    259:260:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    265:266:void _setMediumLE(int,int) -> k
    270:271:io.netty.buffer.ByteBuf setInt(int,int) -> l
    276:277:void _setInt(int,int) -> m
    292:293:io.netty.buffer.ByteBuf setLong(int,long) -> a
    298:299:void _setLong(int,long) -> b
    314:315:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    320:321:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    326:327:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    340:340:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    358:358:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    369:369:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    374:374:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    31:31:void <init>(io.netty.util.Recycler$Handle,io.netty.buffer.PooledDuplicatedByteBuf$1) -> <init>
    33:33:void <clinit>() -> <clinit>
io.netty.buffer.PooledDuplicatedByteBuf$1 -> io.netty.b.ag:
    33:33:void <init>() -> <init>
    36:36:io.netty.buffer.PooledDuplicatedByteBuf newObject(io.netty.util.Recycler$Handle) -> a
    33:33:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PooledHeapByteBuf -> io.netty.b.ah:
    io.netty.util.Recycler RECYCLER -> l
    39:41:io.netty.buffer.PooledHeapByteBuf newInstance(int) -> Y
    45:46:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    50:50:boolean isDirect() -> O
    55:55:byte _getByte(int) -> j
    60:60:short _getShort(int) -> m
    65:65:short _getShortLE(int) -> o
    70:70:int _getUnsignedMedium(int) -> s
    80:80:int _getInt(int) -> v
    85:85:int _getIntLE(int) -> x
    90:90:long _getLong(int) -> B
    100:108:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    113:115:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    120:122:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    134:134:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    138:146:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> a
    163:166:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    179:180:void _setByte(int,int) -> c
    184:185:void _setShort(int,int) -> e
    189:190:void _setShortLE(int,int) -> g
    194:195:void _setMedium(int,int) -> i
    199:200:void _setMediumLE(int,int) -> k
    204:205:void _setInt(int,int) -> m
    214:215:void _setLong(int,long) -> b
    224:232:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    237:239:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    244:247:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    258:263:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    280:283:io.netty.buffer.ByteBuf copy(int,int) -> v
    288:288:int nioBufferCount() -> S
    293:293:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    298:301:java.nio.ByteBuffer nioBuffer(int,int) -> u
    306:308:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    313:313:boolean hasArray() -> P
    318:319:byte[] array() -> Q
    324:324:int arrayOffset() -> T
    329:329:boolean hasMemoryAddress() -> R
    334:334:long memoryAddress() -> V
    339:339:java.nio.ByteBuffer newInternalNioBuffer(byte[]) -> c
    29:29:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> b
    31:31:void <clinit>() -> <clinit>
io.netty.buffer.PooledHeapByteBuf$1 -> io.netty.b.ai:
    31:31:void <init>() -> <init>
    34:34:io.netty.buffer.PooledHeapByteBuf newObject(io.netty.util.Recycler$Handle) -> a
    31:31:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PooledSlicedByteBuf -> io.netty.b.aj:
    io.netty.util.Recycler RECYCLER -> f
    int adjustment -> e
    44:45:io.netty.buffer.PooledSlicedByteBuf newInstance(io.netty.buffer.AbstractByteBuf,io.netty.buffer.ByteBuf,int,int) -> a
    50:55:io.netty.buffer.PooledSlicedByteBuf newInstance0(io.netty.buffer.AbstractByteBuf,io.netty.buffer.ByteBuf,int,int) -> b
    61:62:void <init>(io.netty.util.Recycler$Handle) -> <init>
    66:66:int capacity() -> aa
    71:71:io.netty.buffer.ByteBuf capacity(int) -> X
    76:76:int arrayOffset() -> T
    81:81:long memoryAddress() -> V
    86:87:java.nio.ByteBuffer nioBuffer(int,int) -> u
    92:93:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    98:99:io.netty.buffer.ByteBuf copy(int,int) -> v
    104:105:io.netty.buffer.ByteBuf slice(int,int) -> o
    110:111:io.netty.buffer.ByteBuf retainedSlice(int,int) -> p
    116:116:io.netty.buffer.ByteBuf duplicate() -> A
    121:121:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    126:127:byte getByte(int) -> i
    132:132:byte _getByte(int) -> j
    137:138:short getShort(int) -> l
    143:143:short _getShort(int) -> m
    148:149:short getShortLE(int) -> n
    154:154:short _getShortLE(int) -> o
    159:160:int getUnsignedMedium(int) -> r
    165:165:int _getUnsignedMedium(int) -> s
    181:182:int getInt(int) -> u
    187:187:int _getInt(int) -> v
    192:193:int getIntLE(int) -> w
    198:198:int _getIntLE(int) -> x
    203:204:long getLong(int) -> A
    209:209:long _getLong(int) -> B
    225:227:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    232:234:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    239:241:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    246:248:io.netty.buffer.ByteBuf setByte(int,int) -> b
    253:254:void _setByte(int,int) -> c
    258:260:io.netty.buffer.ByteBuf setShort(int,int) -> d
    265:266:void _setShort(int,int) -> e
    270:272:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    277:278:void _setShortLE(int,int) -> g
    282:284:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    289:290:void _setMedium(int,int) -> i
    294:296:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    301:302:void _setMediumLE(int,int) -> k
    306:308:io.netty.buffer.ByteBuf setInt(int,int) -> l
    313:314:void _setInt(int,int) -> m
    330:332:io.netty.buffer.ByteBuf setLong(int,long) -> a
    337:338:void _setLong(int,long) -> b
    354:356:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    361:363:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    368:370:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    384:385:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    405:406:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    418:423:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    428:433:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    437:437:int idx(int) -> V
    33:33:void <init>(io.netty.util.Recycler$Handle,io.netty.buffer.PooledSlicedByteBuf$1) -> <init>
    35:35:void <clinit>() -> <clinit>
io.netty.buffer.PooledSlicedByteBuf$1 -> io.netty.b.ak:
    35:35:void <init>() -> <init>
    38:38:io.netty.buffer.PooledSlicedByteBuf newObject(io.netty.util.Recycler$Handle) -> a
    35:35:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PooledUnsafeDirectByteBuf -> io.netty.b.al:
    io.netty.util.Recycler RECYCLER -> l
    long memoryAddress -> m
    40:42:io.netty.buffer.PooledUnsafeDirectByteBuf newInstance(int) -> Y
    48:49:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    54:56:void init(io.netty.buffer.PoolChunk,long,int,int,int,io.netty.buffer.PoolThreadCache) -> a
    60:62:void initUnpooled(io.netty.buffer.PoolChunk,int) -> a
    65:66:void initMemoryAddress() -> W
    70:70:java.nio.ByteBuffer newInternalNioBuffer(java.nio.ByteBuffer) -> b
    75:75:boolean isDirect() -> O
    80:80:byte _getByte(int) -> j
    85:85:short _getShort(int) -> m
    90:90:short _getShortLE(int) -> o
    95:95:int _getUnsignedMedium(int) -> s
    105:105:int _getInt(int) -> v
    110:110:int _getIntLE(int) -> x
    115:115:long _getLong(int) -> B
    125:126:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    131:132:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    137:138:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    158:158:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    162:175:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> a
    198:201:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    215:216:void _setByte(int,int) -> c
    220:221:void _setShort(int,int) -> e
    225:226:void _setShortLE(int,int) -> g
    230:231:void _setMedium(int,int) -> i
    235:236:void _setMediumLE(int,int) -> k
    240:241:void _setInt(int,int) -> m
    250:251:void _setLong(int,long) -> b
    260:261:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    266:267:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    272:273:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    283:290:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    309:309:io.netty.buffer.ByteBuf copy(int,int) -> v
    314:314:int nioBufferCount() -> S
    319:319:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    324:326:java.nio.ByteBuffer nioBuffer(int,int) -> u
    331:333:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    338:338:boolean hasArray() -> P
    343:343:byte[] array() -> Q
    348:348:int arrayOffset() -> T
    353:353:boolean hasMemoryAddress() -> R
    358:359:long memoryAddress() -> V
    363:363:long addr(int) -> Z
    368:372:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> p
    377:379:io.netty.buffer.ByteBuf setZero(int,int) -> n
    384:388:io.netty.buffer.ByteBuf writeZero(int) -> P
    31:31:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> b
    31:31:void <init>(io.netty.util.Recycler$Handle,int,io.netty.buffer.PooledUnsafeDirectByteBuf$1) -> <init>
    32:32:void <clinit>() -> <clinit>
io.netty.buffer.PooledUnsafeDirectByteBuf$1 -> io.netty.b.am:
    32:32:void <init>() -> <init>
    35:35:io.netty.buffer.PooledUnsafeDirectByteBuf newObject(io.netty.util.Recycler$Handle) -> a
    32:32:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.PooledUnsafeHeapByteBuf -> io.netty.b.an:
    io.netty.util.Recycler RECYCLER -> l
    32:34:io.netty.buffer.PooledUnsafeHeapByteBuf newUnsafeInstance(int) -> Z
    38:39:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    43:43:byte _getByte(int) -> j
    48:48:short _getShort(int) -> m
    53:53:short _getShortLE(int) -> o
    58:58:int _getUnsignedMedium(int) -> s
    68:68:int _getInt(int) -> v
    73:73:int _getIntLE(int) -> x
    78:78:long _getLong(int) -> B
    88:89:void _setByte(int,int) -> c
    93:94:void _setShort(int,int) -> e
    98:99:void _setShortLE(int,int) -> g
    103:104:void _setMedium(int,int) -> i
    108:109:void _setMediumLE(int,int) -> k
    113:114:void _setInt(int,int) -> m
    123:124:void _setLong(int,long) -> b
    133:139:io.netty.buffer.ByteBuf setZero(int,int) -> n
    144:152:io.netty.buffer.ByteBuf writeZero(int) -> P
    158:162:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> p
    22:22:void <init>(io.netty.util.Recycler$Handle,int,io.netty.buffer.PooledUnsafeHeapByteBuf$1) -> <init>
    24:24:void <clinit>() -> <clinit>
io.netty.buffer.PooledUnsafeHeapByteBuf$1 -> io.netty.b.ao:
    24:24:void <init>() -> <init>
    27:27:io.netty.buffer.PooledUnsafeHeapByteBuf newObject(io.netty.util.Recycler$Handle) -> a
    24:24:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.buffer.ReadOnlyByteBuf -> io.netty.b.ap:
    io.netty.buffer.ByteBuf buffer -> d
    43:51:void <init>(io.netty.buffer.ByteBuf) -> <init>
    55:55:boolean isReadOnly() -> a
    60:60:boolean isWritable() -> h
    65:65:boolean isWritable(int) -> e
    70:70:int ensureWritable(int,boolean) -> a
    75:75:io.netty.buffer.ByteBuf ensureWritable(int) -> g
    80:80:io.netty.buffer.ByteBuf unwrap() -> U
    85:85:io.netty.buffer.ByteBufAllocator alloc() -> M
    91:91:java.nio.ByteOrder order() -> N
    96:96:boolean isDirect() -> O
    101:101:boolean hasArray() -> P
    106:106:byte[] array() -> Q
    111:111:int arrayOffset() -> T
    116:116:boolean hasMemoryAddress() -> R
    121:121:long memoryAddress() -> V
    126:126:io.netty.buffer.ByteBuf discardReadBytes() -> n
    131:131:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    136:136:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    141:141:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    146:146:io.netty.buffer.ByteBuf setByte(int,int) -> b
    151:151:void _setByte(int,int) -> c
    156:156:io.netty.buffer.ByteBuf setShort(int,int) -> d
    161:161:void _setShort(int,int) -> e
    166:166:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    171:171:void _setShortLE(int,int) -> g
    176:176:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    181:181:void _setMedium(int,int) -> i
    186:186:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    191:191:void _setMediumLE(int,int) -> k
    196:196:io.netty.buffer.ByteBuf setInt(int,int) -> l
    201:201:void _setInt(int,int) -> m
    216:216:io.netty.buffer.ByteBuf setLong(int,long) -> a
    221:221:void _setLong(int,long) -> b
    241:241:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    252:252:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    270:271:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    276:277:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    282:283:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    288:288:io.netty.buffer.ByteBuf duplicate() -> A
    293:293:io.netty.buffer.ByteBuf copy(int,int) -> v
    298:298:io.netty.buffer.ByteBuf slice(int,int) -> o
    303:303:byte getByte(int) -> i
    308:308:byte _getByte(int) -> j
    313:313:short getShort(int) -> l
    318:318:short _getShort(int) -> m
    323:323:short getShortLE(int) -> n
    328:328:short _getShortLE(int) -> o
    333:333:int getUnsignedMedium(int) -> r
    338:338:int _getUnsignedMedium(int) -> s
    353:353:int getInt(int) -> u
    358:358:int _getInt(int) -> v
    363:363:int getIntLE(int) -> w
    368:368:int _getIntLE(int) -> x
    373:373:long getLong(int) -> A
    378:378:long _getLong(int) -> B
    393:393:int nioBufferCount() -> S
    398:398:java.nio.ByteBuffer nioBuffer(int,int) -> u
    403:403:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    408:408:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    413:413:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    418:418:int capacity() -> aa
    423:423:io.netty.buffer.ByteBuf capacity(int) -> X
    428:428:io.netty.buffer.ByteBuf asReadOnly() -> b
io.netty.buffer.SimpleLeakAwareByteBuf -> io.netty.b.aq:
    io.netty.buffer.ByteBuf trackedByteBuf -> d
    io.netty.util.ResourceLeakTracker leak -> a
    boolean $assertionsDisabled -> b
    36:39:void <init>(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    42:43:void <init>(io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    47:47:io.netty.buffer.ByteBuf slice() -> C
    52:52:io.netty.buffer.ByteBuf retainedSlice() -> D
    62:62:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    67:67:io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    72:72:io.netty.buffer.ByteBuf slice(int,int) -> o
    77:77:io.netty.buffer.ByteBuf duplicate() -> A
    82:82:io.netty.buffer.ByteBuf readSlice(int) -> F
    87:87:io.netty.buffer.ByteBuf asReadOnly() -> b
    92:92:io.netty.buffer.ByteBuf touch() -> L
    97:97:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    102:106:boolean release() -> release
    111:115:boolean release(int) -> release
    121:123:void closeLeak() -> m
    127:130:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    137:150:io.netty.buffer.ByteBuf unwrappedDerived(io.netty.buffer.ByteBuf) -> d
    155:162:io.netty.buffer.ByteBuf unwrapSwapped(io.netty.buffer.ByteBuf) -> e
    167:167:io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(io.netty.buffer.ByteBuf) -> f
    172:172:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> a
    177:177:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> b
    25:25:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:io.netty.util.ReferenceCounted touch() -> touch
    25:25:void <clinit>() -> <clinit>
io.netty.buffer.SimpleLeakAwareCompositeByteBuf -> io.netty.b.ar:
    io.netty.util.ResourceLeakTracker leak -> e
    boolean $assertionsDisabled -> f
    29:31:void <init>(io.netty.buffer.CompositeByteBuf,io.netty.util.ResourceLeakTracker) -> <init>
    37:42:boolean release() -> release
    49:54:boolean release(int) -> release
    60:62:void closeLeak(io.netty.buffer.ByteBuf) -> f
    66:69:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    75:75:io.netty.buffer.ByteBuf slice() -> C
    80:80:io.netty.buffer.ByteBuf retainedSlice() -> D
    85:85:io.netty.buffer.ByteBuf slice(int,int) -> o
    90:90:io.netty.buffer.ByteBuf retainedSlice(int,int) -> p
    95:95:io.netty.buffer.ByteBuf duplicate() -> A
    100:100:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    105:105:io.netty.buffer.ByteBuf readSlice(int) -> F
    110:110:io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    115:115:io.netty.buffer.ByteBuf asReadOnly() -> b
    119:119:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf) -> g
    124:124:io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker) -> b
    24:24:void <clinit>() -> <clinit>
io.netty.buffer.SwappedByteBuf -> io.netty.b.as:
    io.netty.buffer.ByteBuf buf -> a
    java.nio.ByteOrder order -> b
    42:52:void <init>(io.netty.buffer.ByteBuf) -> <init>
    56:56:java.nio.ByteOrder order() -> N
    61:67:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    72:72:io.netty.buffer.ByteBuf unwrap() -> U
    77:77:io.netty.buffer.ByteBufAllocator alloc() -> M
    82:82:int capacity() -> aa
    87:88:io.netty.buffer.ByteBuf capacity(int) -> X
    93:93:int maxCapacity() -> c
    98:98:boolean isReadOnly() -> a
    103:103:io.netty.buffer.ByteBuf asReadOnly() -> b
    108:108:boolean isDirect() -> O
    113:113:int readerIndex() -> d
    118:119:io.netty.buffer.ByteBuf readerIndex(int) -> b
    124:124:int writerIndex() -> e
    129:130:io.netty.buffer.ByteBuf writerIndex(int) -> c
    135:136:io.netty.buffer.ByteBuf setIndex(int,int) -> a
    141:141:int readableBytes() -> i
    146:146:int writableBytes() -> j
    156:156:boolean isReadable() -> g
    161:161:boolean isReadable(int) -> d
    166:166:boolean isWritable() -> h
    171:171:boolean isWritable(int) -> e
    176:177:io.netty.buffer.ByteBuf clear() -> f
    182:183:io.netty.buffer.ByteBuf markReaderIndex() -> k
    188:189:io.netty.buffer.ByteBuf resetReaderIndex() -> l
    206:207:io.netty.buffer.ByteBuf discardReadBytes() -> n
    212:213:io.netty.buffer.ByteBuf discardSomeReadBytes() -> o
    218:219:io.netty.buffer.ByteBuf ensureWritable(int) -> g
    224:224:int ensureWritable(int,boolean) -> a
    234:234:byte getByte(int) -> i
    239:239:short getUnsignedByte(int) -> k
    244:244:short getShort(int) -> l
    249:249:short getShortLE(int) -> n
    254:254:int getUnsignedShort(int) -> p
    259:259:int getUnsignedShortLE(int) -> q
    264:264:int getMedium(int) -> t
    274:274:int getUnsignedMedium(int) -> r
    284:284:int getInt(int) -> u
    289:289:int getIntLE(int) -> w
    294:294:long getUnsignedInt(int) -> y
    299:299:long getUnsignedIntLE(int) -> z
    304:304:long getLong(int) -> A
    319:319:float getFloat(int) -> C
    324:324:double getDouble(int) -> D
    341:342:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    347:348:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> a
    353:354:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    359:360:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    371:371:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    392:393:io.netty.buffer.ByteBuf setByte(int,int) -> b
    398:399:io.netty.buffer.ByteBuf setShort(int,int) -> d
    404:405:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    410:411:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    416:417:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    422:423:io.netty.buffer.ByteBuf setInt(int,int) -> l
    434:435:io.netty.buffer.ByteBuf setLong(int,long) -> a
    476:477:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    488:489:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    494:495:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    505:505:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    515:516:io.netty.buffer.ByteBuf setZero(int,int) -> n
    521:521:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> a
    531:531:byte readByte() -> q
    536:536:short readUnsignedByte() -> r
    541:541:short readShort() -> s
    551:551:int readUnsignedShort() -> t
    561:561:int readMedium() -> u
    571:571:int readUnsignedMedium() -> v
    581:581:int readInt() -> w
    591:591:long readUnsignedInt() -> x
    601:601:long readLong() -> y
    626:626:io.netty.buffer.ByteBuf readBytes(int) -> E
    631:631:io.netty.buffer.ByteBuf readSlice(int) -> F
    636:636:io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    641:642:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> a
    659:660:io.netty.buffer.ByteBuf readBytes(byte[]) -> a
    665:666:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    683:683:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    698:699:io.netty.buffer.ByteBuf skipBytes(int) -> H
    710:711:io.netty.buffer.ByteBuf writeByte(int) -> I
    716:717:io.netty.buffer.ByteBuf writeShort(int) -> J
    722:723:io.netty.buffer.ByteBuf writeShortLE(int) -> K
    728:729:io.netty.buffer.ByteBuf writeMedium(int) -> L
    734:735:io.netty.buffer.ByteBuf writeMediumLE(int) -> M
    740:741:io.netty.buffer.ByteBuf writeInt(int) -> N
    752:753:io.netty.buffer.ByteBuf writeLong(long) -> a
    764:765:io.netty.buffer.ByteBuf writeChar(int) -> O
    770:771:io.netty.buffer.ByteBuf writeFloat(float) -> a
    776:777:io.netty.buffer.ByteBuf writeDouble(double) -> a
    782:783:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> b
    794:795:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> b
    800:801:io.netty.buffer.ByteBuf writeBytes(byte[]) -> b
    806:807:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> b
    812:813:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> a
    823:823:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> a
    833:834:io.netty.buffer.ByteBuf writeZero(int) -> P
    839:839:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> a
    844:844:int indexOf(int,int,byte) -> a
    864:864:int forEachByte(io.netty.util.ByteProcessor) -> a
    869:869:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    879:879:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    884:884:io.netty.buffer.ByteBuf copy() -> z
    889:889:io.netty.buffer.ByteBuf copy(int,int) -> v
    894:894:io.netty.buffer.ByteBuf slice() -> C
    899:899:io.netty.buffer.ByteBuf retainedSlice() -> D
    904:904:io.netty.buffer.ByteBuf slice(int,int) -> o
    914:914:io.netty.buffer.ByteBuf duplicate() -> A
    919:919:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    924:924:int nioBufferCount() -> S
    929:929:java.nio.ByteBuffer nioBuffer() -> E
    934:934:java.nio.ByteBuffer nioBuffer(int,int) -> u
    939:939:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    944:948:java.nio.ByteBuffer[] nioBuffers() -> F
    953:957:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    962:962:boolean hasArray() -> P
    967:967:byte[] array() -> Q
    972:972:int arrayOffset() -> T
    977:977:boolean hasMemoryAddress() -> R
    982:982:long memoryAddress() -> V
    987:987:java.lang.String toString(java.nio.charset.Charset) -> a
    992:992:java.lang.String toString(int,int,java.nio.charset.Charset) -> a
    997:997:int refCnt() -> refCnt
    1002:1003:io.netty.buffer.ByteBuf retain() -> J
    1008:1009:io.netty.buffer.ByteBuf retain(int) -> T
    1014:1015:io.netty.buffer.ByteBuf touch() -> L
    1020:1021:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    1026:1026:boolean release() -> release
    1031:1031:boolean release(int) -> release
    1036:1036:int hashCode() -> hashCode
    1041:1047:boolean equals(java.lang.Object) -> equals
    1052:1052:int compareTo(io.netty.buffer.ByteBuf) -> c
    1057:1057:java.lang.String toString() -> toString
    36:36:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    36:36:io.netty.util.ReferenceCounted touch() -> touch
    36:36:io.netty.util.ReferenceCounted retain(int) -> retain
    36:36:io.netty.util.ReferenceCounted retain() -> retain
    36:36:int compareTo(java.lang.Object) -> compareTo
io.netty.buffer.Unpooled -> io.netty.b.at:
    io.netty.buffer.ByteBufAllocator ALLOC -> e
    java.nio.ByteOrder BIG_ENDIAN -> a
    java.nio.ByteOrder LITTLE_ENDIAN -> b
    io.netty.buffer.ByteBuf EMPTY_BUFFER -> c
    boolean $assertionsDisabled -> d
    99:99:io.netty.buffer.ByteBuf buffer() -> a
    116:116:io.netty.buffer.ByteBuf buffer(int) -> a
    125:125:io.netty.buffer.ByteBuf directBuffer(int) -> b
    135:135:io.netty.buffer.ByteBuf buffer(int,int) -> a
    145:145:io.netty.buffer.ByteBuf directBuffer(int,int) -> b
    154:157:io.netty.buffer.ByteBuf wrappedBuffer(byte[]) -> a
    166:174:io.netty.buffer.ByteBuf wrappedBuffer(byte[],int,int) -> a
    370:370:io.netty.buffer.CompositeByteBuf compositeBuffer() -> b
    377:377:io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> c
    433:439:io.netty.buffer.ByteBuf copiedBuffer(io.netty.buffer.ByteBuf) -> a
    496:537:io.netty.buffer.ByteBuf copiedBuffer(io.netty.buffer.ByteBuf[]) -> a
    604:612:io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset) -> a
    678:678:io.netty.buffer.ByteBuf copiedBuffer(java.nio.CharBuffer,java.nio.charset.Charset) -> a
    691:696:io.netty.buffer.ByteBuf unmodifiableBuffer(io.netty.buffer.ByteBuf) -> b
    726:728:io.netty.buffer.ByteBuf copyShort(int) -> d
    878:878:io.netty.buffer.ByteBuf unreleasableBuffer(io.netty.buffer.ByteBuf) -> c
    889:891:void <init>() -> <init>
    71:92:void <clinit>() -> <clinit>
io.netty.buffer.UnpooledByteBufAllocator -> io.netty.b.au:
    io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric metric -> c
    boolean disableLeakDetector -> d
    boolean noCleaner -> e
    io.netty.buffer.UnpooledByteBufAllocator DEFAULT -> b
    46:47:void <init>(boolean) -> <init>
    59:60:void <init>(boolean,boolean) -> <init>
    29:78:void <init>(boolean,boolean,boolean) -> <init>
    82:82:io.netty.buffer.ByteBuf newHeapBuffer(int,int) -> a
    90:96:io.netty.buffer.ByteBuf newDirectBuffer(int,int) -> b
    101:102:io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    107:108:io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    113:113:boolean isDirectBufferPooled() -> isDirectBufferPooled
    122:123:void incrementDirect(int) -> a
    126:127:void decrementDirect(int) -> b
    130:131:void incrementHeap(int) -> c
    134:135:void decrementHeap(int) -> d
    36:37:void <clinit>() -> <clinit>
io.netty.buffer.UnpooledByteBufAllocator$1 -> io.netty.b.av:
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledDirectByteBuf -> io.netty.b.aw:
    231:232:void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    236:238:java.nio.ByteBuffer allocateDirect(int) -> V
    243:246:void freeDirect(java.nio.ByteBuffer) -> b
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf -> io.netty.b.ax:
    159:160:void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    164:166:byte[] allocateArray(int) -> V
    171:174:void freeArray(byte[]) -> c
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeDirectByteBuf -> io.netty.b.ay:
    210:211:void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    215:217:java.nio.ByteBuffer allocateDirect(int) -> V
    222:225:void freeDirect(java.nio.ByteBuffer) -> b
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf -> io.netty.b.az:
    139:140:void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    144:146:byte[] allocateArray(int) -> V
    151:154:void freeArray(byte[]) -> c
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf -> io.netty.b.aA:
    181:182:void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    186:188:java.nio.ByteBuffer allocateDirect(int) -> V
    193:196:java.nio.ByteBuffer reallocateDirect(java.nio.ByteBuffer,int) -> a
    201:204:void freeDirect(java.nio.ByteBuffer) -> b
io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric -> io.netty.b.aB:
    io.netty.util.internal.LongCounter directCounter -> a
    io.netty.util.internal.LongCounter heapCounter -> b
    249:251:void <init>() -> <init>
    255:255:long usedHeapMemory() -> a
    260:260:long usedDirectMemory() -> b
    265:266:java.lang.String toString() -> toString
    249:249:void <init>(io.netty.buffer.UnpooledByteBufAllocator$1) -> <init>
io.netty.buffer.UnpooledDirectByteBuf -> io.netty.b.aC:
    io.netty.buffer.ByteBufAllocator alloc -> d
    java.nio.ByteBuffer buffer -> e
    java.nio.ByteBuffer tmpNioBuf -> f
    int capacity -> g
    boolean doNotFree -> h
    51:68:void <init>(io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    106:106:java.nio.ByteBuffer allocateDirect(int) -> V
    113:114:void freeDirect(java.nio.ByteBuffer) -> b
    117:129:void setByteBuffer(java.nio.ByteBuffer) -> c
    133:133:boolean isDirect() -> O
    138:138:int capacity() -> aa
    143:173:io.netty.buffer.ByteBuf capacity(int) -> X
    178:178:io.netty.buffer.ByteBufAllocator alloc() -> M
    183:183:java.nio.ByteOrder order() -> N
    188:188:boolean hasArray() -> P
    193:193:byte[] array() -> Q
    198:198:int arrayOffset() -> T
    203:203:boolean hasMemoryAddress() -> R
    208:208:long memoryAddress() -> V
    213:214:byte getByte(int) -> i
    219:219:byte _getByte(int) -> j
    224:225:short getShort(int) -> l
    230:230:short _getShort(int) -> m
    235:235:short _getShortLE(int) -> o
    240:241:int getUnsignedMedium(int) -> r
    246:248:int _getUnsignedMedium(int) -> s
    260:261:int getInt(int) -> u
    266:266:int _getInt(int) -> v
    271:271:int _getIntLE(int) -> x
    276:277:long getLong(int) -> A
    282:282:long _getLong(int) -> B
    292:304:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    309:310:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    314:324:void getBytes(int,byte[],int,int,boolean) -> a
    328:331:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    336:337:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    341:351:void getBytes(int,java.nio.ByteBuffer,boolean) -> a
    364:366:io.netty.buffer.ByteBuf setByte(int,int) -> b
    371:372:void _setByte(int,int) -> c
    376:378:io.netty.buffer.ByteBuf setShort(int,int) -> d
    383:384:void _setShort(int,int) -> e
    388:389:void _setShortLE(int,int) -> g
    393:395:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    400:403:void _setMedium(int,int) -> i
    407:410:void _setMediumLE(int,int) -> k
    414:416:io.netty.buffer.ByteBuf setInt(int,int) -> l
    421:422:void _setInt(int,int) -> m
    431:433:io.netty.buffer.ByteBuf setLong(int,long) -> a
    438:439:void _setLong(int,long) -> b
    448:458:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    463:467:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    472:480:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    521:521:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    525:537:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> a
    558:561:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    592:598:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    616:616:int nioBufferCount() -> S
    621:621:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    626:634:io.netty.buffer.ByteBuf copy(int,int) -> v
    639:640:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    644:648:java.nio.ByteBuffer internalNioBuffer() -> I
    653:654:java.nio.ByteBuffer nioBuffer(int,int) -> u
    659:669:void deallocate() -> K
    673:673:io.netty.buffer.ByteBuf unwrap() -> U
io.netty.buffer.UnpooledDuplicatedByteBuf -> io.netty.b.aD:
    24:25:void <init>(io.netty.buffer.AbstractByteBuf) -> <init>
    29:29:io.netty.buffer.AbstractByteBuf unwrap() -> W
    34:34:byte _getByte(int) -> j
    39:39:short _getShort(int) -> m
    44:44:short _getShortLE(int) -> o
    49:49:int _getUnsignedMedium(int) -> s
    59:59:int _getInt(int) -> v
    64:64:int _getIntLE(int) -> x
    69:69:long _getLong(int) -> B
    79:80:void _setByte(int,int) -> c
    84:85:void _setShort(int,int) -> e
    89:90:void _setShortLE(int,int) -> g
    94:95:void _setMedium(int,int) -> i
    99:100:void _setMediumLE(int,int) -> k
    104:105:void _setInt(int,int) -> m
    114:115:void _setLong(int,long) -> b
    22:22:io.netty.buffer.ByteBuf unwrap() -> U
io.netty.buffer.UnpooledHeapByteBuf -> io.netty.b.aE:
    io.netty.buffer.ByteBufAllocator alloc -> e
    byte[] array -> d
    java.nio.ByteBuffer tmpNioBuf -> f
    50:62:void <init>(io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    71:84:void <init>(io.netty.buffer.ByteBufAllocator,byte[],int) -> <init>
    87:87:byte[] allocateArray(int) -> V
    92:92:void freeArray(byte[]) -> c
    95:97:void setArray(byte[]) -> d
    101:101:io.netty.buffer.ByteBufAllocator alloc() -> M
    106:106:java.nio.ByteOrder order() -> N
    111:111:boolean isDirect() -> O
    116:117:int capacity() -> aa
    122:146:io.netty.buffer.ByteBuf capacity(int) -> X
    151:151:boolean hasArray() -> P
    156:157:byte[] array() -> Q
    162:162:int arrayOffset() -> T
    167:167:boolean hasMemoryAddress() -> R
    172:172:long memoryAddress() -> V
    177:185:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    190:192:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    197:199:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    211:212:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    222:229:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> a
    240:243:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    256:264:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    269:271:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    276:278:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    289:293:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    309:309:int nioBufferCount() -> S
    314:315:java.nio.ByteBuffer nioBuffer(int,int) -> u
    320:320:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    325:326:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    331:332:byte getByte(int) -> i
    337:337:byte _getByte(int) -> j
    342:343:short getShort(int) -> l
    348:348:short _getShort(int) -> m
    353:354:short getShortLE(int) -> n
    359:359:short _getShortLE(int) -> o
    364:365:int getUnsignedMedium(int) -> r
    370:370:int _getUnsignedMedium(int) -> s
    386:387:int getInt(int) -> u
    392:392:int _getInt(int) -> v
    397:398:int getIntLE(int) -> w
    403:403:int _getIntLE(int) -> x
    408:409:long getLong(int) -> A
    414:414:long _getLong(int) -> B
    430:432:io.netty.buffer.ByteBuf setByte(int,int) -> b
    437:438:void _setByte(int,int) -> c
    442:444:io.netty.buffer.ByteBuf setShort(int,int) -> d
    449:450:void _setShort(int,int) -> e
    454:456:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    461:462:void _setShortLE(int,int) -> g
    466:468:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    473:474:void _setMedium(int,int) -> i
    478:480:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    485:486:void _setMediumLE(int,int) -> k
    490:492:io.netty.buffer.ByteBuf setInt(int,int) -> l
    497:498:void _setInt(int,int) -> m
    514:516:io.netty.buffer.ByteBuf setLong(int,long) -> a
    521:522:void _setLong(int,long) -> b
    538:541:io.netty.buffer.ByteBuf copy(int,int) -> v
    545:549:java.nio.ByteBuffer internalNioBuffer() -> I
    554:556:void deallocate() -> K
    560:560:io.netty.buffer.ByteBuf unwrap() -> U
io.netty.buffer.UnpooledSlicedByteBuf -> io.netty.b.aF:
    24:25:void <init>(io.netty.buffer.AbstractByteBuf,int,int) -> <init>
    29:29:int capacity() -> aa
    34:34:io.netty.buffer.AbstractByteBuf unwrap() -> W
    39:39:byte _getByte(int) -> j
    44:44:short _getShort(int) -> m
    49:49:short _getShortLE(int) -> o
    54:54:int _getUnsignedMedium(int) -> s
    64:64:int _getInt(int) -> v
    69:69:int _getIntLE(int) -> x
    74:74:long _getLong(int) -> B
    84:85:void _setByte(int,int) -> c
    89:90:void _setShort(int,int) -> e
    94:95:void _setShortLE(int,int) -> g
    99:100:void _setMedium(int,int) -> i
    104:105:void _setMediumLE(int,int) -> k
    109:110:void _setInt(int,int) -> m
    119:120:void _setLong(int,long) -> b
    22:22:io.netty.buffer.ByteBuf unwrap() -> U
io.netty.buffer.UnpooledUnsafeDirectByteBuf -> io.netty.b.aG:
    io.netty.buffer.ByteBufAllocator alloc -> f
    java.nio.ByteBuffer tmpNioBuf -> g
    int capacity -> h
    boolean doNotFree -> i
    java.nio.ByteBuffer buffer -> d
    long memoryAddress -> e
    52:69:void <init>(io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    120:120:java.nio.ByteBuffer allocateDirect(int) -> V
    127:128:void freeDirect(java.nio.ByteBuffer) -> b
    131:145:void setByteBuffer(java.nio.ByteBuffer,boolean) -> a
    149:149:boolean isDirect() -> O
    154:154:int capacity() -> aa
    159:189:io.netty.buffer.ByteBuf capacity(int) -> X
    194:194:io.netty.buffer.ByteBufAllocator alloc() -> M
    199:199:java.nio.ByteOrder order() -> N
    204:204:boolean hasArray() -> P
    209:209:byte[] array() -> Q
    214:214:int arrayOffset() -> T
    219:219:boolean hasMemoryAddress() -> R
    224:225:long memoryAddress() -> V
    230:230:byte _getByte(int) -> j
    235:235:short _getShort(int) -> m
    240:240:short _getShortLE(int) -> o
    245:245:int _getUnsignedMedium(int) -> s
    255:255:int _getInt(int) -> v
    260:260:int _getIntLE(int) -> x
    265:265:long _getLong(int) -> B
    275:276:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    281:282:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    287:288:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    302:303:void _setByte(int,int) -> c
    307:308:void _setShort(int,int) -> e
    312:313:void _setShortLE(int,int) -> g
    317:318:void _setMedium(int,int) -> i
    322:323:void _setMediumLE(int,int) -> k
    327:328:void _setInt(int,int) -> m
    337:338:void _setLong(int,long) -> b
    347:348:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    353:354:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    359:360:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    371:371:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    375:387:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> a
    408:411:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    429:435:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    453:453:int nioBufferCount() -> S
    458:458:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    463:463:io.netty.buffer.ByteBuf copy(int,int) -> v
    468:469:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    473:477:java.nio.ByteBuffer internalNioBuffer() -> I
    482:483:java.nio.ByteBuffer nioBuffer(int,int) -> u
    488:498:void deallocate() -> K
    502:502:io.netty.buffer.ByteBuf unwrap() -> U
    506:506:long addr(int) -> W
    511:515:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> p
    520:522:io.netty.buffer.ByteBuf setZero(int,int) -> n
    527:531:io.netty.buffer.ByteBuf writeZero(int) -> P
io.netty.buffer.UnpooledUnsafeHeapByteBuf -> io.netty.b.aH:
    29:30:void <init>(io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    34:34:byte[] allocateArray(int) -> V
    39:40:byte getByte(int) -> i
    45:45:byte _getByte(int) -> j
    50:51:short getShort(int) -> l
    56:56:short _getShort(int) -> m
    61:62:short getShortLE(int) -> n
    67:67:short _getShortLE(int) -> o
    72:73:int getUnsignedMedium(int) -> r
    78:78:int _getUnsignedMedium(int) -> s
    94:95:int getInt(int) -> u
    100:100:int _getInt(int) -> v
    105:106:int getIntLE(int) -> w
    111:111:int _getIntLE(int) -> x
    116:117:long getLong(int) -> A
    122:122:long _getLong(int) -> B
    138:140:io.netty.buffer.ByteBuf setByte(int,int) -> b
    145:146:void _setByte(int,int) -> c
    150:152:io.netty.buffer.ByteBuf setShort(int,int) -> d
    157:158:void _setShort(int,int) -> e
    162:164:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    169:170:void _setShortLE(int,int) -> g
    174:176:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    181:182:void _setMedium(int,int) -> i
    186:188:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    193:194:void _setMediumLE(int,int) -> k
    198:200:io.netty.buffer.ByteBuf setInt(int,int) -> l
    205:206:void _setInt(int,int) -> m
    222:224:io.netty.buffer.ByteBuf setLong(int,long) -> a
    229:230:void _setLong(int,long) -> b
    246:252:io.netty.buffer.ByteBuf setZero(int,int) -> n
    257:265:io.netty.buffer.ByteBuf writeZero(int) -> P
    271:275:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> p
io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf -> io.netty.b.aI:
    25:26:void <init>(io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    30:30:java.nio.ByteBuffer allocateDirect(int) -> V
    34:34:java.nio.ByteBuffer reallocateDirect(java.nio.ByteBuffer,int) -> a
    39:40:void freeDirect(java.nio.ByteBuffer) -> b
    44:63:io.netty.buffer.ByteBuf capacity(int) -> X
io.netty.buffer.UnreleasableByteBuf -> io.netty.b.aJ:
    io.netty.buffer.SwappedByteBuf swappedBuf -> a
    29:30:void <init>(io.netty.buffer.ByteBuf) -> <init>
    34:45:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    50:50:io.netty.buffer.ByteBuf asReadOnly() -> b
    55:55:io.netty.buffer.ByteBuf readSlice(int) -> F
    63:63:io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    68:68:io.netty.buffer.ByteBuf slice() -> C
    76:76:io.netty.buffer.ByteBuf retainedSlice() -> D
    81:81:io.netty.buffer.ByteBuf slice(int,int) -> o
    94:94:io.netty.buffer.ByteBuf duplicate() -> A
    102:102:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    107:107:io.netty.buffer.ByteBuf retain(int) -> T
    112:112:io.netty.buffer.ByteBuf retain() -> J
    117:117:io.netty.buffer.ByteBuf touch() -> L
    122:122:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    127:127:boolean release() -> release
    132:132:boolean release(int) -> release
    24:24:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:io.netty.util.ReferenceCounted touch() -> touch
    24:24:io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:io.netty.util.ReferenceCounted retain() -> retain
io.netty.buffer.UnsafeByteBufUtil -> io.netty.b.aK:
    boolean UNALIGNED -> a
    39:39:byte getByte(long) -> a
    43:47:short getShort(long) -> b
    51:55:short getShortLE(long) -> c
    59:66:int getUnsignedMedium(long) -> d
    81:88:int getInt(long) -> e
    92:99:int getIntLE(long) -> f
    103:114:long getLong(long) -> g
    133:134:void setByte(long,int) -> a
    137:144:void setShort(long,int) -> b
    147:154:void setShortLE(long,int) -> c
    157:165:void setMedium(long,int) -> d
    168:176:void setMediumLE(long,int) -> e
    179:187:void setInt(long,int) -> f
    201:213:void setLong(long,long) -> a
    231:231:byte getByte(byte[],int) -> a
    235:240:short getShort(byte[],int) -> b
    244:249:short getShortLE(byte[],int) -> c
    253:261:int getUnsignedMedium(byte[],int) -> d
    276:283:int getInt(byte[],int) -> e
    287:294:int getIntLE(byte[],int) -> f
    298:309:long getLong(byte[],int) -> g
    328:329:void setByte(byte[],int,int) -> a
    332:339:void setShort(byte[],int,int) -> b
    342:349:void setShortLE(byte[],int,int) -> c
    352:361:void setMedium(byte[],int,int) -> d
    364:373:void setMediumLE(byte[],int,int) -> e
    376:384:void setInt(byte[],int,int) -> f
    398:410:void setLong(byte[],int,long) -> a
    428:432:void setZero(byte[],int,int) -> g
    435:445:io.netty.buffer.ByteBuf copy(io.netty.buffer.AbstractByteBuf,long,int,int) -> a
    465:478:void getBytes(io.netty.buffer.AbstractByteBuf,long,int,io.netty.buffer.ByteBuf,int,int) -> a
    481:489:void getBytes(io.netty.buffer.AbstractByteBuf,long,int,byte[],int,int) -> a
    492:513:void getBytes(io.netty.buffer.AbstractByteBuf,long,int,java.nio.ByteBuffer) -> a
    516:531:void setBytes(io.netty.buffer.AbstractByteBuf,long,int,io.netty.buffer.ByteBuf,int,int) -> b
    534:538:void setBytes(io.netty.buffer.AbstractByteBuf,long,int,byte[],int,int) -> b
    541:567:void setBytes(io.netty.buffer.AbstractByteBuf,long,int,java.nio.ByteBuffer) -> b
    585:590:void setZero(long,int) -> g
    594:597:io.netty.buffer.UnpooledUnsafeDirectByteBuf newUnsafeDirectByteBuf(io.netty.buffer.ByteBufAllocator,int,int) -> a
    35:35:void <clinit>() -> <clinit>
io.netty.buffer.UnsafeDirectSwappedByteBuf -> io.netty.b.aL:
    27:28:void <init>(io.netty.buffer.AbstractByteBuf) -> <init>
    35:35:long addr(io.netty.buffer.AbstractByteBuf,int) -> d
    40:40:long _getLong(io.netty.buffer.AbstractByteBuf,int) -> c
    45:45:int _getInt(io.netty.buffer.AbstractByteBuf,int) -> b
    50:50:short _getShort(io.netty.buffer.AbstractByteBuf,int) -> a
    55:56:void _setShort(io.netty.buffer.AbstractByteBuf,int,short) -> a
    60:61:void _setInt(io.netty.buffer.AbstractByteBuf,int,int) -> a
    65:66:void _setLong(io.netty.buffer.AbstractByteBuf,int,long) -> a
io.netty.buffer.UnsafeHeapSwappedByteBuf -> io.netty.b.aM:
    27:28:void <init>(io.netty.buffer.AbstractByteBuf) -> <init>
    31:31:int idx(io.netty.buffer.ByteBuf,int) -> a
    36:36:long _getLong(io.netty.buffer.AbstractByteBuf,int) -> c
    41:41:int _getInt(io.netty.buffer.AbstractByteBuf,int) -> b
    46:46:short _getShort(io.netty.buffer.AbstractByteBuf,int) -> a
    51:52:void _setShort(io.netty.buffer.AbstractByteBuf,int,short) -> a
    56:57:void _setInt(io.netty.buffer.AbstractByteBuf,int,int) -> a
    61:62:void _setLong(io.netty.buffer.AbstractByteBuf,int,long) -> a
io.netty.buffer.WrappedByteBuf -> io.netty.b.aN:
    io.netty.buffer.ByteBuf buf -> c
    43:48:void <init>(io.netty.buffer.ByteBuf) -> <init>
    52:52:boolean hasMemoryAddress() -> R
    57:57:long memoryAddress() -> V
    62:62:int capacity() -> aa
    67:68:io.netty.buffer.ByteBuf capacity(int) -> X
    73:73:int maxCapacity() -> c
    78:78:io.netty.buffer.ByteBufAllocator alloc() -> M
    83:83:java.nio.ByteOrder order() -> N
    88:88:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    93:93:io.netty.buffer.ByteBuf unwrap() -> U
    98:98:io.netty.buffer.ByteBuf asReadOnly() -> b
    103:103:boolean isReadOnly() -> a
    108:108:boolean isDirect() -> O
    113:113:int readerIndex() -> d
    118:119:io.netty.buffer.ByteBuf readerIndex(int) -> b
    124:124:int writerIndex() -> e
    129:130:io.netty.buffer.ByteBuf writerIndex(int) -> c
    135:136:io.netty.buffer.ByteBuf setIndex(int,int) -> a
    141:141:int readableBytes() -> i
    146:146:int writableBytes() -> j
    156:156:boolean isReadable() -> g
    161:161:boolean isWritable() -> h
    166:167:io.netty.buffer.ByteBuf clear() -> f
    172:173:io.netty.buffer.ByteBuf markReaderIndex() -> k
    178:179:io.netty.buffer.ByteBuf resetReaderIndex() -> l
    196:197:io.netty.buffer.ByteBuf discardReadBytes() -> n
    202:203:io.netty.buffer.ByteBuf discardSomeReadBytes() -> o
    208:209:io.netty.buffer.ByteBuf ensureWritable(int) -> g
    214:214:int ensureWritable(int,boolean) -> a
    224:224:byte getByte(int) -> i
    229:229:short getUnsignedByte(int) -> k
    234:234:short getShort(int) -> l
    239:239:short getShortLE(int) -> n
    244:244:int getUnsignedShort(int) -> p
    249:249:int getUnsignedShortLE(int) -> q
    254:254:int getMedium(int) -> t
    264:264:int getUnsignedMedium(int) -> r
    274:274:int getInt(int) -> u
    279:279:int getIntLE(int) -> w
    284:284:long getUnsignedInt(int) -> y
    289:289:long getUnsignedIntLE(int) -> z
    294:294:long getLong(int) -> A
    309:309:float getFloat(int) -> C
    314:314:double getDouble(int) -> D
    331:332:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    337:338:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> a
    343:344:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    349:350:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    361:361:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    382:383:io.netty.buffer.ByteBuf setByte(int,int) -> b
    388:389:io.netty.buffer.ByteBuf setShort(int,int) -> d
    394:395:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    400:401:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    406:407:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    412:413:io.netty.buffer.ByteBuf setInt(int,int) -> l
    424:425:io.netty.buffer.ByteBuf setLong(int,long) -> a
    466:467:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    478:479:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    484:485:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    495:495:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    505:506:io.netty.buffer.ByteBuf setZero(int,int) -> n
    511:511:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> a
    521:521:byte readByte() -> q
    526:526:short readUnsignedByte() -> r
    531:531:short readShort() -> s
    541:541:int readUnsignedShort() -> t
    551:551:int readMedium() -> u
    561:561:int readUnsignedMedium() -> v
    571:571:int readInt() -> w
    581:581:long readUnsignedInt() -> x
    591:591:long readLong() -> y
    616:616:io.netty.buffer.ByteBuf readBytes(int) -> E
    621:621:io.netty.buffer.ByteBuf readSlice(int) -> F
    626:626:io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    631:632:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> a
    649:650:io.netty.buffer.ByteBuf readBytes(byte[]) -> a
    655:656:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    673:673:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    688:689:io.netty.buffer.ByteBuf skipBytes(int) -> H
    700:701:io.netty.buffer.ByteBuf writeByte(int) -> I
    706:707:io.netty.buffer.ByteBuf writeShort(int) -> J
    712:713:io.netty.buffer.ByteBuf writeShortLE(int) -> K
    718:719:io.netty.buffer.ByteBuf writeMedium(int) -> L
    724:725:io.netty.buffer.ByteBuf writeMediumLE(int) -> M
    730:731:io.netty.buffer.ByteBuf writeInt(int) -> N
    742:743:io.netty.buffer.ByteBuf writeLong(long) -> a
    754:755:io.netty.buffer.ByteBuf writeChar(int) -> O
    760:761:io.netty.buffer.ByteBuf writeFloat(float) -> a
    766:767:io.netty.buffer.ByteBuf writeDouble(double) -> a
    772:773:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> b
    784:785:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> b
    790:791:io.netty.buffer.ByteBuf writeBytes(byte[]) -> b
    796:797:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> b
    802:803:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> a
    813:813:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> a
    823:824:io.netty.buffer.ByteBuf writeZero(int) -> P
    829:829:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> a
    834:834:int indexOf(int,int,byte) -> a
    854:854:int forEachByte(io.netty.util.ByteProcessor) -> a
    859:859:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    869:869:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    874:874:io.netty.buffer.ByteBuf copy() -> z
    879:879:io.netty.buffer.ByteBuf copy(int,int) -> v
    884:884:io.netty.buffer.ByteBuf slice() -> C
    889:889:io.netty.buffer.ByteBuf retainedSlice() -> D
    894:894:io.netty.buffer.ByteBuf slice(int,int) -> o
    904:904:io.netty.buffer.ByteBuf duplicate() -> A
    909:909:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    914:914:int nioBufferCount() -> S
    919:919:java.nio.ByteBuffer nioBuffer() -> E
    924:924:java.nio.ByteBuffer nioBuffer(int,int) -> u
    929:929:java.nio.ByteBuffer[] nioBuffers() -> F
    934:934:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    939:939:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    944:944:boolean hasArray() -> P
    949:949:byte[] array() -> Q
    954:954:int arrayOffset() -> T
    959:959:java.lang.String toString(java.nio.charset.Charset) -> a
    964:964:java.lang.String toString(int,int,java.nio.charset.Charset) -> a
    969:969:int hashCode() -> hashCode
    975:975:boolean equals(java.lang.Object) -> equals
    980:980:int compareTo(io.netty.buffer.ByteBuf) -> c
    985:985:java.lang.String toString() -> toString
    990:991:io.netty.buffer.ByteBuf retain(int) -> T
    996:997:io.netty.buffer.ByteBuf retain() -> J
    1002:1003:io.netty.buffer.ByteBuf touch() -> L
    1008:1009:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    1014:1014:boolean isReadable(int) -> d
    1019:1019:boolean isWritable(int) -> e
    1024:1024:int refCnt() -> refCnt
    1029:1029:boolean release() -> release
    1034:1034:boolean release(int) -> release
    39:39:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    39:39:io.netty.util.ReferenceCounted touch() -> touch
    39:39:io.netty.util.ReferenceCounted retain(int) -> retain
    39:39:io.netty.util.ReferenceCounted retain() -> retain
    39:39:int compareTo(java.lang.Object) -> compareTo
io.netty.buffer.WrappedCompositeByteBuf -> io.netty.b.aO:
    io.netty.buffer.CompositeByteBuf wrapped -> e
    37:39:void <init>(io.netty.buffer.CompositeByteBuf) -> <init>
    43:43:boolean release() -> release
    48:48:boolean release(int) -> release
    53:53:int maxCapacity() -> c
    58:58:int readerIndex() -> d
    63:63:int writerIndex() -> e
    68:68:boolean isReadable() -> g
    73:73:boolean isReadable(int) -> d
    78:78:boolean isWritable() -> h
    83:83:boolean isWritable(int) -> e
    88:88:int readableBytes() -> i
    93:93:int writableBytes() -> j
    103:103:int ensureWritable(int,boolean) -> a
    108:108:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    118:118:short getUnsignedByte(int) -> k
    123:123:short getShort(int) -> l
    128:128:short getShortLE(int) -> n
    133:133:int getUnsignedShort(int) -> p
    138:138:int getUnsignedShortLE(int) -> q
    143:143:int getUnsignedMedium(int) -> r
    153:153:int getMedium(int) -> t
    163:163:int getInt(int) -> u
    168:168:int getIntLE(int) -> w
    173:173:long getUnsignedInt(int) -> y
    178:178:long getUnsignedIntLE(int) -> z
    183:183:long getLong(int) -> A
    198:198:float getFloat(int) -> C
    203:203:double getDouble(int) -> D
    208:208:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    213:213:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    228:228:byte readByte() -> q
    238:238:short readUnsignedByte() -> r
    243:243:short readShort() -> s
    253:253:int readUnsignedShort() -> t
    263:263:int readMedium() -> u
    273:273:int readUnsignedMedium() -> v
    283:283:int readInt() -> w
    293:293:long readUnsignedInt() -> x
    303:303:long readLong() -> y
    328:328:io.netty.buffer.ByteBuf readBytes(int) -> E
    333:333:io.netty.buffer.ByteBuf slice() -> C
    338:338:io.netty.buffer.ByteBuf retainedSlice() -> D
    343:343:io.netty.buffer.ByteBuf slice(int,int) -> o
    348:348:io.netty.buffer.ByteBuf retainedSlice(int,int) -> p
    353:353:java.nio.ByteBuffer nioBuffer() -> E
    358:358:java.lang.String toString(java.nio.charset.Charset) -> a
    363:363:java.lang.String toString(int,int,java.nio.charset.Charset) -> a
    368:368:int indexOf(int,int,byte) -> a
    388:388:int forEachByte(io.netty.util.ByteProcessor) -> a
    393:393:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    403:403:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    408:408:int hashCode() -> hashCode
    413:413:boolean equals(java.lang.Object) -> equals
    418:418:int compareTo(io.netty.buffer.ByteBuf) -> c
    423:423:int refCnt() -> refCnt
    428:428:io.netty.buffer.ByteBuf duplicate() -> A
    433:433:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    438:438:io.netty.buffer.ByteBuf readSlice(int) -> F
    443:443:io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    448:448:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    453:453:io.netty.buffer.ByteBuf writeShortLE(int) -> K
    458:458:io.netty.buffer.ByteBuf writeMediumLE(int) -> M
    478:478:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> a
    483:483:io.netty.buffer.ByteBuf copy() -> z
    524:525:io.netty.buffer.CompositeByteBuf addComponent(boolean,io.netty.buffer.ByteBuf) -> a
    530:531:io.netty.buffer.CompositeByteBuf addComponents(boolean,io.netty.buffer.ByteBuf[]) -> a
    560:560:java.util.Iterator iterator() -> iterator
    570:570:boolean isDirect() -> O
    575:575:boolean hasArray() -> P
    580:580:byte[] array() -> Q
    585:585:int arrayOffset() -> T
    590:590:boolean hasMemoryAddress() -> R
    595:595:long memoryAddress() -> V
    600:600:int capacity() -> aa
    605:606:io.netty.buffer.CompositeByteBuf capacity(int) -> ae
    611:611:io.netty.buffer.ByteBufAllocator alloc() -> M
    616:616:java.nio.ByteOrder order() -> N
    621:621:int numComponents() -> ab
    631:631:int toComponentIndex(int) -> ag
    641:641:byte getByte(int) -> i
    646:646:byte _getByte(int) -> j
    651:651:short _getShort(int) -> m
    656:656:short _getShortLE(int) -> o
    661:661:int _getUnsignedMedium(int) -> s
    671:671:int _getInt(int) -> v
    676:676:int _getIntLE(int) -> x
    681:681:long _getLong(int) -> B
    691:692:io.netty.buffer.CompositeByteBuf getBytes(int,byte[],int,int) -> c
    697:698:io.netty.buffer.CompositeByteBuf getBytes(int,java.nio.ByteBuffer) -> c
    703:704:io.netty.buffer.CompositeByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> c
    709:709:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    720:721:io.netty.buffer.CompositeByteBuf setByte(int,int) -> x
    726:727:void _setByte(int,int) -> c
    731:732:io.netty.buffer.CompositeByteBuf setShort(int,int) -> y
    737:738:void _setShort(int,int) -> e
    742:743:void _setShortLE(int,int) -> g
    747:748:io.netty.buffer.CompositeByteBuf setMedium(int,int) -> z
    753:754:void _setMedium(int,int) -> i
    758:759:void _setMediumLE(int,int) -> k
    763:764:io.netty.buffer.CompositeByteBuf setInt(int,int) -> A
    769:770:void _setInt(int,int) -> m
    779:780:io.netty.buffer.CompositeByteBuf setLong(int,long) -> c
    785:786:void _setLong(int,long) -> b
    795:796:io.netty.buffer.CompositeByteBuf setBytes(int,byte[],int,int) -> d
    801:802:io.netty.buffer.CompositeByteBuf setBytes(int,java.nio.ByteBuffer) -> d
    807:808:io.netty.buffer.CompositeByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> d
    818:818:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    823:823:io.netty.buffer.ByteBuf copy(int,int) -> v
    838:838:io.netty.buffer.ByteBuf internalComponent(int) -> ah
    848:848:int nioBufferCount() -> S
    853:853:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    858:858:java.nio.ByteBuffer nioBuffer(int,int) -> u
    863:863:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    880:881:io.netty.buffer.CompositeByteBuf discardReadComponents() -> X
    886:887:io.netty.buffer.CompositeByteBuf discardReadBytes() -> I
    892:892:java.lang.String toString() -> toString
    897:898:io.netty.buffer.CompositeByteBuf readerIndex(int) -> ai
    903:904:io.netty.buffer.CompositeByteBuf writerIndex(int) -> aj
    909:910:io.netty.buffer.CompositeByteBuf setIndex(int,int) -> C
    915:916:io.netty.buffer.CompositeByteBuf clear() -> ac
    921:922:io.netty.buffer.CompositeByteBuf markReaderIndex() -> ad
    927:928:io.netty.buffer.CompositeByteBuf resetReaderIndex() -> ae
    933:934:io.netty.buffer.CompositeByteBuf markWriterIndex() -> af
    945:946:io.netty.buffer.CompositeByteBuf ensureWritable(int) -> V
    963:964:io.netty.buffer.CompositeByteBuf getBytes(int,byte[]) -> c
    1005:1006:io.netty.buffer.CompositeByteBuf setBytes(int,byte[]) -> d
    1011:1012:io.netty.buffer.CompositeByteBuf setZero(int,int) -> B
    1017:1018:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf) -> d
    1023:1024:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> c
    1029:1030:io.netty.buffer.CompositeByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> c
    1035:1036:io.netty.buffer.CompositeByteBuf readBytes(byte[]) -> c
    1041:1042:io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int) -> c
    1069:1069:boolean isReadOnly() -> a
    1074:1074:io.netty.buffer.ByteBuf asReadOnly() -> b
    1079:1079:io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> p
    1094:1094:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> a
    1109:1109:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> a
    1114:1115:io.netty.buffer.CompositeByteBuf skipBytes(int) -> W
    1126:1127:io.netty.buffer.CompositeByteBuf writeByte(int) -> Y
    1132:1133:io.netty.buffer.CompositeByteBuf writeShort(int) -> Z
    1138:1139:io.netty.buffer.CompositeByteBuf writeMedium(int) -> aa
    1144:1145:io.netty.buffer.CompositeByteBuf writeInt(int) -> ab
    1150:1151:io.netty.buffer.CompositeByteBuf writeLong(long) -> b
    1156:1157:io.netty.buffer.CompositeByteBuf writeChar(int) -> ac
    1162:1163:io.netty.buffer.CompositeByteBuf writeFloat(float) -> b
    1168:1169:io.netty.buffer.CompositeByteBuf writeDouble(double) -> b
    1174:1175:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf) -> e
    1180:1181:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> d
    1186:1187:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> d
    1192:1193:io.netty.buffer.CompositeByteBuf writeBytes(byte[]) -> d
    1198:1199:io.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int) -> d
    1204:1205:io.netty.buffer.CompositeByteBuf writeBytes(java.nio.ByteBuffer) -> b
    1210:1211:io.netty.buffer.CompositeByteBuf writeZero(int) -> ad
    1216:1217:io.netty.buffer.CompositeByteBuf retain(int) -> af
    1222:1223:io.netty.buffer.CompositeByteBuf retain() -> Y
    1228:1229:io.netty.buffer.CompositeByteBuf touch() -> Z
    1234:1235:io.netty.buffer.CompositeByteBuf touch(java.lang.Object) -> b
    1240:1240:java.nio.ByteBuffer[] nioBuffers() -> F
    1245:1246:io.netty.buffer.CompositeByteBuf discardSomeReadBytes() -> W
    1251:1252:void deallocate() -> K
    1256:1256:io.netty.buffer.ByteBuf unwrap() -> U
    32:32:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    32:32:io.netty.buffer.ByteBuf touch() -> L
    32:32:io.netty.buffer.ByteBuf retain(int) -> T
    32:32:io.netty.buffer.ByteBuf retain() -> J
    32:32:io.netty.buffer.ByteBuf writeZero(int) -> P
    32:32:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> a
    32:32:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> b
    32:32:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int) -> b
    32:32:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> b
    32:32:io.netty.buffer.ByteBuf writeBytes(byte[]) -> b
    32:32:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> b
    32:32:io.netty.buffer.ByteBuf writeDouble(double) -> a
    32:32:io.netty.buffer.ByteBuf writeFloat(float) -> a
    32:32:io.netty.buffer.ByteBuf writeChar(int) -> O
    32:32:io.netty.buffer.ByteBuf writeLong(long) -> a
    32:32:io.netty.buffer.ByteBuf writeInt(int) -> N
    32:32:io.netty.buffer.ByteBuf writeMedium(int) -> L
    32:32:io.netty.buffer.ByteBuf writeShort(int) -> J
    32:32:io.netty.buffer.ByteBuf writeByte(int) -> I
    32:32:io.netty.buffer.ByteBuf skipBytes(int) -> H
    32:32:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int,int) -> a
    32:32:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int) -> a
    32:32:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> a
    32:32:io.netty.buffer.ByteBuf readBytes(byte[]) -> a
    32:32:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    32:32:io.netty.buffer.ByteBuf setZero(int,int) -> n
    32:32:io.netty.buffer.ByteBuf setBytes(int,byte[]) -> b
    32:32:io.netty.buffer.ByteBuf setLong(int,long) -> a
    32:32:io.netty.buffer.ByteBuf setInt(int,int) -> l
    32:32:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    32:32:io.netty.buffer.ByteBuf setShort(int,int) -> d
    32:32:io.netty.buffer.ByteBuf setByte(int,int) -> b
    32:32:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> a
    32:32:io.netty.buffer.ByteBuf ensureWritable(int) -> g
    32:32:io.netty.buffer.ByteBuf discardSomeReadBytes() -> o
    32:32:io.netty.buffer.ByteBuf discardReadBytes() -> n
    32:32:io.netty.buffer.ByteBuf markWriterIndex() -> m
    32:32:io.netty.buffer.ByteBuf resetReaderIndex() -> l
    32:32:io.netty.buffer.ByteBuf markReaderIndex() -> k
    32:32:io.netty.buffer.ByteBuf clear() -> f
    32:32:io.netty.buffer.ByteBuf setIndex(int,int) -> a
    32:32:io.netty.buffer.ByteBuf writerIndex(int) -> c
    32:32:io.netty.buffer.ByteBuf readerIndex(int) -> b
    32:32:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    32:32:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    32:32:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    32:32:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    32:32:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    32:32:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    32:32:io.netty.buffer.ByteBuf capacity(int) -> X
    32:32:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    32:32:io.netty.util.ReferenceCounted touch() -> touch
    32:32:io.netty.util.ReferenceCounted retain(int) -> retain
    32:32:io.netty.util.ReferenceCounted retain() -> retain
    32:32:int compareTo(java.lang.Object) -> compareTo
io.netty.channel.AbstractChannel -> io.netty.channel.AbstractChannel:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.nio.channels.ClosedChannelException FLUSH0_CLOSED_CHANNEL_EXCEPTION -> FLUSH0_CLOSED_CHANNEL_EXCEPTION
    java.nio.channels.ClosedChannelException ENSURE_OPEN_CLOSED_CHANNEL_EXCEPTION -> ENSURE_OPEN_CLOSED_CHANNEL_EXCEPTION
    java.nio.channels.ClosedChannelException CLOSE_CLOSED_CHANNEL_EXCEPTION -> CLOSE_CLOSED_CHANNEL_EXCEPTION
    java.nio.channels.ClosedChannelException WRITE_CLOSED_CHANNEL_EXCEPTION -> WRITE_CLOSED_CHANNEL_EXCEPTION
    java.nio.channels.NotYetConnectedException FLUSH0_NOT_YET_CONNECTED_EXCEPTION -> FLUSH0_NOT_YET_CONNECTED_EXCEPTION
    io.netty.channel.Channel parent -> parent
    io.netty.channel.ChannelId id -> id
    io.netty.channel.Channel$Unsafe unsafe -> unsafe
    io.netty.channel.DefaultChannelPipeline pipeline -> pipeline
    io.netty.channel.VoidChannelPromise unsafeVoidPromise -> unsafeVoidPromise
    io.netty.channel.AbstractChannel$CloseFuture closeFuture -> closeFuture
    java.net.SocketAddress localAddress -> localAddress
    java.net.SocketAddress remoteAddress -> remoteAddress
    io.netty.channel.EventLoop eventLoop -> eventLoop
    boolean registered -> registered
    boolean closeInitiated -> closeInitiated
    boolean strValActive -> strValActive
    java.lang.String strVal -> strVal
    62:86:void <init>(io.netty.channel.Channel) -> <init>
    62:99:void <init>(io.netty.channel.Channel,io.netty.channel.ChannelId) -> <init>
    103:103:io.netty.channel.ChannelId id() -> id
    111:111:io.netty.channel.ChannelId newId() -> newId
    118:118:io.netty.channel.DefaultChannelPipeline newChannelPipeline() -> newChannelPipeline
    123:124:boolean isWritable() -> isWritable
    129:132:long bytesBeforeUnwritable() -> bytesBeforeUnwritable
    137:140:long bytesBeforeWritable() -> bytesBeforeWritable
    145:145:io.netty.channel.Channel parent() -> parent
    150:150:io.netty.channel.ChannelPipeline pipeline() -> pipeline
    155:155:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    160:164:io.netty.channel.EventLoop eventLoop() -> eventLoop
    169:178:java.net.SocketAddress localAddress() -> localAddress
    186:187:void invalidateLocalAddress() -> invalidateLocalAddress
    191:200:java.net.SocketAddress remoteAddress() -> remoteAddress
    208:209:void invalidateRemoteAddress() -> invalidateRemoteAddress
    213:213:boolean isRegistered() -> isRegistered
    218:218:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    223:223:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    228:228:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    233:233:io.netty.channel.ChannelFuture disconnect() -> disconnect
    238:238:io.netty.channel.ChannelFuture close() -> close
    243:243:io.netty.channel.ChannelFuture deregister() -> deregister
    248:249:io.netty.channel.Channel flush() -> flush
    254:254:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    259:259:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    264:264:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    269:269:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    274:274:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    279:279:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    284:285:io.netty.channel.Channel read() -> read
    290:290:io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    295:295:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    300:300:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    305:305:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    310:310:io.netty.channel.ChannelPromise newPromise() -> newPromise
    315:315:io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    320:320:io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    325:325:io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    330:330:io.netty.channel.ChannelFuture closeFuture() -> closeFuture
    335:335:io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    348:348:int hashCode() -> hashCode
    357:357:boolean equals(java.lang.Object) -> equals
    362:366:int compareTo(io.netty.channel.Channel) -> compareTo
    377:412:java.lang.String toString() -> toString
    417:417:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    boolean isCompatible(io.netty.channel.EventLoop) -> isCompatible
    java.net.SocketAddress localAddress0() -> localAddress0
    java.net.SocketAddress remoteAddress0() -> remoteAddress0
    1068:1068:void doRegister() -> doRegister
    void doBind(java.net.SocketAddress) -> doBind
    void doDisconnect() -> doDisconnect
    void doClose() -> doClose
    1091:1092:void doShutdownOutput() -> doShutdownOutput
    1101:1101:void doDeregister() -> doDeregister
    void doBeginRead() -> doBeginRead
    void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    1118:1118:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    43:43:io.netty.channel.ChannelOutboundInvoker flush() -> flush
    43:43:io.netty.channel.ChannelOutboundInvoker read() -> read
    43:43:int compareTo(java.lang.Object) -> compareTo
    43:43:boolean access$000(io.netty.channel.AbstractChannel) -> access$000
    43:43:io.netty.channel.EventLoop access$100(io.netty.channel.AbstractChannel) -> access$100
    43:43:io.netty.channel.EventLoop access$102(io.netty.channel.AbstractChannel,io.netty.channel.EventLoop) -> access$102
    43:43:io.netty.util.internal.logging.InternalLogger access$300() -> access$300
    43:43:io.netty.channel.AbstractChannel$CloseFuture access$400(io.netty.channel.AbstractChannel) -> access$400
    43:43:boolean access$002(io.netty.channel.AbstractChannel,boolean) -> access$002
    43:43:io.netty.channel.DefaultChannelPipeline access$500(io.netty.channel.AbstractChannel) -> access$500
    43:43:java.nio.channels.ClosedChannelException access$600() -> access$600
    43:43:boolean access$800(io.netty.channel.AbstractChannel) -> access$800
    43:43:boolean access$802(io.netty.channel.AbstractChannel,boolean) -> access$802
    43:43:java.nio.channels.ClosedChannelException access$1200() -> access$1200
    43:43:java.nio.channels.NotYetConnectedException access$1300() -> access$1300
    43:43:java.nio.channels.ClosedChannelException access$1400() -> access$1400
    43:43:io.netty.channel.VoidChannelPromise access$1500(io.netty.channel.AbstractChannel) -> access$1500
    43:43:java.nio.channels.ClosedChannelException access$1600() -> access$1600
    45:55:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannel$AbstractUnsafe -> io.netty.channel.AbstractChannel$AbstractUnsafe:
    io.netty.channel.ChannelOutboundBuffer outboundBuffer -> outboundBuffer
    io.netty.channel.RecvByteBufAllocator$Handle recvHandle -> recvHandle
    boolean inFlush0 -> inFlush0
    boolean neverRegistered -> neverRegistered
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.channel.AbstractChannel this$0 -> this$0
    423:429:void <init>(io.netty.channel.AbstractChannel) -> <init>
    432:433:void assertEventLoop() -> assertEventLoop
    437:440:io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle() -> recvBufAllocHandle
    445:445:io.netty.channel.ChannelOutboundBuffer outboundBuffer() -> outboundBuffer
    450:450:java.net.SocketAddress localAddress() -> localAddress
    455:455:java.net.SocketAddress remoteAddress() -> remoteAddress
    460:494:void register(io.netty.channel.EventLoop,io.netty.channel.ChannelPromise) -> register
    500:533:void register0(io.netty.channel.ChannelPromise) -> register0
    537:575:void bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    579:605:void disconnect(io.netty.channel.ChannelPromise) -> disconnect
    609:612:void close(io.netty.channel.ChannelPromise) -> close
    620:622:void shutdownOutput(io.netty.channel.ChannelPromise) -> shutdownOutput
    630:677:void shutdownOutput(io.netty.channel.ChannelPromise,java.lang.Throwable) -> shutdownOutput
    681:684:void closeOutboundBufferForShutdown(io.netty.channel.ChannelPipeline,io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable) -> closeOutboundBufferForShutdown
    688:759:void close(io.netty.channel.ChannelPromise,java.lang.Throwable,java.nio.channels.ClosedChannelException,boolean) -> close
    763:770:void doClose0(io.netty.channel.ChannelPromise) -> doClose0
    773:774:void fireChannelInactiveAndDeregister(boolean) -> fireChannelInactiveAndDeregister
    778:785:void closeForcibly() -> closeForcibly
    789:792:void deregister(io.netty.channel.ChannelPromise) -> deregister
    795:836:void deregister(io.netty.channel.ChannelPromise,boolean) -> deregister
    840:857:void beginRead() -> beginRead
    861:889:void write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    893:902:void flush() -> flush
    906:956:void flush0() -> flush0
    960:962:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    966:971:boolean ensureOpen(io.netty.channel.ChannelPromise) -> ensureOpen
    978:981:void safeSetSuccess(io.netty.channel.ChannelPromise) -> safeSetSuccess
    987:990:void safeSetFailure(io.netty.channel.ChannelPromise,java.lang.Throwable) -> safeSetFailure
    993:997:void closeIfClosed() -> closeIfClosed
    1012:1016:void invokeLater(java.lang.Runnable) -> invokeLater
    1022:1032:java.lang.Throwable annotateConnectException(java.lang.Throwable,java.net.SocketAddress) -> annotateConnectException
    1042:1042:java.util.concurrent.Executor prepareToClose() -> prepareToClose
    423:423:void access$200(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise) -> access$200
    423:423:void access$700(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPipeline,io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable) -> access$700
    423:423:void access$900(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise) -> access$900
    423:423:void access$1000(io.netty.channel.AbstractChannel$AbstractUnsafe,boolean) -> access$1000
    423:423:void access$1100(io.netty.channel.AbstractChannel$AbstractUnsafe,java.lang.Runnable) -> access$1100
    423:423:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannel$AbstractUnsafe$1 -> io.netty.channel.AbstractChannel$AbstractUnsafe$1:
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    479:479:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise) -> <init>
    482:483:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$2 -> io.netty.channel.AbstractChannel$AbstractUnsafe$2:
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    566:566:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe) -> <init>
    569:570:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$3 -> io.netty.channel.AbstractChannel$AbstractUnsafe$3:
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    595:595:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe) -> <init>
    598:599:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$4 -> io.netty.channel.AbstractChannel$AbstractUnsafe$4:
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.ChannelOutboundBuffer val$outboundBuffer -> val$outboundBuffer
    java.lang.Throwable val$shutdownCause -> val$shutdownCause
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    646:646:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise,io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable) -> <init>
    651:664:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$4$1 -> io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:
    io.netty.channel.AbstractChannel$AbstractUnsafe$4 this$2 -> this$2
    657:657:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe$4) -> <init>
    660:661:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$5 -> io.netty.channel.AbstractChannel$AbstractUnsafe$5:
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    698:698:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise) -> <init>
    701:702:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    698:698:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.AbstractChannel$AbstractUnsafe$6 -> io.netty.channel.AbstractChannel$AbstractUnsafe$6:
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.ChannelOutboundBuffer val$outboundBuffer -> val$outboundBuffer
    java.lang.Throwable val$cause -> val$cause
    boolean val$notify -> val$notify
    java.nio.channels.ClosedChannelException val$closeCause -> val$closeCause
    boolean val$wasActive -> val$wasActive
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    715:715:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,io.netty.channel.ChannelPromise,io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable,boolean,java.nio.channels.ClosedChannelException,boolean) -> <init>
    720:735:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$6$1 -> io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:
    io.netty.channel.AbstractChannel$AbstractUnsafe$6 this$2 -> this$2
    723:723:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe$6) -> <init>
    726:732:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$7 -> io.netty.channel.AbstractChannel$AbstractUnsafe$7:
    boolean val$wasActive -> val$wasActive
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    749:749:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,boolean) -> <init>
    752:753:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$8 -> io.netty.channel.AbstractChannel$AbstractUnsafe$8:
    boolean val$fireChannelInactive -> val$fireChannelInactive
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    813:813:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,boolean,io.netty.channel.ChannelPromise) -> <init>
    817:834:void run() -> run
io.netty.channel.AbstractChannel$AbstractUnsafe$9 -> io.netty.channel.AbstractChannel$AbstractUnsafe$9:
    java.lang.Exception val$e -> val$e
    io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    849:849:void <init>(io.netty.channel.AbstractChannel$AbstractUnsafe,java.lang.Exception) -> <init>
    852:853:void run() -> run
io.netty.channel.AbstractChannel$AnnotatedConnectException -> io.netty.channel.AbstractChannel$AnnotatedConnectException:
    long serialVersionUID -> serialVersionUID
    1157:1160:void <init>(java.net.ConnectException,java.net.SocketAddress) -> <init>
    1164:1164:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException -> io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException:
    long serialVersionUID -> serialVersionUID
    1173:1176:void <init>(java.net.NoRouteToHostException,java.net.SocketAddress) -> <init>
    1180:1180:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.netty.channel.AbstractChannel$AnnotatedSocketException -> io.netty.channel.AbstractChannel$AnnotatedSocketException:
    long serialVersionUID -> serialVersionUID
    1189:1192:void <init>(java.net.SocketException,java.net.SocketAddress) -> <init>
    1196:1196:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.netty.channel.AbstractChannel$CloseFuture -> io.netty.channel.AbstractChannel$CloseFuture:
    1124:1125:void <init>(io.netty.channel.AbstractChannel) -> <init>
    1129:1129:io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    1134:1134:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    1139:1139:boolean trySuccess() -> trySuccess
    1144:1144:boolean tryFailure(java.lang.Throwable) -> tryFailure
    1148:1148:boolean setClosed() -> setClosed
    1121:1121:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
io.netty.channel.AbstractChannelHandlerContext -> io.netty.channel.AbstractChannelHandlerContext:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.channel.AbstractChannelHandlerContext next -> next
    io.netty.channel.AbstractChannelHandlerContext prev -> prev
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater HANDLER_STATE_UPDATER -> HANDLER_STATE_UPDATER
    int ADD_PENDING -> ADD_PENDING
    int ADD_COMPLETE -> ADD_COMPLETE
    int REMOVE_COMPLETE -> REMOVE_COMPLETE
    int INIT -> INIT
    boolean inbound -> inbound
    boolean outbound -> outbound
    io.netty.channel.DefaultChannelPipeline pipeline -> pipeline
    java.lang.String name -> name
    boolean ordered -> ordered
    io.netty.util.concurrent.EventExecutor executor -> executor
    io.netty.channel.ChannelFuture succeededFuture -> succeededFuture
    java.lang.Runnable invokeChannelReadCompleteTask -> invokeChannelReadCompleteTask
    java.lang.Runnable invokeReadTask -> invokeReadTask
    java.lang.Runnable invokeChannelWritableStateChangedTask -> invokeChannelWritableStateChangedTask
    java.lang.Runnable invokeFlushTask -> invokeFlushTask
    int handlerState -> handlerState
    boolean $assertionsDisabled -> $assertionsDisabled
    84:95:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.util.concurrent.EventExecutor,java.lang.String,boolean,boolean) -> <init>
    99:99:io.netty.channel.Channel channel() -> channel
    104:104:io.netty.channel.ChannelPipeline pipeline() -> pipeline
    109:109:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    114:117:io.netty.util.concurrent.EventExecutor executor() -> executor
    123:123:java.lang.String name() -> name
    128:129:io.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    133:144:void invokeChannelRegistered(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelRegistered
    147:156:void invokeChannelRegistered() -> invokeChannelRegistered
    160:161:io.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    165:176:void invokeChannelUnregistered(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelUnregistered
    179:188:void invokeChannelUnregistered() -> invokeChannelUnregistered
    192:193:io.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    197:208:void invokeChannelActive(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelActive
    211:220:void invokeChannelActive() -> invokeChannelActive
    224:225:io.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    229:240:void invokeChannelInactive(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelInactive
    243:252:void invokeChannelInactive() -> invokeChannelInactive
    256:257:io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    261:280:void invokeExceptionCaught(io.netty.channel.AbstractChannelHandlerContext,java.lang.Throwable) -> invokeExceptionCaught
    283:303:void invokeExceptionCaught(java.lang.Throwable) -> invokeExceptionCaught
    307:308:io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    312:324:void invokeUserEventTriggered(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> invokeUserEventTriggered
    327:336:void invokeUserEventTriggered(java.lang.Object) -> invokeUserEventTriggered
    340:341:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    345:357:void invokeChannelRead(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> invokeChannelRead
    360:369:void invokeChannelRead(java.lang.Object) -> invokeChannelRead
    373:374:io.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    378:393:void invokeChannelReadComplete(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelReadComplete
    396:405:void invokeChannelReadComplete() -> invokeChannelReadComplete
    409:410:io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    414:429:void invokeChannelWritabilityChanged(io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelWritabilityChanged
    432:441:void invokeChannelWritabilityChanged() -> invokeChannelWritabilityChanged
    445:445:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    450:450:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    455:455:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    460:460:io.netty.channel.ChannelFuture disconnect() -> disconnect
    465:465:io.netty.channel.ChannelFuture close() -> close
    470:470:io.netty.channel.ChannelFuture deregister() -> deregister
    475:495:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    499:508:void invokeBind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> invokeBind
    512:512:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    519:539:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    543:552:void invokeConnect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> invokeConnect
    556:583:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    587:596:void invokeDisconnect(io.netty.channel.ChannelPromise) -> invokeDisconnect
    600:618:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    622:631:void invokeClose(io.netty.channel.ChannelPromise) -> invokeClose
    635:653:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    657:666:void invokeDeregister(io.netty.channel.ChannelPromise) -> invokeDeregister
    670:687:io.netty.channel.ChannelHandlerContext read() -> read
    691:700:void invokeRead() -> invokeRead
    704:704:io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    709:725:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    729:734:void invokeWrite(java.lang.Object,io.netty.channel.ChannelPromise) -> invokeWrite
    738:742:void invokeWrite0(java.lang.Object,io.netty.channel.ChannelPromise) -> invokeWrite0
    746:763:io.netty.channel.ChannelHandlerContext flush() -> flush
    767:772:void invokeFlush() -> invokeFlush
    776:780:void invokeFlush0() -> invokeFlush0
    784:796:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    800:806:void invokeWriteAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> invokeWriteAndFlush
    809:827:void write(java.lang.Object,boolean,io.netty.channel.ChannelPromise) -> write
    831:831:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    837:838:void notifyOutboundHandlerException(java.lang.Throwable,io.netty.channel.ChannelPromise) -> notifyOutboundHandlerException
    841:851:void notifyHandlerException(java.lang.Throwable) -> notifyHandlerException
    855:870:boolean inExceptionCaught(java.lang.Throwable) -> inExceptionCaught
    875:875:io.netty.channel.ChannelPromise newPromise() -> newPromise
    880:880:io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    885:889:io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    894:894:io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    898:931:boolean isNotValidPromise(io.netty.channel.ChannelPromise,boolean) -> isNotValidPromise
    935:939:io.netty.channel.AbstractChannelHandlerContext findContextInbound() -> findContextInbound
    943:947:io.netty.channel.AbstractChannelHandlerContext findContextOutbound() -> findContextOutbound
    952:952:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    956:957:void setRemoved() -> setRemoved
    961:968:void setAddComplete() -> setAddComplete
    972:974:void setAddPending() -> setAddPending
    986:987:boolean invokeHandler() -> invokeHandler
    992:992:boolean isRemoved() -> isRemoved
    997:997:io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    1002:1002:boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
    1007:1017:void safeExecute(io.netty.util.concurrent.EventExecutor,java.lang.Runnable,io.netty.channel.ChannelPromise,java.lang.Object) -> safeExecute
    1021:1021:java.lang.String toHintString() -> toHintString
    1026:1026:java.lang.String toString() -> toString
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    38:38:io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    38:38:io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    38:38:io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    38:38:io.netty.channel.ChannelOutboundInvoker flush() -> flush
    38:38:io.netty.channel.ChannelOutboundInvoker read() -> read
    38:38:void access$000(io.netty.channel.AbstractChannelHandlerContext) -> access$000
    38:38:void access$100(io.netty.channel.AbstractChannelHandlerContext) -> access$100
    38:38:void access$200(io.netty.channel.AbstractChannelHandlerContext) -> access$200
    38:38:void access$300(io.netty.channel.AbstractChannelHandlerContext) -> access$300
    38:38:void access$400(io.netty.channel.AbstractChannelHandlerContext,java.lang.Throwable) -> access$400
    38:38:void access$500(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> access$500
    38:38:void access$600(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> access$600
    38:38:void access$700(io.netty.channel.AbstractChannelHandlerContext) -> access$700
    38:38:void access$800(io.netty.channel.AbstractChannelHandlerContext) -> access$800
    38:38:void access$900(io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> access$900
    38:38:void access$1000(io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> access$1000
    38:38:void access$1100(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> access$1100
    38:38:void access$1200(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> access$1200
    38:38:void access$1300(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> access$1300
    38:38:void access$1400(io.netty.channel.AbstractChannelHandlerContext) -> access$1400
    38:38:void access$1500(io.netty.channel.AbstractChannelHandlerContext) -> access$1500
    38:38:io.netty.channel.DefaultChannelPipeline access$1800(io.netty.channel.AbstractChannelHandlerContext) -> access$1800
    38:38:void access$1900(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> access$1900
    38:46:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannelHandlerContext$1 -> io.netty.channel.AbstractChannelHandlerContext$1:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    137:137:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    140:141:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$10 -> io.netty.channel.AbstractChannelHandlerContext$10:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.net.SocketAddress val$localAddress -> val$localAddress
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    488:488:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> <init>
    491:492:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$11 -> io.netty.channel.AbstractChannelHandlerContext$11:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    java.net.SocketAddress val$localAddress -> val$localAddress
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    532:532:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> <init>
    535:536:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$12 -> io.netty.channel.AbstractChannelHandlerContext$12:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    572:572:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    575:580:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$13 -> io.netty.channel.AbstractChannelHandlerContext$13:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    610:610:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    613:614:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$14 -> io.netty.channel.AbstractChannelHandlerContext$14:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    io.netty.channel.ChannelPromise val$promise -> val$promise
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    645:645:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    648:649:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$15 -> io.netty.channel.AbstractChannelHandlerContext$15:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    677:677:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    680:681:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$16 -> io.netty.channel.AbstractChannelHandlerContext$16:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    753:753:void <init>(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    756:757:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$2 -> io.netty.channel.AbstractChannelHandlerContext$2:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    169:169:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    172:173:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$3 -> io.netty.channel.AbstractChannelHandlerContext$3:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    201:201:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    204:205:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$4 -> io.netty.channel.AbstractChannelHandlerContext$4:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    233:233:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    236:237:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$5 -> io.netty.channel.AbstractChannelHandlerContext$5:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Throwable val$cause -> val$cause
    267:267:void <init>(io.netty.channel.AbstractChannelHandlerContext,java.lang.Throwable) -> <init>
    270:271:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$6 -> io.netty.channel.AbstractChannelHandlerContext$6:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Object val$event -> val$event
    317:317:void <init>(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> <init>
    320:321:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$7 -> io.netty.channel.AbstractChannelHandlerContext$7:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Object val$m -> val$m
    350:350:void <init>(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> <init>
    353:354:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$8 -> io.netty.channel.AbstractChannelHandlerContext$8:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    384:384:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    387:388:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$9 -> io.netty.channel.AbstractChannelHandlerContext$9:
    io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    420:420:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    423:424:void run() -> run
io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask -> io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:
    boolean ESTIMATE_TASK_SIZE_ON_SUBMIT -> ESTIMATE_TASK_SIZE_ON_SUBMIT
    int WRITE_TASK_OVERHEAD -> WRITE_TASK_OVERHEAD
    io.netty.util.Recycler$Handle handle -> handle
    io.netty.channel.AbstractChannelHandlerContext ctx -> ctx
    java.lang.Object msg -> msg
    io.netty.channel.ChannelPromise promise -> promise
    int size -> size
    1045:1047:void <init>(io.netty.util.Recycler$Handle) -> <init>
    1051:1061:void init(io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask,io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> init
    1067:1078:void run() -> run
    1081:1082:void write(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    1029:1029:void <init>(io.netty.util.Recycler$Handle,io.netty.channel.AbstractChannelHandlerContext$1) -> <init>
    1031:1036:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask -> io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    1117:1119:io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask newInstance(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> newInstance
    1123:1124:void <init>(io.netty.util.Recycler$Handle) -> <init>
    1128:1130:void write(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    1106:1106:io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask access$1600(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> access$1600
    1106:1106:void <init>(io.netty.util.Recycler$Handle,io.netty.channel.AbstractChannelHandlerContext$1) -> <init>
    1108:1108:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1 -> io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1:
    1108:1108:void <init>() -> <init>
    1111:1111:io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask newObject(io.netty.util.Recycler$Handle) -> newObject
    1108:1108:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.channel.AbstractChannelHandlerContext$WriteTask -> io.netty.channel.AbstractChannelHandlerContext$WriteTask:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    1096:1098:io.netty.channel.AbstractChannelHandlerContext$WriteTask newInstance(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> newInstance
    1102:1103:void <init>(io.netty.util.Recycler$Handle) -> <init>
    1085:1085:io.netty.channel.AbstractChannelHandlerContext$WriteTask access$1700(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> access$1700
    1085:1085:void <init>(io.netty.util.Recycler$Handle,io.netty.channel.AbstractChannelHandlerContext$1) -> <init>
    1087:1087:void <clinit>() -> <clinit>
io.netty.channel.AbstractChannelHandlerContext$WriteTask$1 -> io.netty.channel.AbstractChannelHandlerContext$WriteTask$1:
    1087:1087:void <init>() -> <init>
    1090:1090:io.netty.channel.AbstractChannelHandlerContext$WriteTask newObject(io.netty.util.Recycler$Handle) -> newObject
    1087:1087:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.channel.AbstractCoalescingBufferQueue -> io.netty.channel.AbstractCoalescingBufferQueue:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.ArrayDeque bufAndListenerPairs -> bufAndListenerPairs
    io.netty.channel.PendingBytesTracker tracker -> tracker
    int readableBytes -> readableBytes
    boolean $assertionsDisabled -> $assertionsDisabled
    45:48:void <init>(io.netty.channel.Channel,int) -> <init>
    57:58:void addFirst(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> addFirst
    61:66:void addFirst(io.netty.buffer.ByteBuf,io.netty.channel.ChannelFutureListener) -> addFirst
    72:73:void add(io.netty.buffer.ByteBuf) -> add
    84:85:void add(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> add
    96:101:void add(io.netty.buffer.ByteBuf,io.netty.channel.ChannelFutureListener) -> add
    109:123:io.netty.buffer.ByteBuf removeFirst(io.netty.channel.ChannelPromise) -> removeFirst
    138:186:io.netty.buffer.ByteBuf remove(io.netty.buffer.ByteBufAllocator,int,io.netty.channel.ChannelPromise) -> remove
    193:193:int readableBytes() -> readableBytes
    200:200:boolean isEmpty() -> isEmpty
    207:208:void releaseAndFailAll(io.netty.channel.ChannelOutboundInvoker,java.lang.Throwable) -> releaseAndFailAll
    215:217:void copyTo(io.netty.channel.AbstractCoalescingBufferQueue) -> copyTo
    224:260:void writeAndRemoveAll(io.netty.channel.ChannelHandlerContext) -> writeAndRemoveAll
    io.netty.buffer.ByteBuf compose(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> compose
    273:282:io.netty.buffer.ByteBuf composeIntoComposite(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> composeIntoComposite
    293:303:io.netty.buffer.ByteBuf copyAndCompose(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> copyAndCompose
    311:311:io.netty.buffer.ByteBuf composeFirst(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf) -> composeFirst
    io.netty.buffer.ByteBuf removeEmptyValue() -> removeEmptyValue
    325:325:int size() -> size
    329:353:void releaseAndCompleteAll(io.netty.channel.ChannelFuture) -> releaseAndCompleteAll
    356:364:void incrementReadableBytes(int) -> incrementReadableBytes
    367:372:void decrementReadableBytes(int) -> decrementReadableBytes
    375:375:io.netty.channel.ChannelFutureListener toChannelFutureListener(io.netty.channel.ChannelPromise) -> toChannelFutureListener
    31:33:void <clinit>() -> <clinit>
io.netty.channel.AbstractEventLoop -> io.netty.channel.AbstractEventLoop:
    26:26:void <init>() -> <init>
    29:30:void <init>(io.netty.channel.EventLoopGroup) -> <init>
    34:34:io.netty.channel.EventLoopGroup parent() -> parent
    39:39:io.netty.channel.EventLoop next() -> next
    24:24:io.netty.util.concurrent.EventExecutor next() -> next
    24:24:io.netty.util.concurrent.EventExecutorGroup parent() -> parent
io.netty.channel.AbstractEventLoopGroup -> io.netty.channel.AbstractEventLoopGroup:
    24:24:void <init>() -> <init>
    io.netty.channel.EventLoop next() -> next
    24:24:io.netty.util.concurrent.EventExecutor next() -> next
io.netty.channel.AbstractServerChannel -> io.netty.channel.AbstractServerChannel:
    io.netty.channel.ChannelMetadata METADATA -> METADATA
    38:39:void <init>() -> <init>
    43:43:io.netty.channel.ChannelMetadata metadata() -> metadata
    48:48:java.net.SocketAddress remoteAddress() -> remoteAddress
    53:53:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    58:58:void doDisconnect() -> doDisconnect
    63:63:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    68:68:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    73:73:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    32:32:void <clinit>() -> <clinit>
io.netty.channel.AbstractServerChannel$1 -> io.netty.channel.AbstractServerChannel$1:
io.netty.channel.AbstractServerChannel$DefaultServerUnsafe -> io.netty.channel.AbstractServerChannel$DefaultServerUnsafe:
    io.netty.channel.AbstractServerChannel this$0 -> this$0
    76:76:void <init>(io.netty.channel.AbstractServerChannel) -> <init>
    79:80:void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    76:76:void <init>(io.netty.channel.AbstractServerChannel,io.netty.channel.AbstractServerChannel$1) -> <init>
io.netty.channel.AdaptiveRecvByteBufAllocator -> io.netty.channel.AdaptiveRecvByteBufAllocator:
    int DEFAULT_MINIMUM -> DEFAULT_MINIMUM
    int DEFAULT_INITIAL -> DEFAULT_INITIAL
    int DEFAULT_MAXIMUM -> DEFAULT_MAXIMUM
    int INDEX_INCREMENT -> INDEX_INCREMENT
    int INDEX_DECREMENT -> INDEX_DECREMENT
    int[] SIZE_TABLE -> SIZE_TABLE
    io.netty.channel.AdaptiveRecvByteBufAllocator DEFAULT -> DEFAULT
    int minIndex -> minIndex
    int maxIndex -> maxIndex
    int initial -> initial
    68:88:int getSizeTableIndex(int) -> getSizeTableIndex
    155:156:void <init>() -> <init>
    165:191:void <init>(int,int,int) -> <init>
    196:196:io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    201:202:io.netty.channel.AdaptiveRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    34:34:io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    34:34:int access$000(int) -> access$000
    34:34:int[] access$100() -> access$100
    46:65:void <clinit>() -> <clinit>
io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl -> io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl:
    int minIndex -> minIndex
    int maxIndex -> maxIndex
    int index -> index
    int nextReceiveBufferSize -> nextReceiveBufferSize
    boolean decreaseNow -> decreaseNow
    io.netty.channel.AdaptiveRecvByteBufAllocator this$0 -> this$0
    98:104:void <init>(io.netty.channel.AdaptiveRecvByteBufAllocator,int,int,int) -> <init>
    112:116:void lastBytesRead(int) -> lastBytesRead
    120:120:int guess() -> guess
    124:137:void record(int) -> record
    141:142:void readComplete() -> readComplete
io.netty.channel.AddressedEnvelope -> io.netty.channel.AddressedEnvelope:
    java.lang.Object content() -> content
    java.net.SocketAddress sender() -> sender
    java.net.SocketAddress recipient() -> recipient
    io.netty.channel.AddressedEnvelope retain() -> retain
    io.netty.channel.AddressedEnvelope retain(int) -> retain
    io.netty.channel.AddressedEnvelope touch() -> touch
    io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
io.netty.channel.Channel -> io.netty.channel.Channel:
    io.netty.channel.ChannelId id() -> id
    io.netty.channel.EventLoop eventLoop() -> eventLoop
    io.netty.channel.Channel parent() -> parent
    io.netty.channel.ChannelConfig config() -> config
    boolean isOpen() -> isOpen
    boolean isRegistered() -> isRegistered
    boolean isActive() -> isActive
    io.netty.channel.ChannelMetadata metadata() -> metadata
    java.net.SocketAddress localAddress() -> localAddress
    java.net.SocketAddress remoteAddress() -> remoteAddress
    io.netty.channel.ChannelFuture closeFuture() -> closeFuture
    boolean isWritable() -> isWritable
    long bytesBeforeUnwritable() -> bytesBeforeUnwritable
    long bytesBeforeWritable() -> bytesBeforeWritable
    io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    io.netty.channel.ChannelPipeline pipeline() -> pipeline
    io.netty.buffer.ByteBufAllocator alloc() -> alloc
    io.netty.channel.Channel read() -> read
    io.netty.channel.Channel flush() -> flush
io.netty.channel.Channel$Unsafe -> io.netty.channel.Channel$Unsafe:
    io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle() -> recvBufAllocHandle
    java.net.SocketAddress localAddress() -> localAddress
    java.net.SocketAddress remoteAddress() -> remoteAddress
    void register(io.netty.channel.EventLoop,io.netty.channel.ChannelPromise) -> register
    void bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    void disconnect(io.netty.channel.ChannelPromise) -> disconnect
    void close(io.netty.channel.ChannelPromise) -> close
    void closeForcibly() -> closeForcibly
    void deregister(io.netty.channel.ChannelPromise) -> deregister
    void beginRead() -> beginRead
    void write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    void flush() -> flush
    io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    io.netty.channel.ChannelOutboundBuffer outboundBuffer() -> outboundBuffer
io.netty.channel.ChannelConfig -> io.netty.channel.ChannelConfig:
    java.util.Map getOptions() -> getOptions
    boolean setOptions(java.util.Map) -> setOptions
    java.lang.Object getOption(io.netty.channel.ChannelOption) -> getOption
    boolean setOption(io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    int getConnectTimeoutMillis() -> getConnectTimeoutMillis
    io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    int getMaxMessagesPerRead() -> getMaxMessagesPerRead
    io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    int getWriteSpinCount() -> getWriteSpinCount
    io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    io.netty.buffer.ByteBufAllocator getAllocator() -> getAllocator
    io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    io.netty.channel.RecvByteBufAllocator getRecvByteBufAllocator() -> getRecvByteBufAllocator
    io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    boolean isAutoRead() -> isAutoRead
    io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    boolean isAutoClose() -> isAutoClose
    io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    int getWriteBufferHighWaterMark() -> getWriteBufferHighWaterMark
    io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    int getWriteBufferLowWaterMark() -> getWriteBufferLowWaterMark
    io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    io.netty.channel.MessageSizeEstimator getMessageSizeEstimator() -> getMessageSizeEstimator
    io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    io.netty.channel.WriteBufferWaterMark getWriteBufferWaterMark() -> getWriteBufferWaterMark
    io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
io.netty.channel.ChannelDuplexHandler -> io.netty.channel.ChannelDuplexHandler:
    27:27:void <init>() -> <init>
    38:39:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    50:51:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    62:63:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    73:74:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    84:85:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    95:96:void read(io.netty.channel.ChannelHandlerContext) -> read
    106:107:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    117:118:void flush(io.netty.channel.ChannelHandlerContext) -> flush
io.netty.channel.ChannelException -> io.netty.channel.ChannelException:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
io.netty.channel.ChannelFactory -> io.netty.channel.ChannelFactory:
    io.netty.channel.Channel newChannel() -> newChannel
io.netty.channel.ChannelFlushPromiseNotifier -> io.netty.channel.ChannelFlushPromiseNotifier:
    long writeCounter -> writeCounter
    java.util.Queue flushCheckpoints -> flushCheckpoints
    boolean tryNotify -> tryNotify
    28:41:void <init>(boolean) -> <init>
    48:49:void <init>() -> <init>
    56:56:io.netty.channel.ChannelFlushPromiseNotifier add(io.netty.channel.ChannelPromise,int) -> add
    64:78:io.netty.channel.ChannelFlushPromiseNotifier add(io.netty.channel.ChannelPromise,long) -> add
    84:88:io.netty.channel.ChannelFlushPromiseNotifier increaseWriteCounter(long) -> increaseWriteCounter
    95:95:long writeCounter() -> writeCounter
    106:107:io.netty.channel.ChannelFlushPromiseNotifier notifyPromises() -> notifyPromises
    115:115:io.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures() -> notifyFlushFutures
    130:142:io.netty.channel.ChannelFlushPromiseNotifier notifyPromises(java.lang.Throwable) -> notifyPromises
    150:150:io.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures(java.lang.Throwable) -> notifyFlushFutures
    170:182:io.netty.channel.ChannelFlushPromiseNotifier notifyPromises(java.lang.Throwable,java.lang.Throwable) -> notifyPromises
    190:190:io.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures(java.lang.Throwable,java.lang.Throwable) -> notifyFlushFutures
    194:243:void notifyPromises0(java.lang.Throwable) -> notifyPromises0
io.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint -> io.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint:
    long checkpoint -> checkpoint
    io.netty.channel.ChannelPromise future -> future
    255:258:void <init>(long,io.netty.channel.ChannelPromise) -> <init>
    262:262:long flushCheckpoint() -> flushCheckpoint
    267:268:void flushCheckpoint(long) -> flushCheckpoint
    272:272:io.netty.channel.ChannelPromise promise() -> promise
io.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint -> io.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint:
    long flushCheckpoint() -> flushCheckpoint
    void flushCheckpoint(long) -> flushCheckpoint
    io.netty.channel.ChannelPromise promise() -> promise
io.netty.channel.ChannelFuture -> io.netty.channel.ChannelFuture:
    io.netty.channel.Channel channel() -> channel
    io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    io.netty.channel.ChannelFuture sync() -> sync
    io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    io.netty.channel.ChannelFuture await() -> await
    io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    boolean isVoid() -> isVoid
io.netty.channel.ChannelFutureListener -> io.netty.channel.ChannelFutureListener:
    io.netty.channel.ChannelFutureListener CLOSE -> CLOSE
    io.netty.channel.ChannelFutureListener CLOSE_ON_FAILURE -> CLOSE_ON_FAILURE
    io.netty.channel.ChannelFutureListener FIRE_EXCEPTION_ON_FAILURE -> FIRE_EXCEPTION_ON_FAILURE
    41:65:void <clinit>() -> <clinit>
io.netty.channel.ChannelFutureListener$1 -> io.netty.channel.ChannelFutureListener$1:
    41:41:void <init>() -> <init>
    44:45:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    41:41:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.ChannelFutureListener$2 -> io.netty.channel.ChannelFutureListener$2:
    52:52:void <init>() -> <init>
    55:58:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    52:52:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.ChannelFutureListener$3 -> io.netty.channel.ChannelFutureListener$3:
    65:65:void <init>() -> <init>
    68:71:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    65:65:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.ChannelHandler -> io.netty.channel.ChannelHandler:
    void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
io.netty.channel.ChannelHandler$Sharable -> io.netty.channel.ChannelHandler$Sharable:
io.netty.channel.ChannelHandlerAdapter -> io.netty.channel.ChannelHandlerAdapter:
    boolean added -> added
    26:26:void <init>() -> <init>
    35:38:void ensureNotSharable() -> ensureNotSharable
    53:60:boolean isSharable() -> isSharable
    69:69:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    77:77:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    87:88:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
io.netty.channel.ChannelHandlerContext -> io.netty.channel.ChannelHandlerContext:
    io.netty.channel.Channel channel() -> channel
    io.netty.util.concurrent.EventExecutor executor() -> executor
    java.lang.String name() -> name
    io.netty.channel.ChannelHandler handler() -> handler
    boolean isRemoved() -> isRemoved
    io.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    io.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    io.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    io.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    io.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    io.netty.channel.ChannelHandlerContext read() -> read
    io.netty.channel.ChannelHandlerContext flush() -> flush
    io.netty.channel.ChannelPipeline pipeline() -> pipeline
    io.netty.buffer.ByteBufAllocator alloc() -> alloc
    io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
io.netty.channel.ChannelId -> io.netty.channel.ChannelId:
    java.lang.String asShortText() -> asShortText
    java.lang.String asLongText() -> asLongText
io.netty.channel.ChannelInboundHandler -> io.netty.channel.ChannelInboundHandler:
    void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
io.netty.channel.ChannelInboundHandlerAdapter -> io.netty.channel.ChannelInboundHandlerAdapter:
    32:32:void <init>() -> <init>
    42:43:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    53:54:void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    64:65:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    75:76:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    86:87:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    97:98:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    108:109:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    119:120:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    131:132:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
io.netty.channel.ChannelInboundInvoker -> io.netty.channel.ChannelInboundInvoker:
    io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
io.netty.channel.ChannelInitializer -> io.netty.channel.ChannelInitializer:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.ConcurrentMap initMap -> initMap
    53:58:void <init>() -> <init>
    void initChannel(io.netty.channel.Channel) -> initChannel
    76:84:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    91:93:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    100:107:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    111:123:boolean initChannel(io.netty.channel.ChannelHandlerContext) -> initChannel
    128:135:void remove(io.netty.channel.ChannelHandlerContext) -> remove
    55:55:void <clinit>() -> <clinit>
io.netty.channel.ChannelMetadata -> io.netty.channel.ChannelMetadata:
    boolean hasDisconnect -> hasDisconnect
    int defaultMaxMessagesPerRead -> defaultMaxMessagesPerRead
    36:37:void <init>(boolean) -> <init>
    48:55:void <init>(boolean,int) -> <init>
    63:63:boolean hasDisconnect() -> hasDisconnect
    71:71:int defaultMaxMessagesPerRead() -> defaultMaxMessagesPerRead
io.netty.channel.ChannelOption -> io.netty.channel.ChannelOption:
    io.netty.util.ConstantPool pool -> pool
    io.netty.channel.ChannelOption ALLOCATOR -> ALLOCATOR
    io.netty.channel.ChannelOption RCVBUF_ALLOCATOR -> RCVBUF_ALLOCATOR
    io.netty.channel.ChannelOption MESSAGE_SIZE_ESTIMATOR -> MESSAGE_SIZE_ESTIMATOR
    io.netty.channel.ChannelOption CONNECT_TIMEOUT_MILLIS -> CONNECT_TIMEOUT_MILLIS
    io.netty.channel.ChannelOption MAX_MESSAGES_PER_READ -> MAX_MESSAGES_PER_READ
    io.netty.channel.ChannelOption WRITE_SPIN_COUNT -> WRITE_SPIN_COUNT
    io.netty.channel.ChannelOption WRITE_BUFFER_HIGH_WATER_MARK -> WRITE_BUFFER_HIGH_WATER_MARK
    io.netty.channel.ChannelOption WRITE_BUFFER_LOW_WATER_MARK -> WRITE_BUFFER_LOW_WATER_MARK
    io.netty.channel.ChannelOption WRITE_BUFFER_WATER_MARK -> WRITE_BUFFER_WATER_MARK
    io.netty.channel.ChannelOption ALLOW_HALF_CLOSURE -> ALLOW_HALF_CLOSURE
    io.netty.channel.ChannelOption AUTO_READ -> AUTO_READ
    io.netty.channel.ChannelOption AUTO_CLOSE -> AUTO_CLOSE
    io.netty.channel.ChannelOption SO_BROADCAST -> SO_BROADCAST
    io.netty.channel.ChannelOption SO_KEEPALIVE -> SO_KEEPALIVE
    io.netty.channel.ChannelOption SO_SNDBUF -> SO_SNDBUF
    io.netty.channel.ChannelOption SO_RCVBUF -> SO_RCVBUF
    io.netty.channel.ChannelOption SO_REUSEADDR -> SO_REUSEADDR
    io.netty.channel.ChannelOption SO_LINGER -> SO_LINGER
    io.netty.channel.ChannelOption SO_BACKLOG -> SO_BACKLOG
    io.netty.channel.ChannelOption SO_TIMEOUT -> SO_TIMEOUT
    io.netty.channel.ChannelOption IP_TOS -> IP_TOS
    io.netty.channel.ChannelOption IP_MULTICAST_ADDR -> IP_MULTICAST_ADDR
    io.netty.channel.ChannelOption IP_MULTICAST_IF -> IP_MULTICAST_IF
    io.netty.channel.ChannelOption IP_MULTICAST_TTL -> IP_MULTICAST_TTL
    io.netty.channel.ChannelOption IP_MULTICAST_LOOP_DISABLED -> IP_MULTICAST_LOOP_DISABLED
    io.netty.channel.ChannelOption TCP_NODELAY -> TCP_NODELAY
    io.netty.channel.ChannelOption DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION -> DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION
    io.netty.channel.ChannelOption SINGLE_EVENTEXECUTOR_PER_GROUP -> SINGLE_EVENTEXECUTOR_PER_GROUP
    47:47:io.netty.channel.ChannelOption valueOf(java.lang.String) -> valueOf
    55:55:io.netty.channel.ChannelOption valueOf(java.lang.Class,java.lang.String) -> valueOf
    62:62:boolean exists(java.lang.String) -> exists
    71:71:io.netty.channel.ChannelOption newInstance(java.lang.String) -> newInstance
    138:139:void <init>(int,java.lang.String) -> <init>
    143:144:void <init>(java.lang.String) -> <init>
    151:154:void validate(java.lang.Object) -> validate
    33:33:void <init>(int,java.lang.String,io.netty.channel.ChannelOption$1) -> <init>
    35:132:void <clinit>() -> <clinit>
io.netty.channel.ChannelOption$1 -> io.netty.channel.ChannelOption$1:
    35:35:void <init>() -> <init>
    38:38:io.netty.channel.ChannelOption newConstant(int,java.lang.String) -> newConstant
    35:35:io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
io.netty.channel.ChannelOutboundBuffer -> io.netty.channel.ChannelOutboundBuffer:
    int CHANNEL_OUTBOUND_BUFFER_ENTRY_OVERHEAD -> CHANNEL_OUTBOUND_BUFFER_ENTRY_OVERHEAD
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.concurrent.FastThreadLocal NIO_BUFFERS -> NIO_BUFFERS
    io.netty.channel.Channel channel -> channel
    io.netty.channel.ChannelOutboundBuffer$Entry flushedEntry -> flushedEntry
    io.netty.channel.ChannelOutboundBuffer$Entry unflushedEntry -> unflushedEntry
    io.netty.channel.ChannelOutboundBuffer$Entry tailEntry -> tailEntry
    int flushed -> flushed
    int nioBufferCount -> nioBufferCount
    long nioBufferSize -> nioBufferSize
    boolean inFail -> inFail
    java.util.concurrent.atomic.AtomicLongFieldUpdater TOTAL_PENDING_SIZE_UPDATER -> TOTAL_PENDING_SIZE_UPDATER
    long totalPendingSize -> totalPendingSize
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater UNWRITABLE_UPDATER -> UNWRITABLE_UPDATER
    int unwritable -> unwritable
    java.lang.Runnable fireChannelWritabilityChangedTask -> fireChannelWritabilityChangedTask
    boolean $assertionsDisabled -> $assertionsDisabled
    104:106:void <init>(io.netty.channel.AbstractChannel) -> <init>
    113:129:void addMessage(java.lang.Object,int,io.netty.channel.ChannelPromise) -> addMessage
    140:159:void addFlush() -> addFlush
    166:167:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    170:178:void incrementPendingOutboundBytes(long,boolean) -> incrementPendingOutboundBytes
    185:186:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    189:197:void decrementPendingOutboundBytes(long,boolean,boolean) -> decrementPendingOutboundBytes
    200:209:long total(java.lang.Object) -> total
    216:221:java.lang.Object current() -> current
    228:236:void progress(long) -> progress
    244:266:boolean remove() -> remove
    275:275:boolean remove(java.lang.Throwable) -> remove
    279:302:boolean remove0(java.lang.Throwable,boolean) -> remove0
    306:316:void removeEntry(io.netty.channel.ChannelOutboundBuffer$Entry) -> removeEntry
    324:349:void removeBytes(long) -> removeBytes
    354:359:void clearNioBuffers() -> clearNioBuffers
    372:372:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    390:464:java.nio.ByteBuffer[] nioBuffers(int,long) -> nioBuffers
    468:483:java.nio.ByteBuffer[] expandNioBufferArray(java.nio.ByteBuffer[],int,int) -> expandNioBufferArray
    492:492:int nioBufferCount() -> nioBufferCount
    501:501:long nioBufferSize() -> nioBufferSize
    511:511:boolean isWritable() -> isWritable
    519:519:boolean getUserDefinedWritability(int) -> getUserDefinedWritability
    526:531:void setUserDefinedWritability(int,boolean) -> setUserDefinedWritability
    534:545:void setUserDefinedWritability(int) -> setUserDefinedWritability
    548:559:void clearUserDefinedWritability(int) -> clearUserDefinedWritability
    562:565:int writabilityMask(int) -> writabilityMask
    570:579:void setWritable(boolean) -> setWritable
    583:592:void setUnwritable(boolean) -> setUnwritable
    595:610:void fireChannelWritabilityChanged(boolean) -> fireChannelWritabilityChanged
    616:616:int size() -> size
    624:624:boolean isEmpty() -> isEmpty
    633:647:void failFlushed(java.lang.Throwable,boolean) -> failFlushed
    650:688:void close(java.lang.Throwable,boolean) -> close
    691:692:void close(java.nio.channels.ClosedChannelException) -> close
    697:698:void safeSuccess(io.netty.channel.ChannelPromise) -> safeSuccess
    703:704:void safeFail(io.netty.channel.ChannelPromise,java.lang.Throwable) -> safeFail
    709:709:void recycle() -> recycle
    712:712:long totalPendingWriteBytes() -> totalPendingWriteBytes
    720:727:long bytesBeforeUnwritable() -> bytesBeforeUnwritable
    735:742:long bytesBeforeWritable() -> bytesBeforeWritable
    751:768:void forEachFlushedMessage(io.netty.channel.ChannelOutboundBuffer$MessageProcessor) -> forEachFlushedMessage
    771:771:boolean isFlushedEntry(io.netty.channel.ChannelOutboundBuffer$Entry) -> isFlushedEntry
    52:97:void <clinit>() -> <clinit>
io.netty.channel.ChannelOutboundBuffer$1 -> io.netty.channel.ChannelOutboundBuffer$1:
    65:65:void <init>() -> <init>
    68:68:java.nio.ByteBuffer[] initialValue() -> initialValue
    65:65:java.lang.Object initialValue() -> initialValue
io.netty.channel.ChannelOutboundBuffer$2 -> io.netty.channel.ChannelOutboundBuffer$2:
    io.netty.channel.ChannelPipeline val$pipeline -> val$pipeline
    io.netty.channel.ChannelOutboundBuffer this$0 -> this$0
    599:599:void <init>(io.netty.channel.ChannelOutboundBuffer,io.netty.channel.ChannelPipeline) -> <init>
    602:603:void run() -> run
io.netty.channel.ChannelOutboundBuffer$3 -> io.netty.channel.ChannelOutboundBuffer$3:
    java.lang.Throwable val$cause -> val$cause
    boolean val$allowChannelOpen -> val$allowChannelOpen
    io.netty.channel.ChannelOutboundBuffer this$0 -> this$0
    651:651:void <init>(io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable,boolean) -> <init>
    654:655:void run() -> run
io.netty.channel.ChannelOutboundBuffer$Entry -> io.netty.channel.ChannelOutboundBuffer$Entry:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    io.netty.util.Recycler$Handle handle -> handle
    io.netty.channel.ChannelOutboundBuffer$Entry next -> next
    java.lang.Object msg -> msg
    java.nio.ByteBuffer[] bufs -> bufs
    java.nio.ByteBuffer buf -> buf
    io.netty.channel.ChannelPromise promise -> promise
    long progress -> progress
    long total -> total
    int pendingSize -> pendingSize
    int count -> count
    boolean cancelled -> cancelled
    799:804:void <init>(io.netty.util.Recycler$Handle) -> <init>
    807:812:io.netty.channel.ChannelOutboundBuffer$Entry newInstance(java.lang.Object,int,long,io.netty.channel.ChannelPromise) -> newInstance
    816:831:int cancel() -> cancel
    835:846:void recycle() -> recycle
    849:851:io.netty.channel.ChannelOutboundBuffer$Entry recycleAndGetNext() -> recycleAndGetNext
    782:782:void <init>(io.netty.util.Recycler$Handle,io.netty.channel.ChannelOutboundBuffer$1) -> <init>
    783:783:void <clinit>() -> <clinit>
io.netty.channel.ChannelOutboundBuffer$Entry$1 -> io.netty.channel.ChannelOutboundBuffer$Entry$1:
    783:783:void <init>() -> <init>
    786:786:io.netty.channel.ChannelOutboundBuffer$Entry newObject(io.netty.util.Recycler$Handle) -> newObject
    783:783:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.channel.ChannelOutboundBuffer$MessageProcessor -> io.netty.channel.ChannelOutboundBuffer$MessageProcessor:
    boolean processMessage(java.lang.Object) -> processMessage
io.netty.channel.ChannelOutboundHandler -> io.netty.channel.ChannelOutboundHandler:
    void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    void read(io.netty.channel.ChannelHandlerContext) -> read
    void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    void flush(io.netty.channel.ChannelHandlerContext) -> flush
io.netty.channel.ChannelOutboundHandlerAdapter -> io.netty.channel.ChannelOutboundHandlerAdapter:
    24:24:void <init>() -> <init>
    35:36:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    47:48:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    59:60:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    71:72:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    82:83:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    93:94:void read(io.netty.channel.ChannelHandlerContext) -> read
    104:105:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    115:116:void flush(io.netty.channel.ChannelHandlerContext) -> flush
io.netty.channel.ChannelOutboundInvoker -> io.netty.channel.ChannelOutboundInvoker:
    io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    io.netty.channel.ChannelFuture disconnect() -> disconnect
    io.netty.channel.ChannelFuture close() -> close
    io.netty.channel.ChannelFuture deregister() -> deregister
    io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    io.netty.channel.ChannelOutboundInvoker read() -> read
    io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    io.netty.channel.ChannelOutboundInvoker flush() -> flush
    io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    io.netty.channel.ChannelPromise newPromise() -> newPromise
    io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    io.netty.channel.ChannelPromise voidPromise() -> voidPromise
io.netty.channel.ChannelPipeline -> io.netty.channel.ChannelPipeline:
    io.netty.channel.ChannelPipeline addFirst(java.lang.String,io.netty.channel.ChannelHandler) -> addFirst
    io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler) -> addFirst
    io.netty.channel.ChannelPipeline addLast(java.lang.String,io.netty.channel.ChannelHandler) -> addLast
    io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler) -> addLast
    io.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addBefore
    io.netty.channel.ChannelPipeline addBefore(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addBefore
    io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addAfter
    io.netty.channel.ChannelPipeline addAfter(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addAfter
    io.netty.channel.ChannelPipeline addFirst(io.netty.channel.ChannelHandler[]) -> addFirst
    io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup,io.netty.channel.ChannelHandler[]) -> addFirst
    io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[]) -> addLast
    io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup,io.netty.channel.ChannelHandler[]) -> addLast
    io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler) -> remove
    io.netty.channel.ChannelHandler remove(java.lang.String) -> remove
    io.netty.channel.ChannelHandler remove(java.lang.Class) -> remove
    io.netty.channel.ChannelHandler removeFirst() -> removeFirst
    io.netty.channel.ChannelHandler removeLast() -> removeLast
    io.netty.channel.ChannelPipeline replace(io.netty.channel.ChannelHandler,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    io.netty.channel.ChannelHandler replace(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    io.netty.channel.ChannelHandler replace(java.lang.Class,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    io.netty.channel.ChannelHandler first() -> first
    io.netty.channel.ChannelHandlerContext firstContext() -> firstContext
    io.netty.channel.ChannelHandler last() -> last
    io.netty.channel.ChannelHandlerContext lastContext() -> lastContext
    io.netty.channel.ChannelHandler get(java.lang.String) -> get
    io.netty.channel.ChannelHandler get(java.lang.Class) -> get
    io.netty.channel.ChannelHandlerContext context(io.netty.channel.ChannelHandler) -> context
    io.netty.channel.ChannelHandlerContext context(java.lang.String) -> context
    io.netty.channel.ChannelHandlerContext context(java.lang.Class) -> context
    io.netty.channel.Channel channel() -> channel
    java.util.List names() -> names
    java.util.Map toMap() -> toMap
    io.netty.channel.ChannelPipeline fireChannelRegistered() -> fireChannelRegistered
    io.netty.channel.ChannelPipeline fireChannelUnregistered() -> fireChannelUnregistered
    io.netty.channel.ChannelPipeline fireChannelActive() -> fireChannelActive
    io.netty.channel.ChannelPipeline fireChannelInactive() -> fireChannelInactive
    io.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    io.netty.channel.ChannelPipeline fireChannelRead(java.lang.Object) -> fireChannelRead
    io.netty.channel.ChannelPipeline fireChannelReadComplete() -> fireChannelReadComplete
    io.netty.channel.ChannelPipeline fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    io.netty.channel.ChannelPipeline flush() -> flush
io.netty.channel.ChannelPipelineException -> io.netty.channel.ChannelPipelineException:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>() -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.String) -> <init>
    50:51:void <init>(java.lang.Throwable) -> <init>
io.netty.channel.ChannelProgressiveFuture -> io.netty.channel.ChannelProgressiveFuture:
    io.netty.channel.ChannelProgressiveFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    io.netty.channel.ChannelProgressiveFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    io.netty.channel.ChannelProgressiveFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    io.netty.channel.ChannelProgressiveFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    io.netty.channel.ChannelProgressiveFuture sync() -> sync
    io.netty.channel.ChannelProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    io.netty.channel.ChannelProgressiveFuture await() -> await
    io.netty.channel.ChannelProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
io.netty.channel.ChannelProgressiveFutureListener -> io.netty.channel.ChannelProgressiveFutureListener:
io.netty.channel.ChannelProgressivePromise -> io.netty.channel.ChannelProgressivePromise:
    io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    io.netty.channel.ChannelProgressivePromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    io.netty.channel.ChannelProgressivePromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    io.netty.channel.ChannelProgressivePromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    io.netty.channel.ChannelProgressivePromise sync() -> sync
    io.netty.channel.ChannelProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    io.netty.channel.ChannelProgressivePromise await() -> await
    io.netty.channel.ChannelProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    io.netty.channel.ChannelProgressivePromise setSuccess(java.lang.Void) -> setSuccess
    io.netty.channel.ChannelProgressivePromise setSuccess() -> setSuccess
    io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    io.netty.channel.ChannelProgressivePromise setProgress(long,long) -> setProgress
    io.netty.channel.ChannelProgressivePromise unvoid() -> unvoid
io.netty.channel.ChannelPromise -> io.netty.channel.ChannelPromise:
    io.netty.channel.Channel channel() -> channel
    io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    boolean trySuccess() -> trySuccess
    io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    io.netty.channel.ChannelPromise sync() -> sync
    io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    io.netty.channel.ChannelPromise await() -> await
    io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    io.netty.channel.ChannelPromise unvoid() -> unvoid
io.netty.channel.ChannelPromiseAggregator -> io.netty.channel.ChannelPromiseAggregator:
    35:36:void <init>(io.netty.channel.ChannelPromise) -> <init>
io.netty.channel.ChannelPromiseNotifier -> io.netty.channel.ChannelPromiseNotifier:
    33:34:void <init>(io.netty.channel.ChannelPromise[]) -> <init>
    43:44:void <init>(boolean,io.netty.channel.ChannelPromise[]) -> <init>
io.netty.channel.CoalescingBufferQueue -> io.netty.channel.CoalescingBufferQueue:
    io.netty.channel.Channel channel -> channel
    40:41:void <init>(io.netty.channel.Channel) -> <init>
    44:45:void <init>(io.netty.channel.Channel,int) -> <init>
    48:50:void <init>(io.netty.channel.Channel,int,boolean) -> <init>
    63:63:io.netty.buffer.ByteBuf remove(int,io.netty.channel.ChannelPromise) -> remove
    70:71:void releaseAndFailAll(java.lang.Throwable) -> releaseAndFailAll
    75:80:io.netty.buffer.ByteBuf compose(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> compose
    85:85:io.netty.buffer.ByteBuf removeEmptyValue() -> removeEmptyValue
io.netty.channel.CombinedChannelDuplexHandler -> io.netty.channel.CombinedChannelDuplexHandler:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext inboundCtx -> inboundCtx
    io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext outboundCtx -> outboundCtx
    boolean handlerAdded -> handlerAdded
    io.netty.channel.ChannelInboundHandler inboundHandler -> inboundHandler
    io.netty.channel.ChannelOutboundHandler outboundHandler -> outboundHandler
    boolean $assertionsDisabled -> $assertionsDisabled
    48:50:void <init>() -> <init>
    55:58:void <init>(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler) -> <init>
    69:72:void init(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler) -> init
    75:97:void validate(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler) -> validate
    100:100:io.netty.channel.ChannelInboundHandler inboundHandler() -> inboundHandler
    104:104:io.netty.channel.ChannelOutboundHandler outboundHandler() -> outboundHandler
    108:111:void checkAdded() -> checkAdded
    117:119:void removeInboundHandler() -> removeInboundHandler
    125:127:void removeOutboundHandler() -> removeOutboundHandler
    131:178:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    183:187:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    191:197:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    201:207:void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    211:217:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    221:227:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    231:237:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    241:247:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    251:257:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    261:267:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    271:277:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    283:289:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    296:302:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    306:312:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    316:322:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    326:332:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    336:342:void read(io.netty.channel.ChannelHandlerContext) -> read
    346:352:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    356:362:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    31:31:io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext access$000(io.netty.channel.CombinedChannelDuplexHandler) -> access$000
    31:31:io.netty.channel.ChannelOutboundHandler access$100(io.netty.channel.CombinedChannelDuplexHandler) -> access$100
    31:31:io.netty.util.internal.logging.InternalLogger access$200() -> access$200
    31:34:void <clinit>() -> <clinit>
io.netty.channel.CombinedChannelDuplexHandler$1 -> io.netty.channel.CombinedChannelDuplexHandler$1:
    io.netty.channel.CombinedChannelDuplexHandler this$0 -> this$0
    139:139:void <init>(io.netty.channel.CombinedChannelDuplexHandler,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelHandler) -> <init>
    143:165:io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    139:139:io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext -> io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    io.netty.channel.ChannelHandler handler -> handler
    boolean removed -> removed
    370:373:void <init>(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelHandler) -> <init>
    377:377:io.netty.channel.Channel channel() -> channel
    382:382:io.netty.util.concurrent.EventExecutor executor() -> executor
    387:387:java.lang.String name() -> name
    392:392:io.netty.channel.ChannelHandler handler() -> handler
    397:397:boolean isRemoved() -> isRemoved
    402:403:io.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    408:409:io.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    414:415:io.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    420:421:io.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    426:427:io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    432:433:io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    438:439:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    444:445:io.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    450:451:io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    456:456:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    461:461:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    466:466:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    471:471:io.netty.channel.ChannelFuture disconnect() -> disconnect
    476:476:io.netty.channel.ChannelFuture close() -> close
    481:481:io.netty.channel.ChannelFuture deregister() -> deregister
    486:486:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    491:491:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    497:497:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    502:502:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    507:507:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    512:512:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    517:518:io.netty.channel.ChannelHandlerContext read() -> read
    523:523:io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    528:528:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    533:534:io.netty.channel.ChannelHandlerContext flush() -> flush
    539:539:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    544:544:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    549:549:io.netty.channel.ChannelPipeline pipeline() -> pipeline
    554:554:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    559:559:io.netty.channel.ChannelPromise newPromise() -> newPromise
    564:564:io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    569:569:io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    574:574:io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    579:579:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    584:584:io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    589:589:boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
    593:604:void remove() -> remove
    607:616:void remove0() -> remove0
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    364:364:io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    364:364:io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    364:364:io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    364:364:io.netty.channel.ChannelOutboundInvoker flush() -> flush
    364:364:io.netty.channel.ChannelOutboundInvoker read() -> read
    364:364:io.netty.channel.ChannelHandlerContext access$300(io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext) -> access$300
    364:364:void access$400(io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext) -> access$400
io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1 -> io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:
    io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext this$0 -> this$0
    597:597:void <init>(io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext) -> <init>
    600:601:void run() -> run
io.netty.channel.CompleteChannelFuture -> io.netty.channel.CompleteChannelFuture:
    io.netty.channel.Channel channel -> channel
    37:42:void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor) -> <init>
    46:50:io.netty.util.concurrent.EventExecutor executor() -> executor
    56:57:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    62:63:io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    68:69:io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    74:75:io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    80:80:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    85:85:io.netty.channel.ChannelFuture sync() -> sync
    90:90:io.netty.channel.ChannelFuture await() -> await
    95:95:io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    100:100:io.netty.channel.Channel channel() -> channel
    105:105:java.lang.Void getNow() -> getNow
    110:110:boolean isVoid() -> isVoid
    27:27:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    27:27:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    27:27:io.netty.util.concurrent.Future sync() -> sync
    27:27:io.netty.util.concurrent.Future await() -> await
    27:27:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    27:27:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    27:27:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    27:27:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    27:27:java.lang.Object getNow() -> getNow
io.netty.channel.ConnectTimeoutException -> io.netty.channel.ConnectTimeoutException:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>(java.lang.String) -> <init>
    31:32:void <init>() -> <init>
io.netty.channel.DefaultAddressedEnvelope -> io.netty.channel.DefaultAddressedEnvelope:
    java.lang.Object message -> message
    java.net.SocketAddress sender -> sender
    java.net.SocketAddress recipient -> recipient
    41:53:void <init>(java.lang.Object,java.net.SocketAddress,java.net.SocketAddress) -> <init>
    60:61:void <init>(java.lang.Object,java.net.SocketAddress) -> <init>
    65:65:java.lang.Object content() -> content
    70:70:java.net.SocketAddress sender() -> sender
    75:75:java.net.SocketAddress recipient() -> recipient
    80:83:int refCnt() -> refCnt
    89:90:io.netty.channel.AddressedEnvelope retain() -> retain
    95:96:io.netty.channel.AddressedEnvelope retain(int) -> retain
    101:101:boolean release() -> release
    106:106:boolean release(int) -> release
    111:112:io.netty.channel.AddressedEnvelope touch() -> touch
    117:118:io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    123:127:java.lang.String toString() -> toString
    31:31:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:io.netty.util.ReferenceCounted touch() -> touch
    31:31:io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:io.netty.util.ReferenceCounted retain() -> retain
io.netty.channel.DefaultChannelConfig -> io.netty.channel.DefaultChannelConfig:
    io.netty.channel.MessageSizeEstimator DEFAULT_MSG_SIZE_ESTIMATOR -> DEFAULT_MSG_SIZE_ESTIMATOR
    int DEFAULT_CONNECT_TIMEOUT -> DEFAULT_CONNECT_TIMEOUT
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater AUTOREAD_UPDATER -> AUTOREAD_UPDATER
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater WATERMARK_UPDATER -> WATERMARK_UPDATER
    io.netty.channel.Channel channel -> channel
    io.netty.buffer.ByteBufAllocator allocator -> allocator
    io.netty.channel.RecvByteBufAllocator rcvBufAllocator -> rcvBufAllocator
    io.netty.channel.MessageSizeEstimator msgSizeEstimator -> msgSizeEstimator
    int connectTimeoutMillis -> connectTimeoutMillis
    int writeSpinCount -> writeSpinCount
    int autoRead -> autoRead
    boolean autoClose -> autoClose
    io.netty.channel.WriteBufferWaterMark writeBufferWaterMark -> writeBufferWaterMark
    boolean pinEventExecutor -> pinEventExecutor
    69:70:void <init>(io.netty.channel.Channel) -> <init>
    56:75:void <init>(io.netty.channel.Channel,io.netty.channel.RecvByteBufAllocator) -> <init>
    80:80:java.util.Map getOptions() -> getOptions
    90:96:java.util.Map getOptions(java.util.Map,io.netty.channel.ChannelOption[]) -> getOptions
    102:113:boolean setOptions(java.util.Map) -> setOptions
    119:159:java.lang.Object getOption(io.netty.channel.ChannelOption) -> getOption
    165:195:boolean setOption(io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    199:203:void validate(io.netty.channel.ChannelOption,java.lang.Object) -> validate
    207:207:int getConnectTimeoutMillis() -> getConnectTimeoutMillis
    212:217:io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    230:233:int getMaxMessagesPerRead() -> getMaxMessagesPerRead
    248:252:io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    259:259:int getWriteSpinCount() -> getWriteSpinCount
    264:276:io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    281:281:io.netty.buffer.ByteBufAllocator getAllocator() -> getAllocator
    286:290:io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    296:296:io.netty.channel.RecvByteBufAllocator getRecvByteBufAllocator() -> getRecvByteBufAllocator
    301:302:io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    312:318:void setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator,io.netty.channel.ChannelMetadata) -> setRecvByteBufAllocator
    322:322:boolean isAutoRead() -> isAutoRead
    327:333:io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    340:340:void autoReadCleared() -> autoReadCleared
    344:344:boolean isAutoClose() -> isAutoClose
    349:350:io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    355:355:int getWriteBufferHighWaterMark() -> getWriteBufferHighWaterMark
    360:376:io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    381:381:int getWriteBufferLowWaterMark() -> getWriteBufferLowWaterMark
    386:402:io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    407:408:io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    413:413:io.netty.channel.WriteBufferWaterMark getWriteBufferWaterMark() -> getWriteBufferWaterMark
    418:418:io.netty.channel.MessageSizeEstimator getMessageSizeEstimator() -> getMessageSizeEstimator
    423:427:io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    431:432:io.netty.channel.ChannelConfig setPinEventExecutorPerGroup(boolean) -> setPinEventExecutorPerGroup
    436:436:boolean getPinEventExecutorPerGroup() -> getPinEventExecutorPerGroup
    44:51:void <clinit>() -> <clinit>
io.netty.channel.DefaultChannelHandlerContext -> io.netty.channel.DefaultChannelHandlerContext:
    io.netty.channel.ChannelHandler handler -> handler
    26:31:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.util.concurrent.EventExecutor,java.lang.String,io.netty.channel.ChannelHandler) -> <init>
    35:35:io.netty.channel.ChannelHandler handler() -> handler
    39:39:boolean isInbound(io.netty.channel.ChannelHandler) -> isInbound
    43:43:boolean isOutbound(io.netty.channel.ChannelHandler) -> isOutbound
io.netty.channel.DefaultChannelId -> io.netty.channel.DefaultChannelId:
    long serialVersionUID -> serialVersionUID
    io.netty.util.internal.logging.InternalLogger logger -> logger
    byte[] MACHINE_ID -> MACHINE_ID
    int PROCESS_ID_LEN -> PROCESS_ID_LEN
    int PROCESS_ID -> PROCESS_ID
    int SEQUENCE_LEN -> SEQUENCE_LEN
    int TIMESTAMP_LEN -> TIMESTAMP_LEN
    int RANDOM_LEN -> RANDOM_LEN
    java.util.concurrent.atomic.AtomicInteger nextSequence -> nextSequence
    byte[] data -> data
    int hashCode -> hashCode
    java.lang.String shortValue -> shortValue
    java.lang.String longValue -> longValue
    boolean $assertionsDisabled -> $assertionsDisabled
    55:55:io.netty.channel.DefaultChannelId newInstance() -> newInstance
    109:152:int defaultProcessId() -> defaultProcessId
    161:184:void <init>() -> <init>
    187:191:int writeInt(int,int) -> writeInt
    195:203:int writeLong(int,long) -> writeLong
    208:212:java.lang.String asShortText() -> asShortText
    217:221:java.lang.String asLongText() -> asLongText
    225:233:java.lang.String newLongValue() -> newLongValue
    237:240:int appendHexDumpField(java.lang.StringBuilder,int,int) -> appendHexDumpField
    245:245:int hashCode() -> hashCode
    250:272:int compareTo(io.netty.channel.ChannelId) -> compareTo
    277:284:boolean equals(java.lang.Object) -> equals
    289:289:java.lang.String toString() -> toString
    37:37:int compareTo(java.lang.Object) -> compareTo
    37:106:void <clinit>() -> <clinit>
io.netty.channel.DefaultChannelPipeline -> io.netty.channel.DefaultChannelPipeline:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String HEAD_NAME -> HEAD_NAME
    java.lang.String TAIL_NAME -> TAIL_NAME
    io.netty.util.concurrent.FastThreadLocal nameCaches -> nameCaches
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ESTIMATOR -> ESTIMATOR
    io.netty.channel.AbstractChannelHandlerContext head -> head
    io.netty.channel.AbstractChannelHandlerContext tail -> tail
    io.netty.channel.Channel channel -> channel
    io.netty.channel.ChannelFuture succeededFuture -> succeededFuture
    io.netty.channel.VoidChannelPromise voidPromise -> voidPromise
    boolean touch -> touch
    java.util.Map childExecutors -> childExecutors
    io.netty.channel.MessageSizeEstimator$Handle estimatorHandle -> estimatorHandle
    boolean firstRegistration -> firstRegistration
    io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback pendingHandlerCallbackHead -> pendingHandlerCallbackHead
    boolean registered -> registered
    boolean $assertionsDisabled -> $assertionsDisabled
    70:102:void <init>(io.netty.channel.Channel) -> <init>
    105:112:io.netty.channel.MessageSizeEstimator$Handle estimatorHandle() -> estimatorHandle
    116:116:java.lang.Object touch(java.lang.Object,io.netty.channel.AbstractChannelHandlerContext) -> touch
    120:120:io.netty.channel.AbstractChannelHandlerContext newContext(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler) -> newContext
    124:143:io.netty.util.concurrent.EventExecutor childExecutor(io.netty.util.concurrent.EventExecutorGroup) -> childExecutor
    147:147:io.netty.channel.Channel channel() -> channel
    152:152:io.netty.channel.ChannelPipeline addFirst(java.lang.String,io.netty.channel.ChannelHandler) -> addFirst
    158:188:io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler) -> addFirst
    192:197:void addFirst0(io.netty.channel.AbstractChannelHandlerContext) -> addFirst0
    201:201:io.netty.channel.ChannelPipeline addLast(java.lang.String,io.netty.channel.ChannelHandler) -> addLast
    207:236:io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler) -> addLast
    240:245:void addLast0(io.netty.channel.AbstractChannelHandlerContext) -> addLast0
    249:249:io.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addBefore
    257:288:io.netty.channel.ChannelPipeline addBefore(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addBefore
    292:296:void addBefore0(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> addBefore0
    299:303:java.lang.String filterName(java.lang.String,io.netty.channel.ChannelHandler) -> filterName
    308:308:io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addAfter
    317:347:io.netty.channel.ChannelPipeline addAfter(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> addAfter
    351:355:void addAfter0(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> addAfter0
    359:359:io.netty.channel.ChannelPipeline addFirst(io.netty.channel.ChannelHandler[]) -> addFirst
    364:383:io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup,io.netty.channel.ChannelHandler[]) -> addFirst
    388:388:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[]) -> addLast
    393:404:io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup,io.netty.channel.ChannelHandler[]) -> addLast
    408:428:java.lang.String generateName(io.netty.channel.ChannelHandler) -> generateName
    432:432:java.lang.String generateName0(java.lang.Class) -> generateName0
    437:438:io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler) -> remove
    443:443:io.netty.channel.ChannelHandler remove(java.lang.String) -> remove
    449:449:io.netty.channel.ChannelHandler remove(java.lang.Class) -> remove
    453:478:io.netty.channel.AbstractChannelHandlerContext remove(io.netty.channel.AbstractChannelHandlerContext) -> remove
    482:486:void remove0(io.netty.channel.AbstractChannelHandlerContext) -> remove0
    490:493:io.netty.channel.ChannelHandler removeFirst() -> removeFirst
    498:501:io.netty.channel.ChannelHandler removeLast() -> removeLast
    506:507:io.netty.channel.ChannelPipeline replace(io.netty.channel.ChannelHandler,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    512:512:io.netty.channel.ChannelHandler replace(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    519:519:io.netty.channel.ChannelHandler replace(java.lang.Class,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    524:571:io.netty.channel.ChannelHandler replace(io.netty.channel.AbstractChannelHandlerContext,java.lang.String,io.netty.channel.ChannelHandler) -> replace
    575:590:void replace0(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> replace0
    593:602:void checkMultiplicity(io.netty.channel.ChannelHandler) -> checkMultiplicity
    606:634:void callHandlerAdded0(io.netty.channel.AbstractChannelHandlerContext) -> callHandlerAdded0
    640:648:void callHandlerRemoved0(io.netty.channel.AbstractChannelHandlerContext) -> callHandlerRemoved0
    651:658:void invokeHandlerAddedIfNeeded() -> invokeHandlerAddedIfNeeded
    662:666:io.netty.channel.ChannelHandler first() -> first
    671:675:io.netty.channel.ChannelHandlerContext firstContext() -> firstContext
    680:684:io.netty.channel.ChannelHandler last() -> last
    689:693:io.netty.channel.ChannelHandlerContext lastContext() -> lastContext
    698:702:io.netty.channel.ChannelHandler get(java.lang.String) -> get
    709:713:io.netty.channel.ChannelHandler get(java.lang.Class) -> get
    719:723:io.netty.channel.ChannelHandlerContext context(java.lang.String) -> context
    728:743:io.netty.channel.ChannelHandlerContext context(io.netty.channel.ChannelHandler) -> context
    749:761:io.netty.channel.ChannelHandlerContext context(java.lang.Class) -> context
    767:774:java.util.List names() -> names
    780:787:java.util.Map toMap() -> toMap
    793:793:java.util.Iterator iterator() -> iterator
    801:824:java.lang.String toString() -> toString
    829:830:io.netty.channel.ChannelPipeline fireChannelRegistered() -> fireChannelRegistered
    835:836:io.netty.channel.ChannelPipeline fireChannelUnregistered() -> fireChannelUnregistered
    850:851:void destroy() -> destroy
    854:877:void destroyUp(io.netty.channel.AbstractChannelHandlerContext,boolean) -> destroyUp
    881:907:void destroyDown(java.lang.Thread,io.netty.channel.AbstractChannelHandlerContext,boolean) -> destroyDown
    911:912:io.netty.channel.ChannelPipeline fireChannelActive() -> fireChannelActive
    917:918:io.netty.channel.ChannelPipeline fireChannelInactive() -> fireChannelInactive
    923:924:io.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    929:930:io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    935:936:io.netty.channel.ChannelPipeline fireChannelRead(java.lang.Object) -> fireChannelRead
    941:942:io.netty.channel.ChannelPipeline fireChannelReadComplete() -> fireChannelReadComplete
    947:948:io.netty.channel.ChannelPipeline fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    953:953:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    958:958:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    963:963:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    968:968:io.netty.channel.ChannelFuture disconnect() -> disconnect
    973:973:io.netty.channel.ChannelFuture close() -> close
    978:978:io.netty.channel.ChannelFuture deregister() -> deregister
    983:984:io.netty.channel.ChannelPipeline flush() -> flush
    989:989:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    994:994:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    1000:1000:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    1005:1005:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    1010:1010:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    1015:1015:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    1020:1021:io.netty.channel.ChannelPipeline read() -> read
    1026:1026:io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    1031:1031:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    1036:1036:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    1041:1041:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    1046:1046:io.netty.channel.ChannelPromise newPromise() -> newPromise
    1051:1051:io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    1056:1056:io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    1061:1061:io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    1066:1066:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    1070:1073:void checkDuplicateName(java.lang.String) -> checkDuplicateName
    1076:1083:io.netty.channel.AbstractChannelHandlerContext context0(java.lang.String) -> context0
    1087:1091:io.netty.channel.AbstractChannelHandlerContext getContextOrDie(java.lang.String) -> getContextOrDie
    1096:1100:io.netty.channel.AbstractChannelHandlerContext getContextOrDie(io.netty.channel.ChannelHandler) -> getContextOrDie
    1105:1109:io.netty.channel.AbstractChannelHandlerContext getContextOrDie(java.lang.Class) -> getContextOrDie
    1115:1134:void callHandlerAddedForAllHandlers() -> callHandlerAddedForAllHandlers
    1137:1150:void callHandlerCallbackLater(io.netty.channel.AbstractChannelHandlerContext,boolean) -> callHandlerCallbackLater
    1158:1165:void onUnhandledInboundException(java.lang.Throwable) -> onUnhandledInboundException
    1174:1180:void onUnhandledInboundMessage(java.lang.Object) -> onUnhandledInboundMessage
    1184:1188:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    1192:1196:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    46:46:io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    46:46:io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    46:46:io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    46:46:io.netty.channel.ChannelOutboundInvoker flush() -> flush
    46:46:io.netty.channel.ChannelOutboundInvoker read() -> read
    46:46:void access$000(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> access$000
    46:46:void access$100(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> access$100
    46:46:void access$200(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext,boolean) -> access$200
    46:46:void access$300(io.netty.channel.DefaultChannelPipeline,java.lang.Thread,io.netty.channel.AbstractChannelHandlerContext,boolean) -> access$300
    46:46:java.lang.String access$400() -> access$400
    46:46:java.lang.String access$500() -> access$500
    46:46:io.netty.channel.Channel access$600(io.netty.channel.DefaultChannelPipeline) -> access$600
    46:46:void access$700(io.netty.channel.DefaultChannelPipeline) -> access$700
    46:46:void access$800(io.netty.channel.AbstractChannelHandlerContext) -> access$800
    46:62:void <clinit>() -> <clinit>
io.netty.channel.DefaultChannelPipeline$1 -> io.netty.channel.DefaultChannelPipeline$1:
    54:54:void <init>() -> <init>
    57:57:java.util.Map initialValue() -> initialValue
    54:54:java.lang.Object initialValue() -> initialValue
io.netty.channel.DefaultChannelPipeline$2 -> io.netty.channel.DefaultChannelPipeline$2:
    io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    178:178:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    181:182:void run() -> run
io.netty.channel.DefaultChannelPipeline$3 -> io.netty.channel.DefaultChannelPipeline$3:
    io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    226:226:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    229:230:void run() -> run
io.netty.channel.DefaultChannelPipeline$4 -> io.netty.channel.DefaultChannelPipeline$4:
    io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    278:278:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    281:282:void run() -> run
io.netty.channel.DefaultChannelPipeline$5 -> io.netty.channel.DefaultChannelPipeline$5:
    io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    337:337:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    340:341:void run() -> run
io.netty.channel.DefaultChannelPipeline$6 -> io.netty.channel.DefaultChannelPipeline$6:
    io.netty.channel.AbstractChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    468:468:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    471:472:void run() -> run
io.netty.channel.DefaultChannelPipeline$7 -> io.netty.channel.DefaultChannelPipeline$7:
    io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    io.netty.channel.AbstractChannelHandlerContext val$ctx -> val$ctx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    553:553:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    559:561:void run() -> run
io.netty.channel.DefaultChannelPipeline$8 -> io.netty.channel.DefaultChannelPipeline$8:
    io.netty.channel.AbstractChannelHandlerContext val$finalCtx -> val$finalCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    865:865:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    868:869:void run() -> run
io.netty.channel.DefaultChannelPipeline$9 -> io.netty.channel.DefaultChannelPipeline$9:
    io.netty.channel.AbstractChannelHandlerContext val$finalCtx -> val$finalCtx
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    895:895:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    898:899:void run() -> run
io.netty.channel.DefaultChannelPipeline$HeadContext -> io.netty.channel.DefaultChannelPipeline$HeadContext:
    io.netty.channel.Channel$Unsafe unsafe -> unsafe
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1258:1262:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.DefaultChannelPipeline) -> <init>
    1266:1266:io.netty.channel.ChannelHandler handler() -> handler
    1272:1272:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    1277:1277:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    1283:1284:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    1291:1292:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    1296:1297:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    1301:1302:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    1306:1307:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    1311:1312:void read(io.netty.channel.ChannelHandlerContext) -> read
    1316:1317:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    1321:1322:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    1326:1327:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    1331:1333:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    1337:1343:void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    1347:1350:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    1354:1355:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    1359:1360:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    1364:1367:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    1370:1373:void readIfIsAutoRead() -> readIfIsAutoRead
    1377:1378:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    1382:1383:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask -> io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1399:1401:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    1405:1406:void run() -> run
    1410:1426:void execute() -> execute
io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback -> io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback:
    io.netty.channel.AbstractChannelHandlerContext ctx -> ctx
    io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback next -> next
    1390:1392:void <init>(io.netty.channel.AbstractChannelHandlerContext) -> <init>
    void execute() -> execute
io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask -> io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1431:1433:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.AbstractChannelHandlerContext) -> <init>
    1437:1438:void run() -> run
    1442:1458:void execute() -> execute
io.netty.channel.DefaultChannelPipeline$TailContext -> io.netty.channel.DefaultChannelPipeline$TailContext:
    io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1201:1204:void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.channel.DefaultChannelPipeline) -> <init>
    1208:1208:io.netty.channel.ChannelHandler handler() -> handler
    1212:1212:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    1215:1215:void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    1218:1218:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    1221:1221:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    1224:1224:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    1227:1227:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    1230:1230:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    1236:1237:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    1241:1242:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    1246:1247:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    1250:1250:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
io.netty.channel.DefaultChannelProgressivePromise -> io.netty.channel.DefaultChannelProgressivePromise:
    io.netty.channel.Channel channel -> channel
    long checkpoint -> checkpoint
    41:43:void <init>(io.netty.channel.Channel) -> <init>
    52:54:void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor) -> <init>
    58:62:io.netty.util.concurrent.EventExecutor executor() -> executor
    68:68:io.netty.channel.Channel channel() -> channel
    73:73:io.netty.channel.ChannelProgressivePromise setSuccess() -> setSuccess
    78:79:io.netty.channel.ChannelProgressivePromise setSuccess(java.lang.Void) -> setSuccess
    84:84:boolean trySuccess() -> trySuccess
    89:90:io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    95:96:io.netty.channel.ChannelProgressivePromise setProgress(long,long) -> setProgress
    101:102:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    107:108:io.netty.channel.ChannelProgressivePromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    113:114:io.netty.channel.ChannelProgressivePromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    120:121:io.netty.channel.ChannelProgressivePromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    126:127:io.netty.channel.ChannelProgressivePromise sync() -> sync
    132:133:io.netty.channel.ChannelProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    138:139:io.netty.channel.ChannelProgressivePromise await() -> await
    144:145:io.netty.channel.ChannelProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    150:150:long flushCheckpoint() -> flushCheckpoint
    155:156:void flushCheckpoint(long) -> flushCheckpoint
    160:160:io.netty.channel.ChannelProgressivePromise promise() -> promise
    165:168:void checkDeadLock() -> checkDeadLock
    172:172:io.netty.channel.ChannelProgressivePromise unvoid() -> unvoid
    177:177:boolean isVoid() -> isVoid
    29:29:io.netty.util.concurrent.ProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    29:29:io.netty.util.concurrent.ProgressivePromise setSuccess(java.lang.Object) -> setSuccess
    29:29:io.netty.util.concurrent.ProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.util.concurrent.ProgressivePromise await() -> await
    29:29:io.netty.util.concurrent.ProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.util.concurrent.ProgressivePromise sync() -> sync
    29:29:io.netty.util.concurrent.ProgressivePromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.util.concurrent.ProgressivePromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.util.concurrent.ProgressivePromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.util.concurrent.ProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.util.concurrent.ProgressivePromise setProgress(long,long) -> setProgress
    29:29:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.util.concurrent.Promise sync() -> sync
    29:29:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.util.concurrent.Promise await() -> await
    29:29:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    29:29:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    29:29:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.util.concurrent.Future await() -> await
    29:29:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.util.concurrent.Future sync() -> sync
    29:29:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.util.concurrent.ProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.util.concurrent.ProgressiveFuture await() -> await
    29:29:io.netty.util.concurrent.ProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.util.concurrent.ProgressiveFuture sync() -> sync
    29:29:io.netty.util.concurrent.ProgressiveFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.util.concurrent.ProgressiveFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.util.concurrent.ProgressiveFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.util.concurrent.ProgressiveFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.channel.ChannelProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.channel.ChannelProgressiveFuture await() -> await
    29:29:io.netty.channel.ChannelProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.channel.ChannelProgressiveFuture sync() -> sync
    29:29:io.netty.channel.ChannelProgressiveFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.channel.ChannelProgressiveFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.channel.ChannelProgressiveFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.channel.ChannelProgressiveFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.channel.ChannelFuture await() -> await
    29:29:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.channel.ChannelFuture sync() -> sync
    29:29:io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.channel.ChannelPromise unvoid() -> unvoid
    29:29:io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:io.netty.channel.ChannelPromise await() -> await
    29:29:io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    29:29:io.netty.channel.ChannelPromise sync() -> sync
    29:29:io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    29:29:io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    29:29:io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    29:29:io.netty.channel.ChannelPromise promise() -> promise
io.netty.channel.DefaultChannelPromise -> io.netty.channel.DefaultChannelPromise:
    io.netty.channel.Channel channel -> channel
    long checkpoint -> checkpoint
    39:41:void <init>(io.netty.channel.Channel) -> <init>
    50:52:void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor) -> <init>
    56:60:io.netty.util.concurrent.EventExecutor executor() -> executor
    66:66:io.netty.channel.Channel channel() -> channel
    71:71:io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    76:77:io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    82:82:boolean trySuccess() -> trySuccess
    87:88:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    93:94:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    99:100:io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    105:106:io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    111:112:io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    117:118:io.netty.channel.ChannelPromise sync() -> sync
    123:124:io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    129:130:io.netty.channel.ChannelPromise await() -> await
    135:136:io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    141:141:long flushCheckpoint() -> flushCheckpoint
    146:147:void flushCheckpoint(long) -> flushCheckpoint
    151:151:io.netty.channel.ChannelPromise promise() -> promise
    156:159:void checkDeadLock() -> checkDeadLock
    163:163:io.netty.channel.ChannelPromise unvoid() -> unvoid
    168:168:boolean isVoid() -> isVoid
    28:28:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    28:28:io.netty.util.concurrent.Promise sync() -> sync
    28:28:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    28:28:io.netty.util.concurrent.Promise await() -> await
    28:28:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    28:28:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    28:28:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    28:28:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    28:28:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    28:28:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    28:28:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    28:28:io.netty.util.concurrent.Future await() -> await
    28:28:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    28:28:io.netty.util.concurrent.Future sync() -> sync
    28:28:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    28:28:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    28:28:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    28:28:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    28:28:io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    28:28:io.netty.channel.ChannelFuture await() -> await
    28:28:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    28:28:io.netty.channel.ChannelFuture sync() -> sync
    28:28:io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    28:28:io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    28:28:io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    28:28:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
io.netty.channel.DefaultEventLoop -> io.netty.channel.DefaultEventLoop:
    26:27:void <init>() -> <init>
    30:31:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    34:35:void <init>(java.util.concurrent.Executor) -> <init>
    38:39:void <init>(io.netty.channel.EventLoopGroup) -> <init>
    42:43:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.ThreadFactory) -> <init>
    46:47:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.Executor) -> <init>
    52:62:void run() -> run
io.netty.channel.DefaultEventLoopGroup -> io.netty.channel.DefaultEventLoopGroup:
    30:31:void <init>() -> <init>
    39:40:void <init>(int) -> <init>
    49:50:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    59:60:void <init>(int,java.util.concurrent.Executor) -> <init>
    64:64:io.netty.channel.EventLoop newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    24:24:io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
io.netty.channel.DefaultFileRegion -> io.netty.channel.DefaultFileRegion:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.io.File f -> f
    long position -> position
    long count -> count
    long transferred -> transferred
    java.nio.channels.FileChannel file -> file
    51:65:void <init>(java.nio.channels.FileChannel,long,long) -> <init>
    75:88:void <init>(java.io.File,long,long) -> <init>
    94:94:boolean isOpen() -> isOpen
    101:105:void open() -> open
    109:109:long position() -> position
    114:114:long count() -> count
    120:120:long transfered() -> transfered
    125:125:long transferred() -> transferred
    130:149:long transferTo(java.nio.channels.WritableByteChannel,long) -> transferTo
    154:168:void deallocate() -> deallocate
    172:173:io.netty.channel.FileRegion retain() -> retain
    178:179:io.netty.channel.FileRegion retain(int) -> retain
    184:184:io.netty.channel.FileRegion touch() -> touch
    189:189:io.netty.channel.FileRegion touch(java.lang.Object) -> touch
    35:35:io.netty.util.ReferenceCounted touch() -> touch
    35:35:io.netty.util.ReferenceCounted retain(int) -> retain
    35:35:io.netty.util.ReferenceCounted retain() -> retain
    35:35:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    37:37:void <clinit>() -> <clinit>
io.netty.channel.DefaultMaxBytesRecvByteBufAllocator -> io.netty.channel.DefaultMaxBytesRecvByteBufAllocator:
    int maxBytesPerRead -> maxBytesPerRead
    int maxBytesPerIndividualRead -> maxBytesPerIndividualRead
    105:106:void <init>() -> <init>
    108:112:void <init>(int,int) -> <init>
    117:117:io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    122:122:int maxBytesPerRead() -> maxBytesPerRead
    127:142:io.netty.channel.DefaultMaxBytesRecvByteBufAllocator maxBytesPerRead(int) -> maxBytesPerRead
    147:147:int maxBytesPerIndividualRead() -> maxBytesPerIndividualRead
    152:168:io.netty.channel.DefaultMaxBytesRecvByteBufAllocator maxBytesPerIndividualRead(int) -> maxBytesPerIndividualRead
    173:173:java.util.Map$Entry maxBytesPerReadPair() -> maxBytesPerReadPair
    177:189:void checkMaxBytesPerReadPair(int,int) -> checkMaxBytesPerReadPair
    194:201:io.netty.channel.DefaultMaxBytesRecvByteBufAllocator maxBytesPerReadPair(int,int) -> maxBytesPerReadPair
    29:29:io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerReadPair(int,int) -> maxBytesPerReadPair
    29:29:io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerIndividualRead(int) -> maxBytesPerIndividualRead
    29:29:io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerRead(int) -> maxBytesPerRead
io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1 -> io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1:
io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl -> io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl:
    int individualReadMax -> individualReadMax
    int bytesToRead -> bytesToRead
    int lastBytesRead -> lastBytesRead
    int attemptBytesRead -> attemptBytesRead
    io.netty.util.UncheckedBooleanSupplier defaultMaybeMoreSupplier -> defaultMaybeMoreSupplier
    io.netty.channel.DefaultMaxBytesRecvByteBufAllocator this$0 -> this$0
    33:38:void <init>(io.netty.channel.DefaultMaxBytesRecvByteBufAllocator) -> <init>
    47:47:io.netty.buffer.ByteBuf allocate(io.netty.buffer.ByteBufAllocator) -> allocate
    52:52:int guess() -> guess
    57:59:void reset(io.netty.channel.ChannelConfig) -> reset
    63:63:void incMessagesRead(int) -> incMessagesRead
    67:71:void lastBytesRead(int) -> lastBytesRead
    75:75:int lastBytesRead() -> lastBytesRead
    80:80:boolean continueReading() -> continueReading
    86:86:boolean continueReading(io.netty.util.UncheckedBooleanSupplier) -> continueReading
    91:91:void readComplete() -> readComplete
    95:96:void attemptedBytesRead(int) -> attemptedBytesRead
    100:100:int attemptedBytesRead() -> attemptedBytesRead
    33:33:int access$000(io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl) -> access$000
    33:33:int access$100(io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl) -> access$100
    33:33:void <init>(io.netty.channel.DefaultMaxBytesRecvByteBufAllocator,io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1) -> <init>
io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl$1 -> io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl$1:
    io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl this$1 -> this$1
    38:38:void <init>(io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl) -> <init>
    41:41:boolean get() -> get
io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator -> io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator:
    int maxMessagesPerRead -> maxMessagesPerRead
    boolean respectMaybeMoreData -> respectMaybeMoreData
    31:32:void <init>() -> <init>
    28:36:void <init>(int) -> <init>
    40:40:int maxMessagesPerRead() -> maxMessagesPerRead
    45:49:io.netty.channel.MaxMessagesRecvByteBufAllocator maxMessagesPerRead(int) -> maxMessagesPerRead
    65:66:io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    81:81:boolean respectMaybeMoreData() -> respectMaybeMoreData
    26:26:boolean access$000(io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator) -> access$000
io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle -> io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle:
    io.netty.channel.ChannelConfig config -> config
    int maxMessagePerRead -> maxMessagePerRead
    int totalMessages -> totalMessages
    int totalBytesRead -> totalBytesRead
    int attemptedBytesRead -> attemptedBytesRead
    int lastBytesRead -> lastBytesRead
    boolean respectMaybeMoreData -> respectMaybeMoreData
    io.netty.util.UncheckedBooleanSupplier defaultMaybeMoreSupplier -> defaultMaybeMoreSupplier
    io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator this$0 -> this$0
    87:95:void <init>(io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator) -> <init>
    107:110:void reset(io.netty.channel.ChannelConfig) -> reset
    114:114:io.netty.buffer.ByteBuf allocate(io.netty.buffer.ByteBufAllocator) -> allocate
    119:120:void incMessagesRead(int) -> incMessagesRead
    124:128:void lastBytesRead(int) -> lastBytesRead
    132:132:int lastBytesRead() -> lastBytesRead
    137:137:boolean continueReading() -> continueReading
    142:143:boolean continueReading(io.netty.util.UncheckedBooleanSupplier) -> continueReading
    150:150:void readComplete() -> readComplete
    154:154:int attemptedBytesRead() -> attemptedBytesRead
    159:160:void attemptedBytesRead(int) -> attemptedBytesRead
    163:163:int totalBytesRead() -> totalBytesRead
    87:87:int access$100(io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle) -> access$100
    87:87:int access$200(io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle) -> access$200
io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle$1 -> io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle$1:
    io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle this$1 -> this$1
    95:95:void <init>(io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle) -> <init>
    98:98:boolean get() -> get
io.netty.channel.DefaultMessageSizeEstimator -> io.netty.channel.DefaultMessageSizeEstimator:
    io.netty.channel.MessageSizeEstimator DEFAULT -> DEFAULT
    io.netty.channel.MessageSizeEstimator$Handle handle -> handle
    61:66:void <init>(int) -> <init>
    70:70:io.netty.channel.MessageSizeEstimator$Handle newHandle() -> newHandle
    52:52:void <clinit>() -> <clinit>
io.netty.channel.DefaultMessageSizeEstimator$1 -> io.netty.channel.DefaultMessageSizeEstimator$1:
io.netty.channel.DefaultMessageSizeEstimator$HandleImpl -> io.netty.channel.DefaultMessageSizeEstimator$HandleImpl:
    int unknownSize -> unknownSize
    30:32:void <init>(int) -> <init>
    36:45:int size(java.lang.Object) -> size
    27:27:void <init>(int,io.netty.channel.DefaultMessageSizeEstimator$1) -> <init>
io.netty.channel.DefaultSelectStrategy -> io.netty.channel.DefaultSelectStrategy:
    io.netty.channel.SelectStrategy INSTANCE -> INSTANCE
    26:26:void <init>() -> <init>
    30:30:int calculateStrategy(io.netty.util.IntSupplier,boolean) -> calculateStrategy
    24:24:void <clinit>() -> <clinit>
io.netty.channel.DefaultSelectStrategyFactory -> io.netty.channel.DefaultSelectStrategyFactory:
    io.netty.channel.SelectStrategyFactory INSTANCE -> INSTANCE
    24:24:void <init>() -> <init>
    28:28:io.netty.channel.SelectStrategy newSelectStrategy() -> newSelectStrategy
    22:22:void <clinit>() -> <clinit>
io.netty.channel.DelegatingChannelPromiseNotifier -> io.netty.channel.DelegatingChannelPromiseNotifier:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.channel.ChannelPromise delegate -> delegate
    boolean logNotifyFailure -> logNotifyFailure
    39:40:void <init>(io.netty.channel.ChannelPromise) -> <init>
    42:45:void <init>(io.netty.channel.ChannelPromise,boolean) -> <init>
    49:59:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    63:63:io.netty.channel.Channel channel() -> channel
    68:69:io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    74:75:io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    80:80:boolean trySuccess() -> trySuccess
    85:85:boolean trySuccess(java.lang.Void) -> trySuccess
    90:91:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    96:97:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    102:103:io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    108:109:io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    114:115:io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    120:120:boolean tryFailure(java.lang.Throwable) -> tryFailure
    125:125:boolean setUncancellable() -> setUncancellable
    130:131:io.netty.channel.ChannelPromise await() -> await
    136:137:io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    142:142:boolean isVoid() -> isVoid
    147:147:io.netty.channel.ChannelPromise unvoid() -> unvoid
    152:152:boolean await(long,java.util.concurrent.TimeUnit) -> await
    157:157:boolean await(long) -> await
    162:162:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    167:167:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    172:172:java.lang.Void getNow() -> getNow
    177:177:boolean cancel(boolean) -> cancel
    182:182:boolean isCancelled() -> isCancelled
    187:187:boolean isDone() -> isDone
    192:192:java.lang.Void get() -> get
    197:197:java.lang.Void get(long,java.util.concurrent.TimeUnit) -> get
    202:203:io.netty.channel.ChannelPromise sync() -> sync
    208:209:io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    214:214:boolean isSuccess() -> isSuccess
    219:219:boolean isCancellable() -> isCancellable
    224:224:java.lang.Throwable cause() -> cause
    31:31:io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    31:31:io.netty.channel.ChannelFuture await() -> await
    31:31:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    31:31:io.netty.channel.ChannelFuture sync() -> sync
    31:31:io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    31:31:io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    31:31:io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    31:31:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    31:31:java.lang.Object getNow() -> getNow
    31:31:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    31:31:io.netty.util.concurrent.Future await() -> await
    31:31:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    31:31:io.netty.util.concurrent.Future sync() -> sync
    31:31:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    31:31:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    31:31:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    31:31:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    31:31:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    31:31:java.lang.Object get() -> get
    31:31:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    31:31:io.netty.util.concurrent.Promise sync() -> sync
    31:31:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    31:31:io.netty.util.concurrent.Promise await() -> await
    31:31:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    31:31:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    31:31:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    31:31:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    31:31:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    31:31:boolean trySuccess(java.lang.Object) -> trySuccess
    31:31:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    31:31:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
    33:34:void <clinit>() -> <clinit>
io.netty.channel.EventLoop -> io.netty.channel.EventLoop:
    io.netty.channel.EventLoopGroup parent() -> parent
io.netty.channel.EventLoopException -> io.netty.channel.EventLoopException:
    long serialVersionUID -> serialVersionUID
    26:27:void <init>() -> <init>
    30:31:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    34:35:void <init>(java.lang.String) -> <init>
    38:39:void <init>(java.lang.Throwable) -> <init>
io.netty.channel.EventLoopGroup -> io.netty.channel.EventLoopGroup:
    io.netty.channel.EventLoop next() -> next
    io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
io.netty.channel.FailedChannelFuture -> io.netty.channel.FailedChannelFuture:
    java.lang.Throwable cause -> cause
    37:42:void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor,java.lang.Throwable) -> <init>
    46:46:java.lang.Throwable cause() -> cause
    51:51:boolean isSuccess() -> isSuccess
    56:57:io.netty.channel.ChannelFuture sync() -> sync
    62:63:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    26:26:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    26:26:io.netty.util.concurrent.Future sync() -> sync
io.netty.channel.FileRegion -> io.netty.channel.FileRegion:
    long position() -> position
    long transfered() -> transfered
    long transferred() -> transferred
    long count() -> count
    long transferTo(java.nio.channels.WritableByteChannel,long) -> transferTo
    io.netty.channel.FileRegion retain() -> retain
    io.netty.channel.FileRegion retain(int) -> retain
    io.netty.channel.FileRegion touch() -> touch
    io.netty.channel.FileRegion touch(java.lang.Object) -> touch
io.netty.channel.FixedRecvByteBufAllocator -> io.netty.channel.FixedRecvByteBufAllocator:
    int bufferSize -> bufferSize
    43:49:void <init>(int) -> <init>
    54:54:io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    59:60:io.netty.channel.FixedRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    22:22:io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
io.netty.channel.FixedRecvByteBufAllocator$HandleImpl -> io.netty.channel.FixedRecvByteBufAllocator$HandleImpl:
    int bufferSize -> bufferSize
    io.netty.channel.FixedRecvByteBufAllocator this$0 -> this$0
    29:31:void <init>(io.netty.channel.FixedRecvByteBufAllocator,int) -> <init>
    35:35:int guess() -> guess
io.netty.channel.MaxBytesRecvByteBufAllocator -> io.netty.channel.MaxBytesRecvByteBufAllocator:
    int maxBytesPerRead() -> maxBytesPerRead
    io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerRead(int) -> maxBytesPerRead
    int maxBytesPerIndividualRead() -> maxBytesPerIndividualRead
    io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerIndividualRead(int) -> maxBytesPerIndividualRead
    java.util.Map$Entry maxBytesPerReadPair() -> maxBytesPerReadPair
    io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerReadPair(int,int) -> maxBytesPerReadPair
io.netty.channel.MaxMessagesRecvByteBufAllocator -> io.netty.channel.MaxMessagesRecvByteBufAllocator:
    int maxMessagesPerRead() -> maxMessagesPerRead
    io.netty.channel.MaxMessagesRecvByteBufAllocator maxMessagesPerRead(int) -> maxMessagesPerRead
io.netty.channel.MessageSizeEstimator -> io.netty.channel.MessageSizeEstimator:
    io.netty.channel.MessageSizeEstimator$Handle newHandle() -> newHandle
io.netty.channel.MessageSizeEstimator$Handle -> io.netty.channel.MessageSizeEstimator$Handle:
    int size(java.lang.Object) -> size
io.netty.channel.MultithreadEventLoopGroup -> io.netty.channel.MultithreadEventLoopGroup:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    int DEFAULT_EVENT_LOOP_THREADS -> DEFAULT_EVENT_LOOP_THREADS
    52:53:void <init>(int,java.util.concurrent.Executor,java.lang.Object[]) -> <init>
    59:60:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    68:69:void <init>(int,java.util.concurrent.Executor,io.netty.util.concurrent.EventExecutorChooserFactory,java.lang.Object[]) -> <init>
    73:73:java.util.concurrent.ThreadFactory newDefaultThreadFactory() -> newDefaultThreadFactory
    78:78:io.netty.channel.EventLoop next() -> next
    io.netty.channel.EventLoop newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    86:86:io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    91:91:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    97:97:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    33:33:io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    33:33:io.netty.util.concurrent.EventExecutor next() -> next
    35:46:void <clinit>() -> <clinit>
io.netty.channel.PendingBytesTracker -> io.netty.channel.PendingBytesTracker:
    io.netty.channel.MessageSizeEstimator$Handle estimatorHandle -> estimatorHandle
    23:25:void <init>(io.netty.channel.MessageSizeEstimator$Handle) -> <init>
    29:29:int size(java.lang.Object) -> size
    void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    36:44:io.netty.channel.PendingBytesTracker newTracker(io.netty.channel.Channel) -> newTracker
    20:20:void <init>(io.netty.channel.MessageSizeEstimator$Handle,io.netty.channel.PendingBytesTracker$1) -> <init>
io.netty.channel.PendingBytesTracker$1 -> io.netty.channel.PendingBytesTracker$1:
io.netty.channel.PendingBytesTracker$ChannelOutboundBufferPendingBytesTracker -> io.netty.channel.PendingBytesTracker$ChannelOutboundBufferPendingBytesTracker:
    io.netty.channel.ChannelOutboundBuffer buffer -> buffer
    73:75:void <init>(io.netty.channel.ChannelOutboundBuffer,io.netty.channel.MessageSizeEstimator$Handle) -> <init>
    79:80:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    84:85:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
io.netty.channel.PendingBytesTracker$DefaultChannelPipelinePendingBytesTracker -> io.netty.channel.PendingBytesTracker$DefaultChannelPipelinePendingBytesTracker:
    io.netty.channel.DefaultChannelPipeline pipeline -> pipeline
    53:55:void <init>(io.netty.channel.DefaultChannelPipeline) -> <init>
    59:60:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    64:65:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
io.netty.channel.PendingBytesTracker$NoopPendingBytesTracker -> io.netty.channel.PendingBytesTracker$NoopPendingBytesTracker:
    91:92:void <init>(io.netty.channel.MessageSizeEstimator$Handle) -> <init>
    97:97:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    102:102:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
io.netty.channel.PendingWriteQueue -> io.netty.channel.PendingWriteQueue:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    int PENDING_WRITE_OVERHEAD -> PENDING_WRITE_OVERHEAD
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    io.netty.channel.PendingBytesTracker tracker -> tracker
    io.netty.channel.PendingWriteQueue$PendingWrite head -> head
    io.netty.channel.PendingWriteQueue$PendingWrite tail -> tail
    int size -> size
    long bytes -> bytes
    boolean $assertionsDisabled -> $assertionsDisabled
    49:52:void <init>(io.netty.channel.ChannelHandlerContext) -> <init>
    58:59:boolean isEmpty() -> isEmpty
    66:67:int size() -> size
    75:76:long bytes() -> bytes
    82:87:int size(java.lang.Object) -> size
    94:116:void add(java.lang.Object,io.netty.channel.ChannelPromise) -> add
    126:157:io.netty.channel.ChannelFuture removeAndWriteAll() -> removeAndWriteAll
    165:185:void removeAndFailAll(java.lang.Throwable) -> removeAndFailAll
    192:205:void removeAndFail(java.lang.Throwable) -> removeAndFail
    208:209:void assertEmpty() -> assertEmpty
    219:227:io.netty.channel.ChannelFuture removeAndWrite() -> removeAndWrite
    237:245:io.netty.channel.ChannelPromise remove() -> remove
    252:257:java.lang.Object current() -> current
    261:281:void recycle(io.netty.channel.PendingWriteQueue$PendingWrite,boolean) -> recycle
    284:287:void safeFail(io.netty.channel.ChannelPromise,java.lang.Throwable) -> safeFail
    31:38:void <clinit>() -> <clinit>
io.netty.channel.PendingWriteQueue$1 -> io.netty.channel.PendingWriteQueue$1:
io.netty.channel.PendingWriteQueue$PendingWrite -> io.netty.channel.PendingWriteQueue$PendingWrite:
    io.netty.util.Recycler RECYCLER -> RECYCLER
    io.netty.util.Recycler$Handle handle -> handle
    io.netty.channel.PendingWriteQueue$PendingWrite next -> next
    long size -> size
    io.netty.channel.ChannelPromise promise -> promise
    java.lang.Object msg -> msg
    306:308:void <init>(io.netty.util.Recycler$Handle) -> <init>
    311:315:io.netty.channel.PendingWriteQueue$PendingWrite newInstance(java.lang.Object,int,io.netty.channel.ChannelPromise) -> newInstance
    319:324:void recycle() -> recycle
    292:292:io.netty.channel.PendingWriteQueue$PendingWrite access$002(io.netty.channel.PendingWriteQueue$PendingWrite,io.netty.channel.PendingWriteQueue$PendingWrite) -> access$002
    292:292:long access$100(io.netty.channel.PendingWriteQueue$PendingWrite) -> access$100
    292:292:io.netty.channel.PendingWriteQueue$PendingWrite access$000(io.netty.channel.PendingWriteQueue$PendingWrite) -> access$000
    292:292:java.lang.Object access$200(io.netty.channel.PendingWriteQueue$PendingWrite) -> access$200
    292:292:io.netty.channel.ChannelPromise access$300(io.netty.channel.PendingWriteQueue$PendingWrite) -> access$300
    292:292:void access$400(io.netty.channel.PendingWriteQueue$PendingWrite) -> access$400
    292:292:void <init>(io.netty.util.Recycler$Handle,io.netty.channel.PendingWriteQueue$1) -> <init>
    293:293:void <clinit>() -> <clinit>
io.netty.channel.PendingWriteQueue$PendingWrite$1 -> io.netty.channel.PendingWriteQueue$PendingWrite$1:
    293:293:void <init>() -> <init>
    296:296:io.netty.channel.PendingWriteQueue$PendingWrite newObject(io.netty.util.Recycler$Handle) -> newObject
    293:293:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.channel.PreferHeapByteBufAllocator -> io.netty.channel.PreferHeapByteBufAllocator:
    io.netty.buffer.ByteBufAllocator allocator -> allocator
    32:34:void <init>(io.netty.buffer.ByteBufAllocator) -> <init>
    38:38:io.netty.buffer.ByteBuf buffer() -> buffer
    43:43:io.netty.buffer.ByteBuf buffer(int) -> buffer
    48:48:io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    53:53:io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    58:58:io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    63:63:io.netty.buffer.ByteBuf ioBuffer(int,int) -> ioBuffer
    68:68:io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    73:73:io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    78:78:io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    83:83:io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    88:88:io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    93:93:io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    98:98:io.netty.buffer.CompositeByteBuf compositeBuffer() -> compositeBuffer
    103:103:io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    108:108:io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    113:113:io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    118:118:io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    123:123:io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    128:128:boolean isDirectBufferPooled() -> isDirectBufferPooled
    133:133:int calculateNewCapacity(int,int) -> calculateNewCapacity
io.netty.channel.RecvByteBufAllocator -> io.netty.channel.RecvByteBufAllocator:
    io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
io.netty.channel.RecvByteBufAllocator$DelegatingHandle -> io.netty.channel.RecvByteBufAllocator$DelegatingHandle:
    io.netty.channel.RecvByteBufAllocator$Handle delegate -> delegate
    126:128:void <init>(io.netty.channel.RecvByteBufAllocator$Handle) -> <init>
    135:135:io.netty.channel.RecvByteBufAllocator$Handle delegate() -> delegate
    140:140:io.netty.buffer.ByteBuf allocate(io.netty.buffer.ByteBufAllocator) -> allocate
    145:145:int guess() -> guess
    150:151:void reset(io.netty.channel.ChannelConfig) -> reset
    155:156:void incMessagesRead(int) -> incMessagesRead
    160:161:void lastBytesRead(int) -> lastBytesRead
    165:165:int lastBytesRead() -> lastBytesRead
    170:170:boolean continueReading() -> continueReading
    175:175:int attemptedBytesRead() -> attemptedBytesRead
    180:181:void attemptedBytesRead(int) -> attemptedBytesRead
    185:186:void readComplete() -> readComplete
io.netty.channel.RecvByteBufAllocator$ExtendedHandle -> io.netty.channel.RecvByteBufAllocator$ExtendedHandle:
    boolean continueReading(io.netty.util.UncheckedBooleanSupplier) -> continueReading
io.netty.channel.RecvByteBufAllocator$Handle -> io.netty.channel.RecvByteBufAllocator$Handle:
    io.netty.buffer.ByteBuf allocate(io.netty.buffer.ByteBufAllocator) -> allocate
    int guess() -> guess
    void reset(io.netty.channel.ChannelConfig) -> reset
    void incMessagesRead(int) -> incMessagesRead
    void lastBytesRead(int) -> lastBytesRead
    int lastBytesRead() -> lastBytesRead
    void attemptedBytesRead(int) -> attemptedBytesRead
    int attemptedBytesRead() -> attemptedBytesRead
    boolean continueReading() -> continueReading
    void readComplete() -> readComplete
io.netty.channel.ReflectiveChannelFactory -> io.netty.channel.ReflectiveChannelFactory:
    java.lang.Class clazz -> clazz
    28:33:void <init>(java.lang.Class) -> <init>
    38:40:io.netty.channel.Channel newChannel() -> newChannel
    46:46:java.lang.String toString() -> toString
io.netty.channel.SelectStrategy -> io.netty.channel.SelectStrategy:
    int SELECT -> SELECT
    int CONTINUE -> CONTINUE
    int calculateStrategy(io.netty.util.IntSupplier,boolean) -> calculateStrategy
io.netty.channel.SelectStrategyFactory -> io.netty.channel.SelectStrategyFactory:
    io.netty.channel.SelectStrategy newSelectStrategy() -> newSelectStrategy
io.netty.channel.ServerChannel -> io.netty.channel.ServerChannel:
io.netty.channel.SimpleChannelInboundHandler -> io.netty.channel.SimpleChannelInboundHandler:
    io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    boolean autoRelease -> autoRelease
    57:58:void <init>() -> <init>
    66:69:void <init>(boolean) -> <init>
    75:76:void <init>(java.lang.Class) -> <init>
    85:88:void <init>(java.lang.Class,boolean) -> <init>
    95:95:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    100:115:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void channelRead0(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead0
io.netty.channel.SingleThreadEventLoop -> io.netty.channel.SingleThreadEventLoop:
    int DEFAULT_MAX_PENDING_TASKS -> DEFAULT_MAX_PENDING_TASKS
    java.util.Queue tailTasks -> tailTasks
    41:42:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.ThreadFactory,boolean) -> <init>
    45:46:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.Executor,boolean) -> <init>
    51:53:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.ThreadFactory,boolean,int,io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    58:60:void <init>(io.netty.channel.EventLoopGroup,java.util.concurrent.Executor,boolean,int,io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    64:64:io.netty.channel.EventLoopGroup parent() -> parent
    69:69:io.netty.channel.EventLoop next() -> next
    74:74:io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    79:81:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    87:95:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    105:117:void executeAfterEventLoopIteration(java.lang.Runnable) -> executeAfterEventLoopIteration
    128:128:boolean removeAfterEventLoopIterationTask(java.lang.Runnable) -> removeAfterEventLoopIterationTask
    133:133:boolean wakesUpForTask(java.lang.Runnable) -> wakesUpForTask
    138:139:void afterRunningAllTasks() -> afterRunningAllTasks
    143:143:boolean hasTasks() -> hasTasks
    148:148:int pendingTasks() -> pendingTasks
    33:33:io.netty.util.concurrent.EventExecutorGroup parent() -> parent
    33:33:io.netty.util.concurrent.EventExecutor next() -> next
    35:36:void <clinit>() -> <clinit>
io.netty.channel.SingleThreadEventLoop$NonWakeupRunnable -> io.netty.channel.SingleThreadEventLoop$NonWakeupRunnable:
io.netty.channel.SucceededChannelFuture -> io.netty.channel.SucceededChannelFuture:
    33:34:void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor) -> <init>
    38:38:java.lang.Throwable cause() -> cause
    43:43:boolean isSuccess() -> isSuccess
io.netty.channel.ThreadPerChannelEventLoop -> io.netty.channel.ThreadPerChannelEventLoop:
    io.netty.channel.ThreadPerChannelEventLoopGroup parent -> parent
    io.netty.channel.Channel ch -> ch
    29:31:void <init>(io.netty.channel.ThreadPerChannelEventLoopGroup) -> <init>
    35:35:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    50:50:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    65:89:void run() -> run
    92:95:void deregister() -> deregister
    23:23:io.netty.channel.Channel access$002(io.netty.channel.ThreadPerChannelEventLoop,io.netty.channel.Channel) -> access$002
io.netty.channel.ThreadPerChannelEventLoop$1 -> io.netty.channel.ThreadPerChannelEventLoop$1:
    io.netty.channel.ThreadPerChannelEventLoop this$0 -> this$0
    35:35:void <init>(io.netty.channel.ThreadPerChannelEventLoop) -> <init>
    38:43:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    35:35:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.ThreadPerChannelEventLoop$2 -> io.netty.channel.ThreadPerChannelEventLoop$2:
    io.netty.channel.ThreadPerChannelEventLoop this$0 -> this$0
    50:50:void <init>(io.netty.channel.ThreadPerChannelEventLoop) -> <init>
    53:58:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    50:50:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.ThreadPerChannelEventLoopGroup -> io.netty.channel.ThreadPerChannelEventLoopGroup:
    java.lang.Object[] childArgs -> childArgs
    int maxChannels -> maxChannels
    java.util.concurrent.Executor executor -> executor
    java.util.Set activeChildren -> activeChildren
    java.util.Queue idleChildren -> idleChildren
    io.netty.channel.ChannelException tooManyChannels -> tooManyChannels
    boolean shuttingDown -> shuttingDown
    io.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    io.netty.util.concurrent.FutureListener childTerminationListener -> childTerminationListener
    72:73:void <init>() -> <init>
    85:86:void <init>(int) -> <init>
    101:102:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    51:137:void <init>(int,java.util.concurrent.Executor,java.lang.Object[]) -> <init>
    143:143:io.netty.channel.EventLoop newChild(java.lang.Object[]) -> newChild
    148:148:java.util.Iterator iterator() -> iterator
    153:153:io.netty.channel.EventLoop next() -> next
    158:172:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    177:177:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    183:196:void shutdown() -> shutdown
    200:210:boolean isShuttingDown() -> isShuttingDown
    215:225:boolean isShutdown() -> isShutdown
    230:240:boolean isTerminated() -> isTerminated
    246:269:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    274:281:io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    288:291:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    298:305:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    310:323:io.netty.channel.EventLoop nextChild() -> nextChild
    46:46:io.netty.util.concurrent.EventExecutor next() -> next
    46:46:io.netty.util.concurrent.Promise access$000(io.netty.channel.ThreadPerChannelEventLoopGroup) -> access$000
io.netty.channel.ThreadPerChannelEventLoopGroup$1 -> io.netty.channel.ThreadPerChannelEventLoopGroup$1:
    io.netty.channel.ThreadPerChannelEventLoopGroup this$0 -> this$0
    58:58:void <init>(io.netty.channel.ThreadPerChannelEventLoopGroup) -> <init>
    62:65:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.VoidChannelPromise -> io.netty.channel.VoidChannelPromise:
    io.netty.channel.Channel channel -> channel
    boolean fireException -> fireException
    36:42:void <init>(io.netty.channel.Channel,boolean) -> <init>
    46:47:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    52:53:io.netty.channel.VoidChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    59:59:io.netty.channel.VoidChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    65:65:io.netty.channel.VoidChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    70:73:io.netty.channel.VoidChannelPromise await() -> await
    78:79:boolean await(long,java.util.concurrent.TimeUnit) -> await
    84:85:boolean await(long) -> await
    90:91:io.netty.channel.VoidChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    96:97:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    102:103:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    108:108:io.netty.channel.Channel channel() -> channel
    113:113:boolean isDone() -> isDone
    118:118:boolean isSuccess() -> isSuccess
    123:123:boolean setUncancellable() -> setUncancellable
    128:128:boolean isCancellable() -> isCancellable
    133:133:boolean isCancelled() -> isCancelled
    138:138:java.lang.Throwable cause() -> cause
    143:144:io.netty.channel.VoidChannelPromise sync() -> sync
    149:150:io.netty.channel.VoidChannelPromise syncUninterruptibly() -> syncUninterruptibly
    154:155:io.netty.channel.VoidChannelPromise setFailure(java.lang.Throwable) -> setFailure
    160:160:io.netty.channel.VoidChannelPromise setSuccess() -> setSuccess
    165:166:boolean tryFailure(java.lang.Throwable) -> tryFailure
    171:171:boolean cancel(boolean) -> cancel
    176:176:boolean trySuccess() -> trySuccess
    180:180:void fail() -> fail
    185:185:io.netty.channel.VoidChannelPromise setSuccess(java.lang.Void) -> setSuccess
    190:190:boolean trySuccess(java.lang.Void) -> trySuccess
    195:195:java.lang.Void getNow() -> getNow
    200:211:io.netty.channel.ChannelPromise unvoid() -> unvoid
    216:216:boolean isVoid() -> isVoid
    224:227:void fireException(java.lang.Throwable) -> fireException
    25:25:java.lang.Object getNow() -> getNow
    25:25:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    25:25:io.netty.util.concurrent.Future await() -> await
    25:25:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    25:25:io.netty.util.concurrent.Future sync() -> sync
    25:25:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    25:25:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    25:25:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    25:25:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    25:25:io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    25:25:io.netty.channel.ChannelPromise await() -> await
    25:25:io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    25:25:io.netty.channel.ChannelPromise sync() -> sync
    25:25:io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    25:25:io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    25:25:io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    25:25:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    25:25:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    25:25:io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    25:25:io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    25:25:io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    25:25:io.netty.channel.ChannelFuture await() -> await
    25:25:io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    25:25:io.netty.channel.ChannelFuture sync() -> sync
    25:25:io.netty.channel.ChannelFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    25:25:io.netty.channel.ChannelFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    25:25:io.netty.channel.ChannelFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    25:25:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    25:25:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    25:25:io.netty.util.concurrent.Promise sync() -> sync
    25:25:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    25:25:io.netty.util.concurrent.Promise await() -> await
    25:25:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    25:25:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    25:25:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    25:25:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    25:25:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    25:25:boolean trySuccess(java.lang.Object) -> trySuccess
    25:25:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    26:26:void access$000(io.netty.channel.VoidChannelPromise,java.lang.Throwable) -> access$000
io.netty.channel.VoidChannelPromise$1 -> io.netty.channel.VoidChannelPromise$1:
    io.netty.channel.VoidChannelPromise this$0 -> this$0
    202:202:void <init>(io.netty.channel.VoidChannelPromise) -> <init>
    205:208:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    202:202:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.WriteBufferWaterMark -> io.netty.channel.WriteBufferWaterMark:
    int DEFAULT_LOW_WATER_MARK -> DEFAULT_LOW_WATER_MARK
    int DEFAULT_HIGH_WATER_MARK -> DEFAULT_HIGH_WATER_MARK
    io.netty.channel.WriteBufferWaterMark DEFAULT -> DEFAULT
    int low -> low
    int high -> high
    49:50:void <init>(int,int) -> <init>
    55:69:void <init>(int,int,boolean) -> <init>
    75:75:int low() -> low
    82:82:int high() -> high
    87:93:java.lang.String toString() -> toString
    36:36:void <clinit>() -> <clinit>
io.netty.channel.embedded.EmbeddedChannel -> io.netty.channel.a.a:
    java.net.SocketAddress LOCAL_ADDRESS -> b
    java.net.SocketAddress REMOTE_ADDRESS -> c
    io.netty.channel.ChannelHandler[] EMPTY_HANDLERS -> d
    io.netty.util.internal.logging.InternalLogger logger -> e
    io.netty.channel.ChannelMetadata METADATA_NO_DISCONNECT -> f
    io.netty.channel.ChannelMetadata METADATA_DISCONNECT -> g
    io.netty.channel.embedded.EmbeddedEventLoop loop -> h
    io.netty.channel.ChannelFutureListener recordExceptionListener -> i
    io.netty.channel.ChannelMetadata metadata -> j
    io.netty.channel.ChannelConfig config -> k
    java.util.Queue inboundMessages -> l
    java.util.Queue outboundMessages -> m
    java.lang.Throwable lastException -> n
    io.netty.channel.embedded.EmbeddedChannel$State state -> o
    boolean $assertionsDisabled -> a
    83:84:void <init>() -> <init>
    101:102:void <init>(io.netty.channel.ChannelHandler[]) -> <init>
    136:137:void <init>(io.netty.channel.ChannelId,io.netty.channel.ChannelHandler[]) -> <init>
    149:150:void <init>(io.netty.channel.ChannelId,boolean,io.netty.channel.ChannelHandler[]) -> <init>
    63:169:void <init>(io.netty.channel.ChannelId,boolean,boolean,io.netty.channel.ChannelHandler[]) -> <init>
    63:187:void <init>(io.netty.channel.ChannelId,boolean,io.netty.channel.ChannelConfig,io.netty.channel.ChannelHandler[]) -> <init>
    190:190:io.netty.channel.ChannelMetadata metadata(boolean) -> a
    194:212:void setup(boolean,io.netty.channel.ChannelHandler[]) -> a
    228:228:io.netty.channel.DefaultChannelPipeline newChannelPipeline() -> newChannelPipeline
    233:233:io.netty.channel.ChannelMetadata metadata() -> metadata
    238:238:io.netty.channel.ChannelConfig config() -> config
    243:243:boolean isOpen() -> isOpen
    248:248:boolean isActive() -> isActive
    255:258:java.util.Queue inboundMessages() -> a
    273:276:java.util.Queue outboundMessages() -> b
    292:292:java.lang.Object readInbound() -> c
    300:300:java.lang.Object readOutbound() -> d
    311:322:boolean writeInbound(java.lang.Object[]) -> a
    359:364:io.netty.channel.ChannelFuture flushInbound(boolean,io.netty.channel.ChannelPromise) -> a
    374:404:boolean writeOutbound(java.lang.Object[]) -> b
    447:450:void flushOutbound0() -> j
    458:458:boolean finish() -> e
    468:468:boolean finishAndReleaseAll() -> f
    478:485:boolean finish(boolean) -> b
    507:517:boolean releaseAll(java.util.Queue) -> a
    521:526:void finishPendingTasks(boolean) -> c
    530:530:io.netty.channel.ChannelFuture close() -> close
    535:535:io.netty.channel.ChannelFuture disconnect() -> disconnect
    542:547:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    552:554:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    558:558:boolean isNotEmpty(java.util.Queue) -> b
    562:562:java.lang.Object poll(java.util.Queue) -> c
    571:581:void runPendingTasks() -> g
    598:601:void recordException(io.netty.channel.ChannelFuture) -> a
    604:611:void recordException(java.lang.Throwable) -> a
    617:628:io.netty.channel.ChannelFuture checkException(io.netty.channel.ChannelPromise) -> a
    635:636:void checkException() -> h
    643:650:boolean checkOpen(boolean) -> d
    657:660:void ensureOpen() -> i
    664:664:boolean isCompatible(io.netty.channel.EventLoop) -> isCompatible
    669:669:java.net.SocketAddress localAddress0() -> localAddress0
    674:674:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    679:680:void doRegister() -> doRegister
    685:685:void doBind(java.net.SocketAddress) -> doBind
    689:692:void doDisconnect() -> doDisconnect
    696:697:void doClose() -> doClose
    702:702:void doBeginRead() -> doBeginRead
    706:706:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    711:711:io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    717:726:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    734:735:void handleOutboundMessage(java.lang.Object) -> a
    741:742:void handleInboundMessage(java.lang.Object) -> b
    50:50:void access$000(io.netty.channel.embedded.EmbeddedChannel,io.netty.channel.ChannelFuture) -> a
    50:50:void access$200(io.netty.channel.embedded.EmbeddedChannel,java.lang.Throwable) -> a
    50:61:void <clinit>() -> <clinit>
io.netty.channel.embedded.EmbeddedChannel$1 -> io.netty.channel.a.b:
    io.netty.channel.embedded.EmbeddedChannel this$0 -> a
    64:64:void <init>(io.netty.channel.embedded.EmbeddedChannel) -> <init>
    67:68:void operationComplete(io.netty.channel.ChannelFuture) -> a
    64:64:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.embedded.EmbeddedChannel$2 -> io.netty.channel.a.c:
    io.netty.channel.ChannelHandler[] val$handlers -> a
    io.netty.channel.embedded.EmbeddedChannel this$0 -> b
    196:196:void <init>(io.netty.channel.embedded.EmbeddedChannel,io.netty.channel.ChannelHandler[]) -> <init>
    199:206:void initChannel(io.netty.channel.Channel) -> initChannel
io.netty.channel.embedded.EmbeddedChannel$EmbeddedChannelPipeline -> io.netty.channel.a.d:
    io.netty.channel.embedded.EmbeddedChannel this$0 -> a
    842:844:void <init>(io.netty.channel.embedded.EmbeddedChannel,io.netty.channel.embedded.EmbeddedChannel) -> <init>
    848:849:void onUnhandledInboundException(java.lang.Throwable) -> onUnhandledInboundException
    853:854:void onUnhandledInboundMessage(java.lang.Object) -> onUnhandledInboundMessage
io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe -> io.netty.channel.a.e:
    io.netty.channel.Channel$Unsafe wrapped -> a
    io.netty.channel.embedded.EmbeddedChannel this$0 -> b
    744:748:void <init>(io.netty.channel.embedded.EmbeddedChannel) -> <init>
    837:838:void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    744:744:void <init>(io.netty.channel.embedded.EmbeddedChannel,io.netty.channel.embedded.EmbeddedChannel$1) -> <init>
io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe$1 -> io.netty.channel.a.f:
    io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe this$1 -> a
    748:748:void <init>(io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe) -> <init>
    751:751:io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle() -> recvBufAllocHandle
    756:756:java.net.SocketAddress localAddress() -> localAddress
    761:761:java.net.SocketAddress remoteAddress() -> remoteAddress
    766:768:void register(io.netty.channel.EventLoop,io.netty.channel.ChannelPromise) -> register
    772:774:void bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    778:780:void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    784:786:void disconnect(io.netty.channel.ChannelPromise) -> disconnect
    790:792:void close(io.netty.channel.ChannelPromise) -> close
    796:798:void closeForcibly() -> closeForcibly
    802:804:void deregister(io.netty.channel.ChannelPromise) -> deregister
    808:810:void beginRead() -> beginRead
    814:816:void write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    820:822:void flush() -> flush
    826:826:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    831:831:io.netty.channel.ChannelOutboundBuffer outboundBuffer() -> outboundBuffer
io.netty.channel.embedded.EmbeddedChannel$State -> io.netty.channel.a.g:
    io.netty.channel.embedded.EmbeddedChannel$State OPEN -> a
    io.netty.channel.embedded.EmbeddedChannel$State ACTIVE -> b
    io.netty.channel.embedded.EmbeddedChannel$State CLOSED -> c
    io.netty.channel.embedded.EmbeddedChannel$State[] $VALUES -> d
    56:56:io.netty.channel.embedded.EmbeddedChannel$State[] values() -> values
    56:56:io.netty.channel.embedded.EmbeddedChannel$State valueOf(java.lang.String) -> valueOf
    56:56:void <init>(java.lang.String,int) -> <init>
    56:56:void <clinit>() -> <clinit>
io.netty.channel.embedded.EmbeddedChannelId -> io.netty.channel.a.h:
    io.netty.channel.ChannelId INSTANCE -> a
    30:30:void <init>() -> <init>
    34:34:java.lang.String asShortText() -> asShortText
    39:39:java.lang.String asLongText() -> asLongText
    44:48:int compareTo(io.netty.channel.ChannelId) -> a
    53:53:int hashCode() -> hashCode
    58:58:boolean equals(java.lang.Object) -> equals
    63:63:java.lang.String toString() -> toString
    24:24:int compareTo(java.lang.Object) -> compareTo
    28:28:void <clinit>() -> <clinit>
io.netty.channel.embedded.EmbeddedEventLoop -> io.netty.channel.a.i:
    java.util.Queue tasks -> a
    32:34:void <init>() -> <init>
    38:38:io.netty.channel.EventLoopGroup parent() -> parent
    43:43:io.netty.channel.EventLoop next() -> next
    48:52:void execute(java.lang.Runnable) -> execute
    56:63:void runTasks() -> a
    66:74:long runScheduledTasks() -> b
    83:84:void cancelScheduledTasks() -> cancelScheduledTasks
    88:88:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    93:93:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    99:99:void shutdown() -> shutdown
    104:104:boolean isShuttingDown() -> isShuttingDown
    109:109:boolean isShutdown() -> isShutdown
    114:114:boolean isTerminated() -> isTerminated
    119:119:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    124:124:io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    129:131:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    137:138:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    143:143:boolean inEventLoop() -> inEventLoop
    148:148:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    32:32:io.netty.util.concurrent.EventExecutor next() -> next
    32:32:io.netty.util.concurrent.EventExecutorGroup parent() -> parent
io.netty.channel.embedded.EmbeddedSocketAddress -> io.netty.channel.a.j:
    20:20:void <init>() -> <init>
    25:25:java.lang.String toString() -> toString
io.netty.channel.group.ChannelGroup -> io.netty.channel.b.a:
    java.lang.String name() -> a
    io.netty.channel.group.ChannelGroupFuture close() -> b
io.netty.channel.group.ChannelGroupException -> io.netty.channel.b.b:
    java.util.Collection failed -> a
    34:42:void <init>(java.util.Collection) -> <init>
    50:50:java.util.Iterator iterator() -> iterator
io.netty.channel.group.ChannelGroupFuture -> io.netty.channel.b.c:
    io.netty.channel.group.ChannelGroupException cause() -> a
    io.netty.channel.group.ChannelGroupFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> a
io.netty.channel.group.ChannelMatcher -> io.netty.channel.b.d:
    boolean matches(io.netty.channel.Channel) -> a
io.netty.channel.group.ChannelMatchers -> io.netty.channel.b.e:
    io.netty.channel.group.ChannelMatcher ALL_MATCHER -> a
    io.netty.channel.group.ChannelMatcher SERVER_CHANNEL_MATCHER -> b
    io.netty.channel.group.ChannelMatcher NON_SERVER_CHANNEL_MATCHER -> c
    44:44:io.netty.channel.group.ChannelMatcher all() -> a
    66:66:io.netty.channel.group.ChannelMatcher isInstanceOf(java.lang.Class) -> a
    74:74:io.netty.channel.group.ChannelMatcher isNotInstanceOf(java.lang.Class) -> b
    96:96:io.netty.channel.group.ChannelMatcher invert(io.netty.channel.group.ChannelMatcher) -> a
    26:34:void <clinit>() -> <clinit>
io.netty.channel.group.ChannelMatchers$1 -> io.netty.channel.b.f:
    26:26:void <init>() -> <init>
    29:29:boolean matches(io.netty.channel.Channel) -> a
io.netty.channel.group.ChannelMatchers$ClassMatcher -> io.netty.channel.b.g:
    java.lang.Class clazz -> a
    160:162:void <init>(java.lang.Class) -> <init>
    166:166:boolean matches(io.netty.channel.Channel) -> a
io.netty.channel.group.ChannelMatchers$InvertMatcher -> io.netty.channel.b.h:
    io.netty.channel.group.ChannelMatcher matcher -> a
    134:136:void <init>(io.netty.channel.group.ChannelMatcher) -> <init>
    140:140:boolean matches(io.netty.channel.Channel) -> a
io.netty.channel.group.CombinedIterator -> io.netty.channel.b.i:
    java.util.Iterator i1 -> a
    java.util.Iterator i2 -> b
    java.util.Iterator currentIterator -> c
    29:39:void <init>(java.util.Iterator,java.util.Iterator) -> <init>
    44:51:boolean hasNext() -> hasNext
    60:67:java.lang.Object next() -> next
    73:74:void remove() -> remove
io.netty.channel.group.DefaultChannelGroup -> io.netty.channel.b.j:
    java.util.concurrent.atomic.AtomicInteger nextId -> a
    java.lang.String name -> b
    io.netty.util.concurrent.EventExecutor executor -> c
    java.util.concurrent.ConcurrentMap serverChannels -> d
    java.util.concurrent.ConcurrentMap nonServerChannels -> e
    io.netty.channel.ChannelFutureListener remover -> f
    io.netty.channel.group.VoidChannelGroupFuture voidFuture -> g
    boolean stayClosed -> h
    boolean closed -> i
    73:74:void <init>(java.lang.String,io.netty.util.concurrent.EventExecutor) -> <init>
    47:100:void <init>(java.lang.String,io.netty.util.concurrent.EventExecutor,boolean) -> <init>
    104:104:java.lang.String name() -> a
    119:119:boolean isEmpty() -> isEmpty
    124:124:int size() -> size
    129:137:boolean contains(java.lang.Object) -> contains
    143:167:boolean add(io.netty.channel.Channel) -> a
    172:192:boolean remove(java.lang.Object) -> remove
    197:199:void clear() -> clear
    203:205:java.util.Iterator iterator() -> iterator
    210:213:java.lang.Object[] toArray() -> toArray
    218:221:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    226:226:io.netty.channel.group.ChannelGroupFuture close() -> b
    331:359:io.netty.channel.group.ChannelGroupFuture close(io.netty.channel.group.ChannelMatcher) -> a
    458:458:int hashCode() -> hashCode
    463:463:boolean equals(java.lang.Object) -> equals
    468:473:int compareTo(io.netty.channel.group.ChannelGroup) -> a
    478:478:java.lang.String toString() -> toString
    42:42:boolean add(java.lang.Object) -> add
    42:42:int compareTo(java.lang.Object) -> compareTo
    44:44:void <clinit>() -> <clinit>
io.netty.channel.group.DefaultChannelGroup$1 -> io.netty.channel.b.k:
    io.netty.channel.group.DefaultChannelGroup this$0 -> a
    49:49:void <init>(io.netty.channel.group.DefaultChannelGroup) -> <init>
    52:53:void operationComplete(io.netty.channel.ChannelFuture) -> a
    49:49:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.group.DefaultChannelGroupFuture -> io.netty.channel.b.l:
    io.netty.channel.group.ChannelGroup group -> a
    java.util.Map futures -> b
    int successCount -> c
    int failureCount -> d
    io.netty.channel.ChannelFutureListener childListener -> e
    47:123:void <init>(io.netty.channel.group.ChannelGroup,java.util.Map,io.netty.util.concurrent.EventExecutor) -> <init>
    137:137:java.util.Iterator iterator() -> iterator
    152:153:io.netty.channel.group.DefaultChannelGroupFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> b
    158:159:io.netty.channel.group.DefaultChannelGroupFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> a
    164:165:io.netty.channel.group.DefaultChannelGroupFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> c
    171:172:io.netty.channel.group.DefaultChannelGroupFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> b
    177:178:io.netty.channel.group.DefaultChannelGroupFuture await() -> b
    183:184:io.netty.channel.group.DefaultChannelGroupFuture awaitUninterruptibly() -> c
    189:190:io.netty.channel.group.DefaultChannelGroupFuture syncUninterruptibly() -> d
    195:196:io.netty.channel.group.DefaultChannelGroupFuture sync() -> e
    201:201:io.netty.channel.group.ChannelGroupException cause() -> a
    205:206:void setSuccess0() -> f
    209:210:void setFailure0(io.netty.channel.group.ChannelGroupException) -> a
    214:214:io.netty.channel.group.DefaultChannelGroupFuture setSuccess(java.lang.Void) -> a
    219:219:boolean trySuccess(java.lang.Void) -> b
    224:224:io.netty.channel.group.DefaultChannelGroupFuture setFailure(java.lang.Throwable) -> a
    229:229:boolean tryFailure(java.lang.Throwable) -> tryFailure
    234:238:void checkDeadLock() -> checkDeadLock
    40:40:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    40:40:io.netty.util.concurrent.Promise sync() -> sync
    40:40:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    40:40:io.netty.util.concurrent.Promise await() -> await
    40:40:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    40:40:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    40:40:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    40:40:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    40:40:java.lang.Throwable cause() -> cause
    40:40:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    40:40:boolean trySuccess(java.lang.Object) -> trySuccess
    40:40:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    40:40:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    40:40:io.netty.util.concurrent.Future await() -> await
    40:40:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    40:40:io.netty.util.concurrent.Future sync() -> sync
    40:40:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    40:40:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    40:40:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    40:40:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    40:40:io.netty.channel.group.ChannelGroupFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> a
    40:40:int access$008(io.netty.channel.group.DefaultChannelGroupFuture) -> a
    40:40:int access$108(io.netty.channel.group.DefaultChannelGroupFuture) -> b
    40:40:int access$000(io.netty.channel.group.DefaultChannelGroupFuture) -> c
    40:40:int access$100(io.netty.channel.group.DefaultChannelGroupFuture) -> d
    40:40:java.util.Map access$200(io.netty.channel.group.DefaultChannelGroupFuture) -> e
    40:40:void access$300(io.netty.channel.group.DefaultChannelGroupFuture,io.netty.channel.group.ChannelGroupException) -> a
    40:40:void access$400(io.netty.channel.group.DefaultChannelGroupFuture) -> f
io.netty.channel.group.DefaultChannelGroupFuture$1 -> io.netty.channel.b.m:
    boolean $assertionsDisabled -> a
    io.netty.channel.group.DefaultChannelGroupFuture this$0 -> b
    47:47:void <init>(io.netty.channel.group.DefaultChannelGroupFuture) -> <init>
    50:77:void operationComplete(io.netty.channel.ChannelFuture) -> a
    47:47:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
    47:47:void <clinit>() -> <clinit>
io.netty.channel.group.DefaultChannelGroupFuture$DefaultEntry -> io.netty.channel.b.n:
    java.lang.Object key -> a
    java.lang.Object value -> b
    244:247:void <init>(java.lang.Object,java.lang.Object) -> <init>
    251:251:java.lang.Object getKey() -> getKey
    256:256:java.lang.Object getValue() -> getValue
    261:261:java.lang.Object setValue(java.lang.Object) -> setValue
io.netty.channel.group.VoidChannelGroupFuture -> io.netty.channel.b.o:
    java.util.Iterator EMPTY -> a
    io.netty.channel.group.ChannelGroup group -> b
    32:34:void <init>(io.netty.channel.group.ChannelGroup) -> <init>
    48:48:boolean isSuccess() -> isSuccess
    53:53:io.netty.channel.group.ChannelGroupException cause() -> a
    68:68:io.netty.channel.group.ChannelGroupFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> a
    88:88:io.netty.channel.group.ChannelGroupFuture await() -> b
    98:98:io.netty.channel.group.ChannelGroupFuture syncUninterruptibly() -> c
    108:108:java.util.Iterator iterator() -> iterator
    113:113:boolean isCancellable() -> isCancellable
    118:118:boolean await(long,java.util.concurrent.TimeUnit) -> await
    123:123:boolean await(long) -> await
    128:128:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    133:133:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    138:138:java.lang.Void getNow() -> d
    143:143:boolean cancel(boolean) -> cancel
    148:148:boolean isCancelled() -> isCancelled
    153:153:boolean isDone() -> isDone
    158:158:java.lang.Void get() -> e
    163:163:java.lang.Void get(long,java.util.concurrent.TimeUnit) -> a
    167:167:java.lang.RuntimeException reject() -> f
    27:27:java.lang.Object getNow() -> getNow
    27:27:io.netty.util.concurrent.Future await() -> await
    27:27:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    27:27:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    27:27:java.lang.Throwable cause() -> cause
    27:27:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    27:27:java.lang.Object get() -> get
    29:29:void <clinit>() -> <clinit>
io.netty.channel.nio.AbstractNioByteChannel -> io.netty.channel.nio.AbstractNioByteChannel:
    io.netty.channel.ChannelMetadata METADATA -> METADATA
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    java.lang.Runnable flushTask -> flushTask
    58:59:void <init>(io.netty.channel.Channel,java.nio.channels.SelectableChannel) -> <init>
    io.netty.channel.ChannelFuture shutdownInput() -> shutdownInput
    67:67:boolean isInputShutdown0() -> isInputShutdown0
    72:72:io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe() -> newUnsafe
    77:77:io.netty.channel.ChannelMetadata metadata() -> metadata
    182:187:int doWrite0(io.netty.channel.ChannelOutboundBuffer) -> doWrite0
    191:225:int doWriteInternal(io.netty.channel.ChannelOutboundBuffer,java.lang.Object) -> doWriteInternal
    230:243:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    247:261:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    266:281:void incompleteWrite(boolean) -> incompleteWrite
    long doWriteFileRegion(io.netty.channel.FileRegion) -> doWriteFileRegion
    int doReadBytes(io.netty.buffer.ByteBuf) -> doReadBytes
    int doWriteBytes(io.netty.buffer.ByteBuf) -> doWriteBytes
    304:315:void setOpWrite() -> setOpWrite
    318:329:void clearOpWrite() -> clearOpWrite
    43:43:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    44:47:void <clinit>() -> <clinit>
io.netty.channel.nio.AbstractNioByteChannel$1 -> io.netty.channel.nio.AbstractNioByteChannel$1:
    io.netty.channel.nio.AbstractNioByteChannel this$0 -> this$0
    272:272:void <init>(io.netty.channel.nio.AbstractNioByteChannel) -> <init>
    275:276:void run() -> run
io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe -> io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe:
    io.netty.channel.nio.AbstractNioByteChannel this$0 -> this$0
    80:80:void <init>(io.netty.channel.nio.AbstractNioByteChannel) -> <init>
    83:93:void closeOnRead(io.netty.channel.ChannelPipeline) -> closeOnRead
    97:111:void handleReadException(io.netty.channel.ChannelPipeline,io.netty.buffer.ByteBuf,java.lang.Throwable,boolean,io.netty.channel.RecvByteBufAllocator$Handle) -> handleReadException
    115:164:void read() -> read
io.netty.channel.nio.AbstractNioChannel -> io.netty.channel.nio.AbstractNioChannel:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    java.nio.channels.ClosedChannelException DO_CLOSE_CLOSED_CHANNEL_EXCEPTION -> DO_CLOSE_CLOSED_CHANNEL_EXCEPTION
    java.nio.channels.SelectableChannel ch -> ch
    int readInterestOp -> readInterestOp
    java.nio.channels.SelectionKey selectionKey -> selectionKey
    boolean readPending -> readPending
    java.lang.Runnable clearReadPendingRunnable -> clearReadPendingRunnable
    io.netty.channel.ChannelPromise connectPromise -> connectPromise
    java.util.concurrent.ScheduledFuture connectTimeoutFuture -> connectTimeoutFuture
    java.net.SocketAddress requestedRemoteAddress -> requestedRemoteAddress
    boolean $assertionsDisabled -> $assertionsDisabled
    61:101:void <init>(io.netty.channel.Channel,java.nio.channels.SelectableChannel,int) -> <init>
    105:105:boolean isOpen() -> isOpen
    110:110:io.netty.channel.nio.AbstractNioChannel$NioUnsafe unsafe() -> unsafe
    114:114:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    119:119:io.netty.channel.nio.NioEventLoop eventLoop() -> eventLoop
    126:127:java.nio.channels.SelectionKey selectionKey() -> selectionKey
    136:136:boolean isReadPending() -> isReadPending
    145:163:void setReadPending(boolean) -> setReadPending
    169:182:void clearReadPending() -> clearReadPending
    185:189:void setReadPending0(boolean) -> setReadPending0
    192:194:void clearReadPending0() -> clearReadPending0
    379:379:boolean isCompatible(io.netty.channel.EventLoop) -> isCompatible
    384:400:void doRegister() -> doRegister
    406:407:void doDeregister() -> doDeregister
    412:423:void doBeginRead() -> doBeginRead
    boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    void doFinishConnect() -> doFinishConnect
    441:463:io.netty.buffer.ByteBuf newDirectBuffer(io.netty.buffer.ByteBuf) -> newDirectBuffer
    473:501:io.netty.buffer.ByteBuf newDirectBuffer(io.netty.util.ReferenceCounted,io.netty.buffer.ByteBuf) -> newDirectBuffer
    506:518:void doClose() -> doClose
    49:49:io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    49:49:io.netty.channel.EventLoop eventLoop() -> eventLoop
    49:49:void access$000(io.netty.channel.nio.AbstractNioChannel) -> access$000
    49:49:void access$100(io.netty.channel.nio.AbstractNioChannel,boolean) -> access$100
    49:49:io.netty.channel.ChannelPromise access$200(io.netty.channel.nio.AbstractNioChannel) -> access$200
    49:49:io.netty.channel.ChannelPromise access$202(io.netty.channel.nio.AbstractNioChannel,io.netty.channel.ChannelPromise) -> access$202
    49:49:java.net.SocketAddress access$302(io.netty.channel.nio.AbstractNioChannel,java.net.SocketAddress) -> access$302
    49:49:java.util.concurrent.ScheduledFuture access$402(io.netty.channel.nio.AbstractNioChannel,java.util.concurrent.ScheduledFuture) -> access$402
    49:49:java.util.concurrent.ScheduledFuture access$400(io.netty.channel.nio.AbstractNioChannel) -> access$400
    49:49:java.net.SocketAddress access$300(io.netty.channel.nio.AbstractNioChannel) -> access$300
    49:54:void <clinit>() -> <clinit>
io.netty.channel.nio.AbstractNioChannel$1 -> io.netty.channel.nio.AbstractNioChannel$1:
    io.netty.channel.nio.AbstractNioChannel this$0 -> this$0
    61:61:void <init>(io.netty.channel.nio.AbstractNioChannel) -> <init>
    64:65:void run() -> run
io.netty.channel.nio.AbstractNioChannel$2 -> io.netty.channel.nio.AbstractNioChannel$2:
    boolean val$readPending -> val$readPending
    io.netty.channel.nio.AbstractNioChannel this$0 -> this$0
    150:150:void <init>(io.netty.channel.nio.AbstractNioChannel,boolean) -> <init>
    153:154:void run() -> run
io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe -> io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe:
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.channel.nio.AbstractNioChannel this$0 -> this$0
    218:218:void <init>(io.netty.channel.nio.AbstractNioChannel) -> <init>
    221:233:void removeReadOp() -> removeReadOp
    237:237:java.nio.channels.SelectableChannel ch() -> ch
    243:293:void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    296:318:void fulfillConnectPromise(io.netty.channel.ChannelPromise,boolean) -> fulfillConnectPromise
    321:329:void fulfillConnectPromise(io.netty.channel.ChannelPromise,java.lang.Throwable) -> fulfillConnectPromise
    336:352:void finishConnect() -> finishConnect
    359:363:void flush0() -> flush0
    368:369:void forceFlush() -> forceFlush
    372:373:boolean isFlushPending() -> isFlushPending
    218:218:void <clinit>() -> <clinit>
io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1 -> io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1:
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe this$1 -> this$1
    263:263:void <init>(io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe,java.net.SocketAddress) -> <init>
    266:272:void run() -> run
io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2 -> io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2:
    io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe this$1 -> this$1
    276:276:void <init>(io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe) -> <init>
    279:286:void operationComplete(io.netty.channel.ChannelFuture) -> operationComplete
    276:276:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.channel.nio.AbstractNioChannel$NioUnsafe -> io.netty.channel.nio.a:
    void finishConnect() -> finishConnect
    void read() -> read
    void forceFlush() -> forceFlush
io.netty.channel.nio.AbstractNioMessageChannel -> io.netty.channel.nio.AbstractNioMessageChannel:
    boolean inputShutdown -> inputShutdown
    42:43:void <init>(io.netty.channel.Channel,java.nio.channels.SelectableChannel,int) -> <init>
    47:47:io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe() -> newUnsafe
    52:56:void doBeginRead() -> doBeginRead
    127:165:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    171:171:boolean continueOnWriteError() -> continueOnWriteError
    177:177:boolean closeOnReadError(java.lang.Throwable) -> closeOnReadError
    int doReadMessages(java.util.List) -> doReadMessages
    boolean doWriteMessage(java.lang.Object,io.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    35:35:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
io.netty.channel.nio.AbstractNioMessageChannel$1 -> io.netty.channel.nio.b:
io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe -> io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe:
    java.util.List readBuf -> readBuf
    boolean $assertionsDisabled -> $assertionsDisabled
    io.netty.channel.nio.AbstractNioMessageChannel this$0 -> this$0
    58:60:void <init>(io.netty.channel.nio.AbstractNioMessageChannel) -> <init>
    64:122:void read() -> read
    58:58:void <init>(io.netty.channel.nio.AbstractNioMessageChannel,io.netty.channel.nio.AbstractNioMessageChannel$1) -> <init>
    58:58:void <clinit>() -> <clinit>
io.netty.channel.nio.NioEventLoop -> io.netty.channel.nio.NioEventLoop:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    int CLEANUP_INTERVAL -> CLEANUP_INTERVAL
    boolean DISABLE_KEYSET_OPTIMIZATION -> DISABLE_KEYSET_OPTIMIZATION
    int MIN_PREMATURE_SELECTOR_RETURNS -> MIN_PREMATURE_SELECTOR_RETURNS
    int SELECTOR_AUTO_REBUILD_THRESHOLD -> SELECTOR_AUTO_REBUILD_THRESHOLD
    io.netty.util.IntSupplier selectNowSupplier -> selectNowSupplier
    java.util.concurrent.Callable pendingTasksCallable -> pendingTasksCallable
    java.nio.channels.Selector selector -> selector
    java.nio.channels.Selector unwrappedSelector -> unwrappedSelector
    io.netty.channel.nio.SelectedSelectionKeySet selectedKeys -> selectedKeys
    java.nio.channels.spi.SelectorProvider provider -> provider
    java.util.concurrent.atomic.AtomicBoolean wakenUp -> wakenUp
    io.netty.channel.SelectStrategy selectStrategy -> selectStrategy
    int ioRatio -> ioRatio
    int cancelledKeys -> cancelledKeys
    boolean needsToSelectAgain -> needsToSelectAgain
    68:153:void <init>(io.netty.channel.nio.NioEventLoopGroup,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider,io.netty.channel.SelectStrategy,io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    173:245:io.netty.channel.nio.NioEventLoop$SelectorTuple openSelector() -> openSelector
    253:253:java.nio.channels.spi.SelectorProvider selectorProvider() -> selectorProvider
    259:260:java.util.Queue newTaskQueue(int) -> newTaskQueue
    268:271:int pendingTasks() -> pendingTasks
    281:304:void register(java.nio.channels.SelectableChannel,int,io.netty.channel.nio.NioTask) -> register
    310:310:int getIoRatio() -> getIoRatio
    318:322:void setIoRatio(int) -> setIoRatio
    329:339:void rebuildSelector() -> rebuildSelector
    342:399:void rebuildSelector0() -> rebuildSelector0
    405:479:void run() -> run
    484:493:void handleLoopException(java.lang.Throwable) -> handleLoopException
    496:501:void processSelectedKeys() -> processSelectedKeys
    506:510:void cleanup() -> cleanup
    513:519:void cancel(java.nio.channels.SelectionKey) -> cancel
    523:527:java.lang.Runnable pollTask() -> pollTask
    534:568:void processSelectedKeysPlain(java.util.Set) -> processSelectedKeysPlain
    571:596:void processSelectedKeysOptimized() -> processSelectedKeysOptimized
    599:650:void processSelectedKey(java.nio.channels.SelectionKey,io.netty.channel.nio.AbstractNioChannel) -> processSelectedKey
    653:674:void processSelectedKey(java.nio.channels.SelectionKey,io.netty.channel.nio.NioTask) -> processSelectedKey
    677:695:void closeAll() -> closeAll
    699:703:void invokeChannelUnregistered(io.netty.channel.nio.NioTask,java.nio.channels.SelectionKey,java.lang.Throwable) -> invokeChannelUnregistered
    707:710:void wakeup(boolean) -> wakeup
    713:713:java.nio.channels.Selector unwrappedSelector() -> unwrappedSelector
    718:722:int selectNow() -> selectNow
    728:815:void select(boolean) -> select
    818:824:void selectAgain() -> selectAgain
    56:56:int access$001(io.netty.channel.nio.NioEventLoop) -> access$001
    56:56:void access$100(io.netty.channel.nio.NioEventLoop) -> access$100
    58:114:void <clinit>() -> <clinit>
io.netty.channel.nio.NioEventLoop$1 -> io.netty.channel.nio.NioEventLoop$1:
    io.netty.channel.nio.NioEventLoop this$0 -> this$0
    68:68:void <init>(io.netty.channel.nio.NioEventLoop) -> <init>
    71:71:int get() -> get
io.netty.channel.nio.NioEventLoop$2 -> io.netty.channel.nio.NioEventLoop$2:
    io.netty.channel.nio.NioEventLoop this$0 -> this$0
    74:74:void <init>(io.netty.channel.nio.NioEventLoop) -> <init>
    77:77:java.lang.Integer call() -> call
    74:74:java.lang.Object call() -> call
io.netty.channel.nio.NioEventLoop$3 -> io.netty.channel.nio.c:
    91:91:void <init>() -> <init>
    94:95:java.lang.Void run() -> a
    91:91:java.lang.Object run() -> run
io.netty.channel.nio.NioEventLoop$4 -> io.netty.channel.nio.NioEventLoop$4:
    io.netty.channel.nio.NioEventLoop this$0 -> this$0
    184:184:void <init>(io.netty.channel.nio.NioEventLoop) -> <init>
    188:193:java.lang.Object run() -> run
io.netty.channel.nio.NioEventLoop$5 -> io.netty.channel.nio.NioEventLoop$5:
    java.lang.Class val$selectorImplClass -> val$selectorImplClass
    java.nio.channels.Selector val$unwrappedSelector -> val$unwrappedSelector
    io.netty.channel.nio.SelectedSelectionKeySet val$selectedKeySet -> val$selectedKeySet
    io.netty.channel.nio.NioEventLoop this$0 -> this$0
    210:210:void <init>(io.netty.channel.nio.NioEventLoop,java.lang.Class,java.nio.channels.Selector,io.netty.channel.nio.SelectedSelectionKeySet) -> <init>
    214:232:java.lang.Object run() -> run
io.netty.channel.nio.NioEventLoop$6 -> io.netty.channel.nio.NioEventLoop$6:
    io.netty.channel.nio.NioEventLoop this$0 -> this$0
    330:330:void <init>(io.netty.channel.nio.NioEventLoop) -> <init>
    333:334:void run() -> run
io.netty.channel.nio.NioEventLoop$SelectorTuple -> io.netty.channel.nio.NioEventLoop$SelectorTuple:
    java.nio.channels.Selector unwrappedSelector -> unwrappedSelector
    java.nio.channels.Selector selector -> selector
    159:162:void <init>(java.nio.channels.Selector) -> <init>
    164:167:void <init>(java.nio.channels.Selector,java.nio.channels.Selector) -> <init>
io.netty.channel.nio.NioEventLoopGroup -> io.netty.channel.nio.d:
    43:44:void <init>() -> <init>
    51:52:void <init>(int) -> <init>
    59:60:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    63:64:void <init>(int,java.util.concurrent.Executor) -> <init>
    72:73:void <init>(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider) -> <init>
    77:78:void <init>(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider,io.netty.channel.SelectStrategyFactory) -> <init>
    82:83:void <init>(int,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider) -> <init>
    87:88:void <init>(int,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider,io.netty.channel.SelectStrategyFactory) -> <init>
    109:112:void setIoRatio(int) -> a
    126:127:io.netty.channel.EventLoop newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    36:36:io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
io.netty.channel.nio.NioTask -> io.netty.channel.nio.e:
    void channelReady(java.nio.channels.SelectableChannel,java.nio.channels.SelectionKey) -> a
    void channelUnregistered(java.nio.channels.SelectableChannel,java.lang.Throwable) -> a
io.netty.channel.nio.SelectedSelectionKeySet -> io.netty.channel.nio.SelectedSelectionKeySet:
    java.nio.channels.SelectionKey[] keys -> keys
    int size -> size
    28:30:void <init>() -> <init>
    34:43:boolean add(java.nio.channels.SelectionKey) -> add
    48:48:int size() -> size
    53:53:boolean remove(java.lang.Object) -> remove
    58:58:boolean contains(java.lang.Object) -> contains
    63:63:java.util.Iterator iterator() -> iterator
    67:68:void reset() -> reset
    71:73:void reset(int) -> reset
    76:79:void increaseCapacity() -> increaseCapacity
    23:23:boolean add(java.lang.Object) -> add
io.netty.channel.nio.SelectedSelectionKeySetSelector -> io.netty.channel.nio.SelectedSelectionKeySetSelector:
    io.netty.channel.nio.SelectedSelectionKeySet selectionKeys -> selectionKeys
    java.nio.channels.Selector delegate -> delegate
    28:31:void <init>(java.nio.channels.Selector,io.netty.channel.nio.SelectedSelectionKeySet) -> <init>
    35:35:boolean isOpen() -> isOpen
    40:40:java.nio.channels.spi.SelectorProvider provider() -> provider
    45:45:java.util.Set keys() -> keys
    50:50:java.util.Set selectedKeys() -> selectedKeys
    55:56:int selectNow() -> selectNow
    61:62:int select(long) -> select
    67:68:int select() -> select
    73:73:java.nio.channels.Selector wakeup() -> wakeup
    78:79:void close() -> close
io.netty.channel.socket.ChannelInputShutdownEvent -> io.netty.channel.c.a:
    io.netty.channel.socket.ChannelInputShutdownEvent INSTANCE -> a
    35:35:void <init>() -> <init>
    33:33:void <clinit>() -> <clinit>
io.netty.channel.socket.ChannelInputShutdownReadComplete -> io.netty.channel.c.b:
    io.netty.channel.socket.ChannelInputShutdownReadComplete INSTANCE -> a
    25:26:void <init>() -> <init>
    23:23:void <clinit>() -> <clinit>
io.netty.channel.socket.ChannelOutputShutdownEvent -> io.netty.channel.c.c:
    io.netty.channel.socket.ChannelOutputShutdownEvent INSTANCE -> a
    31:32:void <init>() -> <init>
    29:29:void <clinit>() -> <clinit>
io.netty.channel.socket.ChannelOutputShutdownException -> io.netty.channel.c.d:
    32:33:void <init>(java.lang.String) -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.netty.channel.socket.DatagramChannel -> io.netty.channel.c.e:
    io.netty.channel.socket.DatagramChannelConfig config() -> a
io.netty.channel.socket.DatagramChannelConfig -> io.netty.channel.c.f:
    io.netty.channel.socket.DatagramChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> a
io.netty.channel.socket.DatagramPacket -> io.netty.channel.c.g:
    34:35:void <init>(io.netty.buffer.ByteBuf,java.net.InetSocketAddress) -> <init>
    42:43:void <init>(io.netty.buffer.ByteBuf,java.net.InetSocketAddress,java.net.InetSocketAddress) -> <init>
    67:68:io.netty.channel.socket.DatagramPacket retain() -> a
    73:74:io.netty.channel.socket.DatagramPacket retain(int) -> a
    79:80:io.netty.channel.socket.DatagramPacket touch() -> b
    85:86:io.netty.channel.socket.DatagramPacket touch(java.lang.Object) -> a
    27:27:io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    27:27:io.netty.channel.AddressedEnvelope touch() -> touch
    27:27:io.netty.channel.AddressedEnvelope retain(int) -> retain
    27:27:io.netty.channel.AddressedEnvelope retain() -> retain
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
    27:27:io.netty.buffer.ByteBuf content() -> content
io.netty.channel.socket.DefaultDatagramChannelConfig -> io.netty.channel.c.h:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.net.DatagramSocket javaSocket -> b
    boolean activeOnOpen -> c
    54:59:void <init>(io.netty.channel.socket.DatagramChannel,java.net.DatagramSocket) -> <init>
    68:69:java.util.Map getOptions() -> getOptions
    77:107:java.lang.Object getOption(io.netty.channel.ChannelOption) -> getOption
    113:139:boolean setOption(io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    143:147:void setActiveOnOpen(boolean) -> f
    152:154:boolean isBroadcast() -> a
    162:178:io.netty.channel.socket.DatagramChannelConfig setBroadcast(boolean) -> a
    183:190:java.net.InetAddress getInterface() -> b
    196:205:io.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> a
    210:217:boolean isLoopbackModeDisabled() -> c
    223:232:io.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> b
    237:244:java.net.NetworkInterface getNetworkInterface() -> d
    250:259:io.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> a
    265:267:boolean isReuseAddress() -> e
    274:278:io.netty.channel.socket.DatagramChannelConfig setReuseAddress(boolean) -> c
    284:286:int getReceiveBufferSize() -> f
    293:297:io.netty.channel.socket.DatagramChannelConfig setReceiveBufferSize(int) -> a
    303:305:int getSendBufferSize() -> g
    312:316:io.netty.channel.socket.DatagramChannelConfig setSendBufferSize(int) -> b
    321:328:int getTimeToLive() -> h
    334:343:io.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> c
    349:351:int getTrafficClass() -> i
    358:362:io.netty.channel.socket.DatagramChannelConfig setTrafficClass(int) -> d
    367:368:io.netty.channel.socket.DatagramChannelConfig setWriteSpinCount(int) -> e
    373:374:io.netty.channel.socket.DatagramChannelConfig setConnectTimeoutMillis(int) -> f
    380:381:io.netty.channel.socket.DatagramChannelConfig setMaxMessagesPerRead(int) -> g
    386:387:io.netty.channel.socket.DatagramChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> a
    392:393:io.netty.channel.socket.DatagramChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> a
    398:399:io.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> d
    404:405:io.netty.channel.socket.DatagramChannelConfig setAutoClose(boolean) -> e
    410:411:io.netty.channel.socket.DatagramChannelConfig setWriteBufferHighWaterMark(int) -> h
    416:417:io.netty.channel.socket.DatagramChannelConfig setWriteBufferLowWaterMark(int) -> i
    422:423:io.netty.channel.socket.DatagramChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> a
    428:429:io.netty.channel.socket.DatagramChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> a
    43:43:io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    43:43:io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    43:43:io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    43:43:io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    43:43:io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    43:43:io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    43:43:io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    43:43:io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    43:43:io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    43:43:io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    43:43:io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    45:45:void <clinit>() -> <clinit>
io.netty.channel.socket.DefaultServerSocketChannelConfig -> io.netty.channel.c.i:
    java.net.ServerSocket javaSocket -> a
    int backlog -> b
    42:53:void <init>(io.netty.channel.socket.ServerSocketChannel,java.net.ServerSocket) -> <init>
    57:57:java.util.Map getOptions() -> getOptions
    63:73:java.lang.Object getOption(io.netty.channel.ChannelOption) -> getOption
    78:90:boolean setOption(io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    96:98:boolean isReuseAddress() -> a
    105:109:io.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean) -> a
    115:117:int getReceiveBufferSize() -> b
    124:128:io.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int) -> a
    139:139:int getBacklog() -> c
    144:148:io.netty.channel.socket.ServerSocketChannelConfig setBacklog(int) -> b
    153:154:io.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int) -> c
    160:161:io.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int) -> d
    166:167:io.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int) -> e
    172:173:io.netty.channel.socket.ServerSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> a
    178:179:io.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> a
    184:185:io.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean) -> b
    190:191:io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> f
    196:197:io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> g
    202:203:io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> a
    208:209:io.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> a
    38:38:io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    38:38:io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    38:38:io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    38:38:io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    38:38:io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    38:38:io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    38:38:io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    38:38:io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    38:38:io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    38:38:io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
io.netty.channel.socket.DefaultSocketChannelConfig -> io.netty.channel.c.j:
    java.net.Socket javaSocket -> a
    boolean allowHalfClosure -> b
    46:60:void <init>(io.netty.channel.socket.SocketChannel,java.net.Socket) -> <init>
    64:65:java.util.Map getOptions() -> getOptions
    73:98:java.lang.Object getOption(io.netty.channel.ChannelOption) -> getOption
    103:125:boolean setOption(io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    131:133:int getReceiveBufferSize() -> a
    140:142:int getSendBufferSize() -> b
    149:151:int getSoLinger() -> c
    158:160:int getTrafficClass() -> d
    167:169:boolean isKeepAlive() -> e
    176:178:boolean isReuseAddress() -> f
    185:187:boolean isTcpNoDelay() -> g
    194:198:io.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean) -> a
    211:215:io.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int) -> a
    221:225:io.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean) -> b
    231:235:io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> b
    241:249:io.netty.channel.socket.SocketChannelConfig setSoLinger(int) -> c
    255:259:io.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean) -> c
    265:269:io.netty.channel.socket.SocketChannelConfig setTrafficClass(int) -> d
    274:274:boolean isAllowHalfClosure() -> h
    279:280:io.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean) -> d
    285:286:io.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int) -> e
    292:293:io.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int) -> f
    298:299:io.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int) -> g
    304:305:io.netty.channel.socket.SocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> a
    310:311:io.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> a
    316:317:io.netty.channel.socket.SocketChannelConfig setAutoRead(boolean) -> e
    322:323:io.netty.channel.socket.SocketChannelConfig setAutoClose(boolean) -> f
    328:329:io.netty.channel.socket.SocketChannelConfig setWriteBufferHighWaterMark(int) -> h
    334:335:io.netty.channel.socket.SocketChannelConfig setWriteBufferLowWaterMark(int) -> i
    340:341:io.netty.channel.socket.SocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> a
    346:347:io.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> a
    36:36:io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    36:36:io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    36:36:io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    36:36:io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    36:36:io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    36:36:io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    36:36:io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    36:36:io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator) -> setAllocator
    36:36:io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    36:36:io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    36:36:io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
io.netty.channel.socket.DuplexChannel -> io.netty.channel.c.k:
io.netty.channel.socket.InternetProtocolFamily -> io.netty.channel.c.l:
    io.netty.channel.socket.InternetProtocolFamily IPv4 -> a
    io.netty.channel.socket.InternetProtocolFamily IPv6 -> b
    java.lang.Class addressType -> c
    int addressNumber -> d
    java.net.InetAddress localHost -> e
    io.netty.channel.socket.InternetProtocolFamily[] $VALUES -> f
    27:27:io.netty.channel.socket.InternetProtocolFamily[] values() -> values
    27:27:io.netty.channel.socket.InternetProtocolFamily valueOf(java.lang.String) -> valueOf
    35:39:void <init>(java.lang.String,int,java.lang.Class,int,java.net.InetAddress) -> <init>
    45:45:java.lang.Class addressType() -> a
    54:54:int addressNumber() -> b
    61:61:java.net.InetAddress localhost() -> c
    27:29:void <clinit>() -> <clinit>
io.netty.channel.socket.ServerSocketChannel -> io.netty.channel.c.m:
io.netty.channel.socket.ServerSocketChannelConfig -> io.netty.channel.c.n:
    int getBacklog() -> c
io.netty.channel.socket.SocketChannel -> io.netty.channel.c.o:
io.netty.channel.socket.SocketChannelConfig -> io.netty.channel.c.p:
    int getSoLinger() -> c
io.netty.channel.socket.nio.NioDatagramChannel -> io.netty.channel.c.a.a:
    io.netty.channel.ChannelMetadata METADATA -> a
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> b
    java.lang.String EXPECTED_TYPES -> c
    io.netty.channel.socket.DatagramChannelConfig config -> d
    86:88:java.nio.channels.DatagramChannel newSocket(java.nio.channels.spi.SelectorProvider) -> a
    116:117:void <init>() -> <init>
    148:150:void <init>(java.nio.channels.DatagramChannel) -> <init>
    154:154:io.netty.channel.ChannelMetadata metadata() -> metadata
    159:159:io.netty.channel.socket.DatagramChannelConfig config() -> a
    165:168:boolean isActive() -> isActive
    178:178:java.nio.channels.DatagramChannel javaChannel() -> b
    183:183:java.net.SocketAddress localAddress0() -> localAddress0
    188:188:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    193:194:void doBind(java.net.SocketAddress) -> doBind
    197:202:void doBind0(java.net.SocketAddress) -> a
    207:218:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    225:225:void doFinishConnect() -> doFinishConnect
    230:231:void doDisconnect() -> doDisconnect
    235:236:void doClose() -> doClose
    240:265:int doReadMessages(java.util.List) -> doReadMessages
    274:296:boolean doWriteMessage(java.lang.Object,io.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    301:331:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    339:339:boolean isSingleDirectBuffer(io.netty.buffer.ByteBuf) -> a
    347:347:boolean continueOnWriteError() -> continueOnWriteError
    352:352:java.net.InetSocketAddress localAddress() -> c
    357:357:java.net.InetSocketAddress remoteAddress() -> d
    594:595:void setReadPending(boolean) -> setReadPending
    598:599:void clearReadPending0() -> e
    605:608:boolean closeOnReadError(java.lang.Throwable) -> closeOnReadError
    62:62:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    62:62:java.net.SocketAddress remoteAddress() -> remoteAddress
    62:62:java.net.SocketAddress localAddress() -> localAddress
    62:62:io.netty.channel.ChannelConfig config() -> config
    65:72:void <clinit>() -> <clinit>
io.netty.channel.socket.nio.NioDatagramChannelConfig -> io.netty.channel.c.a.b:
    java.lang.Object IP_MULTICAST_TTL -> a
    java.lang.Object IP_MULTICAST_IF -> b
    java.lang.Object IP_MULTICAST_LOOP -> c
    java.lang.reflect.Method GET_OPTION -> d
    java.lang.reflect.Method SET_OPTION -> e
    java.nio.channels.DatagramChannel javaChannel -> f
    115:117:void <init>(io.netty.channel.socket.nio.NioDatagramChannel,java.nio.channels.DatagramChannel) -> <init>
    121:121:int getTimeToLive() -> h
    126:127:io.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> c
    132:140:java.net.InetAddress getInterface() -> b
    147:151:io.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> a
    156:156:java.net.NetworkInterface getNetworkInterface() -> d
    161:162:io.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> a
    167:167:boolean isLoopbackModeDisabled() -> c
    172:173:io.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> b
    178:179:io.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> d
    184:185:void autoReadCleared() -> autoReadCleared
    188:194:java.lang.Object getOption0(java.lang.Object) -> a
    200:209:void setOption0(java.lang.Object,java.lang.Object) -> a
    34:34:io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    43:110:void <clinit>() -> <clinit>
io.netty.channel.socket.nio.NioServerSocketChannel -> io.netty.channel.c.a.c:
    io.netty.channel.ChannelMetadata METADATA -> a
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> b
    io.netty.util.internal.logging.InternalLogger logger -> c
    io.netty.channel.socket.ServerSocketChannelConfig config -> d
    59:61:java.nio.channels.ServerSocketChannel newSocket(java.nio.channels.spi.SelectorProvider) -> a
    72:73:void <init>() -> <init>
    86:88:void <init>(java.nio.channels.ServerSocketChannel) -> <init>
    92:92:java.net.InetSocketAddress localAddress() -> a
    97:97:io.netty.channel.ChannelMetadata metadata() -> metadata
    102:102:io.netty.channel.socket.ServerSocketChannelConfig config() -> b
    107:107:boolean isActive() -> isActive
    112:112:java.net.InetSocketAddress remoteAddress() -> c
    117:117:java.nio.channels.ServerSocketChannel javaChannel() -> d
    122:122:java.net.SocketAddress localAddress0() -> localAddress0
    127:132:void doBind(java.net.SocketAddress) -> doBind
    136:137:void doClose() -> doClose
    141:158:int doReadMessages(java.util.List) -> doReadMessages
    165:165:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    170:170:void doFinishConnect() -> doFinishConnect
    175:175:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    180:180:void doDisconnect() -> doDisconnect
    185:185:boolean doWriteMessage(java.lang.Object,io.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    190:190:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    43:43:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    43:43:java.net.SocketAddress remoteAddress() -> remoteAddress
    43:43:java.net.SocketAddress localAddress() -> localAddress
    43:43:io.netty.channel.ChannelConfig config() -> config
    43:43:void access$100(io.netty.channel.socket.nio.NioServerSocketChannel) -> a
    46:49:void <clinit>() -> <clinit>
io.netty.channel.socket.nio.NioServerSocketChannel$1 -> io.netty.channel.c.a.d:
io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig -> io.netty.channel.c.a.e:
    io.netty.channel.socket.nio.NioServerSocketChannel this$0 -> b
    194:196:void <init>(io.netty.channel.socket.nio.NioServerSocketChannel,io.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket) -> <init>
    200:201:void autoReadCleared() -> autoReadCleared
    193:193:void <init>(io.netty.channel.socket.nio.NioServerSocketChannel,io.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket,io.netty.channel.socket.nio.NioServerSocketChannel$1) -> <init>
io.netty.channel.socket.nio.NioSocketChannel -> io.netty.channel.c.a.f:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> b
    io.netty.channel.socket.SocketChannelConfig config -> c
    66:68:java.nio.channels.SocketChannel newSocket(java.nio.channels.spi.SelectorProvider) -> a
    78:79:void <init>() -> <init>
    85:86:void <init>(java.nio.channels.spi.SelectorProvider) -> <init>
    92:93:void <init>(java.nio.channels.SocketChannel) -> <init>
    102:104:void <init>(io.netty.channel.Channel,java.nio.channels.SocketChannel) -> <init>
    108:108:io.netty.channel.socket.ServerSocketChannel parent() -> a
    113:113:io.netty.channel.socket.SocketChannelConfig config() -> b
    118:118:java.nio.channels.SocketChannel javaChannel() -> c
    123:124:boolean isActive() -> isActive
    134:134:boolean isInputShutdown() -> d
    145:145:java.net.InetSocketAddress localAddress() -> e
    150:150:java.net.InetSocketAddress remoteAddress() -> f
    156:161:void doShutdownOutput() -> doShutdownOutput
    186:186:io.netty.channel.ChannelFuture shutdownInput() -> shutdownInput
    191:191:boolean isInputShutdown0() -> isInputShutdown0
    196:207:io.netty.channel.ChannelFuture shutdownInput(io.netty.channel.ChannelPromise) -> a
    264:269:void shutdownInput0(io.netty.channel.ChannelPromise) -> b
    272:277:void shutdownInput0() -> g
    281:281:java.net.SocketAddress localAddress0() -> localAddress0
    286:286:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    291:292:void doBind(java.net.SocketAddress) -> doBind
    295:300:void doBind0(java.net.SocketAddress) -> a
    304:318:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    325:328:void doFinishConnect() -> doFinishConnect
    332:333:void doDisconnect() -> doDisconnect
    337:339:void doClose() -> doClose
    343:345:int doReadBytes(io.netty.buffer.ByteBuf) -> doReadBytes
    350:351:int doWriteBytes(io.netty.buffer.ByteBuf) -> doWriteBytes
    356:357:long doWriteFileRegion(io.netty.channel.FileRegion) -> doWriteFileRegion
    364:371:void adjustMaxBytesPerGatheringWrite(int,int,int) -> a
    375:434:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    438:438:io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe() -> newUnsafe
    54:54:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    54:54:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    54:54:java.net.SocketAddress remoteAddress() -> remoteAddress
    54:54:java.net.SocketAddress localAddress() -> localAddress
    54:54:io.netty.channel.Channel parent() -> parent
    54:54:io.netty.channel.ChannelConfig config() -> config
    54:54:void access$100(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.ChannelPromise) -> a
    54:54:void access$500(io.netty.channel.socket.nio.NioSocketChannel) -> a
    54:54:void access$600(io.netty.channel.socket.nio.NioSocketChannel) -> b
    55:56:void <clinit>() -> <clinit>
io.netty.channel.socket.nio.NioSocketChannel$1 -> io.netty.channel.c.a.g:
    io.netty.channel.ChannelPromise val$promise -> a
    io.netty.channel.socket.nio.NioSocketChannel this$0 -> b
    177:178:void run() -> run
io.netty.channel.socket.nio.NioSocketChannel$2 -> io.netty.channel.c.a.h:
    io.netty.channel.ChannelPromise val$promise -> a
    io.netty.channel.socket.nio.NioSocketChannel this$0 -> b
    200:200:void <init>(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.ChannelPromise) -> <init>
    203:204:void run() -> run
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig -> io.netty.channel.c.a.i:
    int maxBytesPerGatheringWrite -> c
    io.netty.channel.socket.nio.NioSocketChannel this$0 -> b
    463:468:void <init>(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.socket.nio.NioSocketChannel,java.net.Socket) -> <init>
    472:473:void autoReadCleared() -> autoReadCleared
    477:479:io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig setSendBufferSize(int) -> j
    483:484:void setMaxBytesPerGatheringWrite(int) -> k
    487:487:int getMaxBytesPerGatheringWrite() -> i
    492:496:void calculateMaxBytesPerGatheringWrite() -> j
    462:462:io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> b
    462:462:void <init>(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.socket.nio.NioSocketChannel,java.net.Socket,io.netty.channel.socket.nio.NioSocketChannel$1) -> <init>
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelUnsafe -> io.netty.channel.c.a.j:
    io.netty.channel.socket.nio.NioSocketChannel this$0 -> a
    441:441:void <init>(io.netty.channel.socket.nio.NioSocketChannel) -> <init>
    445:458:java.util.concurrent.Executor prepareToClose() -> prepareToClose
    441:441:void <init>(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.socket.nio.NioSocketChannel$1) -> <init>
io.netty.handler.codec.ByteToMessageDecoder -> io.netty.c.a.a:
    io.netty.handler.codec.ByteToMessageDecoder$Cumulator MERGE_CUMULATOR -> MERGE_CUMULATOR
    io.netty.handler.codec.ByteToMessageDecoder$Cumulator COMPOSITE_CUMULATOR -> COMPOSITE_CUMULATOR
    byte STATE_INIT -> STATE_INIT
    byte STATE_CALLING_CHILD_DECODE -> STATE_CALLING_CHILD_DECODE
    byte STATE_HANDLER_REMOVED_PENDING -> STATE_HANDLER_REMOVED_PENDING
    io.netty.buffer.ByteBuf cumulation -> cumulation
    io.netty.handler.codec.ByteToMessageDecoder$Cumulator cumulator -> cumulator
    boolean singleDecode -> singleDecode
    boolean decodeWasNull -> decodeWasNull
    boolean first -> first
    byte decodeState -> decodeState
    int discardAfterReads -> discardAfterReads
    int numReads -> numReads
    137:155:void <init>() -> <init>
    164:165:void setSingleDecode(boolean) -> setSingleDecode
    174:174:boolean isSingleDecode() -> isSingleDecode
    181:185:void setCumulator(io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> setCumulator
    192:196:void setDiscardAfterReads(int) -> setDiscardAfterReads
    205:205:int actualReadableBytes() -> actualReadableBytes
    214:217:io.netty.buffer.ByteBuf internalBuffer() -> internalBuffer
    223:245:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    251:251:void handlerRemoved0(io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    255:290:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    296:303:void fireChannelRead(io.netty.channel.ChannelHandlerContext,java.util.List,int) -> fireChannelRead
    309:312:void fireChannelRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.CodecOutputList,int) -> fireChannelRead
    316:325:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    328:338:void discardSomeReadBytes() -> discardSomeReadBytes
    342:343:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    347:354:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    357:384:void channelInputClosed(io.netty.channel.ChannelHandlerContext,boolean) -> channelInputClosed
    391:397:void channelInputClosed(io.netty.channel.ChannelHandlerContext,java.util.List) -> channelInputClosed
    409:461:void callDecode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> callDecode
    void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    487:497:void decodeRemovalReentryProtection(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decodeRemovalReentryProtection
    507:512:void decodeLast(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decodeLast
    515:519:io.netty.buffer.ByteBuf expandCumulation(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,int) -> expandCumulation
    75:103:void <clinit>() -> <clinit>
io.netty.handler.codec.ByteToMessageDecoder$1 -> io.netty.c.a.b:
    75:75:void <init>() -> <init>
    79:94:io.netty.buffer.ByteBuf cumulate(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> a
io.netty.handler.codec.ByteToMessageDecoder$2 -> io.netty.c.a.c:
    103:103:void <init>() -> <init>
    107:128:io.netty.buffer.ByteBuf cumulate(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> a
io.netty.handler.codec.ByteToMessageDecoder$Cumulator -> io.netty.c.a.d:
    io.netty.buffer.ByteBuf cumulate(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> a
io.netty.handler.codec.CharSequenceValueConverter -> io.netty.c.a.e:
    io.netty.handler.codec.CharSequenceValueConverter INSTANCE -> a
    26:26:void <init>() -> <init>
    31:34:java.lang.CharSequence convertObject(java.lang.Object) -> a
    26:26:java.lang.Object convertObject(java.lang.Object) -> b
    27:27:void <clinit>() -> <clinit>
io.netty.handler.codec.CodecException -> io.netty.c.a.f:
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
io.netty.handler.codec.CodecOutputList -> io.netty.c.a.g:
    io.netty.util.Recycler RECYCLER -> a
    io.netty.util.Recycler$Handle handle -> b
    int size -> c
    java.lang.Object[] array -> d
    boolean insertSinceRecycled -> e
    38:38:io.netty.handler.codec.CodecOutputList newInstance() -> a
    44:49:void <init>(io.netty.util.Recycler$Handle) -> <init>
    53:54:java.lang.Object get(int) -> get
    59:59:int size() -> size
    64:73:boolean add(java.lang.Object) -> add
    78:83:java.lang.Object set(int,java.lang.Object) -> set
    88:101:void add(int,java.lang.Object) -> add
    105:114:java.lang.Object remove(int) -> remove
    121:122:void clear() -> clear
    128:128:boolean insertSinceRecycled() -> b
    135:141:void recycle() -> c
    147:147:java.lang.Object getUnsafe(int) -> a
    151:154:void checkIndex(int) -> b
    157:159:void insert(int,java.lang.Object) -> a
    163:173:void expandArray() -> d
    28:28:void <init>(io.netty.util.Recycler$Handle,io.netty.handler.codec.CodecOutputList$1) -> <init>
    30:30:void <clinit>() -> <clinit>
io.netty.handler.codec.CodecOutputList$1 -> io.netty.c.a.h:
    30:30:void <init>() -> <init>
    33:33:io.netty.handler.codec.CodecOutputList newObject(io.netty.util.Recycler$Handle) -> a
    30:30:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.handler.codec.CorruptedFrameException -> io.netty.c.a.i:
    29:30:void <init>() -> <init>
    43:44:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.DateFormatter -> io.netty.c.a.j:
    java.util.BitSet DELIMITERS -> a
    java.lang.String[] DAY_OF_WEEK_TO_SHORT_NAME -> b
    java.lang.String[] CALENDAR_MONTH_TO_SHORT_NAME -> c
    io.netty.util.concurrent.FastThreadLocal INSTANCES -> d
    java.util.GregorianCalendar cal -> e
    java.lang.StringBuilder sb -> f
    boolean timeFound -> g
    int hours -> h
    int minutes -> i
    int seconds -> j
    boolean dayOfMonthFound -> k
    int dayOfMonth -> l
    boolean monthFound -> m
    int month -> n
    boolean yearFound -> o
    int year -> p
    114:114:java.lang.String format(java.util.Date) -> a
    128:130:io.netty.handler.codec.DateFormatter formatter() -> b
    146:161:void <init>() -> <init>
    164:176:void reset() -> a
    424:425:java.lang.String format0(java.util.Date) -> b
    429:437:java.lang.StringBuilder append0(java.util.Date,java.lang.StringBuilder) -> a
    441:444:java.lang.StringBuilder appendZeroLeftPadded(int,java.lang.StringBuilder) -> a
    46:46:void <init>(io.netty.handler.codec.DateFormatter$1) -> <init>
    48:71:void <clinit>() -> <clinit>
io.netty.handler.codec.DateFormatter$1 -> io.netty.c.a.k:
    72:72:void <init>() -> <init>
    75:75:io.netty.handler.codec.DateFormatter initialValue() -> a
    72:72:java.lang.Object initialValue() -> initialValue
io.netty.handler.codec.DecoderException -> io.netty.c.a.l:
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
io.netty.handler.codec.DecoderResult -> io.netty.c.a.m:
    io.netty.util.Signal SIGNAL_UNFINISHED -> a
    io.netty.util.Signal SIGNAL_SUCCESS -> b
    io.netty.handler.codec.DecoderResult UNFINISHED -> c
    io.netty.handler.codec.DecoderResult SUCCESS -> d
    java.lang.Throwable cause -> e
    29:32:io.netty.handler.codec.DecoderResult failure(java.lang.Throwable) -> a
    37:42:void <init>(java.lang.Throwable) -> <init>
    45:45:boolean isFinished() -> a
    49:49:boolean isSuccess() -> b
    53:53:boolean isFailure() -> c
    57:60:java.lang.Throwable cause() -> d
    66:78:java.lang.String toString() -> toString
    22:26:void <clinit>() -> <clinit>
io.netty.handler.codec.DecoderResultProvider -> io.netty.c.a.n:
    io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
io.netty.handler.codec.DefaultHeaders -> io.netty.c.a.o:
    io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries -> c
    io.netty.handler.codec.DefaultHeaders$HeaderEntry head -> a
    byte hashMask -> d
    io.netty.handler.codec.ValueConverter valueConverter -> e
    io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator -> f
    io.netty.util.HashingStrategy hashingStrategy -> g
    int size -> b
    87:88:void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter) -> <init>
    92:93:void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
    105:114:void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator,int) -> <init>
    118:132:java.lang.Object get(java.lang.Object) -> a
    146:147:java.lang.Object getAndRemove(java.lang.Object) -> b
    161:174:java.util.List getAll(java.lang.Object) -> c
    183:183:java.util.Iterator valueIterator(java.lang.Object) -> d
    195:195:boolean contains(java.lang.Object) -> e
    251:251:boolean contains(java.lang.Object,java.lang.Object) -> a
    255:266:boolean contains(java.lang.Object,java.lang.Object,io.netty.util.HashingStrategy) -> a
    271:271:int size() -> a
    276:276:boolean isEmpty() -> b
    281:290:java.util.Set names() -> c
    295:300:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> b
    305:311:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> a
    327:327:io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object) -> c
    332:335:io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Iterable) -> b
    393:397:io.netty.handler.codec.Headers add(io.netty.handler.codec.Headers) -> a
    401:426:void addImpl(io.netty.handler.codec.Headers) -> b
    430:436:io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object) -> d
    441:455:io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> c
    479:481:io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object) -> e
    486:499:io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Iterable) -> d
    567:571:io.netty.handler.codec.Headers set(io.netty.handler.codec.Headers) -> c
    587:587:boolean remove(java.lang.Object) -> f
    592:595:io.netty.handler.codec.Headers clear() -> d
    600:600:java.util.Iterator iterator() -> iterator
    829:833:boolean equals(java.lang.Object) -> equals
    839:839:int hashCode() -> hashCode
    850:870:boolean equals(io.netty.handler.codec.Headers,io.netty.util.HashingStrategy) -> a
    879:887:int hashCode(io.netty.util.HashingStrategy) -> a
    892:892:java.lang.String toString() -> toString
    896:896:io.netty.handler.codec.DefaultHeaders$HeaderEntry newHeaderEntry(int,java.lang.Object,java.lang.Object,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> a
    900:900:io.netty.handler.codec.ValueConverter valueConverter() -> e
    904:904:int index(int) -> a
    909:911:void add0(int,int,java.lang.Object,java.lang.Object) -> a
    917:947:java.lang.Object remove0(int,int,java.lang.Object) -> a
    952:952:io.netty.handler.codec.Headers thisT() -> f
    43:43:io.netty.util.HashingStrategy access$100(io.netty.handler.codec.DefaultHeaders) -> a
    43:43:io.netty.handler.codec.DefaultHeaders$HeaderEntry[] access$200(io.netty.handler.codec.DefaultHeaders) -> b
    43:43:int access$300(io.netty.handler.codec.DefaultHeaders,int) -> a
io.netty.handler.codec.DefaultHeaders$1 -> io.netty.c.a.p:
io.netty.handler.codec.DefaultHeaders$HeaderEntry -> io.netty.c.a.q:
    int hash -> a
    java.lang.Object key -> b
    java.lang.Object value -> c
    io.netty.handler.codec.DefaultHeaders$HeaderEntry next -> d
    io.netty.handler.codec.DefaultHeaders$HeaderEntry before -> e
    io.netty.handler.codec.DefaultHeaders$HeaderEntry after -> f
    1036:1039:void <init>(int,java.lang.Object) -> <init>
    1041:1050:void <init>(int,java.lang.Object,java.lang.Object,io.netty.handler.codec.DefaultHeaders$HeaderEntry,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> <init>
    1052:1056:void <init>() -> <init>
    1059:1061:void pointNeighborsToThis() -> a
    1064:1064:io.netty.handler.codec.DefaultHeaders$HeaderEntry before() -> b
    1068:1068:io.netty.handler.codec.DefaultHeaders$HeaderEntry after() -> c
    1072:1074:void remove() -> d
    1078:1078:java.lang.Object getKey() -> getKey
    1083:1083:java.lang.Object getValue() -> getValue
    1088:1091:java.lang.Object setValue(java.lang.Object) -> setValue
    1096:1096:java.lang.String toString() -> toString
io.netty.handler.codec.DefaultHeaders$HeaderIterator -> io.netty.c.a.r:
    io.netty.handler.codec.DefaultHeaders$HeaderEntry current -> b
    io.netty.handler.codec.DefaultHeaders this$0 -> a
    955:956:void <init>(io.netty.handler.codec.DefaultHeaders) -> <init>
    960:960:boolean hasNext() -> hasNext
    965:971:java.util.Map$Entry next() -> a
    976:976:void remove() -> remove
    955:955:java.lang.Object next() -> next
    955:955:void <init>(io.netty.handler.codec.DefaultHeaders,io.netty.handler.codec.DefaultHeaders$1) -> <init>
io.netty.handler.codec.DefaultHeaders$NameValidator -> io.netty.c.a.s:
    io.netty.handler.codec.DefaultHeaders$NameValidator NOT_NULL -> a
    void validateName(java.lang.Object) -> a
    67:67:void <clinit>() -> <clinit>
io.netty.handler.codec.DefaultHeaders$NameValidator$1 -> io.netty.c.a.t:
    67:67:void <init>() -> <init>
    70:71:void validateName(java.lang.Object) -> a
io.netty.handler.codec.DefaultHeaders$ValueIterator -> io.netty.c.a.u:
    java.lang.Object name -> b
    int hash -> c
    io.netty.handler.codec.DefaultHeaders$HeaderEntry next -> d
    io.netty.handler.codec.DefaultHeaders this$0 -> a
    985:989:void <init>(io.netty.handler.codec.DefaultHeaders,java.lang.Object) -> <init>
    993:993:boolean hasNext() -> hasNext
    998:1003:java.lang.Object next() -> next
    1008:1008:void remove() -> remove
    1012:1020:void calculateNext(io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> a
io.netty.handler.codec.DefaultHeadersImpl -> io.netty.c.a.v:
    27:28:void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
io.netty.handler.codec.EncoderException -> io.netty.c.a.w:
    28:29:void <init>() -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
io.netty.handler.codec.Headers -> io.netty.c.a.x:
    java.lang.Object get(java.lang.Object) -> a
    java.util.List getAll(java.lang.Object) -> c
    boolean contains(java.lang.Object) -> e
    boolean contains(java.lang.Object,java.lang.Object) -> a
    int size() -> a
    boolean isEmpty() -> b
    java.util.Set names() -> c
    io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> b
    io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> a
    io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object) -> d
    io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> c
    boolean remove(java.lang.Object) -> f
    io.netty.handler.codec.Headers clear() -> d
    java.util.Iterator iterator() -> iterator
io.netty.handler.codec.HeadersUtils -> io.netty.c.a.y:
    42:43:java.util.List getAllAsString(io.netty.handler.codec.Headers,java.lang.Object) -> a
    64:65:java.lang.String getAsString(io.netty.handler.codec.Headers,java.lang.Object) -> b
    73:73:java.util.Iterator iteratorAsString(java.lang.Iterable) -> a
    84:97:java.lang.String toString(java.lang.Class,java.util.Iterator,int) -> a
    107:107:java.util.Set namesAsString(io.netty.handler.codec.Headers) -> a
io.netty.handler.codec.HeadersUtils$1 -> io.netty.c.a.z:
    java.util.List val$allNames -> a
    43:43:void <init>(java.util.List) -> <init>
    46:47:java.lang.String get(int) -> a
    52:52:int size() -> size
    43:43:java.lang.Object get(int) -> get
io.netty.handler.codec.HeadersUtils$CharSequenceDelegatingStringSet -> io.netty.c.a.A:
    197:198:void <init>(java.util.Set) -> <init>
    202:202:boolean add(java.lang.String) -> a
    207:207:boolean addAll(java.util.Collection) -> addAll
    195:195:boolean add(java.lang.Object) -> add
io.netty.handler.codec.HeadersUtils$DelegatingStringSet -> io.netty.c.a.B:
    java.util.Set allNames -> a
    214:216:void <init>(java.util.Set) -> <init>
    220:220:int size() -> size
    225:225:boolean isEmpty() -> isEmpty
    230:230:boolean contains(java.lang.Object) -> contains
    235:235:java.util.Iterator iterator() -> iterator
    240:240:boolean remove(java.lang.Object) -> remove
    245:246:void clear() -> clear
io.netty.handler.codec.HeadersUtils$StringEntry -> io.netty.c.a.C:
    java.util.Map$Entry entry -> a
    java.lang.String name -> b
    java.lang.String value -> c
    138:140:void <init>(java.util.Map$Entry) -> <init>
    144:147:java.lang.String getKey() -> a
    152:155:java.lang.String getValue() -> b
    160:162:java.lang.String setValue(java.lang.String) -> a
    167:167:java.lang.String toString() -> toString
    133:133:java.lang.Object setValue(java.lang.Object) -> setValue
    133:133:java.lang.Object getValue() -> getValue
    133:133:java.lang.Object getKey() -> getKey
io.netty.handler.codec.HeadersUtils$StringEntryIterator -> io.netty.c.a.D:
    java.util.Iterator iter -> a
    113:115:void <init>(java.util.Iterator) -> <init>
    119:119:boolean hasNext() -> hasNext
    124:124:java.util.Map$Entry next() -> a
    129:130:void remove() -> remove
    110:110:java.lang.Object next() -> next
io.netty.handler.codec.HeadersUtils$StringIterator -> io.netty.c.a.E:
    java.util.Iterator iter -> a
    174:176:void <init>(java.util.Iterator) -> <init>
    180:180:boolean hasNext() -> hasNext
    185:186:java.lang.String next() -> a
    191:192:void remove() -> remove
    171:171:java.lang.Object next() -> next
io.netty.handler.codec.MessageAggregationException -> io.netty.c.a.F:
    26:26:void <init>() -> <init>
io.netty.handler.codec.MessageAggregator -> io.netty.c.a.G:
    int maxContentLength -> a
    io.netty.buffer.ByteBufHolder currentMessage -> b
    boolean handlingOversizedMessage -> c
    int maxCumulationBufferComponents -> d
    io.netty.channel.ChannelHandlerContext ctx -> e
    io.netty.channel.ChannelFutureListener continueResponseWriteListener -> f
    60:75:void <init>(int) -> <init>
    84:87:void validateMaxContentLength(int) -> a
    92:99:boolean acceptInboundMessage(java.lang.Object) -> a
    boolean isStartMessage(java.lang.Object) -> b
    boolean isContentMessage(java.lang.Object) -> c
    boolean isLastContentMessage(io.netty.buffer.ByteBufHolder) -> a
    boolean isAggregated(java.lang.Object) -> d
    143:143:int maxContentLength() -> a
    195:313:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> a
    316:319:void appendPartialContent(io.netty.buffer.CompositeByteBuf,io.netty.buffer.ByteBuf) -> a
    boolean isContentLengthInvalid(java.lang.Object,int) -> a
    java.lang.Object newContinueResponse(java.lang.Object,int,io.netty.channel.ChannelPipeline) -> a
    boolean closeAfterContinueResponse(java.lang.Object) -> e
    boolean ignoreContentAfterContinueResponse(java.lang.Object) -> f
    io.netty.buffer.ByteBufHolder beginAggregation(java.lang.Object,io.netty.buffer.ByteBuf) -> a
    372:372:void aggregate(io.netty.buffer.ByteBufHolder,io.netty.buffer.ByteBufHolder) -> a
    377:377:void finishAggregation(io.netty.buffer.ByteBufHolder) -> b
    380:388:void invokeHandleOversizedMessage(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> b
    398:400:void handleOversizedMessage(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> a
    407:411:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    417:421:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    425:426:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    431:437:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    440:445:void releaseCurrentMessage() -> b
io.netty.handler.codec.MessageAggregator$1 -> io.netty.c.a.H:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.handler.codec.MessageAggregator this$0 -> b
    213:213:void <init>(io.netty.handler.codec.MessageAggregator,io.netty.channel.ChannelHandlerContext) -> <init>
    216:219:void operationComplete(io.netty.channel.ChannelFuture) -> a
    213:213:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.MessageToByteEncoder -> io.netty.c.a.I:
    io.netty.util.internal.TypeParameterMatcher matcher -> a
    boolean preferDirect -> b
    55:56:void <init>() -> <init>
    72:75:void <init>(boolean) -> <init>
    95:95:boolean acceptOutboundMessage(java.lang.Object) -> a
    100:131:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    139:142:io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> a
    void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf) -> a
io.netty.handler.codec.MessageToMessageCodec -> io.netty.c.a.J:
    io.netty.handler.codec.MessageToMessageEncoder encoder -> encoder
    io.netty.handler.codec.MessageToMessageDecoder decoder -> decoder
    io.netty.util.internal.TypeParameterMatcher inboundMsgMatcher -> inboundMsgMatcher
    io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher -> outboundMsgMatcher
    57:95:void <init>() -> <init>
    57:107:void <init>(java.lang.Class,java.lang.Class) -> <init>
    111:112:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    116:117:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    125:125:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    134:134:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
io.netty.handler.codec.MessageToMessageCodec$1 -> io.netty.c.a.K:
    io.netty.handler.codec.MessageToMessageCodec this$0 -> a
    57:57:void <init>(io.netty.handler.codec.MessageToMessageCodec) -> <init>
    61:61:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    67:68:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
io.netty.handler.codec.MessageToMessageCodec$2 -> io.netty.c.a.L:
    io.netty.handler.codec.MessageToMessageCodec this$0 -> a
    71:71:void <init>(io.netty.handler.codec.MessageToMessageCodec) -> <init>
    75:75:boolean acceptInboundMessage(java.lang.Object) -> a
    81:82:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> a
io.netty.handler.codec.MessageToMessageDecoder -> io.netty.c.a.M:
    io.netty.util.internal.TypeParameterMatcher matcher -> a
    59:61:void <init>() -> <init>
    77:77:boolean acceptInboundMessage(java.lang.Object) -> a
    82:106:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> a
io.netty.handler.codec.MessageToMessageEncoder -> io.netty.c.a.N:
    io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    58:60:void <init>() -> <init>
    67:69:void <init>(java.lang.Class) -> <init>
    76:76:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    81:131:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
io.netty.handler.codec.PrematureChannelClosureException -> io.netty.c.a.O:
    32:32:void <init>() -> <init>
    45:46:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.ReplayingDecoder -> io.netty.c.a.P:
    io.netty.util.Signal REPLAY -> a
    io.netty.handler.codec.ReplayingDecoderByteBuf replayable -> b
    java.lang.Object state -> c
    int checkpoint -> d
    280:281:void <init>() -> <init>
    272:288:void <init>(java.lang.Object) -> <init>
    294:295:void checkpoint() -> a
    302:304:void checkpoint(java.lang.Object) -> a
    311:311:java.lang.Object state() -> b
    319:321:java.lang.Object state(java.lang.Object) -> b
    327:339:void channelInputClosed(io.netty.channel.ChannelHandlerContext,java.util.List) -> channelInputClosed
    343:424:void callDecode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> callDecode
    270:270:void <clinit>() -> <clinit>
io.netty.handler.codec.ReplayingDecoderByteBuf -> io.netty.c.a.Q:
    io.netty.util.Signal REPLAY -> b
    io.netty.buffer.ByteBuf buffer -> c
    boolean terminated -> d
    io.netty.buffer.SwappedByteBuf swapped -> e
    io.netty.handler.codec.ReplayingDecoderByteBuf EMPTY_BUFFER -> a
    52:52:void <init>() -> <init>
    54:56:void <init>(io.netty.buffer.ByteBuf) -> <init>
    59:60:void setCumulation(io.netty.buffer.ByteBuf) -> d
    63:64:void terminate() -> m
    68:71:int capacity() -> aa
    77:77:io.netty.buffer.ByteBuf capacity(int) -> X
    82:82:int maxCapacity() -> c
    87:87:io.netty.buffer.ByteBufAllocator alloc() -> M
    92:92:boolean isReadOnly() -> a
    98:98:io.netty.buffer.ByteBuf asReadOnly() -> b
    103:103:boolean isDirect() -> O
    108:108:boolean hasArray() -> P
    113:113:byte[] array() -> Q
    118:118:int arrayOffset() -> T
    123:123:boolean hasMemoryAddress() -> R
    128:128:long memoryAddress() -> V
    133:133:io.netty.buffer.ByteBuf clear() -> f
    138:138:boolean equals(java.lang.Object) -> equals
    143:143:int compareTo(io.netty.buffer.ByteBuf) -> c
    148:148:io.netty.buffer.ByteBuf copy() -> z
    153:154:io.netty.buffer.ByteBuf copy(int,int) -> v
    159:159:io.netty.buffer.ByteBuf discardReadBytes() -> n
    164:164:io.netty.buffer.ByteBuf ensureWritable(int) -> g
    169:169:int ensureWritable(int,boolean) -> a
    174:174:io.netty.buffer.ByteBuf duplicate() -> A
    179:179:io.netty.buffer.ByteBuf retainedDuplicate() -> B
    190:191:byte getByte(int) -> i
    196:197:short getUnsignedByte(int) -> k
    202:204:io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> a
    209:211:io.netty.buffer.ByteBuf getBytes(int,byte[]) -> a
    216:216:io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> a
    221:223:io.netty.buffer.ByteBuf getBytes(int,io.netty.buffer.ByteBuf,int,int) -> a
    238:238:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> a
    253:254:int getInt(int) -> u
    259:260:int getIntLE(int) -> w
    265:266:long getUnsignedInt(int) -> y
    271:272:long getUnsignedIntLE(int) -> z
    277:278:long getLong(int) -> A
    289:290:int getMedium(int) -> t
    301:302:int getUnsignedMedium(int) -> r
    313:314:short getShort(int) -> l
    319:320:short getShortLE(int) -> n
    325:326:int getUnsignedShort(int) -> p
    331:332:int getUnsignedShortLE(int) -> q
    343:344:float getFloat(int) -> C
    349:350:double getDouble(int) -> D
    361:361:int hashCode() -> hashCode
    366:374:int indexOf(int,int,byte) -> a
    412:416:int forEachByte(io.netty.util.ByteProcessor) -> a
    422:435:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    450:454:int forEachByteDesc(int,int,io.netty.util.ByteProcessor) -> b
    459:460:io.netty.buffer.ByteBuf markReaderIndex() -> k
    470:470:java.nio.ByteOrder order() -> N
    475:486:io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> a
    491:491:boolean isReadable() -> g
    496:496:boolean isReadable(int) -> d
    501:504:int readableBytes() -> i
    516:517:byte readByte() -> q
    522:523:short readUnsignedByte() -> r
    528:530:io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> a
    535:537:io.netty.buffer.ByteBuf readBytes(byte[]) -> a
    559:561:io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf) -> a
    566:566:int readBytes(java.nio.channels.GatheringByteChannel,int) -> a
    576:577:io.netty.buffer.ByteBuf readBytes(int) -> E
    582:583:io.netty.buffer.ByteBuf readSlice(int) -> F
    588:589:io.netty.buffer.ByteBuf readRetainedSlice(int) -> G
    599:599:int readerIndex() -> d
    604:605:io.netty.buffer.ByteBuf readerIndex(int) -> b
    610:611:int readInt() -> w
    622:623:long readUnsignedInt() -> x
    634:635:long readLong() -> y
    646:647:int readMedium() -> u
    658:659:int readUnsignedMedium() -> v
    670:671:short readShort() -> s
    682:683:int readUnsignedShort() -> t
    718:719:io.netty.buffer.ByteBuf resetReaderIndex() -> l
    734:734:io.netty.buffer.ByteBuf setByte(int,int) -> b
    739:739:io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> b
    749:749:io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> b
    754:754:io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int) -> b
    774:774:io.netty.buffer.ByteBuf setZero(int,int) -> n
    779:779:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> a
    789:789:io.netty.buffer.ByteBuf setIndex(int,int) -> a
    794:794:io.netty.buffer.ByteBuf setInt(int,int) -> l
    804:804:io.netty.buffer.ByteBuf setLong(int,long) -> a
    814:814:io.netty.buffer.ByteBuf setMedium(int,int) -> h
    819:819:io.netty.buffer.ByteBuf setMediumLE(int,int) -> j
    824:824:io.netty.buffer.ByteBuf setShort(int,int) -> d
    829:829:io.netty.buffer.ByteBuf setShortLE(int,int) -> f
    849:851:io.netty.buffer.ByteBuf skipBytes(int) -> H
    856:856:io.netty.buffer.ByteBuf slice() -> C
    861:861:io.netty.buffer.ByteBuf retainedSlice() -> D
    866:867:io.netty.buffer.ByteBuf slice(int,int) -> o
    878:878:int nioBufferCount() -> S
    883:883:java.nio.ByteBuffer nioBuffer() -> E
    888:889:java.nio.ByteBuffer nioBuffer(int,int) -> u
    894:894:java.nio.ByteBuffer[] nioBuffers() -> F
    899:900:java.nio.ByteBuffer[] nioBuffers(int,int) -> w
    905:906:java.nio.ByteBuffer internalNioBuffer(int,int) -> t
    911:912:java.lang.String toString(int,int,java.nio.charset.Charset) -> a
    917:917:java.lang.String toString(java.nio.charset.Charset) -> a
    922:927:java.lang.String toString() -> toString
    933:933:boolean isWritable() -> h
    938:938:boolean isWritable(int) -> e
    943:943:int writableBytes() -> j
    958:958:io.netty.buffer.ByteBuf writeByte(int) -> I
    963:963:io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> b
    968:968:io.netty.buffer.ByteBuf writeBytes(byte[]) -> b
    973:973:io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> a
    978:978:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int) -> b
    988:988:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf) -> b
    998:998:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> a
    1008:1008:io.netty.buffer.ByteBuf writeInt(int) -> N
    1018:1018:io.netty.buffer.ByteBuf writeLong(long) -> a
    1028:1028:io.netty.buffer.ByteBuf writeMedium(int) -> L
    1033:1033:io.netty.buffer.ByteBuf writeMediumLE(int) -> M
    1038:1038:io.netty.buffer.ByteBuf writeZero(int) -> P
    1043:1043:int writerIndex() -> e
    1048:1048:io.netty.buffer.ByteBuf writerIndex(int) -> c
    1053:1053:io.netty.buffer.ByteBuf writeShort(int) -> J
    1058:1058:io.netty.buffer.ByteBuf writeShortLE(int) -> K
    1063:1063:io.netty.buffer.ByteBuf writeChar(int) -> O
    1068:1068:io.netty.buffer.ByteBuf writeFloat(float) -> a
    1073:1073:io.netty.buffer.ByteBuf writeDouble(double) -> a
    1078:1078:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> a
    1083:1083:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> a
    1087:1090:void checkIndex(int,int) -> c
    1093:1096:void checkReadableBytes(int) -> a
    1100:1100:io.netty.buffer.ByteBuf discardSomeReadBytes() -> o
    1105:1105:int refCnt() -> refCnt
    1110:1110:io.netty.buffer.ByteBuf retain() -> J
    1115:1115:io.netty.buffer.ByteBuf retain(int) -> T
    1120:1121:io.netty.buffer.ByteBuf touch() -> L
    1126:1127:io.netty.buffer.ByteBuf touch(java.lang.Object) -> a
    1132:1132:boolean release() -> release
    1137:1137:boolean release(int) -> release
    1142:1142:io.netty.buffer.ByteBuf unwrap() -> U
    1146:1146:java.lang.UnsupportedOperationException reject() -> p
    38:38:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    38:38:io.netty.util.ReferenceCounted touch() -> touch
    38:38:io.netty.util.ReferenceCounted retain(int) -> retain
    38:38:io.netty.util.ReferenceCounted retain() -> retain
    38:38:int compareTo(java.lang.Object) -> compareTo
    40:50:void <clinit>() -> <clinit>
io.netty.handler.codec.TooLongFrameException -> io.netty.c.a.R:
    29:30:void <init>() -> <init>
    43:44:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.UnsupportedMessageTypeException -> io.netty.c.a.S:
    27:29:void <init>(java.lang.Object,java.lang.Class[]) -> <init>
    31:31:void <init>() -> <init>
    38:39:void <init>(java.lang.String) -> <init>
    47:61:java.lang.String message(java.lang.String,java.lang.Class[]) -> a
io.netty.handler.codec.UnsupportedValueConverter -> io.netty.c.a.T:
    io.netty.handler.codec.UnsupportedValueConverter INSTANCE -> a
    24:24:void <init>() -> <init>
    28:28:io.netty.handler.codec.UnsupportedValueConverter instance() -> a
    33:33:java.lang.Object convertObject(java.lang.Object) -> b
    23:23:void <clinit>() -> <clinit>
io.netty.handler.codec.ValueConverter -> io.netty.c.a.U:
    java.lang.Object convertObject(java.lang.Object) -> b
io.netty.handler.codec.base64.Base64 -> io.netty.c.a.a.a:
    53:56:byte[] alphabet(io.netty.handler.codec.base64.Base64Dialect) -> b
    60:63:byte[] decodabet(io.netty.handler.codec.base64.Base64Dialect) -> c
    67:70:boolean breakLines(io.netty.handler.codec.base64.Base64Dialect) -> d
    74:74:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf) -> a
    78:78:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,io.netty.handler.codec.base64.Base64Dialect) -> a
    82:82:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,boolean) -> a
    87:93:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,boolean,io.netty.handler.codec.base64.Base64Dialect) -> a
    111:111:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,int,int,boolean,io.netty.handler.codec.base64.Base64Dialect) -> a
    116:151:io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,int,int,boolean,io.netty.handler.codec.base64.Base64Dialect,io.netty.buffer.ByteBufAllocator) -> a
    167:196:void encode3to4(io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf,int,byte[]) -> a
    201:210:int encodedBufferSize(int,boolean) -> a
    214:214:int toInt(byte) -> a
    218:218:int toIntBE(short) -> a
    222:222:int toIntLE(short) -> b
    226:226:int toIntBE(int) -> b
    230:230:int toIntLE(int) -> c
    236:259:void encode3to4BigEndian(int,int,io.netty.buffer.ByteBuf,int,byte[]) -> a
    264:287:void encode3to4LittleEndian(int,int,io.netty.buffer.ByteBuf,int,byte[]) -> b
    290:290:io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf) -> b
    294:300:io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,io.netty.handler.codec.base64.Base64Dialect) -> b
    310:310:io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,int,int,io.netty.handler.codec.base64.Base64Dialect) -> a
    315:323:io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,int,int,io.netty.handler.codec.base64.Base64Dialect,io.netty.buffer.ByteBufAllocator) -> a
    328:328:int decodedBufferSize(int) -> a
    37:37:byte[] access$100(io.netty.handler.codec.base64.Base64Dialect) -> a
io.netty.handler.codec.base64.Base64$1 -> io.netty.c.a.a.b:
io.netty.handler.codec.base64.Base64$Decoder -> io.netty.c.a.a.c:
    byte[] b4 -> a
    int b4Posn -> b
    byte sbiCrop -> o
    byte sbiDecode -> p
    byte[] decodabet -> q
    int outBuffPosn -> r
    io.netty.buffer.ByteBuf dest -> s
    331:332:void <init>() -> <init>
    341:350:io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.base64.Base64Dialect) -> a
    356:374:boolean process(byte) -> a
    379:447:int decode4to3(byte[],io.netty.buffer.ByteBuf,int,byte[]) -> a
    331:331:void <init>(io.netty.handler.codec.base64.Base64$1) -> <init>
io.netty.handler.codec.base64.Base64Dialect -> io.netty.c.a.a.d:
    io.netty.handler.codec.base64.Base64Dialect STANDARD -> a
    io.netty.handler.codec.base64.Base64Dialect URL_SAFE -> b
    io.netty.handler.codec.base64.Base64Dialect ORDERED -> c
    byte[] alphabet -> d
    byte[] decodabet -> e
    boolean breakLinesByDefault -> f
    io.netty.handler.codec.base64.Base64Dialect[] $VALUES -> g
    29:29:io.netty.handler.codec.base64.Base64Dialect[] values() -> values
    29:29:io.netty.handler.codec.base64.Base64Dialect valueOf(java.lang.String) -> valueOf
    202:206:void <init>(java.lang.String,int,byte[],byte[],boolean) -> <init>
    29:145:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.ByteBufChecksum -> io.netty.c.a.b.a:
    java.lang.reflect.Method ADLER32_UPDATE_METHOD -> a
    java.lang.reflect.Method CRC32_UPDATE_METHOD -> b
    io.netty.util.ByteProcessor updateProcessor -> c
    35:46:void <init>() -> <init>
    55:64:java.lang.reflect.Method updateByteBuffer(java.util.zip.Checksum) -> b
    68:75:io.netty.handler.codec.compression.ByteBufChecksum wrapChecksum(java.util.zip.Checksum) -> a
    82:87:void update(io.netty.buffer.ByteBuf,int,int) -> a
    42:44:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.ByteBufChecksum$1 -> io.netty.c.a.b.b:
    io.netty.handler.codec.compression.ByteBufChecksum this$0 -> a
    46:46:void <init>(io.netty.handler.codec.compression.ByteBufChecksum) -> <init>
    49:50:boolean process(byte) -> a
io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum -> io.netty.c.a.b.c:
    java.lang.reflect.Method method -> b
    93:95:void <init>(java.util.zip.Checksum,java.lang.reflect.Method) -> <init>
    99:108:void update(io.netty.buffer.ByteBuf,int,int) -> a
io.netty.handler.codec.compression.ByteBufChecksum$SlowByteBufChecksum -> io.netty.c.a.b.d:
    java.util.zip.Checksum checksum -> a
    115:117:void <init>(java.util.zip.Checksum) -> <init>
    121:122:void update(int) -> update
    126:127:void update(byte[],int,int) -> update
    131:131:long getValue() -> getValue
    136:137:void reset() -> reset
io.netty.handler.codec.compression.CompressionException -> io.netty.c.a.b.e:
    30:31:void <init>() -> <init>
    44:45:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.compression.CompressionUtil -> io.netty.c.a.b.f:
    40:41:java.nio.ByteBuffer safeNioBuffer(io.netty.buffer.ByteBuf) -> a
io.netty.handler.codec.compression.DecompressionException -> io.netty.c.a.b.g:
    30:31:void <init>() -> <init>
    37:38:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    44:45:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.compression.JZlibDecoder -> io.netty.c.a.b.h:
    com.jcraft.jzlib.Inflater z -> a
    byte[] dictionary -> b
    boolean finished -> c
    37:38:void <init>() -> <init>
    27:54:void <init>(io.netty.handler.codec.compression.ZlibWrapper) -> <init>
    87:172:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
io.netty.handler.codec.compression.JZlibEncoder -> io.netty.c.a.b.i:
    int wrapperOverhead -> a
    com.jcraft.jzlib.Deflater z -> b
    boolean finished -> c
    io.netty.channel.ChannelHandlerContext ctx -> d
    50:51:void <init>() -> <init>
    66:67:void <init>(int) -> <init>
    93:94:void <init>(io.netty.handler.codec.compression.ZlibWrapper,int) -> <init>
    38:150:void <init>(io.netty.handler.codec.compression.ZlibWrapper,int,int,int) -> <init>
    281:338:void encode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> a
    344:361:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    364:403:io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> a
    408:409:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    35:35:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf) -> a
io.netty.handler.codec.compression.JZlibEncoder$2 -> io.netty.c.a.b.j:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.channel.ChannelPromise val$promise -> b
    io.netty.handler.codec.compression.JZlibEncoder this$0 -> c
    345:345:void <init>(io.netty.handler.codec.compression.JZlibEncoder,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    348:349:void operationComplete(io.netty.channel.ChannelFuture) -> a
    345:345:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.compression.JZlibEncoder$3 -> io.netty.c.a.b.k:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.channel.ChannelPromise val$promise -> b
    io.netty.handler.codec.compression.JZlibEncoder this$0 -> c
    354:354:void <init>(io.netty.handler.codec.compression.JZlibEncoder,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    357:358:void run() -> run
io.netty.handler.codec.compression.JdkZlibDecoder -> io.netty.c.a.b.l:
    java.util.zip.Inflater inflater -> a
    byte[] dictionary -> b
    io.netty.handler.codec.compression.ByteBufChecksum crc -> c
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState gzipState -> d
    int flags -> e
    int xlen -> f
    boolean finished -> g
    boolean decideZlibOrNone -> h
    66:67:void <init>() -> <init>
    84:85:void <init>(io.netty.handler.codec.compression.ZlibWrapper) -> <init>
    54:113:void <init>(io.netty.handler.codec.compression.ZlibWrapper,byte[]) -> <init>
    122:223:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    227:231:void handlerRemoved0(io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    234:340:boolean readGZIPHeader(io.netty.buffer.ByteBuf) -> a
    345:361:boolean readGZIPFooter(io.netty.buffer.ByteBuf) -> b
    365:374:void verifyCrc(io.netty.buffer.ByteBuf) -> c
    384:384:boolean looksLikeZlib(short) -> a
io.netty.handler.codec.compression.JdkZlibDecoder$1 -> io.netty.c.a.b.m:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> a
    int[] $SwitchMap$io$netty$handler$codec$compression$JdkZlibDecoder$GzipState -> b
    91:145:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.JdkZlibDecoder$GzipState -> io.netty.c.a.b.n:
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_START -> a
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_END -> b
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FLG_READ -> c
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState XLEN_READ -> d
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_FNAME -> e
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_COMMENT -> f
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState PROCESS_FHCRC -> g
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FOOTER_START -> h
    io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] $VALUES -> i
    43:43:io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] values() -> values
    43:43:io.netty.handler.codec.compression.JdkZlibDecoder$GzipState valueOf(java.lang.String) -> valueOf
    43:43:void <init>(java.lang.String,int) -> <init>
    43:51:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.JdkZlibEncoder -> io.netty.c.a.b.o:
    io.netty.handler.codec.compression.ZlibWrapper wrapper -> a
    java.util.zip.Deflater deflater -> b
    boolean finished -> c
    io.netty.channel.ChannelHandlerContext ctx -> d
    java.util.zip.CRC32 crc -> e
    byte[] gzipHeader -> f
    boolean writeHeader -> g
    54:55:void <init>() -> <init>
    69:70:void <init>(int) -> <init>
    43:109:void <init>(io.netty.handler.codec.compression.ZlibWrapper,int) -> <init>
    192:231:void encode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> a
    236:249:io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,boolean) -> a
    254:271:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    274:310:io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> a
    316:321:void deflate(io.netty.buffer.ByteBuf) -> a
    325:326:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    33:33:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf) -> a
    33:33:io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> a
    44:44:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.JdkZlibEncoder$2 -> io.netty.c.a.b.p:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.channel.ChannelPromise val$promise -> b
    io.netty.handler.codec.compression.JdkZlibEncoder this$0 -> c
    255:255:void <init>(io.netty.handler.codec.compression.JdkZlibEncoder,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    258:259:void operationComplete(io.netty.channel.ChannelFuture) -> a
    255:255:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.compression.JdkZlibEncoder$3 -> io.netty.c.a.b.q:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.channel.ChannelPromise val$promise -> b
    io.netty.handler.codec.compression.JdkZlibEncoder this$0 -> c
    264:264:void <init>(io.netty.handler.codec.compression.JdkZlibEncoder,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    267:268:void run() -> run
io.netty.handler.codec.compression.JdkZlibEncoder$4 -> io.netty.c.a.b.r:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> a
    238:238:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.ZlibCodecFactory -> io.netty.c.a.b.s:
    io.netty.util.internal.logging.InternalLogger logger -> a
    boolean noJdkZlibDecoder -> b
    boolean noJdkZlibEncoder -> c
    boolean supportsWindowSizeAndMemLevel -> d
    79:83:io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(io.netty.handler.codec.compression.ZlibWrapper,int,int,int) -> a
    121:124:io.netty.handler.codec.compression.ZlibDecoder newZlibDecoder(io.netty.handler.codec.compression.ZlibWrapper) -> a
    136:138:void <init>() -> <init>
    27:45:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.ZlibDecoder -> io.netty.c.a.b.t:
    24:24:void <init>() -> <init>
io.netty.handler.codec.compression.ZlibEncoder -> io.netty.c.a.b.u:
    29:30:void <init>() -> <init>
io.netty.handler.codec.compression.ZlibUtil -> io.netty.c.a.b.v:
    28:28:void fail(com.jcraft.jzlib.Inflater,java.lang.String,int) -> a
    32:32:void fail(com.jcraft.jzlib.Deflater,java.lang.String,int) -> a
    36:36:io.netty.handler.codec.compression.DecompressionException inflaterException(com.jcraft.jzlib.Inflater,java.lang.String,int) -> b
    40:40:io.netty.handler.codec.compression.CompressionException deflaterException(com.jcraft.jzlib.Deflater,java.lang.String,int) -> b
    45:61:com.jcraft.jzlib.JZlib$WrapperType convertWrapperType(io.netty.handler.codec.compression.ZlibWrapper) -> a
    66:80:int wrapperOverhead(io.netty.handler.codec.compression.ZlibWrapper) -> b
io.netty.handler.codec.compression.ZlibUtil$1 -> io.netty.c.a.b.w:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> a
    45:45:void <clinit>() -> <clinit>
io.netty.handler.codec.compression.ZlibWrapper -> io.netty.c.a.b.x:
    io.netty.handler.codec.compression.ZlibWrapper ZLIB -> a
    io.netty.handler.codec.compression.ZlibWrapper GZIP -> b
    io.netty.handler.codec.compression.ZlibWrapper NONE -> c
    io.netty.handler.codec.compression.ZlibWrapper ZLIB_OR_NONE -> d
    io.netty.handler.codec.compression.ZlibWrapper[] $VALUES -> e
    22:22:io.netty.handler.codec.compression.ZlibWrapper[] values() -> values
    22:22:io.netty.handler.codec.compression.ZlibWrapper valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:39:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.AbstractDnsMessage -> io.netty.c.a.c.a:
    io.netty.util.ResourceLeakDetector leakDetector -> b
    int SECTION_QUESTION -> c
    io.netty.util.ResourceLeakTracker leak -> d
    short id -> e
    io.netty.handler.codec.dns.DnsOpCode opCode -> f
    boolean recursionDesired -> g
    byte z -> h
    java.lang.Object questions -> i
    java.lang.Object answers -> j
    java.lang.Object authorities -> k
    java.lang.Object additionals -> l
    boolean $assertionsDisabled -> a
    44:70:void <init>(int,io.netty.handler.codec.dns.DnsOpCode) -> <init>
    74:74:int id() -> a
    79:80:io.netty.handler.codec.dns.DnsMessage setId(int) -> a
    85:85:io.netty.handler.codec.dns.DnsOpCode opCode() -> b
    90:91:io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> a
    96:96:boolean isRecursionDesired() -> c
    101:102:io.netty.handler.codec.dns.DnsMessage setRecursionDesired(boolean) -> a
    107:107:int z() -> d
    112:113:io.netty.handler.codec.dns.DnsMessage setZ(int) -> b
    118:118:int count(io.netty.handler.codec.dns.DnsSection) -> a
    122:132:int count(int) -> d
    146:146:io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection) -> b
    150:165:io.netty.handler.codec.dns.DnsRecord recordAt(int) -> e
    170:170:io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection,int) -> a
    174:189:io.netty.handler.codec.dns.DnsRecord recordAt(int,int) -> a
    232:233:io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> a
    237:256:void addRecord(int,io.netty.handler.codec.dns.DnsRecord) -> a
    333:336:io.netty.handler.codec.dns.DnsMessage clear() -> e
    340:353:void clear(int) -> f
    357:357:io.netty.handler.codec.dns.DnsMessage touch() -> f
    362:365:io.netty.handler.codec.dns.DnsMessage touch(java.lang.Object) -> a
    370:370:io.netty.handler.codec.dns.DnsMessage retain() -> g
    375:375:io.netty.handler.codec.dns.DnsMessage retain(int) -> c
    380:387:void deallocate() -> deallocate
    391:412:boolean equals(java.lang.Object) -> equals
    417:417:int hashCode() -> hashCode
    421:432:java.lang.Object sectionAt(int) -> g
    436:451:void setSection(int,java.lang.Object) -> a
    455:455:int sectionOrdinal(io.netty.handler.codec.dns.DnsSection) -> c
    459:463:io.netty.handler.codec.dns.DnsRecord checkQuestion(int,io.netty.handler.codec.dns.DnsRecord) -> b
    468:468:io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object) -> b
    472:472:java.util.ArrayList newRecordList() -> h
    35:35:io.netty.util.ReferenceCounted touch() -> touch
    35:35:io.netty.util.ReferenceCounted retain(int) -> retain
    35:35:io.netty.util.ReferenceCounted retain() -> retain
    35:35:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    35:41:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.AbstractDnsOptPseudoRrRecord -> io.netty.c.a.c.b:
    31:32:void <init>(int,int,int) -> <init>
    41:41:long packIntoLong(int,int) -> a
    46:46:int extendedRcode() -> a
    51:51:int version() -> b
    56:56:int flags() -> c
    61:61:java.lang.String toString() -> toString
    65:76:java.lang.StringBuilder toStringBuilder() -> d
io.netty.handler.codec.dns.AbstractDnsRecord -> io.netty.c.a.c.c:
    java.lang.String name -> a
    io.netty.handler.codec.dns.DnsRecordType type -> b
    short dnsClass -> c
    long timeToLive -> d
    int hashCode -> e
    45:46:void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,long) -> <init>
    64:76:void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long) -> <init>
    79:82:java.lang.String appendTrailingDot(java.lang.String) -> a
    87:87:java.lang.String name() -> e
    92:92:io.netty.handler.codec.dns.DnsRecordType type() -> f
    97:97:int dnsClass() -> g
    102:102:long timeToLive() -> h
    107:123:boolean equals(java.lang.Object) -> equals
    128:133:int hashCode() -> hashCode
    138:152:java.lang.String toString() -> toString
io.netty.handler.codec.dns.DatagramDnsQuery -> io.netty.c.a.c.d:
    java.net.InetSocketAddress sender -> b
    java.net.InetSocketAddress recipient -> c
    43:44:void <init>(java.net.InetSocketAddress,java.net.InetSocketAddress,int) -> <init>
    56:64:void <init>(java.net.InetSocketAddress,java.net.InetSocketAddress,int,io.netty.handler.codec.dns.DnsOpCode) -> <init>
    68:68:io.netty.handler.codec.dns.DatagramDnsQuery content() -> h
    73:73:java.net.InetSocketAddress sender() -> i
    78:78:java.net.InetSocketAddress recipient() -> j
    83:83:io.netty.handler.codec.dns.DatagramDnsQuery setId(int) -> d
    88:88:io.netty.handler.codec.dns.DatagramDnsQuery setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> b
    93:93:io.netty.handler.codec.dns.DatagramDnsQuery setRecursionDesired(boolean) -> b
    98:98:io.netty.handler.codec.dns.DatagramDnsQuery setZ(int) -> e
    108:108:io.netty.handler.codec.dns.DatagramDnsQuery addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> b
    123:123:io.netty.handler.codec.dns.DatagramDnsQuery clear() -> k
    128:128:io.netty.handler.codec.dns.DatagramDnsQuery touch() -> l
    133:133:io.netty.handler.codec.dns.DatagramDnsQuery touch(java.lang.Object) -> b
    138:138:io.netty.handler.codec.dns.DatagramDnsQuery retain() -> m
    143:143:io.netty.handler.codec.dns.DatagramDnsQuery retain(int) -> f
    148:178:boolean equals(java.lang.Object) -> equals
    183:190:int hashCode() -> hashCode
    27:27:io.netty.handler.codec.dns.DnsQuery retain(int) -> g
    27:27:io.netty.handler.codec.dns.DnsQuery retain() -> n
    27:27:io.netty.handler.codec.dns.DnsQuery touch(java.lang.Object) -> c
    27:27:io.netty.handler.codec.dns.DnsQuery touch() -> o
    27:27:io.netty.handler.codec.dns.DnsQuery clear() -> p
    27:27:io.netty.handler.codec.dns.DnsQuery addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> c
    27:27:io.netty.handler.codec.dns.DnsQuery setZ(int) -> h
    27:27:io.netty.handler.codec.dns.DnsQuery setRecursionDesired(boolean) -> c
    27:27:io.netty.handler.codec.dns.DnsQuery setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> c
    27:27:io.netty.handler.codec.dns.DnsQuery setId(int) -> i
    27:27:io.netty.handler.codec.dns.DnsMessage retain(int) -> c
    27:27:io.netty.handler.codec.dns.DnsMessage retain() -> g
    27:27:io.netty.handler.codec.dns.DnsMessage touch(java.lang.Object) -> a
    27:27:io.netty.handler.codec.dns.DnsMessage touch() -> f
    27:27:io.netty.handler.codec.dns.DnsMessage clear() -> e
    27:27:io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> a
    27:27:io.netty.handler.codec.dns.DnsMessage setZ(int) -> b
    27:27:io.netty.handler.codec.dns.DnsMessage setRecursionDesired(boolean) -> a
    27:27:io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> a
    27:27:io.netty.handler.codec.dns.DnsMessage setId(int) -> a
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
    27:27:io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    27:27:io.netty.channel.AddressedEnvelope touch() -> touch
    27:27:io.netty.channel.AddressedEnvelope retain(int) -> retain
    27:27:io.netty.channel.AddressedEnvelope retain() -> retain
    27:27:java.net.SocketAddress recipient() -> recipient
    27:27:java.net.SocketAddress sender() -> sender
    27:27:java.lang.Object content() -> content
io.netty.handler.codec.dns.DatagramDnsQueryEncoder -> io.netty.c.a.c.e:
    io.netty.handler.codec.dns.DnsRecordEncoder recordEncoder -> a
    45:46:void <init>() -> <init>
    51:53:void <init>(io.netty.handler.codec.dns.DnsRecordEncoder) -> <init>
    60:77:void encode(io.netty.channel.ChannelHandlerContext,io.netty.channel.AddressedEnvelope,java.util.List) -> a
    86:86:io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext,io.netty.channel.AddressedEnvelope) -> a
    96:107:void encodeHeader(io.netty.handler.codec.dns.DnsQuery,io.netty.buffer.ByteBuf) -> a
    110:114:void encodeQuestions(io.netty.handler.codec.dns.DnsQuery,io.netty.buffer.ByteBuf) -> b
    117:121:void encodeRecords(io.netty.handler.codec.dns.DnsQuery,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf) -> a
    35:35:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
io.netty.handler.codec.dns.DatagramDnsResponse -> io.netty.c.a.c.f:
    java.net.InetSocketAddress sender -> b
    java.net.InetSocketAddress recipient -> c
    70:78:void <init>(java.net.InetSocketAddress,java.net.InetSocketAddress,int,io.netty.handler.codec.dns.DnsOpCode,io.netty.handler.codec.dns.DnsResponseCode) -> <init>
    82:82:io.netty.handler.codec.dns.DatagramDnsResponse content() -> h
    87:87:java.net.InetSocketAddress sender() -> i
    92:92:java.net.InetSocketAddress recipient() -> j
    97:97:io.netty.handler.codec.dns.DatagramDnsResponse setAuthoritativeAnswer(boolean) -> b
    102:102:io.netty.handler.codec.dns.DatagramDnsResponse setTruncated(boolean) -> c
    107:107:io.netty.handler.codec.dns.DatagramDnsResponse setRecursionAvailable(boolean) -> d
    112:112:io.netty.handler.codec.dns.DatagramDnsResponse setCode(io.netty.handler.codec.dns.DnsResponseCode) -> a
    117:117:io.netty.handler.codec.dns.DatagramDnsResponse setId(int) -> d
    122:122:io.netty.handler.codec.dns.DatagramDnsResponse setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> b
    127:127:io.netty.handler.codec.dns.DatagramDnsResponse setRecursionDesired(boolean) -> e
    132:132:io.netty.handler.codec.dns.DatagramDnsResponse setZ(int) -> e
    142:142:io.netty.handler.codec.dns.DatagramDnsResponse addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> b
    157:157:io.netty.handler.codec.dns.DatagramDnsResponse clear() -> k
    162:162:io.netty.handler.codec.dns.DatagramDnsResponse touch() -> l
    167:167:io.netty.handler.codec.dns.DatagramDnsResponse touch(java.lang.Object) -> b
    172:172:io.netty.handler.codec.dns.DatagramDnsResponse retain() -> m
    177:177:io.netty.handler.codec.dns.DatagramDnsResponse retain(int) -> f
    182:212:boolean equals(java.lang.Object) -> equals
    217:224:int hashCode() -> hashCode
    27:27:io.netty.handler.codec.dns.DnsResponse retain(int) -> g
    27:27:io.netty.handler.codec.dns.DnsResponse retain() -> n
    27:27:io.netty.handler.codec.dns.DnsResponse touch(java.lang.Object) -> c
    27:27:io.netty.handler.codec.dns.DnsResponse touch() -> o
    27:27:io.netty.handler.codec.dns.DnsResponse clear() -> p
    27:27:io.netty.handler.codec.dns.DnsResponse addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> c
    27:27:io.netty.handler.codec.dns.DnsResponse setZ(int) -> h
    27:27:io.netty.handler.codec.dns.DnsResponse setRecursionDesired(boolean) -> f
    27:27:io.netty.handler.codec.dns.DnsResponse setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> c
    27:27:io.netty.handler.codec.dns.DnsResponse setId(int) -> i
    27:27:io.netty.handler.codec.dns.DnsResponse setCode(io.netty.handler.codec.dns.DnsResponseCode) -> b
    27:27:io.netty.handler.codec.dns.DnsResponse setRecursionAvailable(boolean) -> g
    27:27:io.netty.handler.codec.dns.DnsResponse setTruncated(boolean) -> h
    27:27:io.netty.handler.codec.dns.DnsResponse setAuthoritativeAnswer(boolean) -> i
    27:27:io.netty.handler.codec.dns.DnsMessage retain(int) -> c
    27:27:io.netty.handler.codec.dns.DnsMessage retain() -> g
    27:27:io.netty.handler.codec.dns.DnsMessage touch(java.lang.Object) -> a
    27:27:io.netty.handler.codec.dns.DnsMessage touch() -> f
    27:27:io.netty.handler.codec.dns.DnsMessage clear() -> e
    27:27:io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> a
    27:27:io.netty.handler.codec.dns.DnsMessage setZ(int) -> b
    27:27:io.netty.handler.codec.dns.DnsMessage setRecursionDesired(boolean) -> a
    27:27:io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> a
    27:27:io.netty.handler.codec.dns.DnsMessage setId(int) -> a
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
    27:27:io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    27:27:io.netty.channel.AddressedEnvelope touch() -> touch
    27:27:io.netty.channel.AddressedEnvelope retain(int) -> retain
    27:27:io.netty.channel.AddressedEnvelope retain() -> retain
    27:27:java.net.SocketAddress recipient() -> recipient
    27:27:java.net.SocketAddress sender() -> sender
    27:27:java.lang.Object content() -> content
io.netty.handler.codec.dns.DatagramDnsResponseDecoder -> io.netty.c.a.c.g:
    io.netty.handler.codec.dns.DnsRecordDecoder recordDecoder -> a
    43:44:void <init>() -> <init>
    49:51:void <init>(io.netty.handler.codec.dns.DnsRecordDecoder) -> <init>
    55:77:void decode(io.netty.channel.ChannelHandlerContext,io.netty.channel.socket.DatagramPacket,java.util.List) -> a
    80:98:io.netty.handler.codec.dns.DnsResponse newResponse(io.netty.channel.socket.DatagramPacket,io.netty.buffer.ByteBuf) -> a
    102:105:void decodeQuestions(io.netty.handler.codec.dns.DnsResponse,io.netty.buffer.ByteBuf,int) -> a
    109:118:void decodeRecords(io.netty.handler.codec.dns.DnsResponse,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf,int) -> a
    33:33:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> a
io.netty.handler.codec.dns.DefaultDnsPtrRecord -> io.netty.c.a.c.h:
    java.lang.String hostname -> a
    46:48:void <init>(java.lang.String,int,long,java.lang.String) -> <init>
    52:52:java.lang.String hostname() -> a
    57:71:java.lang.String toString() -> toString
io.netty.handler.codec.dns.DefaultDnsQuery -> io.netty.c.a.c.i:
    42:43:void <init>(int,io.netty.handler.codec.dns.DnsOpCode) -> <init>
    47:47:io.netty.handler.codec.dns.DnsQuery setId(int) -> i
    52:52:io.netty.handler.codec.dns.DnsQuery setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> c
    57:57:io.netty.handler.codec.dns.DnsQuery setRecursionDesired(boolean) -> c
    62:62:io.netty.handler.codec.dns.DnsQuery setZ(int) -> h
    72:72:io.netty.handler.codec.dns.DnsQuery addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> c
    87:87:io.netty.handler.codec.dns.DnsQuery clear() -> p
    92:92:io.netty.handler.codec.dns.DnsQuery touch() -> o
    97:97:io.netty.handler.codec.dns.DnsQuery touch(java.lang.Object) -> c
    102:102:io.netty.handler.codec.dns.DnsQuery retain() -> n
    107:107:io.netty.handler.codec.dns.DnsQuery retain(int) -> g
    112:112:java.lang.String toString() -> toString
    23:23:io.netty.handler.codec.dns.DnsMessage retain(int) -> c
    23:23:io.netty.handler.codec.dns.DnsMessage retain() -> g
    23:23:io.netty.handler.codec.dns.DnsMessage touch(java.lang.Object) -> a
    23:23:io.netty.handler.codec.dns.DnsMessage touch() -> f
    23:23:io.netty.handler.codec.dns.DnsMessage clear() -> e
    23:23:io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> a
    23:23:io.netty.handler.codec.dns.DnsMessage setZ(int) -> b
    23:23:io.netty.handler.codec.dns.DnsMessage setRecursionDesired(boolean) -> a
    23:23:io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> a
    23:23:io.netty.handler.codec.dns.DnsMessage setId(int) -> a
    23:23:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    23:23:io.netty.util.ReferenceCounted touch() -> touch
    23:23:io.netty.util.ReferenceCounted retain(int) -> retain
    23:23:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.dns.DefaultDnsQuestion -> io.netty.c.a.c.j:
    34:35:void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType) -> <init>
    53:54:void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int) -> <init>
    58:70:java.lang.String toString() -> toString
io.netty.handler.codec.dns.DefaultDnsRawRecord -> io.netty.c.a.c.k:
    io.netty.buffer.ByteBuf content -> a
    61:63:void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long,io.netty.buffer.ByteBuf) -> <init>
    67:67:io.netty.buffer.ByteBuf content() -> content
    92:92:int refCnt() -> refCnt
    97:98:io.netty.handler.codec.dns.DnsRawRecord retain() -> a
    103:104:io.netty.handler.codec.dns.DnsRawRecord retain(int) -> a
    109:109:boolean release() -> release
    114:114:boolean release(int) -> release
    119:120:io.netty.handler.codec.dns.DnsRawRecord touch() -> b
    125:126:io.netty.handler.codec.dns.DnsRawRecord touch(java.lang.Object) -> a
    131:153:java.lang.String toString() -> toString
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.dns.DefaultDnsRecordDecoder -> io.netty.c.a.c.l:
    36:36:void <init>() -> <init>
    40:43:io.netty.handler.codec.dns.DnsQuestion decodeQuestion(io.netty.buffer.ByteBuf) -> a
    48:73:io.netty.handler.codec.dns.DnsRecord decodeRecord(io.netty.buffer.ByteBuf) -> b
    97:102:io.netty.handler.codec.dns.DnsRecord decodeRecord(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long,io.netty.buffer.ByteBuf,int,int) -> a
    114:114:java.lang.String decodeName0(io.netty.buffer.ByteBuf) -> c
    126:189:java.lang.String decodeName(io.netty.buffer.ByteBuf) -> d
io.netty.handler.codec.dns.DefaultDnsRecordEncoder -> io.netty.c.a.c.m:
    39:39:void <init>() -> <init>
    43:46:void encodeQuestion(io.netty.handler.codec.dns.DnsQuestion,io.netty.buffer.ByteBuf) -> a
    50:63:void encodeRecord(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf) -> a
    66:70:void encodeRecord0(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf) -> b
    73:75:void encodePtrRecord(io.netty.handler.codec.dns.DnsPtrRecord,io.netty.buffer.ByteBuf) -> a
    78:80:void encodeOptPseudoRecord(io.netty.handler.codec.dns.DnsOptPseudoRecord,io.netty.buffer.ByteBuf) -> a
    83:126:void encodeOptEcsRecord(io.netty.handler.codec.dns.DnsOptEcsRecord,io.netty.buffer.ByteBuf) -> a
    130:130:int calculateEcsAddressLength(int,int) -> a
    134:141:void encodeRawRecord(io.netty.handler.codec.dns.DnsRawRecord,io.netty.buffer.ByteBuf) -> a
    144:163:void encodeName(java.lang.String,io.netty.buffer.ByteBuf) -> a
    166:186:byte padWithZeros(byte,int) -> a
io.netty.handler.codec.dns.DefaultDnsResponse -> io.netty.c.a.c.n:
    boolean authoritativeAnswer -> b
    boolean truncated -> c
    boolean recursionAvailable -> d
    io.netty.handler.codec.dns.DnsResponseCode code -> e
    61:63:void <init>(int,io.netty.handler.codec.dns.DnsOpCode,io.netty.handler.codec.dns.DnsResponseCode) -> <init>
    67:67:boolean isAuthoritativeAnswer() -> q
    72:73:io.netty.handler.codec.dns.DnsResponse setAuthoritativeAnswer(boolean) -> i
    78:78:boolean isTruncated() -> r
    83:84:io.netty.handler.codec.dns.DnsResponse setTruncated(boolean) -> h
    89:89:boolean isRecursionAvailable() -> s
    94:95:io.netty.handler.codec.dns.DnsResponse setRecursionAvailable(boolean) -> g
    100:100:io.netty.handler.codec.dns.DnsResponseCode code() -> t
    105:106:io.netty.handler.codec.dns.DnsResponse setCode(io.netty.handler.codec.dns.DnsResponseCode) -> b
    111:111:io.netty.handler.codec.dns.DnsResponse setId(int) -> i
    116:116:io.netty.handler.codec.dns.DnsResponse setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> c
    121:121:io.netty.handler.codec.dns.DnsResponse setRecursionDesired(boolean) -> f
    126:126:io.netty.handler.codec.dns.DnsResponse setZ(int) -> h
    136:136:io.netty.handler.codec.dns.DnsResponse addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> c
    151:151:io.netty.handler.codec.dns.DnsResponse clear() -> p
    156:156:io.netty.handler.codec.dns.DnsResponse touch() -> o
    161:161:io.netty.handler.codec.dns.DnsResponse touch(java.lang.Object) -> c
    166:166:io.netty.handler.codec.dns.DnsResponse retain() -> n
    171:171:io.netty.handler.codec.dns.DnsResponse retain(int) -> g
    176:176:java.lang.String toString() -> toString
    25:25:io.netty.handler.codec.dns.DnsMessage retain(int) -> c
    25:25:io.netty.handler.codec.dns.DnsMessage retain() -> g
    25:25:io.netty.handler.codec.dns.DnsMessage touch(java.lang.Object) -> a
    25:25:io.netty.handler.codec.dns.DnsMessage touch() -> f
    25:25:io.netty.handler.codec.dns.DnsMessage clear() -> e
    25:25:io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> a
    25:25:io.netty.handler.codec.dns.DnsMessage setZ(int) -> b
    25:25:io.netty.handler.codec.dns.DnsMessage setRecursionDesired(boolean) -> a
    25:25:io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode) -> a
    25:25:io.netty.handler.codec.dns.DnsMessage setId(int) -> a
    25:25:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:io.netty.util.ReferenceCounted touch() -> touch
    25:25:io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.dns.DnsMessage -> io.netty.c.a.c.o:
    int id() -> a
    io.netty.handler.codec.dns.DnsOpCode opCode() -> b
    boolean isRecursionDesired() -> c
    int z() -> d
    int count(io.netty.handler.codec.dns.DnsSection) -> a
    io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection) -> b
    io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection,int) -> a
io.netty.handler.codec.dns.DnsMessageUtil -> io.netty.c.a.c.p:
    29:31:java.lang.StringBuilder appendQuery(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsQuery) -> a
    35:37:java.lang.StringBuilder appendResponse(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsResponse) -> a
    42:72:java.lang.StringBuilder appendRecordClass(java.lang.StringBuilder,int) -> a
    76:92:void appendQueryHeader(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsQuery) -> b
    95:136:void appendResponseHeader(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsResponse) -> b
    140:161:java.lang.StringBuilder appendAddresses(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage) -> a
    165:169:void appendAllRecords(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage) -> b
    172:178:void appendRecords(java.lang.StringBuilder,io.netty.handler.codec.dns.DnsMessage,io.netty.handler.codec.dns.DnsSection) -> a
io.netty.handler.codec.dns.DnsOpCode -> io.netty.c.a.c.q:
    io.netty.handler.codec.dns.DnsOpCode QUERY -> a
    io.netty.handler.codec.dns.DnsOpCode IQUERY -> b
    io.netty.handler.codec.dns.DnsOpCode STATUS -> c
    io.netty.handler.codec.dns.DnsOpCode NOTIFY -> d
    io.netty.handler.codec.dns.DnsOpCode UPDATE -> e
    byte byteValue -> f
    java.lang.String name -> g
    java.lang.String text -> h
    57:70:io.netty.handler.codec.dns.DnsOpCode valueOf(int) -> a
    78:79:void <init>(int) -> <init>
    81:84:void <init>(int,java.lang.String) -> <init>
    87:87:byte byteValue() -> a
    92:92:int hashCode() -> hashCode
    97:105:boolean equals(java.lang.Object) -> equals
    110:110:int compareTo(io.netty.handler.codec.dns.DnsOpCode) -> a
    115:119:java.lang.String toString() -> toString
    25:25:int compareTo(java.lang.Object) -> compareTo
    31:51:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.DnsOptEcsRecord -> io.netty.c.a.c.r:
    int sourcePrefixLength() -> a
    int scopePrefixLength() -> b
    byte[] address() -> c
io.netty.handler.codec.dns.DnsOptPseudoRecord -> io.netty.c.a.c.s:
io.netty.handler.codec.dns.DnsPtrRecord -> io.netty.c.a.c.t:
    java.lang.String hostname() -> a
io.netty.handler.codec.dns.DnsQuery -> io.netty.c.a.c.u:
io.netty.handler.codec.dns.DnsQuestion -> io.netty.c.a.c.v:
io.netty.handler.codec.dns.DnsRawRecord -> io.netty.c.a.c.w:
io.netty.handler.codec.dns.DnsRecord -> io.netty.c.a.c.x:
    java.lang.String name() -> e
    io.netty.handler.codec.dns.DnsRecordType type() -> f
    int dnsClass() -> g
    long timeToLive() -> h
io.netty.handler.codec.dns.DnsRecordDecoder -> io.netty.c.a.c.y:
    io.netty.handler.codec.dns.DnsRecordDecoder DEFAULT -> a
    io.netty.handler.codec.dns.DnsQuestion decodeQuestion(io.netty.buffer.ByteBuf) -> a
    io.netty.handler.codec.dns.DnsRecord decodeRecord(io.netty.buffer.ByteBuf) -> b
    29:29:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.DnsRecordEncoder -> io.netty.c.a.c.z:
    io.netty.handler.codec.dns.DnsRecordEncoder DEFAULT -> a
    void encodeQuestion(io.netty.handler.codec.dns.DnsQuestion,io.netty.buffer.ByteBuf) -> a
    void encodeRecord(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf) -> a
    29:29:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.DnsRecordType -> io.netty.c.a.c.A:
    io.netty.handler.codec.dns.DnsRecordType A -> a
    io.netty.handler.codec.dns.DnsRecordType NS -> b
    io.netty.handler.codec.dns.DnsRecordType CNAME -> c
    io.netty.handler.codec.dns.DnsRecordType SOA -> d
    io.netty.handler.codec.dns.DnsRecordType PTR -> e
    io.netty.handler.codec.dns.DnsRecordType MX -> f
    io.netty.handler.codec.dns.DnsRecordType TXT -> g
    io.netty.handler.codec.dns.DnsRecordType RP -> h
    io.netty.handler.codec.dns.DnsRecordType AFSDB -> i
    io.netty.handler.codec.dns.DnsRecordType SIG -> j
    io.netty.handler.codec.dns.DnsRecordType KEY -> k
    io.netty.handler.codec.dns.DnsRecordType AAAA -> l
    io.netty.handler.codec.dns.DnsRecordType LOC -> m
    io.netty.handler.codec.dns.DnsRecordType SRV -> n
    io.netty.handler.codec.dns.DnsRecordType NAPTR -> o
    io.netty.handler.codec.dns.DnsRecordType KX -> p
    io.netty.handler.codec.dns.DnsRecordType CERT -> q
    io.netty.handler.codec.dns.DnsRecordType DNAME -> r
    io.netty.handler.codec.dns.DnsRecordType OPT -> s
    io.netty.handler.codec.dns.DnsRecordType APL -> t
    io.netty.handler.codec.dns.DnsRecordType DS -> u
    io.netty.handler.codec.dns.DnsRecordType SSHFP -> v
    io.netty.handler.codec.dns.DnsRecordType IPSECKEY -> w
    io.netty.handler.codec.dns.DnsRecordType RRSIG -> x
    io.netty.handler.codec.dns.DnsRecordType NSEC -> y
    io.netty.handler.codec.dns.DnsRecordType DNSKEY -> z
    io.netty.handler.codec.dns.DnsRecordType DHCID -> A
    io.netty.handler.codec.dns.DnsRecordType NSEC3 -> B
    io.netty.handler.codec.dns.DnsRecordType NSEC3PARAM -> C
    io.netty.handler.codec.dns.DnsRecordType TLSA -> D
    io.netty.handler.codec.dns.DnsRecordType HIP -> E
    io.netty.handler.codec.dns.DnsRecordType SPF -> F
    io.netty.handler.codec.dns.DnsRecordType TKEY -> G
    io.netty.handler.codec.dns.DnsRecordType TSIG -> H
    io.netty.handler.codec.dns.DnsRecordType IXFR -> I
    io.netty.handler.codec.dns.DnsRecordType AXFR -> J
    io.netty.handler.codec.dns.DnsRecordType ANY -> K
    io.netty.handler.codec.dns.DnsRecordType CAA -> L
    io.netty.handler.codec.dns.DnsRecordType TA -> M
    io.netty.handler.codec.dns.DnsRecordType DLV -> N
    java.util.Map BY_NAME -> O
    io.netty.util.collection.IntObjectHashMap BY_TYPE -> P
    java.lang.String EXPECTED -> Q
    int intValue -> R
    java.lang.String name -> S
    java.lang.String text -> T
    336:340:io.netty.handler.codec.dns.DnsRecordType valueOf(int) -> a
    356:357:void <init>(int) -> <init>
    359:365:void <init>(int,java.lang.String) -> <init>
    371:371:java.lang.String name() -> a
    378:378:int intValue() -> b
    383:383:int hashCode() -> hashCode
    388:388:boolean equals(java.lang.Object) -> equals
    393:393:int compareTo(io.netty.handler.codec.dns.DnsRecordType) -> a
    398:402:java.lang.String toString() -> toString
    27:27:int compareTo(java.lang.Object) -> compareTo
    35:333:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.DnsResponse -> io.netty.c.a.c.B:
    boolean isAuthoritativeAnswer() -> q
    io.netty.handler.codec.dns.DnsResponse setAuthoritativeAnswer(boolean) -> i
    boolean isTruncated() -> r
    io.netty.handler.codec.dns.DnsResponse setTruncated(boolean) -> h
    boolean isRecursionAvailable() -> s
    io.netty.handler.codec.dns.DnsResponse setRecursionAvailable(boolean) -> g
    io.netty.handler.codec.dns.DnsResponseCode code() -> t
    io.netty.handler.codec.dns.DnsResponse setRecursionDesired(boolean) -> f
    io.netty.handler.codec.dns.DnsResponse setZ(int) -> h
    io.netty.handler.codec.dns.DnsResponse addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord) -> c
io.netty.handler.codec.dns.DnsResponseCode -> io.netty.c.a.c.C:
    io.netty.handler.codec.dns.DnsResponseCode NOERROR -> a
    io.netty.handler.codec.dns.DnsResponseCode FORMERR -> b
    io.netty.handler.codec.dns.DnsResponseCode SERVFAIL -> c
    io.netty.handler.codec.dns.DnsResponseCode NXDOMAIN -> d
    io.netty.handler.codec.dns.DnsResponseCode NOTIMP -> e
    io.netty.handler.codec.dns.DnsResponseCode REFUSED -> f
    io.netty.handler.codec.dns.DnsResponseCode YXDOMAIN -> g
    io.netty.handler.codec.dns.DnsResponseCode YXRRSET -> h
    io.netty.handler.codec.dns.DnsResponseCode NXRRSET -> i
    io.netty.handler.codec.dns.DnsResponseCode NOTAUTH -> j
    io.netty.handler.codec.dns.DnsResponseCode NOTZONE -> k
    io.netty.handler.codec.dns.DnsResponseCode BADVERS_OR_BADSIG -> l
    io.netty.handler.codec.dns.DnsResponseCode BADKEY -> m
    io.netty.handler.codec.dns.DnsResponseCode BADTIME -> n
    io.netty.handler.codec.dns.DnsResponseCode BADMODE -> o
    io.netty.handler.codec.dns.DnsResponseCode BADNAME -> p
    io.netty.handler.codec.dns.DnsResponseCode BADALG -> q
    int code -> r
    java.lang.String name -> s
    java.lang.String text -> t
    122:158:io.netty.handler.codec.dns.DnsResponseCode valueOf(int) -> a
    167:168:void <init>(int) -> <init>
    170:177:void <init>(int,java.lang.String) -> <init>
    183:183:int intValue() -> a
    188:188:int compareTo(io.netty.handler.codec.dns.DnsResponseCode) -> a
    193:193:int hashCode() -> hashCode
    201:205:boolean equals(java.lang.Object) -> equals
    213:217:java.lang.String toString() -> toString
    25:25:int compareTo(java.lang.Object) -> compareTo
    31:112:void <clinit>() -> <clinit>
io.netty.handler.codec.dns.DnsSection -> io.netty.c.a.c.D:
    io.netty.handler.codec.dns.DnsSection QUESTION -> a
    io.netty.handler.codec.dns.DnsSection ANSWER -> b
    io.netty.handler.codec.dns.DnsSection AUTHORITY -> c
    io.netty.handler.codec.dns.DnsSection ADDITIONAL -> d
    io.netty.handler.codec.dns.DnsSection[] $VALUES -> e
    23:23:io.netty.handler.codec.dns.DnsSection[] values() -> values
    23:23:io.netty.handler.codec.dns.DnsSection valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    23:40:void <clinit>() -> <clinit>
io.netty.handler.codec.http.CombinedHttpHeaders -> io.netty.c.a.d.a:
    40:41:void <init>(boolean) -> <init>
    45:45:boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean) -> a
io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl -> io.netty.c.a.d.b:
    io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper objectEscaper -> c
    io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper charSequenceEscaper -> d
    58:66:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper objectEscaper() -> f
    70:78:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper charSequenceEscaper() -> g
    84:85:void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
    89:97:java.util.Iterator valueIterator(java.lang.CharSequence) -> a
    102:109:java.util.List getAll(java.lang.CharSequence) -> b
    115:133:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl add(io.netty.handler.codec.Headers) -> d
    138:142:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl set(io.netty.handler.codec.Headers) -> e
    158:158:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl add(java.lang.CharSequence,java.lang.CharSequence) -> a
    168:168:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl add(java.lang.CharSequence,java.lang.Iterable) -> a
    173:173:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl addObject(java.lang.CharSequence,java.lang.Object) -> a
    178:178:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl addObject(java.lang.CharSequence,java.lang.Iterable) -> b
    194:195:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl set(java.lang.CharSequence,java.lang.Iterable) -> c
    200:201:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl setObject(java.lang.CharSequence,java.lang.Object) -> b
    212:213:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl setObject(java.lang.CharSequence,java.lang.Iterable) -> d
    217:223:io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl addEscapedValue(java.lang.CharSequence,java.lang.CharSequence) -> b
    227:235:java.lang.CharSequence commaSeparate(io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper,java.lang.Object[]) -> a
    240:251:java.lang.CharSequence commaSeparate(io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper,java.lang.Iterable) -> a
    255:258:java.lang.CharSequence commaSeparateEscapedValues(java.lang.CharSequence,java.lang.CharSequence) -> c
    48:48:io.netty.handler.codec.Headers set(io.netty.handler.codec.Headers) -> c
    48:48:io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Iterable) -> d
    48:48:io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object) -> e
    48:48:io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> c
    48:48:io.netty.handler.codec.Headers add(io.netty.handler.codec.Headers) -> a
    48:48:io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Iterable) -> b
    48:48:io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object) -> c
    48:48:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> a
    48:48:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> b
    48:48:java.util.Iterator valueIterator(java.lang.Object) -> d
    48:48:java.util.List getAll(java.lang.Object) -> c
    48:48:io.netty.handler.codec.ValueConverter access$000(io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl) -> a
io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$1 -> io.netty.c.a.d.c:
    io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl this$0 -> a
    59:59:void <init>(io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl) -> <init>
    62:62:java.lang.CharSequence escape(java.lang.Object) -> a
io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$2 -> io.netty.c.a.d.d:
    io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl this$0 -> a
    71:71:void <init>(io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl) -> <init>
    74:74:java.lang.CharSequence escape(java.lang.CharSequence) -> a
    71:71:java.lang.CharSequence escape(java.lang.Object) -> a
io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper -> io.netty.c.a.d.e:
    java.lang.CharSequence escape(java.lang.Object) -> a
io.netty.handler.codec.http.ComposedLastHttpContent -> io.netty.c.a.d.f:
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> a
    io.netty.handler.codec.DecoderResult result -> c
    27:29:void <init>(io.netty.handler.codec.http.HttpHeaders) -> <init>
    33:33:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    62:62:io.netty.handler.codec.http.LastHttpContent retain(int) -> a
    67:67:io.netty.handler.codec.http.LastHttpContent retain() -> a
    72:72:io.netty.handler.codec.http.LastHttpContent touch() -> b
    77:77:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> a
    82:82:io.netty.buffer.ByteBuf content() -> content
    87:87:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    92:92:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    97:98:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    102:102:int refCnt() -> refCnt
    107:107:boolean release() -> release
    112:112:boolean release(int) -> release
    23:23:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    23:23:io.netty.handler.codec.http.HttpContent touch() -> touch
    23:23:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    23:23:io.netty.handler.codec.http.HttpContent retain() -> retain
    23:23:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    23:23:io.netty.util.ReferenceCounted touch() -> touch
    23:23:io.netty.util.ReferenceCounted retain(int) -> retain
    23:23:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.DefaultFullHttpRequest -> io.netty.c.a.d.g:
    io.netty.buffer.ByteBuf content -> a
    io.netty.handler.codec.http.HttpHeaders trailingHeader -> c
    int hash -> d
    36:37:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String) -> <init>
    40:41:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf) -> <init>
    44:45:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,boolean) -> <init>
    49:52:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf,boolean) -> <init>
    63:63:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    68:68:io.netty.buffer.ByteBuf content() -> content
    73:73:int refCnt() -> refCnt
    78:79:io.netty.handler.codec.http.FullHttpRequest retain() -> a
    84:85:io.netty.handler.codec.http.FullHttpRequest retain(int) -> a
    90:91:io.netty.handler.codec.http.FullHttpRequest touch() -> b
    96:97:io.netty.handler.codec.http.FullHttpRequest touch(java.lang.Object) -> a
    102:102:boolean release() -> release
    107:107:boolean release(int) -> release
    112:113:io.netty.handler.codec.http.FullHttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> a
    118:119:io.netty.handler.codec.http.FullHttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> a
    124:125:io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> a
    150:166:int hashCode() -> hashCode
    171:179:boolean equals(java.lang.Object) -> equals
    184:184:java.lang.String toString() -> toString
    26:26:io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    26:26:io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    26:26:io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    26:26:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    26:26:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    26:26:io.netty.handler.codec.http.HttpContent touch() -> touch
    26:26:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    26:26:io.netty.handler.codec.http.HttpContent retain() -> retain
    26:26:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:io.netty.util.ReferenceCounted touch() -> touch
    26:26:io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.DefaultFullHttpResponse -> io.netty.c.a.d.h:
    io.netty.buffer.ByteBuf content -> a
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> c
    int hash -> d
    38:39:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus) -> <init>
    42:43:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf) -> <init>
    46:47:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,boolean) -> <init>
    56:57:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf,boolean) -> <init>
    61:65:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf,boolean,boolean) -> <init>
    69:72:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders,io.netty.handler.codec.http.HttpHeaders) -> <init>
    76:76:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    81:81:io.netty.buffer.ByteBuf content() -> content
    86:86:int refCnt() -> refCnt
    91:92:io.netty.handler.codec.http.FullHttpResponse retain() -> retain
    97:98:io.netty.handler.codec.http.FullHttpResponse retain(int) -> a
    103:104:io.netty.handler.codec.http.FullHttpResponse touch() -> a
    109:110:io.netty.handler.codec.http.FullHttpResponse touch(java.lang.Object) -> a
    115:115:boolean release() -> release
    120:120:boolean release(int) -> release
    125:126:io.netty.handler.codec.http.FullHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> a
    147:147:io.netty.handler.codec.http.FullHttpResponse retainedDuplicate() -> retainedDuplicate
    152:152:io.netty.handler.codec.http.FullHttpResponse replace(io.netty.buffer.ByteBuf) -> a
    157:173:int hashCode() -> hashCode
    178:186:boolean equals(java.lang.Object) -> equals
    191:191:java.lang.String toString() -> toString
    27:27:io.netty.handler.codec.http.HttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> b
    27:27:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    27:27:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.http.HttpContent touch() -> touch
    27:27:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    27:27:io.netty.handler.codec.http.HttpContent retain() -> retain
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.DefaultHttpContent -> io.netty.c.a.d.i:
    io.netty.buffer.ByteBuf content -> a
    31:36:void <init>(io.netty.buffer.ByteBuf) -> <init>
    40:40:io.netty.buffer.ByteBuf content() -> content
    65:65:int refCnt() -> refCnt
    70:71:io.netty.handler.codec.http.HttpContent retain() -> retain
    76:77:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    82:83:io.netty.handler.codec.http.HttpContent touch() -> touch
    88:89:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    94:94:boolean release() -> release
    99:99:boolean release(int) -> release
    104:105:java.lang.String toString() -> toString
    24:24:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:io.netty.util.ReferenceCounted touch() -> touch
    24:24:io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.DefaultHttpHeaders -> io.netty.c.a.d.j:
    io.netty.util.ByteProcessor HEADER_NAME_VALIDATOR -> b
    io.netty.handler.codec.DefaultHeaders$NameValidator HttpNameValidator -> a
    io.netty.handler.codec.DefaultHeaders headers -> d
    78:79:void <init>() -> <init>
    82:83:void <init>(boolean) -> <init>
    86:89:void <init>(boolean,io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
    91:93:void <init>(io.netty.handler.codec.DefaultHeaders) -> <init>
    97:101:io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders) -> a
    107:111:io.netty.handler.codec.http.HttpHeaders set(io.netty.handler.codec.http.HttpHeaders) -> b
    117:118:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> a
    123:124:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object) -> a
    129:130:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> a
    135:136:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> a
    153:154:io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> a
    159:160:io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence) -> a
    165:166:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> b
    171:172:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object) -> b
    177:178:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> b
    183:184:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> b
    201:202:io.netty.handler.codec.http.HttpHeaders clear() -> a
    207:207:java.lang.String get(java.lang.String) -> get
    212:212:java.lang.String get(java.lang.CharSequence) -> get
    247:247:java.util.List getAll(java.lang.String) -> getAll
    252:252:java.util.List getAll(java.lang.CharSequence) -> getAll
    257:265:java.util.List entries() -> entries
    271:271:java.util.Iterator iterator() -> iterator
    276:276:java.util.Iterator iteratorCharSequence() -> b
    281:282:java.util.Iterator valueStringIterator(java.lang.CharSequence) -> b
    302:302:java.util.Iterator valueCharSequenceIterator(java.lang.CharSequence) -> c
    307:307:boolean contains(java.lang.String) -> b
    312:312:boolean contains(java.lang.CharSequence) -> contains
    317:317:boolean isEmpty() -> isEmpty
    322:322:int size() -> size
    327:327:boolean contains(java.lang.String,java.lang.String,boolean) -> a
    332:332:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> b
    337:337:java.util.Set names() -> names
    342:343:boolean equals(java.lang.Object) -> equals
    348:348:int hashCode() -> hashCode
    352:374:void validateHeaderNameElement(byte) -> b
    377:399:void validateHeaderNameElement(char) -> b
    402:402:io.netty.handler.codec.ValueConverter valueConverter(boolean) -> a
    407:407:io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator(boolean) -> b
    45:45:void access$000(byte) -> a
    45:45:io.netty.util.ByteProcessor access$100() -> c
    45:45:void access$200(char) -> a
    47:54:void <clinit>() -> <clinit>
io.netty.handler.codec.http.DefaultHttpHeaders$1 -> io.netty.c.a.d.k:
    47:47:void <init>() -> <init>
    50:51:boolean process(byte) -> a
io.netty.handler.codec.http.DefaultHttpHeaders$2 -> io.netty.c.a.d.l:
    54:54:void <init>() -> <init>
    57:72:void validateName(java.lang.CharSequence) -> a
    54:54:void validateName(java.lang.Object) -> a
io.netty.handler.codec.http.DefaultHttpHeaders$3 -> io.netty.c.a.d.m:
    java.util.Iterator val$itr -> a
    io.netty.handler.codec.http.DefaultHttpHeaders this$0 -> b
    282:282:void <init>(io.netty.handler.codec.http.DefaultHttpHeaders,java.util.Iterator) -> <init>
    285:285:boolean hasNext() -> hasNext
    290:290:java.lang.String next() -> a
    295:296:void remove() -> remove
    282:282:java.lang.Object next() -> next
io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverter -> io.netty.c.a.d.n:
    io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverter INSTANCE -> b
    410:410:void <init>() -> <init>
    415:424:java.lang.CharSequence convertObject(java.lang.Object) -> a
    410:410:java.lang.Object convertObject(java.lang.Object) -> b
    410:410:void <init>(io.netty.handler.codec.http.DefaultHttpHeaders$1) -> <init>
    411:411:void <clinit>() -> <clinit>
io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverterAndValidator -> io.netty.c.a.d.o:
    io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverterAndValidator INSTANCE -> c
    428:428:void <init>() -> <init>
    433:443:java.lang.CharSequence convertObject(java.lang.Object) -> a
    453:491:int validateValueChar(java.lang.CharSequence,int,char) -> a
    428:428:java.lang.Object convertObject(java.lang.Object) -> b
    429:429:void <clinit>() -> <clinit>
io.netty.handler.codec.http.DefaultHttpMessage -> io.netty.c.a.d.p:
    io.netty.handler.codec.http.HttpVersion version -> a
    io.netty.handler.codec.http.HttpHeaders headers -> b
    39:42:void <init>(io.netty.handler.codec.http.HttpVersion,boolean,boolean) -> <init>
    47:50:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpHeaders) -> <init>
    54:54:io.netty.handler.codec.http.HttpHeaders headers() -> headers
    60:60:io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    65:65:io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    70:74:int hashCode() -> hashCode
    79:87:boolean equals(java.lang.Object) -> equals
    92:96:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
io.netty.handler.codec.http.DefaultHttpObject -> io.netty.c.a.d.q:
    io.netty.handler.codec.DecoderResult decoderResult -> a
    23:27:void <init>() -> <init>
    31:31:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    37:37:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    42:46:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    50:52:int hashCode() -> hashCode
    57:63:boolean equals(java.lang.Object) -> equals
io.netty.handler.codec.http.DefaultHttpRequest -> io.netty.c.a.d.r:
    io.netty.handler.codec.http.HttpMethod method -> a
    java.lang.String uri -> b
    36:37:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String) -> <init>
    48:51:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,boolean) -> <init>
    70:70:io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    75:75:io.netty.handler.codec.http.HttpMethod method() -> method
    81:81:java.lang.String getUri() -> getUri
    86:86:java.lang.String uri() -> uri
    91:95:io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    100:104:io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    109:110:io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    115:119:int hashCode() -> hashCode
    124:132:boolean equals(java.lang.Object) -> equals
    137:137:java.lang.String toString() -> toString
    23:23:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
io.netty.handler.codec.http.DefaultHttpResponse -> io.netty.c.a.d.s:
    io.netty.handler.codec.http.HttpResponseStatus status -> a
    34:35:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus) -> <init>
    45:46:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,boolean) -> <init>
    62:64:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,boolean,boolean) -> <init>
    74:76:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.handler.codec.http.HttpHeaders) -> <init>
    86:86:io.netty.handler.codec.http.HttpResponseStatus status() -> status
    100:101:io.netty.handler.codec.http.HttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> b
    106:106:java.lang.String toString() -> toString
    23:23:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
io.netty.handler.codec.http.DefaultLastHttpContent -> io.netty.c.a.d.t:
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> a
    boolean validateHeaders -> c
    33:34:void <init>() -> <init>
    37:38:void <init>(io.netty.buffer.ByteBuf) -> <init>
    41:44:void <init>(io.netty.buffer.ByteBuf,boolean) -> <init>
    70:71:io.netty.handler.codec.http.LastHttpContent retain(int) -> a
    76:77:io.netty.handler.codec.http.LastHttpContent retain() -> a
    82:83:io.netty.handler.codec.http.LastHttpContent touch() -> b
    88:89:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> a
    94:94:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    99:105:java.lang.String toString() -> toString
    109:115:void appendHeaders(java.lang.StringBuilder) -> a
    28:28:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    28:28:io.netty.handler.codec.http.HttpContent touch() -> touch
    28:28:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    28:28:io.netty.handler.codec.http.HttpContent retain() -> retain
    28:28:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    28:28:io.netty.util.ReferenceCounted touch() -> touch
    28:28:io.netty.util.ReferenceCounted retain(int) -> retain
    28:28:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHttpHeaders -> io.netty.c.a.d.u:
    io.netty.handler.codec.DefaultHeaders$NameValidator TrailerNameValidator -> b
    132:133:void <init>(boolean) -> <init>
    118:118:void <clinit>() -> <clinit>
io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHttpHeaders$1 -> io.netty.c.a.d.v:
    118:118:void <init>() -> <init>
    121:127:void validateName(java.lang.CharSequence) -> a
    118:118:void validateName(java.lang.Object) -> a
io.netty.handler.codec.http.EmptyHttpHeaders -> io.netty.c.a.d.w:
    java.util.Iterator EMPTY_CHARS_ITERATOR -> a
    io.netty.handler.codec.http.EmptyHttpHeaders INSTANCE -> b
    40:40:io.netty.handler.codec.http.EmptyHttpHeaders instance() -> c
    43:44:void <init>() -> <init>
    48:48:java.lang.String get(java.lang.String) -> get
    83:83:java.util.List getAll(java.lang.String) -> getAll
    88:88:java.util.List entries() -> entries
    93:93:boolean contains(java.lang.String) -> b
    98:98:boolean isEmpty() -> isEmpty
    103:103:int size() -> size
    108:108:java.util.Set names() -> names
    113:113:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> a
    118:118:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> a
    133:133:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> b
    138:138:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> b
    153:153:io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> a
    158:158:io.netty.handler.codec.http.HttpHeaders clear() -> a
    163:163:java.util.Iterator iterator() -> iterator
    168:168:java.util.Iterator iteratorCharSequence() -> b
    27:29:void <clinit>() -> <clinit>
io.netty.handler.codec.http.EmptyHttpHeaders$InstanceInitializer -> io.netty.c.a.d.x:
    io.netty.handler.codec.http.EmptyHttpHeaders EMPTY_HEADERS -> a
    176:176:io.netty.handler.codec.http.EmptyHttpHeaders access$000() -> a
    183:183:void <clinit>() -> <clinit>
io.netty.handler.codec.http.FullHttpMessage -> io.netty.c.a.d.y:
io.netty.handler.codec.http.FullHttpRequest -> io.netty.c.a.d.z:
io.netty.handler.codec.http.FullHttpResponse -> io.netty.c.a.d.A:
    io.netty.handler.codec.http.FullHttpResponse retainedDuplicate() -> retainedDuplicate
    io.netty.handler.codec.http.FullHttpResponse retain() -> retain
io.netty.handler.codec.http.HttpClientCodec -> io.netty.c.a.d.B:
    java.util.Queue queue -> a
    boolean parseHttpAfterConnectRequest -> b
    boolean done -> c
    java.util.concurrent.atomic.AtomicLong requestResponseCounter -> d
    boolean failOnMissingResponse -> e
    64:65:void <init>() -> <init>
    79:80:void <init>(int,int,int,boolean) -> <init>
    88:89:void <init>(int,int,int,boolean,boolean) -> <init>
    49:100:void <init>(int,int,int,boolean,boolean,boolean) -> <init>
    108:110:void <init>(int,int,int,boolean,boolean,int) -> <init>
    49:122:void <init>(int,int,int,boolean,boolean,int,boolean) -> <init>
    129:130:void prepareUpgradeFrom(io.netty.channel.ChannelHandlerContext) -> a
    138:140:void upgradeFrom(io.netty.channel.ChannelHandlerContext) -> b
    45:45:boolean access$100(io.netty.handler.codec.http.HttpClientCodec) -> a
    45:45:java.util.Queue access$200(io.netty.handler.codec.http.HttpClientCodec) -> b
    45:45:boolean access$300(io.netty.handler.codec.http.HttpClientCodec) -> c
    45:45:java.util.concurrent.atomic.AtomicLong access$400(io.netty.handler.codec.http.HttpClientCodec) -> d
    45:45:boolean access$500(io.netty.handler.codec.http.HttpClientCodec) -> e
    45:45:boolean access$102(io.netty.handler.codec.http.HttpClientCodec,boolean) -> a
io.netty.handler.codec.http.HttpClientCodec$1 -> io.netty.c.a.d.C:
io.netty.handler.codec.http.HttpClientCodec$Decoder -> io.netty.c.a.d.D:
    io.netty.handler.codec.http.HttpClientCodec this$0 -> a
    180:182:void <init>(io.netty.handler.codec.http.HttpClientCodec,int,int,int,boolean) -> <init>
    185:187:void <init>(io.netty.handler.codec.http.HttpClientCodec,int,int,int,boolean,int) -> <init>
    192:210:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    213:221:void decrement(java.lang.Object) -> a
    225:276:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> a
    282:292:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
io.netty.handler.codec.http.HttpClientCodec$Encoder -> io.netty.c.a.d.E:
    boolean upgraded -> a
    io.netty.handler.codec.http.HttpClientCodec this$0 -> b
    150:150:void <init>(io.netty.handler.codec.http.HttpClientCodec) -> <init>
    158:176:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    150:150:void <init>(io.netty.handler.codec.http.HttpClientCodec,io.netty.handler.codec.http.HttpClientCodec$1) -> <init>
io.netty.handler.codec.http.HttpClientUpgradeHandler -> io.netty.c.a.d.F:
    io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec sourceCodec -> c
    io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec upgradeCodec -> d
    boolean upgradeRequested -> e
    boolean $assertionsDisabled -> a
    117:126:void <init>(io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec,io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec,int) -> <init>
    130:131:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    136:137:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    141:142:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    146:147:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    151:152:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    156:157:void read(io.netty.channel.ChannelHandlerContext) -> read
    162:182:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    186:187:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    192:256:void decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpObject,java.util.List) -> a
    259:260:void removeThisHandler(io.netty.channel.ChannelHandlerContext) -> a
    267:281:void setUpgradeRequestHeaders(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpRequest) -> a
    38:38:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> a
    38:38:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec -> io.netty.c.a.d.G:
    void prepareUpgradeFrom(io.netty.channel.ChannelHandlerContext) -> a
    void upgradeFrom(io.netty.channel.ChannelHandlerContext) -> b
io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec -> io.netty.c.a.d.H:
    java.lang.CharSequence protocol() -> protocol
    java.util.Collection setUpgradeHeaders(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpRequest) -> setUpgradeHeaders
    void upgradeTo(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse) -> upgradeTo
io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent -> io.netty.c.a.d.I:
    io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_ISSUED -> a
    io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_SUCCESSFUL -> b
    io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_REJECTED -> c
    io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent[] $VALUES -> d
    43:43:io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent[] values() -> values
    43:43:io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent valueOf(java.lang.String) -> valueOf
    43:43:void <init>(java.lang.String,int) -> <init>
    43:58:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpConstants -> io.netty.c.a.d.J:
    java.nio.charset.Charset DEFAULT_CHARSET -> a
    72:72:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpContent -> io.netty.c.a.d.K:
    io.netty.handler.codec.http.HttpContent retain() -> retain
    io.netty.handler.codec.http.HttpContent retain(int) -> retain
    io.netty.handler.codec.http.HttpContent touch() -> touch
    io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
io.netty.handler.codec.http.HttpContentCompressor -> io.netty.c.a.d.L:
    int compressionLevel -> compressionLevel
    int windowBits -> windowBits
    int memLevel -> memLevel
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    42:43:void <init>() -> <init>
    55:56:void <init>(int) -> <init>
    77:94:void <init>(int,int,int) -> <init>
    98:99:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    103:130:io.netty.handler.codec.http.HttpContentEncoder$Result beginEncode(io.netty.handler.codec.http.HttpResponse,java.lang.String) -> beginEncode
    136:173:io.netty.handler.codec.compression.ZlibWrapper determineWrapper(java.lang.String) -> determineWrapper
io.netty.handler.codec.http.HttpContentCompressor$1 -> io.netty.c.a.d.M:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> a
    116:116:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpContentDecoder -> io.netty.c.a.d.N:
    java.lang.String IDENTITY -> a
    io.netty.channel.ChannelHandlerContext ctx -> b
    io.netty.channel.embedded.EmbeddedChannel decoder -> c
    boolean continueResponse -> d
    46:46:void <init>() -> <init>
    56:150:void decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpObject,java.util.List) -> a
    153:170:void decodeContent(io.netty.handler.codec.http.HttpContent,java.util.List) -> a
    io.netty.channel.embedded.EmbeddedChannel newContentDecoder(java.lang.String) -> a
    193:193:java.lang.String getTargetContentEncoding(java.lang.String) -> b
    198:200:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    204:206:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    210:212:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    215:220:void cleanup() -> a
    224:230:void cleanupSafely(io.netty.channel.ChannelHandlerContext) -> a
    234:236:void decode(io.netty.buffer.ByteBuf,java.util.List) -> a
    239:243:void finishDecode(java.util.List) -> a
    247:257:void fetchDecoderOutput(java.util.List) -> b
    46:46:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> a
    48:48:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpContentDecompressor -> io.netty.c.a.d.O:
    boolean strict -> c
    40:41:void <init>() -> <init>
    49:51:void <init>(boolean) -> <init>
    55:69:io.netty.channel.embedded.EmbeddedChannel newContentDecoder(java.lang.String) -> a
io.netty.handler.codec.http.HttpContentEncoder -> io.netty.c.a.d.P:
    java.lang.CharSequence ZERO_LENGTH_HEAD -> ZERO_LENGTH_HEAD
    java.lang.CharSequence ZERO_LENGTH_CONNECT -> ZERO_LENGTH_CONNECT
    int CONTINUE_CODE -> CONTINUE_CODE
    java.util.Queue acceptEncodingQueue -> acceptEncodingQueue
    io.netty.channel.embedded.EmbeddedChannel encoder -> encoder
    io.netty.handler.codec.http.HttpContentEncoder$State state -> state
    boolean $assertionsDisabled -> $assertionsDisabled
    51:65:void <init>() -> <init>
    69:69:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    75:89:void decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpRequest,java.util.List) -> decode
    93:209:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpObject,java.util.List) -> encode
    212:228:void encodeFullResponse(io.netty.handler.codec.http.HttpResponse,io.netty.handler.codec.http.HttpContent,java.util.List) -> encodeFullResponse
    231:231:boolean isPassthru(io.netty.handler.codec.http.HttpVersion,int,java.lang.CharSequence) -> isPassthru
    237:242:void ensureHeaders(io.netty.handler.codec.http.HttpObject) -> ensureHeaders
    245:250:void ensureContent(io.netty.handler.codec.http.HttpObject) -> ensureContent
    253:271:boolean encodeContent(io.netty.handler.codec.http.HttpContent,java.util.List) -> encodeContent
    io.netty.handler.codec.http.HttpContentEncoder$Result beginEncode(io.netty.handler.codec.http.HttpResponse,java.lang.String) -> beginEncode
    292:294:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    298:300:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    303:308:void cleanup() -> cleanup
    312:318:void cleanupSafely(io.netty.channel.ChannelHandlerContext) -> cleanupSafely
    322:324:void encode(io.netty.buffer.ByteBuf,java.util.List) -> encode
    327:331:void finishEncode(java.util.List) -> finishEncode
    335:345:void fetchEncoderOutput(java.util.List) -> fetchEncoderOutput
    51:51:void decode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    51:51:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    51:61:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpContentEncoder$1 -> io.netty.c.a.d.Q:
    int[] $SwitchMap$io$netty$handler$codec$http$HttpContentEncoder$State -> a
    94:94:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpContentEncoder$Result -> io.netty.c.a.d.R:
    java.lang.String targetContentEncoding -> a
    io.netty.channel.embedded.EmbeddedChannel contentEncoder -> b
    351:361:void <init>(java.lang.String,io.netty.channel.embedded.EmbeddedChannel) -> <init>
    364:364:java.lang.String targetContentEncoding() -> a
    368:368:io.netty.channel.embedded.EmbeddedChannel contentEncoder() -> b
io.netty.handler.codec.http.HttpContentEncoder$State -> io.netty.c.a.d.S:
    io.netty.handler.codec.http.HttpContentEncoder$State PASS_THROUGH -> a
    io.netty.handler.codec.http.HttpContentEncoder$State AWAIT_HEADERS -> b
    io.netty.handler.codec.http.HttpContentEncoder$State AWAIT_CONTENT -> c
    io.netty.handler.codec.http.HttpContentEncoder$State[] $VALUES -> d
    53:53:io.netty.handler.codec.http.HttpContentEncoder$State[] values() -> values
    53:53:io.netty.handler.codec.http.HttpContentEncoder$State valueOf(java.lang.String) -> valueOf
    53:53:void <init>(java.lang.String,int) -> <init>
    53:56:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpExpectationFailedEvent -> io.netty.c.a.d.T:
    io.netty.handler.codec.http.HttpExpectationFailedEvent INSTANCE -> a
    24:24:void <init>() -> <init>
    23:23:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpHeaderNames -> io.netty.c.a.d.U:
    io.netty.util.AsciiString ACCEPT -> a
    io.netty.util.AsciiString ACCEPT_CHARSET -> b
    io.netty.util.AsciiString ACCEPT_ENCODING -> c
    io.netty.util.AsciiString ACCEPT_LANGUAGE -> d
    io.netty.util.AsciiString ACCEPT_RANGES -> e
    io.netty.util.AsciiString ACCEPT_PATCH -> f
    io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_CREDENTIALS -> g
    io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_HEADERS -> h
    io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_METHODS -> i
    io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_ORIGIN -> j
    io.netty.util.AsciiString ACCESS_CONTROL_EXPOSE_HEADERS -> k
    io.netty.util.AsciiString ACCESS_CONTROL_MAX_AGE -> l
    io.netty.util.AsciiString ACCESS_CONTROL_REQUEST_HEADERS -> m
    io.netty.util.AsciiString ACCESS_CONTROL_REQUEST_METHOD -> n
    io.netty.util.AsciiString AGE -> o
    io.netty.util.AsciiString ALLOW -> p
    io.netty.util.AsciiString AUTHORIZATION -> q
    io.netty.util.AsciiString CACHE_CONTROL -> r
    io.netty.util.AsciiString CONNECTION -> s
    io.netty.util.AsciiString CONTENT_BASE -> t
    io.netty.util.AsciiString CONTENT_ENCODING -> u
    io.netty.util.AsciiString CONTENT_LANGUAGE -> v
    io.netty.util.AsciiString CONTENT_LENGTH -> w
    io.netty.util.AsciiString CONTENT_LOCATION -> x
    io.netty.util.AsciiString CONTENT_TRANSFER_ENCODING -> y
    io.netty.util.AsciiString CONTENT_DISPOSITION -> z
    io.netty.util.AsciiString CONTENT_MD5 -> A
    io.netty.util.AsciiString CONTENT_RANGE -> B
    io.netty.util.AsciiString CONTENT_SECURITY_POLICY -> C
    io.netty.util.AsciiString CONTENT_TYPE -> D
    io.netty.util.AsciiString COOKIE -> E
    io.netty.util.AsciiString DATE -> F
    io.netty.util.AsciiString ETAG -> G
    io.netty.util.AsciiString EXPECT -> H
    io.netty.util.AsciiString EXPIRES -> I
    io.netty.util.AsciiString FROM -> J
    io.netty.util.AsciiString HOST -> K
    io.netty.util.AsciiString IF_MATCH -> L
    io.netty.util.AsciiString IF_MODIFIED_SINCE -> M
    io.netty.util.AsciiString IF_NONE_MATCH -> N
    io.netty.util.AsciiString IF_RANGE -> O
    io.netty.util.AsciiString IF_UNMODIFIED_SINCE -> P
    io.netty.util.AsciiString KEEP_ALIVE -> Q
    io.netty.util.AsciiString LAST_MODIFIED -> R
    io.netty.util.AsciiString LOCATION -> S
    io.netty.util.AsciiString MAX_FORWARDS -> T
    io.netty.util.AsciiString ORIGIN -> U
    io.netty.util.AsciiString PRAGMA -> V
    io.netty.util.AsciiString PROXY_AUTHENTICATE -> W
    io.netty.util.AsciiString PROXY_AUTHORIZATION -> X
    io.netty.util.AsciiString PROXY_CONNECTION -> Y
    io.netty.util.AsciiString RANGE -> Z
    io.netty.util.AsciiString REFERER -> aa
    io.netty.util.AsciiString RETRY_AFTER -> ab
    io.netty.util.AsciiString SEC_WEBSOCKET_KEY1 -> ac
    io.netty.util.AsciiString SEC_WEBSOCKET_KEY2 -> ad
    io.netty.util.AsciiString SEC_WEBSOCKET_LOCATION -> ae
    io.netty.util.AsciiString SEC_WEBSOCKET_ORIGIN -> af
    io.netty.util.AsciiString SEC_WEBSOCKET_PROTOCOL -> ag
    io.netty.util.AsciiString SEC_WEBSOCKET_VERSION -> ah
    io.netty.util.AsciiString SEC_WEBSOCKET_KEY -> ai
    io.netty.util.AsciiString SEC_WEBSOCKET_ACCEPT -> aj
    io.netty.util.AsciiString SEC_WEBSOCKET_EXTENSIONS -> ak
    io.netty.util.AsciiString SERVER -> al
    io.netty.util.AsciiString SET_COOKIE -> am
    io.netty.util.AsciiString SET_COOKIE2 -> an
    io.netty.util.AsciiString TE -> ao
    io.netty.util.AsciiString TRAILER -> ap
    io.netty.util.AsciiString TRANSFER_ENCODING -> aq
    io.netty.util.AsciiString UPGRADE -> ar
    io.netty.util.AsciiString USER_AGENT -> as
    io.netty.util.AsciiString VARY -> at
    io.netty.util.AsciiString VIA -> au
    io.netty.util.AsciiString WARNING -> av
    io.netty.util.AsciiString WEBSOCKET_LOCATION -> aw
    io.netty.util.AsciiString WEBSOCKET_ORIGIN -> ax
    io.netty.util.AsciiString WEBSOCKET_PROTOCOL -> ay
    io.netty.util.AsciiString WWW_AUTHENTICATE -> az
    io.netty.util.AsciiString X_FRAME_OPTIONS -> aA
    31:356:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpHeaderValues -> io.netty.c.a.d.V:
    io.netty.util.AsciiString APPLICATION_JSON -> a
    io.netty.util.AsciiString APPLICATION_X_WWW_FORM_URLENCODED -> b
    io.netty.util.AsciiString APPLICATION_OCTET_STREAM -> c
    io.netty.util.AsciiString ATTACHMENT -> d
    io.netty.util.AsciiString BASE64 -> e
    io.netty.util.AsciiString BINARY -> f
    io.netty.util.AsciiString BOUNDARY -> g
    io.netty.util.AsciiString BYTES -> h
    io.netty.util.AsciiString CHARSET -> i
    io.netty.util.AsciiString CHUNKED -> j
    io.netty.util.AsciiString CLOSE -> k
    io.netty.util.AsciiString COMPRESS -> l
    io.netty.util.AsciiString CONTINUE -> m
    io.netty.util.AsciiString DEFLATE -> n
    io.netty.util.AsciiString X_DEFLATE -> o
    io.netty.util.AsciiString FILE -> p
    io.netty.util.AsciiString FILENAME -> q
    io.netty.util.AsciiString FORM_DATA -> r
    io.netty.util.AsciiString GZIP -> s
    io.netty.util.AsciiString GZIP_DEFLATE -> t
    io.netty.util.AsciiString X_GZIP -> u
    io.netty.util.AsciiString IDENTITY -> v
    io.netty.util.AsciiString KEEP_ALIVE -> w
    io.netty.util.AsciiString MAX_AGE -> x
    io.netty.util.AsciiString MAX_STALE -> y
    io.netty.util.AsciiString MIN_FRESH -> z
    io.netty.util.AsciiString MULTIPART_FORM_DATA -> A
    io.netty.util.AsciiString MULTIPART_MIXED -> B
    io.netty.util.AsciiString MUST_REVALIDATE -> C
    io.netty.util.AsciiString NAME -> D
    io.netty.util.AsciiString NO_CACHE -> E
    io.netty.util.AsciiString NO_STORE -> F
    io.netty.util.AsciiString NO_TRANSFORM -> G
    io.netty.util.AsciiString NONE -> H
    io.netty.util.AsciiString ZERO -> I
    io.netty.util.AsciiString ONLY_IF_CACHED -> J
    io.netty.util.AsciiString PRIVATE -> K
    io.netty.util.AsciiString PROXY_REVALIDATE -> L
    io.netty.util.AsciiString PUBLIC -> M
    io.netty.util.AsciiString QUOTED_PRINTABLE -> N
    io.netty.util.AsciiString S_MAXAGE -> O
    io.netty.util.AsciiString TEXT_PLAIN -> P
    io.netty.util.AsciiString TRAILERS -> Q
    io.netty.util.AsciiString UPGRADE -> R
    io.netty.util.AsciiString WEBSOCKET -> S
    28:210:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpHeaders -> io.netty.c.a.d.W:
    io.netty.handler.codec.http.HttpHeaders EMPTY_HEADERS -> c
    995:996:void setContentLength(io.netty.handler.codec.http.HttpMessage,long) -> a
    1005:1005:java.lang.String getHost(io.netty.handler.codec.http.HttpMessage) -> a
    1173:1173:java.lang.CharSequence newEntity(java.lang.String) -> c
    1176:1176:void <init>() -> <init>
    java.lang.String get(java.lang.String) -> get
    1192:1192:java.lang.String get(java.lang.CharSequence) -> get
    java.util.List getAll(java.lang.String) -> getAll
    1287:1287:java.util.List getAll(java.lang.CharSequence) -> getAll
    java.util.List entries() -> entries
    boolean contains(java.lang.String) -> b
    java.util.Iterator iterator() -> iterator
    java.util.Iterator iteratorCharSequence() -> b
    1322:1322:java.util.Iterator valueStringIterator(java.lang.CharSequence) -> b
    1331:1331:java.util.Iterator valueCharSequenceIterator(java.lang.CharSequence) -> c
    1341:1341:boolean contains(java.lang.CharSequence) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.util.Set names() -> names
    io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> a
    1380:1380:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object) -> a
    io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> a
    1406:1406:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> a
    1415:1421:io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders) -> a
    io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> b
    1459:1459:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object) -> b
    io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> b
    1487:1487:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> b
    1496:1507:io.netty.handler.codec.http.HttpHeaders set(io.netty.handler.codec.http.HttpHeaders) -> b
    io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> a
    1557:1557:io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence) -> a
    io.netty.handler.codec.http.HttpHeaders clear() -> a
    1571:1585:boolean contains(java.lang.String,java.lang.String,boolean) -> a
    1599:1605:boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean) -> a
    1610:1651:boolean containsCommaSeparatedTrimmed(java.lang.CharSequence,java.lang.CharSequence,boolean) -> c
    1689:1689:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> b
    1694:1694:java.lang.String toString() -> toString
    53:53:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpHeadersEncoder -> io.netty.c.a.d.X:
    34:48:void encoderHeader(java.lang.CharSequence,java.lang.CharSequence,io.netty.buffer.ByteBuf) -> a
    51:56:void writeAscii(io.netty.buffer.ByteBuf,int,java.lang.CharSequence) -> a
io.netty.handler.codec.http.HttpMessage -> io.netty.c.a.d.Y:
    io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    io.netty.handler.codec.http.HttpHeaders headers() -> headers
io.netty.handler.codec.http.HttpMessageUtil -> io.netty.c.a.d.Z:
    29:33:java.lang.StringBuilder appendRequest(java.lang.StringBuilder,io.netty.handler.codec.http.HttpRequest) -> a
    37:41:java.lang.StringBuilder appendResponse(java.lang.StringBuilder,io.netty.handler.codec.http.HttpResponse) -> a
    45:52:void appendCommon(java.lang.StringBuilder,io.netty.handler.codec.http.HttpMessage) -> a
    55:60:java.lang.StringBuilder appendFullRequest(java.lang.StringBuilder,io.netty.handler.codec.http.FullHttpRequest) -> a
    64:69:java.lang.StringBuilder appendFullResponse(java.lang.StringBuilder,io.netty.handler.codec.http.FullHttpResponse) -> a
    73:82:void appendFullCommon(java.lang.StringBuilder,io.netty.handler.codec.http.FullHttpMessage) -> a
    85:91:void appendInitialLine(java.lang.StringBuilder,io.netty.handler.codec.http.HttpRequest) -> b
    94:98:void appendInitialLine(java.lang.StringBuilder,io.netty.handler.codec.http.HttpResponse) -> b
    101:107:void appendHeaders(java.lang.StringBuilder,io.netty.handler.codec.http.HttpHeaders) -> a
    110:111:void removeLastNewLine(java.lang.StringBuilder) -> a
io.netty.handler.codec.http.HttpMethod -> io.netty.c.a.d.aa:
    io.netty.handler.codec.http.HttpMethod OPTIONS -> a
    io.netty.handler.codec.http.HttpMethod GET -> b
    io.netty.handler.codec.http.HttpMethod HEAD -> c
    io.netty.handler.codec.http.HttpMethod POST -> d
    io.netty.handler.codec.http.HttpMethod PUT -> e
    io.netty.handler.codec.http.HttpMethod PATCH -> f
    io.netty.handler.codec.http.HttpMethod DELETE -> g
    io.netty.handler.codec.http.HttpMethod TRACE -> h
    io.netty.handler.codec.http.HttpMethod CONNECT -> i
    io.netty.handler.codec.http.HttpMethod$EnumNameMap methodMap -> j
    io.netty.util.AsciiString name -> k
    109:110:io.netty.handler.codec.http.HttpMethod valueOf(java.lang.String) -> a
    122:136:void <init>(java.lang.String) -> <init>
    142:142:java.lang.String name() -> a
    149:149:io.netty.util.AsciiString asciiName() -> b
    154:154:int hashCode() -> hashCode
    159:164:boolean equals(java.lang.Object) -> equals
    169:169:java.lang.String toString() -> toString
    174:174:int compareTo(io.netty.handler.codec.http.HttpMethod) -> a
    28:28:int compareTo(java.lang.Object) -> compareTo
    36:101:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpMethod$EnumNameMap -> io.netty.c.a.d.ab:
    io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node[] values -> a
    int valuesMask -> b
    181:192:void <init>(io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node[]) -> <init>
    195:196:java.lang.Object get(java.lang.String) -> a
    205:205:int hashCode(java.lang.String) -> b
io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node -> io.netty.c.a.d.ac:
    java.lang.String key -> a
    java.lang.Object value -> b
    212:215:void <init>(java.lang.String,java.lang.Object) -> <init>
io.netty.handler.codec.http.HttpObject -> io.netty.c.a.d.ad:
    io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
io.netty.handler.codec.http.HttpObjectAggregator -> io.netty.c.a.d.ae:
    io.netty.util.internal.logging.InternalLogger logger -> a
    io.netty.handler.codec.http.FullHttpResponse CONTINUE -> c
    io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED -> d
    io.netty.handler.codec.http.FullHttpResponse TOO_LARGE_CLOSE -> e
    io.netty.handler.codec.http.FullHttpResponse TOO_LARGE -> f
    boolean closeOnExpectationFailed -> g
    boolean $assertionsDisabled -> b
    116:117:void <init>(int) -> <init>
    129:131:void <init>(int,boolean) -> <init>
    135:135:boolean isStartMessage(io.netty.handler.codec.http.HttpObject) -> a
    140:140:boolean isContentMessage(io.netty.handler.codec.http.HttpObject) -> b
    145:145:boolean isLastContentMessage(io.netty.handler.codec.http.HttpContent) -> a
    150:150:boolean isAggregated(io.netty.handler.codec.http.HttpObject) -> c
    156:158:boolean isContentLengthInvalid(io.netty.handler.codec.http.HttpMessage,int) -> a
    163:176:java.lang.Object continueResponse(io.netty.handler.codec.http.HttpMessage,int,io.netty.channel.ChannelPipeline) -> b
    181:187:java.lang.Object newContinueResponse(io.netty.handler.codec.http.HttpMessage,int,io.netty.channel.ChannelPipeline) -> a
    192:192:boolean closeAfterContinueResponse(java.lang.Object) -> e
    197:201:boolean ignoreContentAfterContinueResponse(java.lang.Object) -> f
    206:218:io.netty.handler.codec.http.FullHttpMessage beginAggregation(io.netty.handler.codec.http.HttpMessage,io.netty.buffer.ByteBuf) -> a
    223:227:void aggregate(io.netty.handler.codec.http.FullHttpMessage,io.netty.handler.codec.http.HttpContent) -> a
    237:242:void finishAggregation(io.netty.handler.codec.http.FullHttpMessage) -> a
    246:287:void handleOversizedMessage(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpMessage) -> a
    87:87:void handleOversizedMessage(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> a
    87:87:void finishAggregation(io.netty.buffer.ByteBufHolder) -> b
    87:87:void aggregate(io.netty.buffer.ByteBufHolder,io.netty.buffer.ByteBufHolder) -> a
    87:87:io.netty.buffer.ByteBufHolder beginAggregation(java.lang.Object,io.netty.buffer.ByteBuf) -> a
    87:87:java.lang.Object newContinueResponse(java.lang.Object,int,io.netty.channel.ChannelPipeline) -> a
    87:87:boolean isContentLengthInvalid(java.lang.Object,int) -> a
    87:87:boolean isAggregated(java.lang.Object) -> d
    87:87:boolean isLastContentMessage(io.netty.buffer.ByteBufHolder) -> a
    87:87:boolean isContentMessage(java.lang.Object) -> c
    87:87:boolean isStartMessage(java.lang.Object) -> b
    87:87:io.netty.util.internal.logging.InternalLogger access$000() -> b
    87:105:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpObjectAggregator$1 -> io.netty.c.a.d.af:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.handler.codec.http.HttpObjectAggregator this$0 -> b
    254:254:void <init>(io.netty.handler.codec.http.HttpObjectAggregator,io.netty.channel.ChannelHandlerContext) -> <init>
    257:261:void operationComplete(io.netty.channel.ChannelFuture) -> a
    254:254:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http.HttpObjectAggregator$2 -> io.netty.c.a.d.ag:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.handler.codec.http.HttpObjectAggregator this$0 -> b
    264:264:void <init>(io.netty.handler.codec.http.HttpObjectAggregator,io.netty.channel.ChannelHandlerContext) -> <init>
    267:271:void operationComplete(io.netty.channel.ChannelFuture) -> a
    264:264:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage -> io.netty.c.a.d.ah:
    io.netty.handler.codec.http.HttpMessage message -> a
    io.netty.buffer.ByteBuf content -> c
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> d
    294:298:void <init>(io.netty.handler.codec.http.HttpMessage,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders) -> <init>
    302:306:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    311:312:void setTrailingHeaders(io.netty.handler.codec.http.HttpHeaders) -> a
    316:316:io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    321:321:io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    326:327:io.netty.handler.codec.http.FullHttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> a
    332:332:io.netty.handler.codec.http.HttpHeaders headers() -> headers
    337:337:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    342:342:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    347:348:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    352:352:io.netty.buffer.ByteBuf content() -> content
    357:357:int refCnt() -> refCnt
    362:363:io.netty.handler.codec.http.FullHttpMessage retain() -> a
    368:369:io.netty.handler.codec.http.FullHttpMessage retain(int) -> a
    374:375:io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> a
    380:381:io.netty.handler.codec.http.FullHttpMessage touch() -> b
    386:386:boolean release() -> release
    391:391:boolean release(int) -> release
    289:289:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    289:289:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    289:289:io.netty.handler.codec.http.HttpContent touch() -> touch
    289:289:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    289:289:io.netty.handler.codec.http.HttpContent retain() -> retain
    289:289:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    289:289:io.netty.util.ReferenceCounted touch() -> touch
    289:289:io.netty.util.ReferenceCounted retain(int) -> retain
    289:289:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest -> io.netty.c.a.d.ai:
    407:408:void <init>(io.netty.handler.codec.http.HttpRequest,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders) -> <init>
    436:437:io.netty.handler.codec.http.FullHttpRequest retain(int) -> b
    442:443:io.netty.handler.codec.http.FullHttpRequest retain() -> c
    448:449:io.netty.handler.codec.http.FullHttpRequest touch() -> d
    454:455:io.netty.handler.codec.http.FullHttpRequest touch(java.lang.Object) -> b
    460:461:io.netty.handler.codec.http.FullHttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> a
    466:467:io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> a
    472:472:io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    477:477:java.lang.String getUri() -> getUri
    482:482:io.netty.handler.codec.http.HttpMethod method() -> method
    487:487:java.lang.String uri() -> uri
    492:493:io.netty.handler.codec.http.FullHttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> b
    498:498:java.lang.String toString() -> toString
    404:404:io.netty.handler.codec.http.FullHttpMessage touch() -> b
    404:404:io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> a
    404:404:io.netty.handler.codec.http.FullHttpMessage retain(int) -> a
    404:404:io.netty.handler.codec.http.FullHttpMessage retain() -> a
    404:404:io.netty.handler.codec.http.FullHttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> a
    404:404:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    404:404:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    404:404:io.netty.handler.codec.http.HttpContent touch() -> touch
    404:404:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    404:404:io.netty.handler.codec.http.HttpContent retain() -> retain
    404:404:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    404:404:io.netty.util.ReferenceCounted touch() -> touch
    404:404:io.netty.util.ReferenceCounted retain(int) -> retain
    404:404:io.netty.util.ReferenceCounted retain() -> retain
    404:404:io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    404:404:io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    404:404:io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse -> io.netty.c.a.d.aj:
    506:507:void <init>(io.netty.handler.codec.http.HttpResponse,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders) -> <init>
    521:521:io.netty.handler.codec.http.FullHttpResponse retainedDuplicate() -> retainedDuplicate
    526:530:io.netty.handler.codec.http.FullHttpResponse replace(io.netty.buffer.ByteBuf) -> a
    541:541:io.netty.handler.codec.http.HttpResponseStatus getStatus() -> c
    546:546:io.netty.handler.codec.http.HttpResponseStatus status() -> status
    551:552:io.netty.handler.codec.http.FullHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> b
    557:558:io.netty.handler.codec.http.FullHttpResponse retain(int) -> b
    563:564:io.netty.handler.codec.http.FullHttpResponse retain() -> retain
    569:570:io.netty.handler.codec.http.FullHttpResponse touch(java.lang.Object) -> b
    575:576:io.netty.handler.codec.http.FullHttpResponse touch() -> d
    581:581:java.lang.String toString() -> toString
    502:502:io.netty.handler.codec.http.FullHttpMessage touch() -> b
    502:502:io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> a
    502:502:io.netty.handler.codec.http.FullHttpMessage retain(int) -> a
    502:502:io.netty.handler.codec.http.FullHttpMessage retain() -> a
    502:502:io.netty.handler.codec.http.FullHttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> a
    502:502:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    502:502:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    502:502:io.netty.handler.codec.http.HttpContent touch() -> touch
    502:502:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    502:502:io.netty.handler.codec.http.HttpContent retain() -> retain
    502:502:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    502:502:io.netty.util.ReferenceCounted touch() -> touch
    502:502:io.netty.util.ReferenceCounted retain(int) -> retain
    502:502:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.HttpObjectDecoder -> io.netty.c.a.d.ak:
    int maxChunkSize -> a
    boolean chunkedSupported -> d
    boolean validateHeaders -> b
    io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser headerParser -> e
    io.netty.handler.codec.http.HttpObjectDecoder$LineParser lineParser -> f
    io.netty.handler.codec.http.HttpMessage message -> g
    long chunkSize -> h
    long contentLength -> i
    boolean resetRequested -> j
    java.lang.CharSequence name -> k
    java.lang.CharSequence value -> l
    io.netty.handler.codec.http.LastHttpContent trailer -> m
    io.netty.handler.codec.http.HttpObjectDecoder$State currentState -> n
    boolean $assertionsDisabled -> c
    148:149:void <init>() -> <init>
    156:157:void <init>(int,int,int,boolean) -> <init>
    165:166:void <init>(int,int,int,boolean,boolean) -> <init>
    113:192:void <init>(int,int,int,boolean,boolean,int) -> <init>
    196:398:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    402:445:void decodeLast(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decodeLast
    449:461:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    464:484:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> a
    492:498:boolean isSwitchingToNonHttp1Protocol(io.netty.handler.codec.http.HttpResponse) -> a
    506:507:void reset() -> a
    510:528:void resetNow() -> d
    531:546:io.netty.handler.codec.http.HttpMessage invalidMessage(io.netty.buffer.ByteBuf,java.lang.Exception) -> a
    550:560:io.netty.handler.codec.http.HttpContent invalidChunk(io.netty.buffer.ByteBuf,java.lang.Exception) -> b
    564:576:boolean skipControlCharacters(io.netty.buffer.ByteBuf) -> a
    580:630:io.netty.handler.codec.http.HttpObjectDecoder$State readHeaders(io.netty.buffer.ByteBuf) -> b
    634:637:long contentLength() -> e
    641:687:io.netty.handler.codec.http.LastHttpContent readTrailingHeaders(io.netty.buffer.ByteBuf) -> c
    boolean isDecodingRequest() -> b
    io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> a
    io.netty.handler.codec.http.HttpMessage createInvalidMessage() -> c
    695:704:int getChunkSize(java.lang.String) -> a
    715:727:java.lang.String[] splitInitialLine(io.netty.util.internal.AppendableCharSequence) -> a
    731:761:void splitHeader(io.netty.util.internal.AppendableCharSequence) -> b
    764:769:int findNonWhitespace(io.netty.util.internal.AppendableCharSequence,int) -> a
    773:778:int findWhitespace(io.netty.util.internal.AppendableCharSequence,int) -> b
    782:787:int findEndOfString(io.netty.util.internal.AppendableCharSequence) -> c
    102:102:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpObjectDecoder$1 -> io.netty.c.a.d.al:
    int[] $SwitchMap$io$netty$handler$codec$http$HttpObjectDecoder$State -> a
    232:232:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser -> io.netty.c.a.d.am:
    io.netty.util.internal.AppendableCharSequence seq -> a
    int maxLength -> b
    int size -> o
    795:798:void <init>(io.netty.util.internal.AppendableCharSequence,int) -> <init>
    801:809:io.netty.util.internal.AppendableCharSequence parse(io.netty.buffer.ByteBuf) -> a
    813:814:void reset() -> a
    818:835:boolean process(byte) -> a
    839:839:io.netty.handler.codec.TooLongFrameException newException(int) -> a
io.netty.handler.codec.http.HttpObjectDecoder$LineParser -> io.netty.c.a.d.an:
    846:847:void <init>(io.netty.util.internal.AppendableCharSequence,int) -> <init>
    851:852:io.netty.util.internal.AppendableCharSequence parse(io.netty.buffer.ByteBuf) -> a
    857:857:io.netty.handler.codec.TooLongFrameException newException(int) -> a
io.netty.handler.codec.http.HttpObjectDecoder$State -> io.netty.c.a.d.ao:
    io.netty.handler.codec.http.HttpObjectDecoder$State SKIP_CONTROL_CHARS -> a
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_INITIAL -> b
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_HEADER -> c
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_VARIABLE_LENGTH_CONTENT -> d
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_FIXED_LENGTH_CONTENT -> e
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_SIZE -> f
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNKED_CONTENT -> g
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_DELIMITER -> h
    io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_FOOTER -> i
    io.netty.handler.codec.http.HttpObjectDecoder$State BAD_MESSAGE -> j
    io.netty.handler.codec.http.HttpObjectDecoder$State UPGRADED -> k
    io.netty.handler.codec.http.HttpObjectDecoder$State[] $VALUES -> l
    126:126:io.netty.handler.codec.http.HttpObjectDecoder$State[] values() -> values
    126:126:io.netty.handler.codec.http.HttpObjectDecoder$State valueOf(java.lang.String) -> valueOf
    126:126:void <init>(java.lang.String,int) -> <init>
    126:137:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpObjectEncoder -> io.netty.c.a.d.ap:
    int CRLF_SHORT -> CRLF_SHORT
    int ZERO_CRLF_MEDIUM -> ZERO_CRLF_MEDIUM
    byte[] ZERO_CRLF_CRLF -> ZERO_CRLF_CRLF
    io.netty.buffer.ByteBuf CRLF_BUF -> CRLF_BUF
    io.netty.buffer.ByteBuf ZERO_CRLF_CRLF_BUF -> ZERO_CRLF_CRLF_BUF
    float HEADERS_WEIGHT_NEW -> HEADERS_WEIGHT_NEW
    float HEADERS_WEIGHT_HISTORICAL -> HEADERS_WEIGHT_HISTORICAL
    float TRAILERS_WEIGHT_NEW -> TRAILERS_WEIGHT_NEW
    float TRAILERS_WEIGHT_HISTORICAL -> TRAILERS_WEIGHT_HISTORICAL
    int ST_INIT -> ST_INIT
    int ST_CONTENT_NON_CHUNK -> ST_CONTENT_NON_CHUNK
    int ST_CONTENT_CHUNK -> ST_CONTENT_CHUNK
    int ST_CONTENT_ALWAYS_EMPTY -> ST_CONTENT_ALWAYS_EMPTY
    int state -> state
    float headersEncodedSizeAccumulator -> headersEncodedSizeAccumulator
    float trailersEncodedSizeAccumulator -> trailersEncodedSizeAccumulator
    49:79:void <init>() -> <init>
    83:181:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    187:192:void encodeHeaders(io.netty.handler.codec.http.HttpHeaders,io.netty.buffer.ByteBuf) -> encodeHeaders
    195:223:void encodeChunkedContent(io.netty.channel.ChannelHandlerContext,java.lang.Object,long,java.util.List) -> encodeChunkedContent
    230:230:void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpMessage,boolean) -> sanitizeHeadersBeforeEncode
    240:240:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    245:245:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    249:258:java.lang.Object encodeAndRetain(java.lang.Object) -> encodeAndRetain
    262:271:long contentLength(java.lang.Object) -> contentLength
    281:281:int padSizeForAccumulation(int) -> padSizeForAccumulation
    286:287:void encodeAscii(java.lang.String,io.netty.buffer.ByteBuf) -> encodeAscii
    void encodeInitialLine(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    52:55:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpRequest -> io.netty.c.a.d.aq:
    io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    io.netty.handler.codec.http.HttpMethod method() -> method
    io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    java.lang.String getUri() -> getUri
    java.lang.String uri() -> uri
    io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
io.netty.handler.codec.http.HttpRequestDecoder -> io.netty.c.a.d.ar:
    62:63:void <init>() -> <init>
    70:71:void <init>(int,int,int) -> <init>
    81:82:void <init>(int,int,int,boolean,int) -> <init>
    86:88:io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> a
    93:93:io.netty.handler.codec.http.HttpMessage createInvalidMessage() -> c
    98:98:boolean isDecodingRequest() -> b
io.netty.handler.codec.http.HttpRequestEncoder -> io.netty.c.a.d.as:
    28:28:void <init>() -> <init>
    36:36:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    41:79:void encodeInitialLine(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpRequest) -> a
    28:28:void encodeInitialLine(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
io.netty.handler.codec.http.HttpResponse -> io.netty.c.a.d.at:
    io.netty.handler.codec.http.HttpResponseStatus status() -> status
io.netty.handler.codec.http.HttpResponseDecoder -> io.netty.c.a.d.au:
    io.netty.handler.codec.http.HttpResponseStatus UNKNOWN_STATUS -> a
    93:94:void <init>() -> <init>
    106:107:void <init>(int,int,int,boolean) -> <init>
    112:113:void <init>(int,int,int,boolean,int) -> <init>
    117:119:io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> a
    124:124:io.netty.handler.codec.http.HttpMessage createInvalidMessage() -> c
    129:129:boolean isDecodingRequest() -> b
    86:86:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpResponseEncoder -> io.netty.c.a.d.av:
    27:27:void <init>() -> <init>
    31:31:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    36:40:void encodeInitialLine(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpResponse) -> encodeInitialLine
    44:58:void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpResponse,boolean) -> sanitizeHeadersBeforeEncode
    64:77:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpResponse) -> isContentAlwaysEmpty
    27:27:void encodeInitialLine(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    27:27:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    27:27:void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpMessage,boolean) -> sanitizeHeadersBeforeEncode
io.netty.handler.codec.http.HttpResponseStatus -> io.netty.c.a.d.aw:
    io.netty.handler.codec.http.HttpResponseStatus CONTINUE -> a
    io.netty.handler.codec.http.HttpResponseStatus SWITCHING_PROTOCOLS -> b
    io.netty.handler.codec.http.HttpResponseStatus PROCESSING -> c
    io.netty.handler.codec.http.HttpResponseStatus OK -> d
    io.netty.handler.codec.http.HttpResponseStatus CREATED -> e
    io.netty.handler.codec.http.HttpResponseStatus ACCEPTED -> f
    io.netty.handler.codec.http.HttpResponseStatus NON_AUTHORITATIVE_INFORMATION -> g
    io.netty.handler.codec.http.HttpResponseStatus NO_CONTENT -> h
    io.netty.handler.codec.http.HttpResponseStatus RESET_CONTENT -> i
    io.netty.handler.codec.http.HttpResponseStatus PARTIAL_CONTENT -> j
    io.netty.handler.codec.http.HttpResponseStatus MULTI_STATUS -> k
    io.netty.handler.codec.http.HttpResponseStatus MULTIPLE_CHOICES -> l
    io.netty.handler.codec.http.HttpResponseStatus MOVED_PERMANENTLY -> m
    io.netty.handler.codec.http.HttpResponseStatus FOUND -> n
    io.netty.handler.codec.http.HttpResponseStatus SEE_OTHER -> o
    io.netty.handler.codec.http.HttpResponseStatus NOT_MODIFIED -> p
    io.netty.handler.codec.http.HttpResponseStatus USE_PROXY -> q
    io.netty.handler.codec.http.HttpResponseStatus TEMPORARY_REDIRECT -> r
    io.netty.handler.codec.http.HttpResponseStatus PERMANENT_REDIRECT -> s
    io.netty.handler.codec.http.HttpResponseStatus BAD_REQUEST -> t
    io.netty.handler.codec.http.HttpResponseStatus UNAUTHORIZED -> u
    io.netty.handler.codec.http.HttpResponseStatus PAYMENT_REQUIRED -> v
    io.netty.handler.codec.http.HttpResponseStatus FORBIDDEN -> w
    io.netty.handler.codec.http.HttpResponseStatus NOT_FOUND -> x
    io.netty.handler.codec.http.HttpResponseStatus METHOD_NOT_ALLOWED -> y
    io.netty.handler.codec.http.HttpResponseStatus NOT_ACCEPTABLE -> z
    io.netty.handler.codec.http.HttpResponseStatus PROXY_AUTHENTICATION_REQUIRED -> A
    io.netty.handler.codec.http.HttpResponseStatus REQUEST_TIMEOUT -> B
    io.netty.handler.codec.http.HttpResponseStatus CONFLICT -> C
    io.netty.handler.codec.http.HttpResponseStatus GONE -> D
    io.netty.handler.codec.http.HttpResponseStatus LENGTH_REQUIRED -> E
    io.netty.handler.codec.http.HttpResponseStatus PRECONDITION_FAILED -> F
    io.netty.handler.codec.http.HttpResponseStatus REQUEST_ENTITY_TOO_LARGE -> G
    io.netty.handler.codec.http.HttpResponseStatus REQUEST_URI_TOO_LONG -> H
    io.netty.handler.codec.http.HttpResponseStatus UNSUPPORTED_MEDIA_TYPE -> I
    io.netty.handler.codec.http.HttpResponseStatus REQUESTED_RANGE_NOT_SATISFIABLE -> J
    io.netty.handler.codec.http.HttpResponseStatus EXPECTATION_FAILED -> K
    io.netty.handler.codec.http.HttpResponseStatus MISDIRECTED_REQUEST -> L
    io.netty.handler.codec.http.HttpResponseStatus UNPROCESSABLE_ENTITY -> M
    io.netty.handler.codec.http.HttpResponseStatus LOCKED -> N
    io.netty.handler.codec.http.HttpResponseStatus FAILED_DEPENDENCY -> O
    io.netty.handler.codec.http.HttpResponseStatus UNORDERED_COLLECTION -> P
    io.netty.handler.codec.http.HttpResponseStatus UPGRADE_REQUIRED -> Q
    io.netty.handler.codec.http.HttpResponseStatus PRECONDITION_REQUIRED -> R
    io.netty.handler.codec.http.HttpResponseStatus TOO_MANY_REQUESTS -> S
    io.netty.handler.codec.http.HttpResponseStatus REQUEST_HEADER_FIELDS_TOO_LARGE -> T
    io.netty.handler.codec.http.HttpResponseStatus INTERNAL_SERVER_ERROR -> U
    io.netty.handler.codec.http.HttpResponseStatus NOT_IMPLEMENTED -> V
    io.netty.handler.codec.http.HttpResponseStatus BAD_GATEWAY -> W
    io.netty.handler.codec.http.HttpResponseStatus SERVICE_UNAVAILABLE -> X
    io.netty.handler.codec.http.HttpResponseStatus GATEWAY_TIMEOUT -> Y
    io.netty.handler.codec.http.HttpResponseStatus HTTP_VERSION_NOT_SUPPORTED -> Z
    io.netty.handler.codec.http.HttpResponseStatus VARIANT_ALSO_NEGOTIATES -> aa
    io.netty.handler.codec.http.HttpResponseStatus INSUFFICIENT_STORAGE -> ab
    io.netty.handler.codec.http.HttpResponseStatus NOT_EXTENDED -> ac
    io.netty.handler.codec.http.HttpResponseStatus NETWORK_AUTHENTICATION_REQUIRED -> ad
    int code -> ae
    io.netty.util.AsciiString codeAsText -> af
    io.netty.handler.codec.http.HttpStatusClass codeClass -> ag
    java.lang.String reasonPhrase -> ah
    byte[] bytes -> ai
    322:322:io.netty.handler.codec.http.HttpResponseStatus newStatus(int,java.lang.String) -> a
    331:446:io.netty.handler.codec.http.HttpResponseStatus valueOf(int) -> a
    569:570:void <init>(int) -> <init>
    576:577:void <init>(int,java.lang.String) -> <init>
    579:608:void <init>(int,java.lang.String,boolean) -> <init>
    614:614:int code() -> a
    621:621:io.netty.util.AsciiString codeAsText() -> b
    628:628:java.lang.String reasonPhrase() -> c
    635:639:io.netty.handler.codec.http.HttpStatusClass codeClass() -> d
    644:644:int hashCode() -> hashCode
    653:657:boolean equals(java.lang.Object) -> equals
    666:666:int compareTo(io.netty.handler.codec.http.HttpResponseStatus) -> a
    671:675:java.lang.String toString() -> toString
    679:686:void encode(io.netty.buffer.ByteBuf) -> a
    30:30:int compareTo(java.lang.Object) -> compareTo
    35:319:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpScheme -> io.netty.c.a.d.ax:
    io.netty.handler.codec.http.HttpScheme HTTP -> a
    io.netty.handler.codec.http.HttpScheme HTTPS -> b
    int port -> c
    io.netty.util.AsciiString name -> d
    39:42:void <init>(int,java.lang.String) -> <init>
    45:45:io.netty.util.AsciiString name() -> a
    49:49:int port() -> b
    54:58:boolean equals(java.lang.Object) -> equals
    63:63:int hashCode() -> hashCode
    68:68:java.lang.String toString() -> toString
    29:34:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpServerCodec -> io.netty.c.a.d.ay:
    java.util.Queue queue -> a
    44:45:void <init>() -> <init>
    36:53:void <init>(int,int,int) -> <init>
    32:32:java.util.Queue access$100(io.netty.handler.codec.http.HttpServerCodec) -> a
io.netty.handler.codec.http.HttpServerCodec$1 -> io.netty.c.a.d.az:
io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder -> io.netty.c.a.d.aA:
    io.netty.handler.codec.http.HttpServerCodec this$0 -> a
    84:86:void <init>(io.netty.handler.codec.http.HttpServerCodec,int,int,int) -> <init>
    100:109:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder -> io.netty.c.a.d.aB:
    io.netty.handler.codec.http.HttpMethod method -> b
    io.netty.handler.codec.http.HttpServerCodec this$0 -> a
    112:112:void <init>(io.netty.handler.codec.http.HttpServerCodec) -> <init>
    118:126:void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpResponse,boolean) -> sanitizeHeadersBeforeEncode
    130:131:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpResponse) -> isContentAlwaysEmpty
    112:112:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    112:112:void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpMessage,boolean) -> sanitizeHeadersBeforeEncode
    112:112:void <init>(io.netty.handler.codec.http.HttpServerCodec,io.netty.handler.codec.http.HttpServerCodec$1) -> <init>
io.netty.handler.codec.http.HttpStatusClass -> io.netty.c.a.d.aC:
    io.netty.handler.codec.http.HttpStatusClass INFORMATIONAL -> a
    io.netty.handler.codec.http.HttpStatusClass SUCCESS -> b
    io.netty.handler.codec.http.HttpStatusClass REDIRECTION -> c
    io.netty.handler.codec.http.HttpStatusClass CLIENT_ERROR -> d
    io.netty.handler.codec.http.HttpStatusClass SERVER_ERROR -> e
    io.netty.handler.codec.http.HttpStatusClass UNKNOWN -> f
    int min -> g
    int max -> h
    io.netty.util.AsciiString defaultReasonPhrase -> i
    io.netty.handler.codec.http.HttpStatusClass[] $VALUES -> j
    24:24:io.netty.handler.codec.http.HttpStatusClass[] values() -> values
    24:24:io.netty.handler.codec.http.HttpStatusClass valueOf(java.lang.String) -> valueOf
    59:74:io.netty.handler.codec.http.HttpStatusClass valueOf(int) -> a
    82:87:io.netty.handler.codec.http.HttpStatusClass valueOf(java.lang.CharSequence) -> a
    91:91:int digit(char) -> a
    95:95:boolean isDigit(char) -> b
    102:106:void <init>(java.lang.String,int,int,int,java.lang.String) -> <init>
    112:112:boolean contains(int) -> b
    119:119:io.netty.util.AsciiString defaultReasonPhrase() -> a
    24:24:void <init>(java.lang.String,int,int,int,java.lang.String,io.netty.handler.codec.http.HttpStatusClass$1) -> <init>
    24:48:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpStatusClass$1 -> io.netty.c.a.d.aD:
    48:48:void <init>(java.lang.String,int,int,int,java.lang.String) -> <init>
    51:51:boolean contains(int) -> b
io.netty.handler.codec.http.HttpUtil -> io.netty.c.a.d.aE:
    io.netty.util.AsciiString CHARSET_EQUALS -> a
    io.netty.util.AsciiString SEMICOLON -> b
    65:73:boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage) -> a
    176:189:long getContentLength(io.netty.handler.codec.http.HttpMessage,long) -> a
    208:226:int getWebSocketContentLength(io.netty.handler.codec.http.HttpMessage) -> f
    233:234:void setContentLength(io.netty.handler.codec.http.HttpMessage,long) -> b
    237:237:boolean isContentLengthSet(io.netty.handler.codec.http.HttpMessage) -> b
    250:256:boolean is100ContinueExpected(io.netty.handler.codec.http.HttpMessage) -> c
    268:273:boolean isUnsupportedExpectation(io.netty.handler.codec.http.HttpMessage) -> d
    282:283:boolean isExpectHeaderValid(io.netty.handler.codec.http.HttpMessage) -> g
    308:308:boolean isTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage) -> e
    319:341:void setTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage,boolean) -> a
    33:34:void <clinit>() -> <clinit>
io.netty.handler.codec.http.HttpVersion -> io.netty.c.a.d.aF:
    java.util.regex.Pattern VERSION_PATTERN -> c
    io.netty.handler.codec.http.HttpVersion HTTP_1_0 -> a
    io.netty.handler.codec.http.HttpVersion HTTP_1_1 -> b
    java.lang.String protocolName -> d
    int majorVersion -> e
    int minorVersion -> f
    java.lang.String text -> g
    boolean keepAliveDefault -> h
    byte[] bytes -> i
    56:78:io.netty.handler.codec.http.HttpVersion valueOf(java.lang.String) -> a
    82:88:io.netty.handler.codec.http.HttpVersion version0(java.lang.String) -> b
    109:130:void <init>(java.lang.String,boolean) -> <init>
    151:186:void <init>(java.lang.String,int,int,boolean,boolean) -> <init>
    192:192:java.lang.String protocolName() -> a
    199:199:int majorVersion() -> b
    206:206:int minorVersion() -> c
    213:213:java.lang.String text() -> d
    221:221:boolean isKeepAliveDefault() -> e
    229:229:java.lang.String toString() -> toString
    234:235:int hashCode() -> hashCode
    240:247:boolean equals(java.lang.Object) -> equals
    252:262:int compareTo(io.netty.handler.codec.http.HttpVersion) -> a
    266:271:void encode(io.netty.buffer.ByteBuf) -> a
    29:29:int compareTo(java.lang.Object) -> compareTo
    31:45:void <clinit>() -> <clinit>
io.netty.handler.codec.http.LastHttpContent -> io.netty.c.a.d.aG:
    io.netty.handler.codec.http.LastHttpContent EMPTY_LAST_CONTENT -> b
    io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    30:30:void <clinit>() -> <clinit>
io.netty.handler.codec.http.LastHttpContent$1 -> io.netty.c.a.d.aH:
    30:30:void <init>() -> <init>
    34:34:io.netty.buffer.ByteBuf content() -> content
    59:59:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    64:64:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    70:70:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    75:75:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    80:80:int refCnt() -> refCnt
    85:85:io.netty.handler.codec.http.LastHttpContent retain() -> a
    90:90:io.netty.handler.codec.http.LastHttpContent retain(int) -> a
    95:95:io.netty.handler.codec.http.LastHttpContent touch() -> b
    100:100:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> a
    105:105:boolean release() -> release
    110:110:boolean release(int) -> release
    115:115:java.lang.String toString() -> toString
    30:30:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.HttpContent touch() -> touch
    30:30:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    30:30:io.netty.handler.codec.http.HttpContent retain() -> retain
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.QueryStringDecoder -> io.netty.c.a.d.aI:
    java.nio.charset.Charset charset -> a
    java.lang.String uri -> b
    int maxParams -> c
    int pathEndIdx -> d
    java.util.Map params -> e
    80:81:void <init>(java.lang.String) -> <init>
    96:97:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    104:105:void <init>(java.lang.String,java.nio.charset.Charset,boolean) -> <init>
    111:118:void <init>(java.lang.String,java.nio.charset.Charset,boolean,int) -> <init>
    155:155:java.lang.String toString() -> toString
    162:162:java.lang.String uri() -> a
    179:182:java.util.Map parameters() -> b
    201:204:int pathEndIdx() -> c
    208:246:java.util.Map decodeParams(java.lang.String,int,java.nio.charset.Charset,int) -> a
    251:265:boolean addParam(java.lang.String,int,int,int,java.util.Map,java.nio.charset.Charset) -> a
    306:309:java.lang.String decodeComponent(java.lang.String,java.nio.charset.Charset) -> a
    313:372:java.lang.String decodeComponent(java.lang.String,int,int,java.nio.charset.Charset,boolean) -> a
    376:383:int findPathEndIndex(java.lang.String) -> a
io.netty.handler.codec.http.multipart.AbstractDiskHttpData -> io.netty.c.a.d.a.a:
    io.netty.util.internal.logging.InternalLogger logger -> c
    java.io.File file -> d
    boolean isRenamed -> e
    java.nio.channels.FileChannel fileChannel -> f
    47:48:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    java.lang.String getDiskFilename() -> a
    java.lang.String getPrefix() -> b
    java.lang.String getBaseDirectory() -> c
    java.lang.String getPostfix() -> d
    boolean deleteOnExit() -> e
    81:98:java.io.File tempFile() -> l
    103:141:void setContent(io.netty.buffer.ByteBuf) -> a
    146:191:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    245:262:void delete() -> delete
    266:269:byte[] get() -> f
    274:278:io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    332:332:boolean isInMemory() -> g
    414:431:byte[] readFrom(java.io.File) -> a
    436:436:java.io.File getFile() -> h
    441:441:io.netty.handler.codec.http.multipart.HttpData touch() -> i
    446:446:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> a
    38:38:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    38:38:io.netty.util.ReferenceCounted touch() -> touch
    40:40:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.AbstractHttpData -> io.netty.c.a.d.a.b:
    java.util.regex.Pattern STRIP_PATTERN -> c
    java.util.regex.Pattern REPLACE_PATTERN -> d
    java.lang.String name -> e
    long definedSize -> a
    long size -> b
    java.nio.charset.Charset charset -> f
    boolean completed -> g
    long maxSize -> h
    38:59:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    66:67:void setMaxSize(long) -> setMaxSize
    71:74:void checkSize(long) -> checkSize
    78:78:java.lang.String getName() -> getName
    83:83:boolean isCompleted() -> isCompleted
    87:88:void setCompleted() -> j
    92:92:java.nio.charset.Charset getCharset() -> getCharset
    97:101:void setCharset(java.nio.charset.Charset) -> setCharset
    105:105:long length() -> length
    110:110:long definedLength() -> definedLength
    116:118:io.netty.buffer.ByteBuf content() -> content
    124:125:void deallocate() -> deallocate
    129:130:io.netty.handler.codec.http.multipart.HttpData retain() -> k
    135:136:io.netty.handler.codec.http.multipart.HttpData retain(int) -> a
    io.netty.handler.codec.http.multipart.HttpData touch() -> i
    io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> a
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    32:33:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData -> io.netty.c.a.d.a.c:
    io.netty.buffer.ByteBuf byteBuf -> c
    45:46:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    50:65:void setContent(io.netty.buffer.ByteBuf) -> a
    96:122:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    156:160:void delete() -> delete
    195:195:io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    220:220:boolean isInMemory() -> a
    264:264:io.netty.handler.codec.http.multipart.HttpData touch() -> i
    269:272:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> a
    39:39:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    39:39:io.netty.util.ReferenceCounted touch() -> touch
io.netty.handler.codec.http.multipart.Attribute -> io.netty.c.a.d.a.d:
    java.lang.String getValue() -> e_
    void setValue(java.lang.String) -> a
    io.netty.handler.codec.http.multipart.Attribute retain() -> f_
    io.netty.handler.codec.http.multipart.Attribute retain(int) -> b
    io.netty.handler.codec.http.multipart.Attribute touch() -> g_
    io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> b
io.netty.handler.codec.http.multipart.CaseIgnoringComparator -> io.netty.c.a.d.a.e:
    io.netty.handler.codec.http.multipart.CaseIgnoringComparator INSTANCE -> a
    27:28:void <init>() -> <init>
    32:50:int compare(java.lang.CharSequence,java.lang.CharSequence) -> a
    21:21:int compare(java.lang.Object,java.lang.Object) -> compare
    25:25:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.DefaultHttpDataFactory -> io.netty.c.a.d.a.f:
    long MINSIZE -> MINSIZE
    long MAXSIZE -> MAXSIZE
    boolean useDisk -> useDisk
    boolean checkSize -> checkSize
    long minSize -> minSize
    long maxSize -> maxSize
    java.nio.charset.Charset charset -> charset
    java.util.Map requestFileDeleteMap -> requestFileDeleteMap
    55:72:void <init>() -> <init>
    75:77:void <init>(java.nio.charset.Charset) -> <init>
    55:85:void <init>(boolean) -> <init>
    88:90:void <init>(boolean,java.nio.charset.Charset) -> <init>
    55:99:void <init>(long) -> <init>
    102:104:void <init>(long,java.nio.charset.Charset) -> <init>
    108:109:void setMaxLimit(long) -> setMaxLimit
    115:120:java.util.List getList(io.netty.handler.codec.http.HttpRequest) -> getList
    125:141:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String) -> createAttribute
    146:162:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,long) -> createAttribute
    170:174:void checkHttpDataSize(io.netty.handler.codec.http.multipart.HttpData) -> checkHttpDataSize
    178:207:io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String) -> createAttribute
    215:237:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> createFileUpload
    242:246:void removeHttpDataFromClean(io.netty.handler.codec.http.HttpRequest,io.netty.handler.codec.http.multipart.InterfaceHttpData) -> removeHttpDataFromClean
    250:257:void cleanRequestHttpData(io.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpData
    261:274:void cleanAllHttpData() -> cleanAllHttpData
    278:279:void cleanRequestHttpDatas(io.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpDatas
    283:284:void cleanAllHttpDatas() -> cleanAllHttpDatas
io.netty.handler.codec.http.multipart.DiskAttribute -> io.netty.c.a.d.a.g:
    java.lang.String baseDirectory -> c
    boolean deleteOnExitTemporaryFile -> d
    47:48:void <init>(java.lang.String,long) -> <init>
    51:52:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    55:56:void <init>(java.lang.String,long,java.nio.charset.Charset) -> <init>
    63:65:void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset) -> <init>
    69:69:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    74:75:java.lang.String getValue() -> e_
    80:90:void setValue(java.lang.String) -> a
    94:100:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    104:104:int hashCode() -> hashCode
    109:113:boolean equals(java.lang.Object) -> equals
    118:122:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> a
    126:126:int compareTo(io.netty.handler.codec.http.multipart.Attribute) -> a
    132:134:java.lang.String toString() -> toString
    140:140:boolean deleteOnExit() -> e
    145:145:java.lang.String getBaseDirectory() -> c
    150:150:java.lang.String getDiskFilename() -> a
    155:155:java.lang.String getPostfix() -> d
    160:160:java.lang.String getPrefix() -> b
    211:212:io.netty.handler.codec.http.multipart.Attribute retain(int) -> b
    217:218:io.netty.handler.codec.http.multipart.Attribute retain() -> f_
    223:224:io.netty.handler.codec.http.multipart.Attribute touch() -> g_
    229:230:io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> b
    30:30:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> a
    30:30:io.netty.handler.codec.http.multipart.HttpData touch() -> i
    30:30:io.netty.handler.codec.http.multipart.HttpData retain(int) -> a
    30:30:io.netty.handler.codec.http.multipart.HttpData retain() -> k
    30:30:int compareTo(java.lang.Object) -> compareTo
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
    33:33:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.DiskFileUpload -> io.netty.c.a.d.a.h:
    java.lang.String baseDirectory -> c
    boolean deleteOnExitTemporaryFile -> d
    java.lang.String filename -> e
    java.lang.String contentType -> f
    java.lang.String contentTransferEncoding -> g
    47:51:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> <init>
    55:55:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    60:60:java.lang.String getFilename() -> getFilename
    65:69:void setFilename(java.lang.String) -> a
    73:73:int hashCode() -> hashCode
    78:78:boolean equals(java.lang.Object) -> equals
    83:87:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> a
    91:91:int compareTo(io.netty.handler.codec.http.multipart.FileUpload) -> a
    96:100:void setContentType(java.lang.String) -> b
    104:104:java.lang.String getContentType() -> getContentType
    109:109:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    114:115:void setContentTransferEncoding(java.lang.String) -> c
    119:134:java.lang.String toString() -> toString
    140:140:boolean deleteOnExit() -> e
    145:145:java.lang.String getBaseDirectory() -> c
    150:150:java.lang.String getDiskFilename() -> a
    155:155:java.lang.String getPostfix() -> d
    160:160:java.lang.String getPrefix() -> b
    211:212:io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    217:218:io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    223:224:io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    229:230:io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> a
    30:30:io.netty.handler.codec.http.multipart.HttpData touch() -> i
    30:30:io.netty.handler.codec.http.multipart.HttpData retain(int) -> a
    30:30:io.netty.handler.codec.http.multipart.HttpData retain() -> k
    30:30:int compareTo(java.lang.Object) -> compareTo
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
    33:33:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.FileUpload -> io.netty.c.a.d.a.i:
    java.lang.String getFilename() -> getFilename
    java.lang.String getContentType() -> getContentType
    java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
io.netty.handler.codec.http.multipart.FileUploadUtil -> io.netty.c.a.d.a.j:
    23:23:int hashCode(io.netty.handler.codec.http.multipart.FileUpload) -> a
    27:27:boolean equals(io.netty.handler.codec.http.multipart.FileUpload,io.netty.handler.codec.http.multipart.FileUpload) -> a
    31:31:int compareTo(io.netty.handler.codec.http.multipart.FileUpload,io.netty.handler.codec.http.multipart.FileUpload) -> b
io.netty.handler.codec.http.multipart.HttpData -> io.netty.c.a.d.a.k:
    void setMaxSize(long) -> setMaxSize
    void checkSize(long) -> checkSize
    void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    boolean isCompleted() -> isCompleted
    long length() -> length
    long definedLength() -> definedLength
    void delete() -> delete
    io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    void setCharset(java.nio.charset.Charset) -> setCharset
    java.nio.charset.Charset getCharset() -> getCharset
io.netty.handler.codec.http.multipart.HttpDataFactory -> io.netty.c.a.d.a.l:
    io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String) -> createAttribute
    io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,long) -> createAttribute
    io.netty.handler.codec.http.multipart.Attribute createAttribute(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String) -> createAttribute
    io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> createFileUpload
    void cleanRequestHttpData(io.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpData
io.netty.handler.codec.http.multipart.HttpPostBodyUtil -> io.netty.c.a.d.a.m:
    131:136:int findNonWhitespace(java.lang.String,int) -> a
    145:150:int findEndOfString(java.lang.String) -> a
io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize -> io.netty.c.a.d.a.n:
    byte[] bytes -> a
    int readerIndex -> b
    int pos -> c
    int origPos -> d
    int limit -> e
    io.netty.buffer.ByteBuf buffer -> f
    93:102:void <init>(io.netty.buffer.ByteBuf) -> <init>
    110:113:void setReadPosition(int) -> a
    121:121:int getReadPosition(int) -> b
io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism -> io.netty.c.a.d.a.o:
    io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BIT7 -> a
    io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BIT8 -> b
    io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BINARY -> c
    java.lang.String value -> d
    io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism[] $VALUES -> e
    45:45:io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism[] values() -> values
    45:45:io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism valueOf(java.lang.String) -> valueOf
    61:63:void <init>(java.lang.String,int,java.lang.String) -> <init>
    66:66:java.lang.String value() -> a
    71:71:java.lang.String toString() -> toString
    45:57:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder -> io.netty.c.a.d.a.p:
    io.netty.handler.codec.http.multipart.HttpDataFactory factory -> a
    io.netty.handler.codec.http.HttpRequest request -> b
    java.nio.charset.Charset charset -> c
    boolean isLastChunk -> d
    java.util.List bodyListHttpData -> e
    java.util.Map bodyMapHttpData -> f
    io.netty.buffer.ByteBuf undecodedChunk -> g
    int bodyListHttpDataRank -> h
    java.lang.String multipartDataBoundary -> i
    java.lang.String multipartMixedBoundary -> j
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus currentStatus -> k
    java.util.Map currentFieldAttributes -> l
    io.netty.handler.codec.http.multipart.FileUpload currentFileUpload -> m
    io.netty.handler.codec.http.multipart.Attribute currentAttribute -> n
    boolean destroyed -> o
    int discardThreshold -> p
    java.lang.String FILENAME_ENCODED -> q
    78:190:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset) -> <init>
    196:206:void setMultipart(java.lang.String) -> b
    209:213:void checkDestroyed() -> e
    322:340:io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> a
    355:363:boolean hasNext() -> a
    380:385:io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> b
    405:412:void parseBody() -> f
    418:428:void addHttpData(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> a
    438:450:void parseBodyMultipart() -> g
    469:571:io.netty.handler.codec.http.multipart.InterfaceHttpData decodeMultipart(io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus) -> a
    581:597:void skipControlCharacters(io.netty.buffer.ByteBuf) -> a
    602:608:void skipControlCharactersStandard(io.netty.buffer.ByteBuf) -> b
    625:656:io.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDelimiter(java.lang.String,io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus,io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus) -> a
    666:793:io.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDisposition() -> h
    801:827:io.netty.handler.codec.http.multipart.Attribute getContentDispositionAttribute(java.lang.String[]) -> a
    841:927:io.netty.handler.codec.http.multipart.InterfaceHttpData getFileUpload(java.lang.String) -> a
    936:949:void destroy() -> c
    956:959:void cleanFiles() -> d
    976:981:void cleanMixedAttributes() -> i
    992:1020:java.lang.String readLineStandard(io.netty.buffer.ByteBuf,java.nio.charset.Charset) -> a
    1032:1068:java.lang.String readLine(io.netty.buffer.ByteBuf,java.nio.charset.Charset) -> b
    1087:1163:java.lang.String readDelimiterStandard(io.netty.buffer.ByteBuf,java.lang.String) -> a
    1181:1287:java.lang.String readDelimiter(io.netty.buffer.ByteBuf,java.lang.String) -> b
    1297:1331:boolean loadDataMultipartStandard(io.netty.buffer.ByteBuf,java.lang.String,io.netty.handler.codec.http.multipart.HttpData) -> a
    1341:1380:boolean loadDataMultipart(io.netty.buffer.ByteBuf,java.lang.String,io.netty.handler.codec.http.multipart.HttpData) -> b
    1389:1409:java.lang.String cleanString(java.lang.String) -> c
    1418:1438:boolean skipOneLine() -> j
    1448:1484:java.lang.String[] splitMultipartHeader(java.lang.String) -> d
    1492:1518:java.lang.String[] splitMultipartHeaderValues(java.lang.String) -> e
    53:53:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> b
    798:798:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder$1 -> io.netty.c.a.d.a.q:
    int[] $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus -> a
    469:469:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.HttpPostRequestDecoder -> io.netty.c.a.d.a.r:
    io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder decoder -> a
    68:69:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest) -> <init>
    85:101:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset) -> <init>
    143:146:boolean isMultipart(io.netty.handler.codec.http.HttpRequest) -> a
    157:192:java.lang.String[] getMultipartDataBoundary(java.lang.String) -> a
    227:227:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> b
    232:232:boolean hasNext() -> a
    237:237:io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> b
    247:248:void destroy() -> c
    272:291:java.lang.String[] splitHeaderContentType(java.lang.String) -> b
io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$EndOfDataDecoderException -> io.netty.c.a.d.a.s:
    320:320:void <init>() -> <init>
io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$ErrorDataDecoderException -> io.netty.c.a.d.a.t:
    330:331:void <init>() -> <init>
    334:335:void <init>(java.lang.String) -> <init>
    338:339:void <init>(java.lang.Throwable) -> <init>
    342:343:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus -> io.netty.c.a.d.a.u:
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus NOTSTARTED -> a
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus PREAMBLE -> b
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus HEADERDELIMITER -> c
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus DISPOSITION -> d
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus FIELD -> e
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus FILEUPLOAD -> f
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDPREAMBLE -> g
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDDELIMITER -> h
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDDISPOSITION -> i
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDFILEUPLOAD -> j
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDCLOSEDELIMITER -> k
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus CLOSEDELIMITER -> l
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus PREEPILOGUE -> m
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus EPILOGUE -> n
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus[] $VALUES -> o
    133:133:io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus[] values() -> values
    133:133:io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus valueOf(java.lang.String) -> valueOf
    133:133:void <init>(java.lang.String,int) -> <init>
    133:135:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$NotEnoughDataDecoderException -> io.netty.c.a.d.a.v:
    301:302:void <init>() -> <init>
    305:306:void <init>(java.lang.String) -> <init>
    309:310:void <init>(java.lang.Throwable) -> <init>
io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder -> io.netty.c.a.d.a.w:
    io.netty.handler.codec.http.multipart.HttpDataFactory factory -> a
    io.netty.handler.codec.http.HttpRequest request -> b
    java.nio.charset.Charset charset -> c
    boolean isLastChunk -> d
    java.util.List bodyListHttpData -> e
    java.util.Map bodyMapHttpData -> f
    io.netty.buffer.ByteBuf undecodedChunk -> g
    int bodyListHttpDataRank -> h
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus currentStatus -> i
    io.netty.handler.codec.http.multipart.Attribute currentAttribute -> j
    boolean destroyed -> k
    int discardThreshold -> l
    71:159:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset) -> <init>
    162:166:void checkDestroyed() -> e
    275:293:io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> a
    308:316:boolean hasNext() -> a
    333:338:io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> b
    354:361:void parseBody() -> f
    367:377:void addHttpData(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> a
    388:493:void parseBodyAttributesStandard() -> g
    504:627:void parseBodyAttributes() -> h
    630:635:void setFinalBuffer(io.netty.buffer.ByteBuf) -> a
    644:646:java.lang.String decodeAttribute(java.lang.String,java.nio.charset.Charset) -> a
    656:669:void destroy() -> c
    676:679:void cleanFiles() -> d
    46:46:io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> b
io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$1 -> io.netty.c.a.d.a.x:
    int[] $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus -> a
    400:400:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.InterfaceHttpData -> io.netty.c.a.d.a.y:
    java.lang.String getName() -> getName
    io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType -> io.netty.c.a.d.a.z:
    io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType Attribute -> a
    io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType FileUpload -> b
    io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType InternalAttribute -> c
    io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType[] $VALUES -> d
    24:24:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType[] values() -> values
    24:24:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:25:void <clinit>() -> <clinit>
io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder -> io.netty.c.a.d.a.A:
    io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(io.netty.handler.codec.http.HttpContent) -> b
    boolean hasNext() -> a
    io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> b
    void destroy() -> c
io.netty.handler.codec.http.multipart.MemoryAttribute -> io.netty.c.a.d.a.B:
    33:34:void <init>(java.lang.String) -> <init>
    37:38:void <init>(java.lang.String,long) -> <init>
    41:42:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    45:46:void <init>(java.lang.String,long,java.nio.charset.Charset) -> <init>
    53:55:void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset) -> <init>
    59:59:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    64:64:java.lang.String getValue() -> e_
    69:79:void setValue(java.lang.String) -> a
    83:89:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    93:93:int hashCode() -> hashCode
    98:102:boolean equals(java.lang.Object) -> equals
    107:111:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> a
    115:115:int compareTo(io.netty.handler.codec.http.multipart.Attribute) -> a
    120:120:java.lang.String toString() -> toString
    171:172:io.netty.handler.codec.http.multipart.Attribute retain() -> f_
    177:178:io.netty.handler.codec.http.multipart.Attribute retain(int) -> b
    183:184:io.netty.handler.codec.http.multipart.Attribute touch() -> g_
    189:190:io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> b
    30:30:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> a
    30:30:io.netty.handler.codec.http.multipart.HttpData touch() -> i
    30:30:io.netty.handler.codec.http.multipart.HttpData retain(int) -> a
    30:30:io.netty.handler.codec.http.multipart.HttpData retain() -> k
    30:30:int compareTo(java.lang.Object) -> compareTo
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.multipart.MemoryFileUpload -> io.netty.c.a.d.a.C:
    java.lang.String filename -> c
    java.lang.String contentType -> d
    java.lang.String contentTransferEncoding -> e
    41:45:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> <init>
    49:49:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    54:54:java.lang.String getFilename() -> getFilename
    59:63:void setFilename(java.lang.String) -> a
    67:67:int hashCode() -> hashCode
    72:72:boolean equals(java.lang.Object) -> equals
    77:81:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> a
    85:85:int compareTo(io.netty.handler.codec.http.multipart.FileUpload) -> a
    90:94:void setContentType(java.lang.String) -> b
    98:98:java.lang.String getContentType() -> getContentType
    103:103:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    108:109:void setContentTransferEncoding(java.lang.String) -> c
    113:120:java.lang.String toString() -> toString
    172:173:io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    178:179:io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    184:185:io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    190:191:io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    31:31:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> a
    31:31:io.netty.handler.codec.http.multipart.HttpData touch() -> i
    31:31:io.netty.handler.codec.http.multipart.HttpData retain(int) -> a
    31:31:io.netty.handler.codec.http.multipart.HttpData retain() -> k
    31:31:int compareTo(java.lang.Object) -> compareTo
    31:31:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:io.netty.util.ReferenceCounted touch() -> touch
    31:31:io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.multipart.MixedAttribute -> io.netty.c.a.d.a.D:
    io.netty.handler.codec.http.multipart.Attribute attribute -> a
    long limitSize -> b
    long maxSize -> c
    33:46:void <init>(java.lang.String,long,java.nio.charset.Charset) -> <init>
    33:51:void <init>(java.lang.String,long,long,java.nio.charset.Charset) -> <init>
    33:77:void <init>(java.lang.String,java.lang.String,long,java.nio.charset.Charset) -> <init>
    86:88:void setMaxSize(long) -> setMaxSize
    92:95:void checkSize(long) -> checkSize
    99:113:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    117:118:void delete() -> delete
    127:127:io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    132:132:java.nio.charset.Charset getCharset() -> getCharset
    147:147:boolean isCompleted() -> isCompleted
    157:157:long length() -> length
    162:162:long definedLength() -> definedLength
    172:173:void setCharset(java.nio.charset.Charset) -> setCharset
    213:213:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    218:218:java.lang.String getName() -> getName
    223:223:int hashCode() -> hashCode
    228:228:boolean equals(java.lang.Object) -> equals
    233:233:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> a
    238:238:java.lang.String toString() -> toString
    243:243:java.lang.String getValue() -> e_
    248:252:void setValue(java.lang.String) -> a
    286:286:io.netty.buffer.ByteBuf content() -> content
    291:291:int refCnt() -> refCnt
    296:297:io.netty.handler.codec.http.multipart.Attribute retain() -> f_
    302:303:io.netty.handler.codec.http.multipart.Attribute retain(int) -> b
    308:309:io.netty.handler.codec.http.multipart.Attribute touch() -> g_
    314:315:io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> b
    320:320:boolean release() -> release
    325:325:boolean release(int) -> release
    29:29:int compareTo(java.lang.Object) -> compareTo
    29:29:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    29:29:io.netty.util.ReferenceCounted touch() -> touch
    29:29:io.netty.util.ReferenceCounted retain(int) -> retain
    29:29:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.multipart.MixedFileUpload -> io.netty.c.a.d.a.E:
    io.netty.handler.codec.http.multipart.FileUpload fileUpload -> a
    long limitSize -> b
    long definedSize -> c
    long maxSize -> d
    35:49:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long,long) -> <init>
    58:60:void setMaxSize(long) -> setMaxSize
    64:67:void checkSize(long) -> checkSize
    72:92:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    96:97:void delete() -> delete
    106:106:io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    111:111:java.nio.charset.Charset getCharset() -> getCharset
    116:116:java.lang.String getContentType() -> getContentType
    121:121:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    126:126:java.lang.String getFilename() -> getFilename
    141:141:boolean isCompleted() -> isCompleted
    151:151:long length() -> length
    156:156:long definedLength() -> definedLength
    166:167:void setCharset(java.nio.charset.Charset) -> setCharset
    248:248:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    253:253:java.lang.String getName() -> getName
    258:258:int hashCode() -> hashCode
    263:263:boolean equals(java.lang.Object) -> equals
    268:268:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> a
    273:273:java.lang.String toString() -> toString
    308:308:io.netty.buffer.ByteBuf content() -> content
    313:313:int refCnt() -> refCnt
    318:319:io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    324:325:io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    330:331:io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    336:337:io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    342:342:boolean release() -> release
    347:347:boolean release(int) -> release
    28:28:int compareTo(java.lang.Object) -> compareTo
    28:28:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    28:28:io.netty.util.ReferenceCounted touch() -> touch
    28:28:io.netty.util.ReferenceCounted retain(int) -> retain
    28:28:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame -> io.netty.c.a.d.b.a:
    30:31:void <init>() -> <init>
    40:41:void <init>(io.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    59:59:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame copy() -> a
    64:64:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame duplicate() -> b
    69:69:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retainedDuplicate() -> c
    74:74:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame replace(io.netty.buffer.ByteBuf) -> a
    79:80:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retain() -> d
    85:86:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retain(int) -> a
    91:92:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame touch() -> e
    97:98:io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame touch(java.lang.Object) -> a
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> b
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> f
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> b
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> g
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> b
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> h
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> i
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> j
    24:24:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    24:24:io.netty.buffer.ByteBufHolder touch() -> touch
    24:24:io.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:io.netty.buffer.ByteBufHolder retain() -> retain
    24:24:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    24:24:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    24:24:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:io.netty.buffer.ByteBufHolder copy() -> copy
    24:24:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:io.netty.util.ReferenceCounted touch() -> touch
    24:24:io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.CloseWebSocketFrame -> io.netty.c.a.d.b.b:
    32:33:void <init>() -> <init>
    45:46:void <init>(int,java.lang.String) -> <init>
    74:75:void <init>(boolean,int,int,java.lang.String) -> <init>
    78:89:io.netty.buffer.ByteBuf newBinaryData(int,java.lang.String) -> a
    103:104:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    142:142:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame copy() -> a
    147:147:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame duplicate() -> b
    152:152:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame retainedDuplicate() -> c
    157:157:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame replace(io.netty.buffer.ByteBuf) -> a
    162:163:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame retain() -> d
    168:169:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame retain(int) -> a
    174:175:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame touch() -> e
    180:181:io.netty.handler.codec.http.websocketx.CloseWebSocketFrame touch(java.lang.Object) -> a
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> b
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> f
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> b
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> g
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> b
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> h
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> i
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> j
    26:26:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    26:26:io.netty.buffer.ByteBufHolder touch() -> touch
    26:26:io.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:io.netty.buffer.ByteBufHolder retain() -> retain
    26:26:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    26:26:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    26:26:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:io.netty.buffer.ByteBufHolder copy() -> copy
    26:26:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:io.netty.util.ReferenceCounted touch() -> touch
    26:26:io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame -> io.netty.c.a.d.b.c:
    32:33:void <init>() -> <init>
    42:43:void <init>(io.netty.buffer.ByteBuf) -> <init>
    56:57:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    96:96:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame copy() -> a
    101:101:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame duplicate() -> b
    106:106:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retainedDuplicate() -> c
    111:111:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame replace(io.netty.buffer.ByteBuf) -> a
    116:117:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retain() -> d
    122:123:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retain(int) -> a
    128:129:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame touch() -> e
    134:135:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame touch(java.lang.Object) -> a
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> b
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> f
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> b
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> g
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> b
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> h
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> i
    26:26:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> j
    26:26:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    26:26:io.netty.buffer.ByteBufHolder touch() -> touch
    26:26:io.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:io.netty.buffer.ByteBufHolder retain() -> retain
    26:26:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    26:26:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    26:26:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:io.netty.buffer.ByteBufHolder copy() -> copy
    26:26:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:io.netty.util.ReferenceCounted touch() -> touch
    26:26:io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.PingWebSocketFrame -> io.netty.c.a.d.b.d:
    30:31:void <init>() -> <init>
    40:41:void <init>(io.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    59:59:io.netty.handler.codec.http.websocketx.PingWebSocketFrame copy() -> a
    64:64:io.netty.handler.codec.http.websocketx.PingWebSocketFrame duplicate() -> b
    69:69:io.netty.handler.codec.http.websocketx.PingWebSocketFrame retainedDuplicate() -> c
    74:74:io.netty.handler.codec.http.websocketx.PingWebSocketFrame replace(io.netty.buffer.ByteBuf) -> a
    79:80:io.netty.handler.codec.http.websocketx.PingWebSocketFrame retain() -> d
    85:86:io.netty.handler.codec.http.websocketx.PingWebSocketFrame retain(int) -> a
    91:92:io.netty.handler.codec.http.websocketx.PingWebSocketFrame touch() -> e
    97:98:io.netty.handler.codec.http.websocketx.PingWebSocketFrame touch(java.lang.Object) -> a
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> b
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> f
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> b
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> g
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> b
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> h
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> i
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> j
    24:24:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    24:24:io.netty.buffer.ByteBufHolder touch() -> touch
    24:24:io.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:io.netty.buffer.ByteBufHolder retain() -> retain
    24:24:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    24:24:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    24:24:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:io.netty.buffer.ByteBufHolder copy() -> copy
    24:24:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:io.netty.util.ReferenceCounted touch() -> touch
    24:24:io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.PongWebSocketFrame -> io.netty.c.a.d.b.e:
    30:31:void <init>() -> <init>
    40:41:void <init>(io.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    59:59:io.netty.handler.codec.http.websocketx.PongWebSocketFrame copy() -> a
    64:64:io.netty.handler.codec.http.websocketx.PongWebSocketFrame duplicate() -> b
    69:69:io.netty.handler.codec.http.websocketx.PongWebSocketFrame retainedDuplicate() -> c
    74:74:io.netty.handler.codec.http.websocketx.PongWebSocketFrame replace(io.netty.buffer.ByteBuf) -> a
    79:80:io.netty.handler.codec.http.websocketx.PongWebSocketFrame retain() -> d
    85:86:io.netty.handler.codec.http.websocketx.PongWebSocketFrame retain(int) -> a
    91:92:io.netty.handler.codec.http.websocketx.PongWebSocketFrame touch() -> e
    97:98:io.netty.handler.codec.http.websocketx.PongWebSocketFrame touch(java.lang.Object) -> a
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> b
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> f
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> b
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> g
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> b
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> h
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> i
    24:24:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> j
    24:24:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    24:24:io.netty.buffer.ByteBufHolder touch() -> touch
    24:24:io.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:io.netty.buffer.ByteBufHolder retain() -> retain
    24:24:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    24:24:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    24:24:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:io.netty.buffer.ByteBufHolder copy() -> copy
    24:24:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:io.netty.util.ReferenceCounted touch() -> touch
    24:24:io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.TextWebSocketFrame -> io.netty.c.a.d.b.f:
    31:32:void <init>() -> <init>
    51:52:void <init>(io.netty.buffer.ByteBuf) -> <init>
    87:88:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    99:99:io.netty.handler.codec.http.websocketx.TextWebSocketFrame copy() -> a
    104:104:io.netty.handler.codec.http.websocketx.TextWebSocketFrame duplicate() -> b
    109:109:io.netty.handler.codec.http.websocketx.TextWebSocketFrame retainedDuplicate() -> c
    114:114:io.netty.handler.codec.http.websocketx.TextWebSocketFrame replace(io.netty.buffer.ByteBuf) -> a
    119:120:io.netty.handler.codec.http.websocketx.TextWebSocketFrame retain() -> d
    125:126:io.netty.handler.codec.http.websocketx.TextWebSocketFrame retain(int) -> a
    131:132:io.netty.handler.codec.http.websocketx.TextWebSocketFrame touch() -> e
    137:138:io.netty.handler.codec.http.websocketx.TextWebSocketFrame touch(java.lang.Object) -> a
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> b
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> f
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> b
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> g
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> b
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> h
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> i
    25:25:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> j
    25:25:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    25:25:io.netty.buffer.ByteBufHolder touch() -> touch
    25:25:io.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:io.netty.buffer.ByteBufHolder retain() -> retain
    25:25:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    25:25:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    25:25:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:io.netty.buffer.ByteBufHolder copy() -> copy
    25:25:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:io.netty.util.ReferenceCounted touch() -> touch
    25:25:io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.Utf8Validator -> io.netty.c.a.d.b.g:
    byte[] TYPES -> a
    byte[] STATES -> b
    int state -> o
    int codep -> p
    boolean checking -> q
    45:67:void <init>() -> <init>
    73:75:void check(io.netty.buffer.ByteBuf) -> a
    88:98:boolean process(byte) -> a
    49:60:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder -> io.netty.c.a.d.b.h:
    long maxFrameSize -> b
    boolean receivedClosingHandshake -> c
    41:42:void <init>() -> <init>
    51:53:void <init>(int) -> <init>
    58:77:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    80:102:io.netty.handler.codec.http.websocketx.WebSocketFrame decodeBinaryFrame(io.netty.channel.ChannelHandlerContext,byte,io.netty.buffer.ByteBuf) -> a
    106:134:io.netty.handler.codec.http.websocketx.WebSocketFrame decodeTextFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> a
io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder -> io.netty.c.a.d.b.i:
    io.netty.buffer.ByteBuf _0X00 -> a
    io.netty.buffer.ByteBuf _0XFF -> b
    io.netty.buffer.ByteBuf _0XFF_0X00 -> c
    33:33:void <init>() -> <init>
    43:100:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> a
    32:32:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    34:39:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder -> io.netty.c.a.d.b.j:
    94:95:void <init>(boolean,boolean,int,boolean) -> <init>
io.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder -> io.netty.c.a.d.b.k:
    71:72:void <init>(boolean) -> <init>
io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder -> io.netty.c.a.d.b.l:
    io.netty.util.internal.logging.InternalLogger logger -> a
    long maxFramePayloadLength -> b
    boolean allowExtensions -> c
    boolean expectMaskedFrames -> d
    boolean allowMaskMismatch -> e
    int fragmentedFramesCount -> f
    boolean frameFinalFlag -> g
    boolean frameMasked -> h
    int frameRsv -> i
    int frameOpcode -> j
    long framePayloadLength -> k
    byte[] maskingKey -> l
    int framePayloadLen1 -> m
    boolean receivedClosingHandshake -> n
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State state -> o
    110:149:void <init>(boolean,boolean,int,boolean) -> <init>
    155:379:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    384:409:void unmask(io.netty.buffer.ByteBuf) -> a
    412:413:void protocolViolation(io.netty.channel.ChannelHandlerContext,java.lang.String) -> a
    416:426:void protocolViolation(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.CorruptedFrameException) -> a
    430:433:int toFrameLength(long) -> a
    440:469:void checkCloseFrameBody(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> a
    87:87:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$1 -> io.netty.c.a.d.b.m:
    int[] $SwitchMap$io$netty$handler$codec$http$websocketx$WebSocket08FrameDecoder$State -> a
    159:159:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State -> io.netty.c.a.d.b.n:
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State READING_FIRST -> a
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State READING_SECOND -> b
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State READING_SIZE -> c
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State MASKING_KEY -> d
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State PAYLOAD -> e
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State CORRUPT -> f
    io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State[] $VALUES -> g
    78:78:io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State[] values() -> values
    78:78:io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State valueOf(java.lang.String) -> valueOf
    78:78:void <init>(java.lang.String,int) -> <init>
    78:84:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder -> io.netty.c.a.d.b.o:
    io.netty.util.internal.logging.InternalLogger logger -> a
    boolean maskPayload -> b
    101:103:void <init>(boolean) -> <init>
    107:233:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> a
    73:73:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    75:75:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder -> io.netty.c.a.d.b.p:
    94:95:void <init>(boolean,boolean,int,boolean) -> <init>
io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder -> io.netty.c.a.d.b.q:
    71:72:void <init>(boolean) -> <init>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker -> io.netty.c.a.d.b.r:
    java.nio.channels.ClosedChannelException CLOSED_CHANNEL_EXCEPTION -> b
    java.lang.String HTTP_SCHEME_PREFIX -> c
    java.lang.String HTTPS_SCHEME_PREFIX -> d
    java.net.URI uri -> e
    io.netty.handler.codec.http.websocketx.WebSocketVersion version -> f
    boolean handshakeComplete -> g
    java.lang.String expectedSubprotocol -> h
    java.lang.String actualSubprotocol -> i
    io.netty.handler.codec.http.HttpHeaders customHeaders -> a
    int maxFramePayloadLength -> j
    84:90:void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,io.netty.handler.codec.http.HttpHeaders,int) -> <init>
    96:96:java.net.URI uri() -> a
    110:110:int maxFramePayloadLength() -> b
    121:122:void setHandshakeComplete() -> h
    128:128:java.lang.String expectedSubprotocol() -> c
    136:136:java.lang.String actualSubprotocol() -> d
    140:141:void setActualSubprotocol(java.lang.String) -> a
    150:153:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel) -> a
    165:199:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> a
    io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> e
    216:301:void finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpResponse) -> a
    void verify(io.netty.handler.codec.http.FullHttpResponse) -> a
    io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> f
    io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> g
    414:417:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame) -> a
    431:434:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,io.netty.channel.ChannelPromise) -> a
    441:447:java.lang.String rawPath(java.net.URI) -> a
    451:469:java.lang.CharSequence websocketHostValue(java.net.URI) -> b
    473:496:java.lang.CharSequence websocketOriginValue(java.net.URI) -> c
    48:52:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$1 -> io.netty.c.a.d.b.s:
    io.netty.channel.ChannelPromise val$promise -> a
    io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> b
    177:177:void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,io.netty.channel.ChannelPromise) -> <init>
    180:197:void operationComplete(io.netty.channel.ChannelFuture) -> a
    177:177:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$2 -> io.netty.c.a.d.b.t:
    io.netty.channel.ChannelPipeline val$p -> a
    io.netty.handler.codec.http.HttpClientCodec val$codec -> b
    io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> c
    277:277:void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,io.netty.channel.ChannelPipeline,io.netty.handler.codec.http.HttpClientCodec) -> <init>
    280:281:void run() -> run
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$3 -> io.netty.c.a.d.b.u:
    io.netty.channel.ChannelPipeline val$p -> a
    io.netty.channel.ChannelHandlerContext val$context -> b
    io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> c
    294:294:void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,io.netty.channel.ChannelPipeline,io.netty.channel.ChannelHandlerContext) -> <init>
    297:298:void run() -> run
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 -> io.netty.c.a.d.b.v:
    io.netty.util.AsciiString WEBSOCKET -> b
    io.netty.buffer.ByteBuf expectedChallengeResponseBytes -> c
    67:68:void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,io.netty.handler.codec.http.HttpHeaders,int) -> <init>
    91:154:io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> e
    179:200:void verify(io.netty.handler.codec.http.FullHttpResponse) -> a
    203:222:java.lang.String insertRandomCharacters(java.lang.String) -> a
    226:233:java.lang.String insertSpaces(java.lang.String,int) -> a
    238:238:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> f
    243:243:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> g
    46:46:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 -> io.netty.c.a.d.b.w:
    io.netty.util.internal.logging.InternalLogger logger -> b
    java.lang.String expectedChallengeResponseString -> c
    boolean allowExtensions -> d
    boolean performMasking -> e
    boolean allowMaskMismatch -> f
    100:104:void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> <init>
    127:164:io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> e
    186:208:void verify(io.netty.handler.codec.http.FullHttpResponse) -> a
    212:212:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> f
    217:217:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> g
    42:42:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08 -> io.netty.c.a.d.b.x:
    io.netty.util.internal.logging.InternalLogger logger -> b
    java.lang.String expectedChallengeResponseString -> c
    boolean allowExtensions -> d
    boolean performMasking -> e
    boolean allowMaskMismatch -> f
    101:105:void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> <init>
    128:165:io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> e
    187:209:void verify(io.netty.handler.codec.http.FullHttpResponse) -> a
    213:213:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> f
    218:218:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> g
    42:42:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13 -> io.netty.c.a.d.b.y:
    io.netty.util.internal.logging.InternalLogger logger -> b
    java.lang.String expectedChallengeResponseString -> c
    boolean allowExtensions -> d
    boolean performMasking -> e
    boolean allowMaskMismatch -> f
    101:105:void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> <init>
    128:165:io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> e
    187:209:void verify(io.netty.handler.codec.http.FullHttpResponse) -> a
    213:213:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> f
    218:218:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> g
    42:42:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory -> io.netty.c.a.d.b.z:
    110:130:io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> a
io.netty.handler.codec.http.websocketx.WebSocketFrame -> io.netty.c.a.d.b.A:
    boolean finalFragment -> a
    int rsv -> b
    39:40:void <init>(io.netty.buffer.ByteBuf) -> <init>
    43:46:void <init>(boolean,int,io.netty.buffer.ByteBuf) -> <init>
    53:53:boolean isFinalFragment() -> k
    60:60:int rsv() -> l
    65:65:io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> j
    70:70:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> i
    75:75:io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> h
    io.netty.handler.codec.http.websocketx.WebSocketFrame replace(io.netty.buffer.ByteBuf) -> b
    83:83:java.lang.String toString() -> toString
    88:89:io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> g
    94:95:io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> b
    100:101:io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> f
    106:107:io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> b
    25:25:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    25:25:io.netty.buffer.ByteBufHolder touch() -> touch
    25:25:io.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:io.netty.buffer.ByteBufHolder retain() -> retain
    25:25:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    25:25:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    25:25:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:io.netty.buffer.ByteBufHolder copy() -> copy
    25:25:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:io.netty.util.ReferenceCounted touch() -> touch
    25:25:io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:io.netty.util.ReferenceCounted retain() -> retain
io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder -> io.netty.c.a.d.b.B:
io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder -> io.netty.c.a.d.b.C:
io.netty.handler.codec.http.websocketx.WebSocketHandshakeException -> io.netty.c.a.d.b.D:
    26:27:void <init>(java.lang.String) -> <init>
io.netty.handler.codec.http.websocketx.WebSocketScheme -> io.netty.c.a.d.b.E:
    io.netty.handler.codec.http.websocketx.WebSocketScheme WS -> a
    io.netty.handler.codec.http.websocketx.WebSocketScheme WSS -> b
    int port -> c
    io.netty.util.AsciiString name -> d
    38:41:void <init>(int,java.lang.String) -> <init>
    44:44:io.netty.util.AsciiString name() -> a
    48:48:int port() -> b
    53:57:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    67:67:java.lang.String toString() -> toString
    28:33:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker -> io.netty.c.a.d.b.F:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.nio.channels.ClosedChannelException CLOSED_CHANNEL_EXCEPTION -> b
    java.lang.String uri -> c
    java.lang.String[] subprotocols -> d
    io.netty.handler.codec.http.websocketx.WebSocketVersion version -> e
    int maxFramePayloadLength -> f
    java.lang.String selectedSubprotocol -> g
    83:96:void <init>(io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,java.lang.String,int) -> <init>
    102:102:java.lang.String uri() -> a
    118:118:io.netty.handler.codec.http.websocketx.WebSocketVersion version() -> b
    127:127:int maxFramePayloadLength() -> c
    142:142:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpRequest) -> a
    164:206:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders,io.netty.channel.ChannelPromise) -> a
    221:221:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpRequest) -> a
    243:294:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpRequest,io.netty.handler.codec.http.HttpHeaders,io.netty.channel.ChannelPromise) -> a
    io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders) -> a
    311:314:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame) -> a
    328:331:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,io.netty.channel.ChannelPromise) -> a
    342:360:java.lang.String selectSubprotocol(java.lang.String) -> a
    370:370:java.lang.String selectedSubprotocol() -> d
    io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> e
    io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> f
    48:48:java.nio.channels.ClosedChannelException access$000() -> g
    49:50:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$1 -> io.netty.c.a.d.b.G:
    java.lang.String val$encoderName -> a
    io.netty.channel.ChannelPromise val$promise -> b
    io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker this$0 -> c
    194:194:void <init>(io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,java.lang.String,io.netty.channel.ChannelPromise) -> <init>
    197:204:void operationComplete(io.netty.channel.ChannelFuture) -> a
    194:194:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2 -> io.netty.c.a.d.b.H:
    io.netty.channel.Channel val$channel -> a
    io.netty.handler.codec.http.HttpHeaders val$responseHeaders -> b
    io.netty.channel.ChannelPromise val$promise -> c
    io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker this$0 -> d
    266:266:void <init>(io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.netty.channel.Channel,io.netty.handler.codec.http.HttpHeaders,io.netty.channel.ChannelPromise) -> <init>
    270:272:void channelRead0(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest) -> a
    277:280:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    285:287:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    266:266:void channelRead0(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead0
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 -> io.netty.c.a.d.b.I:
    java.util.regex.Pattern BEGINNING_DIGIT -> b
    java.util.regex.Pattern BEGINNING_SPACE -> c
    63:64:void <init>(java.lang.String,java.lang.String,int) -> <init>
    110:170:io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders) -> a
    183:183:io.netty.channel.ChannelFuture close(io.netty.channel.Channel,io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,io.netty.channel.ChannelPromise) -> a
    188:188:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> e
    193:193:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> f
    47:48:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker07 -> io.netty.c.a.d.b.J:
    boolean allowExtensions -> b
    boolean allowMaskMismatch -> c
    82:85:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    123:157:io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders) -> a
    162:162:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> e
    167:167:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> f
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker08 -> io.netty.c.a.d.b.K:
    boolean allowExtensions -> b
    boolean allowMaskMismatch -> c
    82:85:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    123:156:io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders) -> a
    161:161:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> e
    166:166:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> f
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 -> io.netty.c.a.d.b.L:
    boolean allowExtensions -> b
    boolean allowMaskMismatch -> c
    81:84:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    122:154:io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders) -> a
    159:159:io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> e
    164:164:io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> f
io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory -> io.netty.c.a.d.b.M:
    java.lang.String webSocketURL -> a
    java.lang.String subprotocols -> b
    boolean allowExtensions -> c
    int maxFramePayloadLength -> d
    boolean allowMaskMismatch -> e
    100:106:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    116:135:io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker newHandshaker(io.netty.handler.codec.http.HttpRequest) -> a
    151:151:io.netty.channel.ChannelFuture sendUnsupportedVersionResponse(io.netty.channel.Channel) -> a
    158:163:io.netty.channel.ChannelFuture sendUnsupportedVersionResponse(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> a
io.netty.handler.codec.http.websocketx.WebSocketUtil -> io.netty.c.a.d.b.N:
    io.netty.util.concurrent.FastThreadLocal MD5 -> a
    io.netty.util.concurrent.FastThreadLocal SHA1 -> b
    66:66:byte[] md5(byte[]) -> a
    77:77:byte[] sha1(byte[]) -> b
    81:83:byte[] digest(io.netty.util.concurrent.FastThreadLocal,byte[]) -> a
    93:97:java.lang.String base64(byte[]) -> c
    107:113:byte[] randomBytes(int) -> a
    124:124:int randomNumber(int,int) -> a
    32:45:void <clinit>() -> <clinit>
io.netty.handler.codec.http.websocketx.WebSocketUtil$1 -> io.netty.c.a.d.b.O:
    32:32:void <init>() -> <init>
    37:40:java.security.MessageDigest initialValue() -> a
    32:32:java.lang.Object initialValue() -> initialValue
io.netty.handler.codec.http.websocketx.WebSocketUtil$2 -> io.netty.c.a.d.b.P:
    45:45:void <init>() -> <init>
    50:53:java.security.MessageDigest initialValue() -> a
    45:45:java.lang.Object initialValue() -> initialValue
io.netty.handler.codec.http.websocketx.WebSocketVersion -> io.netty.c.a.d.b.Q:
    io.netty.handler.codec.http.websocketx.WebSocketVersion UNKNOWN -> a
    io.netty.handler.codec.http.websocketx.WebSocketVersion V00 -> b
    io.netty.handler.codec.http.websocketx.WebSocketVersion V07 -> c
    io.netty.handler.codec.http.websocketx.WebSocketVersion V08 -> d
    io.netty.handler.codec.http.websocketx.WebSocketVersion V13 -> e
    io.netty.handler.codec.http.websocketx.WebSocketVersion[] $VALUES -> f
    27:27:io.netty.handler.codec.http.websocketx.WebSocketVersion[] values() -> values
    27:27:io.netty.handler.codec.http.websocketx.WebSocketVersion valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    59:71:java.lang.String toHttpHeaderValue() -> a
    27:53:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder -> io.netty.c.a.e.a:
    io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector DEFAULT_HEADER_SENSITIVITY_DETECTOR -> DEFAULT_HEADER_SENSITIVITY_DETECTOR
    io.netty.handler.codec.http2.Http2Settings initialSettings -> initialSettings
    io.netty.handler.codec.http2.Http2FrameListener frameListener -> frameListener
    long gracefulShutdownTimeoutMillis -> gracefulShutdownTimeoutMillis
    java.lang.Boolean isServer -> isServer
    java.lang.Integer maxReservedStreams -> maxReservedStreams
    io.netty.handler.codec.http2.Http2Connection connection -> connection
    io.netty.handler.codec.http2.Http2ConnectionDecoder decoder -> decoder
    io.netty.handler.codec.http2.Http2ConnectionEncoder encoder -> encoder
    java.lang.Boolean validateHeaders -> validateHeaders
    io.netty.handler.codec.http2.Http2FrameLogger frameLogger -> frameLogger
    io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector headerSensitivityDetector -> headerSensitivityDetector
    java.lang.Boolean encoderEnforceMaxConcurrentStreams -> encoderEnforceMaxConcurrentStreams
    java.lang.Boolean encoderIgnoreMaxHeaderListSize -> encoderIgnoreMaxHeaderListSize
    int initialHuffmanDecodeCapacity -> initialHuffmanDecodeCapacity
    boolean $assertionsDisabled -> $assertionsDisabled
    78:108:void <init>() -> <init>
    114:114:io.netty.handler.codec.http2.Http2Settings initialSettings() -> initialSettings
    121:122:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder initialSettings(io.netty.handler.codec.http2.Http2Settings) -> initialSettings
    131:131:io.netty.handler.codec.http2.Http2FrameListener frameListener() -> frameListener
    139:140:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder frameListener(io.netty.handler.codec.http2.Http2FrameListener) -> frameListener
    148:148:long gracefulShutdownTimeoutMillis() -> gracefulShutdownTimeoutMillis
    155:160:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder gracefulShutdownTimeoutMillis(long) -> gracefulShutdownTimeoutMillis
    168:168:boolean isServer() -> isServer
    176:181:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder server(boolean) -> server
    192:192:int maxReservedStreams() -> maxReservedStreams
    199:204:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder maxReservedStreams(int) -> maxReservedStreams
    213:213:io.netty.handler.codec.http2.Http2Connection connection() -> connection
    220:227:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder connection(io.netty.handler.codec.http2.Http2Connection) -> connection
    236:236:io.netty.handler.codec.http2.Http2ConnectionDecoder decoder() -> decoder
    245:245:io.netty.handler.codec.http2.Http2ConnectionEncoder encoder() -> encoder
    252:270:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder codec(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder) -> codec
    278:278:boolean isValidateHeaders() -> isValidateHeaders
    286:288:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder validateHeaders(boolean) -> validateHeaders
    297:297:io.netty.handler.codec.http2.Http2FrameLogger frameLogger() -> frameLogger
    304:306:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder frameLogger(io.netty.handler.codec.http2.Http2FrameLogger) -> frameLogger
    314:314:boolean encoderEnforceMaxConcurrentStreams() -> encoderEnforceMaxConcurrentStreams
    322:324:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder encoderEnforceMaxConcurrentStreams(boolean) -> encoderEnforceMaxConcurrentStreams
    331:331:io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector headerSensitivityDetector() -> headerSensitivityDetector
    338:340:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder headerSensitivityDetector(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> headerSensitivityDetector
    351:353:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder encoderIgnoreMaxHeaderListSize(boolean) -> encoderIgnoreMaxHeaderListSize
    362:364:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder initialHuffmanDecodeCapacity(int) -> initialHuffmanDecodeCapacity
    371:381:io.netty.handler.codec.http2.Http2ConnectionHandler build() -> build
    385:413:io.netty.handler.codec.http2.Http2ConnectionHandler buildFromConnection(io.netty.handler.codec.http2.Http2Connection) -> buildFromConnection
    420:432:io.netty.handler.codec.http2.Http2ConnectionHandler buildFromCodec(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder) -> buildFromCodec
    io.netty.handler.codec.http2.Http2ConnectionHandler build(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings) -> build
    452:452:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder self() -> self
    456:458:void enforceNonCodecConstraints(java.lang.String) -> enforceNonCodecConstraints
    461:465:void enforceConstraint(java.lang.String,java.lang.String,java.lang.Object) -> enforceConstraint
    77:81:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.CharSequenceMap -> io.netty.c.a.e.b:
    32:33:void <init>() -> <init>
    36:37:void <init>(boolean) -> <init>
    40:41:void <init>(boolean,io.netty.handler.codec.ValueConverter) -> <init>
    45:47:void <init>(boolean,io.netty.handler.codec.ValueConverter,int) -> <init>
io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder -> io.netty.c.a.e.c:
    int compressionLevel -> a
    int windowBits -> b
    int memLevel -> c
    io.netty.handler.codec.http2.Http2Connection$PropertyKey propertyKey -> d
    58:82:void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder,int,int,int) -> <init>
    87:138:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> a
    146:158:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> a
    167:180:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> a
    195:202:io.netty.channel.embedded.EmbeddedChannel newContentCompressor(io.netty.channel.ChannelHandlerContext,java.lang.CharSequence) -> a
    214:214:java.lang.CharSequence getTargetContentEncoding(java.lang.CharSequence) -> a
    223:224:io.netty.channel.embedded.EmbeddedChannel newCompressionChannel(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.compression.ZlibWrapper) -> a
    240:263:io.netty.channel.embedded.EmbeddedChannel newCompressor(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Headers,boolean) -> a
    272:278:void bindCompressorToStream(io.netty.channel.embedded.EmbeddedChannel,int) -> a
    287:298:void cleanup(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.embedded.EmbeddedChannel) -> a
    308:316:io.netty.buffer.ByteBuf nextReadableBuf(io.netty.channel.embedded.EmbeddedChannel) -> a
    42:42:io.netty.handler.codec.http2.Http2Connection$PropertyKey access$000(io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder) -> a
io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder$1 -> io.netty.c.a.e.d:
    io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder this$0 -> a
    73:73:void <init>(io.netty.handler.codec.http2.CompressorHttp2ConnectionEncoder) -> <init>
    76:80:void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
io.netty.handler.codec.http2.DecoratingHttp2ConnectionEncoder -> io.netty.c.a.e.e:
    io.netty.handler.codec.http2.Http2ConnectionEncoder delegate -> a
    29:31:void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder) -> <init>
    35:36:void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager) -> a
    40:40:io.netty.handler.codec.http2.Http2Connection connection() -> a
    45:45:io.netty.handler.codec.http2.Http2RemoteFlowController flowController() -> b
    50:50:io.netty.handler.codec.http2.Http2FrameWriter frameWriter() -> c
    55:55:io.netty.handler.codec.http2.Http2Settings pollSentSettings() -> d
    60:61:void remoteSettings(io.netty.handler.codec.http2.Http2Settings) -> a
io.netty.handler.codec.http2.DecoratingHttp2FrameWriter -> io.netty.c.a.e.f:
    io.netty.handler.codec.http2.Http2FrameWriter delegate -> a
    32:34:void <init>(io.netty.handler.codec.http2.Http2FrameWriter) -> <init>
    39:39:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> a
    45:45:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> a
    52:53:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> a
    65:65:io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> a
    70:70:io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> a
    75:75:io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> a
    80:80:io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    86:86:io.netty.channel.ChannelFuture writePushPromise(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int,io.netty.channel.ChannelPromise) -> a
    92:92:io.netty.channel.ChannelFuture writeGoAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    98:98:io.netty.channel.ChannelFuture writeWindowUpdate(io.netty.channel.ChannelHandlerContext,int,int,io.netty.channel.ChannelPromise) -> a
    104:104:io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    109:109:io.netty.handler.codec.http2.Http2FrameWriter$Configuration configuration() -> e
    114:115:void close() -> close
io.netty.handler.codec.http2.DefaultHttp2Connection -> io.netty.c.a.e.g:
    io.netty.util.internal.logging.InternalLogger logger -> i
    io.netty.util.collection.IntObjectMap streamMap -> a
    io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry propertyKeyRegistry -> b
    io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream connectionStream -> c
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint -> d
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint -> e
    java.util.List listeners -> f
    io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams -> g
    io.netty.util.concurrent.Promise closePromise -> h
    91:92:void <init>(boolean) -> <init>
    68:111:void <init>(boolean,int) -> <init>
    117:117:boolean isClosed() -> a
    122:169:io.netty.util.concurrent.Future close(io.netty.util.concurrent.Promise) -> a
    174:175:void addListener(io.netty.handler.codec.http2.Http2Connection$Listener) -> a
    184:184:boolean isServer() -> b
    189:189:io.netty.handler.codec.http2.Http2Stream connectionStream() -> c
    194:194:io.netty.handler.codec.http2.Http2Stream stream(int) -> a
    199:199:boolean streamMayHaveExisted(int) -> b
    204:204:int numActiveStreams() -> d
    209:209:io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor) -> a
    214:214:io.netty.handler.codec.http2.Http2Connection$Endpoint local() -> e
    219:219:io.netty.handler.codec.http2.Http2Connection$Endpoint remote() -> f
    224:224:boolean goAwayReceived() -> g
    229:251:void goAwayReceived(int,long,io.netty.buffer.ByteBuf) -> a
    255:255:boolean goAwaySent() -> h
    260:282:void goAwaySent(int,long,io.netty.buffer.ByteBuf) -> b
    288:288:boolean isStreamMapEmpty() -> k
    299:319:void removeStream(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator) -> a
    323:331:io.netty.handler.codec.http2.Http2Stream$State activeState(int,io.netty.handler.codec.http2.Http2Stream$State,boolean,boolean) -> a
    337:344:void notifyHalfClosed(io.netty.handler.codec.http2.Http2Stream) -> a
    347:354:void notifyClosed(io.netty.handler.codec.http2.Http2Stream) -> b
    358:358:io.netty.handler.codec.http2.Http2Connection$PropertyKey newKey() -> i
    369:369:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey verifyKey(io.netty.handler.codec.http2.Http2Connection$PropertyKey) -> a
    65:65:io.netty.util.internal.logging.InternalLogger access$400() -> j
    66:66:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2Connection$1 -> io.netty.c.a.e.h:
    int val$lastKnownStream -> a
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> b
    239:239:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,int) -> <init>
    242:245:boolean visit(io.netty.handler.codec.http2.Http2Stream) -> a
io.netty.handler.codec.http2.DefaultHttp2Connection$2 -> io.netty.c.a.e.i:
    int val$lastKnownStream -> a
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> b
    270:270:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,int) -> <init>
    273:276:boolean visit(io.netty.handler.codec.http2.Http2Stream) -> a
io.netty.handler.codec.http2.DefaultHttp2Connection$3 -> io.netty.c.a.e.j:
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State -> a
    323:323:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams -> io.netty.c.a.e.k:
    java.util.List listeners -> b
    java.util.Queue pendingEvents -> c
    java.util.Set streams -> d
    int pendingIterations -> e
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> a
    914:920:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,java.util.List) -> <init>
    923:923:int size() -> a
    927:937:void activate(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream) -> a
    940:950:void deactivate(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator) -> a
    953:962:io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor) -> a
    967:979:void addToActiveStreams(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream) -> b
    982:988:void removeFromActiveStreams(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator) -> b
    991:991:boolean allowModifications() -> b
    995:996:void incrementPendingIterations() -> c
    999:1013:void decrementPendingIterations() -> d
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$1 -> io.netty.c.a.e.l:
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream val$stream -> a
    io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams this$1 -> b
    930:930:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams,io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream) -> <init>
    933:934:void process() -> a
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams$2 -> io.netty.c.a.e.m:
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream val$stream -> a
    java.util.Iterator val$itr -> b
    io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams this$1 -> c
    943:943:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams,io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator) -> <init>
    946:947:void process() -> a
io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream -> io.netty.c.a.e.n:
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> a
    590:592:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection) -> <init>
    596:596:boolean isResetSent() -> a
    601:601:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint createdBy() -> b
    606:606:io.netty.handler.codec.http2.Http2Stream resetSent() -> c
    611:611:io.netty.handler.codec.http2.Http2Stream open(boolean) -> a
    616:616:io.netty.handler.codec.http2.Http2Stream close() -> d
    621:621:io.netty.handler.codec.http2.Http2Stream closeLocalSide() -> e
    626:626:io.netty.handler.codec.http2.Http2Stream closeRemoteSide() -> f
    631:631:io.netty.handler.codec.http2.Http2Stream headersSent(boolean) -> b
    636:636:boolean isHeadersSent() -> g
    641:641:io.netty.handler.codec.http2.Http2Stream pushPromiseSent() -> h
    646:646:boolean isPushPromiseSent() -> i
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint -> io.netty.c.a.e.o:
    boolean server -> e
    int nextStreamIdToCreate -> f
    int nextReservationStreamId -> g
    int lastStreamKnownByPeer -> h
    boolean pushToAllowed -> i
    io.netty.handler.codec.http2.Http2FlowController flowController -> j
    int maxStreams -> k
    int maxActiveStreams -> l
    int maxReservedStreams -> m
    int numActiveStreams -> a
    int numStreams -> b
    boolean $assertionsDisabled -> c
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> d
    668:699:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,boolean,int) -> <init>
    703:703:int incrementAndGetNextStreamId() -> a
    707:712:void incrementExpectedStreamId(int) -> d
    716:716:boolean isValidStreamId(int) -> a
    721:721:boolean mayHaveCreatedStream(int) -> b
    726:726:boolean canOpenStream() -> b
    731:743:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream createStream(int,boolean) -> a
    748:748:boolean created(io.netty.handler.codec.http2.Http2Stream) -> a
    753:753:boolean isServer() -> c
    758:777:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream reservePushStream(int,io.netty.handler.codec.http2.Http2Stream) -> a
    782:792:void addStream(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream) -> a
    796:800:void allowPushTo(boolean) -> a
    804:804:boolean allowPushTo() -> d
    809:809:int numActiveStreams() -> e
    814:814:int maxActiveStreams() -> f
    819:821:void maxActiveStreams(int) -> c
    825:825:int lastStreamCreated() -> g
    830:830:int lastStreamKnownByPeer() -> h
    834:835:void lastStreamKnownByPeer(int) -> e
    839:839:io.netty.handler.codec.http2.Http2FlowController flowController() -> i
    844:845:void flowController(io.netty.handler.codec.http2.Http2FlowController) -> a
    849:849:io.netty.handler.codec.http2.Http2Connection$Endpoint opposite() -> j
    853:854:void updateMaxStreams() -> k
    857:887:void checkNewStreamAllowed(int,io.netty.handler.codec.http2.Http2Stream$State) -> a
    890:890:boolean isLocal() -> l
    653:653:io.netty.handler.codec.http2.Http2Stream reservePushStream(int,io.netty.handler.codec.http2.Http2Stream) -> b
    653:653:io.netty.handler.codec.http2.Http2Stream createStream(int,boolean) -> b
    653:653:int access$100(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint) -> a
    653:653:void access$200(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint,int) -> a
    653:653:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey -> io.netty.c.a.e.p:
    int index -> a
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> b
    1022:1024:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,int) -> <init>
    1027:1030:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey verifyConnection(io.netty.handler.codec.http2.Http2Connection) -> a
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream -> io.netty.c.a.e.q:
    int id -> a
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap properties -> c
    io.netty.handler.codec.http2.Http2Stream$State state -> d
    byte metaState -> e
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> b
    383:390:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,int,io.netty.handler.codec.http2.Http2Stream$State) -> <init>
    394:394:int id() -> j
    399:399:io.netty.handler.codec.http2.Http2Stream$State state() -> k
    404:404:boolean isResetSent() -> a
    409:410:io.netty.handler.codec.http2.Http2Stream resetSent() -> c
    415:418:io.netty.handler.codec.http2.Http2Stream headersSent(boolean) -> b
    423:423:boolean isHeadersSent() -> g
    428:428:boolean isTrailersSent() -> l
    433:436:io.netty.handler.codec.http2.Http2Stream headersReceived(boolean) -> c
    441:441:boolean isHeadersReceived() -> m
    446:446:boolean isTrailersReceived() -> n
    451:452:io.netty.handler.codec.http2.Http2Stream pushPromiseSent() -> h
    457:457:boolean isPushPromiseSent() -> i
    462:462:java.lang.Object setProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey,java.lang.Object) -> a
    467:467:java.lang.Object getProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey) -> a
    472:472:java.lang.Object removeProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey) -> b
    477:482:io.netty.handler.codec.http2.Http2Stream open(boolean) -> a
    486:487:void activate() -> o
    490:498:io.netty.handler.codec.http2.Http2Stream close(java.util.Iterator) -> a
    503:503:io.netty.handler.codec.http2.Http2Stream close() -> d
    508:519:io.netty.handler.codec.http2.Http2Stream closeLocalSide() -> e
    524:535:io.netty.handler.codec.http2.Http2Stream closeRemoteSide() -> f
    539:539:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint createdBy() -> b
    543:543:boolean isLocal() -> p
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap -> io.netty.c.a.e.r:
    java.lang.Object[] values -> a
    io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream this$1 -> b
    549:550:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream) -> <init>
    553:557:java.lang.Object add(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey,java.lang.Object) -> a
    562:565:java.lang.Object get(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey) -> a
    570:575:java.lang.Object remove(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey) -> b
    579:582:void resizeIfNecessary(int) -> a
    549:549:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,io.netty.handler.codec.http2.DefaultHttp2Connection$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2Connection$Event -> io.netty.c.a.e.s:
    void process() -> a
io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry -> io.netty.c.a.e.t:
    java.util.List keys -> a
    io.netty.handler.codec.http2.DefaultHttp2Connection this$0 -> b
    1037:1043:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection) -> <init>
    1049:1051:io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey newKey() -> a
    1055:1055:int size() -> b
    1037:1037:void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,io.netty.handler.codec.http2.DefaultHttp2Connection$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder -> io.netty.c.a.e.u:
    io.netty.util.internal.logging.InternalLogger logger -> a
    io.netty.handler.codec.http2.Http2FrameListener internalFrameListener -> b
    io.netty.handler.codec.http2.Http2Connection connection -> c
    io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager -> d
    io.netty.handler.codec.http2.Http2ConnectionEncoder encoder -> e
    io.netty.handler.codec.http2.Http2FrameReader frameReader -> f
    io.netty.handler.codec.http2.Http2FrameListener listener -> g
    io.netty.handler.codec.http2.Http2PromisedRequestVerifier requestVerifier -> h
    64:65:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2FrameReader) -> <init>
    53:79:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2FrameReader,io.netty.handler.codec.http2.Http2PromisedRequestVerifier) -> <init>
    83:84:void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager) -> a
    88:88:io.netty.handler.codec.http2.Http2Connection connection() -> a
    93:93:io.netty.handler.codec.http2.Http2LocalFlowController flowController() -> b
    98:99:void frameListener(io.netty.handler.codec.http2.Http2FrameListener) -> a
    103:103:io.netty.handler.codec.http2.Http2FrameListener frameListener() -> c
    113:113:boolean prefaceReceived() -> d
    118:119:void decodeFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> a
    123:136:io.netty.handler.codec.http2.Http2Settings localSettings() -> e
    141:142:void close() -> close
    152:152:long calculateMaxHeaderListSizeGoAway(long) -> a
    156:156:int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream) -> a
    161:167:void onGoAwayRead0(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> a
    171:172:void onUnknownFrame0(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> a
    51:51:io.netty.handler.codec.http2.Http2Connection access$100(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> a
    51:51:int access$200(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder,io.netty.handler.codec.http2.Http2Stream) -> a
    51:51:io.netty.handler.codec.http2.Http2FrameListener access$300(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> b
    51:51:io.netty.handler.codec.http2.Http2LifecycleManager access$400(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> c
    51:51:io.netty.handler.codec.http2.Http2ConnectionEncoder access$500(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> d
    51:51:io.netty.handler.codec.http2.Http2FrameReader access$600(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> e
    51:51:io.netty.handler.codec.http2.Http2PromisedRequestVerifier access$700(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> f
    51:51:io.netty.util.internal.logging.InternalLogger access$800() -> f
    51:51:io.netty.handler.codec.http2.Http2FrameListener access$900(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> g
    51:51:io.netty.handler.codec.http2.Http2FrameListener access$902(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder,io.netty.handler.codec.http2.Http2FrameListener) -> a
    52:52:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$1 -> io.netty.c.a.e.v:
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State -> a
    212:212:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener -> io.netty.c.a.e.w:
    io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0 -> a
    177:177:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> <init>
    181:261:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    269:270:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    275:327:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    332:335:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    339:357:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    362:369:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    377:412:void applyLocalSettings(io.netty.handler.codec.http2.Http2Settings) -> a
    419:424:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    430:433:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    437:438:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    444:490:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    495:496:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    501:512:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    517:518:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
    526:546:boolean shouldIgnoreHeadersOrDataFrame(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Stream,java.lang.String) -> a
    562:564:boolean streamCreatedAfterGoAwaySent(int) -> a
    568:571:void verifyStreamMayHaveExisted(int) -> b
    177:177:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder,io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener -> io.netty.c.a.e.x:
    io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder this$0 -> a
    574:574:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder) -> <init>
    582:585:void verifyPrefaceReceived() -> a
    590:591:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    597:599:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    604:607:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    612:614:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    618:620:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    624:626:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    632:636:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    640:642:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    646:648:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    653:655:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    660:661:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    666:668:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    673:674:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
    574:574:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder,io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder -> io.netty.c.a.e.y:
    io.netty.handler.codec.http2.Http2FrameWriter frameWriter -> a
    io.netty.handler.codec.http2.Http2Connection connection -> b
    io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager -> c
    java.util.ArrayDeque outstandingLocalSettingsQueue -> d
    46:54:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameWriter) -> <init>
    58:59:void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager) -> a
    63:63:io.netty.handler.codec.http2.Http2FrameWriter frameWriter() -> c
    68:68:io.netty.handler.codec.http2.Http2Connection connection() -> a
    73:73:io.netty.handler.codec.http2.Http2RemoteFlowController flowController() -> b
    78:114:void remoteSettings(io.netty.handler.codec.http2.Http2Settings) -> a
    121:140:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> a
    146:146:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> a
    151:155:boolean validateHeadersSentState(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean,boolean) -> b
    163:228:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> a
    242:242:io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> a
    248:258:io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> a
    263:263:io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> a
    268:268:io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    275:296:io.netty.channel.ChannelFuture writePushPromise(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int,io.netty.channel.ChannelPromise) -> a
    303:303:io.netty.channel.ChannelFuture writeGoAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    309:309:io.netty.channel.ChannelFuture writeWindowUpdate(io.netty.channel.ChannelHandlerContext,int,int,io.netty.channel.ChannelPromise) -> a
    316:316:io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    321:322:void close() -> close
    326:326:io.netty.handler.codec.http2.Http2Settings pollSentSettings() -> d
    331:331:io.netty.handler.codec.http2.Http2FrameWriter$Configuration configuration() -> e
    335:345:io.netty.handler.codec.http2.Http2Stream requireStream(int) -> a
    40:40:io.netty.handler.codec.http2.Http2LifecycleManager access$000(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder) -> a
    40:40:io.netty.handler.codec.http2.Http2Connection access$100(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder) -> b
    40:40:boolean access$200(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean,boolean) -> a
    40:40:io.netty.handler.codec.http2.Http2FrameWriter access$300(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder) -> c
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$1 -> io.netty.c.a.e.z:
    io.netty.handler.codec.http2.Http2Stream val$finalStream -> a
    io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0 -> b
    196:196:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder,io.netty.handler.codec.http2.Http2Stream) -> <init>
    199:200:void operationComplete(io.netty.channel.ChannelFuture) -> a
    196:196:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$2 -> io.netty.c.a.e.A:
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State -> a
    124:124:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase -> io.netty.c.a.e.B:
    io.netty.handler.codec.http2.Http2Stream stream -> a
    io.netty.channel.ChannelPromise promise -> b
    boolean endOfStream -> c
    int padding -> d
    io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0 -> e
    500:508:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder,io.netty.handler.codec.http2.Http2Stream,int,boolean,io.netty.channel.ChannelPromise) -> <init>
    512:515:void writeComplete() -> a
    519:522:void operationComplete(io.netty.channel.ChannelFuture) -> a
    492:492:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData -> io.netty.c.a.e.C:
    io.netty.channel.CoalescingBufferQueue queue -> g
    int dataSize -> h
    io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0 -> f
    362:367:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder,io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> <init>
    371:371:int size() -> b
    376:380:void error(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> a
    384:413:void write(io.netty.channel.ChannelHandlerContext,int) -> a
    418:427:boolean merge(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> a
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledHeaders -> io.netty.c.a.e.D:
    io.netty.handler.codec.http2.Http2Headers headers -> g
    int streamDependency -> h
    short weight -> i
    boolean exclusive -> j
    io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0 -> f
    443:449:void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder,io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> <init>
    453:453:int size() -> b
    458:462:void error(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> a
    466:481:void write(io.netty.channel.ChannelHandlerContext,int) -> a
    485:485:boolean merge(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> a
io.netty.handler.codec.http2.DefaultHttp2FrameReader -> io.netty.c.a.e.E:
    io.netty.handler.codec.http2.Http2HeadersDecoder headersDecoder -> a
    boolean readingHeaders -> b
    boolean readError -> c
    byte frameType -> d
    int streamId -> e
    io.netty.handler.codec.http2.Http2Flags flags -> f
    int payloadLength -> g
    io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation headersContinuation -> h
    int maxFrameSize -> i
    80:81:void <init>() -> <init>
    89:90:void <init>(boolean) -> <init>
    61:95:void <init>(io.netty.handler.codec.http2.Http2HeadersDecoder) -> <init>
    99:99:io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration headersConfiguration() -> a
    104:104:io.netty.handler.codec.http2.Http2FrameReader$Configuration configuration() -> b
    109:109:io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy() -> c
    114:119:void maxFrameSize(int) -> a
    123:123:int maxFrameSize() -> d
    128:129:void close() -> close
    132:136:void closeHeadersContinuation() -> e
    141:176:void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> a
    179:233:void processHeaderState(io.netty.buffer.ByteBuf) -> a
    237:284:void processPayloadState(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> b
    287:295:void verifyDataFrame() -> f
    298:307:void verifyHeadersFrame() -> g
    310:317:void verifyPriorityFrame() -> h
    320:326:void verifyRstStreamFrame() -> i
    329:340:void verifySettingsFrame() -> j
    343:353:void verifyPushPromiseFrame() -> k
    356:364:void verifyPingFrame() -> l
    367:376:void verifyGoAwayFrame() -> m
    379:385:void verifyWindowUpdateFrame() -> n
    388:405:void verifyContinuationFrame() -> o
    408:409:void verifyUnknownFrame() -> p
    413:423:void readDataFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> c
    427:493:void readHeadersFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> d
    496:499:void resetHeadersContinuationIfEnd(boolean) -> a
    503:511:void readPriorityFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> e
    515:517:void readRstStreamFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> f
    521:544:void readSettingsFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> g
    548:575:void readPushPromiseFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> h
    579:585:void readPingFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> i
    589:593:void readGoAwayFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> j
    597:603:void readWindowUpdateFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> k
    608:612:void readContinuationFrame(io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> a
    616:618:void readUnknownFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> l
    625:628:int readPadding(io.netty.buffer.ByteBuf) -> b
    632:636:void verifyPadding(int) -> b
    643:643:int lengthWithoutTrailingPadding(int,int) -> a
    771:775:void verifyNotProcessingHeaders() -> q
    778:781:void verifyPayloadLength(int) -> c
    784:787:void verifyAssociatedWithAStream() -> r
    791:794:void verifyStreamOrConnectionId(int,java.lang.String) -> a
    55:55:io.netty.handler.codec.http2.Http2HeadersDecoder access$100(io.netty.handler.codec.http2.DefaultHttp2FrameReader) -> a
    55:55:int access$200(io.netty.handler.codec.http2.DefaultHttp2FrameReader) -> b
    55:55:io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation access$302(io.netty.handler.codec.http2.DefaultHttp2FrameReader,io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation) -> a
io.netty.handler.codec.http2.DefaultHttp2FrameReader$1 -> io.netty.c.a.e.F:
    int val$headersStreamId -> a
    io.netty.channel.ChannelHandlerContext val$ctx -> b
    int val$streamDependency -> c
    short val$weight -> d
    boolean val$exclusive -> e
    int val$padding -> f
    io.netty.handler.codec.http2.Http2Flags val$headersFlags -> g
    io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0 -> h
    445:445:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader,int,io.netty.channel.ChannelHandlerContext,int,short,boolean,int,io.netty.handler.codec.http2.Http2Flags) -> <init>
    448:448:int getStreamId() -> a
    454:460:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> a
io.netty.handler.codec.http2.DefaultHttp2FrameReader$2 -> io.netty.c.a.e.G:
    int val$headersStreamId -> a
    io.netty.channel.ChannelHandlerContext val$ctx -> b
    int val$padding -> c
    io.netty.handler.codec.http2.Http2Flags val$headersFlags -> d
    io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0 -> e
    471:471:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader,int,io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Flags) -> <init>
    474:474:int getStreamId() -> a
    480:486:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> a
io.netty.handler.codec.http2.DefaultHttp2FrameReader$3 -> io.netty.c.a.e.H:
    int val$pushPromiseStreamId -> a
    io.netty.channel.ChannelHandlerContext val$ctx -> b
    int val$promisedStreamId -> c
    int val$padding -> d
    io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0 -> e
    554:554:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader,int,io.netty.channel.ChannelHandlerContext,int,int) -> <init>
    557:557:int getStreamId() -> a
    563:568:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> a
io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder -> io.netty.c.a.e.I:
    io.netty.buffer.ByteBuf headerBlock -> b
    io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0 -> a
    687:687:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader) -> <init>
    695:697:void headerSizeExceeded() -> c
    709:738:void addFragment(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBufAllocator,boolean) -> a
    746:748:io.netty.handler.codec.http2.Http2Headers headers() -> a
    756:763:void close() -> b
io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation -> io.netty.c.a.e.J:
    io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder builder -> a
    io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0 -> i
    653:654:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader) -> <init>
    int getStreamId() -> a
    void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> a
    672:672:io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder headersBlockBuilder() -> b
    679:680:void close() -> c
    653:653:void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader,io.netty.handler.codec.http2.DefaultHttp2FrameReader$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2FrameWriter -> io.netty.c.a.e.K:
    io.netty.buffer.ByteBuf ZERO_BUFFER -> a
    io.netty.handler.codec.http2.Http2HeadersEncoder headersEncoder -> b
    int maxFrameSize -> c
    86:87:void <init>() -> <init>
    90:91:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> <init>
    94:95:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector,boolean) -> <init>
    97:100:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder) -> <init>
    104:104:io.netty.handler.codec.http2.Http2FrameWriter$Configuration configuration() -> e
    109:109:io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration headersConfiguration() -> a
    114:114:io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy() -> b
    119:123:void maxFrameSize(int) -> a
    127:127:int maxFrameSize() -> d
    131:131:void close() -> close
    136:252:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> a
    258:258:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> a
    266:266:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> a
    293:301:io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> a
    309:319:io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> a
    326:330:io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> a
    336:364:io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    370:422:io.netty.channel.ChannelFuture writePushPromise(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int,io.netty.channel.ChannelPromise) -> a
    428:457:io.netty.channel.ChannelFuture writeGoAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    464:472:io.netty.channel.ChannelFuture writeWindowUpdate(io.netty.channel.ChannelHandlerContext,int,int,io.netty.channel.ChannelPromise) -> a
    479:502:io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    508:569:io.netty.channel.ChannelFuture writeHeadersInternal(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,boolean,int,short,boolean,io.netty.channel.ChannelPromise) -> a
    577:618:io.netty.channel.ChannelFuture writeContinuationFrames(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator) -> a
    627:627:int paddingBytes(int) -> b
    631:636:void writePaddingLength(io.netty.buffer.ByteBuf,int) -> a
    639:642:void verifyStreamId(int,java.lang.String) -> a
    645:648:void verifyStreamOrConnectionId(int,java.lang.String) -> b
    651:654:void verifyWeight(short) -> a
    657:660:void verifyErrorCode(long) -> a
    663:666:void verifyWindowSizeIncrement(int) -> c
    669:672:void verifyPingPayload(io.netty.buffer.ByteBuf) -> a
    79:80:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2Headers -> io.netty.c.a.e.L:
    io.netty.util.ByteProcessor HTTP2_NAME_VALIDATOR_PROCESSOR -> d
    io.netty.handler.codec.DefaultHeaders$NameValidator HTTP2_NAME_VALIDATOR -> c
    io.netty.handler.codec.DefaultHeaders$HeaderEntry firstNonPseudo -> e
    81:82:void <init>() -> <init>
    72:96:void <init>(boolean) -> <init>
    72:113:void <init>(boolean,int) -> <init>
    117:118:io.netty.handler.codec.http2.Http2Headers clear() -> f
    123:123:boolean equals(java.lang.Object) -> equals
    128:128:int hashCode() -> hashCode
    133:134:io.netty.handler.codec.http2.Http2Headers method(java.lang.CharSequence) -> a
    139:140:io.netty.handler.codec.http2.Http2Headers scheme(java.lang.CharSequence) -> b
    145:146:io.netty.handler.codec.http2.Http2Headers authority(java.lang.CharSequence) -> c
    151:152:io.netty.handler.codec.http2.Http2Headers path(java.lang.CharSequence) -> d
    157:158:io.netty.handler.codec.http2.Http2Headers status(java.lang.CharSequence) -> e
    163:163:java.lang.CharSequence method() -> g
    168:168:java.lang.CharSequence scheme() -> h
    173:173:java.lang.CharSequence authority() -> i
    178:178:java.lang.CharSequence path() -> j
    183:183:java.lang.CharSequence status() -> k
    189:189:io.netty.handler.codec.DefaultHeaders$HeaderEntry newHeaderEntry(int,java.lang.CharSequence,java.lang.CharSequence,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> a
    28:28:io.netty.handler.codec.DefaultHeaders$HeaderEntry newHeaderEntry(int,java.lang.Object,java.lang.Object,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> a
    28:28:io.netty.handler.codec.Headers clear() -> d
    29:29:io.netty.util.ByteProcessor access$000() -> l
    29:29:io.netty.handler.codec.DefaultHeaders$HeaderEntry access$100(io.netty.handler.codec.http2.DefaultHttp2Headers) -> a
    29:29:io.netty.handler.codec.DefaultHeaders$HeaderEntry access$200(io.netty.handler.codec.http2.DefaultHttp2Headers) -> b
    29:29:io.netty.handler.codec.DefaultHeaders$HeaderEntry access$300(io.netty.handler.codec.http2.DefaultHttp2Headers) -> c
    29:29:io.netty.handler.codec.DefaultHeaders$HeaderEntry access$400(io.netty.handler.codec.http2.DefaultHttp2Headers) -> d
    29:29:io.netty.handler.codec.DefaultHeaders$HeaderEntry access$102(io.netty.handler.codec.http2.DefaultHttp2Headers,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> a
    31:37:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2Headers$1 -> io.netty.c.a.e.M:
    31:31:void <init>() -> <init>
    34:34:boolean process(byte) -> a
io.netty.handler.codec.http2.DefaultHttp2Headers$2 -> io.netty.c.a.e.N:
    37:37:void <init>() -> <init>
    40:69:void validateName(java.lang.CharSequence) -> a
    37:37:void validateName(java.lang.Object) -> a
io.netty.handler.codec.http2.DefaultHttp2Headers$Http2HeaderEntry -> io.netty.c.a.e.O:
    io.netty.handler.codec.http2.DefaultHttp2Headers this$0 -> g
    194:211:void <init>(io.netty.handler.codec.http2.DefaultHttp2Headers,int,java.lang.CharSequence,java.lang.CharSequence,io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> <init>
    215:219:void remove() -> d
io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder -> io.netty.c.a.e.P:
    io.netty.handler.codec.http2.HpackDecoder hpackDecoder -> a
    boolean validateHeaders -> b
    float headerArraySizeAccumulator -> c
    42:43:void <init>() -> <init>
    46:47:void <init>(boolean) -> <init>
    58:59:void <init>(boolean,long) -> <init>
    72:73:void <init>(boolean,long,int) -> <init>
    39:82:void <init>(boolean,io.netty.handler.codec.http2.HpackDecoder) -> <init>
    86:87:void maxHeaderTableSize(long) -> a
    91:91:long maxHeaderTableSize() -> a
    96:97:void maxHeaderListSize(long,long) -> a
    101:101:long maxHeaderListSize() -> b
    106:106:long maxHeaderListSizeGoAway() -> c
    111:111:io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration configuration() -> d
    117:128:io.netty.handler.codec.http2.Http2Headers decodeHeaders(int,io.netty.buffer.ByteBuf) -> a
    153:153:io.netty.handler.codec.http2.Http2Headers newHeaders() -> e
io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder -> io.netty.c.a.e.Q:
    io.netty.handler.codec.http2.HpackEncoder hpackEncoder -> c
    io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector sensitivityDetector -> d
    io.netty.buffer.ByteBuf tableSizeChangeOutput -> e
    33:34:void <init>() -> <init>
    37:38:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> <init>
    41:42:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector,boolean) -> <init>
    30:56:void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector,io.netty.handler.codec.http2.HpackEncoder) -> <init>
    63:74:void encodeHeaders(int,io.netty.handler.codec.http2.Http2Headers,io.netty.buffer.ByteBuf) -> a
    78:79:void maxHeaderTableSize(long) -> a
    88:89:void maxHeaderListSize(long) -> b
    98:98:io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration configuration() -> a
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController -> io.netty.c.a.e.R:
    io.netty.handler.codec.http2.Http2Connection connection -> b
    io.netty.handler.codec.http2.Http2Connection$PropertyKey stateKey -> c
    io.netty.handler.codec.http2.Http2FrameWriter frameWriter -> d
    io.netty.channel.ChannelHandlerContext ctx -> e
    float windowUpdateRatio -> f
    int initialWindowSize -> g
    io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState REDUCED_FLOW_STATE -> h
    boolean $assertionsDisabled -> a
    58:59:void <init>(io.netty.handler.codec.http2.Http2Connection) -> <init>
    55:124:void <init>(io.netty.handler.codec.http2.Http2Connection,float,boolean) -> <init>
    128:129:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController frameWriter(io.netty.handler.codec.http2.Http2FrameWriter) -> a
    134:135:void channelHandlerContext(io.netty.channel.ChannelHandlerContext) -> a
    139:146:void initialWindowSize(int) -> a
    150:150:int initialWindowSize() -> a
    155:155:int windowSize(io.netty.handler.codec.http2.Http2Stream) -> a
    165:171:void incrementWindowSize(io.netty.handler.codec.http2.Http2Stream,int) -> a
    175:194:boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream,int) -> b
    199:199:int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream) -> b
    203:206:void checkValidRatio(float) -> b
    216:219:void windowUpdateRatio(float) -> a
    264:280:void receiveFlowControlledFrame(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,int,boolean) -> a
    283:283:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState connectionState() -> c
    287:287:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState state(io.netty.handler.codec.http2.Http2Stream) -> c
    291:291:boolean isClosed(io.netty.handler.codec.http2.Http2Stream) -> d
    42:42:io.netty.handler.codec.http2.Http2LocalFlowController frameWriter(io.netty.handler.codec.http2.Http2FrameWriter) -> b
    43:43:io.netty.handler.codec.http2.Http2Connection$PropertyKey access$000(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> a
    43:43:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState access$100() -> b
    43:43:int access$200(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> b
    43:43:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState access$300(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController,io.netty.handler.codec.http2.Http2Stream) -> a
    43:43:io.netty.channel.ChannelHandlerContext access$400(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> c
    43:43:io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState access$500(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> d
    43:43:float access$600(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> e
    43:43:io.netty.handler.codec.http2.Http2FrameWriter access$700(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> f
    42:487:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$1 -> io.netty.c.a.e.S:
    io.netty.handler.codec.http2.DefaultHttp2LocalFlowController this$0 -> a
    88:88:void <init>(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController) -> <init>
    93:94:void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    100:101:void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    108:122:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$2 -> io.netty.c.a.e.T:
    487:487:void <init>() -> <init>
    491:491:int windowSize() -> a
    508:508:void incrementInitialStreamWindow(int) -> a
    512:512:boolean writeWindowUpdateIfNeeded() -> b
    517:517:boolean consumeBytes(int) -> b
    522:522:int unconsumedBytes() -> c
    537:537:void receiveFlowControlledFrame(int) -> c
    544:544:void incrementFlowControlWindows(int) -> d
    548:548:void endOfStream(boolean) -> a
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$AutoRefillState -> io.netty.c.a.e.U:
    io.netty.handler.codec.http2.DefaultHttp2LocalFlowController this$0 -> a
    299:301:void <init>(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController,io.netty.handler.codec.http2.Http2Stream,int) -> <init>
    305:308:void receiveFlowControlledFrame(int) -> c
    313:313:boolean consumeBytes(int) -> b
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$DefaultState -> io.netty.c.a.e.V:
    io.netty.handler.codec.http2.Http2Stream stream -> a
    int window -> d
    int processedWindow -> e
    int initialStreamWindowSize -> f
    float streamWindowUpdateRatio -> g
    int lowerBound -> h
    boolean endOfStream -> i
    boolean $assertionsDisabled -> b
    io.netty.handler.codec.http2.DefaultHttp2LocalFlowController this$0 -> c
    352:356:void <init>(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController,io.netty.handler.codec.http2.Http2Stream,int) -> <init>
    360:362:void window(int) -> e
    366:366:int windowSize() -> a
    376:377:void endOfStream(boolean) -> a
    393:398:void incrementInitialStreamWindow(int) -> a
    402:410:void incrementFlowControlWindows(int) -> d
    414:428:void receiveFlowControlledFrame(int) -> c
    431:436:void returnProcessedBytes(int) -> f
    441:442:boolean consumeBytes(int) -> b
    447:447:int unconsumedBytes() -> c
    452:461:boolean writeWindowUpdateIfNeeded() -> b
    470:480:void writeWindowUpdate() -> d
    320:320:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState -> io.netty.c.a.e.W:
    int windowSize() -> a
    void incrementInitialStreamWindow(int) -> a
    boolean writeWindowUpdateIfNeeded() -> b
    boolean consumeBytes(int) -> b
    int unconsumedBytes() -> c
    void receiveFlowControlledFrame(int) -> c
    void incrementFlowControlWindows(int) -> d
    void endOfStream(boolean) -> a
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$WindowUpdateVisitor -> io.netty.c.a.e.X:
    io.netty.handler.codec.http2.Http2Exception$CompositeStreamException compositeException -> b
    int delta -> c
    io.netty.handler.codec.http2.DefaultHttp2LocalFlowController this$0 -> a
    616:618:void <init>(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController,int) -> <init>
    624:633:boolean visit(io.netty.handler.codec.http2.Http2Stream) -> a
    637:640:void throwIfError() -> a
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController -> io.netty.c.a.e.Y:
    io.netty.util.internal.logging.InternalLogger logger -> b
    io.netty.handler.codec.http2.Http2Connection connection -> c
    io.netty.handler.codec.http2.Http2Connection$PropertyKey stateKey -> d
    io.netty.handler.codec.http2.StreamByteDistributor streamByteDistributor -> e
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState connectionState -> f
    int initialWindowSize -> g
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor monitor -> h
    io.netty.channel.ChannelHandlerContext ctx -> i
    boolean $assertionsDisabled -> a
    58:59:void <init>(io.netty.handler.codec.http2.Http2Connection) -> <init>
    67:68:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2RemoteFlowController$Listener) -> <init>
    53:126:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.StreamByteDistributor,io.netty.handler.codec.http2.Http2RemoteFlowController$Listener) -> <init>
    135:148:void channelHandlerContext(io.netty.channel.ChannelHandlerContext) -> a
    152:152:io.netty.channel.ChannelHandlerContext channelHandlerContext() -> b
    157:159:void initialWindowSize(int) -> a
    163:163:int initialWindowSize() -> a
    168:168:int windowSize(io.netty.handler.codec.http2.Http2Stream) -> a
    173:173:boolean isWritable(io.netty.handler.codec.http2.Http2Stream) -> b
    178:179:void channelWritabilityChanged() -> c
    184:189:void updateDependencyTree(int,int,short,boolean) -> a
    192:192:boolean isChannelWritable() -> f
    196:196:boolean isChannelWritable0() -> g
    201:202:void listener(io.netty.handler.codec.http2.Http2RemoteFlowController$Listener) -> a
    206:208:void incrementWindowSize(io.netty.handler.codec.http2.Http2Stream,int) -> a
    213:220:void addFlowControlled(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> a
    224:224:boolean hasFlowControlled(io.netty.handler.codec.http2.Http2Stream) -> c
    228:228:io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState state(io.netty.handler.codec.http2.Http2Stream) -> d
    235:235:int connectionWindowSize() -> h
    245:245:int minUsableChannelBytes() -> i
    250:254:int maxUsableChannelBytes() -> j
    262:262:int writableBytes() -> k
    267:268:void writePendingBytes() -> d
    45:45:io.netty.handler.codec.http2.Http2Connection$PropertyKey access$000(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> a
    45:45:io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState access$100(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController,io.netty.handler.codec.http2.Http2Stream) -> a
    45:45:int access$200(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> b
    45:45:io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor access$300(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> c
    45:45:io.netty.channel.ChannelHandlerContext access$500(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> d
    45:45:io.netty.handler.codec.http2.StreamByteDistributor access$600(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> e
    45:45:int access$700(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> f
    45:45:io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState access$800(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> g
    45:45:int access$900(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> h
    45:45:boolean access$1000(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> i
    45:45:int access$202(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController,int) -> a
    45:45:io.netty.handler.codec.http2.Http2Connection access$1100(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> j
    45:45:boolean access$1200(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> k
    45:45:io.netty.util.internal.logging.InternalLogger access$1500() -> e
    44:47:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1 -> io.netty.c.a.e.Z:
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0 -> a
    86:86:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> <init>
    91:92:void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    98:99:void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    105:106:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    110:124:void onStreamHalfClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamHalfClosed
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState -> io.netty.c.a.e.aa:
    io.netty.handler.codec.http2.Http2Stream stream -> c
    java.util.Deque pendingWriteQueue -> d
    int window -> e
    int pendingBytes -> f
    boolean markedWritable -> g
    boolean writing -> h
    boolean cancelled -> i
    io.netty.util.BooleanSupplier isWritableSupplier -> j
    boolean $assertionsDisabled -> a
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0 -> b
    288:298:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController,io.netty.handler.codec.http2.Http2Stream) -> <init>
    306:308:boolean isWritable() -> a
    317:317:io.netty.handler.codec.http2.Http2Stream stream() -> b
    324:324:boolean markedWritability() -> c
    331:332:void markedWritability(boolean) -> a
    336:336:int windowSize() -> d
    343:344:void windowSize(int) -> a
    351:410:int writeAllocatedBytes(int) -> b
    417:424:int incrementStreamWindow(int) -> c
    431:431:int writableWindow() -> h
    436:436:int pendingBytes() -> e
    443:455:void enqueueFrame(io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> a
    458:462:void enqueueFrameWithoutMerge(io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> b
    466:466:boolean hasFrame() -> f
    473:473:io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled peek() -> i
    480:481:void cancel() -> g
    488:507:void cancel(java.lang.Throwable) -> a
    514:519:void incrementPendingBytes(int,boolean) -> a
    525:526:void decrementPendingBytes(int,boolean) -> b
    533:540:void decrementFlowControlWindow(int) -> d
    547:550:void writeError(io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled,io.netty.handler.codec.http2.Http2Exception) -> a
    273:273:io.netty.handler.codec.http2.Http2Stream access$1400(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> a
    273:273:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState$1 -> io.netty.c.a.e.ab:
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState this$1 -> a
    288:288:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> <init>
    291:291:boolean get() -> get
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor -> io.netty.c.a.e.ac:
    io.netty.handler.codec.http2.Http2RemoteFlowController$Listener listener -> c
    io.netty.handler.codec.http2.Http2StreamVisitor checkStreamWritabilityVisitor -> d
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0 -> a
    690:703:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController,io.netty.handler.codec.http2.Http2RemoteFlowController$Listener) -> <init>
    707:713:void windowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,int) -> a
    717:719:void incrementWindowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,int) -> b
    723:729:void initialWindowSize(int) -> a
    733:735:void enqueueFrame(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> a
    740:744:void stateCancelled(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> a
    748:751:void channelWritabilityChange() -> a
    754:761:void checkStateWritability(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> c
    764:770:void notifyWritabilityChanged(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> d
    774:779:void checkConnectionThenStreamWritabilityChanged(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> e
    783:785:void checkAllWritabilityChanged() -> d
    688:688:void access$1300(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor,io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> a
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor$1 -> io.netty.c.a.e.ad:
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor this$1 -> a
    690:690:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor) -> <init>
    693:697:boolean visit(io.netty.handler.codec.http2.Http2Stream) -> a
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor -> io.netty.c.a.e.ae:
    boolean inWritePendingBytes -> a
    long totalPendingBytes -> c
    io.netty.handler.codec.http2.StreamByteDistributor$Writer writer -> d
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0 -> b
    556:559:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController) -> <init>
    570:570:void channelWritabilityChange() -> a
    576:576:void stateCancelled(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> a
    584:585:void windowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,int) -> a
    594:595:void incrementWindowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,int) -> b
    604:605:void enqueueFrame(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> a
    613:617:void incrementPendingBytes(int) -> b
    625:625:boolean isWritable(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) -> b
    634:652:void writePendingBytes() -> b
    655:673:void initialWindowSize(int) -> a
    676:676:boolean isWritableConnection() -> c
    556:556:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController,io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1) -> <init>
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor$1 -> io.netty.c.a.e.af:
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor this$1 -> a
    559:559:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor) -> <init>
    562:563:void write(io.netty.handler.codec.http2.Http2Stream,int) -> a
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor$2 -> io.netty.c.a.e.ag:
    int val$delta -> a
    io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor this$1 -> b
    661:661:void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor,int) -> <init>
    664:665:boolean visit(io.netty.handler.codec.http2.Http2Stream) -> a
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener -> io.netty.c.a.e.ah:
    io.netty.handler.codec.http2.Http2Connection connection -> b
    boolean strict -> c
    boolean flowControllerInitialized -> d
    io.netty.handler.codec.http2.Http2Connection$PropertyKey propertyKey -> e
    50:51:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener) -> <init>
    55:69:void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,boolean) -> <init>
    74:138:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    145:147:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    152:154:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    167:178:io.netty.channel.embedded.EmbeddedChannel newContentDecompressor(io.netty.channel.ChannelHandlerContext,java.lang.CharSequence) -> a
    191:191:java.lang.CharSequence getTargetContentEncoding(java.lang.CharSequence) -> a
    206:246:void initDecompressor(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,boolean) -> a
    249:249:io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor decompressor(io.netty.handler.codec.http2.Http2Stream) -> a
    258:259:void cleanup(io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor) -> b
    270:278:io.netty.buffer.ByteBuf nextReadableBuf(io.netty.channel.embedded.EmbeddedChannel) -> a
    42:42:void access$000(io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor) -> a
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$1 -> io.netty.c.a.e.ai:
    io.netty.handler.codec.http2.DelegatingDecompressorFrameListener this$0 -> a
    60:60:void <init>(io.netty.handler.codec.http2.DelegatingDecompressorFrameListener) -> <init>
    63:67:void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$ConsumedBytesConverter -> io.netty.c.a.e.aj:
    io.netty.handler.codec.http2.Http2LocalFlowController flowController -> b
    io.netty.handler.codec.http2.DelegatingDecompressorFrameListener this$0 -> a
    288:290:void <init>(io.netty.handler.codec.http2.DelegatingDecompressorFrameListener,io.netty.handler.codec.http2.Http2LocalFlowController) -> <init>
    294:294:io.netty.handler.codec.http2.Http2LocalFlowController frameWriter(io.netty.handler.codec.http2.Http2FrameWriter) -> b
    299:300:void channelHandlerContext(io.netty.channel.ChannelHandlerContext) -> a
    304:305:void initialWindowSize(int) -> a
    309:309:int initialWindowSize() -> a
    314:314:int windowSize(io.netty.handler.codec.http2.Http2Stream) -> a
    319:320:void incrementWindowSize(io.netty.handler.codec.http2.Http2Stream,int) -> a
    325:326:void receiveFlowControlledFrame(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,int,boolean) -> a
    330:342:boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream,int) -> b
    348:348:int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream) -> b
io.netty.handler.codec.http2.DelegatingDecompressorFrameListener$Http2Decompressor -> io.netty.c.a.e.ak:
    io.netty.channel.embedded.EmbeddedChannel decompressor -> b
    int compressed -> c
    int decompressed -> d
    boolean $assertionsDisabled -> a
    365:367:void <init>(io.netty.channel.embedded.EmbeddedChannel) -> <init>
    373:373:io.netty.channel.embedded.EmbeddedChannel decompressor() -> a
    380:382:void incrementCompressedBytes(int) -> a
    388:390:void incrementDecompressedBytes(int) -> b
    401:420:int consumeBytes(int,int) -> a
    360:360:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackDecoder -> io.netty.c.a.e.al:
    io.netty.handler.codec.http2.Http2Exception DECODE_ULE_128_DECOMPRESSION_EXCEPTION -> b
    io.netty.handler.codec.http2.Http2Exception DECODE_ULE_128_TO_LONG_DECOMPRESSION_EXCEPTION -> c
    io.netty.handler.codec.http2.Http2Exception DECODE_ULE_128_TO_INT_DECOMPRESSION_EXCEPTION -> d
    io.netty.handler.codec.http2.Http2Exception DECODE_ILLEGAL_INDEX_VALUE -> e
    io.netty.handler.codec.http2.Http2Exception INDEX_HEADER_ILLEGAL_INDEX_VALUE -> f
    io.netty.handler.codec.http2.Http2Exception READ_NAME_ILLEGAL_INDEX_VALUE -> g
    io.netty.handler.codec.http2.Http2Exception INVALID_MAX_DYNAMIC_TABLE_SIZE -> h
    io.netty.handler.codec.http2.Http2Exception MAX_DYNAMIC_TABLE_SIZE_CHANGE_REQUIRED -> i
    io.netty.handler.codec.http2.HpackDynamicTable hpackDynamicTable -> j
    io.netty.handler.codec.http2.HpackHuffmanDecoder hpackHuffmanDecoder -> k
    long maxHeaderListSizeGoAway -> l
    long maxHeaderListSize -> m
    long maxDynamicTableSize -> n
    long encoderMaxDynamicTableSize -> o
    boolean maxDynamicTableSizeChangeRequired -> p
    boolean $assertionsDisabled -> a
    100:101:void <init>(long,int) -> <init>
    107:115:void <init>(long,int,int) -> <init>
    123:304:void decode(int,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2Headers) -> a
    311:322:void setMaxHeaderTableSize(long) -> a
    325:335:void setMaxHeaderListSize(long,long) -> a
    338:338:long getMaxHeaderListSize() -> a
    342:342:long getMaxHeaderListSizeGoAway() -> b
    350:350:long getMaxHeaderTableSize() -> c
    375:381:void setDynamicTableSize(long) -> b
    384:392:java.lang.CharSequence readName(int) -> a
    396:404:long indexHeader(int,int,io.netty.handler.codec.http2.Http2Headers,long) -> a
    409:424:long insertHeader(int,io.netty.handler.codec.http2.Http2Headers,java.lang.CharSequence,java.lang.CharSequence,io.netty.handler.codec.http2.HpackUtil$IndexType,long) -> a
    429:434:long addHeader(int,io.netty.handler.codec.http2.Http2Headers,java.lang.CharSequence,java.lang.CharSequence,long) -> a
    438:443:java.lang.CharSequence readStringLiteral(io.netty.buffer.ByteBuf,int,boolean) -> a
    447:447:java.lang.IllegalArgumentException notEnoughDataException(io.netty.buffer.ByteBuf) -> a
    456:467:int decodeULE128(io.netty.buffer.ByteBuf,int) -> a
    476:499:long decodeULE128(io.netty.buffer.ByteBuf,long) -> a
    52:70:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackDecoder$1 -> io.netty.c.a.e.am:
    int[] $SwitchMap$io$netty$handler$codec$http2$HpackUtil$IndexType -> a
    411:411:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackDynamicTable -> io.netty.c.a.e.an:
    io.netty.handler.codec.http2.HpackHeaderField[] hpackHeaderFields -> a
    int head -> b
    int tail -> c
    long size -> d
    long capacity -> e
    44:51:void <init>(long) -> <init>
    58:63:int length() -> a
    77:77:long capacity() -> b
    85:92:io.netty.handler.codec.http2.HpackHeaderField getEntry(int) -> a
    103:116:void add(io.netty.handler.codec.http2.HpackHeaderField) -> a
    122:131:io.netty.handler.codec.http2.HpackHeaderField remove() -> c
    138:147:void clear() -> d
    154:198:void setCapacity(long) -> a
io.netty.handler.codec.http2.HpackEncoder -> io.netty.c.a.e.ao:
    io.netty.handler.codec.http2.HpackEncoder$HeaderEntry[] headerFields -> b
    io.netty.handler.codec.http2.HpackEncoder$HeaderEntry head -> c
    io.netty.handler.codec.http2.HpackHuffmanEncoder hpackHuffmanEncoder -> d
    byte hashMask -> e
    boolean ignoreMaxHeaderListSize -> f
    long size -> g
    long maxHeaderTableSize -> h
    long maxHeaderListSize -> i
    boolean $assertionsDisabled -> a
    73:74:void <init>() -> <init>
    80:81:void <init>(boolean) -> <init>
    60:95:void <init>(boolean,int) -> <init>
    104:109:void encodeHeaders(int,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2Headers,io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> a
    114:127:void encodeHeadersEnforceMaxHeaderListSize(int,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2Headers,io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> b
    131:137:void encodeHeadersIgnoreMaxHeaderListSize(io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2Headers,io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector) -> a
    146:187:void encodeHeader(io.netty.buffer.ByteBuf,java.lang.CharSequence,java.lang.CharSequence,boolean,long) -> a
    193:204:void setMaxHeaderTableSize(io.netty.buffer.ByteBuf,long) -> a
    214:219:void setMaxHeaderListSize(long) -> a
    229:230:void encodeInteger(io.netty.buffer.ByteBuf,int,int,int) -> a
    236:248:void encodeInteger(io.netty.buffer.ByteBuf,int,int,long) -> a
    254:270:void encodeStringLiteral(io.netty.buffer.ByteBuf,java.lang.CharSequence) -> a
    277:295:void encodeLiteral(io.netty.buffer.ByteBuf,java.lang.CharSequence,java.lang.CharSequence,io.netty.handler.codec.http2.HpackUtil$IndexType,int) -> a
    298:305:int getNameIndex(java.lang.CharSequence) -> a
    313:320:void ensureCapacity(long) -> b
    326:326:int length() -> a
    352:363:io.netty.handler.codec.http2.HpackEncoder$HeaderEntry getEntry(java.lang.CharSequence,java.lang.CharSequence) -> a
    371:381:int getIndex(java.lang.CharSequence) -> b
    388:388:int getIndex(int) -> a
    398:415:void add(java.lang.CharSequence,java.lang.CharSequence,long) -> a
    421:444:io.netty.handler.codec.http2.HpackHeaderField remove() -> b
    451:454:void clear() -> c
    460:460:int index(int) -> b
    57:57:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackEncoder$1 -> io.netty.c.a.e.ap:
    int[] $SwitchMap$io$netty$handler$codec$http2$HpackUtil$IndexType -> a
    278:278:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackEncoder$HeaderEntry -> io.netty.c.a.e.aq:
    io.netty.handler.codec.http2.HpackEncoder$HeaderEntry before -> a
    io.netty.handler.codec.http2.HpackEncoder$HeaderEntry after -> b
    io.netty.handler.codec.http2.HpackEncoder$HeaderEntry next -> c
    int hash -> d
    int index -> e
    481:485:void <init>(int,java.lang.CharSequence,java.lang.CharSequence,int,io.netty.handler.codec.http2.HpackEncoder$HeaderEntry) -> <init>
    491:496:void remove() -> b
    502:506:void addBefore(io.netty.handler.codec.http2.HpackEncoder$HeaderEntry) -> b
    466:466:void access$000(io.netty.handler.codec.http2.HpackEncoder$HeaderEntry,io.netty.handler.codec.http2.HpackEncoder$HeaderEntry) -> a
    466:466:void access$100(io.netty.handler.codec.http2.HpackEncoder$HeaderEntry) -> a
io.netty.handler.codec.http2.HpackHeaderField -> io.netty.c.a.e.ar:
    java.lang.CharSequence name -> f
    java.lang.CharSequence value -> g
    44:44:long sizeOf(java.lang.CharSequence,java.lang.CharSequence) -> a
    51:54:void <init>(java.lang.CharSequence,java.lang.CharSequence) -> <init>
    57:57:int size() -> a
    63:63:int hashCode() -> hashCode
    68:76:boolean equals(java.lang.Object) -> equals
    81:81:java.lang.String toString() -> toString
io.netty.handler.codec.http2.HpackHuffmanDecoder -> io.netty.c.a.e.as:
    io.netty.handler.codec.http2.Http2Exception EOS_DECODED -> a
    io.netty.handler.codec.http2.Http2Exception INVALID_PADDING -> b
    io.netty.handler.codec.http2.HpackHuffmanDecoder$Node ROOT -> c
    io.netty.handler.codec.http2.HpackHuffmanDecoder$DecoderProcessor processor -> d
    54:56:void <init>(int) -> <init>
    66:69:io.netty.util.AsciiString decode(io.netty.buffer.ByteBuf,int) -> a
    106:110:io.netty.handler.codec.http2.HpackHuffmanDecoder$Node buildTree(int[],byte[]) -> a
    115:135:void insert(io.netty.handler.codec.http2.HpackHuffmanDecoder$Node,int,int,byte) -> a
    43:43:io.netty.handler.codec.http2.HpackHuffmanDecoder$Node access$200() -> a
    43:43:io.netty.handler.codec.http2.Http2Exception access$500() -> b
    43:43:io.netty.handler.codec.http2.Http2Exception access$600() -> c
    45:50:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackHuffmanDecoder$DecoderProcessor -> io.netty.c.a.e.at:
    int initialCapacity -> a
    byte[] bytes -> b
    int index -> o
    io.netty.handler.codec.http2.HpackHuffmanDecoder$Node node -> p
    int current -> q
    int currentBits -> r
    int symbolBits -> s
    146:148:void <init>(int) -> <init>
    151:157:void reset() -> a
    179:197:boolean process(byte) -> a
    205:229:io.netty.util.AsciiString end() -> b
    233:243:void append(int) -> a
io.netty.handler.codec.http2.HpackHuffmanDecoder$Node -> io.netty.c.a.e.au:
    int symbol -> b
    int bits -> c
    io.netty.handler.codec.http2.HpackHuffmanDecoder$Node[] children -> d
    boolean $assertionsDisabled -> a
    81:85:void <init>() -> <init>
    93:98:void <init>(int,int) -> <init>
    101:101:boolean isTerminal() -> a
    72:72:boolean access$000(io.netty.handler.codec.http2.HpackHuffmanDecoder$Node) -> a
    72:72:io.netty.handler.codec.http2.HpackHuffmanDecoder$Node[] access$100(io.netty.handler.codec.http2.HpackHuffmanDecoder$Node) -> b
    72:72:int access$300(io.netty.handler.codec.http2.HpackHuffmanDecoder$Node) -> c
    72:72:int access$400(io.netty.handler.codec.http2.HpackHuffmanDecoder$Node) -> d
    72:72:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackHuffmanEncoder -> io.netty.c.a.e.av:
    int[] codes -> a
    byte[] lengths -> b
    io.netty.handler.codec.http2.HpackHuffmanEncoder$EncodedLengthProcessor encodedLengthProcessor -> c
    io.netty.handler.codec.http2.HpackHuffmanEncoder$EncodeProcessor encodeProcessor -> d
    48:49:void <init>() -> <init>
    44:60:void <init>(int[],byte[]) -> <init>
    69:83:void encode(io.netty.buffer.ByteBuf,java.lang.CharSequence) -> a
    86:109:void encodeSlowPath(io.netty.buffer.ByteBuf,java.lang.CharSequence) -> b
    118:129:int getEncodedLength(java.lang.CharSequence) -> a
    134:138:int getEncodedLengthSlowPath(java.lang.CharSequence) -> b
    40:40:byte[] access$200(io.netty.handler.codec.http2.HpackHuffmanEncoder) -> a
    40:40:int[] access$300(io.netty.handler.codec.http2.HpackHuffmanEncoder) -> b
io.netty.handler.codec.http2.HpackHuffmanEncoder$1 -> io.netty.c.a.e.aw:
io.netty.handler.codec.http2.HpackHuffmanEncoder$EncodeProcessor -> io.netty.c.a.e.ax:
    io.netty.buffer.ByteBuf out -> a
    long current -> o
    int n -> p
    io.netty.handler.codec.http2.HpackHuffmanEncoder this$0 -> b
    141:141:void <init>(io.netty.handler.codec.http2.HpackHuffmanEncoder) -> <init>
    148:159:boolean process(byte) -> a
    164:174:void end() -> a
    141:141:void <init>(io.netty.handler.codec.http2.HpackHuffmanEncoder,io.netty.handler.codec.http2.HpackHuffmanEncoder$1) -> <init>
io.netty.handler.codec.http2.HpackHuffmanEncoder$EncodedLengthProcessor -> io.netty.c.a.e.ay:
    long len -> b
    io.netty.handler.codec.http2.HpackHuffmanEncoder this$0 -> a
    177:177:void <init>(io.netty.handler.codec.http2.HpackHuffmanEncoder) -> <init>
    182:183:boolean process(byte) -> a
    187:188:void reset() -> a
    191:191:int length() -> b
    177:177:void <init>(io.netty.handler.codec.http2.HpackHuffmanEncoder,io.netty.handler.codec.http2.HpackHuffmanEncoder$1) -> <init>
io.netty.handler.codec.http2.HpackStaticTable -> io.netty.c.a.e.az:
    java.util.List STATIC_TABLE -> b
    io.netty.handler.codec.http2.CharSequenceMap STATIC_INDEX_BY_NAME -> c
    int length -> a
    111:111:io.netty.handler.codec.http2.HpackHeaderField newEmptyHeaderField(java.lang.String) -> a
    115:115:io.netty.handler.codec.http2.HpackHeaderField newHeaderField(java.lang.String,java.lang.String) -> a
    129:129:io.netty.handler.codec.http2.HpackHeaderField getEntry(int) -> a
    137:141:int getIndex(java.lang.CharSequence) -> a
    149:166:int getIndex(java.lang.CharSequence,java.lang.CharSequence) -> a
    171:182:io.netty.handler.codec.http2.CharSequenceMap createMap() -> a
    46:123:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackUtil -> io.netty.c.a.e.aA:
    int[] HUFFMAN_CODES -> a
    byte[] HUFFMAN_CODE_LENGTHS -> b
    55:65:int equalsConstantTime(java.lang.CharSequence,java.lang.CharSequence) -> a
    77:337:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.HpackUtil$IndexType -> io.netty.c.a.e.aB:
    io.netty.handler.codec.http2.HpackUtil$IndexType INCREMENTAL -> a
    io.netty.handler.codec.http2.HpackUtil$IndexType NONE -> b
    io.netty.handler.codec.http2.HpackUtil$IndexType NEVER -> c
    io.netty.handler.codec.http2.HpackUtil$IndexType[] $VALUES -> d
    69:69:io.netty.handler.codec.http2.HpackUtil$IndexType[] values() -> values
    69:69:io.netty.handler.codec.http2.HpackUtil$IndexType valueOf(java.lang.String) -> valueOf
    69:69:void <init>(java.lang.String,int) -> <init>
    69:72:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2CodecUtil -> io.netty.c.a.e.aC:
    java.lang.CharSequence HTTP_UPGRADE_SETTINGS_HEADER -> a
    java.lang.CharSequence HTTP_UPGRADE_PROTOCOL_NAME -> b
    java.lang.CharSequence TLS_UPGRADE_PROTOCOL_NAME -> c
    io.netty.buffer.ByteBuf CONNECTION_PREFACE -> e
    io.netty.buffer.ByteBuf EMPTY_PING -> f
    long DEFAULT_GRACEFUL_SHUTDOWN_TIMEOUT_MILLIS -> d
    134:134:long calculateMaxHeaderListSizeGoAway(long) -> a
    161:161:boolean isMaxFrameSizeValid(int) -> a
    169:169:io.netty.buffer.ByteBuf connectionPrefaceBuf() -> a
    185:191:io.netty.handler.codec.http2.Http2Exception getEmbeddedHttp2Exception(java.lang.Throwable) -> a
    199:203:io.netty.buffer.ByteBuf toByteBuf(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> a
    210:210:int readUnsignedInt(io.netty.buffer.ByteBuf) -> a
    226:226:int streamableBytes(io.netty.handler.codec.http2.StreamByteDistributor$StreamState) -> a
    239:240:void headerListSizeExceeded(int,long,boolean) -> a
    251:252:void headerListSizeExceeded(long) -> b
    257:261:void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int) -> a
    398:402:void verifyPadding(int) -> b
    403:403:void <init>() -> <init>
    48:137:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator -> io.netty.c.a.e.aD:
    io.netty.channel.ChannelPromise promise -> b
    int expectedCount -> c
    int doneCount -> d
    java.lang.Throwable lastFailure -> e
    boolean doneAllocating -> f
    boolean $assertionsDisabled -> a
    275:278:void <init>(io.netty.channel.ChannelPromise,io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor) -> <init>
    286:288:io.netty.channel.ChannelPromise newPromise() -> a
    297:303:io.netty.channel.ChannelPromise doneAllocatingPromises() -> b
    308:318:boolean tryFailure(java.lang.Throwable) -> tryFailure
    329:336:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    341:347:io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    352:361:boolean trySuccess(java.lang.Void) -> a
    365:365:boolean allowFailure() -> c
    369:369:boolean awaitingPromises() -> d
    373:373:boolean allPromisesDone() -> e
    377:382:io.netty.channel.ChannelPromise setPromise() -> f
    387:392:boolean tryPromise() -> g
    267:267:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    267:267:boolean trySuccess(java.lang.Object) -> trySuccess
    267:267:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    267:267:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2Connection -> io.netty.c.a.e.aE:
    io.netty.util.concurrent.Future close(io.netty.util.concurrent.Promise) -> a
    io.netty.handler.codec.http2.Http2Connection$PropertyKey newKey() -> i
    void addListener(io.netty.handler.codec.http2.Http2Connection$Listener) -> a
    io.netty.handler.codec.http2.Http2Stream stream(int) -> a
    boolean streamMayHaveExisted(int) -> b
    io.netty.handler.codec.http2.Http2Stream connectionStream() -> c
    int numActiveStreams() -> d
    io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor) -> a
    boolean isServer() -> b
    io.netty.handler.codec.http2.Http2Connection$Endpoint local() -> e
    io.netty.handler.codec.http2.Http2Connection$Endpoint remote() -> f
    boolean goAwayReceived() -> g
    void goAwayReceived(int,long,io.netty.buffer.ByteBuf) -> a
    boolean goAwaySent() -> h
    void goAwaySent(int,long,io.netty.buffer.ByteBuf) -> b
io.netty.handler.codec.http2.Http2Connection$Endpoint -> io.netty.c.a.e.aF:
    int incrementAndGetNextStreamId() -> a
    boolean isValidStreamId(int) -> a
    boolean mayHaveCreatedStream(int) -> b
    boolean created(io.netty.handler.codec.http2.Http2Stream) -> a
    io.netty.handler.codec.http2.Http2Stream createStream(int,boolean) -> b
    io.netty.handler.codec.http2.Http2Stream reservePushStream(int,io.netty.handler.codec.http2.Http2Stream) -> b
    void allowPushTo(boolean) -> a
    boolean allowPushTo() -> d
    int numActiveStreams() -> e
    int maxActiveStreams() -> f
    void maxActiveStreams(int) -> c
    int lastStreamCreated() -> g
    int lastStreamKnownByPeer() -> h
    io.netty.handler.codec.http2.Http2FlowController flowController() -> i
    void flowController(io.netty.handler.codec.http2.Http2FlowController) -> a
io.netty.handler.codec.http2.Http2Connection$Listener -> io.netty.c.a.e.aG:
    void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    void onStreamHalfClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamHalfClosed
    void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
    void onGoAwaySent(int,long,io.netty.buffer.ByteBuf) -> onGoAwaySent
    void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
io.netty.handler.codec.http2.Http2Connection$PropertyKey -> io.netty.c.a.e.aH:
io.netty.handler.codec.http2.Http2ConnectionAdapter -> io.netty.c.a.e.aI:
    24:24:void <init>() -> <init>
    27:27:void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    31:31:void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    35:35:void onStreamHalfClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamHalfClosed
    39:39:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    43:43:void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
    47:47:void onGoAwaySent(int,long,io.netty.buffer.ByteBuf) -> onGoAwaySent
    51:51:void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
io.netty.handler.codec.http2.Http2ConnectionDecoder -> io.netty.c.a.e.aJ:
    void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager) -> a
    io.netty.handler.codec.http2.Http2Connection connection() -> a
    io.netty.handler.codec.http2.Http2LocalFlowController flowController() -> b
    void frameListener(io.netty.handler.codec.http2.Http2FrameListener) -> a
    io.netty.handler.codec.http2.Http2FrameListener frameListener() -> c
    void decodeFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> a
    io.netty.handler.codec.http2.Http2Settings localSettings() -> e
    boolean prefaceReceived() -> d
    void close() -> close
io.netty.handler.codec.http2.Http2ConnectionEncoder -> io.netty.c.a.e.aK:
    void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager) -> a
    io.netty.handler.codec.http2.Http2Connection connection() -> a
    io.netty.handler.codec.http2.Http2RemoteFlowController flowController() -> b
    io.netty.handler.codec.http2.Http2FrameWriter frameWriter() -> c
    io.netty.handler.codec.http2.Http2Settings pollSentSettings() -> d
    void remoteSettings(io.netty.handler.codec.http2.Http2Settings) -> a
    io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
io.netty.handler.codec.http2.Http2ConnectionHandler -> io.netty.c.a.e.aL:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.handler.codec.http2.Http2Headers HEADERS_TOO_LARGE_HEADERS -> HEADERS_TOO_LARGE_HEADERS
    io.netty.buffer.ByteBuf HTTP_1_X_BUF -> HTTP_1_X_BUF
    io.netty.handler.codec.http2.Http2ConnectionDecoder decoder -> decoder
    io.netty.handler.codec.http2.Http2ConnectionEncoder encoder -> encoder
    io.netty.handler.codec.http2.Http2Settings initialSettings -> initialSettings
    io.netty.channel.ChannelFutureListener closeListener -> closeListener
    io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder byteDecoder -> byteDecoder
    long gracefulShutdownTimeoutMillis -> gracefulShutdownTimeoutMillis
    84:91:void <init>(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings) -> <init>
    94:110:void <init>(boolean,io.netty.handler.codec.http2.Http2FrameWriter,io.netty.handler.codec.http2.Http2FrameLogger,io.netty.handler.codec.http2.Http2Settings) -> <init>
    118:118:long gracefulShutdownTimeoutMillis() -> gracefulShutdownTimeoutMillis
    128:133:void gracefulShutdownTimeoutMillis(long) -> gracefulShutdownTimeoutMillis
    136:136:io.netty.handler.codec.http2.Http2Connection connection() -> connection
    140:140:io.netty.handler.codec.http2.Http2ConnectionDecoder decoder() -> decoder
    144:144:io.netty.handler.codec.http2.Http2ConnectionEncoder encoder() -> encoder
    148:148:boolean prefaceSent() -> prefaceSent
    156:170:void onHttpClientUpgrade() -> onHttpClientUpgrade
    177:194:void onHttpServerUpgrade(io.netty.handler.codec.http2.Http2Settings) -> onHttpServerUpgrade
    200:207:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    400:405:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    409:413:void handlerRemoved0(io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    417:422:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    427:432:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    439:446:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    450:451:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    455:456:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    461:462:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    466:467:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    471:486:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    489:501:void doGracefulShutdown(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise) -> doGracefulShutdown
    505:506:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    510:511:void read(io.netty.channel.ChannelHandlerContext) -> read
    515:516:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    524:528:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    531:532:void channelReadComplete0(io.netty.channel.ChannelHandlerContext) -> channelReadComplete0
    539:545:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    556:565:void closeStreamLocal(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStreamLocal
    576:585:void closeStreamRemote(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStreamRemote
    589:601:void closeStream(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStream
    608:620:void onError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> onError
    628:628:boolean isGracefulShutdownComplete() -> isGracefulShutdownComplete
    641:655:void onConnectionError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,io.netty.handler.codec.http2.Http2Exception) -> onConnectionError
    667:705:void onStreamError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,io.netty.handler.codec.http2.Http2Exception$StreamException) -> onStreamError
    715:716:void handleServerHeaderDecodeSizeError(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream) -> handleServerHeaderDecodeSizeError
    719:719:io.netty.handler.codec.http2.Http2FrameWriter frameWriter() -> frameWriter
    729:740:io.netty.channel.ChannelFuture resetUnknownStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> resetUnknownStream
    746:751:io.netty.channel.ChannelFuture resetStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> resetStream
    756:786:io.netty.channel.ChannelFuture resetStream(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,long,io.netty.channel.ChannelPromise) -> resetStream
    793:831:io.netty.channel.ChannelFuture goAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> goAway
    842:853:void checkCloseConnection(io.netty.channel.ChannelFuture) -> checkCloseConnection
    860:862:io.netty.channel.ChannelFuture goAway(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Exception) -> goAway
    866:872:void processRstStreamWriteResult(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> processRstStreamWriteResult
    875:878:void closeConnectionOnError(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelFuture) -> closeConnectionOnError
    884:884:io.netty.buffer.ByteBuf clientPrefaceString(io.netty.handler.codec.http2.Http2Connection) -> clientPrefaceString
    890:911:void processGoAwayWriteResult(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelFuture) -> processGoAwayWriteResult
    66:66:io.netty.handler.codec.http2.Http2ConnectionEncoder access$100(io.netty.handler.codec.http2.Http2ConnectionHandler) -> access$100
    66:66:io.netty.buffer.ByteBuf access$200(io.netty.handler.codec.http2.Http2Connection) -> access$200
    66:66:io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder access$302(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder) -> access$302
    66:66:io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder access$300(io.netty.handler.codec.http2.Http2ConnectionHandler) -> access$300
    66:66:io.netty.buffer.ByteBuf access$500() -> access$500
    66:66:io.netty.handler.codec.http2.Http2Settings access$600(io.netty.handler.codec.http2.Http2ConnectionHandler) -> access$600
    66:66:io.netty.handler.codec.http2.Http2ConnectionDecoder access$700(io.netty.handler.codec.http2.Http2ConnectionHandler) -> access$700
    66:66:void access$800(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelFuture) -> access$800
    66:66:void access$900(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelFuture) -> access$900
    66:66:void access$1000(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> access$1000
    66:66:void access$1100(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelFuture) -> access$1100
    69:74:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2ConnectionHandler$1 -> io.netty.c.a.e.aM:
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> a
    594:594:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler) -> <init>
    597:598:void operationComplete(io.netty.channel.ChannelFuture) -> a
    594:594:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.Http2ConnectionHandler$2 -> io.netty.c.a.e.aN:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> b
    733:733:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    736:737:void operationComplete(io.netty.channel.ChannelFuture) -> a
    733:733:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.Http2ConnectionHandler$3 -> io.netty.c.a.e.aO:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.handler.codec.http2.Http2Stream val$stream -> b
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> c
    778:778:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Stream) -> <init>
    781:782:void operationComplete(io.netty.channel.ChannelFuture) -> a
    778:778:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.Http2ConnectionHandler$4 -> io.netty.c.a.e.aP:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    int val$lastStreamId -> b
    long val$errorCode -> c
    io.netty.buffer.ByteBuf val$debugData -> d
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> e
    820:820:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> <init>
    823:824:void operationComplete(io.netty.channel.ChannelFuture) -> a
    820:820:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.Http2ConnectionHandler$5 -> io.netty.c.a.e.aQ:
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State -> a
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Exception$ShutdownHint -> b
    556:647:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder -> io.netty.c.a.e.aR:
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> a
    209:209:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler) -> <init>
    void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> a
    211:211:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> a
    212:212:void channelActive(io.netty.channel.ChannelHandlerContext) -> b
    216:222:void channelInactive(io.netty.channel.ChannelHandlerContext) -> c
    228:228:boolean prefaceSent() -> a
    209:209:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.handler.codec.http2.Http2ConnectionHandler$1) -> <init>
io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener -> io.netty.c.a.e.aS:
    io.netty.channel.ChannelHandlerContext ctx -> a
    io.netty.channel.ChannelPromise promise -> b
    io.netty.util.concurrent.ScheduledFuture timeoutTask -> c
    921:925:void <init>(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    928:937:void <init>(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise,long,java.util.concurrent.TimeUnit) -> <init>
    941:945:void operationComplete(io.netty.channel.ChannelFuture) -> a
    916:916:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener$1 -> io.netty.c.a.e.aT:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.channel.ChannelPromise val$promise -> b
    io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener this$0 -> c
    931:931:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    934:935:void run() -> run
io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder -> io.netty.c.a.e.aU:
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> b
    386:386:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler) -> <init>
    390:394:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> a
    386:386:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.handler.codec.http2.Http2ConnectionHandler$1) -> <init>
io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder -> io.netty.c.a.e.aV:
    io.netty.buffer.ByteBuf clientPrefaceString -> c
    boolean prefaceSent -> d
    io.netty.handler.codec.http2.Http2ConnectionHandler this$0 -> b
    236:241:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    245:245:boolean prefaceSent() -> a
    251:259:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> a
    264:265:void channelActive(io.netty.channel.ChannelHandlerContext) -> b
    269:271:void channelInactive(io.netty.channel.ChannelHandlerContext) -> c
    278:279:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> a
    285:289:void cleanup() -> b
    298:330:boolean readClientPrefaceString(io.netty.buffer.ByteBuf) -> a
    342:354:boolean verifyFirstFrameIsSettings(io.netty.buffer.ByteBuf) -> b
    361:383:void sendPreface(io.netty.channel.ChannelHandlerContext) -> d
io.netty.handler.codec.http2.Http2ConnectionPrefaceAndSettingsFrameWrittenEvent -> io.netty.c.a.e.aW:
    io.netty.handler.codec.http2.Http2ConnectionPrefaceAndSettingsFrameWrittenEvent INSTANCE -> a
    29:30:void <init>() -> <init>
    26:26:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2DataWriter -> io.netty.c.a.e.aX:
    io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> a
io.netty.handler.codec.http2.Http2Error -> io.netty.c.a.e.aY:
    io.netty.handler.codec.http2.Http2Error NO_ERROR -> a
    io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR -> b
    io.netty.handler.codec.http2.Http2Error INTERNAL_ERROR -> c
    io.netty.handler.codec.http2.Http2Error FLOW_CONTROL_ERROR -> d
    io.netty.handler.codec.http2.Http2Error SETTINGS_TIMEOUT -> e
    io.netty.handler.codec.http2.Http2Error STREAM_CLOSED -> f
    io.netty.handler.codec.http2.Http2Error FRAME_SIZE_ERROR -> g
    io.netty.handler.codec.http2.Http2Error REFUSED_STREAM -> h
    io.netty.handler.codec.http2.Http2Error CANCEL -> i
    io.netty.handler.codec.http2.Http2Error COMPRESSION_ERROR -> j
    io.netty.handler.codec.http2.Http2Error CONNECT_ERROR -> k
    io.netty.handler.codec.http2.Http2Error ENHANCE_YOUR_CALM -> l
    io.netty.handler.codec.http2.Http2Error INADEQUATE_SECURITY -> m
    io.netty.handler.codec.http2.Http2Error HTTP_1_1_REQUIRED -> n
    long code -> o
    io.netty.handler.codec.http2.Http2Error[] INT_TO_ENUM_MAP -> p
    io.netty.handler.codec.http2.Http2Error[] $VALUES -> q
    23:23:io.netty.handler.codec.http2.Http2Error[] values() -> values
    23:23:io.netty.handler.codec.http2.Http2Error valueOf(java.lang.String) -> valueOf
    51:53:void <init>(java.lang.String,int,long) -> <init>
    59:59:long code() -> a
    23:49:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2Exception -> io.netty.c.a.e.aZ:
    io.netty.handler.codec.http2.Http2Error error -> a
    io.netty.handler.codec.http2.Http2Exception$ShutdownHint shutdownHint -> b
    37:38:void <init>(io.netty.handler.codec.http2.Http2Error) -> <init>
    40:43:void <init>(io.netty.handler.codec.http2.Http2Error,io.netty.handler.codec.http2.Http2Exception$ShutdownHint) -> <init>
    46:47:void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String) -> <init>
    50:53:void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String,io.netty.handler.codec.http2.Http2Exception$ShutdownHint) -> <init>
    56:57:void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Throwable) -> <init>
    60:63:void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Throwable,io.netty.handler.codec.http2.Http2Exception$ShutdownHint) -> <init>
    66:66:io.netty.handler.codec.http2.Http2Error error() -> a
    73:73:io.netty.handler.codec.http2.Http2Exception$ShutdownHint shutdownHint() -> b
    85:85:io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[]) -> a
    99:99:io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    111:111:io.netty.handler.codec.http2.Http2Exception closedStreamError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[]) -> b
    127:129:io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[]) -> a
    147:149:io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    169:171:io.netty.handler.codec.http2.Http2Exception headerListSizeError(int,io.netty.handler.codec.http2.Http2Error,boolean,java.lang.String,java.lang.Object[]) -> a
    181:181:boolean isStreamError(io.netty.handler.codec.http2.Http2Exception) -> a
io.netty.handler.codec.http2.Http2Exception$ClosedStreamCreationException -> io.netty.c.a.e.ba:
    224:225:void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String) -> <init>
io.netty.handler.codec.http2.Http2Exception$CompositeStreamException -> io.netty.c.a.e.bb:
    java.util.List exceptions -> a
    277:279:void <init>(io.netty.handler.codec.http2.Http2Error,int) -> <init>
    282:283:void add(io.netty.handler.codec.http2.Http2Exception$StreamException) -> a
    287:287:java.util.Iterator iterator() -> iterator
io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException -> io.netty.c.a.e.bc:
    boolean decode -> a
    260:262:void <init>(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,boolean) -> <init>
    265:265:boolean duringDecode() -> c
io.netty.handler.codec.http2.Http2Exception$ShutdownHint -> io.netty.c.a.e.bd:
    io.netty.handler.codec.http2.Http2Exception$ShutdownHint NO_SHUTDOWN -> a
    io.netty.handler.codec.http2.Http2Exception$ShutdownHint GRACEFUL_SHUTDOWN -> b
    io.netty.handler.codec.http2.Http2Exception$ShutdownHint HARD_SHUTDOWN -> c
    io.netty.handler.codec.http2.Http2Exception$ShutdownHint[] $VALUES -> d
    197:197:io.netty.handler.codec.http2.Http2Exception$ShutdownHint[] values() -> values
    197:197:io.netty.handler.codec.http2.Http2Exception$ShutdownHint valueOf(java.lang.String) -> valueOf
    197:197:void <init>(java.lang.String,int) -> <init>
    197:210:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2Exception$StreamException -> io.netty.c.a.e.be:
    int streamId -> a
    240:242:void <init>(int,io.netty.handler.codec.http2.Http2Error,java.lang.String) -> <init>
    245:247:void <init>(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Throwable) -> <init>
    250:250:int streamId() -> d
io.netty.handler.codec.http2.Http2Flags -> io.netty.c.a.e.bf:
    short value -> a
    33:34:void <init>() -> <init>
    36:38:void <init>(short) -> <init>
    44:44:short value() -> a
    52:52:boolean endOfStream() -> b
    60:60:boolean endOfHeaders() -> c
    68:68:boolean priorityPresent() -> d
    76:76:boolean ack() -> e
    84:84:boolean paddingPresent() -> f
    92:92:int getNumPriorityBytes() -> g
    100:100:int getPaddingPresenceFieldLength() -> h
    107:107:io.netty.handler.codec.http2.Http2Flags endOfStream(boolean) -> a
    114:114:io.netty.handler.codec.http2.Http2Flags endOfHeaders(boolean) -> b
    121:121:io.netty.handler.codec.http2.Http2Flags priorityPresent(boolean) -> c
    128:128:io.netty.handler.codec.http2.Http2Flags paddingPresent(boolean) -> d
    135:135:io.netty.handler.codec.http2.Http2Flags ack(boolean) -> e
    145:150:io.netty.handler.codec.http2.Http2Flags setFlag(boolean,short) -> a
    159:159:boolean isFlagSet(short) -> a
    164:167:int hashCode() -> hashCode
    172:182:boolean equals(java.lang.Object) -> equals
    187:205:java.lang.String toString() -> toString
io.netty.handler.codec.http2.Http2FlowController -> io.netty.c.a.e.bg:
    void channelHandlerContext(io.netty.channel.ChannelHandlerContext) -> a
    void initialWindowSize(int) -> a
    int initialWindowSize() -> a
    int windowSize(io.netty.handler.codec.http2.Http2Stream) -> a
    void incrementWindowSize(io.netty.handler.codec.http2.Http2Stream,int) -> a
io.netty.handler.codec.http2.Http2FrameListener -> io.netty.c.a.e.bh:
    int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
io.netty.handler.codec.http2.Http2FrameListenerDecorator -> io.netty.c.a.e.bi:
    io.netty.handler.codec.http2.Http2FrameListener listener -> a
    29:31:void <init>(io.netty.handler.codec.http2.Http2FrameListener) -> <init>
    36:36:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    42:43:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    48:49:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    54:55:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    59:60:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    64:65:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    69:70:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    74:75:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    79:80:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    85:86:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    91:92:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    97:98:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    103:104:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
io.netty.handler.codec.http2.Http2FrameLogger -> io.netty.c.a.e.bj:
    io.netty.util.internal.logging.InternalLogger logger -> a
    io.netty.util.internal.logging.InternalLogLevel level -> b
    47:48:void <init>(io.netty.handler.logging.LogLevel) -> <init>
    58:61:void <init>(io.netty.util.internal.logging.InternalLogLevel,io.netty.util.internal.logging.InternalLogger) -> <init>
    65:67:void logData(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> a
    71:73:void logHeaders(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> a
    77:80:void logHeaders(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> a
    84:86:void logPriority(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> a
    89:91:void logRstStream(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,long) -> a
    94:95:void logSettingsAck(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext) -> a
    98:99:void logSettings(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> a
    102:104:void logPing(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> a
    107:109:void logPingAck(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> b
    113:115:void logPushPromise(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> a
    119:121:void logGoAway(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> a
    125:127:void logWindowsUpdate(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,int,int) -> a
    131:133:void logUnknownFrame(io.netty.handler.codec.http2.Http2FrameLogger$Direction,io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> a
    136:147:java.lang.String toString(io.netty.buffer.ByteBuf) -> a
io.netty.handler.codec.http2.Http2FrameLogger$Direction -> io.netty.c.a.e.bk:
    io.netty.handler.codec.http2.Http2FrameLogger$Direction INBOUND -> a
    io.netty.handler.codec.http2.Http2FrameLogger$Direction OUTBOUND -> b
    io.netty.handler.codec.http2.Http2FrameLogger$Direction[] $VALUES -> c
    37:37:io.netty.handler.codec.http2.Http2FrameLogger$Direction[] values() -> values
    37:37:io.netty.handler.codec.http2.Http2FrameLogger$Direction valueOf(java.lang.String) -> valueOf
    37:37:void <init>(java.lang.String,int) -> <init>
    37:39:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2FrameReader -> io.netty.c.a.e.bl:
    void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> a
    io.netty.handler.codec.http2.Http2FrameReader$Configuration configuration() -> b
    void close() -> close
io.netty.handler.codec.http2.Http2FrameReader$Configuration -> io.netty.c.a.e.bm:
    io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration headersConfiguration() -> a
    io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy() -> c
io.netty.handler.codec.http2.Http2FrameSizePolicy -> io.netty.c.a.e.bn:
    void maxFrameSize(int) -> a
    int maxFrameSize() -> d
io.netty.handler.codec.http2.Http2FrameWriter -> io.netty.c.a.e.bo:
    io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> a
    io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> a
    io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> a
    io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> a
    io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> a
    io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    io.netty.channel.ChannelFuture writePushPromise(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int,io.netty.channel.ChannelPromise) -> a
    io.netty.channel.ChannelFuture writeGoAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    io.netty.channel.ChannelFuture writeWindowUpdate(io.netty.channel.ChannelHandlerContext,int,int,io.netty.channel.ChannelPromise) -> a
    io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    io.netty.handler.codec.http2.Http2FrameWriter$Configuration configuration() -> e
    void close() -> close
io.netty.handler.codec.http2.Http2FrameWriter$Configuration -> io.netty.c.a.e.bp:
    io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration headersConfiguration() -> a
    io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy() -> b
io.netty.handler.codec.http2.Http2Headers -> io.netty.c.a.e.bq:
    java.util.Iterator iterator() -> iterator
    io.netty.handler.codec.http2.Http2Headers method(java.lang.CharSequence) -> a
    io.netty.handler.codec.http2.Http2Headers scheme(java.lang.CharSequence) -> b
    io.netty.handler.codec.http2.Http2Headers authority(java.lang.CharSequence) -> c
    io.netty.handler.codec.http2.Http2Headers path(java.lang.CharSequence) -> d
    io.netty.handler.codec.http2.Http2Headers status(java.lang.CharSequence) -> e
    java.lang.CharSequence method() -> g
    java.lang.CharSequence scheme() -> h
    java.lang.CharSequence authority() -> i
    java.lang.CharSequence path() -> j
    java.lang.CharSequence status() -> k
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName -> io.netty.c.a.e.br:
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName METHOD -> a
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName SCHEME -> b
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName AUTHORITY -> c
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName PATH -> d
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName STATUS -> e
    io.netty.util.AsciiString value -> f
    io.netty.handler.codec.http2.CharSequenceMap PSEUDO_HEADERS -> g
    io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] $VALUES -> h
    34:34:io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName[] values() -> values
    34:34:io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName valueOf(java.lang.String) -> valueOf
    68:70:void <init>(java.lang.String,int,java.lang.String) -> <init>
    74:74:io.netty.util.AsciiString value() -> a
    34:66:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2HeadersDecoder -> io.netty.c.a.e.bs:
    io.netty.handler.codec.http2.Http2Headers decodeHeaders(int,io.netty.buffer.ByteBuf) -> a
    io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration configuration() -> d
io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration -> io.netty.c.a.e.bt:
    void maxHeaderTableSize(long) -> a
    long maxHeaderTableSize() -> a
    void maxHeaderListSize(long,long) -> a
    long maxHeaderListSize() -> b
    long maxHeaderListSizeGoAway() -> c
io.netty.handler.codec.http2.Http2HeadersEncoder -> io.netty.c.a.e.bu:
    io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector NEVER_SENSITIVE -> a
    io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector ALWAYS_SENSITIVE -> b
    void encodeHeaders(int,io.netty.handler.codec.http2.Http2Headers,io.netty.buffer.ByteBuf) -> a
    io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration configuration() -> a
    93:103:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2HeadersEncoder$1 -> io.netty.c.a.e.bv:
    93:93:void <init>() -> <init>
    96:96:boolean isSensitive(java.lang.CharSequence,java.lang.CharSequence) -> a
io.netty.handler.codec.http2.Http2HeadersEncoder$2 -> io.netty.c.a.e.bw:
    103:103:void <init>() -> <init>
    106:106:boolean isSensitive(java.lang.CharSequence,java.lang.CharSequence) -> a
io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration -> io.netty.c.a.e.bx:
    void maxHeaderTableSize(long) -> a
    void maxHeaderListSize(long) -> b
io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector -> io.netty.c.a.e.by:
    boolean isSensitive(java.lang.CharSequence,java.lang.CharSequence) -> a
io.netty.handler.codec.http2.Http2InboundFrameLogger -> io.netty.c.a.e.bz:
    io.netty.handler.codec.http2.Http2FrameReader reader -> a
    io.netty.handler.codec.http2.Http2FrameLogger logger -> b
    33:36:void <init>(io.netty.handler.codec.http2.Http2FrameReader,io.netty.handler.codec.http2.Http2FrameLogger) -> <init>
    41:136:void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener) -> a
    140:141:void close() -> close
    145:145:io.netty.handler.codec.http2.Http2FrameReader$Configuration configuration() -> b
    29:29:io.netty.handler.codec.http2.Http2FrameLogger access$000(io.netty.handler.codec.http2.Http2InboundFrameLogger) -> a
io.netty.handler.codec.http2.Http2InboundFrameLogger$1 -> io.netty.c.a.e.bA:
    io.netty.handler.codec.http2.Http2FrameListener val$listener -> a
    io.netty.handler.codec.http2.Http2InboundFrameLogger this$0 -> b
    41:41:void <init>(io.netty.handler.codec.http2.Http2InboundFrameLogger,io.netty.handler.codec.http2.Http2FrameListener) -> <init>
    47:48:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    55:57:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    63:67:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    72:74:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    79:81:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    85:87:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    92:94:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    98:100:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    104:106:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    111:113:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    118:120:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    125:127:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    132:134:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
io.netty.handler.codec.http2.Http2LifecycleManager -> io.netty.c.a.e.bB:
    void closeStreamLocal(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStreamLocal
    void closeStreamRemote(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStreamRemote
    void closeStream(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture) -> closeStream
    io.netty.channel.ChannelFuture resetStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> resetStream
    io.netty.channel.ChannelFuture goAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> goAway
    void onError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> onError
io.netty.handler.codec.http2.Http2LocalFlowController -> io.netty.c.a.e.bC:
    io.netty.handler.codec.http2.Http2LocalFlowController frameWriter(io.netty.handler.codec.http2.Http2FrameWriter) -> b
    void receiveFlowControlledFrame(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,int,boolean) -> a
    boolean consumeBytes(io.netty.handler.codec.http2.Http2Stream,int) -> b
    int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream) -> b
io.netty.handler.codec.http2.Http2NoMoreStreamIdsException -> io.netty.c.a.e.bD:
    30:31:void <init>() -> <init>
io.netty.handler.codec.http2.Http2OutboundFrameLogger -> io.netty.c.a.e.bE:
    io.netty.handler.codec.http2.Http2FrameWriter writer -> a
    io.netty.handler.codec.http2.Http2FrameLogger logger -> b
    35:38:void <init>(io.netty.handler.codec.http2.Http2FrameWriter,io.netty.handler.codec.http2.Http2FrameLogger) -> <init>
    43:44:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> a
    50:51:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> a
    58:60:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> a
    74:75:io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> a
    81:82:io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> a
    87:88:io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> a
    94:99:io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext,boolean,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    105:106:io.netty.channel.ChannelFuture writePushPromise(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int,io.netty.channel.ChannelPromise) -> a
    112:113:io.netty.channel.ChannelFuture writeGoAway(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    119:120:io.netty.channel.ChannelFuture writeWindowUpdate(io.netty.channel.ChannelHandlerContext,int,int,io.netty.channel.ChannelPromise) -> a
    126:127:io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> a
    132:133:void close() -> close
    137:137:io.netty.handler.codec.http2.Http2FrameWriter$Configuration configuration() -> e
io.netty.handler.codec.http2.Http2PromisedRequestVerifier -> io.netty.c.a.e.bF:
    io.netty.handler.codec.http2.Http2PromisedRequestVerifier ALWAYS_VERIFY -> a
    boolean isAuthoritative(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Headers) -> a
    boolean isCacheable(io.netty.handler.codec.http2.Http2Headers) -> a
    boolean isSafe(io.netty.handler.codec.http2.Http2Headers) -> b
    58:58:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2PromisedRequestVerifier$1 -> io.netty.c.a.e.bG:
    58:58:void <init>() -> <init>
    61:61:boolean isAuthoritative(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Headers) -> a
    66:66:boolean isCacheable(io.netty.handler.codec.http2.Http2Headers) -> a
    71:71:boolean isSafe(io.netty.handler.codec.http2.Http2Headers) -> b
io.netty.handler.codec.http2.Http2RemoteFlowController -> io.netty.c.a.e.bH:
    io.netty.channel.ChannelHandlerContext channelHandlerContext() -> b
    void addFlowControlled(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> a
    boolean hasFlowControlled(io.netty.handler.codec.http2.Http2Stream) -> c
    void writePendingBytes() -> d
    void listener(io.netty.handler.codec.http2.Http2RemoteFlowController$Listener) -> a
    boolean isWritable(io.netty.handler.codec.http2.Http2Stream) -> b
    void channelWritabilityChanged() -> c
    void updateDependencyTree(int,int,short,boolean) -> a
io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled -> io.netty.c.a.e.bI:
    int size() -> b
    void error(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> a
    void writeComplete() -> a
    void write(io.netty.channel.ChannelHandlerContext,int) -> a
    boolean merge(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) -> a
io.netty.handler.codec.http2.Http2RemoteFlowController$Listener -> io.netty.c.a.e.bJ:
    void writabilityChanged(io.netty.handler.codec.http2.Http2Stream) -> writabilityChanged
io.netty.handler.codec.http2.Http2Settings -> io.netty.c.a.e.bK:
    java.lang.Long FALSE -> b
    java.lang.Long TRUE -> c
    56:57:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    75:76:java.lang.Long put(char,java.lang.Long) -> a
    83:83:java.lang.Long headerTableSize() -> a
    92:93:io.netty.handler.codec.http2.Http2Settings headerTableSize(long) -> a
    100:104:java.lang.Boolean pushEnabled() -> b
    111:112:io.netty.handler.codec.http2.Http2Settings pushEnabled(boolean) -> a
    119:119:java.lang.Long maxConcurrentStreams() -> c
    128:129:io.netty.handler.codec.http2.Http2Settings maxConcurrentStreams(long) -> b
    136:136:java.lang.Integer initialWindowSize() -> d
    145:146:io.netty.handler.codec.http2.Http2Settings initialWindowSize(int) -> a
    153:153:java.lang.Integer maxFrameSize() -> e
    162:163:io.netty.handler.codec.http2.Http2Settings maxFrameSize(int) -> b
    170:170:java.lang.Long maxHeaderListSize() -> f
    179:180:io.netty.handler.codec.http2.Http2Settings maxHeaderListSize(long) -> c
    198:202:java.lang.Integer getIntValue(char) -> a
    206:244:void verifyStandardSetting(int,java.lang.Long) -> a
    248:263:java.lang.String keyToString(char) -> b
    268:268:io.netty.handler.codec.http2.Http2Settings defaultSettings() -> g
    45:45:java.lang.Object put(char,java.lang.Object) -> a
    52:53:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2Stream -> io.netty.c.a.e.bL:
    int id() -> j
    io.netty.handler.codec.http2.Http2Stream$State state() -> k
    io.netty.handler.codec.http2.Http2Stream open(boolean) -> a
    io.netty.handler.codec.http2.Http2Stream close() -> d
    io.netty.handler.codec.http2.Http2Stream closeLocalSide() -> e
    io.netty.handler.codec.http2.Http2Stream closeRemoteSide() -> f
    boolean isResetSent() -> a
    io.netty.handler.codec.http2.Http2Stream resetSent() -> c
    java.lang.Object setProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey,java.lang.Object) -> a
    java.lang.Object getProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey) -> a
    java.lang.Object removeProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey) -> b
    io.netty.handler.codec.http2.Http2Stream headersSent(boolean) -> b
    boolean isHeadersSent() -> g
    boolean isTrailersSent() -> l
    io.netty.handler.codec.http2.Http2Stream headersReceived(boolean) -> c
    boolean isHeadersReceived() -> m
    boolean isTrailersReceived() -> n
    io.netty.handler.codec.http2.Http2Stream pushPromiseSent() -> h
    boolean isPushPromiseSent() -> i
io.netty.handler.codec.http2.Http2Stream$State -> io.netty.c.a.e.bM:
    io.netty.handler.codec.http2.Http2Stream$State IDLE -> a
    io.netty.handler.codec.http2.Http2Stream$State RESERVED_LOCAL -> b
    io.netty.handler.codec.http2.Http2Stream$State RESERVED_REMOTE -> c
    io.netty.handler.codec.http2.Http2Stream$State OPEN -> d
    io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_LOCAL -> e
    io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_REMOTE -> f
    io.netty.handler.codec.http2.Http2Stream$State CLOSED -> g
    boolean localSideOpen -> h
    boolean remoteSideOpen -> i
    io.netty.handler.codec.http2.Http2Stream$State[] $VALUES -> j
    29:29:io.netty.handler.codec.http2.Http2Stream$State[] values() -> values
    29:29:io.netty.handler.codec.http2.Http2Stream$State valueOf(java.lang.String) -> valueOf
    41:44:void <init>(java.lang.String,int,boolean,boolean) -> <init>
    51:51:boolean localSideOpen() -> a
    59:59:boolean remoteSideOpen() -> b
    29:36:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.Http2StreamVisitor -> io.netty.c.a.e.bN:
    boolean visit(io.netty.handler.codec.http2.Http2Stream) -> a
io.netty.handler.codec.http2.ReadOnlyHttp2Headers -> io.netty.c.a.e.bO:
    io.netty.util.AsciiString[] pseudoHeaders -> b
    io.netty.util.AsciiString[] otherHeaders -> c
    boolean $assertionsDisabled -> a
    108:109:io.netty.handler.codec.http2.ReadOnlyHttp2Headers serverHeaders(boolean,io.netty.util.AsciiString,io.netty.util.AsciiString[]) -> a
    113:123:void <init>(boolean,io.netty.util.AsciiString[],io.netty.util.AsciiString[]) -> <init>
    126:126:java.lang.IllegalArgumentException newInvalidArraySizeException() -> f
    131:153:void validateHeaders(io.netty.util.AsciiString[],io.netty.util.AsciiString[]) -> a
    156:173:io.netty.util.AsciiString get0(java.lang.CharSequence) -> j
    178:178:java.lang.CharSequence get(java.lang.CharSequence) -> f
    199:218:java.util.List getAll(java.lang.CharSequence) -> g
    426:426:boolean contains(java.lang.CharSequence) -> h
    431:453:boolean contains(java.lang.CharSequence,java.lang.CharSequence) -> a
    511:511:int size() -> a
    516:516:boolean isEmpty() -> b
    521:534:java.util.Set names() -> c
    539:539:io.netty.handler.codec.http2.Http2Headers add(java.lang.CharSequence,java.lang.CharSequence) -> b
    544:544:io.netty.handler.codec.http2.Http2Headers add(java.lang.CharSequence,java.lang.Iterable) -> a
    619:619:io.netty.handler.codec.http2.Http2Headers set(java.lang.CharSequence,java.lang.CharSequence) -> c
    624:624:io.netty.handler.codec.http2.Http2Headers set(java.lang.CharSequence,java.lang.Iterable) -> b
    704:704:boolean remove(java.lang.CharSequence) -> i
    709:709:io.netty.handler.codec.http2.Http2Headers clear() -> e
    714:714:java.util.Iterator iterator() -> iterator
    724:724:io.netty.handler.codec.http2.Http2Headers method(java.lang.CharSequence) -> a
    729:729:io.netty.handler.codec.http2.Http2Headers scheme(java.lang.CharSequence) -> b
    734:734:io.netty.handler.codec.http2.Http2Headers authority(java.lang.CharSequence) -> c
    739:739:io.netty.handler.codec.http2.Http2Headers path(java.lang.CharSequence) -> d
    744:744:io.netty.handler.codec.http2.Http2Headers status(java.lang.CharSequence) -> e
    749:749:java.lang.CharSequence method() -> g
    754:754:java.lang.CharSequence scheme() -> h
    759:759:java.lang.CharSequence authority() -> i
    764:764:java.lang.CharSequence path() -> j
    769:769:java.lang.CharSequence status() -> k
    774:781:java.lang.String toString() -> toString
    43:43:io.netty.handler.codec.Headers clear() -> d
    43:43:boolean remove(java.lang.Object) -> f
    43:43:io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> c
    43:43:io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object) -> d
    43:43:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> a
    43:43:io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> b
    43:43:boolean contains(java.lang.Object,java.lang.Object) -> a
    43:43:boolean contains(java.lang.Object) -> e
    43:43:java.util.List getAll(java.lang.Object) -> c
    43:43:java.lang.Object get(java.lang.Object) -> a
    43:43:io.netty.util.AsciiString[] access$100(io.netty.handler.codec.http2.ReadOnlyHttp2Headers) -> a
    43:43:io.netty.util.AsciiString[] access$200(io.netty.handler.codec.http2.ReadOnlyHttp2Headers) -> b
    43:43:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.ReadOnlyHttp2Headers$1 -> io.netty.c.a.e.bP:
io.netty.handler.codec.http2.ReadOnlyHttp2Headers$ReadOnlyIterator -> io.netty.c.a.e.bQ:
    int i -> b
    io.netty.util.AsciiString[] current -> c
    io.netty.util.AsciiString key -> d
    io.netty.util.AsciiString value -> e
    io.netty.handler.codec.http2.ReadOnlyHttp2Headers this$0 -> a
    836:839:void <init>(io.netty.handler.codec.http2.ReadOnlyHttp2Headers) -> <init>
    845:845:boolean hasNext() -> hasNext
    850:860:java.util.Map$Entry next() -> a
    865:865:java.lang.CharSequence getKey() -> b
    870:870:java.lang.CharSequence getValue() -> c
    875:875:java.lang.CharSequence setValue(java.lang.CharSequence) -> a
    880:880:void remove() -> remove
    885:885:java.lang.String toString() -> toString
    836:836:java.lang.Object setValue(java.lang.Object) -> setValue
    836:836:java.lang.Object getValue() -> getValue
    836:836:java.lang.Object getKey() -> getKey
    836:836:java.lang.Object next() -> next
    836:836:void <init>(io.netty.handler.codec.http2.ReadOnlyHttp2Headers,io.netty.handler.codec.http2.ReadOnlyHttp2Headers$1) -> <init>
io.netty.handler.codec.http2.StreamBufferingEncoder -> io.netty.c.a.e.bR:
    java.util.TreeMap pendingStreams -> a
    int maxConcurrentStreams -> b
    boolean closed -> c
    111:112:void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder) -> <init>
    106:129:void <init>(io.netty.handler.codec.http2.Http2ConnectionEncoder,int) -> <init>
    141:141:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,io.netty.channel.ChannelPromise) -> a
    149:167:io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> a
    173:189:io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext,int,long,io.netty.channel.ChannelPromise) -> a
    195:205:io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> a
    212:219:void remoteSettings(io.netty.handler.codec.http2.Http2Settings) -> a
    224:237:void close() -> close
    240:249:void tryCreatePendingStreams() -> f
    252:261:void cancelGoAwayStreams(int,long,io.netty.buffer.ByteBuf) -> a
    267:267:boolean canCreateStream() -> g
    271:271:boolean isExistingStream(int) -> a
    59:59:void access$000(io.netty.handler.codec.http2.StreamBufferingEncoder,int,long,io.netty.buffer.ByteBuf) -> a
    59:59:void access$100(io.netty.handler.codec.http2.StreamBufferingEncoder) -> a
io.netty.handler.codec.http2.StreamBufferingEncoder$1 -> io.netty.c.a.e.bS:
    io.netty.handler.codec.http2.StreamBufferingEncoder this$0 -> a
    117:117:void <init>(io.netty.handler.codec.http2.StreamBufferingEncoder) -> <init>
    121:122:void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
    126:127:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
io.netty.handler.codec.http2.StreamBufferingEncoder$DataFrame -> io.netty.c.a.e.bT:
    io.netty.buffer.ByteBuf data -> a
    int padding -> b
    boolean endOfStream -> c
    io.netty.handler.codec.http2.StreamBufferingEncoder this$0 -> d
    348:353:void <init>(io.netty.handler.codec.http2.StreamBufferingEncoder,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise) -> <init>
    357:359:void release(java.lang.Throwable) -> a
    363:364:void send(io.netty.channel.ChannelHandlerContext,int) -> a
io.netty.handler.codec.http2.StreamBufferingEncoder$Frame -> io.netty.c.a.e.bU:
    io.netty.channel.ChannelPromise promise -> e
    300:302:void <init>(io.netty.channel.ChannelPromise) -> <init>
    308:313:void release(java.lang.Throwable) -> a
    void send(io.netty.channel.ChannelHandlerContext,int) -> a
io.netty.handler.codec.http2.StreamBufferingEncoder$HeadersFrame -> io.netty.c.a.e.bV:
    io.netty.handler.codec.http2.Http2Headers headers -> a
    int streamDependency -> b
    short weight -> c
    boolean exclusive -> d
    int padding -> f
    boolean endOfStream -> g
    io.netty.handler.codec.http2.StreamBufferingEncoder this$0 -> h
    327:335:void <init>(io.netty.handler.codec.http2.StreamBufferingEncoder,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean,io.netty.channel.ChannelPromise) -> <init>
    339:340:void send(io.netty.channel.ChannelHandlerContext,int) -> a
io.netty.handler.codec.http2.StreamBufferingEncoder$Http2ChannelClosedException -> io.netty.c.a.e.bW:
    68:69:void <init>() -> <init>
io.netty.handler.codec.http2.StreamBufferingEncoder$Http2GoAwayException -> io.netty.c.a.e.bX:
    int lastStreamId -> a
    long errorCode -> b
    byte[] debugData -> c
    83:87:void <init>(int,long,byte[]) -> <init>
io.netty.handler.codec.http2.StreamBufferingEncoder$PendingStream -> io.netty.c.a.e.bY:
    io.netty.channel.ChannelHandlerContext ctx -> a
    int streamId -> b
    java.util.Queue frames -> c
    277:282:void <init>(io.netty.channel.ChannelHandlerContext,int) -> <init>
    285:288:void sendFrames() -> a
    291:294:void close(java.lang.Throwable) -> a
io.netty.handler.codec.http2.StreamByteDistributor -> io.netty.c.a.e.bZ:
    void updateStreamableBytes(io.netty.handler.codec.http2.StreamByteDistributor$StreamState) -> a
    void updateDependencyTree(int,int,short,boolean) -> a
    boolean distribute(int,io.netty.handler.codec.http2.StreamByteDistributor$Writer) -> a
io.netty.handler.codec.http2.StreamByteDistributor$StreamState -> io.netty.c.a.e.ca:
    io.netty.handler.codec.http2.Http2Stream stream() -> b
    int pendingBytes() -> e
    boolean hasFrame() -> f
    int windowSize() -> d
io.netty.handler.codec.http2.StreamByteDistributor$Writer -> io.netty.c.a.e.cb:
    void write(io.netty.handler.codec.http2.Http2Stream,int) -> a
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor -> io.netty.c.a.e.cc:
    int INITIAL_CHILDREN_MAP_SIZE -> a
    io.netty.handler.codec.http2.Http2Connection$PropertyKey stateKey -> c
    io.netty.util.collection.IntObjectMap stateOnlyMap -> d
    io.netty.util.internal.PriorityQueue stateOnlyRemovalQueue -> e
    io.netty.handler.codec.http2.Http2Connection connection -> f
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State connectionState -> g
    int allocationQuantum -> h
    int maxStateOnlySize -> i
    boolean $assertionsDisabled -> b
    95:96:void <init>(io.netty.handler.codec.http2.Http2Connection) -> <init>
    91:189:void <init>(io.netty.handler.codec.http2.Http2Connection,int) -> <init>
    193:195:void updateStreamableBytes(io.netty.handler.codec.http2.StreamByteDistributor$StreamState) -> a
    199:256:void updateDependencyTree(int,int,short,boolean) -> a
    261:276:boolean distribute(int,io.netty.handler.codec.http2.StreamByteDistributor$Writer) -> a
    291:304:int distribute(int,io.netty.handler.codec.http2.StreamByteDistributor$Writer,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> a
    318:341:int distributeToChildren(int,io.netty.handler.codec.http2.StreamByteDistributor$Writer,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> b
    347:347:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State state(io.netty.handler.codec.http2.Http2Stream) -> a
    351:352:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State state(int) -> a
    385:393:void notifyParentChanged(java.util.List) -> a
    58:58:io.netty.util.collection.IntObjectMap access$000(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> a
    58:58:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State access$100(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> b
    58:58:io.netty.util.internal.PriorityQueue access$200(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> c
    58:58:io.netty.handler.codec.http2.Http2Connection$PropertyKey access$300(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> d
    58:58:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State access$400(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor,io.netty.handler.codec.http2.Http2Stream) -> a
    58:58:int access$500(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> e
    57:68:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$1 -> io.netty.c.a.e.cd:
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor this$0 -> a
    118:118:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor) -> <init>
    121:143:void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    147:150:void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    154:155:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    162:187:void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$2 -> io.netty.c.a.e.ce:
    int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State -> a
    132:132:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$ParentChangedEvent -> io.netty.c.a.e.cf:
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State state -> a
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State oldParent -> b
    798:801:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> <init>
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State -> io.netty.c.a.e.cg:
    io.netty.handler.codec.http2.Http2Stream stream -> a
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State parent -> b
    io.netty.util.collection.IntObjectMap children -> c
    io.netty.util.internal.PriorityQueue pseudoTimeQueue -> n
    int streamId -> d
    int streamableBytes -> e
    int dependencyTreeDepth -> f
    int activeCountForTree -> g
    int pseudoTimeQueueIndex -> o
    int stateOnlyQueueIndex -> p
    long pseudoTimeToWrite -> h
    long pseudoTime -> i
    long totalQueuedWeights -> j
    byte flags -> q
    short weight -> k
    boolean $assertionsDisabled -> l
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor this$0 -> m
    483:484:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor,int) -> <init>
    487:488:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor,io.netty.handler.codec.http2.Http2Stream) -> <init>
    491:492:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor,io.netty.handler.codec.http2.Http2Stream,int) -> <init>
    459:498:void <init>(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor,int,io.netty.handler.codec.http2.Http2Stream,int) -> <init>
    501:508:boolean isDescendantOf(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> a
    512:513:void takeChild(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,boolean,java.util.List) -> a
    521:550:void takeChild(java.util.Iterator,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,boolean,java.util.List) -> a
    556:569:void removeChild(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> b
    577:585:io.netty.util.collection.IntObjectMap removeAllChildrenExcept(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> f
    590:597:void setParent(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> g
    600:603:void initChildrenIfEmpty() -> j
    606:607:void initChildren() -> k
    610:616:void write(int,io.netty.handler.codec.http2.StreamByteDistributor$Writer) -> a
    619:642:void activeCountChangeForTree(int) -> a
    645:656:void updateStreamableBytes(int,boolean) -> a
    662:666:void updatePseudoTime(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,int,long) -> a
    674:676:void offerAndInitializePseudoTime(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> c
    679:681:void offerPseudoTimeQueue(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> d
    687:690:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State pollPseudoTimeQueue() -> a
    694:697:void removePseudoTimeQueue(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> e
    700:700:io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State peekPseudoTimeQueue() -> b
    704:706:void close() -> c
    709:709:boolean wasStreamReservedOrActivated() -> d
    713:714:void setStreamReservedOrActivated() -> e
    717:717:boolean isActive() -> f
    721:722:void setActive() -> l
    725:726:void unsetActive() -> m
    729:729:boolean isDistributing() -> g
    733:734:void setDistributing() -> h
    737:738:void unsetDistributing() -> i
    742:742:int priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue) -> a
    747:752:void priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue,int) -> a
    757:759:java.lang.String toString() -> toString
    763:783:void toString(java.lang.StringBuilder) -> a
    449:449:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$StateOnlyComparator -> io.netty.c.a.e.ch:
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$StateOnlyComparator INSTANCE -> a
    408:409:void <init>() -> <init>
    414:428:int compare(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> a
    403:403:int compare(java.lang.Object,java.lang.Object) -> compare
    406:406:void <clinit>() -> <clinit>
io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$StatePseudoTimeComparator -> io.netty.c.a.e.ci:
    io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$StatePseudoTimeComparator INSTANCE -> a
    437:438:void <init>() -> <init>
    442:442:int compare(io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State,io.netty.handler.codec.http2.WeightedFairQueueByteDistributor$State) -> a
    432:432:int compare(java.lang.Object,java.lang.Object) -> compare
    435:435:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.AbstractSocksMessage -> io.netty.c.a.f.a:
    io.netty.handler.codec.DecoderResult decoderResult -> a
    24:26:void <init>() -> <init>
    30:30:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    35:39:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
io.netty.handler.codec.socksx.SocksMessage -> io.netty.c.a.f.b:
    io.netty.handler.codec.socksx.SocksVersion version() -> a
io.netty.handler.codec.socksx.SocksVersion -> io.netty.c.a.f.c:
    io.netty.handler.codec.socksx.SocksVersion SOCKS4a -> a
    io.netty.handler.codec.socksx.SocksVersion SOCKS5 -> b
    io.netty.handler.codec.socksx.SocksVersion UNKNOWN -> c
    byte b -> d
    io.netty.handler.codec.socksx.SocksVersion[] $VALUES -> e
    22:22:io.netty.handler.codec.socksx.SocksVersion[] values() -> values
    22:22:io.netty.handler.codec.socksx.SocksVersion valueOf(java.lang.String) -> valueOf
    54:56:void <init>(java.lang.String,int,byte) -> <init>
    62:62:byte byteValue() -> a
    22:34:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.AbstractSocks4Message -> io.netty.c.a.f.a.a:
    25:25:void <init>() -> <init>
    28:28:io.netty.handler.codec.socksx.SocksVersion version() -> a
io.netty.handler.codec.socksx.v4.DefaultSocks4CommandRequest -> io.netty.c.a.f.a.b:
    io.netty.handler.codec.socksx.v4.Socks4CommandType type -> a
    java.lang.String dstAddr -> b
    int dstPort -> c
    java.lang.String userId -> d
    52:70:void <init>(io.netty.handler.codec.socksx.v4.Socks4CommandType,java.lang.String,int,java.lang.String) -> <init>
    74:74:io.netty.handler.codec.socksx.v4.Socks4CommandType type() -> b
    79:79:java.lang.String dstAddr() -> c
    84:84:int dstPort() -> d
    89:89:java.lang.String userId() -> e
    94:114:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v4.DefaultSocks4CommandResponse -> io.netty.c.a.f.a.c:
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus status -> a
    java.lang.String dstAddr -> b
    int dstPort -> c
    37:38:void <init>(io.netty.handler.codec.socksx.v4.Socks4CommandStatus) -> <init>
    47:64:void <init>(io.netty.handler.codec.socksx.v4.Socks4CommandStatus,java.lang.String,int) -> <init>
    68:68:io.netty.handler.codec.socksx.v4.Socks4CommandStatus status() -> b
    73:73:java.lang.String dstAddr() -> c
    78:78:int dstPort() -> d
    83:99:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder -> io.netty.c.a.f.a.d:
    43:45:void <init>() -> <init>
    50:79:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    82:91:void fail(java.util.List,java.lang.Exception) -> a
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$1 -> io.netty.c.a.f.a.e:
    int[] $SwitchMap$io$netty$handler$codec$socksx$v4$Socks4ClientDecoder$State -> a
    50:50:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State -> io.netty.c.a.f.a.f:
    io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State START -> a
    io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State SUCCESS -> b
    io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State FAILURE -> c
    io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State[] $VALUES -> d
    36:36:io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State[] values() -> values
    36:36:io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State valueOf(java.lang.String) -> valueOf
    36:36:void <init>(java.lang.String,int) -> <init>
    36:39:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.Socks4ClientEncoder -> io.netty.c.a.f.a.g:
    io.netty.handler.codec.socksx.v4.Socks4ClientEncoder INSTANCE -> a
    byte[] IPv4_DOMAIN_MARKER -> b
    39:39:void <init>() -> <init>
    43:57:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.socksx.v4.Socks4CommandRequest,io.netty.buffer.ByteBuf) -> a
    29:29:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf) -> a
    35:37:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.Socks4CommandRequest -> io.netty.c.a.f.a.h:
    io.netty.handler.codec.socksx.v4.Socks4CommandType type() -> b
    java.lang.String userId() -> e
    java.lang.String dstAddr() -> c
    int dstPort() -> d
io.netty.handler.codec.socksx.v4.Socks4CommandResponse -> io.netty.c.a.f.a.i:
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus status() -> b
io.netty.handler.codec.socksx.v4.Socks4CommandStatus -> io.netty.c.a.f.a.j:
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus SUCCESS -> a
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus REJECTED_OR_FAILED -> b
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus IDENTD_UNREACHABLE -> c
    io.netty.handler.codec.socksx.v4.Socks4CommandStatus IDENTD_AUTH_FAILURE -> d
    byte byteValue -> e
    java.lang.String name -> f
    java.lang.String text -> g
    29:40:io.netty.handler.codec.socksx.v4.Socks4CommandStatus valueOf(byte) -> a
    48:49:void <init>(int) -> <init>
    51:58:void <init>(int,java.lang.String) -> <init>
    70:70:int hashCode() -> hashCode
    75:79:boolean equals(java.lang.Object) -> equals
    84:84:int compareTo(io.netty.handler.codec.socksx.v4.Socks4CommandStatus) -> a
    89:93:java.lang.String toString() -> toString
    21:21:int compareTo(java.lang.Object) -> compareTo
    23:26:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.Socks4CommandType -> io.netty.c.a.f.a.k:
    io.netty.handler.codec.socksx.v4.Socks4CommandType CONNECT -> a
    io.netty.handler.codec.socksx.v4.Socks4CommandType BIND -> b
    byte byteValue -> c
    java.lang.String name -> d
    java.lang.String text -> e
    45:51:void <init>(int,java.lang.String) -> <init>
    54:54:byte byteValue() -> a
    59:59:int hashCode() -> hashCode
    64:68:boolean equals(java.lang.Object) -> equals
    73:73:int compareTo(io.netty.handler.codec.socksx.v4.Socks4CommandType) -> a
    78:82:java.lang.String toString() -> toString
    21:21:int compareTo(java.lang.Object) -> compareTo
    23:24:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v4.Socks4Message -> io.netty.c.a.f.a.l:
io.netty.handler.codec.socksx.v5.AbstractSocks5Message -> io.netty.c.a.f.b.a:
    25:25:void <init>() -> <init>
    28:28:io.netty.handler.codec.socksx.SocksVersion version() -> a
io.netty.handler.codec.socksx.v5.DefaultSocks5CommandRequest -> io.netty.c.a.f.b.b:
    io.netty.handler.codec.socksx.v5.Socks5CommandType type -> a
    io.netty.handler.codec.socksx.v5.Socks5AddressType dstAddrType -> b
    java.lang.String dstAddr -> c
    int dstPort -> d
    35:70:void <init>(io.netty.handler.codec.socksx.v5.Socks5CommandType,io.netty.handler.codec.socksx.v5.Socks5AddressType,java.lang.String,int) -> <init>
    74:74:io.netty.handler.codec.socksx.v5.Socks5CommandType type() -> b
    79:79:io.netty.handler.codec.socksx.v5.Socks5AddressType dstAddrType() -> c
    84:84:java.lang.String dstAddr() -> d
    89:89:int dstPort() -> e
    94:114:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.DefaultSocks5CommandResponse -> io.netty.c.a.f.b.c:
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus status -> a
    io.netty.handler.codec.socksx.v5.Socks5AddressType bndAddrType -> b
    java.lang.String bndAddr -> c
    int bndPort -> d
    39:71:void <init>(io.netty.handler.codec.socksx.v5.Socks5CommandStatus,io.netty.handler.codec.socksx.v5.Socks5AddressType,java.lang.String,int) -> <init>
    75:75:io.netty.handler.codec.socksx.v5.Socks5CommandStatus status() -> b
    80:80:io.netty.handler.codec.socksx.v5.Socks5AddressType bndAddrType() -> c
    85:85:java.lang.String bndAddr() -> d
    90:90:int bndPort() -> e
    95:115:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.DefaultSocks5InitialRequest -> io.netty.c.a.f.b.d:
    java.util.List authMethods -> a
    52:70:void <init>(java.lang.Iterable) -> <init>
    74:74:java.util.List authMethods() -> b
    79:92:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.DefaultSocks5InitialResponse -> io.netty.c.a.f.b.e:
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod authMethod -> a
    28:33:void <init>(io.netty.handler.codec.socksx.v5.Socks5AuthMethod) -> <init>
    37:37:io.netty.handler.codec.socksx.v5.Socks5AuthMethod authMethod() -> b
    42:55:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.DefaultSocks5PasswordAuthRequest -> io.netty.c.a.f.b.f:
    java.lang.String username -> a
    java.lang.String password -> b
    29:46:void <init>(java.lang.String,java.lang.String) -> <init>
    50:50:java.lang.String username() -> b
    55:55:java.lang.String password() -> c
    60:73:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.DefaultSocks5PasswordAuthResponse -> io.netty.c.a.f.b.g:
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus status -> a
    28:34:void <init>(io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus) -> <init>
    38:38:io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus status() -> b
    43:56:java.lang.String toString() -> toString
io.netty.handler.codec.socksx.v5.Socks5AddressDecoder -> io.netty.c.a.f.b.h:
    io.netty.handler.codec.socksx.v5.Socks5AddressDecoder DEFAULT -> a
    java.lang.String decodeAddress(io.netty.handler.codec.socksx.v5.Socks5AddressType,io.netty.buffer.ByteBuf) -> a
    32:32:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5AddressDecoder$1 -> io.netty.c.a.f.b.i:
    32:32:void <init>() -> <init>
    38:58:java.lang.String decodeAddress(io.netty.handler.codec.socksx.v5.Socks5AddressType,io.netty.buffer.ByteBuf) -> a
io.netty.handler.codec.socksx.v5.Socks5AddressEncoder -> io.netty.c.a.f.b.j:
    io.netty.handler.codec.socksx.v5.Socks5AddressEncoder DEFAULT -> a
    void encodeAddress(io.netty.handler.codec.socksx.v5.Socks5AddressType,java.lang.String,io.netty.buffer.ByteBuf) -> a
    32:32:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5AddressEncoder$1 -> io.netty.c.a.f.b.k:
    32:32:void <init>() -> <init>
    35:60:void encodeAddress(io.netty.handler.codec.socksx.v5.Socks5AddressType,java.lang.String,io.netty.buffer.ByteBuf) -> a
io.netty.handler.codec.socksx.v5.Socks5AddressType -> io.netty.c.a.f.b.l:
    io.netty.handler.codec.socksx.v5.Socks5AddressType IPv4 -> a
    io.netty.handler.codec.socksx.v5.Socks5AddressType DOMAIN -> b
    io.netty.handler.codec.socksx.v5.Socks5AddressType IPv6 -> c
    byte byteValue -> d
    java.lang.String name -> e
    java.lang.String text -> f
    29:38:io.netty.handler.codec.socksx.v5.Socks5AddressType valueOf(byte) -> a
    46:47:void <init>(int) -> <init>
    49:56:void <init>(int,java.lang.String) -> <init>
    59:59:byte byteValue() -> a
    64:64:int hashCode() -> hashCode
    69:73:boolean equals(java.lang.Object) -> equals
    78:78:int compareTo(io.netty.handler.codec.socksx.v5.Socks5AddressType) -> a
    83:87:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
    24:26:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5AuthMethod -> io.netty.c.a.f.b.m:
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod NO_AUTH -> a
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod GSSAPI -> b
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod PASSWORD -> c
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod UNACCEPTED -> d
    byte byteValue -> e
    java.lang.String name -> f
    java.lang.String text -> g
    34:45:io.netty.handler.codec.socksx.v5.Socks5AuthMethod valueOf(byte) -> a
    53:54:void <init>(int) -> <init>
    56:63:void <init>(int,java.lang.String) -> <init>
    66:66:byte byteValue() -> a
    71:71:int hashCode() -> hashCode
    76:80:boolean equals(java.lang.Object) -> equals
    85:85:int compareTo(io.netty.handler.codec.socksx.v5.Socks5AuthMethod) -> a
    90:94:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
    24:31:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5ClientEncoder -> io.netty.c.a.f.b.n:
    io.netty.handler.codec.socksx.v5.Socks5ClientEncoder DEFAULT -> a
    io.netty.handler.codec.socksx.v5.Socks5AddressEncoder addressEncoder -> b
    44:45:void <init>() -> <init>
    50:56:void <init>(io.netty.handler.codec.socksx.v5.Socks5AddressEncoder) -> <init>
    67:76:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.socksx.v5.Socks5Message,io.netty.buffer.ByteBuf) -> a
    79:94:void encodeAuthMethodRequest(io.netty.handler.codec.socksx.v5.Socks5InitialRequest,io.netty.buffer.ByteBuf) -> a
    97:106:void encodePasswordAuthRequest(io.netty.handler.codec.socksx.v5.Socks5PasswordAuthRequest,io.netty.buffer.ByteBuf) -> a
    109:117:void encodeCommandRequest(io.netty.handler.codec.socksx.v5.Socks5CommandRequest,io.netty.buffer.ByteBuf) -> a
    33:33:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf) -> a
    36:36:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5CommandRequest -> io.netty.c.a.f.b.o:
    io.netty.handler.codec.socksx.v5.Socks5CommandType type() -> b
    io.netty.handler.codec.socksx.v5.Socks5AddressType dstAddrType() -> c
    java.lang.String dstAddr() -> d
    int dstPort() -> e
io.netty.handler.codec.socksx.v5.Socks5CommandResponse -> io.netty.c.a.f.b.p:
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus status() -> b
io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder -> io.netty.c.a.f.b.q:
    io.netty.handler.codec.socksx.v5.Socks5AddressDecoder addressDecoder -> b
    46:47:void <init>() -> <init>
    50:56:void <init>(io.netty.handler.codec.socksx.v5.Socks5AddressDecoder) -> <init>
    61:92:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    95:105:void fail(java.util.List,java.lang.Exception) -> a
io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$1 -> io.netty.c.a.f.b.r:
    int[] $SwitchMap$io$netty$handler$codec$socksx$v5$Socks5CommandResponseDecoder$State -> a
    61:61:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State -> io.netty.c.a.f.b.s:
    io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State INIT -> a
    io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State SUCCESS -> b
    io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State FAILURE -> c
    io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State[] $VALUES -> d
    37:37:io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State[] values() -> values
    37:37:io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder$State valueOf(java.lang.String) -> valueOf
    37:37:void <init>(java.lang.String,int) -> <init>
    37:40:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5CommandStatus -> io.netty.c.a.f.b.t:
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus SUCCESS -> a
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus FAILURE -> b
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus FORBIDDEN -> c
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus NETWORK_UNREACHABLE -> d
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus HOST_UNREACHABLE -> e
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus CONNECTION_REFUSED -> f
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus TTL_EXPIRED -> g
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus COMMAND_UNSUPPORTED -> h
    io.netty.handler.codec.socksx.v5.Socks5CommandStatus ADDRESS_UNSUPPORTED -> i
    byte byteValue -> j
    java.lang.String name -> k
    java.lang.String text -> l
    35:56:io.netty.handler.codec.socksx.v5.Socks5CommandStatus valueOf(byte) -> a
    64:65:void <init>(int) -> <init>
    67:74:void <init>(int,java.lang.String) -> <init>
    86:86:int hashCode() -> hashCode
    91:95:boolean equals(java.lang.Object) -> equals
    100:100:int compareTo(io.netty.handler.codec.socksx.v5.Socks5CommandStatus) -> a
    105:109:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
    24:32:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5CommandType -> io.netty.c.a.f.b.u:
    io.netty.handler.codec.socksx.v5.Socks5CommandType CONNECT -> a
    io.netty.handler.codec.socksx.v5.Socks5CommandType BIND -> b
    io.netty.handler.codec.socksx.v5.Socks5CommandType UDP_ASSOCIATE -> c
    byte byteValue -> d
    java.lang.String name -> e
    java.lang.String text -> f
    49:56:void <init>(int,java.lang.String) -> <init>
    59:59:byte byteValue() -> a
    64:64:int hashCode() -> hashCode
    69:73:boolean equals(java.lang.Object) -> equals
    78:78:int compareTo(io.netty.handler.codec.socksx.v5.Socks5CommandType) -> a
    83:87:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
    24:26:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5InitialRequest -> io.netty.c.a.f.b.v:
    java.util.List authMethods() -> b
io.netty.handler.codec.socksx.v5.Socks5InitialResponse -> io.netty.c.a.f.b.w:
    io.netty.handler.codec.socksx.v5.Socks5AuthMethod authMethod() -> b
io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder -> io.netty.c.a.f.b.x:
    44:45:void <init>() -> <init>
    50:77:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    80:89:void fail(java.util.List,java.lang.Exception) -> a
io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$1 -> io.netty.c.a.f.b.y:
    int[] $SwitchMap$io$netty$handler$codec$socksx$v5$Socks5InitialResponseDecoder$State -> a
    50:50:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State -> io.netty.c.a.f.b.z:
    io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State INIT -> a
    io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State SUCCESS -> b
    io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State FAILURE -> c
    io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State[] $VALUES -> d
    37:37:io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State[] values() -> values
    37:37:io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder$State valueOf(java.lang.String) -> valueOf
    37:37:void <init>(java.lang.String,int) -> <init>
    37:40:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5Message -> io.netty.c.a.f.b.A:
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthRequest -> io.netty.c.a.f.b.B:
    java.lang.String username() -> b
    java.lang.String password() -> c
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponse -> io.netty.c.a.f.b.C:
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus status() -> b
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder -> io.netty.c.a.f.b.D:
    43:44:void <init>() -> <init>
    49:74:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    77:86:void fail(java.util.List,java.lang.Exception) -> a
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$1 -> io.netty.c.a.f.b.E:
    int[] $SwitchMap$io$netty$handler$codec$socksx$v5$Socks5PasswordAuthResponseDecoder$State -> a
    49:49:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State -> io.netty.c.a.f.b.F:
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State INIT -> a
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State SUCCESS -> b
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State FAILURE -> c
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State[] $VALUES -> d
    36:36:io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State[] values() -> values
    36:36:io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder$State valueOf(java.lang.String) -> valueOf
    36:36:void <init>(java.lang.String,int) -> <init>
    36:39:void <clinit>() -> <clinit>
io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus -> io.netty.c.a.f.b.G:
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus SUCCESS -> a
    io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus FAILURE -> b
    byte byteValue -> c
    java.lang.String name -> d
    java.lang.String text -> e
    28:35:io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus valueOf(byte) -> a
    43:44:void <init>(int) -> <init>
    46:53:void <init>(int,java.lang.String) -> <init>
    65:65:int hashCode() -> hashCode
    70:74:boolean equals(java.lang.Object) -> equals
    79:79:int compareTo(io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus) -> a
    84:88:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
    24:25:void <clinit>() -> <clinit>
io.netty.handler.logging.LogLevel -> io.netty.c.b.a:
    io.netty.handler.logging.LogLevel TRACE -> a
    io.netty.handler.logging.LogLevel DEBUG -> b
    io.netty.handler.logging.LogLevel INFO -> c
    io.netty.handler.logging.LogLevel WARN -> d
    io.netty.handler.logging.LogLevel ERROR -> e
    io.netty.util.internal.logging.InternalLogLevel internalLevel -> f
    io.netty.handler.logging.LogLevel[] $VALUES -> g
    23:23:io.netty.handler.logging.LogLevel[] values() -> values
    23:23:io.netty.handler.logging.LogLevel valueOf(java.lang.String) -> valueOf
    32:34:void <init>(java.lang.String,int,io.netty.util.internal.logging.InternalLogLevel) -> <init>
    44:44:io.netty.util.internal.logging.InternalLogLevel toInternalLevel() -> a
    23:28:void <clinit>() -> <clinit>
io.netty.handler.logging.LoggingHandler -> io.netty.c.b.b:
    io.netty.handler.logging.LogLevel DEFAULT_LEVEL -> c
    io.netty.util.internal.logging.InternalLogger logger -> a
    io.netty.util.internal.logging.InternalLogLevel internalLevel -> b
    io.netty.handler.logging.LogLevel level -> d
    55:56:void <init>() -> <init>
    64:72:void <init>(io.netty.handler.logging.LogLevel) -> <init>
    140:144:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    148:152:void channelUnregistered(io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    156:160:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    164:168:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    172:176:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    180:184:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    188:192:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    198:202:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    206:210:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    214:218:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    222:226:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    230:234:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    238:242:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    246:250:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    254:258:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    262:266:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    274:279:java.lang.String format(io.netty.channel.ChannelHandlerContext,java.lang.String) -> a
    289:294:java.lang.String format(io.netty.channel.ChannelHandlerContext,java.lang.String,java.lang.Object) -> a
    307:317:java.lang.String format(io.netty.channel.ChannelHandlerContext,java.lang.String,java.lang.Object,java.lang.Object) -> a
    324:337:java.lang.String formatByteBuf(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.buffer.ByteBuf) -> a
    345:362:java.lang.String formatByteBufHolder(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.buffer.ByteBufHolder) -> a
    370:373:java.lang.String formatSimple(io.netty.channel.ChannelHandlerContext,java.lang.String,java.lang.Object) -> b
    43:43:void <clinit>() -> <clinit>
io.netty.handler.proxy.HttpProxyHandler -> io.netty.c.c.a:
    io.netty.handler.codec.http.HttpClientCodec codec -> a
    java.lang.String username -> b
    java.lang.String password -> c
    java.lang.CharSequence authorization -> d
    io.netty.handler.codec.http.HttpResponseStatus status -> e
    io.netty.handler.codec.http.HttpHeaders headers -> f
    54:55:void <init>(java.net.SocketAddress) -> <init>
    46:63:void <init>(java.net.SocketAddress,io.netty.handler.codec.http.HttpHeaders) -> <init>
    66:67:void <init>(java.net.SocketAddress,java.lang.String,java.lang.String) -> <init>
    46:90:void <init>(java.net.SocketAddress,java.lang.String,java.lang.String,io.netty.handler.codec.http.HttpHeaders) -> <init>
    94:94:java.lang.String protocol() -> a
    99:99:java.lang.String authScheme() -> b
    112:115:void addCodec(io.netty.channel.ChannelHandlerContext) -> a
    119:120:void removeEncoder(io.netty.channel.ChannelHandlerContext) -> b
    124:125:void removeDecoder(io.netty.channel.ChannelHandlerContext) -> c
    129:146:java.lang.Object newInitialMessage(io.netty.channel.ChannelHandlerContext) -> d
    151:168:boolean handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> a
io.netty.handler.proxy.ProxyConnectException -> io.netty.c.c.b:
    24:24:void <init>() -> <init>
    27:28:void <init>(java.lang.String) -> <init>
    35:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.netty.handler.proxy.ProxyConnectionEvent -> io.netty.c.c.c:
    java.lang.String protocol -> a
    java.lang.String authScheme -> b
    java.net.SocketAddress proxyAddress -> c
    java.net.SocketAddress destinationAddress -> d
    java.lang.String strVal -> e
    35:53:void <init>(java.lang.String,java.lang.String,java.net.SocketAddress,java.net.SocketAddress) -> <init>
    87:103:java.lang.String toString() -> toString
io.netty.handler.proxy.ProxyHandler -> io.netty.c.c.d:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.net.SocketAddress proxyAddress -> b
    java.net.SocketAddress destinationAddress -> c
    long connectTimeoutMillis -> d
    io.netty.channel.ChannelHandlerContext ctx -> e
    io.netty.channel.PendingWriteQueue pendingWrites -> f
    boolean finished -> g
    boolean suppressChannelReadComplete -> h
    boolean flushedPrematurely -> i
    io.netty.handler.proxy.ProxyHandler$LazyChannelPromise connectPromise -> j
    io.netty.util.concurrent.ScheduledFuture connectTimeoutFuture -> k
    io.netty.channel.ChannelFutureListener writeListener -> l
    54:77:void <init>(java.net.SocketAddress) -> <init>
    java.lang.String protocol() -> a
    java.lang.String authScheme() -> b
    102:102:java.net.SocketAddress destinationAddress() -> c
    142:153:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    void addCodec(io.netty.channel.ChannelHandlerContext) -> a
    void removeEncoder(io.netty.channel.ChannelHandlerContext) -> b
    void removeDecoder(io.netty.channel.ChannelHandlerContext) -> c
    175:182:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    186:188:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    195:213:void sendInitialMessage(io.netty.channel.ChannelHandlerContext) -> e
    java.lang.Object newInitialMessage(io.netty.channel.ChannelHandlerContext) -> d
    227:228:void sendToProxyServer(java.lang.Object) -> a
    232:238:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    242:248:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    252:273:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    boolean handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> a
    285:312:void setConnectSuccess() -> d
    316:322:boolean safeRemoveDecoder() -> e
    327:333:boolean safeRemoveEncoder() -> f
    337:351:void setConnectFailure(java.lang.Throwable) -> a
    354:358:void failPendingWritesAndClose(java.lang.Throwable) -> b
    361:365:void cancelConnectTimeoutFuture() -> g
    372:388:java.lang.String exceptionMessage(java.lang.String) -> a
    393:400:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    404:410:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    414:420:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    423:426:void readIfNeeded(io.netty.channel.ChannelHandlerContext) -> f
    429:433:void writePendingWrites() -> h
    436:440:void failPendingWrites(java.lang.Throwable) -> c
    443:448:void addPendingWrite(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> a
    38:38:void access$100(io.netty.handler.proxy.ProxyHandler,java.lang.Throwable) -> a
    38:38:io.netty.handler.proxy.ProxyHandler$LazyChannelPromise access$200(io.netty.handler.proxy.ProxyHandler) -> a
    38:38:io.netty.channel.ChannelHandlerContext access$300(io.netty.handler.proxy.ProxyHandler) -> b
    40:40:void <clinit>() -> <clinit>
io.netty.handler.proxy.ProxyHandler$1 -> io.netty.c.c.e:
    io.netty.handler.proxy.ProxyHandler this$0 -> a
    63:63:void <init>(io.netty.handler.proxy.ProxyHandler) -> <init>
    66:69:void operationComplete(io.netty.channel.ChannelFuture) -> a
    63:63:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.proxy.ProxyHandler$2 -> io.netty.c.c.f:
    io.netty.handler.proxy.ProxyHandler this$0 -> a
    197:197:void <init>(io.netty.handler.proxy.ProxyHandler) -> <init>
    200:203:void run() -> run
io.netty.handler.proxy.ProxyHandler$LazyChannelPromise -> io.netty.c.c.g:
    io.netty.handler.proxy.ProxyHandler this$0 -> a
    450:450:void <init>(io.netty.handler.proxy.ProxyHandler) -> <init>
    453:456:io.netty.util.concurrent.EventExecutor executor() -> executor
    450:450:void <init>(io.netty.handler.proxy.ProxyHandler,io.netty.handler.proxy.ProxyHandler$1) -> <init>
io.netty.handler.proxy.Socks4ProxyHandler -> io.netty.c.c.h:
    java.lang.String username -> a
    java.lang.String decoderName -> b
    java.lang.String encoderName -> c
    42:43:void <init>(java.net.SocketAddress) -> <init>
    46:51:void <init>(java.net.SocketAddress,java.lang.String) -> <init>
    55:55:java.lang.String protocol() -> a
    60:60:java.lang.String authScheme() -> b
    69:79:void addCodec(io.netty.channel.ChannelHandlerContext) -> a
    83:85:void removeEncoder(io.netty.channel.ChannelHandlerContext) -> b
    89:91:void removeDecoder(io.netty.channel.ChannelHandlerContext) -> c
    95:103:java.lang.Object newInitialMessage(io.netty.channel.ChannelHandlerContext) -> d
    108:114:boolean handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> a
io.netty.handler.proxy.Socks5ProxyHandler -> io.netty.c.c.i:
    io.netty.handler.codec.socksx.v5.Socks5InitialRequest INIT_REQUEST_NO_AUTH -> a
    io.netty.handler.codec.socksx.v5.Socks5InitialRequest INIT_REQUEST_PASSWORD -> b
    java.lang.String username -> c
    java.lang.String password -> d
    java.lang.String decoderName -> e
    java.lang.String encoderName -> f
    63:64:void <init>(java.net.SocketAddress) -> <init>
    67:76:void <init>(java.net.SocketAddress,java.lang.String,java.lang.String) -> <init>
    80:80:java.lang.String protocol() -> a
    85:85:java.lang.String authScheme() -> b
    98:108:void addCodec(io.netty.channel.ChannelHandlerContext) -> a
    112:113:void removeEncoder(io.netty.channel.ChannelHandlerContext) -> b
    117:121:void removeDecoder(io.netty.channel.ChannelHandlerContext) -> c
    125:125:java.lang.Object newInitialMessage(io.netty.channel.ChannelHandlerContext) -> d
    130:171:boolean handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> a
    176:181:io.netty.handler.codec.socksx.v5.Socks5AuthMethod socksAuthMethod() -> d
    185:205:void sendConnectCommand(io.netty.channel.ChannelHandlerContext) -> e
    50:54:void <clinit>() -> <clinit>
io.netty.handler.ssl.AbstractSniHandler -> io.netty.c.d.a:
    io.netty.util.internal.logging.InternalLogger logger -> a
    boolean handshakeFailed -> b
    boolean suppressRead -> c
    boolean readPending -> d
    43:43:void <init>() -> <init>
    57:223:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    226:256:void select(io.netty.channel.ChannelHandlerContext,java.lang.String) -> b
    259:265:void fireSniCompletionEvent(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.util.concurrent.Future) -> b
    io.netty.util.concurrent.Future lookup(io.netty.channel.ChannelHandlerContext,java.lang.String) -> a
    void onLookupComplete(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.util.concurrent.Future) -> a
    285:290:void read(io.netty.channel.ChannelHandlerContext) -> read
    294:295:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    300:301:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    305:306:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    310:311:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    315:316:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    320:321:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    325:326:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    43:43:boolean access$002(io.netty.handler.ssl.AbstractSniHandler,boolean) -> a
    43:43:void access$100(io.netty.handler.ssl.AbstractSniHandler,io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.util.concurrent.Future) -> a
    43:43:boolean access$200(io.netty.handler.ssl.AbstractSniHandler) -> a
    43:43:boolean access$202(io.netty.handler.ssl.AbstractSniHandler,boolean) -> b
    48:49:void <clinit>() -> <clinit>
io.netty.handler.ssl.AbstractSniHandler$1 -> io.netty.c.d.b:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    java.lang.String val$hostname -> b
    io.netty.handler.ssl.AbstractSniHandler this$0 -> c
    232:232:void <init>(io.netty.handler.ssl.AbstractSniHandler,io.netty.channel.ChannelHandlerContext,java.lang.String) -> <init>
    236:253:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.ssl.ApplicationProtocolAccessor -> io.netty.c.d.c:
    java.lang.String getNegotiatedApplicationProtocol() -> a
io.netty.handler.ssl.ApplicationProtocolConfig -> io.netty.c.d.d:
    io.netty.handler.ssl.ApplicationProtocolConfig DISABLED -> a
    java.util.List supportedProtocols -> b
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol -> c
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorBehavior -> d
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedBehavior -> e
    50:51:void <init>(io.netty.handler.ssl.ApplicationProtocolConfig$Protocol,io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior,io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior,java.lang.Iterable) -> <init>
    74:86:void <init>(io.netty.handler.ssl.ApplicationProtocolConfig$Protocol,io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior,io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior,java.util.List) -> <init>
    91:96:void <init>() -> <init>
    162:162:java.util.List supportedProtocols() -> a
    169:169:io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> b
    176:176:io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> c
    183:183:io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> d
    34:34:void <clinit>() -> <clinit>
io.netty.handler.ssl.ApplicationProtocolConfig$Protocol -> io.netty.c.d.e:
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol NONE -> a
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol NPN -> b
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol ALPN -> c
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol NPN_AND_ALPN -> d
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol[] $VALUES -> e
    101:101:io.netty.handler.ssl.ApplicationProtocolConfig$Protocol[] values() -> values
    101:101:io.netty.handler.ssl.ApplicationProtocolConfig$Protocol valueOf(java.lang.String) -> valueOf
    101:101:void <init>(java.lang.String,int) -> <init>
    101:102:void <clinit>() -> <clinit>
io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior -> io.netty.c.d.f:
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior ACCEPT -> a
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior FATAL_ALERT -> b
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior CHOOSE_MY_LAST_PROTOCOL -> c
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior[] $VALUES -> d
    137:137:io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior[] values() -> values
    137:137:io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior valueOf(java.lang.String) -> valueOf
    137:137:void <init>(java.lang.String,int) -> <init>
    137:155:void <clinit>() -> <clinit>
io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior -> io.netty.c.d.g:
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior FATAL_ALERT -> a
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior NO_ADVERTISE -> b
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior CHOOSE_MY_LAST_PROTOCOL -> c
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior[] $VALUES -> d
    108:108:io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior[] values() -> values
    108:108:io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior valueOf(java.lang.String) -> valueOf
    108:108:void <init>(java.lang.String,int) -> <init>
    108:131:void <clinit>() -> <clinit>
io.netty.handler.ssl.ApplicationProtocolNegotiator -> io.netty.c.d.h:
    java.util.List protocols() -> a
io.netty.handler.ssl.ApplicationProtocolUtil -> io.netty.c.d.i:
    31:31:java.util.List toList(java.lang.Iterable) -> a
    35:51:java.util.List toList(int,java.lang.Iterable) -> a
io.netty.handler.ssl.CipherSuiteConverter -> io.netty.c.d.j:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.util.regex.Pattern JAVA_CIPHERSUITE_PATTERN -> b
    java.util.regex.Pattern OPENSSL_CIPHERSUITE_PATTERN -> c
    java.util.regex.Pattern JAVA_AES_CBC_PATTERN -> d
    java.util.regex.Pattern JAVA_AES_PATTERN -> e
    java.util.regex.Pattern OPENSSL_AES_CBC_PATTERN -> f
    java.util.regex.Pattern OPENSSL_AES_PATTERN -> g
    java.util.concurrent.ConcurrentMap j2o -> h
    java.util.concurrent.ConcurrentMap o2j -> i
    129:148:java.lang.String toOpenSsl(java.lang.Iterable) -> a
    158:162:java.lang.String toOpenSsl(java.lang.String) -> a
    167:185:java.lang.String cacheFromJava(java.lang.String) -> d
    189:202:java.lang.String toOpenSslUncached(java.lang.String) -> b
    207:226:java.lang.String toOpenSslHandshakeAlgo(java.lang.String) -> e
    230:258:java.lang.String toOpenSslBulkCipher(java.lang.String) -> f
    268:268:java.lang.String toOpenSslHmacAlgo(java.lang.String) -> g
    278:293:java.lang.String toJava(java.lang.String,java.lang.String) -> a
    297:319:java.util.Map cacheFromOpenSsl(java.lang.String) -> h
    323:352:java.lang.String toJavaUncached(java.lang.String) -> c
    356:368:java.lang.String toJavaHandshakeAlgo(java.lang.String,boolean) -> a
    373:413:java.lang.String toJavaBulkCipher(java.lang.String,boolean) -> b
    423:423:java.lang.String toJavaHmacAlgo(java.lang.String) -> i
    426:426:void <init>() -> <init>
    36:96:void <clinit>() -> <clinit>
io.netty.handler.ssl.CipherSuiteFilter -> io.netty.c.d.k:
    java.lang.String[] filterCipherSuites(java.lang.Iterable,java.util.List,java.util.Set) -> a
io.netty.handler.ssl.ClientAuth -> io.netty.c.d.l:
    io.netty.handler.ssl.ClientAuth NONE -> a
    io.netty.handler.ssl.ClientAuth OPTIONAL -> b
    io.netty.handler.ssl.ClientAuth REQUIRE -> c
    io.netty.handler.ssl.ClientAuth[] $VALUES -> d
    23:23:io.netty.handler.ssl.ClientAuth[] values() -> values
    23:23:io.netty.handler.ssl.ClientAuth valueOf(java.lang.String) -> valueOf
    23:23:void <init>(java.lang.String,int) -> <init>
    23:37:void <clinit>() -> <clinit>
io.netty.handler.ssl.Conscrypt -> io.netty.c.d.m:
    java.lang.Class ENGINES_CLASS -> a
    35:35:boolean isAvailable() -> a
    39:39:boolean isEngineSupported(javax.net.ssl.SSLEngine) -> a
    45:52:java.lang.Class getEnginesClass() -> b
    58:61:boolean isConscryptEngine(javax.net.ssl.SSLEngine,java.lang.Class) -> a
    66:66:java.lang.reflect.Method getIsConscryptMethod(java.lang.Class) -> a
    29:29:void <clinit>() -> <clinit>
io.netty.handler.ssl.ConscryptAlpnSslEngine -> io.netty.c.d.n:
    boolean USE_BUFFER_ALLOCATOR -> a
    49:49:io.netty.handler.ssl.ConscryptAlpnSslEngine newClientEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> a
    54:54:io.netty.handler.ssl.ConscryptAlpnSslEngine newServerEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> b
    58:75:void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,java.util.List) -> <init>
    87:89:int calculateOutNetBufSize(int,int) -> a
    93:93:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],java.nio.ByteBuffer[]) -> a
    43:43:void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,java.util.List,io.netty.handler.ssl.ConscryptAlpnSslEngine$1) -> <init>
    44:44:void <clinit>() -> <clinit>
io.netty.handler.ssl.ConscryptAlpnSslEngine$1 -> io.netty.c.d.o:
io.netty.handler.ssl.ConscryptAlpnSslEngine$BufferAllocatorAdapter -> io.netty.c.d.p:
    io.netty.buffer.ByteBufAllocator alloc -> a
    160:162:void <init>(io.netty.buffer.ByteBufAllocator) -> <init>
io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine -> io.netty.c.d.q:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener protocolListener -> a
    101:113:void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1 -> io.netty.c.d.r:
    io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine this$0 -> a
    103:103:void <init>(io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine) -> <init>
io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine -> io.netty.c.d.s:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector protocolSelector -> a
    130:144:void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine$1 -> io.netty.c.d.t:
    io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine this$0 -> a
    133:133:void <init>(io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine) -> <init>
io.netty.handler.ssl.IdentityCipherSuiteFilter -> io.netty.c.d.u:
    io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE -> a
    28:28:void <init>() -> <init>
    33:43:java.lang.String[] filterCipherSuites(java.lang.Iterable,java.util.List,java.util.Set) -> a
    26:26:void <clinit>() -> <clinit>
io.netty.handler.ssl.Java7SslParametersUtils -> io.netty.c.d.v:
    33:34:void setAlgorithmConstraints(javax.net.ssl.SSLParameters,java.lang.Object) -> a
io.netty.handler.ssl.Java8SslUtils -> io.netty.c.d.w:
    33:47:java.util.List getSniHostNames(javax.net.ssl.SSLParameters) -> a
    51:56:void setSniHostNames(javax.net.ssl.SSLParameters,java.util.List) -> a
    59:59:boolean getUseCipherSuitesOrder(javax.net.ssl.SSLParameters) -> b
    63:64:void setUseCipherSuitesOrder(javax.net.ssl.SSLParameters,boolean) -> a
    68:69:void setSNIMatchers(javax.net.ssl.SSLParameters,java.util.Collection) -> a
io.netty.handler.ssl.Java9SslEngine -> io.netty.c.d.x:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener selectionListener -> b
    io.netty.handler.ssl.Java9SslEngine$AlpnSelector alpnSelector -> c
    boolean $assertionsDisabled -> a
    81:93:void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> <init>
    96:119:javax.net.ssl.SSLEngineResult verifyProtocolSelection(javax.net.ssl.SSLEngineResult) -> a
    124:124:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    129:129:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer) -> wrap
    134:134:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    139:139:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    144:144:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    149:149:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    155:155:void setNegotiatedApplicationProtocol(java.lang.String) -> a
    159:163:java.lang.String getNegotiatedApplicationProtocol() -> a
    169:169:java.lang.String getApplicationProtocol() -> getApplicationProtocol
    173:173:java.lang.String getHandshakeApplicationProtocol() -> getHandshakeApplicationProtocol
    177:178:void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction) -> setHandshakeApplicationProtocolSelector
    181:181:java.util.function.BiFunction getHandshakeApplicationProtocolSelector() -> getHandshakeApplicationProtocolSelector
    33:33:void <clinit>() -> <clinit>
io.netty.handler.ssl.Java9SslEngine$AlpnSelector -> io.netty.c.d.y:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector selector -> c
    boolean called -> d
    boolean $assertionsDisabled -> a
    io.netty.handler.ssl.Java9SslEngine this$0 -> b
    41:43:void <init>(io.netty.handler.ssl.Java9SslEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector) -> <init>
    47:58:java.lang.String apply(javax.net.ssl.SSLEngine,java.util.List) -> a
    63:77:void checkUnsupported() -> a
    37:37:java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
    37:37:void <clinit>() -> <clinit>
io.netty.handler.ssl.Java9SslUtils -> io.netty.c.d.z:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.lang.reflect.Method SET_APPLICATION_PROTOCOLS -> b
    java.lang.reflect.Method GET_APPLICATION_PROTOCOL -> c
    java.lang.reflect.Method GET_HANDSHAKE_APPLICATION_PROTOCOL -> d
    java.lang.reflect.Method SET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR -> e
    java.lang.reflect.Method GET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR -> f
    113:114:void <init>() -> <init>
    117:117:boolean supportsAlpn() -> a
    122:126:java.lang.String getApplicationProtocol(javax.net.ssl.SSLEngine) -> a
    132:136:java.lang.String getHandshakeApplicationProtocol(javax.net.ssl.SSLEngine) -> b
    141:152:void setApplicationProtocols(javax.net.ssl.SSLEngine,java.util.List) -> a
    157:163:void setHandshakeApplicationProtocolSelector(javax.net.ssl.SSLEngine,java.util.function.BiFunction) -> a
    167:172:java.util.function.BiFunction getHandshakeApplicationProtocolSelector(javax.net.ssl.SSLEngine) -> c
    34:111:void <clinit>() -> <clinit>
io.netty.handler.ssl.Java9SslUtils$1 -> io.netty.c.d.A:
    52:52:void <init>() -> <init>
    55:55:java.lang.reflect.Method run() -> a
    52:52:java.lang.Object run() -> run
io.netty.handler.ssl.Java9SslUtils$2 -> io.netty.c.d.B:
    59:59:void <init>() -> <init>
    62:62:java.lang.reflect.Method run() -> a
    59:59:java.lang.Object run() -> run
io.netty.handler.ssl.Java9SslUtils$3 -> io.netty.c.d.C:
    67:67:void <init>() -> <init>
    70:70:java.lang.reflect.Method run() -> a
    67:67:java.lang.Object run() -> run
io.netty.handler.ssl.Java9SslUtils$4 -> io.netty.c.d.D:
    76:76:void <init>() -> <init>
    79:79:java.lang.reflect.Method run() -> a
    76:76:java.lang.Object run() -> run
io.netty.handler.ssl.Java9SslUtils$5 -> io.netty.c.d.E:
    82:82:void <init>() -> <init>
    85:85:java.lang.String apply(javax.net.ssl.SSLEngine,java.util.List) -> a
    82:82:java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
io.netty.handler.ssl.Java9SslUtils$6 -> io.netty.c.d.F:
    90:90:void <init>() -> <init>
    93:93:java.lang.reflect.Method run() -> a
    90:90:java.lang.Object run() -> run
io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator -> io.netty.c.d.G:
    boolean AVAILABLE -> e
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory ALPN_WRAPPER -> f
    58:59:void <init>(boolean,java.lang.Iterable) -> <init>
    78:81:void <init>(boolean,boolean,java.lang.Iterable) -> <init>
    104:105:void <init>(io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.Iterable) -> <init>
    149:149:boolean jdkAlpnSupported() -> b
    28:28:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> c
    28:28:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> d
    28:28:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> e
    28:28:java.util.List protocols() -> a
    30:34:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1 -> io.netty.c.d.H:
io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$AlpnWrapper -> io.netty.c.d.I:
    129:129:void <init>() -> <init>
    133:144:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> a
    129:129:void <init>(io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1) -> <init>
io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$FailureWrapper -> io.netty.c.d.J:
    118:118:void <init>() -> <init>
    122:122:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> a
    118:118:void <init>(io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1) -> <init>
io.netty.handler.ssl.JdkApplicationProtocolNegotiator -> io.netty.c.d.K:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> c
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> e
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> d
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory -> io.netty.c.d.L:
    49:49:void <init>() -> <init>
    54:54:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> a
    javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> a
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener -> io.netty.c.d.M:
    void unsupported() -> a
    void selected(java.lang.String) -> a
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory -> io.netty.c.d.N:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener newListener(javax.net.ssl.SSLEngine,java.util.List) -> a
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector -> io.netty.c.d.O:
    void unsupported() -> a
    java.lang.String select(java.util.List) -> a
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory -> io.netty.c.d.P:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector newSelector(javax.net.ssl.SSLEngine,java.util.Set) -> a
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory -> io.netty.c.d.Q:
    javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> a
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator -> io.netty.c.d.R:
    java.util.List protocols -> e
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory selectorFactory -> f
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory listenerFactory -> g
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory -> h
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory FAIL_SELECTOR_FACTORY -> a
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory NO_FAIL_SELECTOR_FACTORY -> b
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory FAIL_SELECTION_LISTENER_FACTORY -> c
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory NO_FAIL_SELECTION_LISTENER_FACTORY -> d
    47:48:void <init>(io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.Iterable) -> <init>
    72:77:void <init>(io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.util.List) -> <init>
    81:81:java.util.List protocols() -> a
    86:86:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> e
    91:91:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> d
    96:96:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> c
    99:121:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$1 -> io.netty.c.d.S:
    99:99:void <init>() -> <init>
    102:102:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector newSelector(javax.net.ssl.SSLEngine,java.util.Set) -> a
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$2 -> io.netty.c.d.T:
    106:106:void <init>() -> <init>
    109:109:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector newSelector(javax.net.ssl.SSLEngine,java.util.Set) -> a
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$3 -> io.netty.c.d.U:
    114:114:void <init>() -> <init>
    117:117:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener newListener(javax.net.ssl.SSLEngine,java.util.List) -> a
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$4 -> io.netty.c.d.V:
    122:122:void <init>() -> <init>
    125:125:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener newListener(javax.net.ssl.SSLEngine,java.util.List) -> a
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelectionListener -> io.netty.c.d.W:
    201:202:void <init>(io.netty.handler.ssl.JdkSslEngine,java.util.List) -> <init>
    206:206:void noSelectedMatchFound(java.lang.String) -> b
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelector -> io.netty.c.d.X:
    162:163:void <init>(io.netty.handler.ssl.JdkSslEngine,java.util.Set) -> <init>
    167:167:java.lang.String noSelectMatchFound() -> b
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelectionListener -> io.netty.c.d.Y:
    io.netty.handler.ssl.JdkSslEngine engineWrapper -> a
    java.util.List supportedProtocols -> b
    175:178:void <init>(io.netty.handler.ssl.JdkSslEngine,java.util.List) -> <init>
    182:183:void unsupported() -> a
    187:192:void selected(java.lang.String) -> a
    196:196:void noSelectedMatchFound(java.lang.String) -> b
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector -> io.netty.c.d.Z:
    io.netty.handler.ssl.JdkSslEngine engineWrapper -> a
    java.util.Set supportedProtocols -> b
    133:136:void <init>(io.netty.handler.ssl.JdkSslEngine,java.util.Set) -> <init>
    140:141:void unsupported() -> a
    145:151:java.lang.String select(java.util.List) -> a
    155:156:java.lang.String noSelectMatchFound() -> b
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator -> io.netty.c.d.aa:
    io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator INSTANCE -> a
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory DEFAULT_SSL_ENGINE_WRAPPER_FACTORY -> b
    38:39:void <init>() -> <init>
    43:43:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> c
    48:48:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> e
    53:53:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> d
    58:58:java.util.List protocols() -> a
    28:30:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator$1 -> io.netty.c.d.ab:
    30:30:void <init>() -> <init>
    34:34:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> a
io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator -> io.netty.c.d.ac:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory NPN_WRAPPER -> e
    64:65:void <init>(boolean,java.lang.Iterable) -> <init>
    84:87:void <init>(boolean,boolean,java.lang.Iterable) -> <init>
    110:111:void <init>(io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.Iterable) -> <init>
    25:25:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> c
    25:25:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> d
    25:25:io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> e
    25:25:java.util.List protocols() -> a
    27:27:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator$1 -> io.netty.c.d.ad:
    27:33:void <init>() -> <init>
    38:38:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> a
io.netty.handler.ssl.JdkSslClientContext -> io.netty.c.d.ae:
    47:48:void <init>() -> <init>
    87:89:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory) -> <init>
    168:169:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long) -> <init>
    175:179:void <init>(java.security.Provider,java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long) -> <init>
    270:273:void <init>(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long) -> <init>
    281:305:javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long) -> a
io.netty.handler.ssl.JdkSslContext -> io.netty.c.d.af:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.lang.String[] DEFAULT_PROTOCOLS -> b
    java.util.List DEFAULT_CIPHERS -> c
    java.util.Set SUPPORTED_CIPHERS -> d
    java.lang.String[] protocols -> e
    java.lang.String[] cipherSuites -> f
    java.util.List unmodifiableCipherSuites -> g
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator apn -> h
    io.netty.handler.ssl.ClientAuth clientAuth -> j
    javax.net.ssl.SSLContext sslContext -> k
    boolean isClient -> l
    163:172:void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean) -> <init>
    178:178:javax.net.ssl.SSLContext context() -> a
    183:183:boolean isClient() -> b
    191:194:javax.net.ssl.SSLSessionContext sessionContext() -> c
    215:215:javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator) -> a
    220:220:javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator,java.lang.String,int) -> a
    225:247:javax.net.ssl.SSLEngine configureAndWrapEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator) -> a
    263:316:io.netty.handler.ssl.JdkApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig,boolean) -> a
    56:120:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkSslContext$1 -> io.netty.c.d.ag:
    int[] $SwitchMap$io$netty$handler$ssl$ClientAuth -> a
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectorFailureBehavior -> b
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectedListenerFailureBehavior -> c
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol -> d
    229:282:void <clinit>() -> <clinit>
io.netty.handler.ssl.JdkSslEngine -> io.netty.c.d.ah:
    javax.net.ssl.SSLEngine engine -> a
    java.lang.String applicationProtocol -> b
    31:33:void <init>(javax.net.ssl.SSLEngine) -> <init>
    37:37:java.lang.String getNegotiatedApplicationProtocol() -> a
    41:42:void setNegotiatedApplicationProtocol(java.lang.String) -> a
    46:46:javax.net.ssl.SSLSession getSession() -> getSession
    50:50:javax.net.ssl.SSLEngine getWrappedEngine() -> b
    55:56:void closeInbound() -> closeInbound
    60:61:void closeOutbound() -> closeOutbound
    65:65:java.lang.String getPeerHost() -> getPeerHost
    70:70:int getPeerPort() -> getPeerPort
    75:75:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    80:80:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer) -> wrap
    85:85:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    90:90:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    95:95:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    100:100:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    105:105:java.lang.Runnable getDelegatedTask() -> getDelegatedTask
    110:110:boolean isInboundDone() -> isInboundDone
    115:115:boolean isOutboundDone() -> isOutboundDone
    120:120:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    125:125:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    130:131:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    135:135:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    140:140:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    145:146:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    150:150:javax.net.ssl.SSLSession getHandshakeSession() -> getHandshakeSession
    155:156:void beginHandshake() -> beginHandshake
    160:160:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus() -> getHandshakeStatus
    165:166:void setUseClientMode(boolean) -> setUseClientMode
    170:170:boolean getUseClientMode() -> getUseClientMode
    175:176:void setNeedClientAuth(boolean) -> setNeedClientAuth
    180:180:boolean getNeedClientAuth() -> getNeedClientAuth
    185:186:void setWantClientAuth(boolean) -> setWantClientAuth
    190:190:boolean getWantClientAuth() -> getWantClientAuth
    195:196:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    200:200:boolean getEnableSessionCreation() -> getEnableSessionCreation
    205:205:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    210:211:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
io.netty.handler.ssl.JdkSslServerContext -> io.netty.c.d.ai:
    237:240:void <init>(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean) -> <init>
    247:278:javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long) -> a
io.netty.handler.ssl.JettyAlpnSslEngine -> io.netty.c.d.aj:
    boolean available -> a
    37:37:boolean isAvailable() -> c
    41:50:boolean initAvailable() -> d
    55:55:io.netty.handler.ssl.JettyAlpnSslEngine newClientEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> a
    60:60:io.netty.handler.ssl.JettyAlpnSslEngine newServerEngine(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> b
    64:65:void <init>(javax.net.ssl.SSLEngine) -> <init>
    33:33:void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JettyAlpnSslEngine$1) -> <init>
    34:34:void <clinit>() -> <clinit>
io.netty.handler.ssl.JettyAlpnSslEngine$1 -> io.netty.c.d.ak:
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine -> io.netty.c.d.al:
    69:94:void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
    99:103:void closeInbound() -> closeInbound
    108:112:void closeOutbound() -> closeOutbound
io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1 -> io.netty.c.d.am:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator val$applicationNegotiator -> a
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener val$protocolListener -> b
    io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine this$0 -> c
    74:74:void <init>(io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener) -> <init>
io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine -> io.netty.c.d.an:
    117:137:void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
    142:146:void closeInbound() -> closeInbound
    151:155:void closeOutbound() -> closeOutbound
io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine$1 -> io.netty.c.d.ao:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector val$protocolSelector -> a
    io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine this$0 -> b
    122:122:void <init>(io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector) -> <init>
io.netty.handler.ssl.JettyNpnSslEngine -> io.netty.c.d.ap:
    boolean available -> a
    38:39:boolean isAvailable() -> c
    43:53:void updateAvailability() -> d
    56:109:void <init>(javax.net.ssl.SSLEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> <init>
    113:115:void closeInbound() -> closeInbound
    119:121:void closeOutbound() -> closeOutbound
io.netty.handler.ssl.JettyNpnSslEngine$1 -> io.netty.c.d.aq:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener val$protocolListener -> a
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator val$applicationNegotiator -> b
    io.netty.handler.ssl.JettyNpnSslEngine this$0 -> c
    63:63:void <init>(io.netty.handler.ssl.JettyNpnSslEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener,io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
io.netty.handler.ssl.JettyNpnSslEngine$2 -> io.netty.c.d.ar:
    io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector val$protocolSelector -> a
    io.netty.handler.ssl.JettyNpnSslEngine this$0 -> b
    87:87:void <init>(io.netty.handler.ssl.JettyNpnSslEngine,io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector) -> <init>
io.netty.handler.ssl.NotSslRecordException -> io.netty.c.d.as:
    33:34:void <init>() -> <init>
    37:38:void <init>(java.lang.String) -> <init>
io.netty.handler.ssl.OpenSsl -> io.netty.c.d.at:
    io.netty.util.internal.logging.InternalLogger logger -> e
    java.lang.Throwable UNAVAILABILITY_CAUSE -> f
    java.util.List DEFAULT_CIPHERS -> a
    java.util.Set AVAILABLE_CIPHER_SUITES -> b
    java.util.Set AVAILABLE_OPENSSL_CIPHER_SUITES -> g
    java.util.Set AVAILABLE_JAVA_CIPHER_SUITES -> h
    boolean SUPPORTS_KEYMANAGER_FACTORY -> i
    boolean SUPPORTS_HOSTNAME_VALIDATION -> j
    boolean USE_KEYMANAGER_FACTORY -> k
    boolean SUPPORTS_OCSP -> l
    java.util.Set SUPPORTED_PROTOCOLS_SET -> c
    boolean $assertionsDisabled -> d
    248:263:boolean doesSupportOcsp() -> j
    266:274:boolean doesSupportProtocol(int) -> a
    285:285:boolean isAvailable() -> a
    293:293:boolean isAlpnSupported() -> b
    300:300:boolean isOcspSupported() -> c
    308:308:int version() -> d
    326:330:void ensureAvailability() -> e
    339:339:java.lang.Throwable unavailabilityCause() -> f
    355:355:java.util.Set availableOpenSslCipherSuites() -> g
    363:363:java.util.Set availableJavaCipherSuites() -> h
    371:375:boolean isCipherSuiteAvailable(java.lang.String) -> a
    394:394:boolean useKeyManagerFactory() -> i
    398:399:long memoryAddress(io.netty.buffer.ByteBuf) -> a
    402:402:void <init>() -> <init>
    405:423:void loadTcNative() -> k
    426:426:boolean initializeTcNative() -> l
    430:433:void releaseIfNeeded(io.netty.util.ReferenceCounted) -> a
    56:245:void <clinit>() -> <clinit>
io.netty.handler.ssl.OpenSsl$1 -> io.netty.c.d.au:
    155:155:void <init>() -> <init>
    158:158:java.lang.Boolean run() -> a
    155:155:java.lang.Object run() -> run
io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator -> io.netty.c.d.av:
    io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> b
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> c
    io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> d
io.netty.handler.ssl.OpenSslClientContext -> io.netty.c.d.aw:
    io.netty.handler.ssl.OpenSslSessionContext sessionContext -> j
    45:46:void <init>() -> <init>
    176:180:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    188:200:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long,boolean) -> <init>
    204:204:io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> a
    209:209:io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager() -> d
    36:36:javax.net.ssl.SSLSessionContext sessionContext() -> c
io.netty.handler.ssl.OpenSslContext -> io.netty.c.d.ax:
    34:36:void <init>(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,int,java.security.cert.Certificate[],io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    43:45:void <init>(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,int,java.security.cert.Certificate[],io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    49:49:javax.net.ssl.SSLEngine newEngine0(io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> a
    55:57:void finalize() -> finalize
io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator -> io.netty.c.d.ay:
    io.netty.handler.ssl.ApplicationProtocolConfig config -> a
    30:32:void <init>(io.netty.handler.ssl.ApplicationProtocolConfig) -> <init>
    36:36:java.util.List protocols() -> a
    41:41:io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> b
    46:46:io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> c
    51:51:io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> d
io.netty.handler.ssl.OpenSslEngine -> io.netty.c.d.az:
    32:33:void <init>(io.netty.handler.ssl.OpenSslContext,io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> <init>
    38:40:void finalize() -> finalize
io.netty.handler.ssl.OpenSslEngineMap -> io.netty.c.d.aA:
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine remove(long) -> a
    void add(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> a
io.netty.handler.ssl.OpenSslExtendedKeyMaterialManager -> io.netty.c.d.aB:
    javax.net.ssl.X509ExtendedKeyManager keyManager -> a
    26:28:void <init>(javax.net.ssl.X509ExtendedKeyManager,java.lang.String) -> <init>
    38:38:java.lang.String chooseServerAlias(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String) -> a
io.netty.handler.ssl.OpenSslJavaxX509Certificate -> io.netty.c.d.aC:
    byte[] bytes -> a
    javax.security.cert.X509Certificate wrapped -> b
    35:37:void <init>(byte[]) -> <init>
    41:42:void checkValidity() -> checkValidity
    46:47:void checkValidity(java.util.Date) -> checkValidity
    51:51:int getVersion() -> getVersion
    56:56:java.math.BigInteger getSerialNumber() -> getSerialNumber
    61:61:java.security.Principal getIssuerDN() -> getIssuerDN
    66:66:java.security.Principal getSubjectDN() -> getSubjectDN
    71:71:java.util.Date getNotBefore() -> getNotBefore
    76:76:java.util.Date getNotAfter() -> getNotAfter
    81:81:java.lang.String getSigAlgName() -> getSigAlgName
    86:86:java.lang.String getSigAlgOID() -> getSigAlgOID
    91:91:byte[] getSigAlgParams() -> getSigAlgParams
    96:96:byte[] getEncoded() -> getEncoded
    103:104:void verify(java.security.PublicKey) -> verify
    110:111:void verify(java.security.PublicKey,java.lang.String) -> verify
    115:115:java.lang.String toString() -> toString
    120:120:java.security.PublicKey getPublicKey() -> getPublicKey
    124:132:javax.security.cert.X509Certificate unwrap() -> a
io.netty.handler.ssl.OpenSslKeyMaterialManager -> io.netty.c.d.aD:
    java.util.Map KEY_TYPES -> a
    javax.net.ssl.X509KeyManager keyManager -> b
    java.lang.String password -> c
    68:71:void <init>(javax.net.ssl.X509KeyManager,java.lang.String) -> <init>
    74:86:void setKeyMaterial(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> a
    131:169:void setKeyMaterial(long,java.lang.String) -> a
    177:177:java.lang.String chooseServerAlias(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String) -> a
    54:63:void <clinit>() -> <clinit>
io.netty.handler.ssl.OpenSslServerContext -> io.netty.c.d.aE:
    io.netty.handler.ssl.OpenSslServerSessionContext sessionContext -> j
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager -> k
    335:338:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    347:362:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    366:366:io.netty.handler.ssl.OpenSslServerSessionContext sessionContext() -> e
    371:371:io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager() -> d
    38:38:io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> a
    38:38:javax.net.ssl.SSLSessionContext sessionContext() -> c
io.netty.handler.ssl.OpenSslServerSessionContext -> io.netty.c.d.aF:
    29:30:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
    34:44:void setSessionTimeout(int) -> setSessionTimeout
    48:53:int getSessionTimeout() -> getSessionTimeout
    59:69:void setSessionCacheSize(int) -> setSessionCacheSize
    73:78:int getSessionCacheSize() -> getSessionCacheSize
    84:93:void setSessionCacheEnabled(boolean) -> a
    116:121:boolean setSessionIdContext(byte[]) -> a
io.netty.handler.ssl.OpenSslSessionContext -> io.netty.c.d.aG:
    java.util.Enumeration EMPTY -> b
    io.netty.handler.ssl.OpenSslSessionStats stats -> c
    io.netty.handler.ssl.ReferenceCountedOpenSslContext context -> a
    43:46:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
    50:53:javax.net.ssl.SSLSession getSession(byte[]) -> getSession
    58:58:java.util.Enumeration getIds() -> getIds
    34:34:void <clinit>() -> <clinit>
io.netty.handler.ssl.OpenSslSessionContext$1 -> io.netty.c.d.aH:
io.netty.handler.ssl.OpenSslSessionContext$EmptyEnumeration -> io.netty.c.d.aI:
    126:126:void <init>() -> <init>
    129:129:boolean hasMoreElements() -> hasMoreElements
    134:134:byte[] nextElement() -> a
    126:126:java.lang.Object nextElement() -> nextElement
    126:126:void <init>(io.netty.handler.ssl.OpenSslSessionContext$1) -> <init>
io.netty.handler.ssl.OpenSslSessionStats -> io.netty.c.d.aJ:
    io.netty.handler.ssl.ReferenceCountedOpenSslContext context -> a
    36:38:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
io.netty.handler.ssl.OpenSslX509Certificate -> io.netty.c.d.aK:
    byte[] bytes -> a
    java.security.cert.X509Certificate wrapped -> b
    39:41:void <init>(byte[]) -> <init>
    45:46:void checkValidity() -> checkValidity
    50:51:void checkValidity(java.util.Date) -> checkValidity
    55:55:int getVersion() -> getVersion
    60:60:java.math.BigInteger getSerialNumber() -> getSerialNumber
    65:65:java.security.Principal getIssuerDN() -> getIssuerDN
    70:70:java.security.Principal getSubjectDN() -> getSubjectDN
    75:75:java.util.Date getNotBefore() -> getNotBefore
    80:80:java.util.Date getNotAfter() -> getNotAfter
    85:85:byte[] getTBSCertificate() -> getTBSCertificate
    90:90:byte[] getSignature() -> getSignature
    95:95:java.lang.String getSigAlgName() -> getSigAlgName
    100:100:java.lang.String getSigAlgOID() -> getSigAlgOID
    105:105:byte[] getSigAlgParams() -> getSigAlgParams
    110:110:boolean[] getIssuerUniqueID() -> getIssuerUniqueID
    115:115:boolean[] getSubjectUniqueID() -> getSubjectUniqueID
    120:120:boolean[] getKeyUsage() -> getKeyUsage
    125:125:int getBasicConstraints() -> getBasicConstraints
    130:130:byte[] getEncoded() -> getEncoded
    137:138:void verify(java.security.PublicKey) -> verify
    144:145:void verify(java.security.PublicKey,java.lang.String) -> verify
    149:149:java.lang.String toString() -> toString
    154:154:java.security.PublicKey getPublicKey() -> getPublicKey
    159:159:boolean hasUnsupportedCriticalExtension() -> hasUnsupportedCriticalExtension
    164:164:java.util.Set getCriticalExtensionOIDs() -> getCriticalExtensionOIDs
    169:169:java.util.Set getNonCriticalExtensionOIDs() -> getNonCriticalExtensionOIDs
    174:174:byte[] getExtensionValue(java.lang.String) -> getExtensionValue
    178:187:java.security.cert.X509Certificate unwrap() -> a
io.netty.handler.ssl.PemEncoded -> io.netty.c.d.aL:
    boolean isSensitive() -> a
    io.netty.handler.ssl.PemEncoded retain() -> b
io.netty.handler.ssl.PemPrivateKey -> io.netty.c.d.aM:
    byte[] BEGIN_PRIVATE_KEY -> a
    byte[] END_PRIVATE_KEY -> b
    io.netty.buffer.ByteBuf content -> c
    59:89:io.netty.handler.ssl.PemEncoded toPEM(io.netty.buffer.ByteBufAllocator,boolean,java.security.PrivateKey) -> a
    121:121:boolean isSensitive() -> a
    126:131:io.netty.buffer.ByteBuf content() -> content
    156:157:io.netty.handler.ssl.PemPrivateKey touch() -> c
    162:163:io.netty.handler.ssl.PemPrivateKey touch(java.lang.Object) -> a
    168:168:io.netty.handler.ssl.PemPrivateKey retain() -> d
    173:173:io.netty.handler.ssl.PemPrivateKey retain(int) -> a
    180:181:void deallocate() -> deallocate
    185:185:byte[] getEncoded() -> getEncoded
    190:190:java.lang.String getAlgorithm() -> getAlgorithm
    195:195:java.lang.String getFormat() -> getFormat
    206:207:void destroy() -> destroy
    217:217:boolean isDestroyed() -> isDestroyed
    43:43:io.netty.util.ReferenceCounted touch() -> touch
    43:43:io.netty.util.ReferenceCounted retain(int) -> retain
    43:43:io.netty.util.ReferenceCounted retain() -> retain
    43:43:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    43:43:io.netty.handler.ssl.PemEncoded retain() -> b
    46:47:void <clinit>() -> <clinit>
io.netty.handler.ssl.PemReader -> io.netty.c.d.aN:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.util.regex.Pattern CERT_PATTERN -> b
    java.util.regex.Pattern KEY_PATTERN -> c
    61:69:io.netty.buffer.ByteBuf[] readCertificates(java.io.File) -> a
    76:101:io.netty.buffer.ByteBuf[] readCertificates(java.io.InputStream) -> a
    106:114:io.netty.buffer.ByteBuf readPrivateKey(java.io.File) -> b
    121:135:io.netty.buffer.ByteBuf readPrivateKey(java.io.InputStream) -> b
    139:151:java.lang.String readContent(java.io.InputStream) -> c
    157:161:void safeClose(java.io.InputStream) -> d
    165:169:void safeClose(java.io.OutputStream) -> a
    171:171:void <init>() -> <init>
    46:53:void <clinit>() -> <clinit>
io.netty.handler.ssl.PemValue -> io.netty.c.d.aO:
    io.netty.buffer.ByteBuf content -> a
    boolean sensitive -> b
    37:40:void <init>(io.netty.buffer.ByteBuf,boolean) -> <init>
    44:44:boolean isSensitive() -> a
    49:54:io.netty.buffer.ByteBuf content() -> content
    79:79:io.netty.handler.ssl.PemValue touch() -> c
    84:85:io.netty.handler.ssl.PemValue touch(java.lang.Object) -> a
    90:90:io.netty.handler.ssl.PemValue retain() -> d
    95:95:io.netty.handler.ssl.PemValue retain(int) -> a
    100:104:void deallocate() -> deallocate
    31:31:io.netty.util.ReferenceCounted touch() -> touch
    31:31:io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:io.netty.util.ReferenceCounted retain() -> retain
    31:31:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:io.netty.handler.ssl.PemEncoded retain() -> b
io.netty.handler.ssl.PemX509Certificate -> io.netty.c.d.aP:
    byte[] BEGIN_CERT -> a
    byte[] END_CERT -> b
    io.netty.buffer.ByteBuf content -> c
    58:96:io.netty.handler.ssl.PemEncoded toPEM(io.netty.buffer.ByteBufAllocator,boolean,java.security.cert.X509Certificate[]) -> a
    108:116:io.netty.buffer.ByteBuf append(io.netty.buffer.ByteBufAllocator,boolean,io.netty.handler.ssl.PemEncoded,int,io.netty.buffer.ByteBuf) -> a
    126:148:io.netty.buffer.ByteBuf append(io.netty.buffer.ByteBufAllocator,boolean,java.security.cert.X509Certificate,int,io.netty.buffer.ByteBuf) -> a
    152:152:io.netty.buffer.ByteBuf newBuffer(io.netty.buffer.ByteBufAllocator,boolean,int) -> a
    184:184:boolean isSensitive() -> a
    189:189:int refCnt() -> refCnt
    194:199:io.netty.buffer.ByteBuf content() -> content
    224:225:io.netty.handler.ssl.PemX509Certificate retain() -> c
    230:231:io.netty.handler.ssl.PemX509Certificate retain(int) -> a
    236:237:io.netty.handler.ssl.PemX509Certificate touch() -> d
    242:243:io.netty.handler.ssl.PemX509Certificate touch(java.lang.Object) -> a
    248:248:boolean release() -> release
    253:253:boolean release(int) -> release
    258:258:byte[] getEncoded() -> getEncoded
    263:263:boolean hasUnsupportedCriticalExtension() -> hasUnsupportedCriticalExtension
    268:268:java.util.Set getCriticalExtensionOIDs() -> getCriticalExtensionOIDs
    273:273:java.util.Set getNonCriticalExtensionOIDs() -> getNonCriticalExtensionOIDs
    278:278:byte[] getExtensionValue(java.lang.String) -> getExtensionValue
    283:283:void checkValidity() -> checkValidity
    288:288:void checkValidity(java.util.Date) -> checkValidity
    293:293:int getVersion() -> getVersion
    298:298:java.math.BigInteger getSerialNumber() -> getSerialNumber
    303:303:java.security.Principal getIssuerDN() -> getIssuerDN
    308:308:java.security.Principal getSubjectDN() -> getSubjectDN
    313:313:java.util.Date getNotBefore() -> getNotBefore
    318:318:java.util.Date getNotAfter() -> getNotAfter
    323:323:byte[] getTBSCertificate() -> getTBSCertificate
    328:328:byte[] getSignature() -> getSignature
    333:333:java.lang.String getSigAlgName() -> getSigAlgName
    338:338:java.lang.String getSigAlgOID() -> getSigAlgOID
    343:343:byte[] getSigAlgParams() -> getSigAlgParams
    348:348:boolean[] getIssuerUniqueID() -> getIssuerUniqueID
    353:353:boolean[] getSubjectUniqueID() -> getSubjectUniqueID
    358:358:boolean[] getKeyUsage() -> getKeyUsage
    363:363:int getBasicConstraints() -> getBasicConstraints
    368:368:void verify(java.security.PublicKey) -> verify
    373:373:void verify(java.security.PublicKey,java.lang.String) -> verify
    378:378:java.security.PublicKey getPublicKey() -> getPublicKey
    383:390:boolean equals(java.lang.Object) -> equals
    395:395:int hashCode() -> hashCode
    400:400:java.lang.String toString() -> toString
    47:47:io.netty.handler.ssl.PemEncoded retain() -> b
    47:47:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    47:47:io.netty.util.ReferenceCounted touch() -> touch
    47:47:io.netty.util.ReferenceCounted retain(int) -> retain
    47:47:io.netty.util.ReferenceCounted retain() -> retain
    49:50:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext -> io.netty.c.d.aQ:
    io.netty.util.internal.logging.InternalLogger logger -> j
    io.netty.handler.ssl.OpenSslSessionContext sessionContext -> k
    59:71:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long,boolean) -> <init>
    75:75:io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager() -> d
    80:80:io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> a
    89:151:io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory) -> a
    48:48:javax.net.ssl.SSLSessionContext sessionContext() -> c
    49:50:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback -> io.netty.c.d.aR:
    javax.net.ssl.X509ExtendedTrustManager manager -> a
    214:216:void <init>(io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509ExtendedTrustManager) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslCertificateRequestedCallback -> io.netty.c.d.aS:
    io.netty.handler.ssl.OpenSslEngineMap engineMap -> a
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyManagerHolder -> b
    229:232:void <init>(io.netty.handler.ssl.OpenSslEngineMap,io.netty.handler.ssl.OpenSslKeyMaterialManager) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientSessionContext -> io.netty.c.d.aT:
    157:158:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
    162:165:void setSessionTimeout(int) -> setSessionTimeout
    169:169:int getSessionTimeout() -> getSessionTimeout
    174:177:void setSessionCacheSize(int) -> setSessionCacheSize
    181:181:int getSessionCacheSize() -> getSessionCacheSize
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$TrustManagerVerifyCallback -> io.netty.c.d.aU:
    javax.net.ssl.X509TrustManager manager -> a
    199:201:void <init>(io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509TrustManager) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslContext -> io.netty.c.d.aV:
    io.netty.util.internal.logging.InternalLogger logger -> j
    boolean JDK_REJECT_CLIENT_INITIATED_RENEGOTIATION -> k
    int DEFAULT_BIO_NON_APPLICATION_BUFFER_SIZE -> l
    java.lang.Integer DH_KEY_LENGTH -> m
    io.netty.util.ResourceLeakDetector leakDetector -> n
    long ctx -> a
    java.util.List unmodifiableCiphers -> o
    long sessionCacheSize -> p
    long sessionTimeout -> q
    io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator apn -> r
    int mode -> s
    io.netty.util.ResourceLeakTracker leak -> t
    io.netty.util.AbstractReferenceCounted refCnt -> u
    java.security.cert.Certificate[] keyCertChain -> b
    io.netty.handler.ssl.ClientAuth clientAuth -> c
    java.lang.String[] protocols -> d
    boolean enableOcsp -> e
    io.netty.handler.ssl.OpenSslEngineMap engineMap -> f
    java.util.concurrent.locks.ReadWriteLock ctxLock -> g
    boolean rejectRemoteInitiatedRenegotiation -> v
    int bioNonApplicationBufferSize -> w
    io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator NONE_PROTOCOL_NEGOTIATOR -> h
    207:209:void <init>(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,int,java.security.cert.Certificate[],io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,boolean) -> <init>
    125:338:void <init>(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,int,java.security.cert.Certificate[],io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,boolean) -> <init>
    341:347:int opensslSelectorFailureBehavior(io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior) -> a
    368:368:io.netty.handler.ssl.ApplicationProtocolNegotiator applicationProtocolNegotiator() -> f
    373:373:boolean isClient() -> b
    378:378:javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator,java.lang.String,int) -> a
    383:383:io.netty.handler.ssl.SslHandler newHandler(io.netty.buffer.ByteBufAllocator,boolean) -> a
    392:392:javax.net.ssl.SSLEngine newEngine0(io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> a
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager() -> d
    402:402:javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator) -> a
    445:445:boolean getRejectRemoteInitiatedRenegotiation() -> g
    461:461:int getBioNonApplicationBufferSize() -> h
    io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> a
    499:513:void destroy() -> e
    524:529:javax.net.ssl.X509TrustManager chooseTrustManager(javax.net.ssl.TrustManager[]) -> a
    533:538:javax.net.ssl.X509KeyManager chooseX509KeyManager(javax.net.ssl.KeyManager[]) -> a
    550:581:io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig) -> a
    586:586:boolean useExtendedTrustManager(javax.net.ssl.X509TrustManager) -> a
    590:590:boolean useExtendedKeyManager(javax.net.ssl.X509KeyManager) -> a
    595:595:int refCnt() -> refCnt
    600:601:io.netty.util.ReferenceCounted retain() -> retain
    606:607:io.netty.util.ReferenceCounted retain(int) -> retain
    612:613:io.netty.util.ReferenceCounted touch() -> touch
    618:619:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    624:624:boolean release() -> release
    629:629:boolean release(int) -> release
    722:753:void setKeyMaterial(long,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String) -> a
    756:759:void freeBio(long) -> a
    766:775:long toBIO(java.security.PrivateKey) -> a
    784:797:long toBIO(java.security.cert.X509Certificate[]) -> a
    805:827:long toBIO(io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.PemEncoded) -> a
    833:841:long newBIO(io.netty.buffer.ByteBuf) -> a
    75:75:javax.net.ssl.SSLSessionContext sessionContext() -> c
    75:75:io.netty.util.ResourceLeakTracker access$000(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> a
    75:75:void access$100(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> b
    76:201:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslContext$1 -> io.netty.c.d.aW:
    87:87:void <init>() -> <init>
    90:90:java.lang.Boolean run() -> a
    87:87:java.lang.Object run() -> run
io.netty.handler.ssl.ReferenceCountedOpenSslContext$2 -> io.netty.c.d.aX:
    95:95:void <init>() -> <init>
    98:99:java.lang.Integer run() -> a
    95:95:java.lang.Object run() -> run
io.netty.handler.ssl.ReferenceCountedOpenSslContext$3 -> io.netty.c.d.aY:
    boolean $assertionsDisabled -> a
    io.netty.handler.ssl.ReferenceCountedOpenSslContext this$0 -> b
    125:125:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
    128:132:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    137:142:void deallocate() -> deallocate
    125:125:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslContext$4 -> io.netty.c.d.aZ:
    157:157:void <init>() -> <init>
    160:160:io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> b
    165:165:java.util.List protocols() -> a
    170:170:io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> c
    175:175:io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> d
io.netty.handler.ssl.ReferenceCountedOpenSslContext$5 -> io.netty.c.d.ba:
    183:183:void <init>() -> <init>
    186:186:java.lang.String run() -> a
    183:183:java.lang.Object run() -> run
io.netty.handler.ssl.ReferenceCountedOpenSslContext$6 -> io.netty.c.d.bb:
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol -> a
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectorFailureBehavior -> b
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectedListenerFailureBehavior -> c
    291:560:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier -> io.netty.c.d.bc:
    io.netty.handler.ssl.OpenSslEngineMap engineMap -> a
    635:637:void <init>(io.netty.handler.ssl.OpenSslEngineMap) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslContext$DefaultOpenSslEngineMap -> io.netty.c.d.bd:
    java.util.Map engines -> a
    700:701:void <init>() -> <init>
    705:705:io.netty.handler.ssl.ReferenceCountedOpenSslEngine remove(long) -> a
    710:711:void add(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> a
    700:700:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext$1) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslEngine -> io.netty.c.d.be:
    io.netty.util.internal.logging.InternalLogger logger -> e
    javax.net.ssl.SSLException BEGIN_HANDSHAKE_ENGINE_CLOSED -> f
    javax.net.ssl.SSLException HANDSHAKE_ENGINE_CLOSED -> g
    javax.net.ssl.SSLException RENEGOTIATION_UNSUPPORTED -> h
    io.netty.util.ResourceLeakDetector leakDetector -> i
    int[] OPENSSL_OP_NO_PROTOCOLS -> j
    int MAX_PLAINTEXT_LENGTH -> a
    int MAX_RECORD_SIZE -> k
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater DESTROYED_UPDATER -> l
    javax.net.ssl.SSLEngineResult NEED_UNWRAP_OK -> m
    javax.net.ssl.SSLEngineResult NEED_UNWRAP_CLOSED -> n
    javax.net.ssl.SSLEngineResult NEED_WRAP_OK -> o
    javax.net.ssl.SSLEngineResult NEED_WRAP_CLOSED -> p
    javax.net.ssl.SSLEngineResult CLOSED_NOT_HANDSHAKING -> q
    long ssl -> r
    long networkBIO -> s
    boolean certificateSet -> t
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState handshakeState -> u
    boolean renegotiationPending -> v
    boolean receivedShutdown -> w
    int destroyed -> x
    java.lang.String applicationProtocol -> y
    io.netty.util.ResourceLeakTracker leak -> z
    io.netty.util.AbstractReferenceCounted refCnt -> A
    io.netty.handler.ssl.ClientAuth clientAuth -> B
    long lastAccessed -> C
    java.lang.String endPointIdentificationAlgorithm -> D
    java.lang.Object algorithmConstraints -> E
    java.util.List sniHostNames -> F
    java.util.Collection matchers -> G
    boolean isInboundDone -> H
    boolean outboundClosed -> I
    boolean jdkCompatibilityMode -> b
    boolean clientMode -> J
    io.netty.buffer.ByteBufAllocator alloc -> K
    io.netty.handler.ssl.OpenSslEngineMap engineMap -> L
    io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator apn -> M
    boolean rejectRemoteInitiatedRenegotiation -> N
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$OpenSslSession session -> O
    java.security.cert.Certificate[] localCerts -> P
    java.nio.ByteBuffer[] singleSrcBuffer -> Q
    java.nio.ByteBuffer[] singleDstBuffer -> R
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager -> S
    boolean enableOcsp -> T
    int maxWrapOverhead -> U
    int maxWrapBufferSize -> V
    javax.net.ssl.SSLHandshakeException handshakeException -> c
    boolean $assertionsDisabled -> d
    165:302:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext,io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean) -> <init>
    342:342:int refCnt() -> refCnt
    347:348:io.netty.util.ReferenceCounted retain() -> retain
    353:354:io.netty.util.ReferenceCounted retain(int) -> retain
    359:360:io.netty.util.ReferenceCounted touch() -> touch
    365:366:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    371:371:boolean release() -> release
    376:376:boolean release(int) -> release
    385:390:javax.net.ssl.SSLSession getHandshakeSession() -> getHandshakeSession
    400:400:long sslPointer() -> b
    407:417:void shutdown() -> c
    425:452:int writePlaintextData(java.nio.ByteBuffer,int) -> a
    459:479:io.netty.buffer.ByteBuf writeEncryptedData(java.nio.ByteBuffer,int) -> b
    487:509:int readPlaintextData(java.nio.ByteBuffer) -> a
    523:523:int maxEncryptedPacketLength() -> d
    531:531:int maxEncryptedPacketLength0() -> e
    540:540:int calculateMaxLengthForWrap(int,int) -> a
    544:544:int sslPending() -> f
    551:557:void calculateMaxWrapOverhead() -> h
    564:564:int sslPending0() -> i
    568:568:boolean isBytesAvailableEnoughForWrap(int,int,int) -> a
    575:820:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    824:824:javax.net.ssl.SSLEngineResult newResult(javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> a
    832:842:javax.net.ssl.SSLEngineResult newResult(javax.net.ssl.SSLEngineResult$Status,javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> a
    847:847:javax.net.ssl.SSLEngineResult newResultMayFinishHandshake(javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> b
    854:854:javax.net.ssl.SSLEngineResult newResultMayFinishHandshake(javax.net.ssl.SSLEngineResult$Status,javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> b
    862:863:javax.net.ssl.SSLException shutdownWithError(java.lang.String) -> a
    867:876:javax.net.ssl.SSLException shutdownWithError(java.lang.String,java.lang.String) -> a
    884:1106:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int) -> a
    1110:1124:javax.net.ssl.SSLEngineResult sslReadErrorResult(int,int,int) -> b
    1128:1131:void closeAll() -> j
    1137:1143:void rejectRemoteInitiatedRenegotiation() -> k
    1146:1146:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],java.nio.ByteBuffer[]) -> a
    1150:1151:java.nio.ByteBuffer[] singleSrcBuffer(java.nio.ByteBuffer) -> b
    1155:1156:void resetSingleSrcBuffer() -> l
    1159:1160:java.nio.ByteBuffer[] singleDstBuffer(java.nio.ByteBuffer) -> c
    1164:1165:void resetSingleDstBuffer() -> m
    1171:1173:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    1180:1182:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    1189:1192:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    1199:1201:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    1209:1209:java.lang.Runnable getDelegatedTask() -> getDelegatedTask
    1214:1230:void closeInbound() -> closeInbound
    1234:1234:boolean isInboundDone() -> isInboundDone
    1239:1254:void closeOutbound() -> closeOutbound
    1261:1281:boolean doSSLShutdown() -> n
    1288:1288:boolean isOutboundDone() -> isOutboundDone
    1293:1293:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    1299:1317:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    1323:1362:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    1366:1366:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    1371:1398:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    1404:1404:boolean isProtocolEnabled(int,int,java.lang.String) -> a
    1418:1486:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    1490:1490:javax.net.ssl.SSLSession getSession() -> getSession
    1495:1558:void beginHandshake() -> beginHandshake
    1561:1564:void checkEngineClosed(javax.net.ssl.SSLException) -> a
    1568:1568:javax.net.ssl.SSLEngineResult$HandshakeStatus pendingStatus(int) -> a
    1572:1572:boolean isEmpty(java.lang.Object[]) -> b
    1576:1576:boolean isEmpty(byte[]) -> b
    1580:1635:javax.net.ssl.SSLEngineResult$HandshakeStatus handshake() -> o
    1640:1645:javax.net.ssl.SSLEngineResult$HandshakeStatus mayFinishHandshake(javax.net.ssl.SSLEngineResult$HandshakeStatus) -> a
    1651:1651:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus() -> getHandshakeStatus
    1656:1656:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus(int) -> b
    1660:1661:boolean needPendingStatus() -> p
    1668:1673:java.lang.String toJavaCipherSuite(java.lang.String) -> b
    1681:1693:java.lang.String toJavaCipherSuitePrefix(java.lang.String) -> c
    1699:1702:void setUseClientMode(boolean) -> setUseClientMode
    1706:1706:boolean getUseClientMode() -> getUseClientMode
    1711:1712:void setNeedClientAuth(boolean) -> setNeedClientAuth
    1716:1716:boolean getNeedClientAuth() -> getNeedClientAuth
    1721:1722:void setWantClientAuth(boolean) -> setWantClientAuth
    1726:1726:boolean getWantClientAuth() -> getWantClientAuth
    1739:1762:void setClientAuth(io.netty.handler.ssl.ClientAuth) -> a
    1766:1769:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    1773:1773:boolean getEnableSessionCreation() -> getEnableSessionCreation
    1778:1796:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    1801:1840:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
    1843:1843:boolean isDestroyed() -> q
    1852:1852:java.lang.String getNegotiatedApplicationProtocol() -> a
    93:93:io.netty.util.ResourceLeakTracker access$000(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> a
    93:93:boolean access$100(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> b
    93:93:long access$200(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> c
    93:93:long access$300(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> d
    93:93:java.lang.String access$400(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String) -> a
    93:93:void access$500(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> e
    93:93:io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState access$602(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState) -> a
    93:93:boolean access$700(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> f
    93:93:boolean access$800(java.lang.Object[]) -> a
    93:93:boolean access$900(byte[]) -> a
    93:93:io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator access$1000(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> g
    93:93:java.lang.String access$1102(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String) -> b
    93:93:java.security.cert.Certificate[] access$1200(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> h
    93:93:int access$1300() -> g
    93:139:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$1 -> io.netty.c.d.bf:
    boolean $assertionsDisabled -> a
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0 -> b
    173:173:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> <init>
    176:180:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    185:190:void deallocate() -> deallocate
    173:173:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2 -> io.netty.c.d.bg:
    int[] $SwitchMap$io$netty$handler$ssl$ReferenceCountedOpenSslEngine$HandshakeState -> a
    int[] $SwitchMap$io$netty$handler$ssl$ClientAuth -> b
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol -> c
    385:2063:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState -> io.netty.c.d.bh:
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState NOT_STARTED -> a
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState STARTED_IMPLICITLY -> b
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState STARTED_EXPLICITLY -> c
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState FINISHED -> d
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState[] $VALUES -> e
    146:146:io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState[] values() -> values
    146:146:io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState valueOf(java.lang.String) -> valueOf
    146:146:void <init>(java.lang.String,int) -> <init>
    146:162:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslEngine$OpenSslSession -> io.netty.c.d.bi:
    io.netty.handler.ssl.OpenSslSessionContext sessionContext -> c
    javax.security.cert.X509Certificate[] x509PeerCerts -> d
    java.security.cert.Certificate[] peerCerts -> e
    java.lang.String protocol -> f
    java.lang.String cipher -> g
    byte[] id -> h
    long creationTime -> i
    int applicationBufferSize -> j
    java.util.Map values -> k
    boolean $assertionsDisabled -> a
    io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0 -> b
    1866:1873:void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,io.netty.handler.ssl.OpenSslSessionContext) -> <init>
    1877:1882:byte[] getId() -> getId
    1887:1887:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    1892:1897:long getCreationTime() -> getCreationTime
    1902:1904:long getLastAccessedTime() -> getLastAccessedTime
    1909:1914:void invalidate() -> invalidate
    1918:1923:boolean isValid() -> isValid
    1928:1944:void putValue(java.lang.String,java.lang.Object) -> putValue
    1948:1954:java.lang.Object getValue(java.lang.String) -> getValue
    1959:1968:void removeValue(java.lang.String) -> removeValue
    1972:1976:java.lang.String[] getValueNames() -> getValueNames
    1980:1983:void notifyUnbound(java.lang.Object,java.lang.String) -> a
    1990:2005:void handshakeFinished() -> a
    2013:2046:void initPeerCerts() -> b
    2049:2054:void initCerts(byte[][],int) -> a
    2060:2095:void selectApplicationProtocol() -> c
    2100:2111:java.lang.String selectApplicationProtocol(java.util.List,io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior,java.lang.String) -> a
    2119:2124:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    2129:2132:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    2137:2142:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    2147:2150:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    2155:2159:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    2164:2169:java.lang.String getCipherSuite() -> getCipherSuite
    2174:2184:java.lang.String getProtocol() -> getProtocol
    2189:2189:java.lang.String getPeerHost() -> getPeerHost
    2194:2194:int getPeerPort() -> getPeerPort
    2199:2199:int getPacketBufferSize() -> getPacketBufferSize
    2204:2204:int getApplicationBufferSize() -> getApplicationBufferSize
    2214:2217:void tryExpandApplicationBufferSize(int) -> a
    1855:1855:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslServerContext -> io.netty.c.d.bj:
    io.netty.util.internal.logging.InternalLogger logger -> j
    byte[] ID -> k
    io.netty.handler.ssl.OpenSslServerSessionContext sessionContext -> l
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager -> m
    59:62:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    70:85:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> <init>
    89:89:io.netty.handler.ssl.OpenSslServerSessionContext sessionContext() -> e
    94:94:io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager() -> d
    108:189:io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory) -> a
    46:46:io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> a
    46:46:javax.net.ssl.SSLSessionContext sessionContext() -> c
    47:49:void <clinit>() -> <clinit>
io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ExtendedTrustManagerVerifyCallback -> io.netty.c.d.bk:
    javax.net.ssl.X509ExtendedTrustManager manager -> a
    211:213:void <init>(io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509ExtendedTrustManager) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$OpenSslSniHostnameMatcher -> io.netty.c.d.bl:
    io.netty.handler.ssl.OpenSslEngineMap engineMap -> a
    225:227:void <init>(io.netty.handler.ssl.OpenSslEngineMap) -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext -> io.netty.c.d.bm:
    io.netty.handler.ssl.OpenSslServerSessionContext sessionContext -> a
    io.netty.handler.ssl.OpenSslKeyMaterialManager keyMaterialManager -> b
    97:97:void <init>() -> <init>
io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$TrustManagerVerifyCallback -> io.netty.c.d.bn:
    javax.net.ssl.X509TrustManager manager -> a
    196:198:void <init>(io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509TrustManager) -> <init>
io.netty.handler.ssl.SniCompletionEvent -> io.netty.c.d.bo:
    java.lang.String hostname -> a
    28:30:void <init>(java.lang.String) -> <init>
    33:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    38:39:void <init>(java.lang.Throwable) -> <init>
    50:52:java.lang.String toString() -> toString
io.netty.handler.ssl.SniHandler -> io.netty.c.d.bp:
    io.netty.handler.ssl.SniHandler$Selection EMPTY_SELECTION -> b
    io.netty.util.AsyncMapping mapping -> a
    io.netty.handler.ssl.SniHandler$Selection selection -> c
    50:51:void <init>(io.netty.util.Mapping) -> <init>
    41:72:void <init>(io.netty.util.AsyncMapping) -> <init>
    96:96:io.netty.util.concurrent.Future lookup(io.netty.channel.ChannelHandlerContext,java.lang.String) -> a
    102:118:void onLookupComplete(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.util.concurrent.Future) -> a
    130:143:void replaceHandler(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.handler.ssl.SslContext) -> a
    37:37:void <clinit>() -> <clinit>
io.netty.handler.ssl.SniHandler$1 -> io.netty.c.d.bq:
io.netty.handler.ssl.SniHandler$AsyncMappingAdapter -> io.netty.c.d.br:
    io.netty.util.Mapping mapping -> a
    148:150:void <init>(io.netty.util.Mapping) -> <init>
    156:160:io.netty.util.concurrent.Future map(java.lang.String,io.netty.util.concurrent.Promise) -> a
    145:145:io.netty.util.concurrent.Future map(java.lang.Object,io.netty.util.concurrent.Promise) -> a
    145:145:void <init>(io.netty.util.Mapping,io.netty.handler.ssl.SniHandler$1) -> <init>
io.netty.handler.ssl.SniHandler$Selection -> io.netty.c.d.bs:
    io.netty.handler.ssl.SslContext context -> a
    java.lang.String hostname -> b
    168:171:void <init>(io.netty.handler.ssl.SslContext,java.lang.String) -> <init>
io.netty.handler.ssl.SslCloseCompletionEvent -> io.netty.c.d.bt:
    io.netty.handler.ssl.SslCloseCompletionEvent SUCCESS -> a
    28:28:void <init>() -> <init>
    35:36:void <init>(java.lang.Throwable) -> <init>
    23:23:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslCompletionEvent -> io.netty.c.d.bu:
    java.lang.Throwable cause -> a
    24:26:void <init>() -> <init>
    28:30:void <init>(java.lang.Throwable) -> <init>
    44:44:java.lang.Throwable cause() -> a
    49:51:java.lang.String toString() -> toString
io.netty.handler.ssl.SslContext -> io.netty.c.d.bv:
    java.security.cert.CertificateFactory X509_CERT_FACTORY -> i
    boolean startTls -> a
    105:105:io.netty.handler.ssl.SslProvider defaultServerProvider() -> i
    114:114:io.netty.handler.ssl.SslProvider defaultClientProvider() -> j
    118:121:io.netty.handler.ssl.SslProvider defaultProvider() -> a
    406:432:io.netty.handler.ssl.SslContext newServerContextInternal(io.netty.handler.ssl.SslProvider,java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean) -> a
    437:440:void verifyNullSslContextProvider(io.netty.handler.ssl.SslProvider,java.security.Provider) -> a
    762:786:io.netty.handler.ssl.SslContext newClientContextInternal(io.netty.handler.ssl.SslProvider,java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long,boolean) -> a
    806:807:void <init>() -> <init>
    812:814:void <init>(boolean) -> <init>
    820:820:boolean isServer() -> k
    boolean isClient() -> b
    javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator) -> a
    javax.net.ssl.SSLEngine newEngine(io.netty.buffer.ByteBufAllocator,java.lang.String,int) -> a
    javax.net.ssl.SSLSessionContext sessionContext() -> c
    905:905:io.netty.handler.ssl.SslHandler newHandler(io.netty.buffer.ByteBufAllocator) -> b
    913:913:io.netty.handler.ssl.SslHandler newHandler(io.netty.buffer.ByteBufAllocator,boolean) -> a
    974:986:java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[]) -> a
    1001:1004:java.security.KeyStore buildKeyStore(java.security.cert.X509Certificate[],java.security.PrivateKey,char[]) -> a
    1011:1014:java.security.PrivateKey toPrivateKey(java.io.File,java.lang.String) -> a
    1031:1045:java.security.PrivateKey getPrivateKeyFromByteBuffer(io.netty.buffer.ByteBuf,java.lang.String) -> a
    1067:1070:java.security.cert.X509Certificate[] toX509Certificates(java.io.File) -> a
    1081:1104:java.security.cert.X509Certificate[] getCertificatesFromBuffers(io.netty.buffer.ByteBuf[]) -> a
    1110:1126:javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory) -> a
    1131:1133:java.security.PrivateKey toPrivateKeyInternal(java.io.File,java.lang.String) -> b
    1139:1141:java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File) -> b
    1149:1153:javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory) -> a
    1161:1169:javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.cert.X509Certificate[],java.lang.String,java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory) -> a
    91:95:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslContext$1 -> io.netty.c.d.bw:
    int[] $SwitchMap$io$netty$handler$ssl$SslProvider -> a
    410:410:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslContextBuilder -> io.netty.c.d.bx:
    boolean forServer -> a
    io.netty.handler.ssl.SslProvider provider -> b
    java.security.Provider sslContextProvider -> c
    java.security.cert.X509Certificate[] trustCertCollection -> d
    javax.net.ssl.TrustManagerFactory trustManagerFactory -> e
    java.security.cert.X509Certificate[] keyCertChain -> f
    java.security.PrivateKey key -> g
    java.lang.String keyPassword -> h
    javax.net.ssl.KeyManagerFactory keyManagerFactory -> i
    java.lang.Iterable ciphers -> j
    io.netty.handler.ssl.CipherSuiteFilter cipherFilter -> k
    io.netty.handler.ssl.ApplicationProtocolConfig apn -> l
    long sessionCacheSize -> m
    long sessionTimeout -> n
    io.netty.handler.ssl.ClientAuth clientAuth -> o
    java.lang.String[] protocols -> p
    boolean startTls -> q
    boolean enableOcsp -> r
    43:43:io.netty.handler.ssl.SslContextBuilder forClient() -> a
    118:118:io.netty.handler.ssl.SslContextBuilder forServer(java.security.PrivateKey,java.lang.String,java.security.cert.X509Certificate[]) -> a
    128:128:io.netty.handler.ssl.SslContextBuilder forServer(javax.net.ssl.KeyManagerFactory) -> a
    141:152:void <init>(boolean) -> <init>
    158:159:io.netty.handler.ssl.SslContextBuilder sslProvider(io.netty.handler.ssl.SslProvider) -> a
    209:211:io.netty.handler.ssl.SslContextBuilder trustManager(javax.net.ssl.TrustManagerFactory) -> a
    308:328:io.netty.handler.ssl.SslContextBuilder keyManager(java.security.PrivateKey,java.lang.String,java.security.cert.X509Certificate[]) -> b
    340:347:io.netty.handler.ssl.SslContextBuilder keyManager(javax.net.ssl.KeyManagerFactory) -> b
    355:355:io.netty.handler.ssl.SslContextBuilder ciphers(java.lang.Iterable) -> a
    364:367:io.netty.handler.ssl.SslContextBuilder ciphers(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter) -> a
    374:375:io.netty.handler.ssl.SslContextBuilder applicationProtocolConfig(io.netty.handler.ssl.ApplicationProtocolConfig) -> a
    440:446:io.netty.handler.ssl.SslContext build() -> b
io.netty.handler.ssl.SslHandler -> io.netty.c.d.by:
    io.netty.util.internal.logging.InternalLogger logger -> c
    java.util.regex.Pattern IGNORABLE_CLASS_IN_STACK -> d
    java.util.regex.Pattern IGNORABLE_ERROR_MESSAGE -> e
    javax.net.ssl.SSLException SSLENGINE_CLOSED -> f
    javax.net.ssl.SSLException HANDSHAKE_TIMED_OUT -> g
    java.nio.channels.ClosedChannelException CHANNEL_CLOSED -> h
    io.netty.channel.ChannelHandlerContext ctx -> i
    javax.net.ssl.SSLEngine engine -> j
    io.netty.handler.ssl.SslHandler$SslEngineType engineType -> k
    java.util.concurrent.Executor delegatedTaskExecutor -> l
    boolean jdkCompatibilityMode -> m
    java.nio.ByteBuffer[] singleBuffer -> n
    boolean startTls -> o
    boolean sentFirstMessage -> p
    boolean flushedBeforeHandshake -> q
    boolean readDuringHandshake -> r
    boolean handshakeStarted -> s
    io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue pendingUnencryptedWrites -> t
    io.netty.util.concurrent.Promise handshakePromise -> u
    io.netty.handler.ssl.SslHandler$LazyChannelPromise sslClosePromise -> v
    boolean needsFlush -> w
    boolean outboundClosed -> x
    int packetLength -> y
    boolean firedChannelRead -> z
    long handshakeTimeoutMillis -> A
    long closeNotifyFlushTimeoutMillis -> B
    long closeNotifyReadTimeoutMillis -> C
    int wrapDataSize -> a
    boolean $assertionsDisabled -> b
    406:407:void <init>(javax.net.ssl.SSLEngine) -> <init>
    418:419:void <init>(javax.net.ssl.SSLEngine,boolean) -> <init>
    368:446:void <init>(javax.net.ssl.SSLEngine,boolean,java.util.concurrent.Executor) -> <init>
    579:579:javax.net.ssl.SSLEngine engine() -> a
    588:593:java.lang.String applicationProtocol() -> b
    603:603:io.netty.util.concurrent.Future handshakeFuture() -> c
    656:665:void handlerRemoved0(io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    669:670:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    675:676:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    680:681:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> deregister
    686:687:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> disconnect
    692:693:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> close
    697:702:void read(io.netty.channel.ChannelHandlerContext) -> read
    705:705:java.lang.IllegalStateException newPendingWritesNullException() -> f
    710:720:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    726:739:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    742:759:void wrapAndFlush(io.netty.channel.ChannelHandlerContext) -> a
    763:838:void wrap(io.netty.channel.ChannelHandlerContext,boolean) -> a
    842:864:void finishWrap(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise,boolean,boolean) -> a
    873:941:boolean wrapNonAppData(io.netty.channel.ChannelHandlerContext,boolean) -> b
    946:996:javax.net.ssl.SSLEngineResult wrap(io.netty.buffer.ByteBufAllocator,javax.net.ssl.SSLEngine,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> a
    1005:1011:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    1015:1032:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    1044:1098:boolean ignoreException(java.lang.Throwable) -> a
    1122:1167:void decodeJdkCompatible(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> a
    1171:1175:void decodeNonJdkCompatible(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> b
    1181:1189:void handleUnwrapThrowable(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> a
    1193:1198:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List) -> decode
    1203:1210:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    1214:1219:void readIfNeeded(io.netty.channel.ChannelHandlerContext) -> b
    1222:1225:void flushIfNeeded(io.netty.channel.ChannelHandlerContext) -> c
    1231:1232:void unwrapNonAppData(io.netty.channel.ChannelHandlerContext) -> d
    1239:1386:int unwrap(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,int,int) -> a
    1390:1391:java.nio.ByteBuffer toByteBuffer(io.netty.buffer.ByteBuf,int,int) -> b
    1401:1455:void runDelegatedTasks() -> g
    1465:1469:boolean setHandshakeSuccessIfStillHandshaking() -> h
    1476:1487:void setHandshakeSuccess() -> i
    1493:1494:void setHandshakeFailure(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> b
    1503:1526:void setHandshakeFailure(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,boolean,boolean) -> a
    1529:1532:void releaseAndFailAll(java.lang.Throwable) -> b
    1535:1538:void notifyHandshakeFailure(java.lang.Throwable,boolean) -> a
    1541:1550:void notifyClosePromise(java.lang.Throwable) -> c
    1554:1581:void closeOutboundAndChannel(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise,boolean) -> a
    1584:1590:void flush(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> a
    1594:1600:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    1603:1612:void startHandshakeProcessing() -> j
    1663:1703:void handshake(io.netty.util.concurrent.Promise) -> a
    1706:1734:void applyHandshakeTimeout(io.netty.util.concurrent.Promise) -> b
    1737:1739:void forceFlush(io.netty.channel.ChannelHandlerContext) -> e
    1746:1750:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    1755:1830:void safeClose(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise) -> a
    1839:1840:void addCloseListener(io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise) -> b
    1847:1851:io.netty.buffer.ByteBuf allocate(io.netty.channel.ChannelHandlerContext,int) -> a
    1860:1860:io.netty.buffer.ByteBuf allocateOutNetBuf(io.netty.channel.ChannelHandlerContext,int,int) -> a
    1913:1926:boolean attemptCopyToCumulation(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int) -> b
    165:165:javax.net.ssl.SSLEngine access$100(io.netty.handler.ssl.SslHandler) -> a
    165:165:java.nio.ByteBuffer[] access$200(io.netty.handler.ssl.SslHandler) -> b
    165:165:java.nio.ByteBuffer access$300(io.netty.buffer.ByteBuf,int,int) -> a
    165:165:boolean access$502(io.netty.handler.ssl.SslHandler,boolean) -> a
    165:165:void access$600(io.netty.handler.ssl.SslHandler,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> a
    165:165:io.netty.util.internal.logging.InternalLogger access$700() -> d
    165:165:io.netty.channel.ChannelHandlerContext access$800(io.netty.handler.ssl.SslHandler) -> c
    165:165:javax.net.ssl.SSLException access$1000() -> e
    165:165:void access$1100(io.netty.handler.ssl.SslHandler,java.lang.Throwable,boolean) -> a
    165:165:void access$1200(io.netty.handler.ssl.SslHandler,java.lang.Throwable) -> a
    165:165:void access$1300(io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise) -> a
    165:165:long access$1400(io.netty.handler.ssl.SslHandler) -> d
    165:165:io.netty.handler.ssl.SslHandler$LazyChannelPromise access$1500(io.netty.handler.ssl.SslHandler) -> e
    165:165:boolean access$1600(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int) -> a
    165:184:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslHandler$1 -> io.netty.c.d.bz:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.channel.ChannelPromise val$promise -> b
    io.netty.handler.ssl.SslHandler this$0 -> c
    628:637:void run() -> run
io.netty.handler.ssl.SslHandler$2 -> io.netty.c.d.bA:
    java.util.List val$tasks -> a
    java.util.concurrent.CountDownLatch val$latch -> b
    io.netty.handler.ssl.SslHandler this$0 -> c
    1426:1426:void <init>(io.netty.handler.ssl.SslHandler,java.util.List,java.util.concurrent.CountDownLatch) -> <init>
    1430:1438:void run() -> run
io.netty.handler.ssl.SslHandler$4 -> io.netty.c.d.bB:
    io.netty.util.concurrent.Promise val$newHandshakePromise -> a
    io.netty.handler.ssl.SslHandler this$0 -> b
    1668:1668:void <init>(io.netty.handler.ssl.SslHandler,io.netty.util.concurrent.Promise) -> <init>
    1671:1676:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.ssl.SslHandler$5 -> io.netty.c.d.bC:
    io.netty.util.concurrent.Promise val$promise -> a
    io.netty.handler.ssl.SslHandler this$0 -> b
    1713:1713:void <init>(io.netty.handler.ssl.SslHandler,io.netty.util.concurrent.Promise) -> <init>
    1716:1724:void run() -> run
io.netty.handler.ssl.SslHandler$6 -> io.netty.c.d.bD:
    java.util.concurrent.ScheduledFuture val$timeoutFuture -> a
    io.netty.handler.ssl.SslHandler this$0 -> b
    1728:1728:void <init>(io.netty.handler.ssl.SslHandler,java.util.concurrent.ScheduledFuture) -> <init>
    1731:1732:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.ssl.SslHandler$7 -> io.netty.c.d.bE:
    io.netty.channel.ChannelFuture val$flushFuture -> a
    io.netty.channel.ChannelHandlerContext val$ctx -> b
    io.netty.channel.ChannelPromise val$promise -> c
    io.netty.handler.ssl.SslHandler this$0 -> d
    1765:1765:void <init>(io.netty.handler.ssl.SslHandler,io.netty.channel.ChannelFuture,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    1769:1774:void run() -> run
io.netty.handler.ssl.SslHandler$8 -> io.netty.c.d.bF:
    java.util.concurrent.ScheduledFuture val$timeoutFuture -> a
    io.netty.channel.ChannelHandlerContext val$ctx -> b
    io.netty.channel.ChannelPromise val$promise -> c
    io.netty.handler.ssl.SslHandler this$0 -> d
    1784:1784:void <init>(io.netty.handler.ssl.SslHandler,java.util.concurrent.ScheduledFuture,io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise) -> <init>
    1788:1828:void operationComplete(io.netty.channel.ChannelFuture) -> a
    1784:1784:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.ssl.SslHandler$8$1 -> io.netty.c.d.bG:
    long val$closeNotifyReadTimeout -> a
    io.netty.handler.ssl.SslHandler$8 this$1 -> b
    1800:1800:void <init>(io.netty.handler.ssl.SslHandler$8,long) -> <init>
    1803:1811:void run() -> run
io.netty.handler.ssl.SslHandler$8$2 -> io.netty.c.d.bH:
    java.util.concurrent.ScheduledFuture val$closeNotifyReadTimeoutFuture -> a
    io.netty.handler.ssl.SslHandler$8 this$1 -> b
    1818:1818:void <init>(io.netty.handler.ssl.SslHandler$8,java.util.concurrent.ScheduledFuture) -> <init>
    1821:1825:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.ssl.SslHandler$9 -> io.netty.c.d.bI:
    int[] $SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus -> a
    int[] $SwitchMap$javax$net$ssl$SSLEngineResult$Status -> b
    807:983:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslHandler$LazyChannelPromise -> io.netty.c.d.bJ:
    io.netty.handler.ssl.SslHandler this$0 -> a
    1929:1929:void <init>(io.netty.handler.ssl.SslHandler) -> <init>
    1933:1936:io.netty.util.concurrent.EventExecutor executor() -> executor
    1941:1951:void checkDeadLock() -> checkDeadLock
    1929:1929:void <init>(io.netty.handler.ssl.SslHandler,io.netty.handler.ssl.SslHandler$1) -> <init>
io.netty.handler.ssl.SslHandler$SslEngineType -> io.netty.c.d.bK:
    io.netty.handler.ssl.SslHandler$SslEngineType TCNATIVE -> a
    io.netty.handler.ssl.SslHandler$SslEngineType CONSCRYPT -> b
    io.netty.handler.ssl.SslHandler$SslEngineType JDK -> c
    boolean wantsDirectBuffer -> d
    io.netty.handler.codec.ByteToMessageDecoder$Cumulator cumulator -> e
    io.netty.handler.ssl.SslHandler$SslEngineType[] $VALUES -> f
    193:193:io.netty.handler.ssl.SslHandler$SslEngineType[] values() -> values
    193:193:io.netty.handler.ssl.SslHandler$SslEngineType valueOf(java.lang.String) -> valueOf
    315:315:io.netty.handler.ssl.SslHandler$SslEngineType forEngine(javax.net.ssl.SSLEngine) -> a
    319:322:void <init>(java.lang.String,int,boolean,io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    javax.net.ssl.SSLEngineResult unwrap(io.netty.handler.ssl.SslHandler,io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf) -> a
    int calculateWrapBufferCapacity(io.netty.handler.ssl.SslHandler,int,int) -> a
    int calculatePendingData(io.netty.handler.ssl.SslHandler,int) -> a
    boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> b
    193:193:void <init>(java.lang.String,int,boolean,io.netty.handler.codec.ByteToMessageDecoder$Cumulator,io.netty.handler.ssl.SslHandler$1) -> <init>
    193:287:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslHandler$SslEngineType$1 -> io.netty.c.d.bL:
    194:194:void <init>(java.lang.String,int,boolean,io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    198:220:javax.net.ssl.SSLEngineResult unwrap(io.netty.handler.ssl.SslHandler,io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf) -> a
    230:230:int calculateWrapBufferCapacity(io.netty.handler.ssl.SslHandler,int,int) -> a
    236:237:int calculatePendingData(io.netty.handler.ssl.SslHandler,int) -> a
    242:242:boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> b
io.netty.handler.ssl.SslHandler$SslEngineType$2 -> io.netty.c.d.bM:
    245:245:void <init>(java.lang.String,int,boolean,io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    249:269:javax.net.ssl.SSLEngineResult unwrap(io.netty.handler.ssl.SslHandler,io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf) -> a
    274:274:int calculateWrapBufferCapacity(io.netty.handler.ssl.SslHandler,int,int) -> a
    279:279:int calculatePendingData(io.netty.handler.ssl.SslHandler,int) -> a
    284:284:boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> b
io.netty.handler.ssl.SslHandler$SslEngineType$3 -> io.netty.c.d.bN:
    287:287:void <init>(java.lang.String,int,boolean,io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    291:295:javax.net.ssl.SSLEngineResult unwrap(io.netty.handler.ssl.SslHandler,io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf) -> a
    300:300:int calculateWrapBufferCapacity(io.netty.handler.ssl.SslHandler,int,int) -> a
    305:305:int calculatePendingData(io.netty.handler.ssl.SslHandler,int) -> a
    310:310:boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> b
io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue -> io.netty.c.d.bO:
    io.netty.handler.ssl.SslHandler this$0 -> a
    1870:1872:void <init>(io.netty.handler.ssl.SslHandler,io.netty.channel.Channel,int) -> <init>
    1876:1887:io.netty.buffer.ByteBuf compose(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf) -> compose
    1892:1903:io.netty.buffer.ByteBuf composeFirst(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf) -> composeFirst
    1908:1908:io.netty.buffer.ByteBuf removeEmptyValue() -> removeEmptyValue
io.netty.handler.ssl.SslHandshakeCompletionEvent -> io.netty.c.d.bP:
    io.netty.handler.ssl.SslHandshakeCompletionEvent SUCCESS -> a
    30:30:void <init>() -> <init>
    37:38:void <init>(java.lang.Throwable) -> <init>
    25:25:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslProvider -> io.netty.c.d.bQ:
    io.netty.handler.ssl.SslProvider JDK -> a
    io.netty.handler.ssl.SslProvider OPENSSL -> b
    io.netty.handler.ssl.SslProvider OPENSSL_REFCNT -> c
    io.netty.handler.ssl.SslProvider[] $VALUES -> d
    25:25:io.netty.handler.ssl.SslProvider[] values() -> values
    25:25:io.netty.handler.ssl.SslProvider valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:37:void <clinit>() -> <clinit>
io.netty.handler.ssl.SslUtils -> io.netty.c.d.bR:
    java.lang.String[] DEFAULT_CIPHER_SUITES -> a
    106:111:void addIfSupported(java.util.Set,java.util.List,java.lang.String[]) -> a
    114:122:void useFallbackCiphersIfDefaultIsEmpty(java.util.List,java.lang.Iterable) -> a
    125:126:void useFallbackCiphersIfDefaultIsEmpty(java.util.List,java.lang.String[]) -> a
    132:136:javax.net.ssl.SSLHandshakeException toSSLHandshakeException(java.lang.Throwable) -> a
    157:205:int getEncryptedPacketLength(io.netty.buffer.ByteBuf,int) -> a
    211:212:int unsignedShortBE(io.netty.buffer.ByteBuf,int) -> b
    218:219:short shortBE(io.netty.buffer.ByteBuf,int) -> c
    223:223:short unsignedByte(byte) -> a
    228:228:int unsignedShortBE(java.nio.ByteBuffer,int) -> a
    233:234:short shortBE(java.nio.ByteBuffer,int) -> b
    238:258:int getEncryptedPacketLength(java.nio.ByteBuffer[],int) -> a
    262:310:int getEncryptedPacketLength(java.nio.ByteBuffer) -> a
    316:321:void notifyHandshakeFailure(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,boolean) -> a
    327:330:void zeroout(io.netty.buffer.ByteBuf) -> a
    336:338:void zerooutAndRelease(io.netty.buffer.ByteBuf) -> b
    346:349:io.netty.buffer.ByteBuf toBase64(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf) -> a
    87:87:void <clinit>() -> <clinit>
io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator -> io.netty.c.d.a.a:
    java.security.Provider PROVIDER -> a
    47:59:java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date) -> a
    43:43:void <clinit>() -> <clinit>
io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> io.netty.c.d.a.b:
    47:79:java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date) -> a
io.netty.handler.ssl.util.SelfSignedCertificate -> io.netty.c.d.a.c:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.util.Date DEFAULT_NOT_BEFORE -> b
    java.util.Date DEFAULT_NOT_AFTER -> c
    java.io.File certificate -> d
    java.io.File privateKey -> e
    java.security.cert.X509Certificate cert -> f
    java.security.PrivateKey key -> g
    79:80:void <init>() -> <init>
    88:89:void <init>(java.util.Date,java.util.Date) -> <init>
    110:111:void <init>(java.lang.String,java.util.Date,java.util.Date) -> <init>
    134:182:void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date) -> <init>
    202:202:java.security.cert.X509Certificate cert() -> a
    216:218:void delete() -> b
    223:286:java.lang.String[] newSelfSignedCertificate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate) -> a
    290:293:void safeDelete(java.io.File) -> a
    297:301:void safeClose(java.io.File,java.io.OutputStream) -> a
    61:67:void <clinit>() -> <clinit>
io.netty.handler.ssl.util.ThreadLocalInsecureRandom -> io.netty.c.d.a.d:
    java.security.SecureRandom INSTANCE -> a
    35:35:java.security.SecureRandom current() -> a
    38:38:void <init>() -> <init>
    42:42:java.lang.String getAlgorithm() -> getAlgorithm
    46:46:void setSeed(byte[]) -> setSeed
    49:49:void setSeed(long) -> setSeed
    53:54:void nextBytes(byte[]) -> nextBytes
    58:60:byte[] generateSeed(int) -> generateSeed
    65:65:int nextInt() -> nextInt
    70:70:int nextInt(int) -> nextInt
    75:75:boolean nextBoolean() -> nextBoolean
    80:80:long nextLong() -> nextLong
    85:85:float nextFloat() -> nextFloat
    90:90:double nextDouble() -> nextDouble
    95:95:double nextGaussian() -> nextGaussian
    99:99:java.util.Random random() -> b
    32:32:void <clinit>() -> <clinit>
io.netty.handler.stream.ChunkedFile -> io.netty.c.e.a:
    java.io.RandomAccessFile file -> a
    long startOffset -> b
    long endOffset -> c
    int chunkSize -> d
    long offset -> e
    84:108:void <init>(java.io.RandomAccessFile,long,long,int) -> <init>
    114:114:long startOffset() -> a
    121:121:long endOffset() -> b
    133:133:boolean isEndOfInput() -> c
    138:139:void close() -> d
    149:167:io.netty.buffer.ByteBuf readChunk(io.netty.buffer.ByteBufAllocator) -> a
    174:174:long length() -> e
    179:179:long progress() -> f
    34:34:java.lang.Object readChunk(io.netty.buffer.ByteBufAllocator) -> b
io.netty.handler.stream.ChunkedInput -> io.netty.c.e.b:
    boolean isEndOfInput() -> c
    void close() -> d
    java.lang.Object readChunk(io.netty.buffer.ByteBufAllocator) -> b
    long length() -> e
    long progress() -> f
io.netty.handler.stream.ChunkedWriteHandler -> io.netty.c.e.c:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.util.Queue queue -> b
    io.netty.channel.ChannelHandlerContext ctx -> c
    io.netty.handler.stream.ChunkedWriteHandler$PendingWrite currentWrite -> d
    73:78:void <init>() -> <init>
    93:94:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    100:128:void resumeTransfer() -> a
    132:133:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    137:138:void flush(io.netty.channel.ChannelHandlerContext) -> flush
    142:144:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    148:153:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    157:193:void discard(java.lang.Throwable) -> a
    196:318:void doFlush(io.netty.channel.ChannelHandlerContext) -> a
    322:328:void closeInput(io.netty.handler.stream.ChunkedInput) -> a
    68:68:void access$000(io.netty.handler.stream.ChunkedWriteHandler,io.netty.channel.ChannelHandlerContext) -> a
    68:68:io.netty.util.internal.logging.InternalLogger access$100() -> b
    70:71:void <clinit>() -> <clinit>
io.netty.handler.stream.ChunkedWriteHandler$1 -> io.netty.c.e.d:
    io.netty.channel.ChannelHandlerContext val$ctx -> a
    io.netty.handler.stream.ChunkedWriteHandler this$0 -> b
    114:114:void <init>(io.netty.handler.stream.ChunkedWriteHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    119:125:void run() -> run
io.netty.handler.stream.ChunkedWriteHandler$2 -> io.netty.c.e.e:
    io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite -> a
    io.netty.handler.stream.ChunkedInput val$chunks -> b
    io.netty.handler.stream.ChunkedWriteHandler this$0 -> c
    264:264:void <init>(io.netty.handler.stream.ChunkedWriteHandler,io.netty.handler.stream.ChunkedWriteHandler$PendingWrite,io.netty.handler.stream.ChunkedInput) -> <init>
    267:270:void operationComplete(io.netty.channel.ChannelFuture) -> a
    264:264:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.stream.ChunkedWriteHandler$3 -> io.netty.c.e.f:
    java.lang.Object val$pendingMessage -> a
    io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite -> b
    io.netty.handler.stream.ChunkedInput val$chunks -> c
    io.netty.handler.stream.ChunkedWriteHandler this$0 -> d
    273:273:void <init>(io.netty.handler.stream.ChunkedWriteHandler,java.lang.Object,io.netty.handler.stream.ChunkedWriteHandler$PendingWrite,io.netty.handler.stream.ChunkedInput) -> <init>
    276:282:void operationComplete(io.netty.channel.ChannelFuture) -> a
    273:273:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.stream.ChunkedWriteHandler$4 -> io.netty.c.e.g:
    java.lang.Object val$pendingMessage -> a
    io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite -> b
    io.netty.handler.stream.ChunkedInput val$chunks -> c
    io.netty.channel.Channel val$channel -> d
    io.netty.handler.stream.ChunkedWriteHandler this$0 -> e
    285:285:void <init>(io.netty.handler.stream.ChunkedWriteHandler,java.lang.Object,io.netty.handler.stream.ChunkedWriteHandler$PendingWrite,io.netty.handler.stream.ChunkedInput,io.netty.channel.Channel) -> <init>
    288:297:void operationComplete(io.netty.channel.ChannelFuture) -> a
    285:285:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.stream.ChunkedWriteHandler$PendingWrite -> io.netty.c.e.h:
    java.lang.Object msg -> a
    io.netty.channel.ChannelPromise promise -> b
    334:337:void <init>(java.lang.Object,io.netty.channel.ChannelPromise) -> <init>
    340:342:void fail(java.lang.Throwable) -> a
    345:356:void success(long) -> a
    359:362:void progress(long,long) -> a
io.netty.handler.timeout.IdleState -> io.netty.c.f.a:
    io.netty.handler.timeout.IdleState READER_IDLE -> a
    io.netty.handler.timeout.IdleState WRITER_IDLE -> b
    io.netty.handler.timeout.IdleState ALL_IDLE -> c
    io.netty.handler.timeout.IdleState[] $VALUES -> d
    24:24:io.netty.handler.timeout.IdleState[] values() -> values
    24:24:io.netty.handler.timeout.IdleState valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:36:void <clinit>() -> <clinit>
io.netty.handler.timeout.IdleStateEvent -> io.netty.c.f.b:
    io.netty.handler.timeout.IdleStateEvent FIRST_READER_IDLE_STATE_EVENT -> a
    io.netty.handler.timeout.IdleStateEvent READER_IDLE_STATE_EVENT -> b
    io.netty.handler.timeout.IdleStateEvent FIRST_WRITER_IDLE_STATE_EVENT -> c
    io.netty.handler.timeout.IdleStateEvent WRITER_IDLE_STATE_EVENT -> d
    io.netty.handler.timeout.IdleStateEvent FIRST_ALL_IDLE_STATE_EVENT -> e
    io.netty.handler.timeout.IdleStateEvent ALL_IDLE_STATE_EVENT -> f
    io.netty.handler.timeout.IdleState state -> g
    boolean first -> h
    41:44:void <init>(io.netty.handler.timeout.IdleState,boolean) -> <init>
    50:50:io.netty.handler.timeout.IdleState state() -> a
    25:30:void <clinit>() -> <clinit>
io.netty.handler.timeout.IdleStateHandler -> io.netty.c.f.c:
    long MIN_TIMEOUT_NANOS -> a
    io.netty.channel.ChannelFutureListener writeListener -> b
    boolean observeOutput -> c
    long readerIdleTimeNanos -> d
    long writerIdleTimeNanos -> e
    long allIdleTimeNanos -> f
    java.util.concurrent.ScheduledFuture readerIdleTimeout -> g
    long lastReadTime -> h
    boolean firstReaderIdleEvent -> i
    java.util.concurrent.ScheduledFuture writerIdleTimeout -> j
    long lastWriteTime -> k
    boolean firstWriterIdleEvent -> l
    java.util.concurrent.ScheduledFuture allIdleTimeout -> m
    boolean firstAllIdleEvent -> n
    byte state -> o
    boolean reading -> p
    long lastChangeCheckTimeStamp -> q
    int lastMessageHashCode -> r
    long lastPendingWriteBytes -> s
    154:156:void <init>(int,int,int) -> <init>
    164:165:void <init>(long,long,long,java.util.concurrent.TimeUnit) -> <init>
    102:213:void <init>(boolean,long,long,long,java.util.concurrent.TimeUnit) -> <init>
    241:249:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    253:254:void handlerRemoved(io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    259:263:void channelRegistered(io.netty.channel.ChannelHandlerContext) -> channelRegistered
    270:272:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    276:278:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    282:287:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    291:296:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    301:306:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    311:333:void initialize(io.netty.channel.ChannelHandlerContext) -> a
    339:339:long ticksInNanos() -> a
    346:346:java.util.concurrent.ScheduledFuture schedule(io.netty.channel.ChannelHandlerContext,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> a
    350:364:void destroy() -> b
    371:372:void channelIdle(io.netty.channel.ChannelHandlerContext,io.netty.handler.timeout.IdleStateEvent) -> a
    378:386:io.netty.handler.timeout.IdleStateEvent newIdleStateEvent(io.netty.handler.timeout.IdleState,boolean) -> a
    394:404:void initOutputChanged(io.netty.channel.ChannelHandlerContext) -> b
    414:449:boolean hasOutputChanged(io.netty.channel.ChannelHandlerContext,boolean) -> a
    98:98:long access$002(io.netty.handler.timeout.IdleStateHandler,long) -> a
    98:98:boolean access$102(io.netty.handler.timeout.IdleStateHandler,boolean) -> a
    98:98:boolean access$202(io.netty.handler.timeout.IdleStateHandler,boolean) -> b
    98:98:long access$300(io.netty.handler.timeout.IdleStateHandler) -> a
    98:98:boolean access$400(io.netty.handler.timeout.IdleStateHandler) -> b
    98:98:long access$500(io.netty.handler.timeout.IdleStateHandler) -> c
    98:98:java.util.concurrent.ScheduledFuture access$602(io.netty.handler.timeout.IdleStateHandler,java.util.concurrent.ScheduledFuture) -> a
    98:98:boolean access$700(io.netty.handler.timeout.IdleStateHandler) -> d
    98:98:boolean access$702(io.netty.handler.timeout.IdleStateHandler,boolean) -> c
    98:98:long access$000(io.netty.handler.timeout.IdleStateHandler) -> e
    98:98:long access$800(io.netty.handler.timeout.IdleStateHandler) -> f
    98:98:java.util.concurrent.ScheduledFuture access$902(io.netty.handler.timeout.IdleStateHandler,java.util.concurrent.ScheduledFuture) -> b
    98:98:boolean access$100(io.netty.handler.timeout.IdleStateHandler) -> g
    98:98:boolean access$1000(io.netty.handler.timeout.IdleStateHandler,io.netty.channel.ChannelHandlerContext,boolean) -> a
    98:98:long access$1100(io.netty.handler.timeout.IdleStateHandler) -> h
    98:98:java.util.concurrent.ScheduledFuture access$1202(io.netty.handler.timeout.IdleStateHandler,java.util.concurrent.ScheduledFuture) -> c
    98:98:boolean access$200(io.netty.handler.timeout.IdleStateHandler) -> i
    99:99:void <clinit>() -> <clinit>
io.netty.handler.timeout.IdleStateHandler$1 -> io.netty.c.f.d:
    io.netty.handler.timeout.IdleStateHandler this$0 -> a
    102:102:void <init>(io.netty.handler.timeout.IdleStateHandler) -> <init>
    105:107:void operationComplete(io.netty.channel.ChannelFuture) -> a
    102:102:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.handler.timeout.IdleStateHandler$2 -> io.netty.c.f.e:
    int[] $SwitchMap$io$netty$handler$timeout$IdleState -> a
    378:378:void <clinit>() -> <clinit>
io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask -> io.netty.c.f.f:
    io.netty.channel.ChannelHandlerContext ctx -> a
    456:458:void <init>(io.netty.channel.ChannelHandlerContext) -> <init>
    462:467:void run() -> run
    void run(io.netty.channel.ChannelHandlerContext) -> a
io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask -> io.netty.c.f.g:
    io.netty.handler.timeout.IdleStateHandler this$0 -> a
    542:544:void <init>(io.netty.handler.timeout.IdleStateHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    549:576:void run(io.netty.channel.ChannelHandlerContext) -> a
io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask -> io.netty.c.f.h:
    io.netty.handler.timeout.IdleStateHandler this$0 -> a
    474:476:void <init>(io.netty.handler.timeout.IdleStateHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    480:502:void run(io.netty.channel.ChannelHandlerContext) -> a
io.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask -> io.netty.c.f.i:
    io.netty.handler.timeout.IdleStateHandler this$0 -> a
    507:509:void <init>(io.netty.handler.timeout.IdleStateHandler,io.netty.channel.ChannelHandlerContext) -> <init>
    514:537:void run(io.netty.channel.ChannelHandlerContext) -> a
io.netty.resolver.AbstractAddressResolver -> io.netty.d.a:
    io.netty.util.concurrent.EventExecutor executor -> a
    io.netty.util.internal.TypeParameterMatcher matcher -> b
    45:48:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    55:58:void <init>(io.netty.util.concurrent.EventExecutor,java.lang.Class) -> <init>
    65:65:io.netty.util.concurrent.EventExecutor executor() -> a
    70:70:boolean isSupported(java.net.SocketAddress) -> a
    75:81:boolean isResolved(java.net.SocketAddress) -> b
    boolean doIsResolved(java.net.SocketAddress) -> c
    92:111:io.netty.util.concurrent.Future resolve(java.net.SocketAddress) -> d
    void doResolve(java.net.SocketAddress,io.netty.util.concurrent.Promise) -> a
    207:207:void close() -> close
io.netty.resolver.AddressResolver -> io.netty.d.b:
    boolean isSupported(java.net.SocketAddress) -> a
    boolean isResolved(java.net.SocketAddress) -> b
    io.netty.util.concurrent.Future resolve(java.net.SocketAddress) -> d
    void close() -> close
io.netty.resolver.AddressResolverGroup -> io.netty.d.c:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.util.Map resolvers -> b
    43:46:void <init>() -> <init>
    55:89:io.netty.resolver.AddressResolver getResolver(io.netty.util.concurrent.EventExecutor) -> a
    io.netty.resolver.AddressResolver newResolver(io.netty.util.concurrent.EventExecutor) -> b
    104:116:void close() -> close
    36:36:java.util.Map access$000(io.netty.resolver.AddressResolverGroup) -> a
    38:38:void <clinit>() -> <clinit>
io.netty.resolver.AddressResolverGroup$1 -> io.netty.d.d:
    io.netty.util.concurrent.EventExecutor val$executor -> a
    io.netty.resolver.AddressResolver val$newResolver -> b
    io.netty.resolver.AddressResolverGroup this$0 -> c
    75:75:void <init>(io.netty.resolver.AddressResolverGroup,io.netty.util.concurrent.EventExecutor,io.netty.resolver.AddressResolver) -> <init>
    78:82:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.DefaultAddressResolverGroup -> io.netty.d.e:
    io.netty.resolver.DefaultAddressResolverGroup INSTANCE -> a
    32:32:void <init>() -> <init>
    36:36:io.netty.resolver.AddressResolver newResolver(io.netty.util.concurrent.EventExecutor) -> b
    30:30:void <clinit>() -> <clinit>
io.netty.resolver.DefaultHostsFileEntriesResolver -> io.netty.d.f:
    java.util.Map inet4Entries -> b
    java.util.Map inet6Entries -> c
    36:37:void <init>() -> <init>
    40:43:void <init>(io.netty.resolver.HostsFileEntries) -> <init>
    47:60:java.net.InetAddress address(java.lang.String,io.netty.resolver.ResolvedAddressTypes) -> a
    66:66:java.lang.String normalize(java.lang.String) -> a
io.netty.resolver.DefaultHostsFileEntriesResolver$1 -> io.netty.d.g:
    int[] $SwitchMap$io$netty$resolver$ResolvedAddressTypes -> a
    48:48:void <clinit>() -> <clinit>
io.netty.resolver.DefaultNameResolver -> io.netty.d.h:
    37:38:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    43:47:void doResolve(java.lang.String,io.netty.util.concurrent.Promise) -> a
    52:56:void doResolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> b
io.netty.resolver.HostsFileEntries -> io.netty.d.i:
    io.netty.resolver.HostsFileEntries EMPTY -> a
    java.util.Map inet4Entries -> b
    java.util.Map inet6Entries -> c
    43:46:void <init>(java.util.Map,java.util.Map) -> <init>
    53:53:java.util.Map inet4Entries() -> a
    61:61:java.util.Map inet6Entries() -> b
    35:38:void <clinit>() -> <clinit>
io.netty.resolver.HostsFileEntriesResolver -> io.netty.d.j:
    io.netty.resolver.HostsFileEntriesResolver DEFAULT -> a
    java.net.InetAddress address(java.lang.String,io.netty.resolver.ResolvedAddressTypes) -> a
    31:31:void <clinit>() -> <clinit>
io.netty.resolver.HostsFileParser -> io.netty.d.k:
    java.util.regex.Pattern WHITESPACES -> a
    io.netty.util.internal.logging.InternalLogger logger -> b
    57:65:java.io.File locateHostsFile() -> b
    74:79:io.netty.resolver.HostsFileEntries parseSilently() -> a
    101:105:io.netty.resolver.HostsFileEntries parse(java.io.File) -> a
    117:184:io.netty.resolver.HostsFileEntries parse(java.io.Reader) -> a
    191:192:void <init>() -> <init>
    51:53:void <clinit>() -> <clinit>
io.netty.resolver.InetNameResolver -> io.netty.d.l:
    io.netty.resolver.AddressResolver addressResolver -> a
    37:38:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    45:54:io.netty.resolver.AddressResolver asAddressResolver() -> a
io.netty.resolver.InetSocketAddressResolver -> io.netty.d.m:
    io.netty.resolver.NameResolver nameResolver -> a
    43:45:void <init>(io.netty.util.concurrent.EventExecutor,io.netty.resolver.NameResolver) -> <init>
    49:49:boolean doIsResolved(java.net.InetSocketAddress) -> a
    57:68:void doResolve(java.net.InetSocketAddress,io.netty.util.concurrent.Promise) -> a
    96:97:void close() -> close
    32:32:void doResolve(java.net.SocketAddress,io.netty.util.concurrent.Promise) -> a
    32:32:boolean doIsResolved(java.net.SocketAddress) -> c
io.netty.resolver.InetSocketAddressResolver$1 -> io.netty.d.n:
    io.netty.util.concurrent.Promise val$promise -> a
    java.net.InetSocketAddress val$unresolvedAddress -> b
    io.netty.resolver.InetSocketAddressResolver this$0 -> c
    58:58:void <init>(io.netty.resolver.InetSocketAddressResolver,io.netty.util.concurrent.Promise,java.net.InetSocketAddress) -> <init>
    61:66:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.NameResolver -> io.netty.d.o:
    io.netty.util.concurrent.Future resolve(java.lang.String) -> a
    io.netty.util.concurrent.Future resolve(java.lang.String,io.netty.util.concurrent.Promise) -> c
    io.netty.util.concurrent.Future resolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> d
    void close() -> close
io.netty.resolver.NoopAddressResolver -> io.netty.d.p:
    35:36:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    40:40:boolean doIsResolved(java.net.SocketAddress) -> c
    45:46:void doResolve(java.net.SocketAddress,io.netty.util.concurrent.Promise) -> a
io.netty.resolver.NoopAddressResolverGroup -> io.netty.d.q:
    io.netty.resolver.NoopAddressResolverGroup INSTANCE -> a
    32:32:void <init>() -> <init>
    36:36:io.netty.resolver.AddressResolver newResolver(io.netty.util.concurrent.EventExecutor) -> b
    30:30:void <clinit>() -> <clinit>
io.netty.resolver.ResolvedAddressTypes -> io.netty.d.r:
    io.netty.resolver.ResolvedAddressTypes IPV4_ONLY -> a
    io.netty.resolver.ResolvedAddressTypes IPV6_ONLY -> b
    io.netty.resolver.ResolvedAddressTypes IPV4_PREFERRED -> c
    io.netty.resolver.ResolvedAddressTypes IPV6_PREFERRED -> d
    io.netty.resolver.ResolvedAddressTypes[] $VALUES -> e
    23:23:io.netty.resolver.ResolvedAddressTypes[] values() -> values
    23:23:io.netty.resolver.ResolvedAddressTypes valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    23:40:void <clinit>() -> <clinit>
io.netty.resolver.SimpleNameResolver -> io.netty.d.s:
    io.netty.util.concurrent.EventExecutor executor -> a
    40:42:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    49:49:io.netty.util.concurrent.EventExecutor executor() -> b
    54:55:io.netty.util.concurrent.Future resolve(java.lang.String) -> a
    60:66:io.netty.util.concurrent.Future resolve(java.lang.String,io.netty.util.concurrent.Promise) -> c
    78:84:io.netty.util.concurrent.Future resolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> d
    void doResolve(java.lang.String,io.netty.util.concurrent.Promise) -> a
    void doResolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> b
    99:99:void close() -> close
io.netty.resolver.dns.BiDnsQueryLifecycleObserver -> io.netty.d.a.a:
    io.netty.resolver.dns.DnsQueryLifecycleObserver a -> a
    io.netty.resolver.dns.DnsQueryLifecycleObserver b -> b
    41:44:void <init>(io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.resolver.dns.DnsQueryLifecycleObserver) -> <init>
    49:53:void queryWritten(java.net.InetSocketAddress,io.netty.channel.ChannelFuture) -> a
    58:62:void queryCancelled(int) -> a
    67:71:io.netty.resolver.dns.DnsQueryLifecycleObserver queryRedirected(java.util.List) -> a
    77:81:io.netty.resolver.dns.DnsQueryLifecycleObserver queryCNAMEd(io.netty.handler.codec.dns.DnsQuestion) -> a
    87:91:io.netty.resolver.dns.DnsQueryLifecycleObserver queryNoAnswer(io.netty.handler.codec.dns.DnsResponseCode) -> a
    97:101:void queryFailed(java.lang.Throwable) -> a
    106:110:void querySucceed() -> a
io.netty.resolver.dns.BiDnsQueryLifecycleObserverFactory -> io.netty.d.a.b:
    io.netty.resolver.dns.DnsQueryLifecycleObserverFactory a -> a
    io.netty.resolver.dns.DnsQueryLifecycleObserverFactory b -> b
    36:39:void <init>(io.netty.resolver.dns.DnsQueryLifecycleObserverFactory,io.netty.resolver.dns.DnsQueryLifecycleObserverFactory) -> <init>
    43:44:io.netty.resolver.dns.DnsQueryLifecycleObserver newDnsQueryLifecycleObserver(io.netty.handler.codec.dns.DnsQuestion) -> a
io.netty.resolver.dns.DefaultDnsCache -> io.netty.d.a.c:
    java.util.concurrent.ConcurrentMap resolveCache -> b
    int minTtl -> c
    int maxTtl -> d
    int negativeTtl -> e
    boolean $assertionsDisabled -> a
    53:54:void <init>() -> <init>
    42:70:void <init>(int,int,int) -> <init>
    100:106:void clear() -> a
    125:125:boolean emptyAdditionals(io.netty.handler.codec.dns.DnsRecord[]) -> a
    130:134:java.util.List get(java.lang.String,io.netty.handler.codec.dns.DnsRecord[]) -> a
    138:147:java.util.List cachedEntries(java.lang.String) -> a
    153:176:io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],java.net.InetAddress,long,io.netty.channel.EventLoop) -> a
    181:201:io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],java.lang.Throwable,io.netty.channel.EventLoop) -> a
    205:209:void cancelExpiration(java.util.List) -> a
    215:226:void scheduleCacheExpiration(java.util.List,io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry,int,io.netty.channel.EventLoop) -> a
    230:236:java.lang.String toString() -> toString
    40:40:java.util.concurrent.ConcurrentMap access$000(io.netty.resolver.dns.DefaultDnsCache) -> a
    39:39:void <clinit>() -> <clinit>
io.netty.resolver.dns.DefaultDnsCache$1 -> io.netty.d.a.d:
    java.util.List val$entries -> a
    io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry val$e -> b
    io.netty.resolver.dns.DefaultDnsCache this$0 -> c
    215:215:void <init>(io.netty.resolver.dns.DefaultDnsCache,java.util.List,io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry) -> <init>
    218:224:void run() -> run
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry -> io.netty.d.a.e:
    java.lang.String hostname -> b
    java.net.InetAddress address -> c
    java.lang.Throwable cause -> d
    io.netty.util.concurrent.ScheduledFuture expirationFuture -> e
    boolean $assertionsDisabled -> a
    245:249:void <init>(java.lang.String,java.net.InetAddress) -> <init>
    251:255:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    259:259:java.net.InetAddress address() -> a
    264:264:java.lang.Throwable cause() -> b
    268:268:java.lang.String hostname() -> c
    272:274:void scheduleExpiration(io.netty.channel.EventLoop,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> a
    277:281:void cancelExpiration() -> d
    285:288:java.lang.String toString() -> toString
    239:239:void <clinit>() -> <clinit>
io.netty.resolver.dns.DefaultDnsServerAddressStreamProvider -> io.netty.d.a.f:
    io.netty.util.internal.logging.InternalLogger logger -> b
    io.netty.resolver.dns.DefaultDnsServerAddressStreamProvider INSTANCE -> a
    java.util.List DEFAULT_NAME_SERVER_LIST -> c
    java.net.InetSocketAddress[] DEFAULT_NAME_SERVER_ARRAY -> d
    io.netty.resolver.dns.DnsServerAddresses DEFAULT_NAME_SERVERS -> e
    149:150:void <init>() -> <init>
    154:154:io.netty.resolver.dns.DnsServerAddressStream nameServerAddressStream(java.lang.String) -> nameServerAddressStream
    178:178:io.netty.resolver.dns.DnsServerAddresses defaultAddresses() -> a
    186:186:java.net.InetSocketAddress[] defaultAddressArray() -> b
    48:147:void <clinit>() -> <clinit>
io.netty.resolver.dns.DefaultDnsServerAddresses -> io.netty.d.a.g:
    java.net.InetSocketAddress[] addresses -> a
    java.lang.String strVal -> b
    26:40:void <init>(java.lang.String,java.net.InetSocketAddress[]) -> <init>
    44:44:java.lang.String toString() -> toString
io.netty.resolver.dns.DnsAddressResolverGroup -> io.netty.d.a.h:
    io.netty.channel.ChannelFactory channelFactory -> a
    io.netty.resolver.dns.DnsServerAddressStreamProvider nameServerProvider -> b
    java.util.concurrent.ConcurrentMap resolvesInProgress -> c
    java.util.concurrent.ConcurrentMap resolveAllsInProgress -> d
    48:62:void <init>(io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider) -> <init>
    67:73:io.netty.resolver.AddressResolver newResolver(io.netty.util.concurrent.EventExecutor) -> b
    84:90:io.netty.resolver.AddressResolver newResolver(io.netty.channel.EventLoop,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider) -> a
    101:104:io.netty.resolver.NameResolver newNameResolver(io.netty.channel.EventLoop,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider) -> b
    114:114:io.netty.resolver.AddressResolver newAddressResolver(io.netty.channel.EventLoop,io.netty.resolver.NameResolver) -> a
io.netty.resolver.dns.DnsCache -> io.netty.d.a.i:
    void clear() -> a
    java.util.List get(java.lang.String,io.netty.handler.codec.dns.DnsRecord[]) -> a
    io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],java.net.InetAddress,long,io.netty.channel.EventLoop) -> a
    io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],java.lang.Throwable,io.netty.channel.EventLoop) -> a
io.netty.resolver.dns.DnsCacheEntry -> io.netty.d.a.j:
    java.net.InetAddress address() -> a
    java.lang.Throwable cause() -> b
io.netty.resolver.dns.DnsNameResolver -> io.netty.d.a.k:
    io.netty.util.internal.logging.InternalLogger logger -> g
    java.net.InetAddress LOCALHOST_ADDRESS -> h
    io.netty.handler.codec.dns.DnsRecord[] EMPTY_ADDITIONALS -> i
    io.netty.handler.codec.dns.DnsRecordType[] IPV4_ONLY_RESOLVED_RECORD_TYPES -> j
    io.netty.channel.socket.InternetProtocolFamily[] IPV4_ONLY_RESOLVED_PROTOCOL_FAMILIES -> k
    io.netty.handler.codec.dns.DnsRecordType[] IPV4_PREFERRED_RESOLVED_RECORD_TYPES -> l
    io.netty.channel.socket.InternetProtocolFamily[] IPV4_PREFERRED_RESOLVED_PROTOCOL_FAMILIES -> m
    io.netty.handler.codec.dns.DnsRecordType[] IPV6_ONLY_RESOLVED_RECORD_TYPES -> n
    io.netty.channel.socket.InternetProtocolFamily[] IPV6_ONLY_RESOLVED_PROTOCOL_FAMILIES -> o
    io.netty.handler.codec.dns.DnsRecordType[] IPV6_PREFERRED_RESOLVED_RECORD_TYPES -> p
    io.netty.channel.socket.InternetProtocolFamily[] IPV6_PREFERRED_RESOLVED_PROTOCOL_FAMILIES -> q
    io.netty.resolver.ResolvedAddressTypes DEFAULT_RESOLVE_ADDRESS_TYPES -> a
    java.lang.String[] DEFAULT_SEARCH_DOMAINS -> b
    int DEFAULT_NDOTS -> r
    io.netty.handler.codec.dns.DatagramDnsResponseDecoder DECODER -> s
    io.netty.handler.codec.dns.DatagramDnsQueryEncoder ENCODER -> t
    io.netty.util.concurrent.Future channelFuture -> c
    io.netty.channel.socket.DatagramChannel ch -> d
    io.netty.resolver.dns.DnsQueryContextManager queryContextManager -> e
    io.netty.resolver.dns.DnsCache resolveCache -> u
    io.netty.resolver.dns.DnsCache authoritativeDnsServerCache -> v
    io.netty.util.concurrent.FastThreadLocal nameServerAddrStream -> w
    long queryTimeoutMillis -> x
    int maxQueriesPerResolve -> y
    io.netty.resolver.ResolvedAddressTypes resolvedAddressTypes -> z
    io.netty.channel.socket.InternetProtocolFamily[] resolvedInternetProtocolFamilies -> A
    boolean recursionDesired -> B
    int maxPayloadSize -> C
    boolean optResourceEnabled -> D
    io.netty.resolver.HostsFileEntriesResolver hostsFileEntriesResolver -> E
    io.netty.resolver.dns.DnsServerAddressStreamProvider dnsServerAddressStreamProvider -> F
    java.lang.String[] searchDomains -> G
    int ndots -> H
    boolean supportsAAAARecords -> I
    boolean supportsARecords -> J
    io.netty.channel.socket.InternetProtocolFamily preferredAddressType -> K
    io.netty.handler.codec.dns.DnsRecordType[] resolveRecordTypes -> L
    boolean decodeIdn -> M
    io.netty.resolver.dns.DnsQueryLifecycleObserverFactory dnsQueryLifecycleObserverFactory -> N
    boolean $assertionsDisabled -> f
    152:306:void <init>(io.netty.channel.EventLoop,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsQueryLifecycleObserverFactory,long,io.netty.resolver.ResolvedAddressTypes,boolean,int,boolean,int,boolean,io.netty.resolver.HostsFileEntriesResolver,io.netty.resolver.dns.DnsServerAddressStreamProvider,java.lang.String[],int,boolean) -> <init>
    310:310:int dnsRedirectPort(java.net.InetAddress) -> a
    314:314:io.netty.resolver.dns.DnsQueryLifecycleObserverFactory dnsQueryLifecycleObserverFactory() -> c
    323:323:io.netty.resolver.dns.DnsServerAddressStream uncachedRedirectDnsServerStream(java.util.List) -> a
    337:337:io.netty.resolver.dns.DnsCache authoritativeDnsServerCache() -> d
    345:345:long queryTimeoutMillis() -> e
    357:357:io.netty.channel.socket.InternetProtocolFamily[] resolvedInternetProtocolFamiliesUnsafe() -> f
    361:361:java.lang.String[] searchDomains() -> g
    365:365:int ndots() -> h
    369:369:boolean supportsAAAARecords() -> i
    373:373:boolean supportsARecords() -> j
    377:377:io.netty.channel.socket.InternetProtocolFamily preferredAddressType() -> k
    381:381:io.netty.handler.codec.dns.DnsRecordType[] resolveRecordTypes() -> l
    385:385:boolean isDecodeIdn() -> m
    393:393:boolean isRecursionDesired() -> n
    401:401:int maxQueriesPerResolve() -> o
    408:408:int maxPayloadSize() -> p
    416:416:boolean isOptResourceEnabled() -> q
    434:437:void close() -> close
    441:441:io.netty.channel.EventLoop executor() -> r
    445:455:java.net.InetAddress resolveHostsFileEntry(java.lang.String) -> b
    527:528:void doResolve(java.lang.String,io.netty.util.concurrent.Promise) -> a
    562:562:java.net.InetAddress loopbackAddress() -> v
    573:596:void doResolve(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> a
    602:637:boolean doResolveCached(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> c
    641:644:void trySuccess(io.netty.util.concurrent.Promise,java.lang.Object) -> b
    647:650:void tryFailure(io.netty.util.concurrent.Promise,java.lang.Throwable) -> a
    656:658:void doResolveUncached(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> d
    692:693:void doResolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> b
    703:726:void doResolveAll(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> b
    732:768:boolean doResolveAllCached(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> e
    813:815:void doResolveAllUncached(java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsCache) -> f
    818:823:java.lang.String hostname(java.lang.String) -> c
    900:900:boolean isTransportOrTimeoutError(java.lang.Throwable) -> a
    924:932:io.netty.util.concurrent.Future query0(java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,io.netty.handler.codec.dns.DnsRecord[],io.netty.channel.ChannelPromise,io.netty.util.concurrent.Promise) -> a
    938:938:io.netty.util.concurrent.Promise cast(io.netty.util.concurrent.Promise) -> a
    74:74:io.netty.util.concurrent.EventExecutor executor() -> b
    75:75:io.netty.resolver.dns.DnsServerAddressStreamProvider access$000(io.netty.resolver.dns.DnsNameResolver) -> a
    75:75:io.netty.handler.codec.dns.DatagramDnsResponseDecoder access$100() -> s
    75:75:io.netty.handler.codec.dns.DatagramDnsQueryEncoder access$200() -> t
    75:75:void access$400(io.netty.util.concurrent.Promise,java.lang.Object) -> a
    75:75:io.netty.util.internal.logging.InternalLogger access$500() -> u
    74:144:void <clinit>() -> <clinit>
io.netty.resolver.dns.DnsNameResolver$1 -> io.netty.d.a.l:
    io.netty.resolver.dns.DnsNameResolver this$0 -> a
    161:161:void <init>(io.netty.resolver.dns.DnsNameResolver) -> <init>
    164:164:io.netty.resolver.dns.DnsServerAddressStream initialValue() -> a
    161:161:java.lang.Object initialValue() -> initialValue
io.netty.resolver.dns.DnsNameResolver$2 -> io.netty.d.a.m:
    io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler val$responseHandler -> a
    io.netty.resolver.dns.DnsNameResolver this$0 -> b
    289:289:void <init>(io.netty.resolver.dns.DnsNameResolver,io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler) -> <init>
    292:293:void initChannel(io.netty.channel.socket.DatagramChannel) -> a
    289:289:void initChannel(io.netty.channel.Channel) -> initChannel
io.netty.resolver.dns.DnsNameResolver$3 -> io.netty.d.a.n:
    io.netty.resolver.dns.DnsCache val$resolveCache -> a
    io.netty.resolver.dns.DnsNameResolver this$0 -> b
    300:300:void <init>(io.netty.resolver.dns.DnsNameResolver,io.netty.resolver.dns.DnsCache) -> <init>
    303:304:void operationComplete(io.netty.channel.ChannelFuture) -> a
    300:300:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsNameResolver$4 -> io.netty.d.a.o:
    int[] $SwitchMap$io$netty$resolver$ResolvedAddressTypes -> a
    251:251:void <clinit>() -> <clinit>
io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler -> io.netty.d.a.p:
    io.netty.util.concurrent.Promise channelActivePromise -> b
    io.netty.resolver.dns.DnsNameResolver this$0 -> a
    945:947:void <init>(io.netty.resolver.dns.DnsNameResolver,io.netty.util.concurrent.Promise) -> <init>
    952:969:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    973:975:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    979:980:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    941:941:io.netty.util.concurrent.Promise access$300(io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler) -> a
io.netty.resolver.dns.DnsNameResolver$ListResolverContext -> io.netty.d.a.q:
    774:775:void <init>(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> <init>
    781:781:io.netty.resolver.dns.DnsNameResolverContext newResolverContext(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> a
    789:805:boolean finishResolve(java.lang.Class,java.util.List,io.netty.util.concurrent.Promise) -> a
io.netty.resolver.dns.DnsNameResolver$SingleResolverContext -> io.netty.d.a.r:
    663:664:void <init>(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> <init>
    670:670:io.netty.resolver.dns.DnsNameResolverContext newResolverContext(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> a
    678:686:boolean finishResolve(java.lang.Class,java.util.List,io.netty.util.concurrent.Promise) -> a
io.netty.resolver.dns.DnsNameResolverBuilder -> io.netty.d.a.s:
    io.netty.channel.EventLoop eventLoop -> a
    io.netty.channel.ChannelFactory channelFactory -> b
    io.netty.resolver.dns.DnsCache resolveCache -> c
    io.netty.resolver.dns.DnsCache authoritativeDnsServerCache -> d
    java.lang.Integer minTtl -> e
    java.lang.Integer maxTtl -> f
    java.lang.Integer negativeTtl -> g
    long queryTimeoutMillis -> h
    io.netty.resolver.ResolvedAddressTypes resolvedAddressTypes -> i
    boolean recursionDesired -> j
    int maxQueriesPerResolve -> k
    boolean traceEnabled -> l
    int maxPayloadSize -> m
    boolean optResourceEnabled -> n
    io.netty.resolver.HostsFileEntriesResolver hostsFileEntriesResolver -> o
    io.netty.resolver.dns.DnsServerAddressStreamProvider dnsServerAddressStreamProvider -> p
    io.netty.resolver.dns.DnsQueryLifecycleObserverFactory dnsQueryLifecycleObserverFactory -> q
    java.lang.String[] searchDomains -> r
    int ndots -> s
    boolean decodeIdn -> t
    46:69:void <init>(io.netty.channel.EventLoop) -> <init>
    78:79:io.netty.resolver.dns.DnsNameResolverBuilder channelFactory(io.netty.channel.ChannelFactory) -> a
    100:101:io.netty.resolver.dns.DnsNameResolverBuilder resolveCache(io.netty.resolver.dns.DnsCache) -> a
    122:123:io.netty.resolver.dns.DnsNameResolverBuilder authoritativeDnsServerCache(io.netty.resolver.dns.DnsCache) -> b
    162:163:io.netty.resolver.dns.DnsNameResolverBuilder queryTimeoutMillis(long) -> a
    216:217:io.netty.resolver.dns.DnsNameResolverBuilder recursionDesired(boolean) -> a
    227:228:io.netty.resolver.dns.DnsNameResolverBuilder maxQueriesPerResolve(int) -> a
    263:264:io.netty.resolver.dns.DnsNameResolverBuilder optResourceEnabled(boolean) -> b
    273:274:io.netty.resolver.dns.DnsNameResolverBuilder hostsFileEntriesResolver(io.netty.resolver.HostsFileEntriesResolver) -> a
    283:285:io.netty.resolver.dns.DnsNameResolverBuilder nameServerProvider(io.netty.resolver.dns.DnsServerAddressStreamProvider) -> a
    295:313:io.netty.resolver.dns.DnsNameResolverBuilder searchDomains(java.lang.Iterable) -> a
    324:325:io.netty.resolver.dns.DnsNameResolverBuilder ndots(int) -> b
    329:329:io.netty.resolver.dns.DnsCache newCache() -> b
    350:361:io.netty.resolver.dns.DnsNameResolver build() -> a
io.netty.resolver.dns.DnsNameResolverContext -> io.netty.d.a.t:
    io.netty.util.concurrent.FutureListener RELEASE_RESPONSE -> b
    java.lang.RuntimeException NXDOMAIN_QUERY_FAILED_EXCEPTION -> c
    java.lang.RuntimeException CNAME_NOT_FOUND_QUERY_FAILED_EXCEPTION -> d
    java.lang.RuntimeException NO_MATCHING_RECORD_QUERY_FAILED_EXCEPTION -> e
    java.lang.RuntimeException UNRECOGNIZED_TYPE_QUERY_FAILED_EXCEPTION -> f
    java.lang.RuntimeException NAME_SERVERS_EXHAUSTED_EXCEPTION -> g
    io.netty.resolver.dns.DnsNameResolver parent -> h
    io.netty.resolver.dns.DnsServerAddressStream nameServerAddrs -> i
    java.lang.String hostname -> j
    io.netty.resolver.dns.DnsCache resolveCache -> k
    int maxAllowedQueries -> l
    io.netty.channel.socket.InternetProtocolFamily[] resolvedInternetProtocolFamilies -> m
    io.netty.handler.codec.dns.DnsRecord[] additionals -> n
    java.util.Set queriesInProgress -> o
    java.util.List resolvedEntries -> p
    int allowedQueries -> q
    boolean triedCNAME -> r
    boolean $assertionsDisabled -> a
    103:125:void <init>(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> <init>
    128:157:void resolve(io.netty.util.concurrent.Promise) -> a
    160:165:boolean hasNDots() -> a
    186:191:void doSearchDomainQuery(java.lang.String,io.netty.util.concurrent.FutureListener) -> a
    194:205:void internalResolve(io.netty.util.concurrent.Promise) -> b
    212:217:void addNameServerToCache(io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServer,java.net.InetAddress,long) -> a
    224:258:io.netty.resolver.dns.DnsServerAddressStream getNameServersFromCache(java.lang.String) -> a
    295:297:void query(io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion,io.netty.util.concurrent.Promise,java.lang.Throwable) -> a
    305:350:void query(io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise,java.lang.Throwable) -> b
    357:386:void onResponse(io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> a
    394:438:boolean handleRedirect(io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> a
    446:455:io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServerList extractAuthoritativeNameServers(java.lang.String,io.netty.handler.codec.dns.DnsResponse) -> a
    464:522:void onResponseAorAAAA(io.netty.handler.codec.dns.DnsRecordType,io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> a
    525:542:java.net.InetAddress parseAddress(io.netty.handler.codec.dns.DnsRecord,java.lang.String) -> a
    549:550:void onResponseCNAME(io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> b
    558:578:void onResponseCNAME(io.netty.handler.codec.dns.DnsQuestion,io.netty.channel.AddressedEnvelope,java.util.Map,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> a
    581:607:java.util.Map buildAliasMap(io.netty.handler.codec.dns.DnsResponse) -> a
    617:664:void tryToFinishResolve(io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise,java.lang.Throwable) -> a
    667:679:boolean gotPreferredAddress() -> b
    683:730:void finishResolve(io.netty.util.concurrent.Promise,java.lang.Throwable) -> a
    boolean finishResolve(java.lang.Class,java.util.List,io.netty.util.concurrent.Promise) -> a
    io.netty.resolver.dns.DnsNameResolverContext newResolverContext(io.netty.resolver.dns.DnsNameResolver,java.lang.String,io.netty.handler.codec.dns.DnsRecord[],io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsServerAddressStream) -> a
    740:747:java.lang.String decodeDomainName(io.netty.buffer.ByteBuf) -> a
    752:753:io.netty.resolver.dns.DnsServerAddressStream getNameServers(java.lang.String) -> b
    758:783:void followCname(java.lang.String,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.util.concurrent.Promise) -> a
    787:792:boolean query(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,io.netty.resolver.dns.DnsServerAddressStream,io.netty.util.concurrent.Promise,java.lang.Throwable) -> a
    797:800:io.netty.handler.codec.dns.DnsQuestion newQuestion(java.lang.String,io.netty.handler.codec.dns.DnsRecordType) -> a
    60:60:java.lang.String access$000(io.netty.resolver.dns.DnsNameResolverContext) -> a
    60:60:void access$100(io.netty.resolver.dns.DnsNameResolverContext,java.lang.String,io.netty.util.concurrent.FutureListener) -> a
    60:60:void access$200(io.netty.resolver.dns.DnsNameResolverContext,io.netty.util.concurrent.Promise) -> a
    60:60:io.netty.resolver.dns.DnsNameResolver access$400(io.netty.resolver.dns.DnsNameResolverContext) -> b
    60:60:java.util.Set access$500(io.netty.resolver.dns.DnsNameResolverContext) -> c
    60:60:int access$600(io.netty.resolver.dns.DnsNameResolverContext) -> d
    60:60:void access$700(io.netty.resolver.dns.DnsNameResolverContext,io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion,io.netty.util.concurrent.Promise,java.lang.Throwable) -> a
    60:90:void <clinit>() -> <clinit>
io.netty.resolver.dns.DnsNameResolverContext$1 -> io.netty.d.a.u:
    66:66:void <init>() -> <init>
    69:72:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsNameResolverContext$2 -> io.netty.d.a.v:
    int searchDomainIdx -> f
    int val$initialSearchDomainIdx -> a
    io.netty.util.concurrent.Promise val$promise -> b
    java.lang.String[] val$searchDomains -> c
    boolean val$startWithoutSearchDomain -> d
    io.netty.resolver.dns.DnsNameResolverContext this$0 -> e
    136:137:void <init>(io.netty.resolver.dns.DnsNameResolverContext,int,io.netty.util.concurrent.Promise,java.lang.String[],boolean) -> <init>
    140:154:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsNameResolverContext$3 -> io.netty.d.a.w:
    io.netty.util.concurrent.Promise val$promise -> a
    io.netty.resolver.dns.DnsQueryLifecycleObserver val$queryLifecycleObserver -> b
    io.netty.resolver.dns.DnsServerAddressStream val$nameServerAddrStream -> c
    int val$nameServerAddrStreamIndex -> d
    io.netty.handler.codec.dns.DnsQuestion val$question -> e
    io.netty.resolver.dns.DnsNameResolverContext this$0 -> f
    321:321:void <init>(io.netty.resolver.dns.DnsNameResolverContext,io.netty.util.concurrent.Promise,io.netty.resolver.dns.DnsQueryLifecycleObserver,io.netty.resolver.dns.DnsServerAddressStream,int,io.netty.handler.codec.dns.DnsQuestion) -> <init>
    324:348:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServer -> io.netty.d.a.x:
    int dots -> a
    java.lang.String nsName -> b
    java.lang.String domainName -> c
    io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServer next -> d
    boolean removed -> e
    897:901:void <init>(int,java.lang.String,java.lang.String) -> <init>
    907:907:boolean isRootServer() -> a
    914:914:java.lang.String domainName() -> b
io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServerList -> io.netty.d.a.y:
    java.lang.String questionName -> a
    io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServer head -> b
    int count -> c
    815:817:void <init>(java.lang.String) -> <init>
    820:867:void add(io.netty.handler.codec.dns.DnsRecord) -> a
    872:881:io.netty.resolver.dns.DnsNameResolverContext$AuthoritativeNameServer remove(java.lang.String) -> a
    885:885:int size() -> a
io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable -> io.netty.d.a.z:
    java.util.List entries -> b
    io.netty.resolver.dns.DnsNameResolverContext this$0 -> a
    264:266:void <init>(io.netty.resolver.dns.DnsNameResolverContext,java.util.List) -> <init>
    270:270:java.util.Iterator iterator() -> iterator
    261:261:java.util.List access$300(io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable) -> a
io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable$1 -> io.netty.d.a.A:
    java.util.Iterator entryIterator -> a
    io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable this$1 -> b
    270:271:void <init>(io.netty.resolver.dns.DnsNameResolverContext$DnsCacheIterable) -> <init>
    275:275:boolean hasNext() -> hasNext
    280:281:java.net.InetSocketAddress next() -> a
    286:287:void remove() -> remove
    270:270:java.lang.Object next() -> next
io.netty.resolver.dns.DnsNameResolverContext$SearchDomainUnknownHostException -> io.netty.d.a.B:
    172:177:void <init>(java.lang.Throwable,java.lang.String) -> <init>
    181:181:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.netty.resolver.dns.DnsNameResolverException -> io.netty.d.a.C:
    java.net.InetSocketAddress remoteAddress -> a
    io.netty.handler.codec.dns.DnsQuestion question -> b
    37:40:void <init>(java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,java.lang.String) -> <init>
    44:47:void <init>(java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,java.lang.String,java.lang.Throwable) -> <init>
    50:50:java.net.InetSocketAddress validateRemoteAddress(java.net.InetSocketAddress) -> a
    54:54:io.netty.handler.codec.dns.DnsQuestion validateQuestion(io.netty.handler.codec.dns.DnsQuestion) -> a
    73:74:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.netty.resolver.dns.DnsNameResolverTimeoutException -> io.netty.d.a.D:
    33:34:void <init>(java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,java.lang.String) -> <init>
io.netty.resolver.dns.DnsQueryContext -> io.netty.d.a.E:
    io.netty.util.internal.logging.InternalLogger logger -> a
    io.netty.resolver.dns.DnsNameResolver parent -> b
    io.netty.util.concurrent.Promise promise -> c
    int id -> d
    io.netty.handler.codec.dns.DnsQuestion question -> e
    io.netty.handler.codec.dns.DnsRecord[] additionals -> f
    io.netty.handler.codec.dns.DnsRecord optResource -> g
    java.net.InetSocketAddress nameServerAddr -> h
    boolean recursionDesired -> i
    io.netty.util.concurrent.ScheduledFuture timeoutFuture -> j
    61:78:void <init>(io.netty.resolver.dns.DnsNameResolver,java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise) -> <init>
    81:81:java.net.InetSocketAddress nameServerAddr() -> a
    85:85:io.netty.handler.codec.dns.DnsQuestion question() -> b
    89:110:void query(io.netty.channel.ChannelPromise) -> a
    113:129:void sendQuery(io.netty.handler.codec.dns.DnsQuery,io.netty.channel.ChannelPromise) -> a
    132:143:void writeQuery(io.netty.handler.codec.dns.DnsQuery,io.netty.channel.ChannelPromise) -> b
    146:166:void onQueryWriteCompletion(io.netty.channel.ChannelFuture) -> a
    169:181:void finish(io.netty.channel.AddressedEnvelope) -> a
    184:202:void setSuccess(io.netty.channel.AddressedEnvelope) -> b
    205:224:void setFailure(java.lang.String,java.lang.Throwable) -> a
    42:42:void access$000(io.netty.resolver.dns.DnsQueryContext,io.netty.handler.codec.dns.DnsQuery,io.netty.channel.ChannelPromise) -> a
    42:42:io.netty.util.concurrent.Promise access$100(io.netty.resolver.dns.DnsQueryContext) -> a
    42:42:void access$200(io.netty.resolver.dns.DnsQueryContext,io.netty.channel.ChannelFuture) -> a
    42:42:void access$300(io.netty.resolver.dns.DnsQueryContext,java.lang.String,java.lang.Throwable) -> a
    44:44:void <clinit>() -> <clinit>
io.netty.resolver.dns.DnsQueryContext$1 -> io.netty.d.a.F:
    io.netty.resolver.dns.DnsQueryContext this$0 -> a
    72:72:void <init>(io.netty.resolver.dns.DnsQueryContext,int,int,int) -> <init>
io.netty.resolver.dns.DnsQueryContext$2 -> io.netty.d.a.G:
    io.netty.handler.codec.dns.DnsQuery val$query -> a
    io.netty.channel.ChannelPromise val$writePromise -> b
    io.netty.resolver.dns.DnsQueryContext this$0 -> c
    116:116:void <init>(io.netty.resolver.dns.DnsQueryContext,io.netty.handler.codec.dns.DnsQuery,io.netty.channel.ChannelPromise) -> <init>
    119:126:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsQueryContext$3 -> io.netty.d.a.H:
    io.netty.channel.ChannelFuture val$writeFuture -> a
    io.netty.resolver.dns.DnsQueryContext this$0 -> b
    136:136:void <init>(io.netty.resolver.dns.DnsQueryContext,io.netty.channel.ChannelFuture) -> <init>
    139:140:void operationComplete(io.netty.channel.ChannelFuture) -> a
    136:136:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.DnsQueryContext$4 -> io.netty.d.a.I:
    long val$queryTimeoutMillis -> a
    io.netty.resolver.dns.DnsQueryContext this$0 -> b
    154:154:void <init>(io.netty.resolver.dns.DnsQueryContext,long) -> <init>
    157:163:void run() -> run
io.netty.resolver.dns.DnsQueryContextManager -> io.netty.d.a.J:
    java.util.Map map -> a
    32:38:void <init>() -> <init>
    42:61:int add(io.netty.resolver.dns.DnsQueryContext) -> a
    65:75:io.netty.resolver.dns.DnsQueryContext get(java.net.InetSocketAddress,int) -> a
    79:86:io.netty.resolver.dns.DnsQueryContext remove(java.net.InetSocketAddress,int) -> b
    90:92:io.netty.util.collection.IntObjectMap getContextMap(java.net.InetSocketAddress) -> a
    96:126:io.netty.util.collection.IntObjectMap getOrCreateContextMap(java.net.InetSocketAddress) -> b
    130:135:java.net.Inet6Address toCompactAddress(java.net.Inet4Address) -> a
    140:145:java.net.Inet4Address toIPv4Address(java.net.Inet6Address) -> a
io.netty.resolver.dns.DnsQueryLifecycleObserver -> io.netty.d.a.K:
    void queryWritten(java.net.InetSocketAddress,io.netty.channel.ChannelFuture) -> a
    void queryCancelled(int) -> a
    io.netty.resolver.dns.DnsQueryLifecycleObserver queryRedirected(java.util.List) -> a
    io.netty.resolver.dns.DnsQueryLifecycleObserver queryCNAMEd(io.netty.handler.codec.dns.DnsQuestion) -> a
    io.netty.resolver.dns.DnsQueryLifecycleObserver queryNoAnswer(io.netty.handler.codec.dns.DnsResponseCode) -> a
    void queryFailed(java.lang.Throwable) -> a
    void querySucceed() -> a
io.netty.resolver.dns.DnsQueryLifecycleObserverFactory -> io.netty.d.a.L:
    io.netty.resolver.dns.DnsQueryLifecycleObserver newDnsQueryLifecycleObserver(io.netty.handler.codec.dns.DnsQuestion) -> a
io.netty.resolver.dns.DnsServerAddressStream -> io.netty.d.a.M:
    java.net.InetSocketAddress next() -> a
    int size() -> b
    io.netty.resolver.dns.DnsServerAddressStream duplicate() -> c
io.netty.resolver.dns.DnsServerAddressStreamProvider -> io.netty.d.a.N:
    io.netty.resolver.dns.DnsServerAddressStream nameServerAddressStream(java.lang.String) -> nameServerAddressStream
io.netty.resolver.dns.DnsServerAddressStreamProviders -> io.netty.d.a.O:
    io.netty.resolver.dns.DnsServerAddressStreamProvider DEFAULT_DNS_SERVER_ADDRESS_STREAM_PROVIDER -> a
    45:45:io.netty.resolver.dns.DnsServerAddressStreamProvider platformDefault() -> a
    28:32:void <clinit>() -> <clinit>
io.netty.resolver.dns.DnsServerAddresses -> io.netty.d.a.P:
    33:33:void <init>() -> <init>
    69:69:io.netty.resolver.dns.DnsServerAddresses sequential(java.lang.Iterable) -> a
    77:77:io.netty.resolver.dns.DnsServerAddresses sequential(java.net.InetSocketAddress[]) -> a
    81:85:io.netty.resolver.dns.DnsServerAddresses sequential0(java.net.InetSocketAddress[]) -> b
    129:129:io.netty.resolver.dns.DnsServerAddresses rotational(java.lang.Iterable) -> b
    143:147:io.netty.resolver.dns.DnsServerAddresses rotational0(java.net.InetSocketAddress[]) -> c
    154:161:io.netty.resolver.dns.DnsServerAddresses singleton(java.net.InetSocketAddress) -> a
    165:190:java.net.InetSocketAddress[] sanitize(java.lang.Iterable) -> c
    194:213:java.net.InetSocketAddress[] sanitize(java.net.InetSocketAddress[]) -> d
    io.netty.resolver.dns.DnsServerAddressStream stream() -> a
io.netty.resolver.dns.DnsServerAddresses$1 -> io.netty.d.a.Q:
    85:85:void <init>(java.lang.String,java.net.InetSocketAddress[]) -> <init>
    88:88:io.netty.resolver.dns.DnsServerAddressStream stream() -> a
io.netty.resolver.dns.InflightNameResolver -> io.netty.d.a.R:
    io.netty.util.concurrent.EventExecutor executor -> a
    io.netty.resolver.NameResolver delegate -> b
    java.util.concurrent.ConcurrentMap resolvesInProgress -> c
    java.util.concurrent.ConcurrentMap resolveAllsInProgress -> d
    41:47:void <init>(io.netty.util.concurrent.EventExecutor,io.netty.resolver.NameResolver,java.util.concurrent.ConcurrentMap,java.util.concurrent.ConcurrentMap) -> <init>
    51:51:io.netty.util.concurrent.Future resolve(java.lang.String) -> a
    61:62:void close() -> close
    66:66:io.netty.util.concurrent.Promise resolve(java.lang.String,io.netty.util.concurrent.Promise) -> a
    71:71:io.netty.util.concurrent.Promise resolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> b
    78:116:io.netty.util.concurrent.Promise resolve(java.util.concurrent.ConcurrentMap,java.lang.String,io.netty.util.concurrent.Promise,boolean) -> a
    120:125:void transferResult(io.netty.util.concurrent.Future,io.netty.util.concurrent.Promise) -> b
    129:129:java.lang.String toString() -> toString
    32:32:io.netty.util.concurrent.Future resolveAll(java.lang.String,io.netty.util.concurrent.Promise) -> d
    32:32:io.netty.util.concurrent.Future resolve(java.lang.String,io.netty.util.concurrent.Promise) -> c
    32:32:void access$000(io.netty.util.concurrent.Future,io.netty.util.concurrent.Promise) -> a
io.netty.resolver.dns.InflightNameResolver$1 -> io.netty.d.a.S:
    io.netty.util.concurrent.Promise val$promise -> a
    io.netty.resolver.dns.InflightNameResolver this$0 -> b
    84:84:void <init>(io.netty.resolver.dns.InflightNameResolver,io.netty.util.concurrent.Promise) -> <init>
    87:88:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.InflightNameResolver$2 -> io.netty.d.a.T:
    java.util.concurrent.ConcurrentMap val$resolveMap -> a
    java.lang.String val$inetHost -> b
    io.netty.resolver.dns.InflightNameResolver this$0 -> c
    106:106:void <init>(io.netty.resolver.dns.InflightNameResolver,java.util.concurrent.ConcurrentMap,java.lang.String) -> <init>
    109:110:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.resolver.dns.NoopDnsQueryLifecycleObserver -> io.netty.d.a.U:
    io.netty.resolver.dns.NoopDnsQueryLifecycleObserver INSTANCE -> a
    28:29:void <init>() -> <init>
    33:33:void queryWritten(java.net.InetSocketAddress,io.netty.channel.ChannelFuture) -> a
    37:37:void queryCancelled(int) -> a
    41:41:io.netty.resolver.dns.DnsQueryLifecycleObserver queryRedirected(java.util.List) -> a
    46:46:io.netty.resolver.dns.DnsQueryLifecycleObserver queryCNAMEd(io.netty.handler.codec.dns.DnsQuestion) -> a
    51:51:io.netty.resolver.dns.DnsQueryLifecycleObserver queryNoAnswer(io.netty.handler.codec.dns.DnsResponseCode) -> a
    56:56:void queryFailed(java.lang.Throwable) -> a
    60:60:void querySucceed() -> a
    26:26:void <clinit>() -> <clinit>
io.netty.resolver.dns.NoopDnsQueryLifecycleObserverFactory -> io.netty.d.a.V:
    io.netty.resolver.dns.NoopDnsQueryLifecycleObserverFactory INSTANCE -> a
    25:26:void <init>() -> <init>
    30:30:io.netty.resolver.dns.DnsQueryLifecycleObserver newDnsQueryLifecycleObserver(io.netty.handler.codec.dns.DnsQuestion) -> a
    23:23:void <clinit>() -> <clinit>
io.netty.resolver.dns.RotationalDnsServerAddresses -> io.netty.d.a.W:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater startIdxUpdater -> b
    int startIdx -> c
    31:32:void <init>(java.net.InetSocketAddress[]) -> <init>
    37:45:io.netty.resolver.dns.DnsServerAddressStream stream() -> a
    24:25:void <clinit>() -> <clinit>
io.netty.resolver.dns.SequentialDnsServerAddressStream -> io.netty.d.a.X:
    java.net.InetSocketAddress[] addresses -> a
    int i -> b
    26:29:void <init>(java.net.InetSocketAddress[],int) -> <init>
    33:40:java.net.InetSocketAddress next() -> a
    45:45:int size() -> b
    50:50:io.netty.resolver.dns.SequentialDnsServerAddressStream duplicate() -> d
    55:55:java.lang.String toString() -> toString
    59:69:java.lang.String toString(java.lang.String,int,java.net.InetSocketAddress[]) -> a
    21:21:io.netty.resolver.dns.DnsServerAddressStream duplicate() -> c
io.netty.resolver.dns.SingletonDnsServerAddresses -> io.netty.d.a.Y:
    java.net.InetSocketAddress address -> a
    io.netty.resolver.dns.DnsServerAddressStream stream -> b
    25:49:void <init>(java.net.InetSocketAddress) -> <init>
    53:53:io.netty.resolver.dns.DnsServerAddressStream stream() -> a
    58:58:java.lang.String toString() -> toString
    21:21:java.net.InetSocketAddress access$000(io.netty.resolver.dns.SingletonDnsServerAddresses) -> a
io.netty.resolver.dns.SingletonDnsServerAddresses$1 -> io.netty.d.a.Z:
    io.netty.resolver.dns.SingletonDnsServerAddresses this$0 -> a
    25:25:void <init>(io.netty.resolver.dns.SingletonDnsServerAddresses) -> <init>
    28:28:java.net.InetSocketAddress next() -> a
    33:33:int size() -> b
    38:38:io.netty.resolver.dns.DnsServerAddressStream duplicate() -> c
    43:43:java.lang.String toString() -> toString
io.netty.resolver.dns.TraceDnsQueryLifeCycleObserverFactory -> io.netty.d.a.aa:
    io.netty.util.internal.logging.InternalLogger DEFAULT_LOGGER -> a
    io.netty.util.internal.logging.InternalLogLevel DEFAULT_LEVEL -> b
    io.netty.util.internal.logging.InternalLogger logger -> c
    io.netty.util.internal.logging.InternalLogLevel level -> d
    33:34:void <init>() -> <init>
    36:39:void <init>(io.netty.util.internal.logging.InternalLogger,io.netty.util.internal.logging.InternalLogLevel) -> <init>
    43:43:io.netty.resolver.dns.DnsQueryLifecycleObserver newDnsQueryLifecycleObserver(io.netty.handler.codec.dns.DnsQuestion) -> a
    26:28:void <clinit>() -> <clinit>
io.netty.resolver.dns.TraceDnsQueryLifecycleObserver -> io.netty.d.a.ab:
    io.netty.util.internal.logging.InternalLogger logger -> a
    io.netty.util.internal.logging.InternalLogLevel level -> b
    io.netty.handler.codec.dns.DnsQuestion question -> c
    java.net.InetSocketAddress dnsServerAddress -> d
    35:39:void <init>(io.netty.handler.codec.dns.DnsQuestion,io.netty.util.internal.logging.InternalLogger,io.netty.util.internal.logging.InternalLogLevel) -> <init>
    43:44:void queryWritten(java.net.InetSocketAddress,io.netty.channel.ChannelFuture) -> a
    48:55:void queryCancelled(int) -> a
    59:60:io.netty.resolver.dns.DnsQueryLifecycleObserver queryRedirected(java.util.List) -> a
    65:66:io.netty.resolver.dns.DnsQueryLifecycleObserver queryCNAMEd(io.netty.handler.codec.dns.DnsQuestion) -> a
    71:72:io.netty.resolver.dns.DnsQueryLifecycleObserver queryNoAnswer(io.netty.handler.codec.dns.DnsResponseCode) -> a
    77:82:void queryFailed(java.lang.Throwable) -> a
    86:86:void querySucceed() -> a
io.netty.resolver.dns.UnixResolverDnsServerAddressStreamProvider -> io.netty.d.a.ac:
    io.netty.util.internal.logging.InternalLogger logger -> a
    io.netty.resolver.dns.DnsServerAddresses defaultNameServerAddresses -> b
    java.util.Map domainToNameServerStreamMap -> c
    66:72:io.netty.resolver.dns.DnsServerAddressStreamProvider parseSilently() -> a
    89:108:void <init>(java.io.File,java.io.File[]) -> <init>
    124:126:void <init>(java.lang.String,java.lang.String) -> <init>
    131:142:io.netty.resolver.dns.DnsServerAddressStream nameServerAddressStream(java.lang.String) -> nameServerAddressStream
    146:146:boolean mayOverrideNameServers() -> c
    150:221:java.util.Map parse(java.io.File[]) -> a
    228:229:void putIfAbsent(java.util.Map,java.lang.String,java.util.List) -> a
    234:240:void putIfAbsent(java.util.Map,java.lang.String,io.netty.resolver.dns.DnsServerAddresses) -> a
    250:250:int parseEtcResolverFirstNdots() -> b
    262:285:int parseEtcResolverFirstNdots(java.io.File) -> a
    46:47:void <clinit>() -> <clinit>
io.netty.util.AbstractConstant -> io.netty.e.a:
    java.util.concurrent.atomic.AtomicLong uniqueIdGenerator -> uniqueIdGenerator
    int id -> id
    java.lang.String name -> name
    long uniquifier -> uniquifier
    33:37:void <init>(int,java.lang.String) -> <init>
    41:41:java.lang.String name() -> name
    46:46:int id() -> id
    51:51:java.lang.String toString() -> toString
    56:56:int hashCode() -> hashCode
    61:61:boolean equals(java.lang.Object) -> equals
    66:86:int compareTo(io.netty.util.AbstractConstant) -> compareTo
    23:23:int compareTo(java.lang.Object) -> compareTo
    25:25:void <clinit>() -> <clinit>
io.netty.util.AbstractReferenceCounted -> io.netty.e.b:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater refCntUpdater -> refCntUpdater
    int refCnt -> refCnt
    25:30:void <init>() -> <init>
    34:34:int refCnt() -> refCnt
    41:42:void setRefCnt(int) -> setRefCnt
    46:46:io.netty.util.ReferenceCounted retain() -> retain
    51:51:io.netty.util.ReferenceCounted retain(int) -> retain
    55:61:io.netty.util.ReferenceCounted retain0(int) -> retain0
    66:66:io.netty.util.ReferenceCounted touch() -> touch
    71:71:boolean release() -> release
    76:76:boolean release(int) -> release
    80:89:boolean release0(int) -> release0
    void deallocate() -> deallocate
    27:28:void <clinit>() -> <clinit>
io.netty.util.AsciiString -> io.netty.e.c:
    io.netty.util.AsciiString EMPTY_STRING -> a
    byte[] value -> d
    int offset -> e
    int length -> f
    int hash -> g
    java.lang.String string -> h
    io.netty.util.HashingStrategy CASE_INSENSITIVE_HASHER -> b
    io.netty.util.HashingStrategy CASE_SENSITIVE_HASHER -> c
    87:88:void <init>(byte[],boolean) -> <init>
    95:108:void <init>(byte[],int,int,boolean) -> <init>
    210:211:void <init>(java.lang.CharSequence) -> <init>
    217:229:void <init>(java.lang.CharSequence,int,int) -> <init>
    260:260:int forEachByte(io.netty.util.ByteProcessor) -> a
    271:275:int forEachByte(int,int,io.netty.util.ByteProcessor) -> a
    279:285:int forEachByte0(int,int,io.netty.util.ByteProcessor) -> b
    326:333:byte byteAt(int) -> a
    340:340:boolean isEmpty() -> a
    348:348:int length() -> length
    368:368:byte[] array() -> b
    377:377:int arrayOffset() -> c
    422:422:char charAt(int) -> charAt
    450:465:int compareTo(java.lang.CharSequence) -> a
    526:545:boolean contentEqualsIgnoreCase(java.lang.CharSequence) -> b
    623:623:io.netty.util.AsciiString subSequence(int,int) -> a
    636:649:io.netty.util.AsciiString subSequence(int,int,boolean) -> a
    726:740:int indexOf(char,int) -> a
    1016:1033:java.lang.CharSequence trim(java.lang.CharSequence) -> c
    1043:1054:io.netty.util.AsciiString trim() -> d
    1064:1076:boolean contentEquals(java.lang.CharSequence) -> d
    1153:1158:int hashCode() -> hashCode
    1163:1173:boolean equals(java.lang.Object) -> equals
    1182:1187:java.lang.String toString() -> toString
    1195:1195:java.lang.String toString(int) -> b
    1202:1214:java.lang.String toString(int,int) -> b
    1416:1416:io.netty.util.AsciiString of(java.lang.CharSequence) -> e
    1426:1428:io.netty.util.AsciiString cached(java.lang.String) -> a
    1437:1444:int hashCode(java.lang.CharSequence) -> f
    1466:1485:boolean contentEqualsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> a
    1528:1548:boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence) -> b
    1826:1843:int indexOf(java.lang.CharSequence,char,int) -> a
    1847:1847:boolean equalsIgnoreCase(byte,byte) -> a
    1851:1851:boolean equalsIgnoreCase(char,char) -> a
    1855:1855:byte toLowerCase(byte) -> c
    1859:1859:char toLowerCase(char) -> c
    1871:1871:boolean isUpperCase(byte) -> a
    1875:1875:boolean isUpperCase(char) -> a
    1879:1879:byte c2b(char) -> b
    1883:1883:char b2c(byte) -> b
    47:47:java.lang.CharSequence subSequence(int,int) -> subSequence
    47:47:int compareTo(java.lang.Object) -> compareTo
    48:1398:void <clinit>() -> <clinit>
io.netty.util.AsciiString$1 -> io.netty.e.d:
    1386:1386:void <init>() -> <init>
    1389:1389:int hashCode(java.lang.CharSequence) -> a
    1394:1394:boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> a
    1386:1386:boolean equals(java.lang.Object,java.lang.Object) -> a
    1386:1386:int hashCode(java.lang.Object) -> a
io.netty.util.AsciiString$2 -> io.netty.e.e:
    1399:1399:void <init>() -> <init>
    1402:1402:int hashCode(java.lang.CharSequence) -> a
    1407:1407:boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> a
    1399:1399:boolean equals(java.lang.Object,java.lang.Object) -> a
    1399:1399:int hashCode(java.lang.Object) -> a
io.netty.util.AsyncMapping -> io.netty.e.f:
    io.netty.util.concurrent.Future map(java.lang.Object,io.netty.util.concurrent.Promise) -> a
io.netty.util.Attribute -> io.netty.e.g:
    java.lang.Object get() -> get
    void set(java.lang.Object) -> set
io.netty.util.AttributeKey -> io.netty.e.h:
    io.netty.util.ConstantPool pool -> a
    39:39:io.netty.util.AttributeKey valueOf(java.lang.String) -> a
    64:65:void <init>(int,java.lang.String) -> <init>
    25:25:void <init>(int,java.lang.String,io.netty.util.AttributeKey$1) -> <init>
    27:27:void <clinit>() -> <clinit>
io.netty.util.AttributeKey$1 -> io.netty.e.i:
    27:27:void <init>() -> <init>
    30:30:io.netty.util.AttributeKey newConstant(int,java.lang.String) -> a
    27:27:io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
io.netty.util.AttributeMap -> io.netty.e.j:
    io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
io.netty.util.BooleanSupplier -> io.netty.e.k:
    io.netty.util.BooleanSupplier FALSE_SUPPLIER -> b
    io.netty.util.BooleanSupplier TRUE_SUPPLIER -> c
    boolean get() -> get
    32:42:void <clinit>() -> <clinit>
io.netty.util.BooleanSupplier$1 -> io.netty.e.l:
    32:32:void <init>() -> <init>
    35:35:boolean get() -> get
io.netty.util.BooleanSupplier$2 -> io.netty.e.m:
    42:42:void <init>() -> <init>
    45:45:boolean get() -> get
io.netty.util.ByteProcessor -> io.netty.e.n:
    io.netty.util.ByteProcessor FIND_NUL -> c
    io.netty.util.ByteProcessor FIND_NON_NUL -> d
    io.netty.util.ByteProcessor FIND_CR -> e
    io.netty.util.ByteProcessor FIND_NON_CR -> f
    io.netty.util.ByteProcessor FIND_LF -> g
    io.netty.util.ByteProcessor FIND_NON_LF -> h
    io.netty.util.ByteProcessor FIND_SEMI_COLON -> i
    io.netty.util.ByteProcessor FIND_COMMA -> j
    io.netty.util.ByteProcessor FIND_CRLF -> k
    io.netty.util.ByteProcessor FIND_NON_CRLF -> l
    io.netty.util.ByteProcessor FIND_LINEAR_WHITESPACE -> m
    io.netty.util.ByteProcessor FIND_NON_LINEAR_WHITESPACE -> n
    boolean process(byte) -> a
    56:126:void <clinit>() -> <clinit>
io.netty.util.ByteProcessor$1 -> io.netty.e.o:
    96:96:void <init>() -> <init>
    99:99:boolean process(byte) -> a
io.netty.util.ByteProcessor$2 -> io.netty.e.p:
    106:106:void <init>() -> <init>
    109:109:boolean process(byte) -> a
io.netty.util.ByteProcessor$3 -> io.netty.e.q:
    116:116:void <init>() -> <init>
    119:119:boolean process(byte) -> a
io.netty.util.ByteProcessor$4 -> io.netty.e.r:
    126:126:void <init>() -> <init>
    129:129:boolean process(byte) -> a
io.netty.util.ByteProcessor$IndexNotOfProcessor -> io.netty.e.s:
    byte byteToNotFind -> a
    43:45:void <init>(byte) -> <init>
    49:49:boolean process(byte) -> a
io.netty.util.ByteProcessor$IndexOfProcessor -> io.netty.e.t:
    byte byteToFind -> a
    27:29:void <init>(byte) -> <init>
    33:33:boolean process(byte) -> a
io.netty.util.CharsetUtil -> io.netty.e.u:
    java.nio.charset.Charset UTF_16 -> a
    java.nio.charset.Charset UTF_16BE -> b
    java.nio.charset.Charset UTF_16LE -> c
    java.nio.charset.Charset UTF_8 -> d
    java.nio.charset.Charset ISO_8859_1 -> e
    java.nio.charset.Charset US_ASCII -> f
    java.nio.charset.Charset[] CHARSETS -> g
    88:91:java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction) -> a
    112:123:java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset) -> a
    144:147:java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction) -> b
    168:179:java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset) -> b
    37:65:void <clinit>() -> <clinit>
io.netty.util.Constant -> io.netty.e.v:
io.netty.util.ConstantPool -> io.netty.e.w:
    java.util.concurrent.ConcurrentMap constants -> constants
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    30:34:void <init>() -> <init>
    40:47:io.netty.util.Constant valueOf(java.lang.Class,java.lang.String) -> valueOf
    59:60:io.netty.util.Constant valueOf(java.lang.String) -> valueOf
    69:78:io.netty.util.Constant getOrCreate(java.lang.String) -> getOrCreate
    85:86:boolean exists(java.lang.String) -> exists
    94:95:io.netty.util.Constant newInstance(java.lang.String) -> newInstance
    104:113:io.netty.util.Constant createOrThrow(java.lang.String) -> createOrThrow
    117:123:java.lang.String checkNotNullAndNotEmpty(java.lang.String) -> checkNotNullAndNotEmpty
    io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
    130:130:int nextId() -> nextId
io.netty.util.DefaultAttributeMap -> io.netty.e.x:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater updater -> updater
    int BUCKET_SIZE -> BUCKET_SIZE
    int MASK -> MASK
    java.util.concurrent.atomic.AtomicReferenceArray attributes -> attributes
    26:26:void <init>() -> <init>
    42:88:io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    93:120:boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
    124:124:int index(io.netty.util.AttributeKey) -> index
    29:30:void <clinit>() -> <clinit>
io.netty.util.DefaultAttributeMap$DefaultAttribute -> io.netty.e.y:
    io.netty.util.DefaultAttributeMap$DefaultAttribute head -> a
    io.netty.util.AttributeKey key -> b
    io.netty.util.DefaultAttributeMap$DefaultAttribute prev -> c
    io.netty.util.DefaultAttributeMap$DefaultAttribute next -> d
    boolean removed -> e
    143:146:void <init>(io.netty.util.DefaultAttributeMap$DefaultAttribute,io.netty.util.AttributeKey) -> <init>
    149:152:void <init>() -> <init>
    128:128:io.netty.util.DefaultAttributeMap$DefaultAttribute access$002(io.netty.util.DefaultAttributeMap$DefaultAttribute,io.netty.util.DefaultAttributeMap$DefaultAttribute) -> a
    128:128:io.netty.util.DefaultAttributeMap$DefaultAttribute access$102(io.netty.util.DefaultAttributeMap$DefaultAttribute,io.netty.util.DefaultAttributeMap$DefaultAttribute) -> b
    128:128:io.netty.util.DefaultAttributeMap$DefaultAttribute access$000(io.netty.util.DefaultAttributeMap$DefaultAttribute) -> a
    128:128:io.netty.util.AttributeKey access$200(io.netty.util.DefaultAttributeMap$DefaultAttribute) -> b
    128:128:boolean access$300(io.netty.util.DefaultAttributeMap$DefaultAttribute) -> c
io.netty.util.HashingStrategy -> io.netty.e.z:
    io.netty.util.HashingStrategy JAVA_HASHER -> a
    int hashCode(java.lang.Object) -> a
    boolean equals(java.lang.Object,java.lang.Object) -> a
    62:62:void <clinit>() -> <clinit>
io.netty.util.HashingStrategy$1 -> io.netty.e.A:
    62:62:void <init>() -> <init>
    65:65:int hashCode(java.lang.Object) -> a
    70:70:boolean equals(java.lang.Object,java.lang.Object) -> a
io.netty.util.IllegalReferenceCountException -> io.netty.e.B:
    27:27:void <init>() -> <init>
    30:31:void <init>(int) -> <init>
    34:35:void <init>(int,int) -> <init>
    38:39:void <init>(java.lang.String) -> <init>
io.netty.util.IntSupplier -> io.netty.e.C:
    int get() -> get
io.netty.util.Mapping -> io.netty.e.D:
    java.lang.Object map(java.lang.Object) -> map
io.netty.util.NetUtil -> io.netty.e.E:
    java.net.Inet4Address LOCALHOST4 -> a
    java.net.Inet6Address LOCALHOST6 -> b
    java.net.InetAddress LOCALHOST -> c
    java.net.NetworkInterface LOOPBACK_IF -> d
    int SOMAXCONN -> e
    boolean IPV4_PREFERRED -> f
    boolean IPV6_ADDRESSES_PREFERRED -> g
    io.netty.util.internal.logging.InternalLogger logger -> h
    314:334:java.lang.Integer sysctlGetInt(java.lang.String) -> f
    347:347:boolean isIpV4StackPreferred() -> a
    358:358:boolean isIpV6AddressesPreferred() -> b
    366:382:byte[] createByteArrayFromIpAddressString(java.lang.String) -> a
    386:386:int decimalDigit(java.lang.String,int) -> b
    390:400:byte ipv4WordToByte(java.lang.String,int,int) -> a
    406:410:byte[] validIpV4ToBytes(java.lang.String) -> b
    418:426:java.lang.String intToIpAddress(int) -> a
    436:436:java.lang.String bytesToIpAddress(byte[]) -> a
    446:460:java.lang.String bytesToIpAddress(byte[],int,int) -> a
    465:579:boolean isValidIpV6Address(java.lang.String) -> c
    585:596:boolean isValidIpV4Word(java.lang.CharSequence,int,int) -> a
    600:600:boolean isValidHexChar(char) -> a
    604:604:boolean isValidNumericChar(char) -> b
    608:608:boolean isValidIPv4MappedChar(char) -> c
    615:615:boolean isValidIPv4MappedSeparators(byte,byte,boolean) -> a
    619:622:boolean isValidIPv4Mapped(byte[],int,int,int) -> a
    632:632:boolean isValidIpV4Address(java.lang.String) -> d
    637:643:boolean isValidIpV4Address(java.lang.String,int,int) -> b
    698:885:byte[] getIPv6ByName(java.lang.CharSequence,boolean) -> a
    896:907:java.lang.String toSocketAddressString(java.net.InetSocketAddress) -> a
    914:916:java.lang.String toSocketAddressString(java.lang.String,int) -> a
    920:930:java.lang.StringBuilder newSocketAddressStringBuilder(java.lang.String,java.lang.String,boolean) -> a
    946:946:java.lang.String toAddressString(java.net.InetAddress) -> a
    974:981:java.lang.String toAddressString(java.net.InetAddress,boolean) -> a
    985:1068:java.lang.String toAddressString(byte[],int,boolean) -> a
    1083:1083:boolean inRangeEndExclusive(int,int,int) -> a
    1089:1091:void <init>() -> <init>
    51:51:io.netty.util.internal.logging.InternalLogger access$000() -> c
    51:51:java.lang.Integer access$100(java.lang.String) -> e
    123:305:void <clinit>() -> <clinit>
io.netty.util.NetUtil$1 -> io.netty.e.F:
    251:251:void <init>() -> <init>
    258:302:java.lang.Integer run() -> a
    251:251:java.lang.Object run() -> run
io.netty.util.NettyRuntime -> io.netty.e.G:
    io.netty.util.NettyRuntime$AvailableProcessorsHolder holder -> a
    98:98:int availableProcessors() -> a
    76:76:void <clinit>() -> <clinit>
io.netty.util.NettyRuntime$AvailableProcessorsHolder -> io.netty.e.H:
    int availableProcessors -> a
    32:32:void <init>() -> <init>
    44:54:void setAvailableProcessors(int) -> a
    65:72:int availableProcessors() -> a
io.netty.util.Recycler -> io.netty.e.I:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.Recycler$Handle NOOP_HANDLE -> NOOP_HANDLE
    java.util.concurrent.atomic.AtomicInteger ID_GENERATOR -> ID_GENERATOR
    int OWN_THREAD_ID -> OWN_THREAD_ID
    int DEFAULT_INITIAL_MAX_CAPACITY_PER_THREAD -> DEFAULT_INITIAL_MAX_CAPACITY_PER_THREAD
    int DEFAULT_MAX_CAPACITY_PER_THREAD -> DEFAULT_MAX_CAPACITY_PER_THREAD
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    int MAX_SHARED_CAPACITY_FACTOR -> MAX_SHARED_CAPACITY_FACTOR
    int MAX_DELAYED_QUEUES_PER_THREAD -> MAX_DELAYED_QUEUES_PER_THREAD
    int LINK_CAPACITY -> LINK_CAPACITY
    int RATIO -> RATIO
    int maxCapacityPerThread -> maxCapacityPerThread
    int maxSharedCapacityFactor -> maxSharedCapacityFactor
    int ratioMask -> ratioMask
    int maxDelayedQueuesPerThread -> maxDelayedQueuesPerThread
    io.netty.util.concurrent.FastThreadLocal threadLocal -> threadLocal
    io.netty.util.concurrent.FastThreadLocal DELAYED_RECYCLED -> DELAYED_RECYCLED
    120:121:void <init>() -> <init>
    124:125:void <init>(int) -> <init>
    128:129:void <init>(int,int) -> <init>
    111:143:void <init>(int,int,int,int) -> <init>
    147:156:java.lang.Object get() -> get
    164:174:boolean recycle(java.lang.Object,io.netty.util.Recycler$Handle) -> recycle
    178:178:int threadLocalCapacity() -> threadLocalCapacity
    182:182:int threadLocalSize() -> threadLocalSize
    java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
    39:39:int access$000(io.netty.util.Recycler) -> access$000
    39:39:int access$100(io.netty.util.Recycler) -> access$100
    39:39:int access$200(io.netty.util.Recycler) -> access$200
    39:39:int access$300(io.netty.util.Recycler) -> access$300
    39:39:int access$800() -> access$800
    39:39:java.util.concurrent.atomic.AtomicInteger access$900() -> access$900
    39:39:int access$1600() -> access$1600
    39:39:int access$2000() -> access$2000
    39:39:io.netty.util.concurrent.FastThreadLocal access$2100() -> access$2100
    41:213:void <clinit>() -> <clinit>
io.netty.util.Recycler$1 -> io.netty.e.J:
    44:44:void <init>() -> <init>
    48:48:void recycle(java.lang.Object) -> a
io.netty.util.Recycler$2 -> io.netty.e.K:
    io.netty.util.Recycler this$0 -> a
    111:111:void <init>(io.netty.util.Recycler) -> <init>
    114:115:io.netty.util.Recycler$Stack initialValue() -> a
    111:111:java.lang.Object initialValue() -> initialValue
io.netty.util.Recycler$3 -> io.netty.e.L:
    214:214:void <init>() -> <init>
    217:217:java.util.Map initialValue() -> a
    214:214:java.lang.Object initialValue() -> initialValue
io.netty.util.Recycler$DefaultHandle -> io.netty.e.M:
    int lastRecycledId -> b
    int recycleId -> c
    boolean hasBeenRecycled -> a
    io.netty.util.Recycler$Stack stack -> d
    java.lang.Object value -> e
    200:202:void <init>(io.netty.util.Recycler$Stack) -> <init>
    206:210:void recycle(java.lang.Object) -> a
    191:191:java.lang.Object access$402(io.netty.util.Recycler$DefaultHandle,java.lang.Object) -> a
    191:191:java.lang.Object access$400(io.netty.util.Recycler$DefaultHandle) -> a
    191:191:io.netty.util.Recycler$Stack access$500(io.netty.util.Recycler$DefaultHandle) -> b
    191:191:int access$1102(io.netty.util.Recycler$DefaultHandle,int) -> a
    191:191:io.netty.util.Recycler$Stack access$502(io.netty.util.Recycler$DefaultHandle,io.netty.util.Recycler$Stack) -> a
    191:191:int access$1500(io.netty.util.Recycler$DefaultHandle) -> c
    191:191:int access$1502(io.netty.util.Recycler$DefaultHandle,int) -> b
    191:191:int access$1100(io.netty.util.Recycler$DefaultHandle) -> d
io.netty.util.Recycler$Handle -> io.netty.e.N:
    void recycle(java.lang.Object) -> a
io.netty.util.Recycler$Stack -> io.netty.e.O:
    io.netty.util.Recycler parent -> a
    java.lang.ref.WeakReference threadRef -> b
    java.util.concurrent.atomic.AtomicInteger availableSharedCapacity -> c
    int maxDelayedQueues -> d
    int maxCapacity -> e
    int ratioMask -> f
    io.netty.util.Recycler$DefaultHandle[] elements -> g
    int size -> h
    int handleRecycleCount -> i
    io.netty.util.Recycler$WeakOrderQueue cursor -> j
    io.netty.util.Recycler$WeakOrderQueue prev -> k
    io.netty.util.Recycler$WeakOrderQueue head -> l
    434:447:void <init>(io.netty.util.Recycler,java.lang.Thread,int,int,int,int) -> <init>
    451:453:void setHead(io.netty.util.Recycler$WeakOrderQueue) -> a
    456:467:int increaseCapacity(int) -> a
    472:488:io.netty.util.Recycler$DefaultHandle pop() -> a
    493:500:boolean scavenge() -> b
    505:550:boolean scavengeSome() -> c
    554:564:void push(io.netty.util.Recycler$DefaultHandle) -> a
    567:583:void pushNow(io.netty.util.Recycler$DefaultHandle) -> c
    589:609:void pushLater(io.netty.util.Recycler$DefaultHandle,java.lang.Thread) -> a
    612:619:boolean dropHandle(io.netty.util.Recycler$DefaultHandle) -> b
    623:623:io.netty.util.Recycler$DefaultHandle newHandle() -> d
    412:412:io.netty.util.Recycler$DefaultHandle[] access$600(io.netty.util.Recycler$Stack) -> a
    412:412:int access$700(io.netty.util.Recycler$Stack) -> b
    412:412:int access$702(io.netty.util.Recycler$Stack,int) -> a
io.netty.util.Recycler$WeakOrderQueue -> io.netty.e.P:
    io.netty.util.Recycler$WeakOrderQueue DUMMY -> a
    io.netty.util.Recycler$WeakOrderQueue$Link head -> c
    io.netty.util.Recycler$WeakOrderQueue$Link tail -> d
    io.netty.util.Recycler$WeakOrderQueue next -> e
    java.lang.ref.WeakReference owner -> f
    int id -> g
    java.util.concurrent.atomic.AtomicInteger availableSharedCapacity -> h
    boolean $assertionsDisabled -> b
    241:247:void <init>() -> <init>
    241:257:void <init>(io.netty.util.Recycler$Stack,java.lang.Thread) -> <init>
    260:264:io.netty.util.Recycler$WeakOrderQueue newQueue(io.netty.util.Recycler$Stack,java.lang.Thread) -> a
    268:270:void setNext(io.netty.util.Recycler$WeakOrderQueue) -> c
    277:278:io.netty.util.Recycler$WeakOrderQueue allocate(io.netty.util.Recycler$Stack,java.lang.Thread) -> b
    282:291:boolean reserveSpace(java.util.concurrent.atomic.AtomicInteger,int) -> a
    295:297:void reclaimSpace(int) -> a
    300:319:void add(io.netty.util.Recycler$DefaultHandle) -> a
    322:322:boolean hasFinalData() -> a
    328:391:boolean transfer(io.netty.util.Recycler$Stack) -> a
    398:409:void finalize() -> finalize
    223:223:void access$1700(io.netty.util.Recycler$WeakOrderQueue,io.netty.util.Recycler$WeakOrderQueue) -> a
    223:223:io.netty.util.Recycler$WeakOrderQueue access$1800(io.netty.util.Recycler$WeakOrderQueue) -> a
    223:223:java.lang.ref.WeakReference access$1900(io.netty.util.Recycler$WeakOrderQueue) -> b
    223:225:void <clinit>() -> <clinit>
io.netty.util.Recycler$WeakOrderQueue$Link -> io.netty.e.Q:
    io.netty.util.Recycler$DefaultHandle[] elements -> a
    int readIndex -> b
    io.netty.util.Recycler$WeakOrderQueue$Link next -> c
    229:230:void <init>() -> <init>
    229:229:void <init>(io.netty.util.Recycler$1) -> <init>
    229:229:io.netty.util.Recycler$WeakOrderQueue$Link access$1202(io.netty.util.Recycler$WeakOrderQueue$Link,io.netty.util.Recycler$WeakOrderQueue$Link) -> a
    229:229:io.netty.util.Recycler$DefaultHandle[] access$1300(io.netty.util.Recycler$WeakOrderQueue$Link) -> a
    229:229:int access$1400(io.netty.util.Recycler$WeakOrderQueue$Link) -> b
    229:229:io.netty.util.Recycler$WeakOrderQueue$Link access$1200(io.netty.util.Recycler$WeakOrderQueue$Link) -> c
    229:229:int access$1402(io.netty.util.Recycler$WeakOrderQueue$Link,int) -> a
io.netty.util.ReferenceCountUtil -> io.netty.e.R:
    io.netty.util.internal.logging.InternalLogger logger -> a
    39:42:java.lang.Object retain(java.lang.Object) -> a
    51:54:java.lang.Object retain(java.lang.Object,int) -> a
    63:66:java.lang.Object touch(java.lang.Object) -> b
    76:79:java.lang.Object touch(java.lang.Object,java.lang.Object) -> a
    87:90:boolean release(java.lang.Object) -> c
    98:101:boolean release(java.lang.Object,int) -> b
    113:117:void safeRelease(java.lang.Object) -> d
    203:203:void <init>() -> <init>
    27:31:void <clinit>() -> <clinit>
io.netty.util.ReferenceCounted -> io.netty.e.S:
    int refCnt() -> refCnt
    io.netty.util.ReferenceCounted retain() -> retain
    io.netty.util.ReferenceCounted retain(int) -> retain
    io.netty.util.ReferenceCounted touch() -> touch
    io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    boolean release() -> release
    boolean release(int) -> release
io.netty.util.ResourceLeakDetector -> io.netty.e.T:
    io.netty.util.ResourceLeakDetector$Level DEFAULT_LEVEL -> a
    int TARGET_RECORDS -> b
    io.netty.util.ResourceLeakDetector$Level level -> c
    io.netty.util.internal.logging.InternalLogger logger -> d
    java.util.concurrent.ConcurrentMap allLeaks -> e
    java.lang.ref.ReferenceQueue refQueue -> f
    java.util.concurrent.ConcurrentMap reportedLeaks -> g
    java.lang.String resourceType -> h
    int samplingInterval -> i
    java.util.concurrent.atomic.AtomicReference excludedMethods -> j
    141:141:boolean isEnabled() -> a
    148:152:void setLevel(io.netty.util.ResourceLeakDetector$Level) -> a
    158:158:io.netty.util.ResourceLeakDetector$Level getLevel() -> b
    197:198:void <init>(java.lang.Class,int,long) -> <init>
    207:208:void <init>(java.lang.Class,int) -> <init>
    162:223:void <init>(java.lang.String,int,long) -> <init>
    245:245:io.netty.util.ResourceLeakTracker track(java.lang.Object) -> a
    250:263:io.netty.util.ResourceLeakDetector$DefaultResourceLeak track0(java.lang.Object) -> b
    269:275:void clearRefQueue() -> f
    278:304:void reportLeak() -> g
    311:315:void reportTracedLeak(java.lang.String,java.lang.String) -> a
    322:328:void reportUntracedLeak(java.lang.String) -> a
    528:549:void addExclusions(java.lang.Class,java.lang.String[]) -> a
    40:40:io.netty.util.ResourceLeakDetector$Level access$000() -> c
    40:40:int access$200() -> d
    40:40:java.util.concurrent.atomic.AtomicReference access$500() -> e
    44:524:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetector$DefaultResourceLeak -> io.netty.e.U:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater headUpdater -> b
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater droppedRecordsUpdater -> c
    io.netty.util.ResourceLeakDetector$Record head -> d
    int droppedRecords -> e
    java.util.concurrent.ConcurrentMap allLeaks -> f
    int trackedHash -> g
    boolean $assertionsDisabled -> a
    363:374:void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,java.util.concurrent.ConcurrentMap) -> <init>
    378:379:void record() -> a
    383:384:void record(java.lang.Object) -> a
    414:439:void record0(java.lang.Object) -> c
    442:443:boolean dispose() -> b
    449:455:boolean close() -> c
    461:467:boolean close(java.lang.Object) -> b
    472:520:java.lang.String toString() -> toString
    337:349:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetector$LeakEntry -> io.netty.e.V:
    io.netty.util.ResourceLeakDetector$LeakEntry INSTANCE -> a
    int HASH -> b
    613:614:void <init>() -> <init>
    618:618:int hashCode() -> hashCode
    623:623:boolean equals(java.lang.Object) -> equals
    610:611:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetector$Level -> io.netty.e.W:
    io.netty.util.ResourceLeakDetector$Level DISABLED -> a
    io.netty.util.ResourceLeakDetector$Level SIMPLE -> b
    io.netty.util.ResourceLeakDetector$Level ADVANCED -> c
    io.netty.util.ResourceLeakDetector$Level PARANOID -> d
    io.netty.util.ResourceLeakDetector$Level[] $VALUES -> e
    54:54:io.netty.util.ResourceLeakDetector$Level[] values() -> values
    54:54:io.netty.util.ResourceLeakDetector$Level valueOf(java.lang.String) -> valueOf
    54:54:void <init>(java.lang.String,int) -> <init>
    82:88:io.netty.util.ResourceLeakDetector$Level parseLevel(java.lang.String) -> a
    54:73:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetector$Record -> io.netty.e.X:
    io.netty.util.ResourceLeakDetector$Record BOTTOM -> a
    java.lang.String hintString -> b
    io.netty.util.ResourceLeakDetector$Record next -> c
    int pos -> d
    560:565:void <init>(io.netty.util.ResourceLeakDetector$Record,java.lang.Object) -> <init>
    567:571:void <init>(io.netty.util.ResourceLeakDetector$Record) -> <init>
    574:578:void <init>() -> <init>
    582:605:java.lang.String toString() -> toString
    551:551:io.netty.util.ResourceLeakDetector$Record access$100() -> a
    551:551:int access$300(io.netty.util.ResourceLeakDetector$Record) -> a
    551:551:io.netty.util.ResourceLeakDetector$Record access$400(io.netty.util.ResourceLeakDetector$Record) -> b
    554:554:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetectorFactory -> io.netty.e.Y:
    io.netty.util.internal.logging.InternalLogger logger -> a
    io.netty.util.ResourceLeakDetectorFactory factoryInstance -> b
    32:32:void <init>() -> <init>
    43:43:io.netty.util.ResourceLeakDetectorFactory instance() -> a
    65:65:io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class) -> a
    io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int,long) -> a
    93:93:io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int) -> a
    32:32:io.netty.util.internal.logging.InternalLogger access$000() -> b
    33:35:void <clinit>() -> <clinit>
io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory -> io.netty.e.Z:
    java.lang.reflect.Constructor obsoleteCustomClassConstructor -> a
    java.lang.reflect.Constructor customClassConstructor -> b
    103:122:void <init>() -> <init>
    126:138:java.lang.reflect.Constructor obsoleteCustomClassConstructor(java.lang.String) -> a
    143:155:java.lang.reflect.Constructor customClassConstructor(java.lang.String) -> b
    162:181:io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int,long) -> a
    186:203:io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int) -> a
io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory$1 -> io.netty.e.aa:
    io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory this$0 -> a
    106:106:void <init>(io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory) -> <init>
    109:109:java.lang.String run() -> a
    106:106:java.lang.Object run() -> run
io.netty.util.ResourceLeakHint -> io.netty.e.ab:
    java.lang.String toHintString() -> toHintString
io.netty.util.ResourceLeakTracker -> io.netty.e.ac:
    void record() -> a
    void record(java.lang.Object) -> a
    boolean close(java.lang.Object) -> b
io.netty.util.Signal -> io.netty.e.ad:
    io.netty.util.ConstantPool pool -> a
    io.netty.util.Signal$SignalConstant constant -> b
    45:45:io.netty.util.Signal valueOf(java.lang.Class,java.lang.String) -> a
    53:55:void <init>(int,java.lang.String) -> <init>
    62:65:void expect(io.netty.util.Signal) -> a
    69:69:java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    74:74:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    84:84:java.lang.String name() -> a
    89:89:boolean equals(java.lang.Object) -> equals
    94:94:int hashCode() -> hashCode
    99:103:int compareTo(io.netty.util.Signal) -> b
    108:108:java.lang.String toString() -> toString
    23:23:int compareTo(java.lang.Object) -> compareTo
    23:23:void <init>(int,java.lang.String,io.netty.util.Signal$1) -> <init>
    27:27:void <clinit>() -> <clinit>
io.netty.util.Signal$1 -> io.netty.e.ae:
    27:27:void <init>() -> <init>
    30:30:io.netty.util.Signal newConstant(int,java.lang.String) -> a
    27:27:io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
io.netty.util.Signal$SignalConstant -> io.netty.e.af:
    113:114:void <init>(int,java.lang.String) -> <init>
io.netty.util.ThreadDeathWatcher -> io.netty.e.ag:
    io.netty.util.internal.logging.InternalLogger logger -> b
    java.util.concurrent.ThreadFactory threadFactory -> a
    java.util.Queue pendingEntries -> c
    io.netty.util.ThreadDeathWatcher$Watcher watcher -> d
    java.util.concurrent.atomic.AtomicBoolean started -> e
    java.lang.Thread watcherThread -> f
    75:86:void watch(java.lang.Thread,java.lang.Runnable) -> a
    92:100:void unwatch(java.lang.Thread,java.lang.Runnable) -> b
    103:117:void schedule(java.lang.Thread,java.lang.Runnable,boolean) -> a
    142:142:void <init>() -> <init>
    41:41:java.util.Queue access$100() -> a
    41:41:java.util.concurrent.atomic.AtomicBoolean access$200() -> b
    41:41:io.netty.util.internal.logging.InternalLogger access$300() -> c
    43:64:void <clinit>() -> <clinit>
io.netty.util.ThreadDeathWatcher$1 -> io.netty.e.ah:
io.netty.util.ThreadDeathWatcher$Entry -> io.netty.e.ai:
    java.lang.Thread thread -> a
    java.lang.Runnable task -> b
    boolean isWatch -> c
    233:237:void <init>(java.lang.Thread,java.lang.Runnable,boolean) -> <init>
    241:241:int hashCode() -> hashCode
    246:255:boolean equals(java.lang.Object) -> equals
io.netty.util.ThreadDeathWatcher$Watcher -> io.netty.e.aj:
    java.util.List watchees -> b
    boolean $assertionsDisabled -> a
    144:146:void <init>() -> <init>
    151:193:void run() -> run
    197:208:void fetchWatchees() -> a
    211:225:void notifyWatchees() -> b
    144:144:void <init>(io.netty.util.ThreadDeathWatcher$1) -> <init>
    144:144:void <clinit>() -> <clinit>
io.netty.util.UncheckedBooleanSupplier -> io.netty.e.ak:
    io.netty.util.UncheckedBooleanSupplier FALSE_SUPPLIER -> a
    io.netty.util.UncheckedBooleanSupplier TRUE_SUPPLIER -> d
    boolean get() -> get
    32:42:void <clinit>() -> <clinit>
io.netty.util.UncheckedBooleanSupplier$1 -> io.netty.e.al:
    32:32:void <init>() -> <init>
    35:35:boolean get() -> get
io.netty.util.UncheckedBooleanSupplier$2 -> io.netty.e.am:
    42:42:void <init>() -> <init>
    45:45:boolean get() -> get
io.netty.util.collection.CharObjectHashMap -> io.netty.e.a.a:
    java.lang.Object NULL_VALUE -> b
    int maxSize -> c
    float loadFactor -> d
    char[] keys -> e
    java.lang.Object[] values -> f
    int size -> g
    int mask -> h
    java.util.Set keySet -> i
    java.util.Set entrySet -> j
    java.lang.Iterable entries -> k
    boolean $assertionsDisabled -> a
    72:73:void <init>() -> <init>
    76:77:void <init>(int) -> <init>
    62:100:void <init>(int,float) -> <init>
    103:104:java.lang.Object toExternal(java.lang.Object) -> c
    109:109:java.lang.Object toInternal(java.lang.Object) -> d
    114:115:java.lang.Object get(char) -> c
    120:141:java.lang.Object put(char,java.lang.Object) -> a
    148:165:void putAll(java.util.Map) -> putAll
    169:176:java.lang.Object remove(char) -> d
    181:181:int size() -> size
    186:186:boolean isEmpty() -> isEmpty
    191:194:void clear() -> clear
    198:198:boolean containsKey(char) -> e
    204:211:boolean containsValue(java.lang.Object) -> containsValue
    216:216:java.lang.Iterable entries() -> h
    221:221:java.util.Collection values() -> values
    256:267:int hashCode() -> hashCode
    272:297:boolean equals(java.lang.Object) -> equals
    302:302:boolean containsKey(java.lang.Object) -> containsKey
    307:307:java.lang.Object get(java.lang.Object) -> get
    312:312:java.lang.Object put(java.lang.Character,java.lang.Object) -> a
    317:317:java.lang.Object remove(java.lang.Object) -> remove
    322:322:java.util.Set keySet() -> keySet
    327:327:java.util.Set entrySet() -> entrySet
    331:331:char objectToKey(java.lang.Object) -> e
    341:355:int indexOf(char) -> a
    365:365:int hashIndex(char) -> f
    372:372:int hashCode(char) -> g
    380:380:int probeNext(int) -> a
    387:397:void growSize() -> a
    407:434:boolean removeAt(int) -> b
    442:443:int calcMaxSize(int) -> c
    452:484:void rehash(int) -> d
    488:505:java.lang.String toString() -> toString
    513:513:java.lang.String keyToString(char) -> b
    37:37:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    37:37:int access$300(io.netty.util.collection.CharObjectHashMap) -> a
    37:37:java.util.Set access$500(io.netty.util.collection.CharObjectHashMap) -> b
    37:37:java.lang.Object[] access$600(io.netty.util.collection.CharObjectHashMap) -> c
    37:37:boolean access$700(io.netty.util.collection.CharObjectHashMap,int) -> a
    37:37:char[] access$800(io.netty.util.collection.CharObjectHashMap) -> d
    37:37:java.lang.Object access$900(java.lang.Object) -> a
    37:37:java.lang.Object access$1000(java.lang.Object) -> b
    37:49:void <clinit>() -> <clinit>
io.netty.util.collection.CharObjectHashMap$1 -> io.netty.e.a.b:
    io.netty.util.collection.CharObjectHashMap this$0 -> a
    64:64:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    67:67:java.util.Iterator iterator() -> iterator
io.netty.util.collection.CharObjectHashMap$2 -> io.netty.e.a.c:
    io.netty.util.collection.CharObjectHashMap this$0 -> a
    221:221:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    224:224:java.util.Iterator iterator() -> iterator
    246:246:int size() -> size
io.netty.util.collection.CharObjectHashMap$2$1 -> io.netty.e.a.d:
    io.netty.util.collection.CharObjectHashMap$PrimitiveIterator iter -> a
    io.netty.util.collection.CharObjectHashMap$2 this$1 -> b
    224:225:void <init>(io.netty.util.collection.CharObjectHashMap$2) -> <init>
    229:229:boolean hasNext() -> hasNext
    234:234:java.lang.Object next() -> next
    239:239:void remove() -> remove
io.netty.util.collection.CharObjectHashMap$EntrySet -> io.netty.e.a.e:
    io.netty.util.collection.CharObjectHashMap this$0 -> a
    519:519:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    522:522:java.util.Iterator iterator() -> iterator
    527:527:int size() -> size
    519:519:void <init>(io.netty.util.collection.CharObjectHashMap,io.netty.util.collection.CharObjectHashMap$1) -> <init>
io.netty.util.collection.CharObjectHashMap$KeySet -> io.netty.e.a.f:
    io.netty.util.collection.CharObjectHashMap this$0 -> a
    534:534:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    537:537:int size() -> size
    542:542:boolean contains(java.lang.Object) -> contains
    547:547:boolean remove(java.lang.Object) -> remove
    552:560:boolean retainAll(java.util.Collection) -> retainAll
    565:566:void clear() -> clear
    570:570:java.util.Iterator iterator() -> iterator
    534:534:void <init>(io.netty.util.collection.CharObjectHashMap,io.netty.util.collection.CharObjectHashMap$1) -> <init>
io.netty.util.collection.CharObjectHashMap$KeySet$1 -> io.netty.e.a.g:
    java.util.Iterator iter -> b
    io.netty.util.collection.CharObjectHashMap$KeySet this$1 -> a
    570:571:void <init>(io.netty.util.collection.CharObjectHashMap$KeySet) -> <init>
    575:575:boolean hasNext() -> hasNext
    580:580:java.lang.Character next() -> a
    585:586:void remove() -> remove
    570:570:java.lang.Object next() -> next
io.netty.util.collection.CharObjectHashMap$MapEntry -> io.netty.e.a.h:
    int entryIndex -> b
    io.netty.util.collection.CharObjectHashMap this$0 -> a
    693:695:void <init>(io.netty.util.collection.CharObjectHashMap,int) -> <init>
    699:700:java.lang.Character getKey() -> a
    705:706:java.lang.Object getValue() -> getValue
    711:714:java.lang.Object setValue(java.lang.Object) -> setValue
    718:721:void verifyExists() -> b
    690:690:java.lang.Object getKey() -> getKey
io.netty.util.collection.CharObjectHashMap$MapIterator -> io.netty.e.a.i:
    io.netty.util.collection.CharObjectHashMap$PrimitiveIterator iter -> b
    io.netty.util.collection.CharObjectHashMap this$0 -> a
    662:663:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    667:667:boolean hasNext() -> hasNext
    672:678:java.util.Map$Entry next() -> a
    683:684:void remove() -> remove
    662:662:java.lang.Object next() -> next
    662:662:void <init>(io.netty.util.collection.CharObjectHashMap,io.netty.util.collection.CharObjectHashMap$1) -> <init>
io.netty.util.collection.CharObjectHashMap$PrimitiveIterator -> io.netty.e.a.j:
    int prevIndex -> b
    int nextIndex -> c
    int entryIndex -> d
    io.netty.util.collection.CharObjectHashMap this$0 -> a
    594:597:void <init>(io.netty.util.collection.CharObjectHashMap) -> <init>
    600:602:void scanNext() -> d
    606:609:boolean hasNext() -> hasNext
    614:623:io.netty.util.collection.CharObjectMap$PrimitiveEntry next() -> a
    628:638:void remove() -> remove
    645:645:char key() -> b
    650:650:java.lang.Object value() -> c
    594:594:java.lang.Object next() -> next
    594:594:void <init>(io.netty.util.collection.CharObjectHashMap,io.netty.util.collection.CharObjectHashMap$1) -> <init>
    594:594:int access$1100(io.netty.util.collection.CharObjectHashMap$PrimitiveIterator) -> a
io.netty.util.collection.CharObjectMap -> io.netty.e.a.k:
    java.lang.Object get(char) -> c
io.netty.util.collection.CharObjectMap$PrimitiveEntry -> io.netty.e.a.l:
    char key() -> b
    java.lang.Object value() -> c
io.netty.util.collection.IntCollections -> io.netty.e.a.m:
    io.netty.util.collection.IntObjectMap EMPTY_MAP -> a
    39:39:io.netty.util.collection.IntObjectMap emptyMap() -> a
    29:29:void <clinit>() -> <clinit>
io.netty.util.collection.IntCollections$1 -> io.netty.e.a.n:
io.netty.util.collection.IntCollections$EmptyMap -> io.netty.e.a.o:
    52:52:void <init>() -> <init>
    55:55:java.lang.Object get(int) -> a
    60:60:java.lang.Object put(int,java.lang.Object) -> a
    65:65:java.lang.Object remove(int) -> b
    70:70:int size() -> size
    75:75:boolean isEmpty() -> isEmpty
    80:80:boolean containsKey(java.lang.Object) -> containsKey
    86:86:void clear() -> clear
    90:90:java.util.Set keySet() -> keySet
    95:95:boolean containsKey(int) -> c
    100:100:boolean containsValue(java.lang.Object) -> containsValue
    105:105:java.lang.Iterable entries() -> a
    110:110:java.lang.Object get(java.lang.Object) -> get
    115:115:java.lang.Object put(java.lang.Integer,java.lang.Object) -> a
    120:120:java.lang.Object remove(java.lang.Object) -> remove
    125:125:void putAll(java.util.Map) -> putAll
    130:130:java.util.Collection values() -> values
    135:135:java.util.Set entrySet() -> entrySet
    52:52:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    52:52:void <init>(io.netty.util.collection.IntCollections$1) -> <init>
io.netty.util.collection.IntObjectHashMap -> io.netty.e.a.p:
    java.lang.Object NULL_VALUE -> b
    int maxSize -> c
    float loadFactor -> d
    int[] keys -> e
    java.lang.Object[] values -> f
    int size -> g
    int mask -> h
    java.util.Set keySet -> i
    java.util.Set entrySet -> j
    java.lang.Iterable entries -> k
    boolean $assertionsDisabled -> a
    72:73:void <init>() -> <init>
    76:77:void <init>(int) -> <init>
    62:100:void <init>(int,float) -> <init>
    103:104:java.lang.Object toExternal(java.lang.Object) -> c
    109:109:java.lang.Object toInternal(java.lang.Object) -> d
    114:115:java.lang.Object get(int) -> a
    120:141:java.lang.Object put(int,java.lang.Object) -> a
    148:165:void putAll(java.util.Map) -> putAll
    169:176:java.lang.Object remove(int) -> b
    181:181:int size() -> size
    186:186:boolean isEmpty() -> isEmpty
    191:194:void clear() -> clear
    198:198:boolean containsKey(int) -> c
    204:211:boolean containsValue(java.lang.Object) -> containsValue
    216:216:java.lang.Iterable entries() -> a
    221:221:java.util.Collection values() -> values
    256:267:int hashCode() -> hashCode
    272:297:boolean equals(java.lang.Object) -> equals
    302:302:boolean containsKey(java.lang.Object) -> containsKey
    307:307:java.lang.Object get(java.lang.Object) -> get
    312:312:java.lang.Object put(java.lang.Integer,java.lang.Object) -> a
    317:317:java.lang.Object remove(java.lang.Object) -> remove
    322:322:java.util.Set keySet() -> keySet
    327:327:java.util.Set entrySet() -> entrySet
    331:331:int objectToKey(java.lang.Object) -> e
    341:355:int indexOf(int) -> e
    365:365:int hashIndex(int) -> f
    372:372:int hashCode(int) -> g
    380:380:int probeNext(int) -> h
    387:397:void growSize() -> b
    407:434:boolean removeAt(int) -> i
    442:443:int calcMaxSize(int) -> j
    452:484:void rehash(int) -> k
    488:505:java.lang.String toString() -> toString
    513:513:java.lang.String keyToString(int) -> d
    37:37:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    37:37:int access$300(io.netty.util.collection.IntObjectHashMap) -> a
    37:37:java.util.Set access$500(io.netty.util.collection.IntObjectHashMap) -> b
    37:37:java.lang.Object[] access$600(io.netty.util.collection.IntObjectHashMap) -> c
    37:37:boolean access$700(io.netty.util.collection.IntObjectHashMap,int) -> a
    37:37:int[] access$800(io.netty.util.collection.IntObjectHashMap) -> d
    37:37:java.lang.Object access$900(java.lang.Object) -> a
    37:37:java.lang.Object access$1000(java.lang.Object) -> b
    37:49:void <clinit>() -> <clinit>
io.netty.util.collection.IntObjectHashMap$1 -> io.netty.e.a.q:
    io.netty.util.collection.IntObjectHashMap this$0 -> a
    64:64:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    67:67:java.util.Iterator iterator() -> iterator
io.netty.util.collection.IntObjectHashMap$2 -> io.netty.e.a.r:
    io.netty.util.collection.IntObjectHashMap this$0 -> a
    221:221:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    224:224:java.util.Iterator iterator() -> iterator
    246:246:int size() -> size
io.netty.util.collection.IntObjectHashMap$2$1 -> io.netty.e.a.s:
    io.netty.util.collection.IntObjectHashMap$PrimitiveIterator iter -> a
    io.netty.util.collection.IntObjectHashMap$2 this$1 -> b
    224:225:void <init>(io.netty.util.collection.IntObjectHashMap$2) -> <init>
    229:229:boolean hasNext() -> hasNext
    234:234:java.lang.Object next() -> next
    239:239:void remove() -> remove
io.netty.util.collection.IntObjectHashMap$EntrySet -> io.netty.e.a.t:
    io.netty.util.collection.IntObjectHashMap this$0 -> a
    519:519:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    522:522:java.util.Iterator iterator() -> iterator
    527:527:int size() -> size
    519:519:void <init>(io.netty.util.collection.IntObjectHashMap,io.netty.util.collection.IntObjectHashMap$1) -> <init>
io.netty.util.collection.IntObjectHashMap$KeySet -> io.netty.e.a.u:
    io.netty.util.collection.IntObjectHashMap this$0 -> a
    534:534:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    537:537:int size() -> size
    542:542:boolean contains(java.lang.Object) -> contains
    547:547:boolean remove(java.lang.Object) -> remove
    552:560:boolean retainAll(java.util.Collection) -> retainAll
    565:566:void clear() -> clear
    570:570:java.util.Iterator iterator() -> iterator
    534:534:void <init>(io.netty.util.collection.IntObjectHashMap,io.netty.util.collection.IntObjectHashMap$1) -> <init>
io.netty.util.collection.IntObjectHashMap$KeySet$1 -> io.netty.e.a.v:
    java.util.Iterator iter -> b
    io.netty.util.collection.IntObjectHashMap$KeySet this$1 -> a
    570:571:void <init>(io.netty.util.collection.IntObjectHashMap$KeySet) -> <init>
    575:575:boolean hasNext() -> hasNext
    580:580:java.lang.Integer next() -> a
    585:586:void remove() -> remove
    570:570:java.lang.Object next() -> next
io.netty.util.collection.IntObjectHashMap$MapEntry -> io.netty.e.a.w:
    int entryIndex -> b
    io.netty.util.collection.IntObjectHashMap this$0 -> a
    693:695:void <init>(io.netty.util.collection.IntObjectHashMap,int) -> <init>
    699:700:java.lang.Integer getKey() -> a
    705:706:java.lang.Object getValue() -> getValue
    711:714:java.lang.Object setValue(java.lang.Object) -> setValue
    718:721:void verifyExists() -> b
    690:690:java.lang.Object getKey() -> getKey
io.netty.util.collection.IntObjectHashMap$MapIterator -> io.netty.e.a.x:
    io.netty.util.collection.IntObjectHashMap$PrimitiveIterator iter -> b
    io.netty.util.collection.IntObjectHashMap this$0 -> a
    662:663:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    667:667:boolean hasNext() -> hasNext
    672:678:java.util.Map$Entry next() -> a
    683:684:void remove() -> remove
    662:662:java.lang.Object next() -> next
    662:662:void <init>(io.netty.util.collection.IntObjectHashMap,io.netty.util.collection.IntObjectHashMap$1) -> <init>
io.netty.util.collection.IntObjectHashMap$PrimitiveIterator -> io.netty.e.a.y:
    int prevIndex -> b
    int nextIndex -> c
    int entryIndex -> d
    io.netty.util.collection.IntObjectHashMap this$0 -> a
    594:597:void <init>(io.netty.util.collection.IntObjectHashMap) -> <init>
    600:602:void scanNext() -> d
    606:609:boolean hasNext() -> hasNext
    614:623:io.netty.util.collection.IntObjectMap$PrimitiveEntry next() -> a
    628:638:void remove() -> remove
    645:645:int key() -> b
    650:650:java.lang.Object value() -> c
    594:594:java.lang.Object next() -> next
    594:594:void <init>(io.netty.util.collection.IntObjectHashMap,io.netty.util.collection.IntObjectHashMap$1) -> <init>
    594:594:int access$1100(io.netty.util.collection.IntObjectHashMap$PrimitiveIterator) -> a
io.netty.util.collection.IntObjectMap -> io.netty.e.a.z:
    java.lang.Object get(int) -> a
    java.lang.Object put(int,java.lang.Object) -> a
    java.lang.Object remove(int) -> b
    java.lang.Iterable entries() -> a
    boolean containsKey(int) -> c
io.netty.util.collection.IntObjectMap$PrimitiveEntry -> io.netty.e.a.A:
    int key() -> b
    java.lang.Object value() -> c
io.netty.util.concurrent.AbstractEventExecutor -> io.netty.e.b.a:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    long DEFAULT_SHUTDOWN_QUIET_PERIOD -> DEFAULT_SHUTDOWN_QUIET_PERIOD
    long DEFAULT_SHUTDOWN_TIMEOUT -> DEFAULT_SHUTDOWN_TIMEOUT
    io.netty.util.concurrent.EventExecutorGroup parent -> parent
    java.util.Collection selfCollection -> selfCollection
    43:44:void <init>() -> <init>
    40:48:void <init>(io.netty.util.concurrent.EventExecutorGroup) -> <init>
    52:52:io.netty.util.concurrent.EventExecutorGroup parent() -> parent
    57:57:io.netty.util.concurrent.EventExecutor next() -> next
    62:62:boolean inEventLoop() -> inEventLoop
    67:67:java.util.Iterator iterator() -> iterator
    72:72:io.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    void shutdown() -> shutdown
    88:89:java.util.List shutdownNow() -> shutdownNow
    94:94:io.netty.util.concurrent.Promise newPromise() -> newPromise
    99:99:io.netty.util.concurrent.ProgressivePromise newProgressivePromise() -> newProgressivePromise
    104:104:io.netty.util.concurrent.Future newSucceededFuture(java.lang.Object) -> newSucceededFuture
    109:109:io.netty.util.concurrent.Future newFailedFuture(java.lang.Throwable) -> newFailedFuture
    114:114:io.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    119:119:io.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    124:124:io.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    129:129:java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    134:134:java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    140:140:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    145:145:io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    150:150:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    155:155:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    163:167:void safeExecute(java.lang.Runnable) -> safeExecute
    33:33:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    33:33:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    33:33:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    33:33:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    33:33:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    33:33:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    33:33:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    34:34:void <clinit>() -> <clinit>
io.netty.util.concurrent.AbstractEventExecutorGroup -> io.netty.e.b.b:
    32:32:void <init>() -> <init>
    35:35:io.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    40:40:io.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    45:45:io.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    50:50:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    55:55:io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    60:60:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    65:65:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    70:70:io.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    void shutdown() -> shutdown
    86:87:java.util.List shutdownNow() -> shutdownNow
    93:93:java.util.List invokeAll(java.util.Collection) -> invokeAll
    99:99:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    104:104:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    110:110:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    115:116:void execute(java.lang.Runnable) -> execute
    32:32:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    32:32:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    32:32:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    32:32:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    32:32:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    32:32:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    32:32:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
io.netty.util.concurrent.AbstractFuture -> io.netty.e.b.c:
    28:28:void <init>() -> <init>
    32:41:java.lang.Object get() -> get
    46:56:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
io.netty.util.concurrent.AbstractScheduledEventExecutor -> io.netty.e.b.d:
    java.util.Comparator SCHEDULED_FUTURE_TASK_COMPARATOR -> SCHEDULED_FUTURE_TASK_COMPARATOR
    io.netty.util.internal.PriorityQueue scheduledTaskQueue -> scheduledTaskQueue
    boolean $assertionsDisabled -> $assertionsDisabled
    43:44:void <init>() -> <init>
    47:48:void <init>(io.netty.util.concurrent.EventExecutorGroup) -> <init>
    51:51:long nanoTime() -> nanoTime
    55:61:io.netty.util.internal.PriorityQueue scheduledTaskQueue() -> scheduledTaskQueue
    65:65:boolean isNullOrEmpty(java.util.Queue) -> isNullOrEmpty
    74:88:void cancelScheduledTasks() -> cancelScheduledTasks
    94:94:java.lang.Runnable pollScheduledTask() -> pollScheduledTask
    102:114:java.lang.Runnable pollScheduledTask(long) -> pollScheduledTask
    121:126:long nextScheduledTaskNano() -> nextScheduledTaskNano
    130:134:io.netty.util.concurrent.ScheduledFutureTask peekScheduledTask() -> peekScheduledTask
    141:143:boolean hasScheduledTasks() -> hasScheduledTasks
    148:154:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    159:165:io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    170:183:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    188:201:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    205:216:io.netty.util.concurrent.ScheduledFuture schedule(io.netty.util.concurrent.ScheduledFutureTask) -> schedule
    220:230:void removeScheduled(io.netty.util.concurrent.ScheduledFutureTask) -> removeScheduled
    31:31:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    31:31:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    31:31:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    31:31:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    31:33:void <clinit>() -> <clinit>
io.netty.util.concurrent.AbstractScheduledEventExecutor$1 -> io.netty.e.b.e:
    34:34:void <init>() -> <init>
    37:37:int compare(io.netty.util.concurrent.ScheduledFutureTask,io.netty.util.concurrent.ScheduledFutureTask) -> a
    34:34:int compare(java.lang.Object,java.lang.Object) -> compare
io.netty.util.concurrent.AbstractScheduledEventExecutor$2 -> io.netty.e.b.f:
    io.netty.util.concurrent.ScheduledFutureTask val$task -> a
    io.netty.util.concurrent.AbstractScheduledEventExecutor this$0 -> b
    208:208:void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor,io.netty.util.concurrent.ScheduledFutureTask) -> <init>
    211:212:void run() -> run
io.netty.util.concurrent.AbstractScheduledEventExecutor$3 -> io.netty.e.b.g:
    io.netty.util.concurrent.ScheduledFutureTask val$task -> a
    io.netty.util.concurrent.AbstractScheduledEventExecutor this$0 -> b
    223:223:void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor,io.netty.util.concurrent.ScheduledFutureTask) -> <init>
    226:227:void run() -> run
io.netty.util.concurrent.BlockingOperationException -> io.netty.e.b.h:
    28:28:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
io.netty.util.concurrent.CompleteFuture -> io.netty.e.b.i:
    io.netty.util.concurrent.EventExecutor executor -> executor
    33:35:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    41:41:io.netty.util.concurrent.EventExecutor executor() -> executor
    46:50:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    55:64:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    70:70:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    76:76:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    81:84:io.netty.util.concurrent.Future await() -> await
    89:92:boolean await(long,java.util.concurrent.TimeUnit) -> await
    97:97:io.netty.util.concurrent.Future sync() -> sync
    102:102:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    107:110:boolean await(long) -> await
    115:115:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    120:120:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    125:125:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    130:130:boolean isDone() -> isDone
    135:135:boolean isCancellable() -> isCancellable
    140:140:boolean isCancelled() -> isCancelled
    145:145:boolean cancel(boolean) -> cancel
io.netty.util.concurrent.DefaultEventExecutorChooserFactory -> io.netty.e.b.j:
    io.netty.util.concurrent.DefaultEventExecutorChooserFactory INSTANCE -> a
    30:30:void <init>() -> <init>
    35:38:io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser newChooser(io.netty.util.concurrent.EventExecutor[]) -> a
    43:43:boolean isPowerOfTwo(int) -> a
    28:28:void <clinit>() -> <clinit>
io.netty.util.concurrent.DefaultEventExecutorChooserFactory$GenericEventExecutorChooser -> io.netty.e.b.k:
    java.util.concurrent.atomic.AtomicInteger idx -> a
    io.netty.util.concurrent.EventExecutor[] executors -> b
    61:66:void <init>(io.netty.util.concurrent.EventExecutor[]) -> <init>
    70:70:io.netty.util.concurrent.EventExecutor next() -> a
io.netty.util.concurrent.DefaultEventExecutorChooserFactory$PowerOfTwoEventExecutorChooser -> io.netty.e.b.l:
    java.util.concurrent.atomic.AtomicInteger idx -> a
    io.netty.util.concurrent.EventExecutor[] executors -> b
    47:52:void <init>(io.netty.util.concurrent.EventExecutor[]) -> <init>
    56:56:io.netty.util.concurrent.EventExecutor next() -> a
io.netty.util.concurrent.DefaultFutureListeners -> io.netty.e.b.m:
    io.netty.util.concurrent.GenericFutureListener[] listeners -> a
    int size -> b
    int progressiveSize -> c
    28:39:void <init>(io.netty.util.concurrent.GenericFutureListener,io.netty.util.concurrent.GenericFutureListener) -> <init>
    42:53:void add(io.netty.util.concurrent.GenericFutureListener) -> a
    56:73:void remove(io.netty.util.concurrent.GenericFutureListener) -> b
    76:76:io.netty.util.concurrent.GenericFutureListener[] listeners() -> a
    80:80:int size() -> b
    84:84:int progressiveSize() -> c
io.netty.util.concurrent.DefaultProgressivePromise -> io.netty.e.b.n:
    30:31:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    33:33:void <init>() -> <init>
    37:53:io.netty.util.concurrent.ProgressivePromise setProgress(long,long) -> setProgress
    58:68:boolean tryProgress(long,long) -> tryProgress
    73:74:io.netty.util.concurrent.ProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    79:80:io.netty.util.concurrent.ProgressivePromise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    85:86:io.netty.util.concurrent.ProgressivePromise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    91:92:io.netty.util.concurrent.ProgressivePromise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    97:98:io.netty.util.concurrent.ProgressivePromise sync() -> sync
    103:104:io.netty.util.concurrent.ProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    109:110:io.netty.util.concurrent.ProgressivePromise await() -> await
    115:116:io.netty.util.concurrent.ProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    121:122:io.netty.util.concurrent.ProgressivePromise setSuccess(java.lang.Object) -> setSuccess
    127:128:io.netty.util.concurrent.ProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    19:19:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    19:19:io.netty.util.concurrent.Promise sync() -> sync
    19:19:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    19:19:io.netty.util.concurrent.Promise await() -> await
    19:19:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    19:19:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    19:19:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    19:19:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    19:19:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    19:19:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    19:19:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    19:19:io.netty.util.concurrent.Future await() -> await
    19:19:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    19:19:io.netty.util.concurrent.Future sync() -> sync
    19:19:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    19:19:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    19:19:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    19:19:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    19:19:io.netty.util.concurrent.ProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    19:19:io.netty.util.concurrent.ProgressiveFuture await() -> await
    19:19:io.netty.util.concurrent.ProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    19:19:io.netty.util.concurrent.ProgressiveFuture sync() -> sync
    19:19:io.netty.util.concurrent.ProgressiveFuture removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    19:19:io.netty.util.concurrent.ProgressiveFuture removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    19:19:io.netty.util.concurrent.ProgressiveFuture addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    19:19:io.netty.util.concurrent.ProgressiveFuture addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
io.netty.util.concurrent.DefaultPromise -> io.netty.e.b.o:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.internal.logging.InternalLogger rejectedExecutionLogger -> rejectedExecutionLogger
    int MAX_LISTENER_STACK_DEPTH -> MAX_LISTENER_STACK_DEPTH
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater RESULT_UPDATER -> RESULT_UPDATER
    io.netty.util.Signal SUCCESS -> SUCCESS
    io.netty.util.Signal UNCANCELLABLE -> UNCANCELLABLE
    io.netty.util.concurrent.DefaultPromise$CauseHolder CANCELLATION_CAUSE_HOLDER -> CANCELLATION_CAUSE_HOLDER
    java.lang.Object result -> result
    io.netty.util.concurrent.EventExecutor executor -> executor
    java.lang.Object listeners -> listeners
    short waiters -> waiters
    boolean notifyingListeners -> notifyingListeners
    80:82:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    87:90:void <init>() -> <init>
    94:98:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    103:107:boolean trySuccess(java.lang.Object) -> trySuccess
    112:116:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    121:125:boolean tryFailure(java.lang.Throwable) -> tryFailure
    130:134:boolean setUncancellable() -> setUncancellable
    139:140:boolean isSuccess() -> isSuccess
    145:145:boolean isCancellable() -> isCancellable
    150:151:java.lang.Throwable cause() -> cause
    156:166:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    171:186:io.netty.util.concurrent.Promise addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    191:197:io.netty.util.concurrent.Promise removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    202:213:io.netty.util.concurrent.Promise removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    218:238:io.netty.util.concurrent.Promise await() -> await
    243:268:io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    273:273:boolean await(long,java.util.concurrent.TimeUnit) -> await
    278:278:boolean await(long) -> await
    284:287:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    294:297:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    304:308:java.lang.Object getNow() -> getNow
    313:318:boolean cancel(boolean) -> cancel
    323:323:boolean isCancelled() -> isCancelled
    328:328:boolean isDone() -> isDone
    333:335:io.netty.util.concurrent.Promise sync() -> sync
    340:342:io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    347:347:java.lang.String toString() -> toString
    351:373:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    385:385:io.netty.util.concurrent.EventExecutor executor() -> executor
    389:393:void checkDeadLock() -> checkDeadLock
    406:410:void notifyListener(io.netty.util.concurrent.EventExecutor,io.netty.util.concurrent.Future,io.netty.util.concurrent.GenericFutureListener) -> notifyListener
    413:434:void notifyListeners() -> notifyListeners
    444:464:void notifyListenerWithStackOverFlowProtection(io.netty.util.concurrent.EventExecutor,io.netty.util.concurrent.Future,io.netty.util.concurrent.GenericFutureListener) -> notifyListenerWithStackOverFlowProtection
    468:492:void notifyListenersNow() -> notifyListenersNow
    497:502:void notifyListeners0(io.netty.util.concurrent.DefaultFutureListeners) -> notifyListeners0
    507:511:void notifyListener0(io.netty.util.concurrent.Future,io.netty.util.concurrent.GenericFutureListener) -> notifyListener0
    514:521:void addListener0(io.netty.util.concurrent.GenericFutureListener) -> addListener0
    524:529:void removeListener0(io.netty.util.concurrent.GenericFutureListener) -> removeListener0
    532:532:boolean setSuccess0(java.lang.Object) -> setSuccess0
    536:536:boolean setFailure0(java.lang.Throwable) -> setFailure0
    540:545:boolean setValue0(java.lang.Object) -> setValue0
    549:552:void checkNotifyWaiters() -> checkNotifyWaiters
    555:559:void incWaiters() -> incWaiters
    562:563:void decWaiters() -> decWaiters
    566:572:void rethrowIfFailed() -> rethrowIfFailed
    575:622:boolean await0(long,boolean) -> await0
    639:676:void notifyProgressiveListeners(long,long) -> notifyProgressiveListeners
    683:719:java.lang.Object progressiveListeners() -> progressiveListeners
    725:731:void notifyProgressiveListeners0(io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> notifyProgressiveListeners0
    737:741:void notifyProgressiveListener0(io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> notifyProgressiveListener0
    744:744:boolean isCancelled0(java.lang.Object) -> isCancelled0
    748:748:boolean isDone0(java.lang.Object) -> isDone0
    760:764:void safeExecute(io.netty.util.concurrent.EventExecutor,java.lang.Runnable) -> safeExecute
    34:34:io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    34:34:io.netty.util.concurrent.Future await() -> await
    34:34:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    34:34:io.netty.util.concurrent.Future sync() -> sync
    34:34:io.netty.util.concurrent.Future removeListeners(io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    34:34:io.netty.util.concurrent.Future removeListener(io.netty.util.concurrent.GenericFutureListener) -> removeListener
    34:34:io.netty.util.concurrent.Future addListeners(io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    34:34:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    34:34:void access$000(io.netty.util.concurrent.DefaultPromise) -> access$000
    34:34:void access$100(io.netty.util.concurrent.Future,io.netty.util.concurrent.GenericFutureListener) -> access$100
    34:34:void access$200(io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> access$200
    34:34:void access$300(io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> access$300
    35:45:void <clinit>() -> <clinit>
io.netty.util.concurrent.DefaultPromise$1 -> io.netty.e.b.p:
    io.netty.util.concurrent.DefaultPromise this$0 -> a
    428:428:void <init>(io.netty.util.concurrent.DefaultPromise) -> <init>
    431:432:void run() -> run
io.netty.util.concurrent.DefaultPromise$2 -> io.netty.e.b.q:
    io.netty.util.concurrent.Future val$future -> a
    io.netty.util.concurrent.GenericFutureListener val$listener -> b
    458:458:void <init>(io.netty.util.concurrent.Future,io.netty.util.concurrent.GenericFutureListener) -> <init>
    461:462:void run() -> run
io.netty.util.concurrent.DefaultPromise$3 -> io.netty.e.b.r:
    io.netty.util.concurrent.ProgressiveFuture val$self -> a
    io.netty.util.concurrent.GenericProgressiveFutureListener[] val$array -> b
    long val$progress -> c
    long val$total -> d
    io.netty.util.concurrent.DefaultPromise this$0 -> e
    659:659:void <init>(io.netty.util.concurrent.DefaultPromise,io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> <init>
    662:663:void run() -> run
io.netty.util.concurrent.DefaultPromise$4 -> io.netty.e.b.s:
    io.netty.util.concurrent.ProgressiveFuture val$self -> a
    io.netty.util.concurrent.GenericProgressiveFutureListener val$l -> b
    long val$progress -> c
    long val$total -> d
    io.netty.util.concurrent.DefaultPromise this$0 -> e
    668:668:void <init>(io.netty.util.concurrent.DefaultPromise,io.netty.util.concurrent.ProgressiveFuture,io.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> <init>
    671:672:void run() -> run
io.netty.util.concurrent.DefaultPromise$CauseHolder -> io.netty.e.b.t:
    java.lang.Throwable cause -> a
    753:755:void <init>(java.lang.Throwable) -> <init>
io.netty.util.concurrent.DefaultThreadFactory -> io.netty.e.b.u:
    java.util.concurrent.atomic.AtomicInteger poolId -> b
    java.util.concurrent.atomic.AtomicInteger nextId -> c
    java.lang.String prefix -> d
    boolean daemon -> e
    int priority -> f
    java.lang.ThreadGroup threadGroup -> a
    39:40:void <init>(java.lang.Class) -> <init>
    55:56:void <init>(java.lang.Class,int) -> <init>
    63:64:void <init>(java.lang.Class,boolean,int) -> <init>
    67:81:java.lang.String toPoolName(java.lang.Class) -> a
    32:99:void <init>(java.lang.String,boolean,int,java.lang.ThreadGroup) -> <init>
    102:104:void <init>(java.lang.String,boolean,int) -> <init>
    108:120:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    124:124:java.lang.Thread newThread(java.lang.Runnable,java.lang.String) -> a
    30:30:void <clinit>() -> <clinit>
io.netty.util.concurrent.EventExecutor -> io.netty.e.b.v:
    boolean inEventLoop() -> inEventLoop
    boolean inEventLoop(java.lang.Thread) -> inEventLoop
    io.netty.util.concurrent.Promise newPromise() -> newPromise
    io.netty.util.concurrent.Future newSucceededFuture(java.lang.Object) -> newSucceededFuture
    io.netty.util.concurrent.Future newFailedFuture(java.lang.Throwable) -> newFailedFuture
io.netty.util.concurrent.EventExecutorChooserFactory -> io.netty.e.b.w:
    io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser newChooser(io.netty.util.concurrent.EventExecutor[]) -> a
io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser -> io.netty.e.b.x:
    io.netty.util.concurrent.EventExecutor next() -> a
io.netty.util.concurrent.EventExecutorGroup -> io.netty.e.b.y:
    boolean isShuttingDown() -> isShuttingDown
    io.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    void shutdown() -> shutdown
    io.netty.util.concurrent.EventExecutor next() -> next
    io.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    io.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    io.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
io.netty.util.concurrent.FailedFuture -> io.netty.e.b.z:
    java.lang.Throwable cause -> a
    36:41:void <init>(io.netty.util.concurrent.EventExecutor,java.lang.Throwable) -> <init>
    45:45:java.lang.Throwable cause() -> cause
    50:50:boolean isSuccess() -> isSuccess
    55:56:io.netty.util.concurrent.Future sync() -> sync
    61:62:io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    67:67:java.lang.Object getNow() -> getNow
io.netty.util.concurrent.FastThreadLocal -> io.netty.e.b.A:
    int variablesToRemoveIndex -> variablesToRemoveIndex
    int index -> index
    54:73:void removeAll() -> removeAll
    79:83:int size() -> size
    94:95:void destroy() -> destroy
    99:109:void addToVariablesToRemove(io.netty.util.internal.InternalThreadLocalMap,io.netty.util.concurrent.FastThreadLocal) -> addToVariablesToRemove
    114:123:void removeFromVariablesToRemove(io.netty.util.internal.InternalThreadLocalMap,io.netty.util.concurrent.FastThreadLocal) -> removeFromVariablesToRemove
    127:129:void <init>() -> <init>
    135:135:java.lang.Object get() -> get
    144:149:java.lang.Object get(io.netty.util.internal.InternalThreadLocalMap) -> get
    153:162:java.lang.Object initialize(io.netty.util.internal.InternalThreadLocalMap) -> initialize
    169:174:void set(java.lang.Object) -> set
    180:187:void set(io.netty.util.internal.InternalThreadLocalMap,java.lang.Object) -> set
    193:193:boolean isSet() -> isSet
    201:201:boolean isSet(io.netty.util.internal.InternalThreadLocalMap) -> isSet
    207:208:void remove() -> remove
    217:231:void remove(io.netty.util.internal.InternalThreadLocalMap) -> remove
    237:237:java.lang.Object initialValue() -> initialValue
    243:243:void onRemoval(java.lang.Object) -> onRemoval
    46:46:void <clinit>() -> <clinit>
io.netty.util.concurrent.FastThreadLocalRunnable -> io.netty.e.b.B:
    java.lang.Runnable runnable -> a
    23:25:void <init>(java.lang.Runnable) -> <init>
    30:34:void run() -> run
    37:37:java.lang.Runnable wrap(java.lang.Runnable) -> a
io.netty.util.concurrent.FastThreadLocalThread -> io.netty.e.b.C:
    boolean cleanupFastThreadLocals -> a
    io.netty.util.internal.InternalThreadLocalMap threadLocalMap -> b
    30:32:void <init>() -> <init>
    55:57:void <init>(java.lang.Runnable,java.lang.String) -> <init>
    60:62:void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String) -> <init>
    74:74:io.netty.util.internal.InternalThreadLocalMap threadLocalMap() -> a
    82:83:void setThreadLocalMap(io.netty.util.internal.InternalThreadLocalMap) -> a
    90:90:boolean willCleanupFastThreadLocals() -> b
io.netty.util.concurrent.Future -> io.netty.e.b.D:
    boolean isSuccess() -> isSuccess
    boolean isCancellable() -> isCancellable
    java.lang.Throwable cause() -> cause
    io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
    io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    io.netty.util.concurrent.Future await() -> await
    boolean await(long,java.util.concurrent.TimeUnit) -> await
    boolean await(long) -> await
    boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    java.lang.Object getNow() -> getNow
    boolean cancel(boolean) -> cancel
io.netty.util.concurrent.FutureListener -> io.netty.e.b.E:
io.netty.util.concurrent.GenericFutureListener -> io.netty.e.b.F:
    void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.util.concurrent.GenericProgressiveFutureListener -> io.netty.e.b.G:
    void operationProgressed(io.netty.util.concurrent.ProgressiveFuture,long,long) -> a
io.netty.util.concurrent.GlobalEventExecutor -> io.netty.e.b.H:
    io.netty.util.internal.logging.InternalLogger logger -> f
    long SCHEDULE_QUIET_PERIOD_INTERVAL -> g
    io.netty.util.concurrent.GlobalEventExecutor INSTANCE -> a
    java.util.concurrent.BlockingQueue taskQueue -> b
    io.netty.util.concurrent.ScheduledFutureTask quietPeriodTask -> c
    java.util.concurrent.ThreadFactory threadFactory -> d
    io.netty.util.concurrent.GlobalEventExecutor$TaskRunner taskRunner -> h
    java.util.concurrent.atomic.AtomicBoolean started -> i
    java.lang.Thread thread -> e
    io.netty.util.concurrent.Future terminationFuture -> j
    43:66:void <init>() -> <init>
    74:108:java.lang.Runnable takeTask() -> a
    112:118:void fetchFromScheduledTaskQueue() -> c
    135:139:void addTask(java.lang.Runnable) -> a
    143:143:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    148:148:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    153:153:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    159:159:void shutdown() -> shutdown
    164:164:boolean isShuttingDown() -> isShuttingDown
    169:169:boolean isShutdown() -> isShutdown
    174:174:boolean isTerminated() -> isTerminated
    179:179:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    205:213:void execute(java.lang.Runnable) -> execute
    216:231:void startThread() -> d
    35:35:io.netty.util.internal.logging.InternalLogger access$000() -> b
    35:35:java.util.concurrent.atomic.AtomicBoolean access$100(io.netty.util.concurrent.GlobalEventExecutor) -> a
    37:41:void <clinit>() -> <clinit>
io.netty.util.concurrent.GlobalEventExecutor$1 -> io.netty.e.b.I:
    io.netty.util.concurrent.GlobalEventExecutor this$0 -> a
    45:45:void <init>(io.netty.util.concurrent.GlobalEventExecutor) -> <init>
    49:49:void run() -> run
io.netty.util.concurrent.GlobalEventExecutor$TaskRunner -> io.netty.e.b.J:
    boolean $assertionsDisabled -> a
    io.netty.util.concurrent.GlobalEventExecutor this$0 -> b
    233:233:void <init>(io.netty.util.concurrent.GlobalEventExecutor) -> <init>
    237:280:void run() -> run
    233:233:void <clinit>() -> <clinit>
io.netty.util.concurrent.ImmediateEventExecutor -> io.netty.e.b.K:
    io.netty.util.internal.logging.InternalLogger logger -> b
    io.netty.util.concurrent.ImmediateEventExecutor INSTANCE -> a
    io.netty.util.concurrent.FastThreadLocal DELAYED_RUNNABLES -> c
    io.netty.util.concurrent.FastThreadLocal RUNNING -> d
    io.netty.util.concurrent.Future terminationFuture -> e
    54:57:void <init>() -> <init>
    61:61:boolean inEventLoop() -> inEventLoop
    66:66:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    71:71:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    76:76:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    81:81:void shutdown() -> shutdown
    85:85:boolean isShuttingDown() -> isShuttingDown
    90:90:boolean isShutdown() -> isShutdown
    95:95:boolean isTerminated() -> isTerminated
    100:100:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    105:129:void execute(java.lang.Runnable) -> execute
    133:133:io.netty.util.concurrent.Promise newPromise() -> newPromise
    138:138:io.netty.util.concurrent.ProgressivePromise newProgressivePromise() -> newProgressivePromise
    33:47:void <clinit>() -> <clinit>
io.netty.util.concurrent.ImmediateEventExecutor$1 -> io.netty.e.b.L:
    38:38:void <init>() -> <init>
    41:41:java.util.Queue initialValue() -> a
    38:38:java.lang.Object initialValue() -> initialValue
io.netty.util.concurrent.ImmediateEventExecutor$2 -> io.netty.e.b.M:
    47:47:void <init>() -> <init>
    50:50:java.lang.Boolean initialValue() -> a
    47:47:java.lang.Object initialValue() -> initialValue
io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise -> io.netty.e.b.N:
    154:155:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    160:160:void checkDeadLock() -> checkDeadLock
io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise -> io.netty.e.b.O:
    143:144:void <init>(io.netty.util.concurrent.EventExecutor) -> <init>
    149:149:void checkDeadLock() -> checkDeadLock
io.netty.util.concurrent.ImmediateExecutor -> io.netty.e.b.P:
    io.netty.util.concurrent.ImmediateExecutor INSTANCE -> a
    26:28:void <init>() -> <init>
    32:36:void execute(java.lang.Runnable) -> execute
    24:24:void <clinit>() -> <clinit>
io.netty.util.concurrent.MultithreadEventExecutorGroup -> io.netty.e.b.Q:
    io.netty.util.concurrent.EventExecutor[] children -> children
    java.util.Set readonlyChildren -> readonlyChildren
    java.util.concurrent.atomic.AtomicInteger terminatedChildren -> terminatedChildren
    io.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser chooser -> chooser
    47:48:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    58:59:void <init>(int,java.util.concurrent.Executor,java.lang.Object[]) -> <init>
    35:129:void <init>(int,java.util.concurrent.Executor,io.netty.util.concurrent.EventExecutorChooserFactory,java.lang.Object[]) -> <init>
    132:132:java.util.concurrent.ThreadFactory newDefaultThreadFactory() -> newDefaultThreadFactory
    137:137:io.netty.util.concurrent.EventExecutor next() -> next
    142:142:java.util.Iterator iterator() -> iterator
    150:150:int executorCount() -> executorCount
    io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    162:165:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    170:170:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    176:179:void shutdown() -> shutdown
    183:188:boolean isShuttingDown() -> isShuttingDown
    193:198:boolean isShutdown() -> isShutdown
    203:208:boolean isTerminated() -> isTerminated
    214:226:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    31:31:java.util.concurrent.atomic.AtomicInteger access$000(io.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$000
    31:31:io.netty.util.concurrent.EventExecutor[] access$100(io.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$100
    31:31:io.netty.util.concurrent.Promise access$200(io.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$200
io.netty.util.concurrent.MultithreadEventExecutorGroup$1 -> io.netty.e.b.R:
    io.netty.util.concurrent.MultithreadEventExecutorGroup this$0 -> a
    113:113:void <init>(io.netty.util.concurrent.MultithreadEventExecutorGroup) -> <init>
    116:119:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.util.concurrent.OrderedEventExecutor -> io.netty.e.b.S:
io.netty.util.concurrent.ProgressiveFuture -> io.netty.e.b.T:
io.netty.util.concurrent.ProgressivePromise -> io.netty.e.b.U:
    boolean tryProgress(long,long) -> tryProgress
io.netty.util.concurrent.Promise -> io.netty.e.b.V:
    io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    boolean trySuccess(java.lang.Object) -> trySuccess
    io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    boolean tryFailure(java.lang.Throwable) -> tryFailure
    boolean setUncancellable() -> setUncancellable
    io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener) -> addListener
io.netty.util.concurrent.PromiseAggregator -> io.netty.e.b.W:
    io.netty.util.concurrent.Promise aggregatePromise -> aggregatePromise
    boolean failPending -> failPending
    java.util.Set pendingPromises -> pendingPromises
    45:51:void <init>(io.netty.util.concurrent.Promise,boolean) -> <init>
    58:59:void <init>(io.netty.util.concurrent.Promise) -> <init>
    66:90:io.netty.util.concurrent.PromiseAggregator add(io.netty.util.concurrent.Promise[]) -> add
    95:113:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.util.concurrent.PromiseCombiner -> io.netty.e.b.X:
    int expectedCount -> a
    int doneCount -> b
    boolean doneAdding -> c
    io.netty.util.concurrent.Promise aggregatePromise -> d
    java.lang.Throwable cause -> e
    io.netty.util.concurrent.GenericFutureListener listener -> f
    32:38:void <init>() -> <init>
    61:62:void add(io.netty.util.concurrent.Promise) -> a
    72:75:void add(io.netty.util.concurrent.Future) -> a
    115:123:void finish(io.netty.util.concurrent.Promise) -> b
    126:126:boolean tryPromise() -> a
    130:133:void checkAddAllowed() -> b
    32:32:int access$004(io.netty.util.concurrent.PromiseCombiner) -> a
    32:32:java.lang.Throwable access$100(io.netty.util.concurrent.PromiseCombiner) -> b
    32:32:java.lang.Throwable access$102(io.netty.util.concurrent.PromiseCombiner,java.lang.Throwable) -> a
    32:32:int access$000(io.netty.util.concurrent.PromiseCombiner) -> c
    32:32:int access$200(io.netty.util.concurrent.PromiseCombiner) -> d
    32:32:boolean access$300(io.netty.util.concurrent.PromiseCombiner) -> e
    32:32:boolean access$400(io.netty.util.concurrent.PromiseCombiner) -> f
io.netty.util.concurrent.PromiseCombiner$1 -> io.netty.e.b.Y:
    io.netty.util.concurrent.PromiseCombiner this$0 -> a
    38:38:void <init>(io.netty.util.concurrent.PromiseCombiner) -> <init>
    41:48:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
io.netty.util.concurrent.PromiseNotifier -> io.netty.e.b.Z:
    io.netty.util.internal.logging.InternalLogger logger -> logger
    io.netty.util.concurrent.Promise[] promises -> promises
    boolean logNotifyFailure -> logNotifyFailure
    44:45:void <init>(io.netty.util.concurrent.Promise[]) -> <init>
    54:63:void <init>(boolean,io.netty.util.concurrent.Promise[]) -> <init>
    67:83:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
    33:33:void <clinit>() -> <clinit>
io.netty.util.concurrent.PromiseTask -> io.netty.e.b.aa:
    java.util.concurrent.Callable task -> a
    24:24:java.util.concurrent.Callable toCallable(java.lang.Runnable,java.lang.Object) -> a
    51:52:void <init>(io.netty.util.concurrent.EventExecutor,java.lang.Runnable,java.lang.Object) -> <init>
    55:57:void <init>(io.netty.util.concurrent.EventExecutor,java.util.concurrent.Callable) -> <init>
    61:61:int hashCode() -> hashCode
    66:66:boolean equals(java.lang.Object) -> equals
    72:79:void run() -> run
    83:83:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    87:88:io.netty.util.concurrent.Promise setFailureInternal(java.lang.Throwable) -> a
    93:93:boolean tryFailure(java.lang.Throwable) -> tryFailure
    102:102:io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    106:107:io.netty.util.concurrent.Promise setSuccessInternal(java.lang.Object) -> a
    112:112:boolean trySuccess(java.lang.Object) -> trySuccess
    121:121:boolean setUncancellable() -> setUncancellable
    125:125:boolean setUncancellableInternal() -> a
    130:135:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
io.netty.util.concurrent.PromiseTask$RunnableAdapter -> io.netty.e.b.ab:
    java.lang.Runnable task -> a
    java.lang.Object result -> b
    31:34:void <init>(java.lang.Runnable,java.lang.Object) -> <init>
    38:39:java.lang.Object call() -> call
    44:44:java.lang.String toString() -> toString
io.netty.util.concurrent.RejectedExecutionHandler -> io.netty.e.b.ac:
    void rejected(java.lang.Runnable,io.netty.util.concurrent.SingleThreadEventExecutor) -> a
io.netty.util.concurrent.RejectedExecutionHandlers -> io.netty.e.b.ad:
    io.netty.util.concurrent.RejectedExecutionHandler REJECT -> a
    41:41:io.netty.util.concurrent.RejectedExecutionHandler reject() -> a
    28:28:void <clinit>() -> <clinit>
io.netty.util.concurrent.RejectedExecutionHandlers$1 -> io.netty.e.b.ae:
    28:28:void <init>() -> <init>
    31:31:void rejected(java.lang.Runnable,io.netty.util.concurrent.SingleThreadEventExecutor) -> a
io.netty.util.concurrent.ScheduledFuture -> io.netty.e.b.af:
io.netty.util.concurrent.ScheduledFutureTask -> io.netty.e.b.ag:
    java.util.concurrent.atomic.AtomicLong nextTaskId -> c
    long START_TIME -> d
    long id -> e
    long deadlineNanos -> f
    long periodNanos -> g
    int queueIndex -> h
    boolean $assertionsDisabled -> b
    34:34:long nanoTime() -> b
    38:38:long deadlineNanos(long) -> a
    52:53:void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor,java.lang.Runnable,java.lang.Object,long) -> <init>
    41:65:void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor,java.util.concurrent.Callable,long,long) -> <init>
    41:74:void <init>(io.netty.util.concurrent.AbstractScheduledEventExecutor,java.util.concurrent.Callable,long) -> <init>
    78:78:io.netty.util.concurrent.EventExecutor executor() -> executor
    82:82:long deadlineNanos() -> c
    86:86:long delayNanos() -> d
    90:90:long delayNanos(long) -> b
    95:95:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    100:115:int compareTo(java.util.concurrent.Delayed) -> a
    121:152:void run() -> run
    156:160:boolean cancel(boolean) -> cancel
    164:164:boolean cancelWithoutRemove(boolean) -> a
    169:178:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    183:183:int priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue) -> a
    188:189:void priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue,int) -> a
    28:28:int compareTo(java.lang.Object) -> compareTo
    28:31:void <clinit>() -> <clinit>
io.netty.util.concurrent.SingleThreadEventExecutor -> io.netty.e.b.ah:
    int DEFAULT_MAX_PENDING_EXECUTOR_TASKS -> DEFAULT_MAX_PENDING_EXECUTOR_TASKS
    io.netty.util.internal.logging.InternalLogger logger -> logger
    int ST_NOT_STARTED -> ST_NOT_STARTED
    int ST_STARTED -> ST_STARTED
    int ST_SHUTTING_DOWN -> ST_SHUTTING_DOWN
    int ST_SHUTDOWN -> ST_SHUTDOWN
    int ST_TERMINATED -> ST_TERMINATED
    java.lang.Runnable WAKEUP_TASK -> WAKEUP_TASK
    java.lang.Runnable NOOP_TASK -> NOOP_TASK
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater STATE_UPDATER -> STATE_UPDATER
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater PROPERTIES_UPDATER -> PROPERTIES_UPDATER
    java.util.Queue taskQueue -> taskQueue
    java.lang.Thread thread -> thread
    io.netty.util.concurrent.ThreadProperties threadProperties -> threadProperties
    java.util.concurrent.Executor executor -> executor
    boolean interrupted -> interrupted
    java.util.concurrent.Semaphore threadLock -> threadLock
    java.util.Set shutdownHooks -> shutdownHooks
    boolean addTaskWakesUp -> addTaskWakesUp
    int maxPendingTasks -> maxPendingTasks
    io.netty.util.concurrent.RejectedExecutionHandler rejectedExecutionHandler -> rejectedExecutionHandler
    long lastExecutionTime -> lastExecutionTime
    int state -> state
    long gracefulShutdownQuietPeriod -> gracefulShutdownQuietPeriod
    long gracefulShutdownTimeout -> gracefulShutdownTimeout
    long gracefulShutdownStartTime -> gracefulShutdownStartTime
    io.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    long SCHEDULE_PURGE_INTERVAL -> SCHEDULE_PURGE_INTERVAL
    boolean $assertionsDisabled -> $assertionsDisabled
    117:118:void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory,boolean) -> <init>
    133:134:void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory,boolean,int,io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    145:146:void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor,boolean) -> <init>
    90:167:void <init>(io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor,boolean,int,io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    174:174:java.util.Queue newTaskQueue() -> newTaskQueue
    184:184:java.util.Queue newTaskQueue(int) -> newTaskQueue
    191:197:void interruptThread() -> interruptThread
    203:204:java.lang.Runnable pollTask() -> pollTask
    209:213:java.lang.Runnable pollTaskFrom(java.util.Queue) -> pollTaskFrom
    227:270:java.lang.Runnable takeTask() -> takeTask
    274:284:boolean fetchFromScheduledTaskQueue() -> fetchFromScheduledTaskQueue
    291:292:java.lang.Runnable peekTask() -> peekTask
    299:300:boolean hasTasks() -> hasTasks
    310:310:int pendingTasks() -> pendingTasks
    318:324:void addTask(java.lang.Runnable) -> addTask
    327:330:boolean offerTask(java.lang.Runnable) -> offerTask
    337:340:boolean removeTask(java.lang.Runnable) -> removeTask
    349:364:boolean runAllTasks() -> runAllTasks
    375:383:boolean runAllTasksFrom(java.util.Queue) -> runAllTasksFrom
    393:426:boolean runAllTasks(long) -> runAllTasks
    433:433:void afterRunningAllTasks() -> afterRunningAllTasks
    438:443:long delayNanos(long) -> delayNanos
    454:455:void updateLastExecutionTime() -> updateLastExecutionTime
    void run() -> run
    467:467:void cleanup() -> cleanup
    470:475:void wakeup(boolean) -> wakeup
    479:479:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    486:496:void addShutdownHook(java.lang.Runnable) -> addShutdownHook
    502:512:void removeShutdownHook(java.lang.Runnable) -> removeShutdownHook
    515:535:boolean runShutdownHooks() -> runShutdownHooks
    540:604:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    609:609:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    615:666:void shutdown() -> shutdown
    670:670:boolean isShuttingDown() -> isShuttingDown
    675:675:boolean isShutdown() -> isShutdown
    680:680:boolean isTerminated() -> isTerminated
    687:738:boolean confirmShutdown() -> confirmShutdown
    743:755:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    760:778:void execute(java.lang.Runnable) -> execute
    782:783:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    789:790:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    796:797:java.util.List invokeAll(java.util.Collection) -> invokeAll
    803:804:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    808:811:void throwIfInEventLoop(java.lang.String) -> throwIfInEventLoop
    819:835:io.netty.util.concurrent.ThreadProperties threadProperties() -> threadProperties
    840:840:boolean wakesUpForTask(java.lang.Runnable) -> wakesUpForTask
    844:844:void reject() -> reject
    853:854:void reject(java.lang.Runnable) -> reject
    861:871:void startThread() -> startThread
    874:931:void doStartThread() -> doStartThread
    49:49:java.util.Set access$000(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$000
    49:49:java.lang.Thread access$102(io.netty.util.concurrent.SingleThreadEventExecutor,java.lang.Thread) -> access$102
    49:49:boolean access$200(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$200
    49:49:java.lang.Thread access$100(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$100
    49:49:io.netty.util.internal.logging.InternalLogger access$300() -> access$300
    49:49:int access$400(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$400
    49:49:java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$500() -> access$500
    49:49:long access$600(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$600
    49:49:java.util.concurrent.Semaphore access$700(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$700
    49:49:java.util.Queue access$800(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$800
    49:49:io.netty.util.concurrent.Promise access$900(io.netty.util.concurrent.SingleThreadEventExecutor) -> access$900
    49:858:void <clinit>() -> <clinit>
io.netty.util.concurrent.SingleThreadEventExecutor$1 -> io.netty.e.b.ai:
    63:63:void <init>() -> <init>
    67:67:void run() -> run
io.netty.util.concurrent.SingleThreadEventExecutor$2 -> io.netty.e.b.aj:
    69:69:void <init>() -> <init>
    73:73:void run() -> run
io.netty.util.concurrent.SingleThreadEventExecutor$3 -> io.netty.e.b.ak:
    java.lang.Runnable val$task -> a
    io.netty.util.concurrent.SingleThreadEventExecutor this$0 -> b
    489:489:void <init>(io.netty.util.concurrent.SingleThreadEventExecutor,java.lang.Runnable) -> <init>
    492:493:void run() -> run
io.netty.util.concurrent.SingleThreadEventExecutor$4 -> io.netty.e.b.al:
    java.lang.Runnable val$task -> a
    io.netty.util.concurrent.SingleThreadEventExecutor this$0 -> b
    505:505:void <init>(io.netty.util.concurrent.SingleThreadEventExecutor,java.lang.Runnable) -> <init>
    508:509:void run() -> run
io.netty.util.concurrent.SingleThreadEventExecutor$5 -> io.netty.e.b.am:
    io.netty.util.concurrent.SingleThreadEventExecutor this$0 -> a
    875:875:void <init>(io.netty.util.concurrent.SingleThreadEventExecutor) -> <init>
    878:929:void run() -> run
io.netty.util.concurrent.SingleThreadEventExecutor$DefaultThreadProperties -> io.netty.e.b.an:
    java.lang.Thread t -> a
    936:938:void <init>(java.lang.Thread) -> <init>
io.netty.util.concurrent.SucceededFuture -> io.netty.e.b.ao:
    java.lang.Object result -> a
    32:34:void <init>(io.netty.util.concurrent.EventExecutor,java.lang.Object) -> <init>
    38:38:java.lang.Throwable cause() -> cause
    43:43:boolean isSuccess() -> isSuccess
    48:48:java.lang.Object getNow() -> getNow
io.netty.util.concurrent.ThreadPerTaskExecutor -> io.netty.e.b.ap:
    java.util.concurrent.ThreadFactory threadFactory -> a
    24:29:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    33:34:void execute(java.lang.Runnable) -> execute
io.netty.util.concurrent.ThreadProperties -> io.netty.e.b.aq:
io.netty.util.concurrent.UnaryPromiseNotifier -> io.netty.e.b.ar:
    io.netty.util.internal.logging.InternalLogger logger -> a
    io.netty.util.concurrent.Promise promise -> b
    26:28:void <init>(io.netty.util.concurrent.Promise) -> <init>
    32:33:void operationComplete(io.netty.util.concurrent.Future) -> operationComplete
    36:50:void cascadeTo(io.netty.util.concurrent.Future,io.netty.util.concurrent.Promise) -> a
    23:23:void <clinit>() -> <clinit>
io.netty.util.internal.AppendableCharSequence -> io.netty.e.c.a:
    char[] chars -> a
    int pos -> b
    25:30:void <init>(int) -> <init>
    32:38:void <init>(char[]) -> <init>
    42:42:int length() -> length
    47:50:char charAt(int) -> charAt
    61:61:char charAtUnsafe(int) -> a
    66:66:io.netty.util.internal.AppendableCharSequence subSequence(int,int) -> a
    71:77:io.netty.util.internal.AppendableCharSequence append(char) -> a
    82:82:io.netty.util.internal.AppendableCharSequence append(java.lang.CharSequence) -> a
    87:106:io.netty.util.internal.AppendableCharSequence append(java.lang.CharSequence,int,int) -> a
    114:115:void reset() -> a
    119:119:java.lang.String toString() -> toString
    139:139:java.lang.String subStringUnsafe(int,int) -> b
    143:157:char[] expand(char[],int,int) -> a
    21:21:java.lang.CharSequence subSequence(int,int) -> subSequence
    21:21:java.lang.Appendable append(char) -> append
    21:21:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    21:21:java.lang.Appendable append(java.lang.CharSequence) -> append
io.netty.util.internal.Cleaner -> io.netty.e.c.b:
    void freeDirectBuffer(java.nio.ByteBuffer) -> a
io.netty.util.internal.CleanerJava6 -> io.netty.e.c.c:
    long CLEANER_FIELD_OFFSET -> a
    java.lang.reflect.Method CLEAN_METHOD -> b
    io.netty.util.internal.logging.InternalLogger logger -> c
    32:32:void <init>() -> <init>
    69:69:boolean isSupported() -> a
    74:85:void freeDirectBuffer(java.nio.ByteBuffer) -> a
    36:66:void <clinit>() -> <clinit>
io.netty.util.internal.CleanerJava9 -> io.netty.e.c.d:
    io.netty.util.internal.logging.InternalLogger logger -> a
    java.lang.reflect.Method INVOKE_CLEANER -> b
    28:28:void <init>() -> <init>
    71:71:boolean isSupported() -> a
    77:81:void freeDirectBuffer(java.nio.ByteBuffer) -> a
    29:68:void <clinit>() -> <clinit>
io.netty.util.internal.ConstantTimeUtils -> io.netty.e.c.e:
    37:43:int equalsConstantTime(int,int) -> a
    62:69:int equalsConstantTime(long,long) -> a
    96:101:int equalsConstantTime(byte[],int,byte[],int,int) -> a
    120:129:int equalsConstantTime(java.lang.CharSequence,java.lang.CharSequence) -> a
io.netty.util.internal.DefaultPriorityQueue -> io.netty.e.c.f:
    io.netty.util.internal.PriorityQueueNode[] EMPTY_ARRAY -> a
    java.util.Comparator comparator -> b
    io.netty.util.internal.PriorityQueueNode[] queue -> c
    int size -> d
    39:42:void <init>(java.util.Comparator,int) -> <init>
    46:46:int size() -> size
    51:51:boolean isEmpty() -> isEmpty
    56:60:boolean contains(java.lang.Object) -> contains
    65:65:boolean containsTyped(io.netty.util.internal.PriorityQueueNode) -> a
    70:78:void clear() -> clear
    82:83:void clearIgnoringIndexes() -> a
    87:102:boolean offer(io.netty.util.internal.PriorityQueueNode) -> b
    107:119:io.netty.util.internal.PriorityQueueNode poll() -> b
    124:124:io.netty.util.internal.PriorityQueueNode peek() -> c
    132:136:boolean remove(java.lang.Object) -> remove
    141:164:boolean removeTyped(io.netty.util.internal.PriorityQueueNode) -> c
    169:187:void priorityChanged(io.netty.util.internal.PriorityQueueNode) -> d
    191:191:java.lang.Object[] toArray() -> toArray
    197:204:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    212:212:java.util.Iterator iterator() -> iterator
    239:239:boolean contains(io.netty.util.internal.PriorityQueueNode,int) -> a
    243:271:void bubbleDown(int,io.netty.util.internal.PriorityQueueNode) -> a
    274:295:void bubbleUp(int,io.netty.util.internal.PriorityQueueNode) -> b
    31:31:java.lang.Object peek() -> peek
    31:31:java.lang.Object poll() -> poll
    31:31:boolean offer(java.lang.Object) -> offer
    31:31:void priorityChanged(java.lang.Object) -> a
    31:31:boolean containsTyped(java.lang.Object) -> b
    31:31:boolean removeTyped(java.lang.Object) -> c
    31:31:int access$100(io.netty.util.internal.DefaultPriorityQueue) -> a
    31:31:io.netty.util.internal.PriorityQueueNode[] access$200(io.netty.util.internal.DefaultPriorityQueue) -> b
    33:33:void <clinit>() -> <clinit>
io.netty.util.internal.DefaultPriorityQueue$1 -> io.netty.e.c.g:
io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator -> io.netty.e.c.h:
    int index -> b
    io.netty.util.internal.DefaultPriorityQueue this$0 -> a
    215:215:void <init>(io.netty.util.internal.DefaultPriorityQueue) -> <init>
    220:220:boolean hasNext() -> hasNext
    225:229:io.netty.util.internal.PriorityQueueNode next() -> a
    234:234:void remove() -> remove
    215:215:java.lang.Object next() -> next
    215:215:void <init>(io.netty.util.internal.DefaultPriorityQueue,io.netty.util.internal.DefaultPriorityQueue$1) -> <init>
io.netty.util.internal.EmptyArrays -> io.netty.e.c.i:
    int[] EMPTY_INTS -> a
    byte[] EMPTY_BYTES -> b
    char[] EMPTY_CHARS -> c
    java.lang.Object[] EMPTY_OBJECTS -> d
    java.lang.Class[] EMPTY_CLASSES -> e
    java.lang.String[] EMPTY_STRINGS -> f
    io.netty.util.AsciiString[] EMPTY_ASCII_STRINGS -> g
    java.lang.StackTraceElement[] EMPTY_STACK_TRACE -> h
    java.nio.ByteBuffer[] EMPTY_BYTE_BUFFERS -> i
    java.security.cert.Certificate[] EMPTY_CERTIFICATES -> j
    java.security.cert.X509Certificate[] EMPTY_X509_CERTIFICATES -> k
    javax.security.cert.X509Certificate[] EMPTY_JAVAX_X509_CERTIFICATES -> l
    27:38:void <clinit>() -> <clinit>
io.netty.util.internal.EmptyPriorityQueue -> io.netty.e.c.j:
    io.netty.util.internal.PriorityQueue INSTANCE -> a
    26:27:void <init>() -> <init>
    34:34:io.netty.util.internal.EmptyPriorityQueue instance() -> b
    39:39:boolean removeTyped(java.lang.Object) -> c
    44:44:boolean containsTyped(java.lang.Object) -> b
    49:49:void priorityChanged(java.lang.Object) -> a
    53:53:int size() -> size
    58:58:boolean isEmpty() -> isEmpty
    63:63:boolean contains(java.lang.Object) -> contains
    68:68:java.util.Iterator iterator() -> iterator
    73:73:java.lang.Object[] toArray() -> toArray
    78:81:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    86:86:boolean add(java.lang.Object) -> add
    91:91:boolean remove(java.lang.Object) -> remove
    96:96:boolean containsAll(java.util.Collection) -> containsAll
    101:101:boolean addAll(java.util.Collection) -> addAll
    106:106:boolean removeAll(java.util.Collection) -> removeAll
    111:111:boolean retainAll(java.util.Collection) -> retainAll
    116:116:void clear() -> clear
    120:120:void clearIgnoringIndexes() -> a
    124:124:boolean equals(java.lang.Object) -> equals
    129:129:int hashCode() -> hashCode
    134:134:boolean offer(java.lang.Object) -> offer
    139:139:java.lang.Object remove() -> remove
    144:144:java.lang.Object poll() -> poll
    149:149:java.lang.Object element() -> element
    154:154:java.lang.Object peek() -> peek
    159:159:java.lang.String toString() -> toString
    24:24:void <clinit>() -> <clinit>
io.netty.util.internal.IntegerHolder -> io.netty.e.c.k:
io.netty.util.internal.InternalThreadLocalMap -> io.netty.e.c.l:
    io.netty.util.internal.logging.InternalLogger logger -> p
    int STRING_BUILDER_INITIAL_SIZE -> q
    int STRING_BUILDER_MAX_SIZE -> r
    java.lang.Object UNSET -> a
    58:62:io.netty.util.internal.InternalThreadLocalMap getIfSet() -> a
    66:70:io.netty.util.internal.InternalThreadLocalMap get() -> b
    75:79:io.netty.util.internal.InternalThreadLocalMap fastGet(io.netty.util.concurrent.FastThreadLocalThread) -> a
    83:89:io.netty.util.internal.InternalThreadLocalMap slowGet() -> o
    93:99:void remove() -> c
    102:103:void destroy() -> d
    106:111:int nextVariableIndex() -> e
    123:124:void <init>() -> <init>
    127:129:java.lang.Object[] newIndexedVariableTable() -> p
    133:177:int size() -> f
    181:190:java.lang.StringBuilder stringBuilder() -> g
    194:198:java.util.Map charsetEncoderCache() -> h
    202:206:java.util.Map charsetDecoderCache() -> i
    215:222:java.util.ArrayList arrayList(int) -> a
    226:226:int futureListenerStackDepth() -> j
    230:231:void setFutureListenerStackDepth(int) -> b
    234:238:io.netty.util.internal.ThreadLocalRandom random() -> k
    242:246:java.util.Map typeParameterMatcherGetCache() -> l
    250:254:java.util.Map typeParameterMatcherFindCache() -> m
    266:271:java.util.Map handlerSharableCache() -> n
    283:284:java.lang.Object indexedVariable(int) -> c
    291:298:boolean setIndexedVariable(int,java.lang.Object) -> a
    303:317:void expandIndexedVariableTableAndSet(int,java.lang.Object) -> b
    320:326:java.lang.Object removeIndexedVariable(int) -> d
    331:332:boolean isIndexedVariableSet(int) -> e
    40:55:void <clinit>() -> <clinit>
io.netty.util.internal.LongAdderCounter -> io.netty.e.c.m:
    20:20:void <init>() -> <init>
    24:24:long value() -> a
io.netty.util.internal.LongCounter -> io.netty.e.c.n:
    void add(long) -> add
    void increment() -> increment
    long value() -> a
io.netty.util.internal.MacAddressUtil -> io.netty.e.c.o:
    io.netty.util.internal.logging.InternalLogger logger -> a
    49:130:byte[] bestAvailableMac() -> a
    138:146:byte[] defaultMachineId() -> b
    157:185:byte[] parseMAC(java.lang.String) -> a
    189:192:void validateMacSeparator(char) -> a
    199:203:java.lang.String formatAddress(byte[]) -> a
    211:248:int compareAddresses(byte[],byte[]) -> a
    257:257:int compareAddresses(java.net.InetAddress,java.net.InetAddress) -> a
    261:274:int scoreAddress(java.net.InetAddress) -> a
    277:277:void <init>() -> <init>
    35:35:void <clinit>() -> <clinit>
io.netty.util.internal.MathUtil -> io.netty.e.c.p:
    boolean $assertionsDisabled -> a
    22:23:void <init>() -> <init>
    35:36:int findNextPositivePowerOfTwo(int) -> a
    52:52:int safeFindNextPositivePowerOfTwo(int) -> b
    64:64:boolean isOutOfBounds(int,int,int) -> a
    93:93:int compare(long,long) -> a
    20:20:void <clinit>() -> <clinit>
io.netty.util.internal.NativeLibraryLoader -> io.netty.e.c.q:
    io.netty.util.internal.logging.InternalLogger logger -> b
    java.io.File WORKDIR -> c
    boolean DELETE_NATIVE_LIB_AFTER_LOADING -> d
    boolean $assertionsDisabled -> a
    82:95:void loadFirstAvailable(java.lang.ClassLoader,java.lang.String[]) -> a
    104:112:java.lang.String calculatePackagePrefix() -> a
    120:219:void load(java.lang.String,java.lang.ClassLoader) -> a
    228:251:void loadLibrary(java.lang.ClassLoader,java.lang.String,boolean) -> a
    255:280:void loadLibraryByHelper(java.lang.Class,java.lang.String,boolean) -> a
    292:325:java.lang.Class tryToLoadClass(java.lang.ClassLoader,java.lang.Class) -> a
    337:359:byte[] classToByteArray(java.lang.Class) -> a
    364:371:void closeQuietly(java.io.Closeable) -> a
    373:375:void <init>() -> <init>
    43:72:void <clinit>() -> <clinit>
io.netty.util.internal.NativeLibraryLoader$1 -> io.netty.e.c.r:
    java.lang.Class val$helper -> a
    java.lang.String val$name -> b
    boolean val$absolute -> c
    255:255:void <init>(java.lang.Class,java.lang.String,boolean) -> <init>
    261:265:java.lang.Object run() -> run
io.netty.util.internal.NativeLibraryLoader$2 -> io.netty.e.c.s:
    java.lang.ClassLoader val$loader -> a
    java.lang.Class val$helper -> b
    byte[] val$classBinary -> c
    301:301:void <init>(java.lang.ClassLoader,java.lang.Class,byte[]) -> <init>
    307:313:java.lang.Class run() -> a
    301:301:java.lang.Object run() -> run
io.netty.util.internal.NativeLibraryLoader$NoexecVolumeDetector -> io.netty.e.c.t:
    380:410:boolean canExecuteExecutable(java.io.File) -> b
    377:377:boolean access$000(java.io.File) -> a
io.netty.util.internal.NativeLibraryUtil -> io.netty.e.c.u:
    35:40:void loadLibrary(java.lang.String,boolean) -> a
    42:44:void <init>() -> <init>
io.netty.util.internal.ObjectUtil -> io.netty.e.c.v:
    30:33:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> a
    41:44:int checkPositive(int,java.lang.String) -> a
    52:55:long checkPositive(long,java.lang.String) -> a
    63:66:int checkPositiveOrZero(int,java.lang.String) -> b
    98:98:int intValue(java.lang.Integer,int) -> a
io.netty.util.internal.OutOfDirectMemoryError -> io.netty.e.c.w:
    28:29:void <init>(java.lang.String) -> <init>
io.netty.util.internal.PlatformDependent -> io.netty.e.c.x:
    io.netty.util.internal.logging.InternalLogger logger -> c
    java.util.regex.Pattern MAX_DIRECT_MEMORY_SIZE_ARG_PATTERN -> d
    boolean IS_WINDOWS -> e
    boolean IS_OSX -> f
    boolean MAYBE_SUPER_USER -> g
    boolean CAN_ENABLE_TCP_NODELAY_BY_DEFAULT -> h
    boolean HAS_UNSAFE -> i
    boolean DIRECT_BUFFER_PREFERRED -> j
    long MAX_DIRECT_MEMORY -> k
    long BYTE_ARRAY_BASE_OFFSET -> l
    java.io.File TMPDIR -> m
    int BIT_MODE -> n
    java.lang.String NORMALIZED_ARCH -> o
    java.lang.String NORMALIZED_OS -> p
    int ADDRESS_SIZE -> q
    boolean USE_DIRECT_BUFFER_NO_CLEANER -> r
    java.util.concurrent.atomic.AtomicLong DIRECT_MEMORY_COUNTER -> s
    long DIRECT_MEMORY_LIMIT -> t
    io.netty.util.internal.PlatformDependent$ThreadLocalRandomProvider RANDOM_PROVIDER -> u
    io.netty.util.internal.Cleaner CLEANER -> v
    int UNINITIALIZED_ARRAY_ALLOCATION_THRESHOLD -> w
    boolean BIG_ENDIAN_NATIVE_ORDER -> a
    io.netty.util.internal.Cleaner NOOP -> x
    boolean $assertionsDisabled -> b
    196:196:boolean hasDirectBufferNoCleanerConstructor() -> a
    200:201:byte[] allocateUninitializedArray(int) -> a
    208:208:boolean isAndroid() -> b
    215:215:boolean isWindows() -> c
    222:222:boolean isOsx() -> d
    230:230:boolean maybeSuperUser() -> e
    237:237:int javaVersion() -> f
    244:244:boolean canEnableTcpNoDelayByDefault() -> g
    252:252:boolean hasUnsafe() -> h
    268:268:boolean isUnaligned() -> i
    276:276:boolean directBufferPreferred() -> j
    283:283:long maxDirectMemory() -> k
    290:290:java.io.File tmpdir() -> l
    324:329:void throwException(java.lang.Throwable) -> a
    333:333:void throwException0(java.lang.Throwable) -> b
    340:340:java.util.concurrent.ConcurrentMap newConcurrentHashMap() -> m
    347:350:io.netty.util.internal.LongCounter newLongCounter() -> n
    388:389:void freeDirectBuffer(java.nio.ByteBuffer) -> a
    392:392:long directBufferAddress(java.nio.ByteBuffer) -> b
    408:408:byte getByte(long) -> a
    412:412:short getShort(long) -> b
    416:416:int getInt(long) -> c
    420:420:long getLong(long) -> d
    424:424:byte getByte(byte[],int) -> a
    428:428:short getShort(byte[],int) -> b
    432:432:int getInt(byte[],int) -> c
    436:436:long getLong(byte[],int) -> d
    440:450:long getLongSafe(byte[],int) -> e
    461:467:int getIntSafe(byte[],int) -> f
    474:477:short getShortSafe(byte[],int) -> g
    484:495:int hashCodeAsciiCompute(java.lang.CharSequence,int,int) -> a
    502:512:int hashCodeAsciiSanitizeInt(java.lang.CharSequence,int) -> a
    519:525:int hashCodeAsciiSanitizeShort(java.lang.CharSequence,int) -> b
    532:532:int hashCodeAsciiSanitizeByte(char) -> a
    536:537:void putByte(long,byte) -> a
    540:541:void putShort(long,short) -> a
    544:545:void putInt(long,int) -> a
    548:549:void putLong(long,long) -> a
    552:553:void putByte(byte[],int,byte) -> a
    556:557:void putShort(byte[],int,short) -> a
    560:561:void putInt(byte[],int,int) -> a
    564:565:void putLong(byte[],int,long) -> a
    568:569:void copyMemory(long,long,long) -> a
    572:573:void copyMemory(byte[],int,long,long) -> a
    576:577:void copyMemory(long,byte[],int,long) -> a
    580:581:void setMemory(byte[],int,long,byte) -> a
    584:585:void setMemory(long,long,byte) -> a
    592:600:java.nio.ByteBuffer allocateDirectNoCleaner(int) -> b
    609:618:java.nio.ByteBuffer reallocateDirectNoCleaner(java.nio.ByteBuffer,int) -> a
    627:632:void freeDirectNoCleaner(java.nio.ByteBuffer) -> c
    635:648:void incrementMemoryCounter(int) -> e
    651:655:void decrementMemoryCounter(int) -> f
    658:658:boolean useDirectBufferNoCleaner() -> o
    673:675:boolean equals(byte[],int,byte[],int,int) -> a
    686:688:boolean isZero(byte[],int,int) -> b
    713:715:int equalsConstantTime(byte[],int,byte[],int,int) -> b
    728:730:int hashCodeAscii(byte[],int,int) -> c
    744:819:int hashCodeAscii(java.lang.CharSequence) -> a
    874:874:java.util.Queue newMpscQueue() -> p
    882:882:java.util.Queue newMpscQueue(int) -> c
    898:898:java.util.Queue newFixedMpscQueue(int) -> d
    905:905:java.lang.ClassLoader getClassLoader(java.lang.Class) -> a
    919:919:java.lang.ClassLoader getSystemClassLoader() -> q
    937:937:java.util.Random threadLocalRandom() -> r
    941:945:boolean isWindows0() -> v
    949:956:boolean isOsx0() -> w
    960:965:boolean maybeSuperUser0() -> x
    969:985:boolean hasUnsafe0() -> y
    990:1049:long maxDirectMemory0() -> z
    1055:1108:java.io.File tmpdir0() -> A
    1113:1127:java.io.File toDirectory(java.lang.String) -> a
    1133:1170:int bitMode0() -> B
    1175:1178:int addressSize0() -> C
    1182:1185:long byteArrayBaseOffset0() -> D
    1189:1195:boolean equalsSafe(byte[],int,byte[],int,int) -> c
    1199:1205:boolean isZeroSafe(byte[],int,int) -> e
    1212:1239:int hashCodeAsciiSafe(byte[],int,int) -> d
    1244:1244:java.lang.String normalizedArch() -> s
    1248:1248:java.lang.String normalizedOs() -> t
    1252:1252:java.lang.String normalize(java.lang.String) -> b
    1256:1294:java.lang.String normalizeArch(java.lang.String) -> c
    1298:1333:java.lang.String normalizeOs(java.lang.String) -> d
    1364:1366:void <init>() -> <init>
    67:67:io.netty.util.internal.logging.InternalLogger access$100() -> u
    67:193:void <clinit>() -> <clinit>
io.netty.util.internal.PlatformDependent$1 -> io.netty.e.c.y:
    108:108:void <init>() -> <init>
    112:112:void freeDirectBuffer(java.nio.ByteBuffer) -> a
io.netty.util.internal.PlatformDependent$2 -> io.netty.e.c.z:
    117:117:void <init>() -> <init>
    120:120:java.util.Random current() -> a
io.netty.util.internal.PlatformDependent$3 -> io.netty.e.c.A:
    124:124:void <init>() -> <init>
    127:127:java.util.Random current() -> a
io.netty.util.internal.PlatformDependent$AtomicLongCounter -> io.netty.e.c.B:
    1336:1336:void <init>() -> <init>
    1341:1342:void add(long) -> add
    1346:1347:void increment() -> increment
    1356:1356:long value() -> a
    1336:1336:void <init>(io.netty.util.internal.PlatformDependent$1) -> <init>
io.netty.util.internal.PlatformDependent$Mpsc -> io.netty.e.c.C:
    boolean USE_MPSC_CHUNKED_ARRAY_QUEUE -> a
    857:858:java.util.Queue newMpscQueue(int) -> a
    863:863:java.util.Queue newMpscQueue() -> a
    830:851:void <clinit>() -> <clinit>
io.netty.util.internal.PlatformDependent$Mpsc$1 -> io.netty.e.c.D:
    835:835:void <init>() -> <init>
    839:839:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent$ThreadLocalRandomProvider -> io.netty.e.c.E:
    java.util.Random current() -> a
io.netty.util.internal.PlatformDependent0 -> io.netty.e.c.F:
    io.netty.util.internal.logging.InternalLogger logger -> c
    long ADDRESS_FIELD_OFFSET -> d
    long BYTE_ARRAY_BASE_OFFSET -> e
    java.lang.reflect.Constructor DIRECT_BUFFER_CONSTRUCTOR -> f
    boolean IS_EXPLICIT_NO_UNSAFE -> g
    java.lang.reflect.Method ALLOCATE_ARRAY_METHOD -> h
    int JAVA_VERSION -> i
    boolean IS_ANDROID -> j
    java.lang.Throwable UNSAFE_UNAVAILABILITY_CAUSE -> k
    java.lang.Object INTERNAL_UNSAFE -> l
    sun.misc.Unsafe UNSAFE -> a
    boolean UNALIGNED -> m
    boolean $assertionsDisabled -> b
    368:368:boolean isExplicitNoUnsafe() -> a
    372:393:boolean explicitNoUnsafe0() -> m
    397:397:boolean isUnaligned() -> b
    401:401:boolean hasUnsafe() -> c
    409:409:boolean unalignedAccess() -> d
    414:415:void throwException(java.lang.Throwable) -> a
    418:418:boolean hasDirectBufferNoCleanerConstructor() -> e
    422:422:java.nio.ByteBuffer reallocateDirectNoCleaner(java.nio.ByteBuffer,int) -> a
    426:426:java.nio.ByteBuffer allocateDirectNoCleaner(int) -> a
    430:430:boolean hasAllocateArrayMethod() -> f
    435:439:byte[] allocateUninitializedArray(int) -> b
    444:453:java.nio.ByteBuffer newDirectBuffer(long,int) -> a
    458:458:long directBufferAddress(java.nio.ByteBuffer) -> a
    462:462:long byteArrayBaseOffset() -> g
    466:466:java.lang.Object getObject(java.lang.Object,long) -> a
    474:474:long getLong(java.lang.Object,long) -> b
    478:478:long objectFieldOffset(java.lang.reflect.Field) -> a
    482:482:byte getByte(long) -> a
    486:486:short getShort(long) -> b
    490:490:int getInt(long) -> c
    494:494:long getLong(long) -> d
    498:498:byte getByte(byte[],int) -> a
    502:502:short getShort(byte[],int) -> b
    506:506:int getInt(byte[],int) -> c
    510:510:long getLong(byte[],int) -> d
    514:515:void putByte(long,byte) -> a
    518:519:void putShort(long,short) -> a
    522:523:void putInt(long,int) -> b
    526:527:void putLong(long,long) -> a
    530:531:void putByte(byte[],int,byte) -> a
    534:535:void putShort(byte[],int,short) -> a
    538:539:void putInt(byte[],int,int) -> a
    542:543:void putLong(byte[],int,long) -> a
    547:554:void copyMemory(long,long,long) -> a
    558:565:void copyMemory(java.lang.Object,long,java.lang.Object,long,long) -> a
    568:569:void setMemory(long,long,byte) -> a
    572:573:void setMemory(java.lang.Object,long,long,byte) -> a
    576:600:boolean equals(byte[],int,byte[],int,int) -> a
    604:640:int equalsConstantTime(byte[],int,byte[],int,int) -> b
    645:667:boolean isZero(byte[],int,int) -> b
    671:699:int hashCodeAscii(byte[],int,int) -> c
    706:708:int hashCodeAsciiCompute(long,int) -> c
    714:714:int hashCodeAsciiSanitize(int) -> c
    718:718:int hashCodeAsciiSanitize(short) -> a
    722:722:int hashCodeAsciiSanitize(byte) -> a
    726:729:java.lang.ClassLoader getClassLoader(java.lang.Class) -> a
    752:755:java.lang.ClassLoader getSystemClassLoader() -> h
    765:765:int addressSize() -> i
    773:774:void freeMemory(long) -> e
    781:781:boolean isAndroid() -> j
    787:797:boolean isAndroid0() -> n
    801:801:int javaVersion() -> k
    807:815:int javaVersion0() -> o
    820:820:int majorVersionFromJavaSpecificationVersion() -> l
    825:835:int majorVersion(java.lang.String) -> a
    839:840:void <init>() -> <init>
    36:365:void <clinit>() -> <clinit>
io.netty.util.internal.PlatformDependent0$1 -> io.netty.e.c.G:
    82:82:void <init>() -> <init>
    86:102:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$10 -> io.netty.e.c.H:
    755:755:void <init>() -> <init>
    758:758:java.lang.ClassLoader run() -> a
    755:755:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$2 -> io.netty.e.c.I:
    sun.misc.Unsafe val$finalUnsafe -> a
    125:125:void <init>(sun.misc.Unsafe) -> <init>
    129:135:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$3 -> io.netty.e.c.J:
    sun.misc.Unsafe val$finalUnsafe -> a
    java.nio.ByteBuffer val$direct -> b
    154:154:void <init>(sun.misc.Unsafe,java.nio.ByteBuffer) -> <init>
    158:172:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$4 -> io.netty.e.c.K:
    java.nio.ByteBuffer val$direct -> a
    215:215:void <init>(java.nio.ByteBuffer) -> <init>
    219:229:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$5 -> io.netty.e.c.L:
    263:263:void <init>() -> <init>
    267:284:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$6 -> io.netty.e.c.M:
    303:303:void <init>() -> <init>
    309:314:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$7 -> io.netty.e.c.N:
    java.lang.Object val$finalInternalUnsafe -> a
    321:321:void <init>(java.lang.Object) -> <init>
    325:330:java.lang.Object run() -> run
io.netty.util.internal.PlatformDependent0$8 -> io.netty.e.c.O:
    java.lang.Class val$clazz -> a
    729:729:void <init>(java.lang.Class) -> <init>
    732:732:java.lang.ClassLoader run() -> a
    729:729:java.lang.Object run() -> run
io.netty.util.internal.PriorityQueue -> io.netty.e.c.P:
    boolean removeTyped(java.lang.Object) -> c
    boolean containsTyped(java.lang.Object) -> b
    void priorityChanged(java.lang.Object) -> a
    void clearIgnoringIndexes() -> a
io.netty.util.internal.PriorityQueueNode -> io.netty.e.c.Q:
    int priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue) -> a
    void priorityQueueIndex(io.netty.util.internal.DefaultPriorityQueue,int) -> a
io.netty.util.internal.PromiseNotificationUtil -> io.netty.e.c.R:
    32:42:void tryCancel(io.netty.util.concurrent.Promise,io.netty.util.internal.logging.InternalLogger) -> a
    48:58:void trySuccess(io.netty.util.concurrent.Promise,java.lang.Object,io.netty.util.internal.logging.InternalLogger) -> a
    64:74:void tryFailure(io.netty.util.concurrent.Promise,java.lang.Throwable,io.netty.util.internal.logging.InternalLogger) -> a
io.netty.util.internal.ReadOnlyIterator -> io.netty.e.c.S:
    java.util.Iterator iterator -> a
    24:29:void <init>(java.util.Iterator) -> <init>
    33:33:boolean hasNext() -> hasNext
    38:38:java.lang.Object next() -> next
    43:43:void remove() -> remove
io.netty.util.internal.RecyclableArrayList -> io.netty.e.c.T:
    io.netty.util.Recycler RECYCLER -> a
    boolean insertSinceRecycled -> b
    io.netty.util.Recycler$Handle handle -> c
    56:58:io.netty.util.internal.RecyclableArrayList newInstance(int) -> a
    64:65:void <init>(io.netty.util.Recycler$Handle) -> <init>
    68:70:void <init>(io.netty.util.Recycler$Handle,int) -> <init>
    74:79:boolean addAll(java.util.Collection) -> addAll
    84:89:boolean addAll(int,java.util.Collection) -> addAll
    93:109:void checkNullElements(java.util.Collection) -> a
    113:120:boolean add(java.lang.Object) -> add
    125:130:void add(int,java.lang.Object) -> add
    134:139:java.lang.Object set(int,java.lang.Object) -> set
    153:156:boolean recycle() -> a
    30:30:void <init>(io.netty.util.Recycler$Handle,io.netty.util.internal.RecyclableArrayList$1) -> <init>
    36:36:void <clinit>() -> <clinit>
io.netty.util.internal.RecyclableArrayList$1 -> io.netty.e.c.U:
    36:36:void <init>() -> <init>
    39:39:io.netty.util.internal.RecyclableArrayList newObject(io.netty.util.Recycler$Handle) -> a
    36:36:java.lang.Object newObject(io.netty.util.Recycler$Handle) -> newObject
io.netty.util.internal.ReflectionUtil -> io.netty.e.c.V:
    31:36:java.lang.Throwable trySetAccessible(java.lang.reflect.AccessibleObject) -> a
    44:47:java.lang.RuntimeException handleInaccessibleObjectException(java.lang.RuntimeException) -> a
io.netty.util.internal.SocketUtils -> io.netty.e.c.W:
    65:75:void bind(java.net.Socket,java.net.SocketAddress) -> a
    80:87:boolean connect(java.nio.channels.SocketChannel,java.net.SocketAddress) -> a
    93:103:void bind(java.nio.channels.SocketChannel,java.net.SocketAddress) -> b
    107:114:java.nio.channels.SocketChannel accept(java.nio.channels.ServerSocketChannel) -> a
    120:130:void bind(java.nio.channels.DatagramChannel,java.net.SocketAddress) -> a
    133:133:java.net.SocketAddress localSocketAddress(java.net.ServerSocket) -> a
    143:150:java.net.InetAddress addressByName(java.lang.String) -> a
    156:163:java.net.InetAddress[] allAddressesByName(java.lang.String) -> b
    168:168:java.net.InetSocketAddress socketAddress(java.lang.String,int) -> a
    177:177:java.util.Enumeration addressesFromNetworkInterface(java.net.NetworkInterface) -> a
    203:210:byte[] hardwareAddressFromNetworkInterface(java.net.NetworkInterface) -> b
io.netty.util.internal.SocketUtils$10 -> io.netty.e.c.X:
    java.lang.String val$hostname -> a
    int val$port -> b
    168:168:void <init>(java.lang.String,int) -> <init>
    171:171:java.net.InetSocketAddress run() -> a
    168:168:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$11 -> io.netty.e.c.Y:
    java.net.NetworkInterface val$intf -> a
    177:177:void <init>(java.net.NetworkInterface) -> <init>
    180:180:java.util.Enumeration run() -> a
    177:177:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$13 -> io.netty.e.c.Z:
    java.net.NetworkInterface val$intf -> a
    203:203:void <init>(java.net.NetworkInterface) -> <init>
    206:206:byte[] run() -> a
    203:203:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$2 -> io.netty.e.c.aa:
    java.net.Socket val$socket -> a
    java.net.SocketAddress val$bindpoint -> b
    65:65:void <init>(java.net.Socket,java.net.SocketAddress) -> <init>
    68:69:java.lang.Void run() -> a
    65:65:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$3 -> io.netty.e.c.ab:
    java.nio.channels.SocketChannel val$socketChannel -> a
    java.net.SocketAddress val$remoteAddress -> b
    80:80:void <init>(java.nio.channels.SocketChannel,java.net.SocketAddress) -> <init>
    83:83:java.lang.Boolean run() -> a
    80:80:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$4 -> io.netty.e.c.ac:
    java.nio.channels.SocketChannel val$socketChannel -> a
    java.net.SocketAddress val$address -> b
    93:93:void <init>(java.nio.channels.SocketChannel,java.net.SocketAddress) -> <init>
    96:97:java.lang.Void run() -> a
    93:93:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$5 -> io.netty.e.c.ad:
    java.nio.channels.ServerSocketChannel val$serverSocketChannel -> a
    107:107:void <init>(java.nio.channels.ServerSocketChannel) -> <init>
    110:110:java.nio.channels.SocketChannel run() -> a
    107:107:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$6 -> io.netty.e.c.ae:
    java.nio.channels.DatagramChannel val$networkChannel -> a
    java.net.SocketAddress val$address -> b
    120:120:void <init>(java.nio.channels.DatagramChannel,java.net.SocketAddress) -> <init>
    123:124:java.lang.Void run() -> a
    120:120:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$7 -> io.netty.e.c.af:
    java.net.ServerSocket val$socket -> a
    133:133:void <init>(java.net.ServerSocket) -> <init>
    136:136:java.net.SocketAddress run() -> a
    133:133:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$8 -> io.netty.e.c.ag:
    java.lang.String val$hostname -> a
    143:143:void <init>(java.lang.String) -> <init>
    146:146:java.net.InetAddress run() -> a
    143:143:java.lang.Object run() -> run
io.netty.util.internal.SocketUtils$9 -> io.netty.e.c.ah:
    java.lang.String val$hostname -> a
    156:156:void <init>(java.lang.String) -> <init>
    159:159:java.net.InetAddress[] run() -> a
    156:156:java.lang.Object run() -> run
io.netty.util.internal.StringUtil -> io.netty.e.c.ai:
    java.lang.String NEWLINE -> a
    java.lang.String[] BYTE2HEX_PAD -> c
    java.lang.String[] BYTE2HEX_NOPAD -> d
    boolean $assertionsDisabled -> b
    68:70:void <init>() -> <init>
    78:82:java.lang.String substringAfter(java.lang.String,char) -> a
    101:101:java.lang.String byteToHexStringPadded(int) -> a
    225:234:int decodeHexNibble(char) -> a
    241:247:byte decodeHexByte(java.lang.CharSequence,int) -> a
    282:285:java.lang.String simpleClassName(java.lang.Object) -> a
    294:299:java.lang.String simpleClassName(java.lang.Class) -> a
    325:399:java.lang.CharSequence escapeCsv(java.lang.CharSequence,boolean) -> a
    448:508:java.util.List unescapeCsvFields(java.lang.CharSequence) -> a
    532:532:java.lang.IllegalArgumentException newInvalidEscapedCsvFieldException(java.lang.CharSequence,int) -> c
    546:546:boolean isNullOrEmpty(java.lang.String) -> a
    557:562:int indexOfNonWhiteSpace(java.lang.CharSequence,int) -> b
    574:574:boolean isSurrogate(char) -> b
    578:578:boolean isDoubleQuote(char) -> c
    589:590:boolean endsWith(java.lang.CharSequence,char) -> a
    601:607:java.lang.CharSequence trimOws(java.lang.CharSequence) -> b
    614:618:int indexOfFirstNonOwsChar(java.lang.CharSequence,int) -> d
    625:629:int indexOfLastNonOwsChar(java.lang.CharSequence,int,int) -> a
    633:633:boolean isOws(char) -> d
    27:66:void <clinit>() -> <clinit>
io.netty.util.internal.SystemPropertyUtil -> io.netty.e.c.aj:
    io.netty.util.internal.logging.InternalLogger logger -> a
    36:36:boolean contains(java.lang.String) -> a
    46:46:java.lang.String get(java.lang.String) -> b
    59:86:java.lang.String get(java.lang.String,java.lang.String) -> a
    99:122:boolean getBoolean(java.lang.String,boolean) -> a
    135:152:int getInt(java.lang.String,int) -> a
    165:182:long getLong(java.lang.String,long) -> a
    185:187:void <init>() -> <init>
    29:29:void <clinit>() -> <clinit>
io.netty.util.internal.SystemPropertyUtil$1 -> io.netty.e.c.ak:
    java.lang.String val$key -> a
    71:71:void <init>(java.lang.String) -> <init>
    74:74:java.lang.String run() -> a
    71:71:java.lang.Object run() -> run
io.netty.util.internal.ThreadLocalRandom -> io.netty.e.c.al:
    io.netty.util.internal.logging.InternalLogger logger -> b
    java.util.concurrent.atomic.AtomicLong seedUniquifier -> c
    long initialSeedUniquifier -> d
    java.lang.Thread seedGeneratorThread -> e
    java.util.concurrent.BlockingQueue seedQueue -> f
    long seedGeneratorStartTime -> g
    long seedGeneratorEndTime -> h
    long rnd -> i
    boolean initialized -> a
    128:193:long getInitialSeedUniquifier() -> a
    198:217:long newSeed() -> e
    223:225:long mix64(long) -> b
    255:257:void <init>() -> <init>
    265:265:io.netty.util.internal.ThreadLocalRandom current() -> b
    275:279:void setSeed(long) -> setSeed
    282:283:int next(int) -> next
    61:61:long access$002(long) -> a
    61:61:java.util.concurrent.BlockingQueue access$100() -> c
    61:61:io.netty.util.internal.logging.InternalLogger access$200() -> d
    63:120:void <clinit>() -> <clinit>
io.netty.util.internal.ThreadLocalRandom$1 -> io.netty.e.c.am:
    84:84:void <init>(java.lang.String) -> <init>
    87:99:void run() -> run
io.netty.util.internal.ThreadLocalRandom$2 -> io.netty.e.c.an:
    102:102:void <init>() -> <init>
    105:106:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
io.netty.util.internal.ThrowableUtil -> io.netty.e.c.ao:
    java.lang.reflect.Method addSupressedMethod -> a
    30:37:java.lang.reflect.Method getAddSuppressed() -> b
    47:48:java.lang.Throwable unknownStackTrace(java.lang.Throwable,java.lang.Class,java.lang.String) -> a
    58:69:java.lang.String stackTraceToString(java.lang.Throwable) -> a
    74:74:boolean haveSuppressed() -> a
    78:88:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> a
    91:93:void addSuppressedAndClear(java.lang.Throwable,java.util.List) -> a
    96:99:void addSuppressed(java.lang.Throwable,java.util.List) -> b
    27:27:void <clinit>() -> <clinit>
io.netty.util.internal.TypeParameterMatcher -> io.netty.e.c.ap:
    io.netty.util.internal.TypeParameterMatcher NOOP -> a
    38:50:io.netty.util.internal.TypeParameterMatcher get(java.lang.Class) -> a
    57:72:io.netty.util.internal.TypeParameterMatcher find(java.lang.Object,java.lang.Class,java.lang.String) -> a
    78:140:java.lang.Class find0(java.lang.Object,java.lang.Class,java.lang.String) -> b
    146:146:java.lang.Class fail(java.lang.Class,java.lang.String) -> a
    boolean match(java.lang.Object) -> a
    165:165:void <init>() -> <init>
    29:29:void <clinit>() -> <clinit>
io.netty.util.internal.TypeParameterMatcher$1 -> io.netty.e.c.aq:
    29:29:void <init>() -> <init>
    32:32:boolean match(java.lang.Object) -> a
io.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher -> io.netty.e.c.ar:
    java.lang.Class type -> a
    155:157:void <init>(java.lang.Class) -> <init>
    161:161:boolean match(java.lang.Object) -> a
io.netty.util.internal.UnpaddedInternalThreadLocalMap -> io.netty.e.c.as:
    java.lang.ThreadLocal slowThreadLocalMap -> b
    java.util.concurrent.atomic.AtomicInteger nextIndex -> c
    java.lang.Object[] indexedVariables -> d
    int futureListenerStackDepth -> e
    int localChannelReaderStackDepth -> f
    java.util.Map handlerSharableCache -> g
    io.netty.util.internal.IntegerHolder counterHashCode -> h
    io.netty.util.internal.ThreadLocalRandom random -> i
    java.util.Map typeParameterMatcherGetCache -> j
    java.util.Map typeParameterMatcherFindCache -> k
    java.lang.StringBuilder stringBuilder -> l
    java.util.Map charsetEncoderCache -> m
    java.util.Map charsetDecoderCache -> n
    java.util.ArrayList arrayList -> o
    58:60:void <init>(java.lang.Object[]) -> <init>
    35:36:void <clinit>() -> <clinit>
io.netty.util.internal.logging.AbstractInternalLogger -> io.netty.e.c.a.a:
    java.lang.String name -> a
    39:44:void <init>(java.lang.String) -> <init>
    48:48:java.lang.String name() -> a
    53:65:boolean isEnabled(io.netty.util.internal.logging.InternalLogLevel) -> a
    96:115:void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Throwable) -> a
    142:161:void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String) -> a
    188:207:void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object,java.lang.Object) -> a
    211:230:void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[]) -> a
    238:238:java.lang.String toString() -> toString
io.netty.util.internal.logging.AbstractInternalLogger$1 -> io.netty.e.c.a.b:
    int[] $SwitchMap$io$netty$util$internal$logging$InternalLogLevel -> a
    53:53:void <clinit>() -> <clinit>
io.netty.util.internal.logging.FormattingTuple -> io.netty.e.c.a.c:
    java.lang.String message -> a
    java.lang.Throwable throwable -> b
    50:53:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    56:56:java.lang.String getMessage() -> a
    60:60:java.lang.Throwable getThrowable() -> b
io.netty.util.internal.logging.InternalLogLevel -> io.netty.e.c.a.d:
    io.netty.util.internal.logging.InternalLogLevel TRACE -> a
    io.netty.util.internal.logging.InternalLogLevel DEBUG -> b
    io.netty.util.internal.logging.InternalLogLevel INFO -> c
    io.netty.util.internal.logging.InternalLogLevel WARN -> d
    io.netty.util.internal.logging.InternalLogLevel ERROR -> e
    io.netty.util.internal.logging.InternalLogLevel[] $VALUES -> f
    21:21:io.netty.util.internal.logging.InternalLogLevel[] values() -> values
    21:21:io.netty.util.internal.logging.InternalLogLevel valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:41:void <clinit>() -> <clinit>
io.netty.util.internal.logging.InternalLogger -> io.netty.e.c.a.e:
    boolean isTraceEnabled() -> b
    void trace(java.lang.String) -> a
    void trace(java.lang.String,java.lang.Object) -> a
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> a
    void trace(java.lang.String,java.lang.Object[]) -> a
    void trace(java.lang.String,java.lang.Throwable) -> a
    boolean isDebugEnabled() -> c
    void debug(java.lang.String) -> b
    void debug(java.lang.String,java.lang.Object) -> b
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> b
    void debug(java.lang.String,java.lang.Object[]) -> b
    void debug(java.lang.String,java.lang.Throwable) -> b
    boolean isInfoEnabled() -> d
    void info(java.lang.String) -> c
    void info(java.lang.String,java.lang.Object) -> c
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> c
    void info(java.lang.String,java.lang.Object[]) -> c
    void info(java.lang.String,java.lang.Throwable) -> c
    boolean isWarnEnabled() -> e
    void warn(java.lang.String) -> d
    void warn(java.lang.String,java.lang.Object) -> d
    void warn(java.lang.String,java.lang.Object[]) -> d
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> d
    void warn(java.lang.String,java.lang.Throwable) -> d
    boolean isErrorEnabled() -> f
    void error(java.lang.String) -> e
    void error(java.lang.String,java.lang.Object) -> e
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> e
    void error(java.lang.String,java.lang.Object[]) -> e
    void error(java.lang.String,java.lang.Throwable) -> e
    boolean isEnabled(io.netty.util.internal.logging.InternalLogLevel) -> a
    void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String) -> a
    void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object,java.lang.Object) -> a
    void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[]) -> a
    void log(io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Throwable) -> a
io.netty.util.internal.logging.InternalLoggerFactory -> io.netty.e.c.a.f:
    io.netty.util.internal.logging.InternalLoggerFactory defaultFactory -> a
    34:34:void <init>() -> <init>
    42:53:io.netty.util.internal.logging.InternalLoggerFactory newDefaultFactory(java.lang.String) -> c
    61:64:io.netty.util.internal.logging.InternalLoggerFactory getDefaultFactory() -> a
    81:81:io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class) -> a
    88:88:io.netty.util.internal.logging.InternalLogger getInstance(java.lang.String) -> a
    io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> b
io.netty.util.internal.logging.JdkLogger -> io.netty.e.c.a.g:
    java.util.logging.Logger logger -> a
    java.lang.String SELF -> b
    java.lang.String SUPER -> c
    57:59:void <init>(java.util.logging.Logger) -> <init>
    68:68:boolean isTraceEnabled() -> b
    79:82:void trace(java.lang.String) -> a
    100:104:void trace(java.lang.String,java.lang.Object) -> a
    124:128:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> a
    146:150:void trace(java.lang.String,java.lang.Object[]) -> a
    162:165:void trace(java.lang.String,java.lang.Throwable) -> a
    174:174:boolean isDebugEnabled() -> c
    185:188:void debug(java.lang.String) -> b
    205:209:void debug(java.lang.String,java.lang.Object) -> b
    229:233:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> b
    251:255:void debug(java.lang.String,java.lang.Object[]) -> b
    267:270:void debug(java.lang.String,java.lang.Throwable) -> b
    279:279:boolean isInfoEnabled() -> d
    290:293:void info(java.lang.String) -> c
    310:314:void info(java.lang.String,java.lang.Object) -> c
    334:338:void info(java.lang.String,java.lang.Object,java.lang.Object) -> c
    356:360:void info(java.lang.String,java.lang.Object[]) -> c
    373:376:void info(java.lang.String,java.lang.Throwable) -> c
    386:386:boolean isWarnEnabled() -> e
    397:400:void warn(java.lang.String) -> d
    418:422:void warn(java.lang.String,java.lang.Object) -> d
    442:446:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> d
    464:468:void warn(java.lang.String,java.lang.Object[]) -> d
    481:484:void warn(java.lang.String,java.lang.Throwable) -> d
    493:493:boolean isErrorEnabled() -> f
    504:507:void error(java.lang.String) -> e
    525:529:void error(java.lang.String,java.lang.Object) -> e
    549:553:void error(java.lang.String,java.lang.Object,java.lang.Object) -> e
    571:575:void error(java.lang.String,java.lang.Object[]) -> e
    588:591:void error(java.lang.String,java.lang.Throwable) -> e
    602:607:void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable) -> a
    619:646:void fillCallerData(java.lang.String,java.util.logging.LogRecord) -> a
    609:610:void <clinit>() -> <clinit>
io.netty.util.internal.logging.JdkLoggerFactory -> io.netty.e.c.a.h:
    io.netty.util.internal.logging.InternalLoggerFactory INSTANCE -> a
    34:35:void <init>() -> <init>
    39:39:io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> b
    28:28:void <clinit>() -> <clinit>
io.netty.util.internal.logging.Log4JLogger -> io.netty.e.c.a.i:
    org.apache.log4j.Logger logger -> a
    java.lang.String FQCN -> b
    boolean traceCapable -> c
    66:69:void <init>(org.apache.log4j.Logger) -> <init>
    73:76:boolean isTraceCapable() -> g
    87:90:boolean isTraceEnabled() -> b
    102:103:void trace(java.lang.String) -> a
    121:126:void trace(java.lang.String,java.lang.Object) -> a
    146:151:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> a
    169:174:void trace(java.lang.String,java.lang.Object[]) -> a
    186:187:void trace(java.lang.String,java.lang.Throwable) -> a
    196:196:boolean isDebugEnabled() -> c
    207:208:void debug(java.lang.String) -> b
    226:230:void debug(java.lang.String,java.lang.Object) -> b
    250:254:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> b
    271:275:void debug(java.lang.String,java.lang.Object[]) -> b
    287:288:void debug(java.lang.String,java.lang.Throwable) -> b
    297:297:boolean isInfoEnabled() -> d
    308:309:void info(java.lang.String) -> c
    326:330:void info(java.lang.String,java.lang.Object) -> c
    350:354:void info(java.lang.String,java.lang.Object,java.lang.Object) -> c
    372:376:void info(java.lang.String,java.lang.Object[]) -> c
    389:390:void info(java.lang.String,java.lang.Throwable) -> c
    399:399:boolean isWarnEnabled() -> e
    410:411:void warn(java.lang.String) -> d
    429:433:void warn(java.lang.String,java.lang.Object) -> d
    453:457:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> d
    475:479:void warn(java.lang.String,java.lang.Object[]) -> d
    492:493:void warn(java.lang.String,java.lang.Throwable) -> d
    502:502:boolean isErrorEnabled() -> f
    513:514:void error(java.lang.String) -> e
    532:536:void error(java.lang.String,java.lang.Object) -> e
    556:560:void error(java.lang.String,java.lang.Object,java.lang.Object) -> e
    578:582:void error(java.lang.String,java.lang.Object[]) -> e
    595:596:void error(java.lang.String,java.lang.Throwable) -> e
    59:59:void <clinit>() -> <clinit>
io.netty.util.internal.logging.Log4JLoggerFactory -> io.netty.e.c.a.j:
    io.netty.util.internal.logging.InternalLoggerFactory INSTANCE -> a
    33:34:void <init>() -> <init>
    38:38:io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> b
    27:27:void <clinit>() -> <clinit>
io.netty.util.internal.logging.MessageFormatter -> io.netty.e.c.a.k:
    133:133:io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object) -> a
    157:157:io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object) -> a
    172:219:io.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[]) -> a
    225:272:void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Set) -> a
    276:285:void safeObjectAppend(java.lang.StringBuilder,java.lang.Object) -> a
    288:305:void objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Set) -> a
    308:316:void booleanArrayAppend(java.lang.StringBuilder,boolean[]) -> a
    319:327:void byteArrayAppend(java.lang.StringBuilder,byte[]) -> a
    330:338:void charArrayAppend(java.lang.StringBuilder,char[]) -> a
    341:349:void shortArrayAppend(java.lang.StringBuilder,short[]) -> a
    352:360:void intArrayAppend(java.lang.StringBuilder,int[]) -> a
    363:371:void longArrayAppend(java.lang.StringBuilder,long[]) -> a
    374:382:void floatArrayAppend(java.lang.StringBuilder,float[]) -> a
    385:393:void doubleArrayAppend(java.lang.StringBuilder,double[]) -> a
io.netty.util.internal.logging.Slf4JLogger -> io.netty.e.c.a.l:
    org.slf4j.Logger logger -> a
    30:32:void <init>(org.slf4j.Logger) -> <init>
    36:36:boolean isTraceEnabled() -> b
    41:42:void trace(java.lang.String) -> a
    46:47:void trace(java.lang.String,java.lang.Object) -> a
    51:52:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> a
    56:57:void trace(java.lang.String,java.lang.Object[]) -> a
    61:62:void trace(java.lang.String,java.lang.Throwable) -> a
    66:66:boolean isDebugEnabled() -> c
    71:72:void debug(java.lang.String) -> b
    76:77:void debug(java.lang.String,java.lang.Object) -> b
    81:82:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> b
    86:87:void debug(java.lang.String,java.lang.Object[]) -> b
    91:92:void debug(java.lang.String,java.lang.Throwable) -> b
    96:96:boolean isInfoEnabled() -> d
    101:102:void info(java.lang.String) -> c
    106:107:void info(java.lang.String,java.lang.Object) -> c
    111:112:void info(java.lang.String,java.lang.Object,java.lang.Object) -> c
    116:117:void info(java.lang.String,java.lang.Object[]) -> c
    121:122:void info(java.lang.String,java.lang.Throwable) -> c
    126:126:boolean isWarnEnabled() -> e
    131:132:void warn(java.lang.String) -> d
    136:137:void warn(java.lang.String,java.lang.Object) -> d
    141:142:void warn(java.lang.String,java.lang.Object[]) -> d
    146:147:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> d
    151:152:void warn(java.lang.String,java.lang.Throwable) -> d
    156:156:boolean isErrorEnabled() -> f
    161:162:void error(java.lang.String) -> e
    166:167:void error(java.lang.String,java.lang.Object) -> e
    171:172:void error(java.lang.String,java.lang.Object,java.lang.Object) -> e
    176:177:void error(java.lang.String,java.lang.Object[]) -> e
    181:182:void error(java.lang.String,java.lang.Throwable) -> e
io.netty.util.internal.logging.Slf4JLoggerFactory -> io.netty.e.c.a.m:
    io.netty.util.internal.logging.InternalLoggerFactory INSTANCE -> a
    boolean $assertionsDisabled -> b
    35:36:void <init>() -> <init>
    38:43:void <init>(boolean) -> <init>
    47:47:io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> b
    26:29:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue -> io.netty.e.c.b.a.a.a.a:
    java.lang.Object JUMP -> g
    183:196:void <init>(int) -> <init>
    201:201:java.util.Iterator iterator() -> iterator
    215:236:int size() -> size
    247:247:boolean isEmpty() -> isEmpty
    253:253:java.lang.String toString() -> toString
    259:310:boolean offer(java.lang.Object) -> offer
    322:355:java.lang.Object poll() -> poll
    367:387:java.lang.Object peek() -> peek
    395:426:int offerSlowPath(long,long,long) -> a
    long availableInQueue(long,long) -> a
    438:441:java.lang.Object[] getNextBuffer(java.lang.Object[],long) -> a
    446:446:long nextArrayOffset(long) -> e
    451:459:java.lang.Object newBufferPoll(java.lang.Object[],long) -> b
    464:470:java.lang.Object newBufferPeek(java.lang.Object[],long) -> c
    475:477:long newBufferAndOffset(java.lang.Object[],long) -> d
    680:709:void resize(long,java.lang.Object[],long,java.lang.Object) -> a
    int getNextBufferSize(java.lang.Object[]) -> a
    long getCurrentBufferCapacity(long) -> a
    171:171:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields -> io.netty.e.c.b.a.a.a.b:
    long P_LIMIT_OFFSET -> g
    long producerLimit -> h
    long producerMask -> a
    java.lang.Object[] producerBuffer -> b
    122:122:void <init>() -> <init>
    145:145:long lvProducerLimit() -> a
    150:150:boolean casProducerLimit(long,long) -> b
    155:156:void soProducerLimit(long) -> b
    130:137:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields -> io.netty.e.c.b.a.a.a.c:
    long C_INDEX_OFFSET -> a
    long consumerMask -> c
    java.lang.Object[] consumerBuffer -> d
    long consumerIndex -> e
    82:82:void <init>() -> <init>
    106:106:long lvConsumerIndex() -> b
    111:112:void soConsumerIndex(long) -> c
    90:97:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad1 -> io.netty.e.c.b.a.a.a.d:
    32:32:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad2 -> io.netty.e.c.b.a.a.a.e:
    75:75:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad3 -> io.netty.e.c.b.a.a.a.f:
    115:115:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields -> io.netty.e.c.b.a.a.a.g:
    long P_INDEX_OFFSET -> a
    long producerIndex -> f
    39:39:void <init>() -> <init>
    61:61:long lvProducerIndex() -> c
    66:67:void soProducerIndex(long) -> d
    71:71:boolean casProducerIndex(long,long) -> c
    47:54:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.CircularArrayOffsetCalculator -> io.netty.e.c.b.a.a.a.h:
    14:14:java.lang.Object[] allocate(int) -> a
    24:24:long calcElementOffset(long,long) -> a
io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue -> io.netty.e.c.b.a.a.a.i:
    long mask -> a
    java.lang.Object[] buffer -> b
    42:46:void <init>(int) -> <init>
    55:55:long calcElementOffset(long,long) -> a
    64:64:long calcElementOffset(long) -> a
    70:70:java.util.Iterator iterator() -> iterator
    76:76:int size() -> size
    82:82:boolean isEmpty() -> isEmpty
    88:88:java.lang.String toString() -> toString
    94:98:void clear() -> clear
io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueueL0Pad -> io.netty.e.c.b.a.a.a.j:
    22:22:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil -> io.netty.e.c.b.a.a.a.k:
    29:50:int size(io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue) -> a
    60:60:boolean isEmpty(io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue) -> b
io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue -> io.netty.e.c.b.a.a.a.l:
    long lvConsumerIndex() -> b
    long lvProducerIndex() -> c
io.netty.util.internal.shaded.org.jctools.queues.LinkedArrayQueueUtil -> io.netty.e.c.b.a.a.a.m:
    14:14:int length(java.lang.Object[]) -> a
    24:24:long modifiedCalcElementOffset(long,long) -> a
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue -> io.netty.e.c.b.a.a.a.n:
    199:200:void <init>(int) -> <init>
    269:307:boolean offer(java.lang.Object) -> offer
    365:395:java.lang.Object poll() -> poll
    411:436:java.lang.Object peek() -> peek
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField -> io.netty.e.c.b.a.a.a.o:
    long C_INDEX_OFFSET -> d
    long consumerIndex -> c
    151:152:void <init>(int) -> <init>
    156:156:long lpConsumerIndex() -> a
    162:162:long lvConsumerIndex() -> b
    167:168:void soConsumerIndex(long) -> b
    138:145:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL1Pad -> io.netty.e.c.b.a.a.a.p:
    28:29:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL2Pad -> io.netty.e.c.b.a.a.a.q:
    125:126:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL3Pad -> io.netty.e.c.b.a.a.a.r:
    178:179:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueMidPad -> io.netty.e.c.b.a.a.a.s:
    76:77:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField -> io.netty.e.c.b.a.a.a.t:
    long P_INDEX_OFFSET -> c
    long producerIndex -> d
    54:55:void <init>(int) -> <init>
    60:60:long lvProducerIndex() -> c
    65:65:boolean casProducerIndex(long,long) -> b
    41:48:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField -> io.netty.e.c.b.a.a.a.u:
    long P_LIMIT_OFFSET -> c
    long producerLimit -> d
    103:105:void <init>(int) -> <init>
    109:109:long lvProducerLimit() -> d
    114:115:void soProducerLimit(long) -> c
    89:96:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue -> io.netty.e.c.b.a.a.a.v:
    64:65:void <init>(int,int) -> <init>
    70:70:long availableInQueue(long,long) -> a
    82:82:int getNextBufferSize(java.lang.Object[]) -> a
    88:88:long getCurrentBufferCapacity(long) -> a
io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueColdProducerFields -> io.netty.e.c.b.a.a.a.w:
    long maxQueueCapacity -> g
    30:35:void <init>(int,int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue -> io.netty.e.c.b.a.a.a.x:
    34:35:void <init>(int) -> <init>
    41:41:long availableInQueue(long,long) -> a
    77:77:int getNextBufferSize(java.lang.Object[]) -> a
    83:83:long getCurrentBufferCapacity(long) -> a
io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue -> io.netty.e.c.b.a.a.a.a.a:
    java.util.concurrent.atomic.AtomicReferenceArray buffer -> a
    int mask -> b
    33:37:void <init>(int) -> <init>
    42:42:java.util.Iterator iterator() -> iterator
    48:48:java.lang.String toString() -> toString
    54:58:void clear() -> clear
    62:62:int calcElementOffset(long,int) -> a
    67:67:int calcElementOffset(long) -> a
    72:72:java.lang.Object lvElement(java.util.concurrent.atomic.AtomicReferenceArray,int) -> a
    87:88:void spElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object) -> a
    97:98:void soElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object) -> b
    128:128:int size() -> size
    134:134:boolean isEmpty() -> isEmpty
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue -> io.netty.e.c.b.a.a.a.a.b:
    java.lang.Object JUMP -> h
    163:176:void <init>(int) -> <init>
    180:180:java.util.Iterator iterator() -> iterator
    192:207:int size() -> size
    214:214:boolean isEmpty() -> isEmpty
    219:219:java.lang.String toString() -> toString
    224:263:boolean offer(java.lang.Object) -> offer
    274:296:java.lang.Object poll() -> poll
    307:321:java.lang.Object peek() -> peek
    329:350:int offerSlowPath(long,long,long) -> a
    long availableInQueue(long,long) -> a
    360:363:java.util.concurrent.atomic.AtomicReferenceArray getNextBuffer(java.util.concurrent.atomic.AtomicReferenceArray,long) -> a
    367:367:int nextArrayOffset(long) -> e
    371:380:java.lang.Object newBufferPoll(java.util.concurrent.atomic.AtomicReferenceArray,long) -> b
    384:390:java.lang.Object newBufferPeek(java.util.concurrent.atomic.AtomicReferenceArray,long) -> c
    394:397:int newBufferAndOffset(java.util.concurrent.atomic.AtomicReferenceArray,long) -> d
    562:585:void resize(long,java.util.concurrent.atomic.AtomicReferenceArray,long,java.lang.Object) -> a
    int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray) -> a
    long getCurrentBufferCapacity(long) -> a
    157:157:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueColdProducerFields -> io.netty.e.c.b.a.a.a.a.c:
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_LIMIT_UPDATER -> h
    long producerLimit -> a
    long producerMask -> b
    java.util.concurrent.atomic.AtomicReferenceArray producerBuffer -> c
    121:121:void <init>() -> <init>
    132:132:long lvProducerLimit() -> a
    136:136:boolean casProducerLimit(long,long) -> b
    140:141:void soProducerLimit(long) -> b
    123:123:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueConsumerFields -> io.netty.e.c.b.a.a.a.a.d:
    java.util.concurrent.atomic.AtomicLongFieldUpdater C_INDEX_UPDATER -> a
    long consumerMask -> d
    java.util.concurrent.atomic.AtomicReferenceArray consumerBuffer -> e
    long consumerIndex -> f
    86:86:void <init>() -> <init>
    98:98:long lvConsumerIndex() -> b
    102:103:void soConsumerIndex(long) -> c
    88:88:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad1 -> io.netty.e.c.b.a.a.a.a.e:
    40:40:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad2 -> io.netty.e.c.b.a.a.a.a.f:
    75:75:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad3 -> io.netty.e.c.b.a.a.a.a.g:
    110:110:void <init>() -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields -> io.netty.e.c.b.a.a.a.a.h:
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_INDEX_UPDATER -> a
    long producerIndex -> g
    51:51:void <init>() -> <init>
    59:59:long lvProducerIndex() -> c
    63:64:void soProducerIndex(long) -> d
    67:67:boolean casProducerIndex(long,long) -> c
    53:53:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedAtomicArrayQueueUtil -> io.netty.e.c.b.a.a.a.a.i:
    13:13:java.lang.Object lvElement(java.util.concurrent.atomic.AtomicReferenceArray,int) -> a
    33:34:void soElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object) -> a
    43:43:java.util.concurrent.atomic.AtomicReferenceArray allocate(int) -> a
    48:48:int length(java.util.concurrent.atomic.AtomicReferenceArray) -> a
    56:56:int modifiedCalcElementOffset(long,long) -> a
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue -> io.netty.e.c.b.a.a.a.a.j:
    176:177:void <init>(int) -> <init>
    240:274:boolean offer(java.lang.Object) -> offer
    329:353:java.lang.Object poll() -> poll
    368:387:java.lang.Object peek() -> peek
    173:173:void clear() -> clear
    173:173:java.lang.String toString() -> toString
    173:173:java.util.Iterator iterator() -> iterator
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueConsumerIndexField -> io.netty.e.c.b.a.a.a.a.k:
    java.util.concurrent.atomic.AtomicLongFieldUpdater C_INDEX_UPDATER -> d
    long consumerIndex -> c
    126:127:void <init>(int) -> <init>
    130:130:long lpConsumerIndex() -> a
    135:135:long lvConsumerIndex() -> b
    139:140:void soConsumerIndex(long) -> b
    121:121:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL1Pad -> io.netty.e.c.b.a.a.a.a.l:
    32:33:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL2Pad -> io.netty.e.c.b.a.a.a.a.m:
    111:112:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL3Pad -> io.netty.e.c.b.a.a.a.a.n:
    154:155:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueMidPad -> io.netty.e.c.b.a.a.a.a.o:
    71:72:void <init>(int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueProducerIndexField -> io.netty.e.c.b.a.a.a.a.p:
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_INDEX_UPDATER -> c
    long producerIndex -> d
    47:48:void <init>(int) -> <init>
    52:52:long lvProducerIndex() -> c
    56:56:boolean casProducerIndex(long,long) -> a
    42:42:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueProducerLimitField -> io.netty.e.c.b.a.a.a.a.q:
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_LIMIT_UPDATER -> c
    long producerLimit -> d
    87:89:void <init>(int) -> <init>
    92:92:long lvProducerLimit() -> d
    96:97:void soProducerLimit(long) -> c
    81:81:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscChunkedAtomicArrayQueue -> io.netty.e.c.b.a.a.a.a.r:
    77:78:void <init>(int,int) -> <init>
    82:82:long availableInQueue(long,long) -> a
    92:92:int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray) -> a
    97:97:long getCurrentBufferCapacity(long) -> a
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscChunkedAtomicArrayQueueColdProducerFields -> io.netty.e.c.b.a.a.a.a.s:
    long maxQueueCapacity -> h
    42:46:void <init>(int,int) -> <init>
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscGrowableAtomicArrayQueue -> io.netty.e.c.b.a.a.a.a.t:
    54:55:void <init>(int,int) -> <init>
    59:62:int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray) -> a
    67:67:long getCurrentBufferCapacity(long) -> a
io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscUnboundedAtomicArrayQueue -> io.netty.e.c.b.a.a.a.a.u:
    46:47:void <init>(int) -> <init>
    51:51:long availableInQueue(long,long) -> a
    81:81:int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray) -> a
    86:86:long getCurrentBufferCapacity(long) -> a
io.netty.util.internal.shaded.org.jctools.util.Pow2 -> io.netty.e.c.b.a.a.b.a:
    29:36:int roundToPowerOfTwo(int) -> a
io.netty.util.internal.shaded.org.jctools.util.RangeUtil -> io.netty.e.c.b.a.a.b.b:
    21:26:long checkPositive(long,java.lang.String) -> a
    41:46:int checkLessThan(int,int,java.lang.String) -> a
    51:56:int checkLessThanOrEqual(int,long,java.lang.String) -> a
    61:66:int checkGreaterThanOrEqual(int,int,java.lang.String) -> b
io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess -> io.netty.e.c.b.a.a.b.c:
    boolean SUPPORTS_GET_AND_SET -> a
    sun.misc.Unsafe UNSAFE -> b
    46:81:void <clinit>() -> <clinit>
io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess -> io.netty.e.c.b.a.a.b.d:
    long REF_ARRAY_BASE -> a
    int REF_ELEMENT_SHIFT -> b
    65:66:void spElement(java.lang.Object[],long,java.lang.Object) -> a
    77:78:void soElement(java.lang.Object[],long,java.lang.Object) -> b
    103:103:java.lang.Object lvElement(java.lang.Object[],long) -> a
    40:54:void <clinit>() -> <clinit>
io.reactivex.Flowable -> io.a.a:
    int BUFFER_SIZE -> a
    59:59:void <init>() -> <init>
    138:138:int bufferSize() -> a
    1783:1783:io.reactivex.Flowable empty() -> b
    8461:8461:io.reactivex.Flowable flatMap(io.reactivex.functions.Function) -> a
    8613:8624:io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int,int) -> a
    13091:13091:io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer) -> a
    13163:13172:io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer) -> a
    13179:13185:void subscribe(org.reactivestreams.Subscriber) -> a
    13228:13247:void subscribe(io.reactivex.FlowableSubscriber) -> a
    void subscribeActual(org.reactivestreams.Subscriber) -> b
    63:64:void <clinit>() -> <clinit>
io.reactivex.FlowableSubscriber -> io.a.b:
io.reactivex.Single -> io.a.c:
    60:60:void <init>() -> <init>
    2484:2486:java.lang.Object blockingGet() -> a
    3089:3105:void subscribe(io.reactivex.SingleObserver) -> a
    void subscribeActual(io.reactivex.SingleObserver) -> b
    3403:3406:io.reactivex.Flowable toFlowable() -> b
io.reactivex.SingleObserver -> io.a.d:
    void onSubscribe(io.reactivex.disposables.Disposable) -> a
    void onSuccess(java.lang.Object) -> a
    void onError(java.lang.Throwable) -> a
io.reactivex.SingleSource -> io.a.e:
    void subscribe(io.reactivex.SingleObserver) -> a
io.reactivex.disposables.Disposable -> io.a.a.a:
    void dispose() -> a
io.reactivex.exceptions.CompositeException -> io.a.b.a:
    java.util.List exceptions -> a
    java.lang.String message -> b
    java.lang.Throwable cause -> c
    53:55:void <init>(java.lang.Throwable[]) -> <init>
    64:87:void <init>(java.lang.Iterable) -> <init>
    96:96:java.util.List getExceptions() -> a
    102:102:java.lang.String getMessage() -> getMessage
    108:144:java.lang.Throwable getCause() -> getCause
    159:160:void printStackTrace() -> printStackTrace
    164:165:void printStackTrace(java.io.PrintStream) -> printStackTrace
    169:170:void printStackTrace(java.io.PrintWriter) -> printStackTrace
    180:192:void printStackTrace(io.reactivex.exceptions.CompositeException$PrintStreamOrWriter) -> a
    195:203:void appendStackTrace(java.lang.StringBuilder,java.lang.Throwable,java.lang.String) -> a
    250:263:java.util.List getListOfCauses(java.lang.Throwable) -> a
    282:292:java.lang.Throwable getRootCause(java.lang.Throwable) -> b
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain -> io.a.b.b:
    239:239:void <init>() -> <init>
    245:245:java.lang.String getMessage() -> getMessage
io.reactivex.exceptions.CompositeException$PrintStreamOrWriter -> io.a.b.c:
    205:205:void <init>() -> <init>
    void println(java.lang.Object) -> a
io.reactivex.exceptions.CompositeException$WrappedPrintStream -> io.a.b.d:
    java.io.PrintStream printStream -> a
    216:218:void <init>(java.io.PrintStream) -> <init>
    222:223:void println(java.lang.Object) -> a
io.reactivex.exceptions.CompositeException$WrappedPrintWriter -> io.a.b.e:
    java.io.PrintWriter printWriter -> a
    229:231:void <init>(java.io.PrintWriter) -> <init>
    235:236:void println(java.lang.Object) -> a
io.reactivex.exceptions.Exceptions -> io.a.b.f:
    68:75:void throwIfFatal(java.lang.Throwable) -> a
io.reactivex.exceptions.MissingBackpressureException -> io.a.b.g:
    26:28:void <init>() -> <init>
    35:36:void <init>(java.lang.String) -> <init>
io.reactivex.exceptions.OnErrorNotImplementedException -> io.a.b.h:
    52:53:void <init>(java.lang.Throwable) -> <init>
io.reactivex.exceptions.ProtocolViolationException -> io.a.b.i:
    34:35:void <init>(java.lang.String) -> <init>
io.reactivex.exceptions.UndeliverableException -> io.a.b.j:
    34:35:void <init>(java.lang.Throwable) -> <init>
io.reactivex.functions.Action -> io.a.c.a:
    void run() -> a
io.reactivex.functions.BiFunction -> io.a.c.b:
    java.lang.Object apply(java.lang.Object,java.lang.Object) -> a
io.reactivex.functions.BiPredicate -> io.a.c.c:
io.reactivex.functions.BooleanSupplier -> io.a.c.d:
    boolean getAsBoolean() -> a
io.reactivex.functions.Consumer -> io.a.c.e:
    void accept(java.lang.Object) -> accept
io.reactivex.functions.Function -> io.a.c.f:
    java.lang.Object apply(java.lang.Object) -> apply
io.reactivex.functions.LongConsumer -> io.a.c.g:
io.reactivex.functions.Predicate -> io.a.c.h:
io.reactivex.internal.disposables.DisposableHelper -> io.a.d.a.a:
    io.reactivex.internal.disposables.DisposableHelper DISPOSED -> a
    io.reactivex.internal.disposables.DisposableHelper[] $VALUES -> b
    27:27:io.reactivex.internal.disposables.DisposableHelper[] values() -> values
    27:27:io.reactivex.internal.disposables.DisposableHelper valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    141:150:boolean validate(io.reactivex.disposables.Disposable,io.reactivex.disposables.Disposable) -> a
    157:158:void reportDisposableSet() -> b
    180:180:void dispose() -> a
    27:31:void <clinit>() -> <clinit>
io.reactivex.internal.functions.Functions -> io.a.d.b.a:
    io.reactivex.functions.Function IDENTITY -> a
    java.lang.Runnable EMPTY_RUNNABLE -> b
    io.reactivex.functions.Action EMPTY_ACTION -> c
    io.reactivex.functions.Consumer EMPTY_CONSUMER -> d
    io.reactivex.functions.Consumer ERROR_CONSUMER -> e
    io.reactivex.functions.Consumer ON_ERROR_MISSING -> f
    io.reactivex.functions.LongConsumer EMPTY_LONG_CONSUMER -> g
    io.reactivex.functions.Predicate ALWAYS_TRUE -> h
    io.reactivex.functions.Predicate ALWAYS_FALSE -> i
    java.util.concurrent.Callable NULL_SUPPLIER -> j
    java.util.Comparator NATURAL_COMPARATOR -> k
    io.reactivex.functions.Consumer REQUEST_MAX -> l
    81:514:void <clinit>() -> <clinit>
io.reactivex.internal.functions.Functions$EmptyAction -> io.a.d.b.b:
    674:674:void <init>() -> <init>
    676:676:void run() -> a
    680:680:java.lang.String toString() -> toString
io.reactivex.internal.functions.Functions$EmptyConsumer -> io.a.d.b.c:
    684:684:void <init>() -> <init>
    686:686:void accept(java.lang.Object) -> accept
    690:690:java.lang.String toString() -> toString
io.reactivex.internal.functions.Functions$EmptyLongConsumer -> io.a.d.b.d:
    708:708:void <init>() -> <init>
io.reactivex.internal.functions.Functions$EmptyRunnable -> io.a.d.b.e:
    664:664:void <init>() -> <init>
    666:666:void run() -> run
    670:670:java.lang.String toString() -> toString
io.reactivex.internal.functions.Functions$ErrorConsumer -> io.a.d.b.f:
    694:694:void <init>() -> <init>
    697:698:void accept(java.lang.Throwable) -> a
    694:694:void accept(java.lang.Object) -> accept
io.reactivex.internal.functions.Functions$FalsePredicate -> io.a.d.b.g:
    720:720:void <init>() -> <init>
io.reactivex.internal.functions.Functions$Identity -> io.a.d.b.h:
    652:652:void <init>() -> <init>
    655:655:java.lang.Object apply(java.lang.Object) -> apply
    660:660:java.lang.String toString() -> toString
io.reactivex.internal.functions.Functions$MaxRequestSubscription -> io.a.d.b.i:
    742:742:void <init>() -> <init>
    745:746:void accept(org.reactivestreams.Subscription) -> a
    742:742:void accept(java.lang.Object) -> accept
io.reactivex.internal.functions.Functions$NaturalObjectComparator -> io.a.d.b.j:
    734:734:void <init>() -> <init>
    738:738:int compare(java.lang.Object,java.lang.Object) -> compare
io.reactivex.internal.functions.Functions$NullCallable -> io.a.d.b.k:
    727:727:void <init>() -> <init>
    730:730:java.lang.Object call() -> call
io.reactivex.internal.functions.Functions$OnErrorMissingConsumer -> io.a.d.b.l:
    701:701:void <init>() -> <init>
    704:705:void accept(java.lang.Throwable) -> a
    701:701:void accept(java.lang.Object) -> accept
io.reactivex.internal.functions.Functions$TruePredicate -> io.a.d.b.m:
    713:713:void <init>() -> <init>
io.reactivex.internal.functions.ObjectHelper -> io.a.d.b.n:
    io.reactivex.functions.BiPredicate EQUALS -> a
    38:41:java.lang.Object requireNonNull(java.lang.Object,java.lang.String) -> a
    104:107:int verifyPositive(int,java.lang.String) -> a
    83:83:void <clinit>() -> <clinit>
io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate -> io.a.d.b.o:
    125:125:void <init>() -> <init>
io.reactivex.internal.fuseable.FuseToFlowable -> io.a.d.c.a:
    io.reactivex.Flowable fuseToFlowable() -> a
io.reactivex.internal.fuseable.QueueFuseable -> io.a.d.c.b:
    int requestFusion(int) -> a
io.reactivex.internal.fuseable.QueueSubscription -> io.a.d.c.c:
io.reactivex.internal.fuseable.ScalarCallable -> io.a.d.c.d:
    java.lang.Object call() -> call
io.reactivex.internal.fuseable.SimplePlainQueue -> io.a.d.c.e:
    java.lang.Object poll() -> a
io.reactivex.internal.fuseable.SimpleQueue -> io.a.d.c.f:
    boolean offer(java.lang.Object) -> b
    java.lang.Object poll() -> a
    boolean isEmpty() -> b
    void clear() -> h_
io.reactivex.internal.observers.BlockingMultiObserver -> io.a.d.d.a:
    java.lang.Object value -> a
    java.lang.Throwable error -> b
    io.reactivex.disposables.Disposable d -> c
    boolean cancelled -> d
    38:39:void <init>() -> <init>
    42:47:void dispose() -> a
    51:55:void onSubscribe(io.reactivex.disposables.Disposable) -> a
    59:61:void onSuccess(java.lang.Object) -> a
    65:67:void onError(java.lang.Throwable) -> a
    80:93:java.lang.Object blockingGet() -> b
io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream -> io.a.d.e.a.a:
    io.reactivex.Flowable source -> b
    41:43:void <init>(io.reactivex.Flowable) -> <init>
io.reactivex.internal.operators.flowable.FlowableEmpty -> io.a.d.e.a.b:
    io.reactivex.Flowable INSTANCE -> b
    29:30:void <init>() -> <init>
    34:35:void subscribeActual(org.reactivestreams.Subscriber) -> b
    39:39:java.lang.Object call() -> call
    27:27:void <clinit>() -> <clinit>
io.reactivex.internal.operators.flowable.FlowableFlatMap -> io.a.d.e.a.c:
    io.reactivex.functions.Function mapper -> c
    boolean delayErrors -> d
    int maxConcurrency -> e
    int bufferSize -> f
    41:46:void <init>(io.reactivex.Flowable,io.reactivex.functions.Function,boolean,int,int) -> <init>
    50:54:void subscribeActual(org.reactivestreams.Subscriber) -> b
    59:59:io.reactivex.FlowableSubscriber subscribe(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean,int,int) -> a
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber -> io.a.d.e.a.d:
    long id -> a
    io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber parent -> b
    int limit -> c
    int bufferSize -> d
    boolean done -> e
    io.reactivex.internal.fuseable.SimpleQueue queue -> f
    long produced -> g
    int fusionMode -> h
    626:631:void <init>(io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber,long) -> <init>
    634:656:void onSubscribe(org.reactivestreams.Subscription) -> a
    659:664:void onNext(java.lang.Object) -> a
    667:669:void onError(java.lang.Throwable) -> a
    672:674:void onComplete() -> i_
    677:686:void requestMore(long) -> a
    690:691:void dispose() -> a
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber -> io.a.d.e.a.e:
    org.reactivestreams.Subscriber actual -> a
    io.reactivex.functions.Function mapper -> b
    boolean delayErrors -> c
    int maxConcurrency -> d
    int bufferSize -> e
    io.reactivex.internal.fuseable.SimplePlainQueue queue -> f
    boolean done -> g
    io.reactivex.internal.util.AtomicThrowable errs -> h
    boolean cancelled -> i
    java.util.concurrent.atomic.AtomicReference subscribers -> j
    io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber[] EMPTY -> k
    io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber[] CANCELLED -> l
    java.util.concurrent.atomic.AtomicLong requested -> m
    org.reactivestreams.Subscription upstream -> n
    long uniqueId -> o
    long lastId -> p
    int lastIndex -> q
    int scalarEmitted -> r
    int scalarLimit -> s
    76:106:void <init>(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean,int,int) -> <init>
    110:121:void onSubscribe(org.reactivestreams.Subscription) -> a
    127:166:void onNext(java.lang.Object) -> a
    170:182:boolean addInner(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber) -> a
    187:213:void removeInner(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber) -> b
    217:226:io.reactivex.internal.fuseable.SimpleQueue getMainQueue() -> a
    230:266:void tryEmitScalar(java.lang.Object) -> b
    269:274:io.reactivex.internal.fuseable.SimpleQueue getInnerQueue(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber) -> c
    278:314:void tryEmit(java.lang.Object,io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber) -> a
    319:329:void onError(java.lang.Throwable) -> a
    334:339:void onComplete() -> i_
    343:347:void request(long) -> a
    351:362:void cancel() -> c
    365:368:void drain() -> d
    371:555:void drainLoop() -> e
    558:570:boolean checkTerminate() -> f
    574:578:void clearScalarQueue() -> g
    581:594:void disposeAll() -> h
    597:609:void innerError(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber,java.lang.Throwable) -> a
    82:84:void <clinit>() -> <clinit>
io.reactivex.internal.operators.flowable.FlowableInternalHelper -> io.a.d.e.a.f:
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax -> io.a.d.e.a.g:
    io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax INSTANCE -> a
    io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax[] $VALUES -> b
    216:216:io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax[] values() -> values
    216:216:io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax valueOf(java.lang.String) -> valueOf
    216:216:void <init>(java.lang.String,int) -> <init>
    220:221:void accept(org.reactivestreams.Subscription) -> a
    216:216:void accept(java.lang.Object) -> accept
    216:217:void <clinit>() -> <clinit>
io.reactivex.internal.operators.flowable.FlowableScalarXMap -> io.a.d.e.a.h:
    50:98:boolean tryScalarXMapSubscribe(org.reactivestreams.Publisher,org.reactivestreams.Subscriber,io.reactivex.functions.Function) -> a
    112:112:io.reactivex.Flowable scalarXMap(java.lang.Object,io.reactivex.functions.Function) -> a
io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable -> io.a.d.e.a.i:
    java.lang.Object value -> b
    io.reactivex.functions.Function mapper -> c
    128:131:void <init>(java.lang.Object,io.reactivex.functions.Function) -> <init>
    138:162:void subscribeActual(org.reactivestreams.Subscriber) -> b
io.reactivex.internal.operators.single.SingleToFlowable -> io.a.d.e.b.a:
    io.reactivex.SingleSource source -> b
    31:33:void <init>(io.reactivex.SingleSource) -> <init>
    37:38:void subscribeActual(org.reactivestreams.Subscriber) -> b
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver -> io.a.d.e.b.b:
    io.reactivex.disposables.Disposable d -> a
    49:50:void <init>(org.reactivestreams.Subscriber) -> <init>
    54:59:void onSubscribe(io.reactivex.disposables.Disposable) -> a
    63:64:void onSuccess(java.lang.Object) -> a
    68:69:void onError(java.lang.Throwable) -> a
    73:75:void cancel() -> c
io.reactivex.internal.queue.SpscArrayQueue -> io.a.d.f.a:
    java.lang.Integer MAX_LOOK_AHEAD_STEP -> f
    int mask -> a
    java.util.concurrent.atomic.AtomicLong producerIndex -> b
    long producerLookAhead -> c
    java.util.concurrent.atomic.AtomicLong consumerIndex -> d
    int lookAheadStep -> e
    51:56:void <init>(int) -> <init>
    60:77:boolean offer(java.lang.Object) -> b
    89:98:java.lang.Object poll() -> a
    103:103:boolean isEmpty() -> b
    107:108:void soProducerIndex(long) -> a
    111:112:void soConsumerIndex(long) -> b
    117:118:void clear() -> h_
    121:121:int calcElementOffset(long,int) -> a
    125:125:int calcElementOffset(long) -> c
    129:130:void soElement(int,java.lang.Object) -> a
    133:133:java.lang.Object lvElement(int) -> a
    43:43:void <clinit>() -> <clinit>
io.reactivex.internal.queue.SpscLinkedArrayQueue -> io.a.d.f.b:
    int MAX_LOOK_AHEAD_STEP -> a
    java.util.concurrent.atomic.AtomicLong producerIndex -> b
    int producerLookAheadStep -> c
    long producerLookAhead -> d
    int producerMask -> e
    java.util.concurrent.atomic.AtomicReferenceArray producerBuffer -> f
    int consumerMask -> g
    java.util.concurrent.atomic.AtomicReferenceArray consumerBuffer -> h
    java.util.concurrent.atomic.AtomicLong consumerIndex -> i
    java.lang.Object HAS_NEXT -> j
    34:59:void <init>(int) -> <init>
    68:89:boolean offer(java.lang.Object) -> b
    95:97:boolean writeToQueue(java.util.concurrent.atomic.AtomicReferenceArray,java.lang.Object,long,int) -> a
    102:111:void resize(java.util.concurrent.atomic.AtomicReferenceArray,long,int,java.lang.Object,long) -> a
    114:115:void soNext(java.util.concurrent.atomic.AtomicReferenceArray,java.util.concurrent.atomic.AtomicReferenceArray) -> a
    118:121:java.util.concurrent.atomic.AtomicReferenceArray lvNextBufferAndUnlink(java.util.concurrent.atomic.AtomicReferenceArray,int) -> a
    133:147:java.lang.Object poll() -> a
    152:159:java.lang.Object newBufferPoll(java.util.concurrent.atomic.AtomicReferenceArray,long,int) -> a
    184:185:void clear() -> h_
    207:207:boolean isEmpty() -> b
    211:212:void adjustLookAheadStep(int) -> a
    215:215:long lvProducerIndex() -> d
    219:219:long lvConsumerIndex() -> e
    223:223:long lpProducerIndex() -> f
    227:227:long lpConsumerIndex() -> g
    231:232:void soProducerIndex(long) -> a
    235:236:void soConsumerIndex(long) -> b
    239:239:int calcWrappedOffset(long,int) -> a
    242:242:int calcDirectOffset(int) -> b
    245:246:void soElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object) -> a
    249:249:java.lang.Object lvElement(java.util.concurrent.atomic.AtomicReferenceArray,int) -> b
    33:46:void <clinit>() -> <clinit>
io.reactivex.internal.schedulers.NonBlockingThread -> io.a.d.g.a:
io.reactivex.internal.subscribers.LambdaSubscriber -> io.a.d.h.a:
    io.reactivex.functions.Consumer onNext -> a
    io.reactivex.functions.Consumer onError -> b
    io.reactivex.functions.Action onComplete -> c
    io.reactivex.functions.Consumer onSubscribe -> d
    41:46:void <init>(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer) -> <init>
    50:59:void onSubscribe(org.reactivestreams.Subscription) -> a
    63:72:void onNext(java.lang.Object) -> a
    76:87:void onError(java.lang.Throwable) -> a
    91:100:void onComplete() -> i_
    104:105:void dispose() -> a
    109:109:boolean isDisposed() -> d
    114:115:void request(long) -> a
    119:120:void cancel() -> c
io.reactivex.internal.subscribers.StrictSubscriber -> io.a.d.h.b:
    org.reactivestreams.Subscriber actual -> a
    io.reactivex.internal.util.AtomicThrowable error -> b
    java.util.concurrent.atomic.AtomicLong requested -> c
    java.util.concurrent.atomic.AtomicReference s -> d
    java.util.concurrent.atomic.AtomicBoolean once -> e
    boolean done -> f
    56:62:void <init>(org.reactivestreams.Subscriber) -> <init>
    66:72:void request(long) -> a
    76:79:void cancel() -> c
    83:93:void onSubscribe(org.reactivestreams.Subscription) -> a
    97:98:void onNext(java.lang.Object) -> a
    102:104:void onError(java.lang.Throwable) -> a
    108:110:void onComplete() -> i_
io.reactivex.internal.subscriptions.BasicIntQueueSubscription -> io.a.d.i.a:
    25:25:void <init>() -> <init>
    32:32:boolean offer(java.lang.Object) -> b
io.reactivex.internal.subscriptions.DeferredScalarSubscription -> io.a.d.i.b:
    org.reactivestreams.Subscriber actual -> b
    java.lang.Object value -> c
    69:71:void <init>(org.reactivestreams.Subscriber) -> <init>
    75:102:void request(long) -> a
    111:146:void complete(java.lang.Object) -> c
    153:157:int requestFusion(int) -> a
    163:169:java.lang.Object poll() -> a
    174:174:boolean isEmpty() -> b
    179:181:void clear() -> h_
    185:187:void cancel() -> c
io.reactivex.internal.subscriptions.EmptySubscription -> io.a.d.i.c:
    io.reactivex.internal.subscriptions.EmptySubscription INSTANCE -> a
    io.reactivex.internal.subscriptions.EmptySubscription[] $VALUES -> b
    24:24:io.reactivex.internal.subscriptions.EmptySubscription[] values() -> values
    24:24:io.reactivex.internal.subscriptions.EmptySubscription valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    30:31:void request(long) -> a
    35:35:void cancel() -> c
    39:39:java.lang.String toString() -> toString
    53:55:void error(java.lang.Throwable,org.reactivestreams.Subscriber) -> a
    67:69:void complete(org.reactivestreams.Subscriber) -> a
    73:73:java.lang.Object poll() -> a
    77:77:boolean isEmpty() -> b
    82:82:void clear() -> h_
    85:85:int requestFusion(int) -> a
    89:89:boolean offer(java.lang.Object) -> b
    24:26:void <clinit>() -> <clinit>
io.reactivex.internal.subscriptions.ScalarSubscription -> io.a.d.i.d:
    java.lang.Object value -> a
    org.reactivestreams.Subscriber subscriber -> b
    42:45:void <init>(org.reactivestreams.Subscriber,java.lang.Object) -> <init>
    49:61:void request(long) -> a
    65:66:void cancel() -> c
    78:78:boolean offer(java.lang.Object) -> b
    89:93:java.lang.Object poll() -> a
    98:98:boolean isEmpty() -> b
    103:104:void clear() -> h_
    108:108:int requestFusion(int) -> a
io.reactivex.internal.subscriptions.SubscriptionHelper -> io.a.d.i.e:
    io.reactivex.internal.subscriptions.SubscriptionHelper CANCELLED -> a
    io.reactivex.internal.subscriptions.SubscriptionHelper[] $VALUES -> b
    28:28:io.reactivex.internal.subscriptions.SubscriptionHelper[] values() -> values
    28:28:io.reactivex.internal.subscriptions.SubscriptionHelper valueOf(java.lang.String) -> valueOf
    28:28:void <init>(java.lang.String,int) -> <init>
    39:39:void request(long) -> a
    44:44:void cancel() -> c
    54:63:boolean validate(org.reactivestreams.Subscription,org.reactivestreams.Subscription) -> a
    71:72:void reportSubscriptionSet() -> a
    80:84:boolean validate(long) -> b
    140:148:boolean setOnce(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription) -> a
    184:194:boolean cancel(java.util.concurrent.atomic.AtomicReference) -> a
    207:214:boolean deferredSetOnce(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicLong,org.reactivestreams.Subscription) -> a
    225:241:void deferredRequest(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicLong,long) -> a
    28:33:void <clinit>() -> <clinit>
io.reactivex.internal.util.AtomicThrowable -> io.a.d.j.a:
    24:24:void <init>() -> <init>
    35:35:boolean addThrowable(java.lang.Throwable) -> a
    44:44:java.lang.Throwable terminate() -> a
io.reactivex.internal.util.BackpressureHelper -> io.a.d.j.b:
    35:39:long addCap(long,long) -> a
    67:75:long add(java.util.concurrent.atomic.AtomicLong,long) -> a
io.reactivex.internal.util.BlockingHelper -> io.a.d.j.c:
    57:62:void verifyNonBlocking() -> a
io.reactivex.internal.util.ExceptionHelper -> io.a.d.j.d:
    java.lang.Throwable TERMINATED -> a
    39:45:java.lang.RuntimeException wrapOrThrow(java.lang.Throwable) -> a
    56:72:boolean addThrowable(java.util.concurrent.atomic.AtomicReference,java.lang.Throwable) -> a
    76:80:java.lang.Throwable terminate(java.util.concurrent.atomic.AtomicReference) -> a
    52:52:void <clinit>() -> <clinit>
io.reactivex.internal.util.ExceptionHelper$Termination -> io.a.d.j.e:
    129:130:void <init>() -> <init>
    134:134:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
io.reactivex.internal.util.HalfSerializer -> io.a.d.j.f:
    44:55:void onNext(org.reactivestreams.Subscriber,java.lang.Object,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable) -> a
    68:75:void onError(org.reactivestreams.Subscriber,java.lang.Throwable,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable) -> a
    86:94:void onComplete(org.reactivestreams.Subscriber,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable) -> a
io.reactivex.internal.util.Pow2 -> io.a.d.j.g:
    34:34:int roundToPowerOfTwo(int) -> a
io.reactivex.plugins.RxJavaPlugins -> io.a.e.a:
    io.reactivex.functions.Consumer errorHandler -> a
    io.reactivex.functions.Function onFlowableAssembly -> b
    io.reactivex.functions.BiFunction onFlowableSubscribe -> c
    io.reactivex.functions.BiFunction onSingleSubscribe -> d
    io.reactivex.functions.BooleanSupplier onBeforeBlocking -> e
    boolean failNonBlockingScheduler -> f
    167:167:boolean isFailOnNonBlockingScheduler() -> a
    360:383:void onError(java.lang.Throwable) -> a
    395:422:boolean isBug(java.lang.Throwable) -> b
    426:429:void uncaught(java.lang.Throwable) -> c
    921:925:org.reactivestreams.Subscriber onSubscribe(io.reactivex.Flowable,org.reactivestreams.Subscriber) -> a
    955:959:io.reactivex.SingleObserver onSubscribe(io.reactivex.Single,io.reactivex.SingleObserver) -> a
    1019:1023:io.reactivex.Flowable onAssembly(io.reactivex.Flowable) -> a
    1162:1170:boolean onBeforeBlocking() -> b
    1270:1272:java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object) -> a
    1290:1292:java.lang.Object apply(io.reactivex.functions.BiFunction,java.lang.Object,java.lang.Object) -> a
io.reactivex.processors.FlowableProcessor -> io.a.f.a:
    29:29:void <init>() -> <init>
io.reactivex.processors.UnicastProcessor -> io.a.f.b:
    io.reactivex.internal.queue.SpscLinkedArrayQueue queue -> b
    java.util.concurrent.atomic.AtomicReference onTerminate -> c
    boolean delayError -> d
    boolean done -> e
    java.lang.Throwable error -> f
    java.util.concurrent.atomic.AtomicReference actual -> g
    boolean cancelled -> h
    java.util.concurrent.atomic.AtomicBoolean once -> i
    io.reactivex.internal.subscriptions.BasicIntQueueSubscription wip -> j
    java.util.concurrent.atomic.AtomicLong requested -> k
    boolean enableOperatorFusion -> l
    78:78:io.reactivex.processors.UnicastProcessor create() -> c
    150:151:void <init>(int) -> <init>
    172:180:void <init>(int,java.lang.Runnable,boolean) -> <init>
    183:187:void doTerminate() -> d
    190:231:void drainRegular(org.reactivestreams.Subscriber) -> c
    234:273:void drainFused(org.reactivestreams.Subscriber) -> d
    276:300:void drain() -> e
    303:328:boolean checkTerminated(boolean,boolean,boolean,org.reactivestreams.Subscriber,io.reactivex.internal.queue.SpscLinkedArrayQueue) -> a
    333:338:void onSubscribe(org.reactivestreams.Subscription) -> a
    342:350:void onNext(java.lang.Object) -> a
    354:367:void onError(java.lang.Throwable) -> a
    371:380:void onComplete() -> i_
    384:396:void subscribeActual(org.reactivestreams.Subscriber) -> b
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription -> io.a.f.c:
    io.reactivex.processors.UnicastProcessor this$0 -> a
    398:398:void <init>(io.reactivex.processors.UnicastProcessor) -> <init>
    406:406:java.lang.Object poll() -> a
    411:411:boolean isEmpty() -> b
    416:417:void clear() -> h_
    421:425:int requestFusion(int) -> a
    430:434:void request(long) -> a
    438:451:void cancel() -> c
io.reactivex.subjects.SingleSubject -> io.a.g.a:
    java.util.concurrent.atomic.AtomicReference observers -> a
    io.reactivex.subjects.SingleSubject$SingleDisposable[] EMPTY -> b
    io.reactivex.subjects.SingleSubject$SingleDisposable[] TERMINATED -> c
    java.util.concurrent.atomic.AtomicBoolean once -> d
    java.lang.Object value -> e
    java.lang.Throwable error -> f
    118:118:io.reactivex.subjects.SingleSubject create() -> c
    122:125:void <init>() -> <init>
    129:132:void onSubscribe(io.reactivex.disposables.Disposable) -> a
    137:144:void onSuccess(java.lang.Object) -> a
    149:158:void onError(java.lang.Throwable) -> a
    162:176:void subscribeActual(io.reactivex.SingleObserver) -> b
    180:193:boolean add(io.reactivex.subjects.SingleSubject$SingleDisposable) -> a
    199:229:void remove(io.reactivex.subjects.SingleSubject$SingleDisposable) -> b
    101:104:void <clinit>() -> <clinit>
io.reactivex.subjects.SingleSubject$SingleDisposable -> io.a.g.b:
    io.reactivex.SingleObserver actual -> a
    294:297:void <init>(io.reactivex.SingleObserver,io.reactivex.subjects.SingleSubject) -> <init>
    301:305:void dispose() -> a
    309:309:boolean isDisposed() -> b
io.vertx.core.AbstractVerticle -> io.vertx.core.a:
    io.vertx.core.Vertx vertx -> b
    io.vertx.core.Context context -> c
    36:36:void <init>() -> <init>
    66:68:void init(io.vertx.core.Vertx,io.vertx.core.Context) -> a
    106:108:void start(io.vertx.core.Future) -> a
    120:122:void stop(io.vertx.core.Future) -> b
    130:130:void start() -> a
    138:138:void stop() -> b
io.vertx.core.AsyncResult -> io.vertx.core.b:
    java.lang.Object result() -> a
    java.lang.Throwable cause() -> b
    boolean succeeded() -> c
    boolean failed() -> d
    70:73:io.vertx.core.AsyncResult map(java.util.function.Function) -> a
    111:111:io.vertx.core.AsyncResult map(java.lang.Object) -> a
    111:111:java.lang.Object lambda$map$0(java.lang.Object,java.lang.Object) -> a
io.vertx.core.AsyncResult$1 -> io.vertx.core.c:
    java.util.function.Function val$mapper -> a
    io.vertx.core.AsyncResult this$0 -> b
    73:73:void <init>(io.vertx.core.AsyncResult,java.util.function.Function) -> <init>
    76:79:java.lang.Object result() -> a
    85:85:java.lang.Throwable cause() -> b
    90:90:boolean succeeded() -> c
    95:95:boolean failed() -> d
io.vertx.core.Closeable -> io.vertx.core.d:
    void close(io.vertx.core.Handler) -> close
io.vertx.core.CompositeFuture -> io.vertx.core.e:
    io.vertx.core.CompositeFuture setHandler(io.vertx.core.Handler) -> a
    28:28:io.vertx.core.Future setHandler(io.vertx.core.Handler) -> b
io.vertx.core.Context -> io.vertx.core.f:
    69:69:boolean isOnWorkerThread() -> a
    void runOnContext(io.vertx.core.Handler) -> a
    void addCloseHook(io.vertx.core.Closeable) -> a
    void removeCloseHook(io.vertx.core.Closeable) -> b
io.vertx.core.DeploymentOptions -> io.vertx.core.g:
    java.lang.String DEFAULT_ISOLATION_GROUP -> a
    io.vertx.core.json.JsonObject config -> b
    boolean worker -> c
    boolean multiThreaded -> d
    java.lang.String isolationGroup -> e
    java.lang.String workerPoolName -> f
    int workerPoolSize -> g
    long maxWorkerExecuteTime -> h
    boolean ha -> i
    java.util.List extraClasspath -> j
    int instances -> k
    java.util.List isolatedClasses -> l
    52:62:void <init>() -> <init>
    121:121:io.vertx.core.json.JsonObject getConfig() -> a
    141:141:boolean isWorker() -> b
    163:163:boolean isMultiThreaded() -> c
    183:183:java.lang.String getIsolationGroup() -> d
    203:203:boolean isHa() -> e
    225:225:java.util.List getExtraClasspath() -> f
    246:246:int getInstances() -> g
    267:267:java.util.List getIsolatedClasses() -> h
    285:285:java.lang.String getWorkerPoolName() -> i
    310:310:int getWorkerPoolSize() -> j
    338:338:long getMaxWorkerExecuteTime() -> k
    361:363:io.vertx.core.json.JsonObject toJson() -> l
    368:382:boolean equals(java.lang.Object) -> equals
    388:399:int hashCode() -> hashCode
    33:33:void <clinit>() -> <clinit>
io.vertx.core.DeploymentOptionsConverter -> io.vertx.core.h:
    76:101:void toJson(io.vertx.core.DeploymentOptions,io.vertx.core.json.JsonObject) -> a
    88:88:void lambda$toJson$3(io.vertx.core.json.JsonArray,java.lang.String) -> a
    81:81:void lambda$toJson$2(io.vertx.core.json.JsonArray,java.lang.String) -> b
io.vertx.core.Future -> io.vertx.core.i:
    io.vertx.core.spi.FutureFactory factory -> a
    51:51:io.vertx.core.Future future() -> e
    61:61:io.vertx.core.Future succeededFuture() -> f
    72:72:io.vertx.core.Future succeededFuture(java.lang.Object) -> b
    83:83:io.vertx.core.Future failedFuture(java.lang.Throwable) -> a
    94:94:io.vertx.core.Future failedFuture(java.lang.String) -> a
    boolean isComplete() -> g
    io.vertx.core.Future setHandler(io.vertx.core.Handler) -> b
    void complete(java.lang.Object) -> c
    void complete() -> h
    void fail(java.lang.Throwable) -> b
    void fail(java.lang.String) -> b
    boolean tryComplete(java.lang.Object) -> d
    boolean tryFail(java.lang.Throwable) -> c
    boolean succeeded() -> c
    293:311:io.vertx.core.Future map(java.util.function.Function) -> b
    325:333:io.vertx.core.Future map(java.lang.Object) -> e
    void handle(io.vertx.core.AsyncResult) -> a
    28:28:io.vertx.core.AsyncResult map(java.lang.Object) -> a
    28:28:io.vertx.core.AsyncResult map(java.util.function.Function) -> a
    28:28:void handle(java.lang.Object) -> handle
    327:332:void lambda$map$3(io.vertx.core.Future,java.lang.Object,io.vertx.core.AsyncResult) -> a
    298:310:void lambda$map$2(java.util.function.Function,io.vertx.core.Future,io.vertx.core.AsyncResult) -> a
    471:471:void <clinit>() -> <clinit>
io.vertx.core.Handler -> io.vertx.core.j:
    void handle(java.lang.Object) -> handle
io.vertx.core.MultiMap -> io.vertx.core.k:
    43:43:io.vertx.core.MultiMap caseInsensitiveMultiMap() -> c
    java.lang.String get(java.lang.CharSequence) -> get
    java.lang.String get(java.lang.String) -> get
    java.util.List getAll(java.lang.String) -> getAll
    java.util.List getAll(java.lang.CharSequence) -> getAll
    java.util.List entries() -> entries
    boolean contains(java.lang.CharSequence) -> contains
    boolean isEmpty() -> isEmpty
    java.util.Set names() -> names
    io.vertx.core.MultiMap add(java.lang.String,java.lang.String) -> add
    io.vertx.core.MultiMap add(java.lang.String,java.lang.Iterable) -> add
    io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap) -> addAll
    io.vertx.core.MultiMap set(java.lang.String,java.lang.String) -> set
    io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.CharSequence) -> set
    io.vertx.core.MultiMap set(java.lang.String,java.lang.Iterable) -> set
    io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.Iterable) -> set
    io.vertx.core.MultiMap setAll(io.vertx.core.MultiMap) -> setAll
    int size() -> size
io.vertx.core.ServiceHelper -> io.vertx.core.l:
    21:21:void <init>() -> <init>
    24:28:java.lang.Object loadFactory(java.lang.Class) -> a
    32:36:java.lang.Object loadFactoryOrNull(java.lang.Class) -> b
    42:42:java.util.Collection loadFactories(java.lang.Class) -> c
    46:67:java.util.Collection loadFactories(java.lang.Class,java.lang.ClassLoader) -> a
io.vertx.core.TimeoutStream -> io.vertx.core.m:
    io.vertx.core.TimeoutStream exceptionHandler(io.vertx.core.Handler) -> a
    io.vertx.core.TimeoutStream handler(io.vertx.core.Handler) -> b
    io.vertx.core.TimeoutStream pause() -> a
    io.vertx.core.TimeoutStream resume() -> b
    io.vertx.core.TimeoutStream endHandler(io.vertx.core.Handler) -> c
    27:27:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    27:27:io.vertx.core.streams.ReadStream resume() -> resume
    27:27:io.vertx.core.streams.ReadStream pause() -> pause
    27:27:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    27:27:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.Verticle -> io.vertx.core.n:
    void init(io.vertx.core.Vertx,io.vertx.core.Context) -> a
    void start(io.vertx.core.Future) -> a
    void stop(io.vertx.core.Future) -> b
io.vertx.core.Vertx -> io.vertx.core.o:
    io.vertx.core.spi.VertxFactory factory -> a
    88:88:io.vertx.core.Vertx vertx(io.vertx.core.VertxOptions) -> a
    109:109:io.vertx.core.Context currentContext() -> a
    io.vertx.core.Context getOrCreateContext() -> b
    io.vertx.core.net.NetServer createNetServer(io.vertx.core.net.NetServerOptions) -> a
    io.vertx.core.http.HttpServer createHttpServer() -> c
    io.vertx.core.file.FileSystem fileSystem() -> d
    io.vertx.core.eventbus.EventBus eventBus() -> e
    long setTimer(long,io.vertx.core.Handler) -> a
    long setPeriodic(long,io.vertx.core.Handler) -> b
    boolean cancelTimer(long) -> a
    void runOnContext(io.vertx.core.Handler) -> a
    void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler) -> a
    void executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler) -> a
    io.vertx.core.Handler exceptionHandler() -> f
    584:584:void <clinit>() -> <clinit>
io.vertx.core.VertxException -> io.vertx.core.p:
    31:32:void <init>(java.lang.String) -> <init>
    41:42:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    50:51:void <init>(java.lang.Throwable) -> <init>
io.vertx.core.VertxOptions -> io.vertx.core.q:
    int DEFAULT_EVENT_LOOP_POOL_SIZE -> a
    java.lang.String DEFAULT_CLUSTER_PUBLIC_HOST -> b
    boolean DEFAULT_FILE_CACHING_ENABLED -> c
    int eventLoopPoolSize -> d
    int workerPoolSize -> e
    int internalBlockingPoolSize -> f
    long blockedThreadCheckInterval -> g
    long maxEventLoopExecuteTime -> h
    long maxWorkerExecuteTime -> i
    io.vertx.core.spi.cluster.ClusterManager clusterManager -> j
    boolean haEnabled -> k
    int quorumSize -> l
    java.lang.String haGroup -> m
    io.vertx.core.metrics.MetricsOptions metricsOptions -> n
    long warningExceptionTime -> o
    io.vertx.core.eventbus.EventBusOptions eventBusOptions -> p
    io.vertx.core.dns.AddressResolverOptions addressResolverOptions -> q
    boolean fileResolverCachingEnabled -> r
    boolean preferNativeTransport -> s
    131:152:void <init>() -> <init>
    193:193:int getEventLoopPoolSize() -> a
    218:218:int getWorkerPoolSize() -> b
    241:241:boolean isClustered() -> c
    251:252:io.vertx.core.VertxOptions setClustered(boolean) -> a
    391:391:long getBlockedThreadCheckInterval() -> d
    419:419:long getMaxEventLoopExecuteTime() -> e
    429:433:io.vertx.core.VertxOptions setMaxEventLoopExecuteTime(long) -> a
    447:447:long getMaxWorkerExecuteTime() -> f
    474:474:io.vertx.core.spi.cluster.ClusterManager getClusterManager() -> g
    501:501:int getInternalBlockingPoolSize() -> h
    524:524:boolean isHAEnabled() -> i
    544:544:int getQuorumSize() -> j
    567:567:java.lang.String getHAGroup() -> k
    586:586:io.vertx.core.metrics.MetricsOptions getMetricsOptions() -> l
    606:606:long getWarningExceptionTime() -> m
    627:627:io.vertx.core.eventbus.EventBusOptions getEventBusOptions() -> n
    646:646:io.vertx.core.dns.AddressResolverOptions getAddressResolverOptions() -> o
    664:664:boolean isFileResolverCachingEnabled() -> p
    682:682:boolean getPreferNativeTransport() -> q
    698:721:boolean equals(java.lang.Object) -> equals
    726:742:int hashCode() -> hashCode
    747:763:java.lang.String toString() -> toString
    37:117:void <clinit>() -> <clinit>
io.vertx.core.buffer.Buffer -> io.vertx.core.buffer.a:
    io.vertx.core.spi.BufferFactory factory -> a
    47:47:io.vertx.core.buffer.Buffer buffer() -> a
    60:60:io.vertx.core.buffer.Buffer buffer(int) -> a
    70:70:io.vertx.core.buffer.Buffer buffer(java.lang.String) -> a
    81:81:io.vertx.core.buffer.Buffer buffer(java.lang.String,java.lang.String) -> a
    92:92:io.vertx.core.buffer.Buffer buffer(byte[]) -> a
    114:114:io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf) -> a
    java.lang.String toString() -> toString
    byte getByte(int) -> b
    short getUnsignedByte(int) -> c
    int getInt(int) -> d
    long getUnsignedInt(int) -> e
    long getLong(int) -> f
    double getDouble(int) -> g
    float getFloat(int) -> h
    short getShort(int) -> i
    int getUnsignedShort(int) -> j
    byte[] getBytes() -> b
    byte[] getBytes(int,int) -> a
    io.vertx.core.buffer.Buffer getBuffer(int,int) -> b
    io.vertx.core.buffer.Buffer appendBuffer(io.vertx.core.buffer.Buffer) -> a
    io.vertx.core.buffer.Buffer appendBytes(byte[]) -> b
    io.vertx.core.buffer.Buffer appendByte(byte) -> a
    io.vertx.core.buffer.Buffer appendInt(int) -> k
    io.vertx.core.buffer.Buffer appendUnsignedInt(long) -> a
    io.vertx.core.buffer.Buffer appendLong(long) -> b
    io.vertx.core.buffer.Buffer appendShort(short) -> a
    io.vertx.core.buffer.Buffer appendUnsignedShort(int) -> l
    io.vertx.core.buffer.Buffer appendFloat(float) -> a
    io.vertx.core.buffer.Buffer appendDouble(double) -> a
    io.vertx.core.buffer.Buffer setInt(int,int) -> c
    io.vertx.core.buffer.Buffer setBytes(int,java.nio.ByteBuffer) -> a
    int length() -> c
    io.vertx.core.buffer.Buffer copy() -> d
    io.vertx.core.buffer.Buffer slice(int,int) -> d
    io.netty.buffer.ByteBuf getByteBuf() -> e
    697:697:void <clinit>() -> <clinit>
io.vertx.core.buffer.impl.BufferFactoryImpl -> io.vertx.core.buffer.impl.BufferFactoryImpl:
    21:21:void <init>() -> <init>
    25:25:io.vertx.core.buffer.Buffer buffer(int) -> buffer
    30:30:io.vertx.core.buffer.Buffer buffer() -> buffer
    35:35:io.vertx.core.buffer.Buffer buffer(java.lang.String) -> buffer
    40:40:io.vertx.core.buffer.Buffer buffer(java.lang.String,java.lang.String) -> buffer
    45:45:io.vertx.core.buffer.Buffer buffer(byte[]) -> buffer
    50:50:io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf) -> buffer
io.vertx.core.buffer.impl.BufferImpl -> io.vertx.core.buffer.impl.a:
    io.netty.buffer.ByteBuf buffer -> b
    36:37:void <init>() -> <init>
    39:41:void <init>(int) -> <init>
    43:45:void <init>(byte[]) -> <init>
    48:49:void <init>(java.lang.String,java.lang.String) -> <init>
    52:53:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    56:57:void <init>(java.lang.String) -> <init>
    59:61:void <init>(io.netty.buffer.ByteBuf) -> <init>
    64:64:java.lang.String toString() -> toString
    87:87:byte getByte(int) -> b
    91:91:short getUnsignedByte(int) -> c
    95:95:int getInt(int) -> d
    103:103:long getUnsignedInt(int) -> e
    111:111:long getLong(int) -> f
    119:119:double getDouble(int) -> g
    123:123:float getFloat(int) -> h
    127:127:short getShort(int) -> i
    135:135:int getUnsignedShort(int) -> j
    159:161:byte[] getBytes() -> b
    165:168:byte[] getBytes(int,int) -> a
    194:194:io.vertx.core.buffer.Buffer getBuffer(int,int) -> b
    209:210:io.vertx.core.buffer.Buffer appendBuffer(io.vertx.core.buffer.Buffer) -> a
    221:222:io.vertx.core.buffer.Buffer appendBytes(byte[]) -> b
    231:232:io.vertx.core.buffer.Buffer appendByte(byte) -> a
    241:242:io.vertx.core.buffer.Buffer appendInt(int) -> k
    251:252:io.vertx.core.buffer.Buffer appendUnsignedInt(long) -> a
    271:272:io.vertx.core.buffer.Buffer appendLong(long) -> b
    281:282:io.vertx.core.buffer.Buffer appendShort(short) -> a
    291:292:io.vertx.core.buffer.Buffer appendUnsignedShort(int) -> l
    301:302:io.vertx.core.buffer.Buffer appendFloat(float) -> a
    306:307:io.vertx.core.buffer.Buffer appendDouble(double) -> a
    331:333:io.vertx.core.buffer.Buffer setInt(int,int) -> c
    428:430:io.vertx.core.buffer.impl.BufferImpl setBytes(int,java.nio.ByteBuffer) -> b
    454:454:int length() -> c
    458:458:io.vertx.core.buffer.Buffer copy() -> d
    466:466:io.vertx.core.buffer.Buffer slice(int,int) -> d
    472:472:io.netty.buffer.ByteBuf getByteBuf() -> e
    489:500:void ensureWritable(int,int) -> e
    504:507:boolean equals(java.lang.Object) -> equals
    512:512:int hashCode() -> hashCode
    31:31:io.vertx.core.buffer.Buffer setBytes(int,java.nio.ByteBuffer) -> a
io.vertx.core.datagram.DatagramSocket -> io.vertx.core.a.a:
    io.vertx.core.datagram.DatagramSocket pause() -> a
    io.vertx.core.datagram.DatagramSocket resume() -> b
    io.vertx.core.datagram.DatagramSocket endHandler(io.vertx.core.Handler) -> a
    io.vertx.core.datagram.DatagramSocket handler(io.vertx.core.Handler) -> b
    io.vertx.core.datagram.DatagramSocket exceptionHandler(io.vertx.core.Handler) -> c
    40:40:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    40:40:io.vertx.core.streams.ReadStream resume() -> resume
    40:40:io.vertx.core.streams.ReadStream pause() -> pause
    40:40:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    40:40:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.dns.AddressResolverOptions -> io.vertx.core.b.a:
    java.util.List DEFAULT_SERVERS -> a
    java.util.List DEFAULT_SEACH_DOMAINS -> b
    int DEFAULT_NDOTS -> c
    boolean DEFAULT_ROTATE_SERVERS -> d
    java.lang.String hostsPath -> e
    io.vertx.core.buffer.Buffer hostsValue -> f
    java.util.List servers -> g
    boolean optResourceEnabled -> h
    int cacheMinTimeToLive -> i
    int cacheMaxTimeToLive -> j
    int cacheNegativeTimeToLive -> k
    long queryTimeout -> l
    int maxQueries -> m
    boolean rdFlag -> n
    java.util.List searchDomains -> o
    int ndots -> p
    boolean rotateServers -> q
    101:113:void <init>() -> <init>
    140:140:java.lang.String getHostsPath() -> a
    160:160:io.vertx.core.buffer.Buffer getHostsValue() -> b
    182:182:java.util.List getServers() -> c
    217:217:boolean isOptResourceEnabled() -> d
    236:236:int getCacheMinTimeToLive() -> e
    258:258:int getCacheMaxTimeToLive() -> f
    280:280:int getCacheNegativeTimeToLive() -> g
    303:303:long getQueryTimeout() -> h
    324:324:int getMaxQueries() -> i
    345:345:boolean getRdFlag() -> j
    363:363:java.util.List getSearchDomains() -> k
    397:397:int getNdots() -> l
    419:419:boolean isRotateServers() -> m
    435:448:boolean equals(java.lang.Object) -> equals
    453:464:int hashCode() -> hashCode
    468:470:io.vertx.core.json.JsonObject toJson() -> n
    35:85:void <clinit>() -> <clinit>
io.vertx.core.dns.AddressResolverOptionsConverter -> io.vertx.core.b.b:
    82:107:void toJson(io.vertx.core.dns.AddressResolverOptions,io.vertx.core.json.JsonObject) -> a
    104:104:void lambda$toJson$3(io.vertx.core.json.JsonArray,java.lang.String) -> a
    99:99:void lambda$toJson$2(io.vertx.core.json.JsonArray,java.lang.String) -> b
io.vertx.core.eventbus.DeliveryOptions -> io.vertx.core.c.a:
    long timeout -> a
    java.lang.String codecName -> b
    io.vertx.core.MultiMap headers -> c
    40:48:void <init>() -> <init>
    108:108:long getSendTimeout() -> a
    132:132:java.lang.String getCodecName() -> b
    183:183:io.vertx.core.MultiMap getHeaders() -> c
io.vertx.core.eventbus.EventBus -> io.vertx.core.c.b:
    io.vertx.core.eventbus.MessageConsumer localConsumer(java.lang.String) -> a
    void start(io.vertx.core.Handler) -> a
io.vertx.core.eventbus.EventBusOptions -> io.vertx.core.c.c:
    boolean clustered -> b
    java.lang.String clusterPublicHost -> e
    int clusterPublicPort -> f
    long clusterPingInterval -> g
    long clusterPingReplyInterval -> h
    io.vertx.core.http.ClientAuth DEFAULT_CLIENT_AUTH -> a
    int port -> i
    java.lang.String host -> j
    int acceptBacklog -> k
    io.vertx.core.http.ClientAuth clientAuth -> l
    int reconnectAttempts -> m
    long reconnectInterval -> n
    int connectTimeout -> o
    boolean trustAll -> p
    30:109:void <init>() -> <init>
    154:156:io.vertx.core.json.JsonObject toJson() -> a
    164:164:io.vertx.core.http.ClientAuth getClientAuth() -> b
    186:186:int getAcceptBacklog() -> c
    207:207:java.lang.String getHost() -> d
    228:228:int getPort() -> e
    252:252:int getReconnectAttempts() -> f
    273:273:long getReconnectInterval() -> g
    290:291:io.vertx.core.eventbus.EventBusOptions addCrlPath(java.lang.String) -> a
    296:297:io.vertx.core.eventbus.EventBusOptions addCrlValue(io.vertx.core.buffer.Buffer) -> a
    302:303:io.vertx.core.eventbus.EventBusOptions addEnabledCipherSuite(java.lang.String) -> b
    308:309:io.vertx.core.eventbus.EventBusOptions setIdleTimeout(int) -> a
    321:322:io.vertx.core.eventbus.EventBusOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> a
    327:328:io.vertx.core.eventbus.EventBusOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> a
    333:334:io.vertx.core.eventbus.EventBusOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> a
    339:340:io.vertx.core.eventbus.EventBusOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> a
    345:346:io.vertx.core.eventbus.EventBusOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> b
    351:352:io.vertx.core.eventbus.EventBusOptions setSoLinger(int) -> b
    357:358:io.vertx.core.eventbus.EventBusOptions setSsl(boolean) -> a
    363:364:io.vertx.core.eventbus.EventBusOptions setTcpKeepAlive(boolean) -> b
    369:370:io.vertx.core.eventbus.EventBusOptions setTcpNoDelay(boolean) -> c
    381:382:io.vertx.core.eventbus.EventBusOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> b
    387:388:io.vertx.core.eventbus.EventBusOptions setUsePooledBuffers(boolean) -> d
    393:394:io.vertx.core.eventbus.EventBusOptions setReceiveBufferSize(int) -> c
    399:400:io.vertx.core.eventbus.EventBusOptions setReuseAddress(boolean) -> e
    405:406:io.vertx.core.eventbus.EventBusOptions setReusePort(boolean) -> f
    411:412:io.vertx.core.eventbus.EventBusOptions setSendBufferSize(int) -> d
    417:418:io.vertx.core.eventbus.EventBusOptions setTrafficClass(int) -> e
    427:427:boolean isClustered() -> h
    437:438:io.vertx.core.eventbus.EventBusOptions setClustered(boolean) -> g
    458:458:boolean isTrustAll() -> i
    466:466:int getConnectTimeout() -> j
    490:490:long getClusterPingInterval() -> k
    516:516:long getClusterPingReplyInterval() -> l
    541:541:java.lang.String getClusterPublicHost() -> m
    569:569:int getClusterPublicPort() -> n
    27:27:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> h
    27:27:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> f
    27:27:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> i
    27:27:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> g
    27:27:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> h
    27:27:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> b
    27:27:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> c
    27:27:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> d
    27:27:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> b
    27:27:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> c
    27:27:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> c
    27:27:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> b
    27:27:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> d
    27:27:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> d
    27:27:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> j
    27:27:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> i
    27:27:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> k
    27:27:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> j
    27:27:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> l
    27:27:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> m
    27:27:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> n
    27:27:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> k
    27:27:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> o
    27:27:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> l
    27:27:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> m
    56:56:void <clinit>() -> <clinit>
io.vertx.core.eventbus.EventBusOptionsConverter -> io.vertx.core.c.d:
    170:249:void toJson(io.vertx.core.eventbus.EventBusOptions,io.vertx.core.json.JsonObject) -> a
    199:199:void lambda$toJson$7(io.vertx.core.json.JsonArray,java.lang.String) -> a
    194:194:void lambda$toJson$6(io.vertx.core.json.JsonArray,java.lang.String) -> b
    189:189:void lambda$toJson$5(io.vertx.core.json.JsonArray,io.vertx.core.buffer.Buffer) -> a
    184:184:void lambda$toJson$4(io.vertx.core.json.JsonArray,java.lang.String) -> c
io.vertx.core.eventbus.Message -> io.vertx.core.c.e:
    java.lang.String address() -> a
    io.vertx.core.MultiMap headers() -> b
    java.lang.Object body() -> c
io.vertx.core.eventbus.MessageCodec -> io.vertx.core.c.f:
    void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
    java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    java.lang.Object transform(java.lang.Object) -> a
    java.lang.String name() -> a
    byte systemCodecID() -> b
io.vertx.core.eventbus.MessageConsumer -> io.vertx.core.c.g:
    io.vertx.core.eventbus.MessageConsumer exceptionHandler(io.vertx.core.Handler) -> a
    io.vertx.core.eventbus.MessageConsumer handler(io.vertx.core.Handler) -> b
    io.vertx.core.eventbus.MessageConsumer pause() -> a
    io.vertx.core.eventbus.MessageConsumer resume() -> b
    io.vertx.core.eventbus.MessageConsumer endHandler(io.vertx.core.Handler) -> c
    void unregister() -> c
    32:32:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    32:32:io.vertx.core.streams.ReadStream resume() -> resume
    32:32:io.vertx.core.streams.ReadStream pause() -> pause
    32:32:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    32:32:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.eventbus.ReplyException -> io.vertx.core.c.h:
    io.vertx.core.eventbus.ReplyFailure failureType -> a
    int failureCode -> b
    37:40:void <init>(io.vertx.core.eventbus.ReplyFailure,int,java.lang.String) -> <init>
    49:50:void <init>(io.vertx.core.eventbus.ReplyFailure,java.lang.String) -> <init>
    67:67:io.vertx.core.eventbus.ReplyFailure failureType() -> a
    76:76:int failureCode() -> b
    81:82:java.lang.String toString() -> toString
io.vertx.core.eventbus.ReplyFailure -> io.vertx.core.c.i:
    io.vertx.core.eventbus.ReplyFailure TIMEOUT -> a
    io.vertx.core.eventbus.ReplyFailure NO_HANDLERS -> b
    io.vertx.core.eventbus.ReplyFailure RECIPIENT_FAILURE -> c
    io.vertx.core.eventbus.ReplyFailure[] $VALUES -> d
    21:21:io.vertx.core.eventbus.ReplyFailure[] values() -> values
    21:21:io.vertx.core.eventbus.ReplyFailure valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    40:44:io.vertx.core.eventbus.ReplyFailure fromInt(int) -> a
    49:53:int toInt() -> a
    21:37:void <clinit>() -> <clinit>
io.vertx.core.eventbus.ReplyFailure$1 -> io.vertx.core.c.j:
    int[] $SwitchMap$io$vertx$core$eventbus$ReplyFailure -> a
    49:49:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.CodecManager -> io.vertx.core.c.a.a:
    io.vertx.core.eventbus.MessageCodec PING_MESSAGE_CODEC -> a
    io.vertx.core.eventbus.MessageCodec NULL_MESSAGE_CODEC -> b
    io.vertx.core.eventbus.MessageCodec STRING_MESSAGE_CODEC -> c
    io.vertx.core.eventbus.MessageCodec BUFFER_MESSAGE_CODEC -> d
    io.vertx.core.eventbus.MessageCodec JSON_OBJECT_MESSAGE_CODEC -> e
    io.vertx.core.eventbus.MessageCodec JSON_ARRAY_MESSAGE_CODEC -> f
    io.vertx.core.eventbus.MessageCodec BYTE_ARRAY_MESSAGE_CODEC -> g
    io.vertx.core.eventbus.MessageCodec INT_MESSAGE_CODEC -> h
    io.vertx.core.eventbus.MessageCodec LONG_MESSAGE_CODEC -> i
    io.vertx.core.eventbus.MessageCodec FLOAT_MESSAGE_CODEC -> j
    io.vertx.core.eventbus.MessageCodec DOUBLE_MESSAGE_CODEC -> k
    io.vertx.core.eventbus.MessageCodec BOOLEAN_MESSAGE_CODEC -> l
    io.vertx.core.eventbus.MessageCodec SHORT_MESSAGE_CODEC -> m
    io.vertx.core.eventbus.MessageCodec CHAR_MESSAGE_CODEC -> n
    io.vertx.core.eventbus.MessageCodec BYTE_MESSAGE_CODEC -> o
    io.vertx.core.eventbus.MessageCodec REPLY_EXCEPTION_MESSAGE_CODEC -> p
    io.vertx.core.eventbus.MessageCodec[] systemCodecs -> q
    java.util.concurrent.ConcurrentMap userCodecMap -> r
    java.util.concurrent.ConcurrentMap defaultCodecMap -> s
    49:56:void <init>() -> <init>
    60:104:io.vertx.core.eventbus.MessageCodec lookupCodec(java.lang.Object,java.lang.String) -> a
    108:108:io.vertx.core.eventbus.MessageCodec getCodec(java.lang.String) -> a
    150:150:io.vertx.core.eventbus.MessageCodec[] systemCodecs() -> a
    160:164:io.vertx.core.eventbus.MessageCodec[] codecs(io.vertx.core.eventbus.MessageCodec[]) -> a
    31:46:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.EventBusImpl -> io.vertx.core.c.a.b:
    io.vertx.core.logging.Logger log -> f
    java.util.List interceptors -> g
    java.util.concurrent.atomic.AtomicLong replySequence -> h
    io.vertx.core.impl.VertxInternal vertx -> a
    io.vertx.core.spi.metrics.EventBusMetrics metrics -> b
    java.util.concurrent.ConcurrentMap handlerMap -> c
    io.vertx.core.eventbus.impl.CodecManager codecManager -> d
    boolean started -> e
    54:66:void <init>(io.vertx.core.impl.VertxInternal) -> <init>
    81:86:void start(io.vertx.core.Handler) -> a
    90:90:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object) -> a
    105:106:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler) -> a
    163:165:io.vertx.core.eventbus.MessageConsumer localConsumer(java.lang.String) -> a
    202:210:void close(io.vertx.core.Handler) -> b
    219:219:io.vertx.core.spi.metrics.EventBusMetrics getMetrics() -> a
    223:227:io.vertx.core.eventbus.impl.MessageImpl createMessage(boolean,java.lang.String,io.vertx.core.MultiMap,java.lang.Object,java.lang.String) -> a
    232:235:void addRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,boolean,boolean) -> a
    240:241:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler) -> a
    245:275:boolean addLocalRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,boolean,boolean) -> b
    279:281:void removeRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,io.vertx.core.Handler) -> a
    285:286:void removeRegistration(io.vertx.core.eventbus.impl.HandlerHolder,java.lang.String,io.vertx.core.Handler) -> a
    289:311:io.vertx.core.eventbus.impl.HandlerHolder removeLocalRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration) -> a
    329:334:void sendOrPub(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl) -> a
    337:337:io.vertx.core.Handler convertHandler(io.vertx.core.Handler) -> c
    354:359:void callCompletionHandlerAsync(io.vertx.core.Handler) -> d
    362:372:void deliverMessageLocally(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl) -> b
    375:375:boolean isMessageLocal(io.vertx.core.eventbus.impl.MessageImpl) -> a
    379:405:boolean deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl) -> b
    410:413:void checkStarted() -> b
    416:416:java.lang.String generateReplyAddress() -> c
    422:432:io.vertx.core.eventbus.impl.HandlerRegistration createReplyHandlerRegistration(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler) -> a
    438:442:void sendOrPubInternal(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler) -> b
    512:517:void unregisterAll() -> e
    522:541:void deliverToHandler(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.impl.HandlerHolder) -> a
    582:584:void finalize() -> finalize
    582:582:void lambda$finalize$4(io.vertx.core.AsyncResult) -> a
    532:540:void lambda$deliverToHandler$3(io.vertx.core.eventbus.impl.HandlerHolder,io.vertx.core.eventbus.Message,java.lang.Void) -> a
    356:357:void lambda$callCompletionHandlerAsync$2(io.vertx.core.Handler,java.lang.Void) -> a
    339:350:void lambda$convertHandler$1(io.vertx.core.Handler,io.vertx.core.eventbus.Message) -> a
    208:208:void lambda$close$0(io.vertx.core.Handler,java.lang.Void) -> b
    50:50:java.util.List access$000(io.vertx.core.eventbus.impl.EventBusImpl) -> a
    50:50:io.vertx.core.logging.Logger access$100() -> d
    52:52:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry -> io.vertx.core.c.a.c:
    java.lang.String address -> a
    io.vertx.core.eventbus.impl.HandlerRegistration handler -> b
    io.vertx.core.eventbus.impl.EventBusImpl this$0 -> c
    547:550:void <init>(io.vertx.core.eventbus.impl.EventBusImpl,java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration) -> <init>
    554:560:boolean equals(java.lang.Object) -> equals
    565:567:int hashCode() -> hashCode
    572:573:void close(io.vertx.core.Handler) -> close
io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl -> io.vertx.core.c.a.d:
    io.vertx.core.eventbus.impl.MessageImpl message -> a
    io.vertx.core.eventbus.DeliveryOptions options -> b
    io.vertx.core.eventbus.impl.HandlerRegistration handlerRegistration -> c
    java.util.Iterator iter -> d
    io.vertx.core.eventbus.impl.EventBusImpl this$0 -> e
    451:456:void <init>(io.vertx.core.eventbus.impl.EventBusImpl,io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.eventbus.impl.HandlerRegistration) -> <init>
    465:475:void next() -> a
io.vertx.core.eventbus.impl.HandlerHolder -> io.vertx.core.c.a.e:
    io.vertx.core.spi.metrics.EventBusMetrics metrics -> a
    io.vertx.core.Context context -> b
    io.vertx.core.eventbus.impl.HandlerRegistration handler -> c
    boolean replyHandler -> d
    boolean localOnly -> e
    boolean removed -> f
    30:36:void <init>(io.vertx.core.spi.metrics.EventBusMetrics,io.vertx.core.eventbus.impl.HandlerRegistration,boolean,boolean,io.vertx.core.Context) -> <init>
    40:50:void setRemoved() -> a
    55:55:boolean isRemoved() -> b
    60:64:boolean equals(java.lang.Object) -> equals
    69:69:int hashCode() -> hashCode
    73:73:io.vertx.core.Context getContext() -> c
    77:77:io.vertx.core.eventbus.impl.HandlerRegistration getHandler() -> d
    81:81:boolean isReplyHandler() -> e
    85:85:boolean isLocalOnly() -> f
io.vertx.core.eventbus.impl.HandlerRegistration -> io.vertx.core.c.a.f:
    io.vertx.core.logging.Logger log -> a
    io.vertx.core.Vertx vertx -> b
    io.vertx.core.spi.metrics.EventBusMetrics metrics -> c
    io.vertx.core.eventbus.impl.EventBusImpl eventBus -> d
    java.lang.String address -> e
    java.lang.String repliedAddress -> f
    boolean localOnly -> g
    io.vertx.core.Handler asyncResultHandler -> h
    long timeoutID -> i
    boolean registered -> j
    io.vertx.core.Handler handler -> k
    io.vertx.core.Context handlerContext -> l
    io.vertx.core.AsyncResult result -> m
    io.vertx.core.Handler completionHandler -> n
    io.vertx.core.Handler endHandler -> o
    io.vertx.core.Handler discardHandler -> p
    int maxBufferedMessages -> q
    java.util.Queue pending -> r
    boolean paused -> s
    java.lang.Object metric -> t
    50:81:void <init>(io.vertx.core.Vertx,io.vertx.core.spi.metrics.EventBusMetrics,io.vertx.core.eventbus.impl.EventBusImpl,java.lang.String,java.lang.String,boolean,io.vertx.core.Handler,long) -> <init>
    116:117:void unregister() -> c
    121:123:void unregister(io.vertx.core.Handler) -> d
    126:128:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String) -> a
    131:150:void doUnregister(io.vertx.core.Handler) -> e
    153:156:void callCompletionHandlerAsync(io.vertx.core.Handler) -> f
    159:160:void setHandlerContext(io.vertx.core.Context) -> a
    163:175:void setResult(io.vertx.core.AsyncResult) -> a
    180:201:void handle(io.vertx.core.eventbus.Message) -> a
    206:234:void deliver(io.vertx.core.Handler,io.vertx.core.eventbus.Message) -> a
    238:251:void checkNextTick() -> f
    262:270:io.vertx.core.eventbus.MessageConsumer handler(io.vertx.core.Handler) -> b
    285:288:io.vertx.core.eventbus.MessageConsumer pause() -> a
    293:297:io.vertx.core.eventbus.MessageConsumer resume() -> b
    302:309:io.vertx.core.eventbus.MessageConsumer endHandler(io.vertx.core.Handler) -> c
    314:314:io.vertx.core.eventbus.MessageConsumer exceptionHandler(io.vertx.core.Handler) -> a
    318:318:io.vertx.core.Handler getHandler() -> d
    322:322:java.lang.Object getMetric() -> e
    37:37:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    37:37:io.vertx.core.streams.ReadStream resume() -> resume
    37:37:io.vertx.core.streams.ReadStream pause() -> pause
    37:37:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    37:37:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    37:37:void handle(java.lang.Object) -> handle
    305:305:void lambda$endHandler$7(io.vertx.core.Context,io.vertx.core.Handler,java.lang.Void) -> a
    305:305:void lambda$null$6(io.vertx.core.Handler,java.lang.Void) -> a
    242:249:void lambda$checkNextTick$5(java.lang.Void) -> a
    169:169:void lambda$setResult$4(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void) -> a
    154:154:void lambda$callCompletionHandlerAsync$3(io.vertx.core.Handler,java.lang.Void) -> b
    138:142:void lambda$doUnregister$2(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> a
    75:79:void lambda$new$0(io.vertx.core.spi.metrics.EventBusMetrics,java.lang.String,long,java.lang.String,java.lang.Long) -> a
    39:39:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.Handlers -> io.vertx.core.c.a.g:
    java.util.concurrent.atomic.AtomicInteger pos -> b
    java.util.List list -> a
    21:24:void <init>() -> <init>
    28:42:io.vertx.core.eventbus.impl.HandlerHolder choose() -> a
io.vertx.core.eventbus.impl.MessageImpl -> io.vertx.core.c.a.h:
    io.vertx.core.logging.Logger log -> i
    io.vertx.core.eventbus.MessageCodec messageCodec -> a
    io.vertx.core.eventbus.impl.EventBusImpl bus -> b
    java.lang.String address -> c
    java.lang.String replyAddress -> d
    io.vertx.core.MultiMap headers -> e
    java.lang.Object sentBody -> f
    java.lang.Object receivedBody -> g
    boolean send -> h
    41:42:void <init>() -> <init>
    46:54:void <init>(java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.Object,io.vertx.core.eventbus.MessageCodec,boolean,io.vertx.core.eventbus.impl.EventBusImpl) -> <init>
    56:73:void <init>(io.vertx.core.eventbus.impl.MessageImpl) -> <init>
    76:76:io.vertx.core.eventbus.impl.MessageImpl copyBeforeReceive() -> d
    81:81:java.lang.String address() -> a
    87:90:io.vertx.core.MultiMap headers() -> b
    95:98:java.lang.Object body() -> c
    138:138:boolean isSend() -> e
    142:143:void setReplyAddress(java.lang.String) -> a
    146:146:io.vertx.core.eventbus.MessageCodec codec() -> f
    150:151:void setBus(io.vertx.core.eventbus.impl.EventBusImpl) -> a
    160:160:boolean isLocal() -> g
    30:30:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo -> io.vertx.core.c.a.a.a:
    java.lang.String nodeId -> a
    io.vertx.core.net.impl.ServerID serverID -> b
    28:29:void <init>() -> <init>
    31:34:void <init>(java.lang.String,io.vertx.core.net.impl.ServerID) -> <init>
    38:44:boolean equals(java.lang.Object) -> equals
    49:51:int hashCode() -> hashCode
    56:56:java.lang.String toString() -> toString
io.vertx.core.eventbus.impl.clustered.ClusteredEventBus -> io.vertx.core.c.a.a.b:
    io.vertx.core.logging.Logger log -> f
    io.vertx.core.buffer.Buffer PONG -> g
    io.vertx.core.spi.cluster.ClusterManager clusterManager -> h
    io.vertx.core.impl.HAManager haManager -> i
    java.util.concurrent.ConcurrentMap connections -> j
    io.vertx.core.Context sendNoContext -> k
    io.vertx.core.eventbus.EventBusOptions options -> l
    io.vertx.core.spi.cluster.AsyncMultiMap subs -> m
    java.util.Set ownSubs -> n
    io.vertx.core.net.impl.ServerID serverID -> o
    io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo nodeInfo -> p
    io.vertx.core.net.NetServer server -> q
    76:96:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.VertxOptions,io.vertx.core.spi.cluster.ClusterManager,io.vertx.core.impl.HAManager) -> <init>
    99:103:io.vertx.core.net.NetServerOptions getServerOptions() -> i
    107:117:void setCertOptions(io.vertx.core.net.TCPSSLOptions,io.vertx.core.net.KeyCertOptions) -> a
    120:131:void setTrustOptions(io.vertx.core.net.TCPSSLOptions,io.vertx.core.net.TrustOptions) -> a
    135:168:void start(io.vertx.core.Handler) -> a
    172:193:void close(io.vertx.core.Handler) -> b
    197:201:io.vertx.core.eventbus.impl.MessageImpl createMessage(boolean,java.lang.String,io.vertx.core.MultiMap,java.lang.Object,java.lang.String) -> a
    208:215:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler) -> a
    220:226:void removeRegistration(io.vertx.core.eventbus.impl.HandlerHolder,java.lang.String,io.vertx.core.Handler) -> a
    235:259:void sendOrPub(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl) -> a
    264:264:java.lang.String generateReplyAddress() -> c
    269:270:boolean isMessageLocal(io.vertx.core.eventbus.impl.MessageImpl) -> a
    274:289:void setClusterViewChangedHandler(io.vertx.core.impl.HAManager) -> a
    293:298:int getClusterPublicPort(io.vertx.core.eventbus.EventBusOptions,int) -> a
    303:307:java.lang.String getClusterPublicHost(io.vertx.core.eventbus.EventBusOptions) -> a
    311:311:io.vertx.core.Handler getServerHandler() -> j
    343:378:void sendToSubs(io.vertx.core.spi.cluster.ChoosableIterable,io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl) -> a
    402:416:void sendRemote(io.vertx.core.net.impl.ServerID,io.vertx.core.eventbus.impl.MessageImpl) -> a
    419:435:void removeSub(java.lang.String,io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo,io.vertx.core.Handler) -> a
    438:438:java.util.concurrent.ConcurrentMap connections() -> e
    442:442:io.vertx.core.impl.VertxInternal vertx() -> f
    446:446:io.vertx.core.eventbus.EventBusOptions options() -> g
    420:434:void lambda$removeSub$11(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> a
    312:339:void lambda$getServerHandler$10(io.vertx.core.net.NetSocket) -> a
    275:288:void lambda$setClusterViewChangedHandler$9(java.util.Set) -> a
    284:287:void lambda$null$8(io.vertx.core.AsyncResult) -> a
    283:283:boolean lambda$null$51267305$1(java.util.Set,io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo) -> a
    276:281:void lambda$null$7(java.lang.String) -> b
    277:280:void lambda$null$6(io.vertx.core.AsyncResult) -> b
    254:255:void lambda$sendOrPub$5(java.lang.String,io.vertx.core.Handler,java.lang.Void) -> a
    237:250:void lambda$sendOrPub$4(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl,java.lang.String,io.vertx.core.AsyncResult) -> a
    173:191:void lambda$close$3(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> b
    175:185:void lambda$null$2(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> c
    136:167:void lambda$start$1(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> d
    142:159:void lambda$null$0(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> e
    63:63:io.vertx.core.eventbus.impl.CodecManager access$000(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus) -> a
    63:63:io.vertx.core.spi.metrics.EventBusMetrics access$100(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus) -> b
    63:63:io.vertx.core.spi.metrics.EventBusMetrics access$200(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus) -> c
    63:63:io.vertx.core.buffer.Buffer access$300() -> h
    63:63:boolean access$400(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus,io.vertx.core.eventbus.impl.MessageImpl) -> a
    65:70:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1 -> io.vertx.core.c.a.a.c:
    int size -> a
    io.vertx.core.parsetools.RecordParser val$parser -> b
    io.vertx.core.net.NetSocket val$socket -> c
    io.vertx.core.eventbus.impl.clustered.ClusteredEventBus this$0 -> d
    313:314:void <init>(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus,io.vertx.core.parsetools.RecordParser,io.vertx.core.net.NetSocket) -> <init>
    317:335:void handle(io.vertx.core.buffer.Buffer) -> a
    313:313:void handle(java.lang.Object) -> handle
io.vertx.core.eventbus.impl.clustered.ClusteredMessage -> io.vertx.core.c.a.a.d:
    io.vertx.core.logging.Logger log -> i
    io.vertx.core.net.impl.ServerID sender -> j
    io.vertx.core.buffer.Buffer wireBuffer -> k
    int bodyPos -> l
    int headersPos -> m
    boolean fromWire -> n
    44:45:void <init>() -> <init>
    49:51:void <init>(io.vertx.core.net.impl.ServerID,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.Object,io.vertx.core.eventbus.MessageCodec,boolean,io.vertx.core.eventbus.impl.EventBusImpl) -> <init>
    54:62:void <init>(io.vertx.core.eventbus.impl.clustered.ClusteredMessage) -> <init>
    65:65:io.vertx.core.eventbus.impl.clustered.ClusteredMessage copyBeforeReceive() -> h
    71:80:io.vertx.core.MultiMap headers() -> b
    86:90:java.lang.Object body() -> c
    99:121:io.vertx.core.buffer.Buffer encodeToWire() -> i
    125:178:void readFromWire(io.vertx.core.buffer.Buffer,io.vertx.core.eventbus.impl.CodecManager) -> a
    181:183:void decodeBody() -> k
    186:200:void encodeHeaders(io.vertx.core.buffer.Buffer) -> a
    203:224:void decodeHeaders() -> l
    227:228:void writeBody(io.vertx.core.buffer.Buffer) -> b
    231:234:void writeString(io.vertx.core.buffer.Buffer,java.lang.String) -> a
    241:241:boolean isFromWire() -> j
    245:245:boolean isLocal() -> g
    32:32:io.vertx.core.eventbus.impl.MessageImpl copyBeforeReceive() -> d
    34:34:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.clustered.ConnectionHolder -> io.vertx.core.c.a.a.e:
    io.vertx.core.logging.Logger log -> a
    io.vertx.core.eventbus.impl.clustered.ClusteredEventBus eventBus -> b
    io.vertx.core.net.NetClient client -> c
    io.vertx.core.net.impl.ServerID serverID -> d
    io.vertx.core.Vertx vertx -> e
    io.vertx.core.spi.metrics.EventBusMetrics metrics -> f
    java.util.Queue pending -> g
    io.vertx.core.net.NetSocket socket -> h
    boolean connected -> i
    long timeoutID -> j
    long pingTimeoutID -> k
    48:60:void <init>(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus,io.vertx.core.net.impl.ServerID,io.vertx.core.eventbus.EventBusOptions) -> <init>
    63:74:void connect() -> a
    78:93:void writeMessage(io.vertx.core.eventbus.impl.clustered.ClusteredMessage) -> a
    96:113:void close() -> b
    116:129:void schedulePing() -> c
    132:156:void connected(io.vertx.core.net.NetSocket) -> a
    138:140:void lambda$connected$5(io.vertx.core.buffer.Buffer) -> a
    135:135:void lambda$connected$4(java.lang.Void) -> a
    134:134:void lambda$connected$3(java.lang.Throwable) -> a
    119:128:void lambda$schedulePing$2(io.vertx.core.eventbus.EventBusOptions,java.lang.Long) -> a
    121:123:void lambda$null$1(java.lang.Long) -> a
    67:73:void lambda$connect$0(io.vertx.core.AsyncResult) -> a
    35:35:void <clinit>() -> <clinit>
io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec -> io.vertx.core.c.a.b.a:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Boolean) -> a
    29:29:java.lang.Boolean decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    35:35:java.lang.Boolean transform(java.lang.Boolean) -> a
    40:40:java.lang.String name() -> a
    45:45:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.BufferMessageCodec -> io.vertx.core.c.a.b.b:
    20:20:void <init>() -> <init>
    24:26:void encodeToWire(io.vertx.core.buffer.Buffer,io.vertx.core.buffer.Buffer) -> a
    30:32:io.vertx.core.buffer.Buffer decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    37:37:io.vertx.core.buffer.Buffer transform(io.vertx.core.buffer.Buffer) -> a
    42:42:java.lang.String name() -> a
    47:47:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec -> io.vertx.core.c.a.b.c:
    20:20:void <init>() -> <init>
    24:26:void encodeToWire(io.vertx.core.buffer.Buffer,byte[]) -> a
    30:32:byte[] decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    37:39:byte[] transform(byte[]) -> a
    44:44:java.lang.String name() -> a
    49:49:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.ByteMessageCodec -> io.vertx.core.c.a.b.d:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Byte) -> a
    29:29:java.lang.Byte decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    35:35:java.lang.Byte transform(java.lang.Byte) -> a
    40:40:java.lang.String name() -> a
    45:45:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.CharMessageCodec -> io.vertx.core.c.a.b.e:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Character) -> a
    29:29:java.lang.Character decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    35:35:java.lang.Character transform(java.lang.Character) -> a
    40:40:java.lang.String name() -> a
    45:45:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec -> io.vertx.core.c.a.b.f:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Double) -> a
    29:29:java.lang.Double decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    35:35:java.lang.Double transform(java.lang.Double) -> a
    40:40:java.lang.String name() -> a
    45:45:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.FloatMessageCodec -> io.vertx.core.c.a.b.g:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Float) -> a
    29:29:java.lang.Float decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    35:35:java.lang.Float transform(java.lang.Float) -> a
    40:40:java.lang.String name() -> a
    45:45:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.IntMessageCodec -> io.vertx.core.c.a.b.h:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Integer) -> a
    29:29:java.lang.Integer decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    35:35:java.lang.Integer transform(java.lang.Integer) -> a
    40:40:java.lang.String name() -> a
    45:45:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec -> io.vertx.core.c.a.b.i:
    21:21:void <init>() -> <init>
    25:28:void encodeToWire(io.vertx.core.buffer.Buffer,io.vertx.core.json.JsonArray) -> a
    32:34:io.vertx.core.json.JsonArray decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    39:39:io.vertx.core.json.JsonArray transform(io.vertx.core.json.JsonArray) -> a
    44:44:java.lang.String name() -> a
    49:49:byte systemCodecID() -> b
    21:21:java.lang.Object transform(java.lang.Object) -> a
    21:21:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    21:21:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec -> io.vertx.core.c.a.b.j:
    21:21:void <init>() -> <init>
    25:28:void encodeToWire(io.vertx.core.buffer.Buffer,io.vertx.core.json.JsonObject) -> a
    32:34:io.vertx.core.json.JsonObject decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    39:39:io.vertx.core.json.JsonObject transform(io.vertx.core.json.JsonObject) -> a
    44:44:java.lang.String name() -> a
    49:49:byte systemCodecID() -> b
    21:21:java.lang.Object transform(java.lang.Object) -> a
    21:21:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    21:21:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.LongMessageCodec -> io.vertx.core.c.a.b.k:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Long) -> a
    29:29:java.lang.Long decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    35:35:java.lang.Long transform(java.lang.Long) -> a
    40:40:java.lang.String name() -> a
    45:45:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.NullMessageCodec -> io.vertx.core.c.a.b.l:
    20:20:void <init>() -> <init>
    24:24:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.String) -> a
    28:28:java.lang.String decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    33:33:java.lang.String transform(java.lang.String) -> a
    38:38:java.lang.String name() -> a
    43:43:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.PingMessageCodec -> io.vertx.core.c.a.b.m:
    20:20:void <init>() -> <init>
    24:24:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.String) -> a
    28:28:java.lang.String decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    33:33:java.lang.String transform(java.lang.String) -> a
    38:38:java.lang.String name() -> a
    43:43:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec -> io.vertx.core.c.a.b.n:
    23:23:void <init>() -> <init>
    27:37:void encodeToWire(io.vertx.core.buffer.Buffer,io.vertx.core.eventbus.ReplyException) -> a
    41:57:io.vertx.core.eventbus.ReplyException decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    62:62:io.vertx.core.eventbus.ReplyException transform(io.vertx.core.eventbus.ReplyException) -> a
    67:67:java.lang.String name() -> a
    72:72:byte systemCodecID() -> b
    23:23:java.lang.Object transform(java.lang.Object) -> a
    23:23:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    23:23:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.ShortMessageCodec -> io.vertx.core.c.a.b.o:
    20:20:void <init>() -> <init>
    24:25:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Short) -> a
    29:29:java.lang.Short decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    35:35:java.lang.Short transform(java.lang.Short) -> a
    40:40:java.lang.String name() -> a
    45:45:byte systemCodecID() -> b
    20:20:java.lang.Object transform(java.lang.Object) -> a
    20:20:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    20:20:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.eventbus.impl.codecs.StringMessageCodec -> io.vertx.core.c.a.b.p:
    21:21:void <init>() -> <init>
    25:28:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.String) -> a
    32:35:java.lang.String decodeFromWire(int,io.vertx.core.buffer.Buffer) -> b
    41:41:java.lang.String transform(java.lang.String) -> a
    46:46:java.lang.String name() -> a
    51:51:byte systemCodecID() -> b
    21:21:java.lang.Object transform(java.lang.Object) -> a
    21:21:java.lang.Object decodeFromWire(int,io.vertx.core.buffer.Buffer) -> a
    21:21:void encodeToWire(io.vertx.core.buffer.Buffer,java.lang.Object) -> a
io.vertx.core.file.AsyncFile -> io.vertx.core.d.a:
    io.vertx.core.file.AsyncFile handler(io.vertx.core.Handler) -> a
    io.vertx.core.file.AsyncFile pause() -> a
    io.vertx.core.file.AsyncFile resume() -> b
    io.vertx.core.file.AsyncFile endHandler(io.vertx.core.Handler) -> b
    io.vertx.core.file.AsyncFile exceptionHandler(io.vertx.core.Handler) -> c
    void close(io.vertx.core.Handler) -> d
    32:32:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    32:32:io.vertx.core.streams.ReadStream resume() -> resume
    32:32:io.vertx.core.streams.ReadStream pause() -> pause
    32:32:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    32:32:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.file.CopyOptions -> io.vertx.core.d.b:
    boolean replaceExisting -> a
    boolean copyAttributes -> b
    boolean atomicMove -> c
    boolean nofollowLinks -> d
    45:54:void <init>() -> <init>
io.vertx.core.file.FileSystem -> io.vertx.core.d.c:
    io.vertx.core.file.FileSystem deleteRecursive(java.lang.String,boolean,io.vertx.core.Handler) -> a
    io.vertx.core.buffer.Buffer readFileBlocking(java.lang.String) -> a
    io.vertx.core.file.FileSystem open(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.Handler) -> a
io.vertx.core.file.FileSystemException -> io.vertx.core.d.d:
    24:25:void <init>(java.lang.String) -> <init>
    32:33:void <init>(java.lang.Throwable) -> <init>
io.vertx.core.file.OpenOptions -> io.vertx.core.d.e:
    java.lang.String DEFAULT_PERMS -> a
    java.lang.String perms -> b
    boolean read -> c
    boolean write -> d
    boolean create -> e
    boolean createNew -> f
    boolean dsync -> g
    boolean sync -> h
    boolean deleteOnClose -> i
    boolean truncateExisting -> j
    boolean sparse -> k
    boolean append -> l
    41:58:void <init>() -> <init>
    95:95:java.lang.String getPerms() -> a
    115:115:boolean isRead() -> b
    135:135:boolean isWrite() -> c
    155:155:boolean isCreate() -> d
    175:175:boolean isCreateNew() -> e
    195:195:boolean isDeleteOnClose() -> f
    215:215:boolean isTruncateExisting() -> g
    235:235:boolean isSparse() -> h
    254:254:boolean isSync() -> i
    273:273:boolean isDsync() -> j
    290:290:boolean isAppend() -> k
    25:25:void <clinit>() -> <clinit>
io.vertx.core.file.impl.AsyncFileImpl -> io.vertx.core.d.a.a:
    io.vertx.core.logging.Logger log -> a
    io.vertx.core.impl.VertxInternal vertx -> b
    java.nio.channels.AsynchronousFileChannel ch -> c
    io.vertx.core.impl.ContextImpl context -> d
    boolean closed -> e
    java.lang.Runnable closedDeferred -> f
    long writesOutstanding -> g
    io.vertx.core.Handler exceptionHandler -> h
    long writePos -> i
    int maxWrites -> j
    int lwm -> k
    int readBufferSize -> l
    boolean paused -> m
    io.vertx.core.Handler dataHandler -> n
    io.vertx.core.Handler endHandler -> o
    long readPos -> p
    boolean readInProgress -> q
    67:104:void <init>(io.vertx.core.impl.VertxInternal,java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.impl.ContextImpl) -> <init>
    113:114:void close(io.vertx.core.Handler) -> d
    123:131:io.vertx.core.file.AsyncFile read(io.vertx.core.buffer.Buffer,int,long,int,io.vertx.core.Handler) -> a
    216:218:io.vertx.core.file.AsyncFile exceptionHandler(io.vertx.core.Handler) -> c
    223:228:io.vertx.core.file.AsyncFile handler(io.vertx.core.Handler) -> a
    233:235:io.vertx.core.file.AsyncFile endHandler(io.vertx.core.Handler) -> b
    240:242:io.vertx.core.file.AsyncFile pause() -> a
    247:254:io.vertx.core.file.AsyncFile resume() -> b
    291:297:void handleException(java.lang.Throwable) -> a
    320:342:void doRead() -> c
    345:349:void handleData(io.vertx.core.buffer.Buffer) -> a
    352:357:void handleEnd() -> d
    417:448:void doRead(io.vertx.core.buffer.Buffer,int,java.nio.ByteBuffer,long,io.vertx.core.Handler) -> a
    451:452:void check() -> e
    455:458:void checkClosed() -> f
    461:465:void checkContext() -> g
    468:477:void doClose(io.vertx.core.Handler) -> e
    480:489:void closeInternal(io.vertx.core.Handler) -> f
    52:52:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    52:52:io.vertx.core.streams.ReadStream resume() -> resume
    52:52:io.vertx.core.streams.ReadStream pause() -> pause
    52:52:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    52:52:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    487:487:void lambda$closeInternal$5(io.vertx.core.Handler) -> g
    471:476:void lambda$doClose$4(io.vertx.core.Future) -> a
    324:340:void lambda$doRead$2(io.vertx.core.AsyncResult) -> a
    52:52:io.vertx.core.impl.ContextImpl access$100(io.vertx.core.file.impl.AsyncFileImpl) -> a
    52:52:void access$400(io.vertx.core.file.impl.AsyncFileImpl,io.vertx.core.buffer.Buffer,int,java.nio.ByteBuffer,long,io.vertx.core.Handler) -> a
    54:54:void <clinit>() -> <clinit>
io.vertx.core.file.impl.AsyncFileImpl$2 -> io.vertx.core.d.a.b:
    long pos -> a
    long val$position -> b
    java.nio.ByteBuffer val$buff -> c
    io.vertx.core.buffer.Buffer val$writeBuff -> d
    int val$offset -> e
    io.vertx.core.Handler val$handler -> f
    io.vertx.core.file.impl.AsyncFileImpl this$0 -> g
    417:419:void <init>(io.vertx.core.file.impl.AsyncFileImpl,long,java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler) -> <init>
    422:427:void done() -> a
    430:442:void completed(java.lang.Integer,java.lang.Object) -> a
    445:446:void failed(java.lang.Throwable,java.lang.Object) -> failed
    417:417:void completed(java.lang.Object,java.lang.Object) -> completed
    445:445:void lambda$failed$1(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void) -> a
    423:426:void lambda$done$0(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void) -> a
io.vertx.core.file.impl.FileSystemImpl -> io.vertx.core.d.a.c:
    io.vertx.core.file.CopyOptions DEFAULT_OPTIONS -> b
    io.vertx.core.impl.VertxInternal vertx -> a
    71:73:void <init>(io.vertx.core.impl.VertxInternal) -> <init>
    223:224:io.vertx.core.file.FileSystem deleteRecursive(java.lang.String,boolean,io.vertx.core.Handler) -> a
    296:296:io.vertx.core.buffer.Buffer readFileBlocking(java.lang.String) -> a
    310:311:io.vertx.core.file.FileSystem open(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.Handler) -> a
    614:615:io.vertx.core.file.impl.FileSystemImpl$BlockingAction deleteInternal(java.lang.String,boolean,io.vertx.core.Handler) -> b
    731:732:io.vertx.core.file.impl.FileSystemImpl$BlockingAction readFileInternal(java.lang.String,io.vertx.core.Handler) -> a
    763:765:io.vertx.core.file.impl.FileSystemImpl$BlockingAction openInternal(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.Handler) -> b
    774:774:io.vertx.core.file.AsyncFile doOpen(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.impl.ContextImpl) -> a
    67:67:void <clinit>() -> <clinit>
io.vertx.core.file.impl.FileSystemImpl$10 -> io.vertx.core.d.a.d:
    java.lang.String val$path -> a
    boolean val$recursive -> b
    io.vertx.core.file.impl.FileSystemImpl this$0 -> c
    615:615:void <init>(io.vertx.core.file.impl.FileSystemImpl,io.vertx.core.Handler,java.lang.String,boolean) -> <init>
    618:640:java.lang.Void perform() -> a
    615:615:java.lang.Object perform() -> b
io.vertx.core.file.impl.FileSystemImpl$10$1 -> io.vertx.core.d.a.e:
    io.vertx.core.file.impl.FileSystemImpl$10 this$1 -> a
    620:620:void <init>(io.vertx.core.file.impl.FileSystemImpl$10) -> <init>
    622:623:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> a
    626:630:java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException) -> a
    620:620:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    620:620:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
io.vertx.core.file.impl.FileSystemImpl$13 -> io.vertx.core.d.a.f:
    java.lang.String val$path -> a
    io.vertx.core.file.impl.FileSystemImpl this$0 -> b
    732:732:void <init>(io.vertx.core.file.impl.FileSystemImpl,io.vertx.core.Handler,java.lang.String) -> <init>
    735:740:io.vertx.core.buffer.Buffer perform() -> a
    732:732:java.lang.Object perform() -> b
io.vertx.core.file.impl.FileSystemImpl$15 -> io.vertx.core.d.a.g:
    java.lang.String val$p -> a
    io.vertx.core.file.OpenOptions val$options -> b
    io.vertx.core.file.impl.FileSystemImpl this$0 -> c
    765:765:void <init>(io.vertx.core.file.impl.FileSystemImpl,io.vertx.core.Handler,java.lang.String,io.vertx.core.file.OpenOptions) -> <init>
    767:768:io.vertx.core.file.AsyncFile perform() -> a
    765:765:java.lang.Object perform() -> b
io.vertx.core.file.impl.FileSystemImpl$BlockingAction -> io.vertx.core.d.a.h:
    io.vertx.core.Handler handler -> a
    io.vertx.core.impl.ContextImpl context -> d
    io.vertx.core.file.impl.FileSystemImpl this$0 -> e
    831:834:void <init>(io.vertx.core.file.impl.FileSystemImpl,io.vertx.core.Handler) -> <init>
    839:840:void run() -> c
io.vertx.core.file.impl.WindowsFileSystem -> io.vertx.core.d.a.i:
    io.vertx.core.logging.Logger log -> b
    33:34:void <init>(io.vertx.core.impl.VertxInternal) -> <init>
    37:40:void logInternal(java.lang.String) -> b
    70:71:io.vertx.core.file.AsyncFile doOpen(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.impl.ContextImpl) -> a
    30:30:void <clinit>() -> <clinit>
io.vertx.core.http.CaseInsensitiveHeaders -> io.vertx.core.http.a:
    io.vertx.core.http.CaseInsensitiveHeaders$MapEntry[] entries -> a
    io.vertx.core.http.CaseInsensitiveHeaders$MapEntry head -> b
    36:50:int hash(java.lang.String) -> c
    55:59:io.vertx.core.MultiMap set0(java.lang.Iterable) -> a
    64:64:io.vertx.core.MultiMap setAll(io.vertx.core.MultiMap) -> setAll
    74:74:int size() -> size
    78:98:boolean eq(java.lang.String,java.lang.String) -> a
    102:102:int index(int) -> a
    105:110:void <init>() -> <init>
    114:117:io.vertx.core.MultiMap add(java.lang.String,java.lang.String) -> add
    122:127:io.vertx.core.MultiMap add(java.lang.String,java.lang.Iterable) -> add
    132:135:io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap) -> addAll
    148:155:void add0(int,int,java.lang.String,java.lang.String) -> a
    159:163:io.vertx.core.MultiMap remove(java.lang.String) -> a
    167:200:void remove0(int,int,java.lang.String) -> a
    204:208:io.vertx.core.MultiMap set(java.lang.String,java.lang.String) -> set
    213:226:io.vertx.core.MultiMap set(java.lang.String,java.lang.Iterable) -> set
    231:235:io.vertx.core.MultiMap clear() -> a
    240:252:java.lang.String get(java.lang.String) -> get
    257:270:java.util.List getAll(java.lang.String) -> getAll
    275:280:void forEach(java.util.function.Consumer) -> forEach
    284:292:java.util.List entries() -> entries
    297:297:java.util.Iterator iterator() -> iterator
    302:302:boolean contains(java.lang.String) -> b
    307:307:boolean isEmpty() -> isEmpty
    313:320:java.util.Set names() -> names
    325:325:java.lang.String get(java.lang.CharSequence) -> get
    330:330:java.util.List getAll(java.lang.CharSequence) -> getAll
    335:335:boolean contains(java.lang.CharSequence) -> contains
    354:354:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.CharSequence) -> set
    359:364:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.Iterable) -> set
    369:369:io.vertx.core.MultiMap remove(java.lang.CharSequence) -> a
    373:377:java.lang.String toString() -> toString
io.vertx.core.http.CaseInsensitiveHeaders$MapEntry -> io.vertx.core.http.b:
    int hash -> a
    java.lang.String key -> b
    java.lang.String value -> c
    io.vertx.core.http.CaseInsensitiveHeaders$MapEntry next -> d
    io.vertx.core.http.CaseInsensitiveHeaders$MapEntry before -> e
    io.vertx.core.http.CaseInsensitiveHeaders$MapEntry after -> f
    387:391:void <init>(int,java.lang.String,java.lang.String) -> <init>
    394:396:void remove() -> a
    399:403:void addBefore(io.vertx.core.http.CaseInsensitiveHeaders$MapEntry) -> a
    407:407:java.lang.String getKey() -> b
    412:412:java.lang.String getValue() -> c
    417:420:java.lang.String setValue(java.lang.String) -> a
    425:425:java.lang.String toString() -> toString
    380:380:java.lang.Object setValue(java.lang.Object) -> setValue
    380:380:java.lang.Object getValue() -> getValue
    380:380:java.lang.Object getKey() -> getKey
io.vertx.core.http.ClientAuth -> io.vertx.core.http.c:
    io.vertx.core.http.ClientAuth NONE -> a
    io.vertx.core.http.ClientAuth REQUEST -> b
    io.vertx.core.http.ClientAuth REQUIRED -> c
    io.vertx.core.http.ClientAuth[] $VALUES -> d
    21:21:io.vertx.core.http.ClientAuth[] values() -> values
    21:21:io.vertx.core.http.ClientAuth valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    21:38:void <clinit>() -> <clinit>
io.vertx.core.http.ConnectionPoolTooBusyException -> io.vertx.core.http.d:
    34:35:void <init>(java.lang.String) -> <init>
io.vertx.core.http.GoAway -> io.vertx.core.http.e:
    long errorCode -> a
    int lastStreamId -> b
    io.vertx.core.buffer.Buffer debugData -> c
    30:31:void <init>() -> <init>
    51:52:io.vertx.core.http.GoAway setErrorCode(long) -> a
    70:71:io.vertx.core.http.GoAway setLastStreamId(int) -> a
    88:89:io.vertx.core.http.GoAway setDebugData(io.vertx.core.buffer.Buffer) -> a
io.vertx.core.http.Http2Settings -> io.vertx.core.http.f:
    java.util.Map DEFAULT_EXTRA_SETTINGS -> a
    long headerTableSize -> b
    boolean pushEnabled -> c
    long maxConcurrentStreams -> d
    int initialWindowSize -> e
    int maxFrameSize -> f
    long maxHeaderListSize -> g
    java.util.Map extraSettings -> h
    80:88:void <init>() -> <init>
    105:113:void <init>(io.vertx.core.http.Http2Settings) -> <init>
    119:119:long getHeaderTableSize() -> a
    129:134:io.vertx.core.http.Http2Settings setHeaderTableSize(long) -> a
    141:141:boolean isPushEnabled() -> b
    151:152:io.vertx.core.http.Http2Settings setPushEnabled(boolean) -> a
    159:159:long getMaxConcurrentStreams() -> c
    169:174:io.vertx.core.http.Http2Settings setMaxConcurrentStreams(long) -> b
    181:181:int getInitialWindowSize() -> d
    191:194:io.vertx.core.http.Http2Settings setInitialWindowSize(int) -> a
    201:201:int getMaxFrameSize() -> e
    211:216:io.vertx.core.http.Http2Settings setMaxFrameSize(int) -> b
    223:223:long getMaxHeaderListSize() -> f
    233:237:io.vertx.core.http.Http2Settings setMaxHeaderListSize(long) -> c
    245:245:java.util.Map getExtraSettings() -> g
    293:322:io.vertx.core.http.Http2Settings set(int,long) -> a
    327:338:boolean equals(java.lang.Object) -> equals
    343:349:int hashCode() -> hashCode
    354:354:java.lang.String toString() -> toString
    358:360:io.vertx.core.json.JsonObject toJson() -> h
    67:67:void <clinit>() -> <clinit>
io.vertx.core.http.Http2SettingsConverter -> io.vertx.core.http.g:
    51:57:void toJson(io.vertx.core.http.Http2Settings,io.vertx.core.json.JsonObject) -> a
io.vertx.core.http.HttpClient -> io.vertx.core.http.h:
io.vertx.core.http.HttpClientOptions -> io.vertx.core.http.i:
    io.vertx.core.http.HttpVersion DEFAULT_PROTOCOL_VERSION -> a
    java.util.List DEFAULT_ALPN_VERSIONS -> b
    boolean verifyHost -> e
    int maxPoolSize -> f
    boolean keepAlive -> g
    int pipeliningLimit -> h
    boolean pipelining -> i
    int http2MaxPoolSize -> j
    int http2MultiplexingLimit -> k
    int http2ConnectionWindowSize -> l
    boolean tryUseCompression -> m
    int maxWebsocketFrameSize -> n
    int maxWebsocketMessageSize -> o
    java.lang.String defaultHost -> p
    int defaultPort -> q
    io.vertx.core.http.HttpVersion protocolVersion -> r
    int maxChunkSize -> s
    int maxInitialLineLength -> t
    int maxHeaderSize -> u
    int maxWaitQueueSize -> v
    io.vertx.core.http.Http2Settings initialSettings -> w
    java.util.List alpnVersions -> x
    boolean http2ClearTextUpgrade -> y
    boolean sendUnmaskedFrames -> z
    int maxRedirects -> A
    boolean forceSni -> B
    int decoderInitialBufferSize -> C
    153:186:void <init>() -> <init>
    153:220:void <init>(io.vertx.core.http.HttpClientOptions) -> <init>
    239:241:io.vertx.core.json.JsonObject toJson() -> a
    245:270:void init() -> ak
    274:275:io.vertx.core.http.HttpClientOptions setSendBufferSize(int) -> a
    280:281:io.vertx.core.http.HttpClientOptions setReceiveBufferSize(int) -> b
    286:287:io.vertx.core.http.HttpClientOptions setReuseAddress(boolean) -> a
    292:293:io.vertx.core.http.HttpClientOptions setReusePort(boolean) -> b
    298:299:io.vertx.core.http.HttpClientOptions setTrafficClass(int) -> c
    304:305:io.vertx.core.http.HttpClientOptions setTcpNoDelay(boolean) -> c
    310:311:io.vertx.core.http.HttpClientOptions setTcpKeepAlive(boolean) -> d
    316:317:io.vertx.core.http.HttpClientOptions setSoLinger(int) -> d
    322:323:io.vertx.core.http.HttpClientOptions setUsePooledBuffers(boolean) -> e
    328:329:io.vertx.core.http.HttpClientOptions setIdleTimeout(int) -> e
    334:335:io.vertx.core.http.HttpClientOptions setSsl(boolean) -> f
    346:347:io.vertx.core.http.HttpClientOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> a
    352:352:io.vertx.core.http.HttpClientOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> a
    363:363:io.vertx.core.http.HttpClientOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> a
    368:369:io.vertx.core.http.HttpClientOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> b
    374:374:io.vertx.core.http.HttpClientOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> b
    379:379:io.vertx.core.http.HttpClientOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> a
    384:385:io.vertx.core.http.HttpClientOptions addEnabledCipherSuite(java.lang.String) -> a
    401:401:io.vertx.core.http.HttpClientOptions setTcpFastOpen(boolean) -> g
    406:406:io.vertx.core.http.HttpClientOptions setTcpCork(boolean) -> p
    411:411:io.vertx.core.http.HttpClientOptions setTcpQuickAck(boolean) -> q
    416:416:io.vertx.core.http.HttpClientOptions addCrlPath(java.lang.String) -> b
    421:421:io.vertx.core.http.HttpClientOptions addCrlValue(io.vertx.core.buffer.Buffer) -> a
    426:427:io.vertx.core.http.HttpClientOptions setConnectTimeout(int) -> n
    432:433:io.vertx.core.http.HttpClientOptions setTrustAll(boolean) -> r
    442:442:int getMaxPoolSize() -> b
    464:464:int getHttp2MultiplexingLimit() -> c
    492:492:int getHttp2MaxPoolSize() -> d
    513:513:int getHttp2ConnectionWindowSize() -> e
    537:537:boolean isKeepAlive() -> f
    557:557:boolean isPipelining() -> g
    575:575:int getPipeliningLimit() -> h
    598:598:boolean isVerifyHost() -> i
    618:618:boolean isTryUseCompression() -> j
    638:638:boolean isSendUnmaskedFrames() -> k
    661:661:int getMaxWebsocketFrameSize() -> l
    681:681:int getMaxWebsocketMessageSize() -> m
    701:701:java.lang.String getDefaultHost() -> n
    720:720:int getDefaultPort() -> o
    739:739:io.vertx.core.http.HttpVersion getProtocolVersion() -> p
    771:771:int getMaxChunkSize() -> q
    778:778:int getMaxInitialLineLength() -> r
    796:796:int getMaxHeaderSize() -> s
    826:826:int getMaxWaitQueueSize() -> t
    833:833:io.vertx.core.http.Http2Settings getInitialSettings() -> u
    849:849:io.vertx.core.http.HttpClientOptions setUseAlpn(boolean) -> s
    854:854:io.vertx.core.http.HttpClientOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> a
    859:859:io.vertx.core.http.HttpClientOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> a
    864:864:io.vertx.core.http.HttpClientOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> a
    872:872:java.util.List getAlpnVersions() -> v
    896:896:boolean isHttp2ClearTextUpgrade() -> w
    915:915:int getMaxRedirects() -> x
    933:933:boolean isForceSni() -> y
    949:949:io.vertx.core.http.HttpClientOptions setMetricsName(java.lang.String) -> e
    953:953:io.vertx.core.http.HttpClientOptions setProxyOptions(io.vertx.core.net.ProxyOptions) -> a
    958:958:io.vertx.core.http.HttpClientOptions setLocalAddress(java.lang.String) -> f
    963:963:io.vertx.core.http.HttpClientOptions setLogActivity(boolean) -> t
    969:969:int getDecoderInitialBufferSize() -> z
    984:1012:boolean equals(java.lang.Object) -> equals
    1017:1039:int hashCode() -> hashCode
    29:29:io.vertx.core.net.ClientOptionsBase setTcpQuickAck(boolean) -> u
    29:29:io.vertx.core.net.ClientOptionsBase setTcpCork(boolean) -> v
    29:29:io.vertx.core.net.ClientOptionsBase setTcpFastOpen(boolean) -> w
    29:29:io.vertx.core.net.ClientOptionsBase addCrlValue(io.vertx.core.buffer.Buffer) -> c
    29:29:io.vertx.core.net.ClientOptionsBase addCrlPath(java.lang.String) -> g
    29:29:io.vertx.core.net.ClientOptionsBase addEnabledCipherSuite(java.lang.String) -> h
    29:29:io.vertx.core.net.ClientOptionsBase setTrafficClass(int) -> o
    29:29:io.vertx.core.net.ClientOptionsBase setReusePort(boolean) -> x
    29:29:io.vertx.core.net.ClientOptionsBase setReuseAddress(boolean) -> y
    29:29:io.vertx.core.net.ClientOptionsBase setReceiveBufferSize(int) -> p
    29:29:io.vertx.core.net.ClientOptionsBase setSendBufferSize(int) -> q
    29:29:io.vertx.core.net.ClientOptionsBase setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> b
    29:29:io.vertx.core.net.ClientOptionsBase setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> b
    29:29:io.vertx.core.net.ClientOptionsBase setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> b
    29:29:io.vertx.core.net.ClientOptionsBase setUseAlpn(boolean) -> z
    29:29:io.vertx.core.net.ClientOptionsBase setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> c
    29:29:io.vertx.core.net.ClientOptionsBase setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> e
    29:29:io.vertx.core.net.ClientOptionsBase setTrustStoreOptions(io.vertx.core.net.JksOptions) -> e
    29:29:io.vertx.core.net.ClientOptionsBase setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> c
    29:29:io.vertx.core.net.ClientOptionsBase setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> f
    29:29:io.vertx.core.net.ClientOptionsBase setKeyStoreOptions(io.vertx.core.net.JksOptions) -> f
    29:29:io.vertx.core.net.ClientOptionsBase setSsl(boolean) -> A
    29:29:io.vertx.core.net.ClientOptionsBase setIdleTimeout(int) -> r
    29:29:io.vertx.core.net.ClientOptionsBase setUsePooledBuffers(boolean) -> B
    29:29:io.vertx.core.net.ClientOptionsBase setSoLinger(int) -> s
    29:29:io.vertx.core.net.ClientOptionsBase setTcpKeepAlive(boolean) -> C
    29:29:io.vertx.core.net.ClientOptionsBase setTcpNoDelay(boolean) -> D
    29:29:io.vertx.core.net.ClientOptionsBase setLogActivity(boolean) -> E
    29:29:io.vertx.core.net.ClientOptionsBase setLocalAddress(java.lang.String) -> i
    29:29:io.vertx.core.net.ClientOptionsBase setProxyOptions(io.vertx.core.net.ProxyOptions) -> b
    29:29:io.vertx.core.net.ClientOptionsBase setMetricsName(java.lang.String) -> j
    29:29:io.vertx.core.net.ClientOptionsBase setConnectTimeout(int) -> t
    29:29:io.vertx.core.net.ClientOptionsBase setTrustAll(boolean) -> F
    29:29:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> h
    29:29:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> f
    29:29:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> i
    29:29:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> g
    29:29:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> h
    29:29:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> G
    29:29:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> H
    29:29:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> I
    29:29:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> J
    29:29:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> c
    29:29:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> c
    29:29:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> c
    29:29:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> K
    29:29:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> b
    29:29:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> c
    29:29:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> d
    29:29:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> b
    29:29:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> c
    29:29:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> c
    29:29:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> b
    29:29:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> d
    29:29:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> d
    29:29:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> j
    29:29:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> i
    29:29:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> k
    29:29:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> j
    29:29:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> l
    29:29:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> m
    29:29:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> n
    29:29:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> L
    29:29:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> k
    29:29:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> o
    29:29:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> l
    29:29:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> m
    101:126:void <clinit>() -> <clinit>
io.vertx.core.http.HttpClientOptionsConverter -> io.vertx.core.http.j:
    113:148:void toJson(io.vertx.core.http.HttpClientOptions,io.vertx.core.json.JsonObject) -> a
    115:115:void lambda$toJson$1(io.vertx.core.json.JsonArray,io.vertx.core.http.HttpVersion) -> a
io.vertx.core.http.HttpClientRequest -> io.vertx.core.http.k:
    io.vertx.core.http.HttpClientRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.HttpClientRequest handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.HttpClientRequest pause() -> pause
    io.vertx.core.http.HttpClientRequest resume() -> resume
    io.vertx.core.http.HttpClientRequest endHandler(io.vertx.core.Handler) -> endHandler
    io.vertx.core.http.HttpMethod method() -> method
    java.lang.String absoluteURI() -> absoluteURI
    io.vertx.core.http.HttpClientRequest setHost(java.lang.String) -> setHost
    io.vertx.core.MultiMap headers() -> headers
    void end() -> end
    54:54:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    54:54:io.vertx.core.streams.ReadStream resume() -> resume
    54:54:io.vertx.core.streams.ReadStream pause() -> pause
    54:54:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    54:54:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.HttpClientResponse -> io.vertx.core.http.l:
    io.vertx.core.http.HttpClientResponse resume() -> resume
    io.vertx.core.http.HttpClientResponse exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.HttpClientResponse handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.HttpClientResponse pause() -> pause
    io.vertx.core.http.HttpClientResponse endHandler(io.vertx.core.Handler) -> endHandler
    io.vertx.core.http.HttpVersion version() -> version
    int statusCode() -> statusCode
    java.lang.String statusMessage() -> statusMessage
    io.vertx.core.MultiMap headers() -> headers
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.CharSequence) -> getHeader
    java.lang.String getTrailer(java.lang.String) -> getTrailer
    io.vertx.core.MultiMap trailers() -> trailers
    java.util.List cookies() -> cookies
    io.vertx.core.http.HttpClientResponse bodyHandler(io.vertx.core.Handler) -> bodyHandler
    io.vertx.core.http.HttpClientResponse customFrameHandler(io.vertx.core.Handler) -> customFrameHandler
    io.vertx.core.net.NetSocket netSocket() -> netSocket
    io.vertx.core.http.HttpClientRequest request() -> request
    38:38:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    38:38:io.vertx.core.streams.ReadStream resume() -> resume
    38:38:io.vertx.core.streams.ReadStream pause() -> pause
    38:38:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    38:38:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.HttpConnection -> io.vertx.core.http.m:
io.vertx.core.http.HttpFrame -> io.vertx.core.http.n:
io.vertx.core.http.HttpHeaders -> io.vertx.core.http.o:
    java.lang.CharSequence ACCEPT -> a
    java.lang.CharSequence ACCEPT_CHARSET -> b
    java.lang.CharSequence ACCEPT_ENCODING -> c
    java.lang.CharSequence ACCEPT_LANGUAGE -> d
    java.lang.CharSequence ACCEPT_RANGES -> e
    java.lang.CharSequence ACCEPT_PATCH -> f
    java.lang.CharSequence ACCESS_CONTROL_ALLOW_CREDENTIALS -> g
    java.lang.CharSequence ACCESS_CONTROL_ALLOW_HEADERS -> h
    java.lang.CharSequence ACCESS_CONTROL_ALLOW_METHODS -> i
    java.lang.CharSequence ACCESS_CONTROL_ALLOW_ORIGIN -> j
    java.lang.CharSequence ACCESS_CONTROL_EXPOSE_HEADERS -> k
    java.lang.CharSequence ACCESS_CONTROL_MAX_AGE -> l
    java.lang.CharSequence ACCESS_CONTROL_REQUEST_HEADERS -> m
    java.lang.CharSequence ACCESS_CONTROL_REQUEST_METHOD -> n
    java.lang.CharSequence AGE -> o
    java.lang.CharSequence ALLOW -> p
    java.lang.CharSequence AUTHORIZATION -> q
    java.lang.CharSequence CACHE_CONTROL -> r
    java.lang.CharSequence CONNECTION -> s
    java.lang.CharSequence CONTENT_BASE -> t
    java.lang.CharSequence CONTENT_ENCODING -> u
    java.lang.CharSequence CONTENT_LANGUAGE -> v
    java.lang.CharSequence CONTENT_LENGTH -> w
    java.lang.CharSequence CONTENT_LOCATION -> x
    java.lang.CharSequence CONTENT_TRANSFER_ENCODING -> y
    java.lang.CharSequence CONTENT_MD5 -> z
    java.lang.CharSequence CONTENT_RANGE -> A
    java.lang.CharSequence CONTENT_TYPE -> B
    java.lang.CharSequence COOKIE -> C
    java.lang.CharSequence DATE -> D
    java.lang.CharSequence ETAG -> E
    java.lang.CharSequence EXPECT -> F
    java.lang.CharSequence EXPIRES -> G
    java.lang.CharSequence FROM -> H
    java.lang.CharSequence HOST -> I
    java.lang.CharSequence IF_MATCH -> J
    java.lang.CharSequence IF_MODIFIED_SINCE -> K
    java.lang.CharSequence IF_NONE_MATCH -> L
    java.lang.CharSequence LAST_MODIFIED -> M
    java.lang.CharSequence LOCATION -> N
    java.lang.CharSequence ORIGIN -> O
    java.lang.CharSequence PROXY_AUTHENTICATE -> P
    java.lang.CharSequence PROXY_AUTHORIZATION -> Q
    java.lang.CharSequence REFERER -> R
    java.lang.CharSequence RETRY_AFTER -> S
    java.lang.CharSequence SERVER -> T
    java.lang.CharSequence TRANSFER_ENCODING -> U
    java.lang.CharSequence USER_AGENT -> V
    java.lang.CharSequence SET_COOKIE -> W
    java.lang.CharSequence APPLICATION_X_WWW_FORM_URLENCODED -> X
    java.lang.CharSequence CHUNKED -> Y
    java.lang.CharSequence CLOSE -> Z
    java.lang.CharSequence CONTINUE -> aa
    java.lang.CharSequence IDENTITY -> ab
    java.lang.CharSequence KEEP_ALIVE -> ac
    java.lang.CharSequence UPGRADE -> ad
    java.lang.CharSequence WEBSOCKET -> ae
    java.lang.CharSequence DEFLATE_GZIP -> af
    java.lang.CharSequence TEXT_HTML -> ag
    java.lang.CharSequence GET -> ah
    327:327:java.lang.CharSequence createOptimized(java.lang.String) -> a
    27:319:void <clinit>() -> <clinit>
io.vertx.core.http.HttpMethod -> io.vertx.core.http.p:
    io.vertx.core.http.HttpMethod OPTIONS -> a
    io.vertx.core.http.HttpMethod GET -> b
    io.vertx.core.http.HttpMethod HEAD -> c
    io.vertx.core.http.HttpMethod POST -> d
    io.vertx.core.http.HttpMethod PUT -> e
    io.vertx.core.http.HttpMethod DELETE -> f
    io.vertx.core.http.HttpMethod TRACE -> g
    io.vertx.core.http.HttpMethod CONNECT -> h
    io.vertx.core.http.HttpMethod PATCH -> i
    io.vertx.core.http.HttpMethod OTHER -> j
    io.vertx.core.http.HttpMethod[] $VALUES -> k
    21:21:io.vertx.core.http.HttpMethod[] values() -> values
    21:21:io.vertx.core.http.HttpMethod valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    21:23:void <clinit>() -> <clinit>
io.vertx.core.http.HttpServer -> io.vertx.core.http.q:
    io.vertx.core.streams.ReadStream requestStream() -> requestStream
    io.vertx.core.http.HttpServer listen(int) -> listen
io.vertx.core.http.HttpServerFileUpload -> io.vertx.core.http.r:
    io.vertx.core.http.HttpServerFileUpload exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.HttpServerFileUpload handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.HttpServerFileUpload endHandler(io.vertx.core.Handler) -> endHandler
    io.vertx.core.http.HttpServerFileUpload pause() -> pause
    io.vertx.core.http.HttpServerFileUpload resume() -> resume
    25:25:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    25:25:io.vertx.core.streams.ReadStream resume() -> resume
    25:25:io.vertx.core.streams.ReadStream pause() -> pause
    25:25:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    25:25:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.HttpServerOptions -> io.vertx.core.http.s:
    java.util.List DEFAULT_ALPN_VERSIONS -> a
    boolean compressionSupported -> e
    int compressionLevel -> f
    int maxWebsocketFrameSize -> g
    int maxWebsocketMessageSize -> h
    java.lang.String websocketSubProtocols -> i
    boolean handle100ContinueAutomatically -> j
    int maxChunkSize -> k
    int maxInitialLineLength -> l
    int maxHeaderSize -> m
    io.vertx.core.http.Http2Settings initialSettings -> n
    java.util.List alpnVersions -> o
    int http2ConnectionWindowSize -> p
    boolean decompressionSupported -> q
    boolean acceptUnmaskedFrames -> r
    int decoderInitialBufferSize -> s
    129:132:void <init>() -> <init>
    140:156:void <init>(io.vertx.core.http.HttpServerOptions) -> <init>
    176:178:io.vertx.core.json.JsonObject toJson() -> a
    182:196:void init() -> w
    200:201:io.vertx.core.http.HttpServerOptions setSendBufferSize(int) -> a
    206:207:io.vertx.core.http.HttpServerOptions setReceiveBufferSize(int) -> b
    212:213:io.vertx.core.http.HttpServerOptions setReuseAddress(boolean) -> a
    218:219:io.vertx.core.http.HttpServerOptions setReusePort(boolean) -> b
    224:225:io.vertx.core.http.HttpServerOptions setTrafficClass(int) -> c
    230:231:io.vertx.core.http.HttpServerOptions setTcpNoDelay(boolean) -> c
    236:237:io.vertx.core.http.HttpServerOptions setTcpKeepAlive(boolean) -> d
    242:243:io.vertx.core.http.HttpServerOptions setSoLinger(int) -> d
    248:249:io.vertx.core.http.HttpServerOptions setUsePooledBuffers(boolean) -> e
    254:255:io.vertx.core.http.HttpServerOptions setIdleTimeout(int) -> e
    260:261:io.vertx.core.http.HttpServerOptions setSsl(boolean) -> f
    266:267:io.vertx.core.http.HttpServerOptions setUseAlpn(boolean) -> g
    278:279:io.vertx.core.http.HttpServerOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> a
    284:284:io.vertx.core.http.HttpServerOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> a
    289:289:io.vertx.core.http.HttpServerOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> a
    300:301:io.vertx.core.http.HttpServerOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> b
    306:306:io.vertx.core.http.HttpServerOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> a
    311:311:io.vertx.core.http.HttpServerOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> b
    316:317:io.vertx.core.http.HttpServerOptions addEnabledCipherSuite(java.lang.String) -> a
    333:333:io.vertx.core.http.HttpServerOptions setTcpFastOpen(boolean) -> p
    338:338:io.vertx.core.http.HttpServerOptions setTcpCork(boolean) -> q
    343:343:io.vertx.core.http.HttpServerOptions setTcpQuickAck(boolean) -> r
    348:348:io.vertx.core.http.HttpServerOptions addCrlPath(java.lang.String) -> b
    353:353:io.vertx.core.http.HttpServerOptions addCrlValue(io.vertx.core.buffer.Buffer) -> a
    358:359:io.vertx.core.http.HttpServerOptions setAcceptBacklog(int) -> n
    363:364:io.vertx.core.http.HttpServerOptions setPort(int) -> o
    369:370:io.vertx.core.http.HttpServerOptions setHost(java.lang.String) -> e
    376:377:io.vertx.core.http.HttpServerOptions setClientAuthRequired(boolean) -> s
    382:383:io.vertx.core.http.HttpServerOptions setClientAuth(io.vertx.core.http.ClientAuth) -> a
    388:389:io.vertx.core.http.HttpServerOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> a
    394:394:io.vertx.core.http.HttpServerOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> a
    399:399:io.vertx.core.http.HttpServerOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> a
    406:406:boolean isCompressionSupported() -> b
    426:426:int getCompressionLevel() -> c
    462:462:boolean isAcceptUnmaskedFrames() -> d
    482:482:int getMaxWebsocketFrameSize() -> e
    500:500:int getMaxWebsocketMessageSize() -> f
    529:529:java.lang.String getWebsocketSubProtocols() -> g
    536:536:boolean isHandle100ContinueAutomatically() -> h
    564:564:int getMaxChunkSize() -> i
    572:572:int getMaxInitialLineLength() -> j
    590:590:int getMaxHeaderSize() -> k
    608:608:io.vertx.core.http.Http2Settings getInitialSettings() -> l
    626:626:java.util.List getAlpnVersions() -> m
    644:644:int getHttp2ConnectionWindowSize() -> n
    664:664:io.vertx.core.http.HttpServerOptions setLogActivity(boolean) -> t
    668:668:io.vertx.core.http.HttpServerOptions setSni(boolean) -> u
    675:675:boolean isDecompressionSupported() -> o
    692:692:int getDecoderInitialBufferSize() -> p
    707:727:boolean equals(java.lang.Object) -> equals
    733:748:int hashCode() -> hashCode
    30:30:io.vertx.core.net.NetServerOptions setSni(boolean) -> v
    30:30:io.vertx.core.net.NetServerOptions setLogActivity(boolean) -> w
    30:30:io.vertx.core.net.NetServerOptions setClientAuth(io.vertx.core.http.ClientAuth) -> b
    30:30:io.vertx.core.net.NetServerOptions setClientAuthRequired(boolean) -> x
    30:30:io.vertx.core.net.NetServerOptions setHost(java.lang.String) -> f
    30:30:io.vertx.core.net.NetServerOptions setPort(int) -> p
    30:30:io.vertx.core.net.NetServerOptions setAcceptBacklog(int) -> q
    30:30:io.vertx.core.net.NetServerOptions addCrlValue(io.vertx.core.buffer.Buffer) -> c
    30:30:io.vertx.core.net.NetServerOptions addCrlPath(java.lang.String) -> g
    30:30:io.vertx.core.net.NetServerOptions setTcpQuickAck(boolean) -> y
    30:30:io.vertx.core.net.NetServerOptions setTcpCork(boolean) -> z
    30:30:io.vertx.core.net.NetServerOptions setTcpFastOpen(boolean) -> A
    30:30:io.vertx.core.net.NetServerOptions addEnabledCipherSuite(java.lang.String) -> h
    30:30:io.vertx.core.net.NetServerOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> c
    30:30:io.vertx.core.net.NetServerOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> e
    30:30:io.vertx.core.net.NetServerOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> e
    30:30:io.vertx.core.net.NetServerOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> c
    30:30:io.vertx.core.net.NetServerOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> f
    30:30:io.vertx.core.net.NetServerOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> f
    30:30:io.vertx.core.net.NetServerOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> b
    30:30:io.vertx.core.net.NetServerOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> b
    30:30:io.vertx.core.net.NetServerOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> b
    30:30:io.vertx.core.net.NetServerOptions setUseAlpn(boolean) -> B
    30:30:io.vertx.core.net.NetServerOptions setSsl(boolean) -> C
    30:30:io.vertx.core.net.NetServerOptions setIdleTimeout(int) -> r
    30:30:io.vertx.core.net.NetServerOptions setUsePooledBuffers(boolean) -> D
    30:30:io.vertx.core.net.NetServerOptions setSoLinger(int) -> s
    30:30:io.vertx.core.net.NetServerOptions setTcpKeepAlive(boolean) -> E
    30:30:io.vertx.core.net.NetServerOptions setTcpNoDelay(boolean) -> F
    30:30:io.vertx.core.net.NetServerOptions setTrafficClass(int) -> t
    30:30:io.vertx.core.net.NetServerOptions setReusePort(boolean) -> M
    30:30:io.vertx.core.net.NetServerOptions setReuseAddress(boolean) -> N
    30:30:io.vertx.core.net.NetServerOptions setReceiveBufferSize(int) -> u
    30:30:io.vertx.core.net.NetServerOptions setSendBufferSize(int) -> v
    30:30:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> h
    30:30:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> f
    30:30:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> i
    30:30:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> g
    30:30:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> h
    30:30:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> G
    30:30:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> H
    30:30:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> I
    30:30:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> J
    30:30:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> c
    30:30:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> c
    30:30:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> c
    30:30:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> K
    30:30:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> b
    30:30:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> c
    30:30:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> d
    30:30:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> b
    30:30:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> c
    30:30:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> c
    30:30:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> b
    30:30:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> d
    30:30:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> d
    30:30:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> j
    30:30:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> i
    30:30:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> k
    30:30:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> j
    30:30:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> l
    30:30:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> m
    30:30:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> n
    30:30:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> L
    30:30:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> k
    30:30:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> o
    30:30:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> l
    30:30:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> m
    82:82:void <clinit>() -> <clinit>
io.vertx.core.http.HttpServerOptionsConverter -> io.vertx.core.http.t:
    83:106:void toJson(io.vertx.core.http.HttpServerOptions,io.vertx.core.json.JsonObject) -> a
    86:86:void lambda$toJson$1(io.vertx.core.json.JsonArray,io.vertx.core.http.HttpVersion) -> a
io.vertx.core.http.HttpServerRequest -> io.vertx.core.http.u:
    io.vertx.core.http.HttpServerRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.HttpServerRequest handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.HttpServerRequest pause() -> pause
    io.vertx.core.http.HttpServerRequest resume() -> resume
    io.vertx.core.http.HttpServerRequest endHandler(io.vertx.core.Handler) -> endHandler
    java.lang.String rawMethod() -> rawMethod
    java.lang.String scheme() -> scheme
    java.lang.String uri() -> uri
    java.lang.String path() -> path
    java.lang.String query() -> query
    java.lang.String host() -> host
    io.vertx.core.http.HttpServerResponse response() -> response
    io.vertx.core.MultiMap headers() -> headers
    java.lang.String getHeader(java.lang.String) -> getHeader
    io.vertx.core.MultiMap params() -> params
    java.lang.String absoluteURI() -> absoluteURI
    206:211:io.vertx.core.http.HttpServerRequest bodyHandler(io.vertx.core.Handler) -> a
    43:43:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    43:43:io.vertx.core.streams.ReadStream resume() -> resume
    43:43:io.vertx.core.streams.ReadStream pause() -> pause
    43:43:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    43:43:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    209:209:void lambda$bodyHandler$0(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void) -> a
io.vertx.core.http.HttpServerResponse -> io.vertx.core.http.v:
    io.vertx.core.http.HttpServerResponse setStatusCode(int) -> setStatusCode
    io.vertx.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.String) -> putHeader
    void end(io.vertx.core.buffer.Buffer) -> end
    void end() -> end
    void close() -> close
io.vertx.core.http.HttpVersion -> io.vertx.core.http.w:
    io.vertx.core.http.HttpVersion HTTP_1_0 -> a
    io.vertx.core.http.HttpVersion HTTP_1_1 -> b
    io.vertx.core.http.HttpVersion HTTP_2 -> c
    io.vertx.core.http.HttpVersion[] $VALUES -> d
    21:21:io.vertx.core.http.HttpVersion[] values() -> values
    21:21:io.vertx.core.http.HttpVersion valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    21:23:void <clinit>() -> <clinit>
io.vertx.core.http.RequestOptions -> io.vertx.core.http.x:
    java.lang.String host -> a
    int port -> b
    boolean ssl -> c
    java.lang.String uri -> d
    53:58:void <init>() -> <init>
    91:91:java.lang.String getHost() -> a
    100:101:io.vertx.core.http.RequestOptions setHost(java.lang.String) -> a
    110:110:int getPort() -> b
    119:120:io.vertx.core.http.RequestOptions setPort(int) -> a
    127:127:boolean isSsl() -> c
    137:138:io.vertx.core.http.RequestOptions setSsl(boolean) -> a
    145:145:java.lang.String getURI() -> d
    155:156:io.vertx.core.http.RequestOptions setURI(java.lang.String) -> b
io.vertx.core.http.ServerWebSocket -> io.vertx.core.http.y:
    io.vertx.core.http.ServerWebSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.ServerWebSocket handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.ServerWebSocket pause() -> pause
    io.vertx.core.http.ServerWebSocket resume() -> resume
    io.vertx.core.http.ServerWebSocket endHandler(io.vertx.core.Handler) -> endHandler
    34:34:io.vertx.core.http.WebSocketBase endHandler(io.vertx.core.Handler) -> endHandler
    34:34:io.vertx.core.http.WebSocketBase resume() -> resume
    34:34:io.vertx.core.http.WebSocketBase pause() -> pause
    34:34:io.vertx.core.http.WebSocketBase handler(io.vertx.core.Handler) -> handler
    34:34:io.vertx.core.http.WebSocketBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    34:34:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    34:34:io.vertx.core.streams.ReadStream resume() -> resume
    34:34:io.vertx.core.streams.ReadStream pause() -> pause
    34:34:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    34:34:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.StreamResetException -> io.vertx.core.http.z:
    long code -> a
    26:28:void <init>(long) -> <init>
io.vertx.core.http.WebSocket -> io.vertx.core.http.A:
    io.vertx.core.http.WebSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.WebSocket handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.WebSocket pause() -> pause
    io.vertx.core.http.WebSocket resume() -> resume
    io.vertx.core.http.WebSocket endHandler(io.vertx.core.Handler) -> endHandler
    23:23:io.vertx.core.http.WebSocketBase endHandler(io.vertx.core.Handler) -> endHandler
    23:23:io.vertx.core.http.WebSocketBase resume() -> resume
    23:23:io.vertx.core.http.WebSocketBase pause() -> pause
    23:23:io.vertx.core.http.WebSocketBase handler(io.vertx.core.Handler) -> handler
    23:23:io.vertx.core.http.WebSocketBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    23:23:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    23:23:io.vertx.core.streams.ReadStream resume() -> resume
    23:23:io.vertx.core.streams.ReadStream pause() -> pause
    23:23:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    23:23:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.WebSocketBase -> io.vertx.core.http.B:
    io.vertx.core.http.WebSocketBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.http.WebSocketBase handler(io.vertx.core.Handler) -> handler
    io.vertx.core.http.WebSocketBase pause() -> pause
    io.vertx.core.http.WebSocketBase resume() -> resume
    io.vertx.core.http.WebSocketBase endHandler(io.vertx.core.Handler) -> endHandler
    38:38:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    38:38:io.vertx.core.streams.ReadStream resume() -> resume
    38:38:io.vertx.core.streams.ReadStream pause() -> pause
    38:38:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    38:38:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.WebSocketFrame -> io.vertx.core.http.C:
    io.vertx.core.spi.WebSocketFrameFactory factory -> a
    46:46:io.vertx.core.http.WebSocketFrame binaryFrame(io.vertx.core.buffer.Buffer,boolean) -> a
    57:57:io.vertx.core.http.WebSocketFrame textFrame(java.lang.String,boolean) -> a
    67:67:io.vertx.core.http.WebSocketFrame pingFrame(io.vertx.core.buffer.Buffer) -> a
    77:77:io.vertx.core.http.WebSocketFrame pongFrame(io.vertx.core.buffer.Buffer) -> b
    88:88:io.vertx.core.http.WebSocketFrame continuationFrame(io.vertx.core.buffer.Buffer,boolean) -> b
    io.vertx.core.buffer.Buffer binaryData() -> a
    boolean isFinal() -> b
    139:139:void <clinit>() -> <clinit>
io.vertx.core.http.WebsocketRejectedException -> io.vertx.core.http.D:
    int status -> a
    24:26:void <init>(int) -> <init>
io.vertx.core.http.WebsocketVersion -> io.vertx.core.http.E:
    io.vertx.core.http.WebsocketVersion V00 -> a
    io.vertx.core.http.WebsocketVersion V07 -> b
    io.vertx.core.http.WebsocketVersion V08 -> c
    io.vertx.core.http.WebsocketVersion V13 -> d
    io.vertx.core.http.WebsocketVersion[] $VALUES -> e
    21:21:io.vertx.core.http.WebsocketVersion[] values() -> values
    21:21:io.vertx.core.http.WebsocketVersion valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    21:23:void <clinit>() -> <clinit>
io.vertx.core.http.impl.AssembledFullHttpRequest -> io.vertx.core.http.impl.AssembledFullHttpRequest:
    33:34:void <init>(io.netty.handler.codec.http.HttpRequest,io.netty.handler.codec.http.LastHttpContent) -> <init>
    37:38:void <init>(io.netty.handler.codec.http.HttpRequest) -> <init>
    41:42:void <init>(io.netty.handler.codec.http.HttpRequest,io.netty.buffer.ByteBuf) -> <init>
    45:48:io.netty.handler.codec.http.LastHttpContent toLastContent(io.netty.buffer.ByteBuf) -> toLastContent
    54:55:io.vertx.core.http.impl.AssembledFullHttpRequest replace(io.netty.buffer.ByteBuf) -> replace
    60:61:io.vertx.core.http.impl.AssembledFullHttpRequest retainedDuplicate() -> retainedDuplicate
    66:67:io.vertx.core.http.impl.AssembledFullHttpRequest setUri(java.lang.String) -> setUri
    72:73:io.vertx.core.http.impl.AssembledFullHttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    78:79:io.vertx.core.http.impl.AssembledFullHttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    84:84:io.vertx.core.http.impl.AssembledFullHttpRequest duplicate() -> duplicate
    89:89:io.vertx.core.http.impl.AssembledFullHttpRequest copy() -> copy
    94:94:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    99:100:io.vertx.core.http.impl.AssembledFullHttpRequest retain() -> retain
    105:106:io.vertx.core.http.impl.AssembledFullHttpRequest retain(int) -> retain
    111:112:io.vertx.core.http.impl.AssembledFullHttpRequest touch(java.lang.Object) -> touch
    117:118:io.vertx.core.http.impl.AssembledFullHttpRequest touch() -> touch
    30:30:io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    30:30:io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    30:30:io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    30:30:io.vertx.core.http.impl.AssembledHttpRequest touch() -> touch
    30:30:io.vertx.core.http.impl.AssembledHttpRequest touch(java.lang.Object) -> touch
    30:30:io.vertx.core.http.impl.AssembledHttpRequest retain(int) -> retain
    30:30:io.vertx.core.http.impl.AssembledHttpRequest retain() -> retain
    30:30:io.netty.handler.codec.http.HttpContent replace(io.netty.buffer.ByteBuf) -> replace
    30:30:io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    30:30:io.vertx.core.http.impl.AssembledHttpRequest duplicate() -> duplicate
    30:30:io.vertx.core.http.impl.AssembledHttpRequest copy() -> copy
    30:30:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.HttpContent touch() -> touch
    30:30:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    30:30:io.netty.handler.codec.http.HttpContent retain() -> retain
    30:30:io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    30:30:io.netty.handler.codec.http.HttpContent copy() -> copy
    30:30:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    30:30:io.netty.buffer.ByteBufHolder touch() -> touch
    30:30:io.netty.buffer.ByteBufHolder retain(int) -> retain
    30:30:io.netty.buffer.ByteBufHolder retain() -> retain
    30:30:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    30:30:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    30:30:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    30:30:io.netty.buffer.ByteBufHolder copy() -> copy
    30:30:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:io.netty.util.ReferenceCounted touch() -> touch
    30:30:io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:io.netty.util.ReferenceCounted retain() -> retain
    30:30:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    30:30:io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
    30:30:io.netty.handler.codec.http.FullHttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    30:30:io.netty.handler.codec.http.FullHttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    30:30:io.netty.handler.codec.http.FullHttpRequest touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.FullHttpRequest touch() -> touch
    30:30:io.netty.handler.codec.http.FullHttpRequest retain() -> retain
    30:30:io.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    30:30:io.netty.handler.codec.http.FullHttpRequest replace(io.netty.buffer.ByteBuf) -> replace
    30:30:io.netty.handler.codec.http.FullHttpRequest retainedDuplicate() -> retainedDuplicate
    30:30:io.netty.handler.codec.http.FullHttpRequest duplicate() -> duplicate
    30:30:io.netty.handler.codec.http.FullHttpRequest copy() -> copy
    30:30:io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    30:30:io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    30:30:io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    30:30:io.netty.handler.codec.http.FullHttpMessage replace(io.netty.buffer.ByteBuf) -> replace
    30:30:io.netty.handler.codec.http.FullHttpMessage retainedDuplicate() -> retainedDuplicate
    30:30:io.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    30:30:io.netty.handler.codec.http.FullHttpMessage copy() -> copy
    30:30:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    30:30:io.netty.handler.codec.http.LastHttpContent touch() -> touch
    30:30:io.netty.handler.codec.http.LastHttpContent retain() -> retain
    30:30:io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    30:30:io.netty.handler.codec.http.LastHttpContent replace(io.netty.buffer.ByteBuf) -> replace
    30:30:io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    30:30:io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    30:30:io.netty.handler.codec.http.LastHttpContent copy() -> copy
io.vertx.core.http.impl.AssembledFullHttpResponse -> io.vertx.core.http.impl.AssembledFullHttpResponse:
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    28:30:void <init>(boolean,io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.handler.codec.http.HttpHeaders,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders) -> <init>
    34:34:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    39:40:io.vertx.core.http.impl.AssembledFullHttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    45:46:io.vertx.core.http.impl.AssembledFullHttpResponse retain(int) -> retain
    51:52:io.vertx.core.http.impl.AssembledFullHttpResponse retain() -> retain
    57:58:io.vertx.core.http.impl.AssembledFullHttpResponse duplicate() -> duplicate
    63:64:io.vertx.core.http.impl.AssembledFullHttpResponse copy() -> copy
    69:70:io.vertx.core.http.impl.AssembledFullHttpResponse retainedDuplicate() -> retainedDuplicate
    75:76:io.vertx.core.http.impl.AssembledFullHttpResponse replace(io.netty.buffer.ByteBuf) -> replace
    81:82:io.vertx.core.http.impl.AssembledFullHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    87:88:io.vertx.core.http.impl.AssembledFullHttpResponse touch() -> touch
    93:94:io.vertx.core.http.impl.AssembledFullHttpResponse touch(java.lang.Object) -> touch
    23:23:io.vertx.core.http.impl.AssembledHttpResponse touch(java.lang.Object) -> touch
    23:23:io.vertx.core.http.impl.AssembledHttpResponse touch() -> touch
    23:23:io.vertx.core.http.impl.AssembledHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    23:23:io.vertx.core.http.impl.AssembledHttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    23:23:io.vertx.core.http.impl.AssembledHttpResponse retain(int) -> retain
    23:23:io.vertx.core.http.impl.AssembledHttpResponse retain() -> retain
    23:23:io.netty.handler.codec.http.HttpContent replace(io.netty.buffer.ByteBuf) -> replace
    23:23:io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    23:23:io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    23:23:io.netty.handler.codec.http.HttpContent copy() -> copy
    23:23:io.netty.handler.codec.http.HttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    23:23:io.netty.handler.codec.http.HttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    23:23:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    23:23:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    23:23:io.netty.handler.codec.http.HttpContent touch() -> touch
    23:23:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    23:23:io.netty.handler.codec.http.HttpContent retain() -> retain
    23:23:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    23:23:io.netty.buffer.ByteBufHolder touch() -> touch
    23:23:io.netty.buffer.ByteBufHolder retain(int) -> retain
    23:23:io.netty.buffer.ByteBufHolder retain() -> retain
    23:23:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    23:23:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    23:23:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    23:23:io.netty.buffer.ByteBufHolder copy() -> copy
    23:23:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    23:23:io.netty.util.ReferenceCounted touch() -> touch
    23:23:io.netty.util.ReferenceCounted retain(int) -> retain
    23:23:io.netty.util.ReferenceCounted retain() -> retain
    23:23:io.netty.handler.codec.http.FullHttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    23:23:io.netty.handler.codec.http.FullHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    23:23:io.netty.handler.codec.http.FullHttpResponse touch(java.lang.Object) -> touch
    23:23:io.netty.handler.codec.http.FullHttpResponse touch() -> touch
    23:23:io.netty.handler.codec.http.FullHttpResponse retain() -> retain
    23:23:io.netty.handler.codec.http.FullHttpResponse retain(int) -> retain
    23:23:io.netty.handler.codec.http.FullHttpResponse replace(io.netty.buffer.ByteBuf) -> replace
    23:23:io.netty.handler.codec.http.FullHttpResponse retainedDuplicate() -> retainedDuplicate
    23:23:io.netty.handler.codec.http.FullHttpResponse duplicate() -> duplicate
    23:23:io.netty.handler.codec.http.FullHttpResponse copy() -> copy
    23:23:io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    23:23:io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    23:23:io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    23:23:io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    23:23:io.netty.handler.codec.http.FullHttpMessage replace(io.netty.buffer.ByteBuf) -> replace
    23:23:io.netty.handler.codec.http.FullHttpMessage retainedDuplicate() -> retainedDuplicate
    23:23:io.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    23:23:io.netty.handler.codec.http.FullHttpMessage copy() -> copy
    23:23:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    23:23:io.netty.handler.codec.http.LastHttpContent touch() -> touch
    23:23:io.netty.handler.codec.http.LastHttpContent retain() -> retain
    23:23:io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    23:23:io.netty.handler.codec.http.LastHttpContent replace(io.netty.buffer.ByteBuf) -> replace
    23:23:io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    23:23:io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    23:23:io.netty.handler.codec.http.LastHttpContent copy() -> copy
io.vertx.core.http.impl.AssembledHttpRequest -> io.vertx.core.http.impl.AssembledHttpRequest:
    io.netty.handler.codec.http.HttpRequest request -> request
    io.netty.handler.codec.http.HttpContent content -> content
    36:37:void <init>(io.netty.handler.codec.http.HttpRequest,io.netty.buffer.ByteBuf) -> <init>
    39:42:void <init>(io.netty.handler.codec.http.HttpRequest,io.netty.handler.codec.http.HttpContent) -> <init>
    46:46:io.vertx.core.http.impl.AssembledHttpRequest copy() -> copy
    51:51:io.vertx.core.http.impl.AssembledHttpRequest duplicate() -> duplicate
    56:56:io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    61:61:io.netty.handler.codec.http.HttpContent replace(io.netty.buffer.ByteBuf) -> replace
    66:67:io.vertx.core.http.impl.AssembledHttpRequest retain() -> retain
    72:73:io.vertx.core.http.impl.AssembledHttpRequest retain(int) -> retain
    78:79:io.vertx.core.http.impl.AssembledHttpRequest touch(java.lang.Object) -> touch
    84:85:io.vertx.core.http.impl.AssembledHttpRequest touch() -> touch
    90:90:io.netty.handler.codec.http.HttpMethod method() -> method
    95:95:io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    100:100:java.lang.String uri() -> uri
    105:105:java.lang.String getUri() -> getUri
    110:110:io.netty.handler.codec.http.HttpHeaders headers() -> headers
    115:115:io.netty.handler.codec.http.HttpRequest setMethod(io.netty.handler.codec.http.HttpMethod) -> setMethod
    120:120:io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    125:125:io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    130:130:io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    135:135:io.netty.handler.codec.http.HttpRequest setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    140:140:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    145:145:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    150:151:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    155:155:io.netty.buffer.ByteBuf content() -> content
    160:160:int refCnt() -> refCnt
    165:165:boolean release() -> release
    170:170:boolean release(int) -> release
    31:31:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    31:31:io.netty.handler.codec.http.HttpContent touch() -> touch
    31:31:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    31:31:io.netty.handler.codec.http.HttpContent retain() -> retain
    31:31:io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    31:31:io.netty.handler.codec.http.HttpContent copy() -> copy
    31:31:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    31:31:io.netty.buffer.ByteBufHolder touch() -> touch
    31:31:io.netty.buffer.ByteBufHolder retain(int) -> retain
    31:31:io.netty.buffer.ByteBufHolder retain() -> retain
    31:31:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    31:31:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    31:31:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    31:31:io.netty.buffer.ByteBufHolder copy() -> copy
    31:31:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:io.netty.util.ReferenceCounted touch() -> touch
    31:31:io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:io.netty.util.ReferenceCounted retain() -> retain
    31:31:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
io.vertx.core.http.impl.AssembledHttpResponse -> io.vertx.core.http.impl.AssembledHttpResponse:
    boolean head -> head
    io.netty.handler.codec.http.HttpResponseStatus status -> status
    io.netty.handler.codec.http.HttpVersion version -> version
    io.netty.handler.codec.http.HttpHeaders headers -> headers
    io.netty.buffer.ByteBuf content -> content
    io.netty.handler.codec.DecoderResult result -> result
    36:37:void <init>(boolean,io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.handler.codec.http.HttpHeaders) -> <init>
    33:45:void <init>(boolean,io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.handler.codec.http.HttpHeaders,io.netty.buffer.ByteBuf) -> <init>
    48:48:boolean head() -> head
    53:53:io.netty.handler.codec.http.HttpContent copy() -> copy
    58:58:io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    63:63:io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    68:68:io.netty.handler.codec.http.HttpContent replace(io.netty.buffer.ByteBuf) -> replace
    73:74:io.vertx.core.http.impl.AssembledHttpResponse retain() -> retain
    79:80:io.vertx.core.http.impl.AssembledHttpResponse retain(int) -> retain
    85:85:io.netty.handler.codec.http.HttpResponseStatus getStatus() -> getStatus
    90:91:io.vertx.core.http.impl.AssembledHttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    96:97:io.vertx.core.http.impl.AssembledHttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    102:102:io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    107:107:io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    112:112:io.netty.handler.codec.http.HttpResponseStatus status() -> status
    117:118:io.vertx.core.http.impl.AssembledHttpResponse touch() -> touch
    123:124:io.vertx.core.http.impl.AssembledHttpResponse touch(java.lang.Object) -> touch
    129:129:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    134:134:io.netty.handler.codec.http.HttpHeaders headers() -> headers
    139:139:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    144:145:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    149:149:io.netty.buffer.ByteBuf content() -> content
    154:154:int refCnt() -> refCnt
    159:159:boolean release() -> release
    164:164:boolean release(int) -> release
    26:26:io.netty.handler.codec.http.HttpResponse setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    26:26:io.netty.handler.codec.http.HttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    26:26:io.netty.handler.codec.http.HttpMessage setProtocolVersion(io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    26:26:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    26:26:io.netty.handler.codec.http.HttpContent touch() -> touch
    26:26:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    26:26:io.netty.handler.codec.http.HttpContent retain() -> retain
    26:26:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    26:26:io.netty.buffer.ByteBufHolder touch() -> touch
    26:26:io.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:io.netty.buffer.ByteBufHolder retain() -> retain
    26:26:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    26:26:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    26:26:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:io.netty.buffer.ByteBufHolder copy() -> copy
    26:26:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:io.netty.util.ReferenceCounted touch() -> touch
    26:26:io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:io.netty.util.ReferenceCounted retain() -> retain
io.vertx.core.http.impl.AssembledLastHttpContent -> io.vertx.core.http.impl.AssembledLastHttpContent:
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    io.netty.handler.codec.DecoderResult result -> result
    34:35:void <init>(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders) -> <init>
    38:41:void <init>(io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders,io.netty.handler.codec.DecoderResult) -> <init>
    45:45:io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    50:50:io.netty.handler.codec.http.LastHttpContent copy() -> copy
    55:56:io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    61:62:io.netty.handler.codec.http.LastHttpContent retain() -> retain
    67:67:io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    72:72:io.netty.handler.codec.http.LastHttpContent replace(io.netty.buffer.ByteBuf) -> replace
    77:77:io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    82:82:io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    87:87:io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    92:93:void setDecoderResult(io.netty.handler.codec.DecoderResult) -> setDecoderResult
    97:98:io.vertx.core.http.impl.AssembledLastHttpContent touch() -> touch
    103:104:io.vertx.core.http.impl.AssembledLastHttpContent touch(java.lang.Object) -> touch
    27:27:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    27:27:io.netty.buffer.ByteBufHolder touch() -> touch
    27:27:io.netty.buffer.ByteBufHolder retain(int) -> retain
    27:27:io.netty.buffer.ByteBufHolder retain() -> retain
    27:27:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    27:27:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    27:27:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    27:27:io.netty.buffer.ByteBufHolder copy() -> copy
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
    27:27:io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.http.LastHttpContent touch() -> touch
    27:27:io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.http.HttpContent touch() -> touch
    27:27:io.netty.handler.codec.http.HttpContent retain(int) -> retain
    27:27:io.netty.handler.codec.http.HttpContent retain() -> retain
    27:27:io.netty.handler.codec.http.HttpContent replace(io.netty.buffer.ByteBuf) -> replace
    27:27:io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    27:27:io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    27:27:io.netty.handler.codec.http.HttpContent copy() -> copy
io.vertx.core.http.impl.ConnectionManager -> io.vertx.core.http.impl.ConnectionManager:
    int maxWaitQueueSize -> maxWaitQueueSize
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    io.vertx.core.http.impl.HttpClientImpl client -> client
    java.util.Map connectionMap -> connectionMap
    java.util.Map endpointMap -> endpointMap
    io.vertx.core.http.HttpVersion version -> version
    long maxSize -> maxSize
    39:54:void <init>(io.vertx.core.http.impl.HttpClientImpl,io.vertx.core.spi.metrics.HttpClientMetrics,io.vertx.core.http.HttpVersion,long,int) -> <init>
    109:159:void getConnection(java.lang.String,boolean,int,java.lang.String,io.vertx.core.Handler,java.util.function.BiFunction,java.util.function.BiConsumer) -> getConnection
    162:166:void close() -> close
    112:124:io.vertx.core.http.impl.ConnectionManager$Endpoint lambda$getConnection$1(java.lang.String,int,boolean,java.lang.String,io.vertx.core.http.impl.ConnectionManager$EndpointKey,io.vertx.core.http.impl.ConnectionManager$EndpointKey) -> lambda$getConnection$1
    117:121:void lambda$null$0(java.lang.String,int,java.lang.Object,io.vertx.core.http.impl.ConnectionManager$EndpointKey,java.lang.Void) -> lambda$null$0
    34:34:io.vertx.core.spi.metrics.HttpClientMetrics access$100(io.vertx.core.http.impl.ConnectionManager) -> access$100
io.vertx.core.http.impl.ConnectionManager$1 -> io.vertx.core.http.impl.ConnectionManager$1:
    io.vertx.core.Handler val$connectionHandler -> val$connectionHandler
    io.vertx.core.http.impl.ConnectionManager$Endpoint val$endpoint -> val$endpoint
    java.lang.Object val$metric -> val$metric
    java.util.function.BiConsumer val$onFailure -> val$onFailure
    java.util.function.BiFunction val$onSuccess -> val$onSuccess
    io.vertx.core.http.impl.ConnectionManager this$0 -> this$0
    132:132:void <init>(io.vertx.core.http.impl.ConnectionManager,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionManager$Endpoint,java.lang.Object,java.util.function.BiConsumer,java.util.function.BiFunction) -> <init>
    135:140:void initConnection(io.vertx.core.impl.ContextInternal,io.vertx.core.http.impl.HttpClientConnection) -> initConnection
    143:147:void handleFailure(io.vertx.core.impl.ContextInternal,java.lang.Throwable) -> handleFailure
    150:153:boolean handleConnection(io.vertx.core.impl.ContextInternal,io.vertx.core.http.impl.HttpClientConnection) -> handleConnection
    132:132:boolean handleConnection(io.vertx.core.impl.ContextInternal,java.lang.Object) -> handleConnection
    132:132:void initConnection(io.vertx.core.impl.ContextInternal,java.lang.Object) -> initConnection
    137:138:void lambda$initConnection$0(io.vertx.core.Handler,io.vertx.core.http.impl.HttpClientConnection) -> lambda$initConnection$0
io.vertx.core.http.impl.ConnectionManager$Endpoint -> io.vertx.core.http.impl.ConnectionManager$Endpoint:
    io.vertx.core.http.impl.pool.Pool pool -> pool
    java.lang.Object metric -> metric
    io.vertx.core.http.impl.ConnectionManager this$0 -> this$0
    99:102:void <init>(io.vertx.core.http.impl.ConnectionManager,io.vertx.core.http.impl.pool.Pool,java.lang.Object) -> <init>
    94:94:java.lang.Object access$000(io.vertx.core.http.impl.ConnectionManager$Endpoint) -> access$000
    94:94:io.vertx.core.http.impl.pool.Pool access$200(io.vertx.core.http.impl.ConnectionManager$Endpoint) -> access$200
io.vertx.core.http.impl.ConnectionManager$EndpointKey -> io.vertx.core.http.impl.ConnectionManager$EndpointKey:
    boolean ssl -> ssl
    int port -> port
    java.lang.String peerHost -> peerHost
    java.lang.String host -> host
    63:74:void <init>(boolean,int,java.lang.String,java.lang.String) -> <init>
    78:81:boolean equals(java.lang.Object) -> equals
    86:90:int hashCode() -> hashCode
io.vertx.core.http.impl.FileStreamChannel -> io.vertx.core.http.impl.FileStreamChannel:
    java.net.SocketAddress LOCAL_ADDRESS -> LOCAL_ADDRESS
    java.net.SocketAddress REMOTE_ADDRESS -> REMOTE_ADDRESS
    io.netty.channel.ChannelMetadata METADATA -> METADATA
    io.netty.channel.ChannelConfig config -> config
    boolean active -> active
    boolean closed -> closed
    long bytesWritten -> bytesWritten
    io.vertx.core.http.impl.VertxHttp2Stream stream -> stream
    io.vertx.core.Handler drainHandler -> drainHandler
    52:96:void <init>(io.vertx.core.Future,io.vertx.core.http.impl.VertxHttp2Stream,long,long) -> <init>
    102:103:void doRegister() -> doRegister
    107:107:io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    112:112:boolean isCompatible(io.netty.channel.EventLoop) -> isCompatible
    117:117:java.net.SocketAddress localAddress0() -> localAddress0
    122:122:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    127:127:void doBind(java.net.SocketAddress) -> doBind
    131:132:void doDisconnect() -> doDisconnect
    136:138:void doClose() -> doClose
    142:142:void doBeginRead() -> doBeginRead
    147:153:void doWrite(io.netty.channel.ChannelOutboundBuffer) -> doWrite
    157:157:io.netty.channel.ChannelConfig config() -> config
    162:162:boolean isOpen() -> isOpen
    167:167:boolean isActive() -> isActive
    172:172:io.netty.channel.ChannelMetadata metadata() -> metadata
    97:98:void lambda$new$0(java.lang.Void) -> lambda$new$0
    46:46:long access$100(io.vertx.core.http.impl.FileStreamChannel) -> access$100
    48:50:void <clinit>() -> <clinit>
io.vertx.core.http.impl.FileStreamChannel$1 -> io.vertx.core.http.impl.FileStreamChannel$1:
    long val$offset -> val$offset
    long val$length -> val$length
    io.vertx.core.Future val$result -> val$result
    io.vertx.core.http.impl.FileStreamChannel this$0 -> this$0
    65:65:void <init>(io.vertx.core.http.impl.FileStreamChannel,long,long,io.vertx.core.Future) -> <init>
    68:90:void initChannel(io.netty.channel.Channel) -> initChannel
io.vertx.core.http.impl.FileStreamChannel$1$1 -> io.vertx.core.http.impl.FileStreamChannel$1$1:
    io.vertx.core.http.impl.FileStreamChannel$1 this$1 -> this$1
    70:70:void <init>(io.vertx.core.http.impl.FileStreamChannel$1) -> <init>
    73:84:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    87:88:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    76:82:void lambda$userEventTriggered$0(io.vertx.core.Future,io.netty.channel.ChannelFuture,io.netty.util.concurrent.Future) -> lambda$userEventTriggered$0
io.vertx.core.http.impl.FileStreamChannel$DefaultUnsafe -> io.vertx.core.http.impl.FileStreamChannel$DefaultUnsafe:
    io.vertx.core.http.impl.FileStreamChannel this$0 -> this$0
    182:182:void <init>(io.vertx.core.http.impl.FileStreamChannel) -> <init>
    185:186:void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    182:182:void <init>(io.vertx.core.http.impl.FileStreamChannel,io.vertx.core.http.impl.FileStreamChannel$1) -> <init>
io.vertx.core.http.impl.FileStreamChannel$Id -> io.vertx.core.http.impl.FileStreamChannel$Id:
    io.netty.channel.ChannelId INSTANCE -> INSTANCE
    193:193:void <init>() -> <init>
    197:197:java.lang.String asShortText() -> asShortText
    202:202:java.lang.String asLongText() -> asLongText
    207:211:int compareTo(io.netty.channel.ChannelId) -> compareTo
    216:216:int hashCode() -> hashCode
    221:221:boolean equals(java.lang.Object) -> equals
    226:226:java.lang.String toString() -> toString
    189:189:int compareTo(java.lang.Object) -> compareTo
    191:191:void <clinit>() -> <clinit>
io.vertx.core.http.impl.FileStreamChannel$StreamSocketAddress -> io.vertx.core.http.impl.FileStreamChannel$StreamSocketAddress:
    175:175:void <init>() -> <init>
    178:178:java.lang.String toString() -> toString
    175:175:void <init>(io.vertx.core.http.impl.FileStreamChannel$1) -> <init>
io.vertx.core.http.impl.FrameType -> io.vertx.core.http.impl.FrameType:
    io.vertx.core.http.impl.FrameType CONTINUATION -> CONTINUATION
    io.vertx.core.http.impl.FrameType TEXT -> TEXT
    io.vertx.core.http.impl.FrameType BINARY -> BINARY
    io.vertx.core.http.impl.FrameType CLOSE -> CLOSE
    io.vertx.core.http.impl.FrameType PING -> PING
    io.vertx.core.http.impl.FrameType PONG -> PONG
    io.vertx.core.http.impl.FrameType[] $VALUES -> $VALUES
    19:19:io.vertx.core.http.impl.FrameType[] values() -> values
    19:19:io.vertx.core.http.impl.FrameType valueOf(java.lang.String) -> valueOf
    19:19:void <init>(java.lang.String,int) -> <init>
    19:25:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HeadersAdaptor -> io.vertx.core.http.impl.HeadersAdaptor:
    io.netty.handler.codec.http.HttpHeaders headers -> headers
    28:30:void <init>(io.netty.handler.codec.http.HttpHeaders) -> <init>
    34:34:java.lang.String get(java.lang.String) -> get
    39:39:java.util.List getAll(java.lang.String) -> getAll
    44:44:java.util.List entries() -> entries
    49:49:boolean contains(java.lang.String) -> contains
    54:54:boolean isEmpty() -> isEmpty
    59:59:java.util.Set names() -> names
    64:65:io.vertx.core.MultiMap add(java.lang.String,java.lang.String) -> add
    70:71:io.vertx.core.MultiMap add(java.lang.String,java.lang.Iterable) -> add
    76:79:io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap) -> addAll
    84:87:io.vertx.core.MultiMap addAll(java.util.Map) -> addAll
    92:93:io.vertx.core.MultiMap set(java.lang.String,java.lang.String) -> set
    98:99:io.vertx.core.MultiMap set(java.lang.String,java.lang.Iterable) -> set
    104:108:io.vertx.core.MultiMap setAll(io.vertx.core.MultiMap) -> setAll
    113:114:io.vertx.core.MultiMap remove(java.lang.String) -> remove
    119:120:io.vertx.core.MultiMap clear() -> clear
    125:125:java.util.Iterator iterator() -> iterator
    130:130:int size() -> size
    135:138:io.vertx.core.MultiMap setAll(java.util.Map) -> setAll
    143:143:java.lang.String get(java.lang.CharSequence) -> get
    148:148:java.util.List getAll(java.lang.CharSequence) -> getAll
    153:153:boolean contains(java.lang.CharSequence) -> contains
    158:158:boolean contains(java.lang.String,java.lang.String,boolean) -> contains
    163:163:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    168:169:io.vertx.core.MultiMap add(java.lang.CharSequence,java.lang.CharSequence) -> add
    174:175:io.vertx.core.MultiMap add(java.lang.CharSequence,java.lang.Iterable) -> add
    180:181:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.CharSequence) -> set
    186:187:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.Iterable) -> set
    192:193:io.vertx.core.MultiMap remove(java.lang.CharSequence) -> remove
io.vertx.core.http.impl.Http1xClientConnection -> io.vertx.core.http.impl.Http1xClientConnection:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.http.impl.pool.ConnectionListener listener -> listener
    io.vertx.core.http.impl.HttpClientImpl client -> client
    boolean ssl -> ssl
    java.lang.String host -> host
    int port -> port
    java.lang.Object endpointMetric -> endpointMetric
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    io.vertx.core.http.HttpVersion version -> version
    io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker -> handshaker
    io.vertx.core.http.impl.WebSocketImpl ws -> ws
    java.util.Deque pending -> pending
    java.util.Deque inflight -> inflight
    io.vertx.core.http.impl.Http1xClientConnection$StreamImpl currentRequest -> currentRequest
    io.vertx.core.http.impl.Http1xClientConnection$StreamImpl currentResponse -> currentResponse
    boolean paused -> paused
    io.vertx.core.buffer.Buffer pausedChunk -> pausedChunk
    74:101:void <init>(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.http.HttpVersion,io.vertx.core.http.impl.HttpClientImpl,java.lang.Object,io.netty.channel.ChannelHandlerContext,boolean,java.lang.String,int,io.vertx.core.impl.ContextImpl,io.vertx.core.spi.metrics.HttpClientMetrics) -> <init>
    404:424:void handleResponse(io.netty.handler.codec.http.HttpResponse) -> handleResponse
    428:448:void handleResponseChunk(io.vertx.core.buffer.Buffer) -> handleResponseChunk
    451:459:void handleResponseEnd(io.netty.handler.codec.http.LastHttpContent) -> handleResponseEnd
    462:462:io.vertx.core.spi.metrics.HttpClientMetrics metrics() -> metrics
    467:502:void toWebSocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,int,io.vertx.core.Handler) -> toWebSocket
    612:619:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    622:624:void doPause() -> doPause
    627:638:void doResume() -> doResume
    641:644:void handleWsFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal) -> handleWsFrame
    648:651:void retryPending() -> retryPending
    654:683:void handleClosed() -> handleClosed
    686:686:io.vertx.core.impl.ContextImpl getContext() -> getContext
    691:703:void handleException(java.lang.Throwable) -> handleException
    707:716:void close() -> close
    720:729:void closeWithPayload(io.netty.buffer.ByteBuf) -> closeWithPayload
    733:742:void createStream(io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.Handler) -> createStream
    58:58:io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    631:636:void lambda$doResume$1(java.lang.Void) -> lambda$doResume$1
    494:498:void lambda$toWebSocket$0(io.netty.util.concurrent.Future) -> lambda$toWebSocket$0
    58:58:io.vertx.core.http.HttpVersion access$000(io.vertx.core.http.impl.Http1xClientConnection) -> access$000
    58:58:io.vertx.core.impl.ContextImpl access$100(io.vertx.core.http.impl.Http1xClientConnection) -> access$100
    58:58:io.vertx.core.http.impl.HttpClientImpl access$200(io.vertx.core.http.impl.Http1xClientConnection) -> access$200
    58:58:io.vertx.core.http.impl.Http1xClientConnection$StreamImpl access$300(io.vertx.core.http.impl.Http1xClientConnection) -> access$300
    58:58:io.vertx.core.spi.metrics.HttpClientMetrics access$400(io.vertx.core.http.impl.Http1xClientConnection) -> access$400
    58:58:java.lang.Object access$500(io.vertx.core.http.impl.Http1xClientConnection) -> access$500
    58:58:java.util.Deque access$600(io.vertx.core.http.impl.Http1xClientConnection) -> access$600
    58:58:io.vertx.core.http.impl.Http1xClientConnection$StreamImpl access$302(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.http.impl.Http1xClientConnection$StreamImpl) -> access$302
    58:58:java.util.Deque access$700(io.vertx.core.http.impl.Http1xClientConnection) -> access$700
    58:58:io.vertx.core.impl.VertxInternal access$800(io.vertx.core.http.impl.Http1xClientConnection) -> access$800
    58:58:io.netty.channel.ChannelHandlerContext access$900(io.vertx.core.http.impl.Http1xClientConnection) -> access$900
    58:58:io.vertx.core.impl.ContextImpl access$1000(io.vertx.core.http.impl.Http1xClientConnection) -> access$1000
    58:58:void access$1100(io.vertx.core.http.impl.Http1xClientConnection) -> access$1100
    58:58:io.netty.channel.ChannelHandlerContext access$1200(io.vertx.core.http.impl.Http1xClientConnection) -> access$1200
    58:58:io.vertx.core.buffer.Buffer access$1300(io.vertx.core.http.impl.Http1xClientConnection) -> access$1300
    58:58:io.vertx.core.buffer.Buffer access$1302(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.buffer.Buffer) -> access$1302
    58:58:io.vertx.core.http.impl.pool.ConnectionListener access$1400(io.vertx.core.http.impl.Http1xClientConnection) -> access$1400
    58:58:io.vertx.core.impl.VertxInternal access$1700(io.vertx.core.http.impl.Http1xClientConnection) -> access$1700
    58:58:io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker access$1800(io.vertx.core.http.impl.Http1xClientConnection) -> access$1800
    58:58:io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker access$1802(io.vertx.core.http.impl.Http1xClientConnection,io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker) -> access$1802
    58:58:io.netty.channel.ChannelHandlerContext access$1900(io.vertx.core.http.impl.Http1xClientConnection) -> access$1900
    58:58:io.vertx.core.Handler access$2000(io.vertx.core.http.impl.Http1xClientConnection) -> access$2000
    58:58:io.vertx.core.logging.Logger access$2100() -> access$2100
    58:58:io.vertx.core.impl.VertxInternal access$2200(io.vertx.core.http.impl.Http1xClientConnection) -> access$2200
    58:58:io.vertx.core.http.impl.WebSocketImpl access$2302(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.http.impl.WebSocketImpl) -> access$2302
    58:58:io.netty.channel.ChannelHandlerContext access$2400(io.vertx.core.http.impl.Http1xClientConnection) -> access$2400
    58:58:io.vertx.core.http.impl.WebSocketImpl access$2300(io.vertx.core.http.impl.Http1xClientConnection) -> access$2300
    60:60:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http1xClientConnection$HandshakeInboundHandler -> io.vertx.core.http.impl.Http1xClientConnection$HandshakeInboundHandler:
    boolean supportsContinuation -> supportsContinuation
    io.vertx.core.Handler wsConnect -> wsConnect
    io.vertx.core.impl.ContextImpl context -> context
    java.util.Queue buffered -> buffered
    io.netty.handler.codec.http.FullHttpResponse response -> response
    boolean handshaking -> handshaking
    io.vertx.core.http.impl.Http1xClientConnection this$0 -> this$0
    509:517:void <init>(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.Handler,boolean) -> <init>
    521:527:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    531:570:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    573:583:void handleException(java.lang.Exception) -> handleException
    586:607:void handshakeComplete(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse) -> handshakeComplete
    601:606:void lambda$handshakeComplete$1(io.vertx.core.http.impl.WebSocketImpl) -> lambda$handshakeComplete$1
    578:579:void lambda$handleException$0(io.vertx.core.Handler,java.lang.Exception) -> lambda$handleException$0
io.vertx.core.http.impl.Http1xClientConnection$StreamImpl -> io.vertx.core.http.impl.Http1xClientConnection$StreamImpl:
    io.vertx.core.http.impl.Http1xClientConnection conn -> conn
    io.vertx.core.Handler handler -> handler
    io.vertx.core.http.impl.HttpClientRequestImpl request -> request
    io.vertx.core.http.impl.HttpClientResponseImpl response -> response
    boolean requestEnded -> requestEnded
    boolean responseEnded -> responseEnded
    boolean reset -> reset
    boolean close -> close
    boolean upgraded -> upgraded
    115:119:void <init>(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.Handler) -> <init>
    123:123:int id() -> id
    128:128:io.vertx.core.http.HttpVersion version() -> version
    133:133:io.vertx.core.http.impl.HttpClientConnection connection() -> connection
    138:138:io.vertx.core.Context getContext() -> getContext
    142:149:io.netty.handler.codec.http.HttpRequest createRequest(io.vertx.core.http.HttpVersion,io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap) -> createRequest
    153:170:void prepareHeaders(io.netty.handler.codec.http.HttpRequest,java.lang.String,boolean) -> prepareHeaders
    173:176:void writeHead(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean) -> writeHead
    179:190:void writeHeadWithContent(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean,io.netty.buffer.ByteBuf,boolean) -> writeHeadWithContent
    194:203:void writeBuffer(io.netty.buffer.ByteBuf,boolean) -> writeBuffer
    207:207:void writeFrame(int,int,io.netty.buffer.ByteBuf) -> writeFrame
    212:213:void doSetWriteQueueMaxSize(int) -> doSetWriteQueueMaxSize
    217:217:boolean isNotWritable() -> isNotWritable
    222:223:void checkDrained() -> checkDrained
    227:228:void doPause() -> doPause
    232:233:void doResume() -> doResume
    237:248:void reset(long) -> reset
    251:261:void beginRequest() -> beginRequest
    265:283:void endRequest() -> endRequest
    287:331:io.vertx.core.net.NetSocket createNetSocket() -> createNetSocket
    335:357:io.vertx.core.http.impl.HttpClientResponseImpl beginResponse(io.netty.handler.codec.http.HttpResponse) -> beginResponse
    362:386:void endResponse(io.netty.handler.codec.http.LastHttpContent) -> endResponse
    389:398:void checkLifecycle() -> checkLifecycle
    328:328:void lambda$createNetSocket$0(io.vertx.core.net.impl.NetSocketImpl) -> lambda$createNetSocket$0
    103:103:io.vertx.core.http.impl.HttpClientRequestImpl access$1500(io.vertx.core.http.impl.Http1xClientConnection$StreamImpl) -> access$1500
    103:103:io.vertx.core.http.impl.HttpClientResponseImpl access$1600(io.vertx.core.http.impl.Http1xClientConnection$StreamImpl) -> access$1600
io.vertx.core.http.impl.Http1xClientConnection$StreamImpl$1 -> io.vertx.core.http.impl.Http1xClientConnection$StreamImpl$1:
    io.vertx.core.http.impl.Http1xClientConnection$StreamImpl this$0 -> this$0
    311:311:void <init>(io.vertx.core.http.impl.Http1xClientConnection$StreamImpl,io.vertx.core.net.impl.NetSocketImpl) -> <init>
    314:322:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    325:327:void handleMessage(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    311:311:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
io.vertx.core.http.impl.Http1xClientHandler -> io.vertx.core.http.impl.Http1xClientHandler:
    boolean closeFrameSent -> closeFrameSent
    io.vertx.core.impl.ContextImpl context -> context
    io.netty.channel.ChannelHandlerContext chctx -> chctx
    io.vertx.core.http.HttpVersion version -> version
    java.lang.String host -> host
    int port -> port
    boolean ssl -> ssl
    io.vertx.core.http.impl.HttpClientImpl client -> client
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    io.vertx.core.http.impl.pool.ConnectionListener listener -> listener
    java.lang.Object endpointMetric -> endpointMetric
    53:63:void <init>(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.vertx.core.http.HttpVersion,java.lang.String,int,boolean,io.vertx.core.http.impl.HttpClientImpl,java.lang.Object,io.vertx.core.spi.metrics.HttpClientMetrics) -> <init>
    67:77:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    80:80:io.netty.channel.ChannelHandlerContext context() -> context
    85:89:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    93:146:void handleMessage(io.vertx.core.http.impl.Http1xClientConnection,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    32:32:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    71:74:void lambda$handlerAdded$0(io.vertx.core.http.impl.Http1xClientConnection) -> lambda$handlerAdded$0
io.vertx.core.http.impl.Http1xClientHandler$1 -> io.vertx.core.http.impl.Http1xClientHandler$1:
    int[] $SwitchMap$io$vertx$core$http$impl$FrameType -> $SwitchMap$io$vertx$core$http$impl$FrameType
    121:121:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http1xConnectionBase -> io.vertx.core.http.impl.Http1xConnectionBase:
    47:48:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.ChannelHandlerContext,io.vertx.core.impl.ContextImpl) -> <init>
    52:55:java.lang.Object encode(java.lang.Object) -> encode
    59:78:io.netty.handler.codec.http.websocketx.WebSocketFrame encodeFrame(java.lang.Object) -> encodeFrame
    void closeWithPayload(io.netty.buffer.ByteBuf) -> closeWithPayload
    86:86:io.vertx.core.http.impl.Http1xConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    91:91:io.vertx.core.http.impl.Http1xConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    96:96:io.vertx.core.http.HttpConnection goAway(long,int,io.vertx.core.buffer.Buffer) -> goAway
    101:101:io.vertx.core.http.HttpConnection goAwayHandler(io.vertx.core.Handler) -> goAwayHandler
    106:106:io.vertx.core.http.HttpConnection shutdownHandler(io.vertx.core.Handler) -> shutdownHandler
    111:111:io.vertx.core.http.HttpConnection shutdown() -> shutdown
    116:116:io.vertx.core.http.HttpConnection shutdown(long) -> shutdown
    121:121:io.vertx.core.http.Http2Settings settings() -> settings
    126:126:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings) -> updateSettings
    131:131:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings,io.vertx.core.Handler) -> updateSettings
    136:136:io.vertx.core.http.Http2Settings remoteSettings() -> remoteSettings
    141:141:io.vertx.core.http.HttpConnection remoteSettingsHandler(io.vertx.core.Handler) -> remoteSettingsHandler
    146:146:io.vertx.core.http.HttpConnection ping(io.vertx.core.buffer.Buffer,io.vertx.core.Handler) -> ping
    151:151:io.vertx.core.http.HttpConnection pingHandler(io.vertx.core.Handler) -> pingHandler
    44:44:io.vertx.core.net.impl.ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    44:44:io.vertx.core.net.impl.ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    44:44:io.vertx.core.http.HttpConnection exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    44:44:io.vertx.core.http.HttpConnection closeHandler(io.vertx.core.Handler) -> closeHandler
io.vertx.core.http.impl.Http1xConnectionBase$1 -> io.vertx.core.http.impl.Http1xConnectionBase$1:
    int[] $SwitchMap$io$vertx$core$http$impl$FrameType -> $SwitchMap$io$vertx$core$http$impl$FrameType
    64:64:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http1xOrH2CHandler -> io.vertx.core.http.impl.Http1xOrH2CHandler:
    java.lang.String HTTP_2_PREFACE -> HTTP_2_PREFACE
    byte[] HTTP_2_PREFACE_ARRAY -> HTTP_2_PREFACE_ARRAY
    int current -> current
    25:29:void <init>() -> <init>
    33:49:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    52:62:void end(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,boolean) -> end
    65:65:void configure(io.netty.channel.ChannelHandlerContext,boolean) -> configure
    69:71:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    28:28:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http1xServerConnection -> io.vertx.core.http.impl.Http1xServerConnection:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.Handler NULL_REQUEST_HANDLER -> NULL_REQUEST_HANDLER
    int CHANNEL_PAUSE_QUEUE_SIZE -> CHANNEL_PAUSE_QUEUE_SIZE
    java.util.Deque pending -> pending
    java.lang.String serverOrigin -> serverOrigin
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    io.vertx.core.http.HttpServerOptions options -> options
    io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker handshaker -> handshaker
    io.vertx.core.spi.metrics.HttpServerMetrics metrics -> metrics
    boolean requestFailed -> requestFailed
    java.lang.Object requestMetric -> requestMetric
    io.vertx.core.Handler requestHandler -> requestHandler
    io.vertx.core.Handler wsHandler -> wsHandler
    io.vertx.core.http.impl.HttpServerRequestImpl currentRequest -> currentRequest
    io.vertx.core.http.impl.HttpServerResponseImpl pendingResponse -> pendingResponse
    io.vertx.core.http.impl.ServerWebSocketImpl ws -> ws
    boolean channelPaused -> channelPaused
    boolean paused -> paused
    boolean sentCheck -> sentCheck
    long bytesRead -> bytesRead
    long bytesWritten -> bytesWritten
    boolean queueing -> queueing
    84:116:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.impl.SSLHelper,io.vertx.core.http.HttpServerOptions,io.netty.channel.ChannelHandlerContext,io.vertx.core.impl.ContextImpl,java.lang.String,io.vertx.core.spi.metrics.HttpServerMetrics) -> <init>
    120:120:io.vertx.core.spi.metrics.HttpServerMetrics metrics() -> metrics
    124:128:void pause() -> pause
    131:135:void resume() -> resume
    138:147:void handleMessage(java.lang.Object) -> handleMessage
    151:159:void enqueue(java.lang.Object) -> enqueue
    162:174:void responseComplete() -> responseComplete
    177:178:void requestHandler(io.vertx.core.Handler) -> requestHandler
    181:183:void wsHandler(io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.vertx.core.Handler) -> wsHandler
    186:186:java.lang.String getServerOrigin() -> getServerOrigin
    190:190:io.vertx.core.Vertx vertx() -> vertx
    195:204:void writeToChannel(java.lang.Object,io.netty.channel.ChannelPromise) -> writeToChannel
    207:234:io.vertx.core.http.ServerWebSocket upgrade(io.vertx.core.http.HttpServerRequest,io.netty.handler.codec.http.HttpRequest) -> upgrade
    238:277:io.vertx.core.net.NetSocket createNetSocket() -> createNetSocket
    281:285:void handleChunk(io.vertx.core.buffer.Buffer) -> handleChunk
    289:296:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    300:306:void close() -> close
    310:316:void closeWithPayload(io.netty.buffer.ByteBuf) -> closeWithPayload
    320:324:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl) -> handleWebsocketConnect
    327:328:void write100Continue() -> write100Continue
    331:348:void handleClosed() -> handleClosed
    351:351:io.vertx.core.impl.ContextImpl getContext() -> getContext
    356:369:void handleException(java.lang.Throwable) -> handleException
    372:373:void addFuture(io.vertx.core.Handler,io.netty.channel.ChannelFuture) -> addFuture
    377:377:boolean supportsFileRegion() -> supportsFileRegion
    381:381:io.netty.channel.ChannelFuture sendFile(java.io.RandomAccessFile,long,long) -> sendFile
    385:411:void handleError(io.netty.handler.codec.http.HttpObject) -> handleError
    414:441:boolean processMessage(java.lang.Object) -> processMessage
    445:459:void handleContent(java.lang.Object) -> handleContent
    462:468:void handleLastHttpContent() -> handleLastHttpContent
    471:477:void handleOther(java.lang.Object) -> handleOther
    481:510:void checkNextTick() -> checkNextTick
    513:529:long getBytes(java.lang.Object) -> getBytes
    76:76:io.vertx.core.http.HttpConnection pingHandler(io.vertx.core.Handler) -> pingHandler
    76:76:io.vertx.core.http.HttpConnection ping(io.vertx.core.buffer.Buffer,io.vertx.core.Handler) -> ping
    76:76:io.vertx.core.http.HttpConnection remoteSettingsHandler(io.vertx.core.Handler) -> remoteSettingsHandler
    76:76:io.vertx.core.http.Http2Settings remoteSettings() -> remoteSettings
    76:76:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings,io.vertx.core.Handler) -> updateSettings
    76:76:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings) -> updateSettings
    76:76:io.vertx.core.http.Http2Settings settings() -> settings
    76:76:io.vertx.core.http.HttpConnection shutdown(long) -> shutdown
    76:76:io.vertx.core.http.HttpConnection shutdown() -> shutdown
    76:76:io.vertx.core.http.HttpConnection shutdownHandler(io.vertx.core.Handler) -> shutdownHandler
    76:76:io.vertx.core.http.HttpConnection goAwayHandler(io.vertx.core.Handler) -> goAwayHandler
    76:76:io.vertx.core.http.HttpConnection goAway(long,int,io.vertx.core.buffer.Buffer) -> goAway
    76:76:io.vertx.core.http.impl.Http1xConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    76:76:io.vertx.core.http.impl.Http1xConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    76:76:io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    484:508:void lambda$checkNextTick$3(java.lang.Void) -> lambda$checkNextTick$3
    402:406:void lambda$handleError$2(io.netty.handler.codec.DecoderResult,io.netty.util.concurrent.Future) -> lambda$handleError$2
    273:273:void lambda$createNetSocket$1(java.util.Map,io.vertx.core.net.impl.NetSocketImpl) -> lambda$createNetSocket$1
    80:80:void lambda$static$0(io.vertx.core.http.HttpServerRequest) -> lambda$static$0
    76:76:void access$001(io.vertx.core.http.impl.Http1xServerConnection) -> access$001
    78:80:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http1xServerConnection$1 -> io.vertx.core.http.impl.Http1xServerConnection$1:
    io.vertx.core.http.impl.Http1xServerConnection this$0 -> this$0
    258:258:void <init>(io.vertx.core.http.impl.Http1xServerConnection,io.vertx.core.net.impl.NetSocketImpl) -> <init>
    261:266:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    270:272:void handleMessage(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    258:258:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
io.vertx.core.http.impl.Http1xServerHandler -> io.vertx.core.http.impl.Http1xServerHandler:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    io.vertx.core.http.HttpServerOptions options -> options
    java.lang.String serverOrigin -> serverOrigin
    io.vertx.core.spi.metrics.HttpServerMetrics metrics -> metrics
    io.vertx.core.net.impl.HandlerHolder holder -> holder
    47:53:void <init>(io.vertx.core.net.impl.SSLHelper,io.vertx.core.http.HttpServerOptions,java.lang.String,io.vertx.core.net.impl.HandlerHolder,io.vertx.core.spi.metrics.HttpServerMetrics) -> <init>
    57:76:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    80:81:void handleMessage(io.vertx.core.http.impl.Http1xServerConnection,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    87:112:io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker createHandshaker(io.vertx.core.http.impl.Http1xServerConnection,io.netty.channel.Channel,io.netty.handler.codec.http.HttpRequest) -> createHandshaker
    37:37:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    68:75:void lambda$handlerAdded$0(io.vertx.core.http.impl.Http1xServerConnection) -> lambda$handlerAdded$0
    39:39:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http2ClientConnection -> io.vertx.core.http.impl.Http2ClientConnection:
    io.vertx.core.http.impl.pool.ConnectionListener listener -> listener
    io.vertx.core.http.impl.HttpClientImpl client -> client
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    java.lang.Object queueMetric -> queueMetric
    54:59:void <init>(io.vertx.core.http.impl.pool.ConnectionListener,java.lang.Object,io.vertx.core.http.impl.HttpClientImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.http.impl.VertxHttp2ConnectionHandler,io.vertx.core.spi.metrics.HttpClientMetrics) -> <init>
    63:65:void onGoAwaySent(int,long,io.netty.buffer.ByteBuf) -> onGoAwaySent
    69:71:void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
    75:75:io.netty.channel.Channel channel() -> channel
    80:85:void concurrencyChanged(long) -> concurrencyChanged
    89:89:io.vertx.core.spi.metrics.HttpClientMetrics metrics() -> metrics
    94:95:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    100:113:void createStream(io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.Handler) -> createStream
    117:123:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    127:150:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    41:41:io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    132:145:void lambda$onPushPromiseRead$1(io.netty.handler.codec.http2.Http2Headers,int,io.vertx.core.Handler) -> lambda$onPushPromiseRead$1
    120:121:void lambda$onHeadersRead$0(io.vertx.core.http.impl.Http2ClientConnection$Http2ClientStream,io.netty.handler.codec.http2.Http2Headers,boolean) -> lambda$onHeadersRead$0
    41:41:io.vertx.core.http.impl.pool.ConnectionListener access$000(io.vertx.core.http.impl.Http2ClientConnection) -> access$000
    41:41:io.vertx.core.http.impl.HttpClientImpl access$100(io.vertx.core.http.impl.Http2ClientConnection) -> access$100
io.vertx.core.http.impl.Http2ClientConnection$Http2ClientStream -> io.vertx.core.http.impl.Http2ClientConnection$Http2ClientStream:
    io.vertx.core.http.impl.HttpClientRequestBase request -> request
    io.vertx.core.http.impl.HttpClientResponseImpl response -> response
    boolean requestEnded -> requestEnded
    boolean responseEnded -> responseEnded
    160:162:void <init>(io.vertx.core.http.impl.Http2ClientConnection,io.vertx.core.http.impl.HttpClientRequestBase,io.netty.handler.codec.http2.Http2Stream,boolean) -> <init>
    166:166:io.vertx.core.http.HttpVersion version() -> version
    171:171:int id() -> id
    176:189:void handleEnd(io.vertx.core.MultiMap) -> handleEnd
    193:194:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    198:206:void handleReset(long) -> handleReset
    212:224:void handleClose() -> handleClose
    228:231:void checkDrained() -> checkDrained
    235:240:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    244:245:void handleCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> handleCustomFrame
    248:277:void handleHeaders(io.netty.handler.codec.http2.Http2Headers,boolean) -> handleHeaders
    280:290:void handleException(java.lang.Throwable) -> handleException
    293:293:io.vertx.core.Handler pushHandler() -> pushHandler
    298:299:void writeHead(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean) -> writeHead
    303:334:void writeHeadWithContent(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean,io.netty.buffer.ByteBuf,boolean) -> writeHeadWithContent
    338:347:void writeBuffer(io.netty.buffer.ByteBuf,boolean) -> writeBuffer
    351:352:void writeFrame(int,int,io.netty.buffer.ByteBuf) -> writeFrame
    356:356:io.vertx.core.Context getContext() -> getContext
    361:361:void doSetWriteQueueMaxSize(int) -> doSetWriteQueueMaxSize
    365:365:boolean isNotWritable() -> isNotWritable
    370:370:void beginRequest() -> beginRequest
    374:378:void endRequest() -> endRequest
    382:390:void reset(long) -> reset
    394:394:io.vertx.core.http.impl.HttpClientConnection connection() -> connection
    399:399:io.vertx.core.net.NetSocket createNetSocket() -> createNetSocket
    287:288:void lambda$handleException$1(java.lang.Throwable) -> lambda$handleException$1
    282:283:void lambda$handleException$0(java.lang.Throwable) -> lambda$handleException$0
io.vertx.core.http.impl.Http2ConnectionBase -> io.vertx.core.http.impl.Http2ConnectionBase:
    io.netty.util.collection.IntObjectMap streams -> streams
    io.netty.channel.ChannelHandlerContext handlerContext -> handlerContext
    io.vertx.core.http.impl.VertxHttp2ConnectionHandler handler -> handler
    boolean shutdown -> shutdown
    io.vertx.core.Handler remoteSettingsHandler -> remoteSettingsHandler
    java.util.ArrayDeque updateSettingsHandlers -> updateSettingsHandlers
    java.util.ArrayDeque pongHandlers -> pongHandlers
    io.netty.handler.codec.http2.Http2Settings localSettings -> localSettings
    io.netty.handler.codec.http2.Http2Settings remoteSettings -> remoteSettings
    io.vertx.core.Handler goAwayHandler -> goAwayHandler
    io.vertx.core.Handler shutdownHandler -> shutdownHandler
    io.vertx.core.Handler pingHandler -> pingHandler
    boolean closed -> closed
    boolean goneAway -> goneAway
    int windowSize -> windowSize
    long maxConcurrentStreams -> maxConcurrentStreams
    59:71:io.netty.buffer.ByteBuf safeBuffer(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBufAllocator) -> safeBuffer
    74:97:void <init>(io.vertx.core.impl.ContextImpl,io.vertx.core.http.impl.VertxHttp2ConnectionHandler) -> <init>
    100:100:io.vertx.core.impl.VertxInternal vertx() -> vertx
    104:106:io.vertx.core.net.NetSocket toNetSocket(io.vertx.core.http.impl.VertxHttp2Stream) -> toNetSocket
    111:113:void handleClosed() -> handleClosed
    117:117:io.vertx.core.impl.ContextImpl getContext() -> getContext
    123:123:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    126:126:boolean isClosed() -> isClosed
    130:140:void onConnectionError(java.lang.Throwable) -> onConnectionError
    143:147:void onStreamError(int,java.lang.Throwable) -> onStreamError
    150:154:void onStreamwritabilityChanged(io.netty.handler.codec.http2.Http2Stream) -> onStreamwritabilityChanged
    157:164:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    167:171:void onGoAwaySent(int,long,io.netty.buffer.ByteBuf) -> onGoAwaySent
    174:185:void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
    192:192:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    196:197:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    201:206:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    209:209:void onConnect() -> onConnect
    212:212:void concurrencyChanged(long) -> concurrencyChanged
    217:240:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    244:251:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    255:262:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    267:267:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    271:271:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    275:275:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    280:287:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
    291:297:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    301:316:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    321:321:int getWindowSize() -> getWindowSize
    327:333:io.vertx.core.http.HttpConnection setWindowSize(int) -> setWindowSize
    339:346:io.vertx.core.http.HttpConnection goAway(long,int,io.vertx.core.buffer.Buffer) -> goAway
    351:352:io.vertx.core.http.HttpConnection goAwayHandler(io.vertx.core.Handler) -> goAwayHandler
    357:358:io.vertx.core.http.HttpConnection shutdownHandler(io.vertx.core.Handler) -> shutdownHandler
    363:368:io.vertx.core.http.HttpConnection shutdown(long) -> shutdown
    373:373:io.vertx.core.http.HttpConnection shutdown() -> shutdown
    378:378:io.vertx.core.http.impl.Http2ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    383:385:void close() -> close
    389:390:io.vertx.core.http.HttpConnection remoteSettingsHandler(io.vertx.core.Handler) -> remoteSettingsHandler
    405:405:io.vertx.core.http.Http2Settings remoteSettings() -> remoteSettings
    410:410:io.vertx.core.http.Http2Settings settings() -> settings
    415:415:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings) -> updateSettings
    420:422:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings,io.vertx.core.Handler) -> updateSettings
    426:454:void updateSettings(io.netty.handler.codec.http2.Http2Settings,io.vertx.core.Handler) -> updateSettings
    458:468:io.vertx.core.http.HttpConnection ping(io.vertx.core.buffer.Buffer,io.vertx.core.Handler) -> ping
    473:474:io.vertx.core.http.HttpConnection pingHandler(io.vertx.core.Handler) -> pingHandler
    479:479:io.vertx.core.http.impl.Http2ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    485:497:void checkShutdownHandler() -> checkShutdownHandler
    49:49:io.vertx.core.net.impl.ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    49:49:io.vertx.core.net.impl.ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    49:49:io.vertx.core.http.HttpConnection exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    49:49:io.vertx.core.http.HttpConnection closeHandler(io.vertx.core.Handler) -> closeHandler
    492:493:void lambda$checkShutdownHandler$14() -> lambda$checkShutdownHandler$14
    462:467:void lambda$ping$13(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$ping$13
    435:453:void lambda$updateSettings$12(io.netty.handler.codec.http2.Http2Settings,io.vertx.core.Handler,io.vertx.core.Context,io.netty.util.concurrent.Future) -> lambda$updateSettings$12
    449:450:void lambda$null$11(io.vertx.core.Handler,io.netty.util.concurrent.Future,java.lang.Void) -> lambda$null$11
    438:444:void lambda$null$10(io.netty.handler.codec.http2.Http2Settings,io.vertx.core.Handler,io.vertx.core.Context) -> lambda$null$10
    441:442:void lambda$null$9(io.vertx.core.Handler,java.lang.Void) -> lambda$null$9
    307:311:void lambda$onDataRead$8(io.vertx.core.buffer.Buffer,io.vertx.core.http.impl.VertxHttp2Stream,int[]) -> lambda$onDataRead$8
    294:295:void lambda$onRstStreamRead$7(io.vertx.core.http.impl.VertxHttp2Stream,long) -> lambda$onRstStreamRead$7
    284:285:void lambda$onUnknownFrame$6(io.vertx.core.http.impl.VertxHttp2Stream,byte,io.netty.handler.codec.http2.Http2Flags,io.vertx.core.buffer.Buffer) -> lambda$onUnknownFrame$6
    258:260:void lambda$onPingAckRead$5(io.netty.buffer.ByteBuf,io.netty.channel.ChannelHandlerContext,io.vertx.core.Handler) -> lambda$onPingAckRead$5
    248:249:void lambda$onPingRead$4(io.vertx.core.Handler,io.vertx.core.buffer.Buffer) -> lambda$onPingRead$4
    233:234:void lambda$onSettingsRead$3(io.vertx.core.Handler,io.netty.handler.codec.http2.Http2Settings) -> lambda$onSettingsRead$3
    180:181:void lambda$onGoAwayReceived$2(io.vertx.core.Handler,long,int,io.vertx.core.buffer.Buffer) -> lambda$onGoAwayReceived$2
    161:162:void lambda$onStreamClosed$1(io.vertx.core.http.impl.VertxHttp2Stream) -> lambda$onStreamClosed$1
    133:136:void lambda$onConnectionError$0(io.vertx.core.http.impl.VertxHttp2Stream,java.lang.Throwable,java.lang.Void) -> lambda$onConnectionError$0
io.vertx.core.http.impl.Http2HeadersAdaptor -> io.vertx.core.http.impl.Http2HeadersAdaptor:
    io.netty.handler.codec.http2.Http2Headers headers -> headers
    java.util.Set names -> names
    32:46:java.lang.CharSequence toLowerCase(java.lang.CharSequence) -> toLowerCase
    53:64:void <init>(io.netty.handler.codec.http2.Http2Headers) -> <init>
    68:69:java.lang.String get(java.lang.String) -> get
    74:87:java.util.List getAll(java.lang.String) -> getAll
    92:95:java.util.List entries() -> entries
    100:100:boolean contains(java.lang.String) -> contains
    105:105:boolean isEmpty() -> isEmpty
    110:132:java.util.Set names() -> names
    137:138:io.vertx.core.MultiMap add(java.lang.String,java.lang.String) -> add
    143:144:io.vertx.core.MultiMap add(java.lang.String,java.lang.Iterable) -> add
    149:152:io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap) -> addAll
    157:160:io.vertx.core.MultiMap addAll(java.util.Map) -> addAll
    165:166:io.vertx.core.MultiMap set(java.lang.String,java.lang.String) -> set
    171:172:io.vertx.core.MultiMap set(java.lang.String,java.lang.Iterable) -> set
    177:181:io.vertx.core.MultiMap setAll(io.vertx.core.MultiMap) -> setAll
    186:187:io.vertx.core.MultiMap remove(java.lang.String) -> remove
    192:193:io.vertx.core.MultiMap clear() -> clear
    198:198:java.util.Iterator iterator() -> iterator
    203:203:int size() -> size
    208:211:io.vertx.core.MultiMap setAll(java.util.Map) -> setAll
    216:217:java.lang.String get(java.lang.CharSequence) -> get
    222:223:java.util.List getAll(java.lang.CharSequence) -> getAll
    228:228:boolean contains(java.lang.CharSequence) -> contains
    233:234:io.vertx.core.MultiMap add(java.lang.CharSequence,java.lang.CharSequence) -> add
    239:240:io.vertx.core.MultiMap add(java.lang.CharSequence,java.lang.Iterable) -> add
    245:246:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.CharSequence) -> set
    251:252:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.Iterable) -> set
    257:258:io.vertx.core.MultiMap remove(java.lang.CharSequence) -> remove
    94:94:java.util.AbstractMap$SimpleEntry lambda$entries$0(java.lang.CharSequence) -> lambda$entries$0
    29:29:io.netty.handler.codec.http2.Http2Headers access$000(io.vertx.core.http.impl.Http2HeadersAdaptor) -> access$000
io.vertx.core.http.impl.Http2HeadersAdaptor$1 -> io.vertx.core.http.impl.Http2HeadersAdaptor$1:
    java.util.List val$all -> val$all
    io.vertx.core.http.impl.Http2HeadersAdaptor this$0 -> this$0
    76:76:void <init>(io.vertx.core.http.impl.Http2HeadersAdaptor,java.util.List) -> <init>
    79:79:java.lang.String get(int) -> get
    83:83:int size() -> size
    76:76:java.lang.Object get(int) -> get
io.vertx.core.http.impl.Http2HeadersAdaptor$2 -> io.vertx.core.http.impl.Http2HeadersAdaptor$2:
    io.vertx.core.http.impl.Http2HeadersAdaptor this$0 -> this$0
    111:111:void <init>(io.vertx.core.http.impl.Http2HeadersAdaptor) -> <init>
    114:115:java.util.Iterator iterator() -> iterator
    128:128:int size() -> size
io.vertx.core.http.impl.Http2HeadersAdaptor$2$1 -> io.vertx.core.http.impl.Http2HeadersAdaptor$2$1:
    java.util.Iterator val$it -> val$it
    io.vertx.core.http.impl.Http2HeadersAdaptor$2 this$1 -> this$1
    115:115:void <init>(io.vertx.core.http.impl.Http2HeadersAdaptor$2,java.util.Iterator) -> <init>
    118:118:boolean hasNext() -> hasNext
    122:122:java.lang.String next() -> next
    115:115:java.lang.Object next() -> next
io.vertx.core.http.impl.Http2ServerConnection -> io.vertx.core.http.impl.Http2ServerConnection:
    io.vertx.core.http.HttpServerOptions options -> options
    java.lang.String serverOrigin -> serverOrigin
    io.vertx.core.Handler requestHandler -> requestHandler
    io.vertx.core.spi.metrics.HttpServerMetrics metrics -> metrics
    java.lang.Long maxConcurrentStreams -> maxConcurrentStreams
    int concurrentStreams -> concurrentStreams
    java.util.ArrayDeque pendingPushes -> pendingPushes
    48:63:void <init>(io.vertx.core.impl.ContextImpl,java.lang.String,io.vertx.core.http.impl.VertxHttp2ConnectionHandler,io.vertx.core.http.HttpServerOptions,io.vertx.core.Handler,io.vertx.core.spi.metrics.HttpServerMetrics) -> <init>
    66:66:io.vertx.core.spi.metrics.HttpServerMetrics metrics() -> metrics
    70:94:boolean isMalformedRequest(io.netty.handler.codec.http2.Http2Headers) -> isMalformedRequest
    100:133:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    137:142:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    145:184:void sendPush(int,java.lang.String,io.vertx.core.http.HttpMethod,io.vertx.core.MultiMap,java.lang.String,io.vertx.core.Handler) -> sendPush
    187:189:void updateSettings(io.netty.handler.codec.http2.Http2Settings,io.vertx.core.Handler) -> updateSettings
    39:39:io.vertx.core.http.impl.Http2ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    39:39:io.vertx.core.http.HttpConnection pingHandler(io.vertx.core.Handler) -> pingHandler
    39:39:io.vertx.core.http.HttpConnection ping(io.vertx.core.buffer.Buffer,io.vertx.core.Handler) -> ping
    39:39:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings,io.vertx.core.Handler) -> updateSettings
    39:39:io.vertx.core.http.HttpConnection updateSettings(io.vertx.core.http.Http2Settings) -> updateSettings
    39:39:io.vertx.core.http.Http2Settings settings() -> settings
    39:39:io.vertx.core.http.Http2Settings remoteSettings() -> remoteSettings
    39:39:io.vertx.core.http.HttpConnection remoteSettingsHandler(io.vertx.core.Handler) -> remoteSettingsHandler
    39:39:void close() -> close
    39:39:io.vertx.core.http.impl.Http2ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    39:39:io.vertx.core.http.HttpConnection shutdown() -> shutdown
    39:39:io.vertx.core.http.HttpConnection shutdown(long) -> shutdown
    39:39:io.vertx.core.http.HttpConnection shutdownHandler(io.vertx.core.Handler) -> shutdownHandler
    39:39:io.vertx.core.http.HttpConnection goAwayHandler(io.vertx.core.Handler) -> goAwayHandler
    39:39:io.vertx.core.http.HttpConnection goAway(long,int,io.vertx.core.buffer.Buffer) -> goAway
    39:39:io.vertx.core.http.HttpConnection setWindowSize(int) -> setWindowSize
    39:39:int getWindowSize() -> getWindowSize
    39:39:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    39:39:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    39:39:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
    39:39:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    39:39:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    39:39:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    39:39:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    39:39:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    39:39:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    39:39:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    39:39:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    39:39:io.vertx.core.impl.ContextImpl getContext() -> getContext
    39:39:void handleClosed() -> handleClosed
    39:39:io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    157:157:void lambda$sendPush$1(io.netty.handler.codec.http2.Http2Headers,java.util.Map$Entry) -> lambda$sendPush$1
    119:126:void lambda$onHeadersRead$0(io.vertx.core.http.impl.Http2ServerRequestImpl,io.netty.channel.ChannelHandlerContext) -> lambda$onHeadersRead$0
    39:39:java.lang.Long access$000(io.vertx.core.http.impl.Http2ServerConnection) -> access$000
    39:39:int access$100(io.vertx.core.http.impl.Http2ServerConnection) -> access$100
    39:39:int access$108(io.vertx.core.http.impl.Http2ServerConnection) -> access$108
    39:39:io.vertx.core.impl.ContextImpl access$200(io.vertx.core.http.impl.Http2ServerConnection) -> access$200
    39:39:java.util.ArrayDeque access$300(io.vertx.core.http.impl.Http2ServerConnection) -> access$300
    39:39:io.vertx.core.impl.ContextImpl access$400(io.vertx.core.http.impl.Http2ServerConnection) -> access$400
    39:39:int access$110(io.vertx.core.http.impl.Http2ServerConnection) -> access$110
io.vertx.core.http.impl.Http2ServerConnection$1 -> io.vertx.core.http.impl.Http2ServerConnection$1:
    io.netty.handler.codec.http2.Http2Headers val$headers_ -> val$headers_
    io.vertx.core.http.HttpMethod val$method -> val$method
    java.lang.String val$path -> val$path
    io.vertx.core.Handler val$completionHandler -> val$completionHandler
    io.vertx.core.http.impl.Http2ServerConnection this$0 -> this$0
    159:159:void <init>(io.vertx.core.http.impl.Http2ServerConnection,io.netty.handler.codec.http2.Http2Headers,io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler) -> <init>
    162:182:void handle(io.vertx.core.AsyncResult) -> handle
    159:159:void handle(java.lang.Object) -> handle
    179:180:void lambda$handle$0(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$handle$0
io.vertx.core.http.impl.Http2ServerConnection$Push -> io.vertx.core.http.impl.Http2ServerConnection$Push:
    io.vertx.core.http.HttpMethod method -> method
    java.lang.String uri -> uri
    java.lang.String contentEncoding -> contentEncoding
    io.vertx.core.http.impl.Http2ServerResponseImpl response -> response
    io.vertx.core.Future completionHandler -> completionHandler
    io.vertx.core.http.impl.Http2ServerConnection this$0 -> this$0
    204:210:void <init>(io.vertx.core.http.impl.Http2ServerConnection,io.netty.handler.codec.http2.Http2Stream,java.lang.String,io.vertx.core.http.HttpMethod,java.lang.String,boolean,io.vertx.core.Handler) -> <init>
    214:214:void handleEnd(io.vertx.core.MultiMap) -> handleEnd
    218:218:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    222:225:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    229:234:void handleReset(long) -> handleReset
    238:241:void handleException(java.lang.Throwable) -> handleException
    245:258:void handleClose() -> handleClose
    261:265:void complete() -> complete
    253:254:void lambda$handleClose$0(io.vertx.core.http.impl.Http2ServerConnection$Push,java.lang.Void) -> lambda$handleClose$0
io.vertx.core.http.impl.Http2ServerRequestImpl -> io.vertx.core.http.impl.Http2ServerRequestImpl:
    io.vertx.core.logging.Logger log -> log
    java.lang.String serverOrigin -> serverOrigin
    io.vertx.core.http.impl.Http2ServerResponseImpl response -> response
    io.netty.handler.codec.http2.Http2Headers headers -> headers
    io.vertx.core.MultiMap headersMap -> headersMap
    io.vertx.core.MultiMap params -> params
    io.vertx.core.http.HttpMethod method -> method
    java.lang.String rawMethod -> rawMethod
    java.lang.String absoluteURI -> absoluteURI
    java.lang.String uri -> uri
    java.lang.String path -> path
    java.lang.String query -> query
    io.vertx.core.MultiMap attributes -> attributes
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler endHandler -> endHandler
    boolean ended -> ended
    long bytesRead -> bytesRead
    io.vertx.core.Handler uploadHandler -> uploadHandler
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder postRequestDecoder -> postRequestDecoder
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler customFrameHandler -> customFrameHandler
    io.vertx.core.net.NetSocket netSocket -> netSocket
    87:99:void <init>(io.vertx.core.http.impl.Http2ServerConnection,io.netty.handler.codec.http2.Http2Stream,io.vertx.core.spi.metrics.HttpServerMetrics,java.lang.String,io.netty.handler.codec.http2.Http2Headers,java.lang.String,boolean) -> <init>
    103:104:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    108:112:void handleException(java.lang.Throwable) -> handleException
    116:123:void handleClose() -> handleClose
    127:130:void handleCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> handleCustomFrame
    133:144:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    147:175:void handleEnd(io.vertx.core.MultiMap) -> handleEnd
    179:187:void handleReset(long) -> handleReset
    190:193:void checkEnded() -> checkEnded
    197:200:io.vertx.core.http.HttpServerRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    205:211:io.vertx.core.http.HttpServerRequest handler(io.vertx.core.Handler) -> handler
    216:219:io.vertx.core.http.HttpServerRequest pause() -> pause
    224:227:io.vertx.core.http.HttpServerRequest resume() -> resume
    232:238:io.vertx.core.http.HttpServerRequest endHandler(io.vertx.core.Handler) -> endHandler
    243:243:io.vertx.core.http.HttpVersion version() -> version
    248:254:io.vertx.core.http.HttpMethod method() -> method
    259:264:java.lang.String rawMethod() -> rawMethod
    269:269:boolean isSSL() -> isSSL
    274:282:java.lang.String uri() -> uri
    287:295:java.lang.String path() -> path
    300:308:java.lang.String query() -> query
    313:314:java.lang.String scheme() -> scheme
    319:320:java.lang.String host() -> host
    325:325:io.vertx.core.http.impl.Http2ServerResponseImpl response() -> response
    330:335:io.vertx.core.MultiMap headers() -> headers
    340:340:java.lang.String getHeader(java.lang.String) -> getHeader
    345:345:java.lang.String getHeader(java.lang.CharSequence) -> getHeader
    350:355:io.vertx.core.MultiMap params() -> params
    360:360:java.lang.String getParam(java.lang.String) -> getParam
    365:365:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    370:370:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    375:375:javax.net.ssl.SSLSession sslSession() -> sslSession
    380:380:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    385:397:java.lang.String absoluteURI() -> absoluteURI
    402:409:io.vertx.core.net.NetSocket netSocket() -> netSocket
    414:441:io.vertx.core.http.HttpServerRequest setExpectMultipart(boolean) -> setExpectMultipart
    446:448:boolean isExpectMultipart() -> isExpectMultipart
    453:459:io.vertx.core.http.HttpServerRequest uploadHandler(io.vertx.core.Handler) -> uploadHandler
    464:470:io.vertx.core.MultiMap formAttributes() -> formAttributes
    475:475:java.lang.String getFormAttribute(java.lang.String) -> getFormAttribute
    480:480:io.vertx.core.http.ServerWebSocket upgrade() -> upgrade
    485:487:boolean isEnded() -> isEnded
    492:495:io.vertx.core.http.HttpServerRequest customFrameHandler(io.vertx.core.Handler) -> customFrameHandler
    500:500:io.vertx.core.http.HttpConnection connection() -> connection
    55:55:void doResume() -> doResume
    55:55:void doPause() -> doPause
    55:55:io.vertx.core.http.HttpServerResponse response() -> response
    55:55:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    55:55:io.vertx.core.streams.ReadStream resume() -> resume
    55:55:io.vertx.core.streams.ReadStream pause() -> pause
    55:55:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    55:55:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    55:55:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    433:433:io.vertx.core.Handler lambda$setExpectMultipart$0() -> lambda$setExpectMultipart$0
    57:57:void <clinit>() -> <clinit>
io.vertx.core.http.impl.Http2ServerResponseImpl -> io.vertx.core.http.impl.Http2ServerResponseImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.http.impl.VertxHttp2Stream stream -> stream
    io.netty.channel.ChannelHandlerContext ctx -> ctx
    io.vertx.core.http.impl.Http2ServerConnection conn -> conn
    boolean push -> push
    java.lang.Object metric -> metric
    java.lang.String host -> host
    io.netty.handler.codec.http2.Http2Headers headers -> headers
    io.vertx.core.http.impl.Http2HeadersAdaptor headersMap -> headersMap
    io.netty.handler.codec.http2.Http2Headers trailers -> trailers
    io.vertx.core.http.impl.Http2HeadersAdaptor trailedMap -> trailedMap
    boolean chunked -> chunked
    boolean headWritten -> headWritten
    boolean ended -> ended
    int statusCode -> statusCode
    java.lang.String statusMessage -> statusMessage
    io.vertx.core.Handler drainHandler -> drainHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler headersEndHandler -> headersEndHandler
    io.vertx.core.Handler bodyEndHandler -> bodyEndHandler
    io.vertx.core.Handler closeHandler -> closeHandler
    io.vertx.core.Handler endHandler -> endHandler
    long bytesWritten -> bytesWritten
    int numPush -> numPush
    boolean inHandler -> inHandler
    58:89:void <init>(io.vertx.core.http.impl.Http2ServerConnection,io.vertx.core.http.impl.VertxHttp2Stream,java.lang.Object,boolean,java.lang.String,java.lang.String) -> <init>
    58:110:void <init>(io.vertx.core.http.impl.Http2ServerConnection,io.vertx.core.http.impl.VertxHttp2Stream,io.vertx.core.http.HttpMethod,java.lang.String,boolean,java.lang.String) -> <init>
    113:114:void beginRequest() -> beginRequest
    117:118:boolean endRequest() -> endRequest
    122:124:void callReset(long) -> callReset
    127:130:void handleError(java.lang.Throwable) -> handleError
    133:134:void handleClose() -> handleClose
    137:140:void checkHeadWritten() -> checkHeadWritten
    144:150:io.vertx.core.http.HttpServerResponse exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    155:157:int getStatusCode() -> getStatusCode
    162:169:io.vertx.core.http.HttpServerResponse setStatusCode(int) -> setStatusCode
    174:179:java.lang.String getStatusMessage() -> getStatusMessage
    184:188:io.vertx.core.http.HttpServerResponse setStatusMessage(java.lang.String) -> setStatusMessage
    193:197:io.vertx.core.http.HttpServerResponse setChunked(boolean) -> setChunked
    202:204:boolean isChunked() -> isChunked
    209:214:io.vertx.core.MultiMap headers() -> headers
    219:223:io.vertx.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.String) -> putHeader
    228:232:io.vertx.core.http.HttpServerResponse putHeader(java.lang.CharSequence,java.lang.CharSequence) -> putHeader
    237:241:io.vertx.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.Iterable) -> putHeader
    246:250:io.vertx.core.http.HttpServerResponse putHeader(java.lang.CharSequence,java.lang.Iterable) -> putHeader
    255:260:io.vertx.core.MultiMap trailers() -> trailers
    265:269:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.String,java.lang.String) -> putTrailer
    274:278:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.CharSequence,java.lang.CharSequence) -> putTrailer
    283:287:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.String,java.lang.Iterable) -> putTrailer
    292:296:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.CharSequence,java.lang.Iterable) -> putTrailer
    301:307:io.vertx.core.http.HttpServerResponse closeHandler(io.vertx.core.Handler) -> closeHandler
    312:318:io.vertx.core.http.HttpServerResponse endHandler(io.vertx.core.Handler) -> endHandler
    323:328:io.vertx.core.http.HttpServerResponse writeContinue() -> writeContinue
    333:334:io.vertx.core.http.HttpServerResponse write(io.vertx.core.buffer.Buffer) -> write
    339:339:io.vertx.core.http.HttpServerResponse write(java.lang.String,java.lang.String) -> write
    344:344:io.vertx.core.http.HttpServerResponse write(java.lang.String) -> write
    348:349:io.vertx.core.http.impl.Http2ServerResponseImpl write(io.netty.buffer.ByteBuf) -> write
    354:355:void end(java.lang.String) -> end
    359:360:void end(java.lang.String,java.lang.String) -> end
    364:365:void end(io.vertx.core.buffer.Buffer) -> end
    369:370:void end() -> end
    373:376:void toNetSocket() -> toNetSocket
    379:382:void end(io.netty.buffer.ByteBuf) -> end
    385:397:boolean checkSendHeaders(boolean) -> checkSendHeaders
    402:428:void write(io.netty.buffer.ByteBuf,boolean) -> write
    432:438:io.vertx.core.http.HttpServerResponse writeCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> writeCustomFrame
    442:445:void checkEnded() -> checkEnded
    448:469:void handleEnded(boolean) -> handleEnded
    472:475:void writabilityChanged() -> writabilityChanged
    479:482:boolean writeQueueFull() -> writeQueueFull
    487:491:io.vertx.core.http.HttpServerResponse setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    496:502:io.vertx.core.http.HttpServerResponse drainHandler(io.vertx.core.Handler) -> drainHandler
    507:507:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long) -> sendFile
    512:577:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long,io.vertx.core.Handler) -> sendFile
    582:583:void close() -> close
    587:589:boolean ended() -> ended
    594:594:boolean closed() -> closed
    599:601:boolean headWritten() -> headWritten
    606:609:io.vertx.core.http.HttpServerResponse headersEndHandler(io.vertx.core.Handler) -> headersEndHandler
    614:617:io.vertx.core.http.HttpServerResponse bodyEndHandler(io.vertx.core.Handler) -> bodyEndHandler
    622:624:long bytesWritten() -> bytesWritten
    629:629:int streamId() -> streamId
    634:640:void reset(long) -> reset
    644:644:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.Handler) -> push
    649:649:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> push
    654:665:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> push
    670:670:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler) -> push
    48:48:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    48:48:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    48:48:void end(java.lang.Object) -> end
    48:48:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    48:48:io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    48:48:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    570:575:void lambda$sendFile$5(io.vertx.core.http.impl.FileStreamChannel,java.io.RandomAccessFile,io.vertx.core.Future,io.netty.channel.ChannelFuture) -> lambda$sendFile$5
    553:562:void lambda$sendFile$4(io.vertx.core.Handler,io.vertx.core.Context,io.vertx.core.AsyncResult) -> lambda$sendFile$4
    559:560:void lambda$null$3(io.vertx.core.Handler,java.lang.Void) -> lambda$null$3
    532:532:void lambda$sendFile$2(io.vertx.core.Handler,java.io.IOException,java.lang.Void) -> lambda$sendFile$2
    520:520:void lambda$sendFile$1(io.vertx.core.Handler,java.lang.Void) -> lambda$sendFile$1
    460:460:void lambda$handleEnded$0(java.lang.Void) -> lambda$handleEnded$0
    50:50:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpChannelConnector -> io.vertx.core.http.impl.HttpChannelConnector:
    io.vertx.core.http.impl.HttpClientImpl client -> client
    io.vertx.core.http.HttpClientOptions options -> options
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    io.vertx.core.http.HttpVersion version -> version
    long weight -> weight
    long http1Weight -> http1Weight
    long http2Weight -> http2Weight
    long http2MaxConcurrency -> http2MaxConcurrency
    long http1MaxConcurrency -> http1MaxConcurrency
    boolean ssl -> ssl
    java.lang.String peerHost -> peerHost
    java.lang.String host -> host
    int port -> port
    java.lang.Object metric -> metric
    68:84:void <init>(io.vertx.core.http.impl.HttpClientImpl,java.lang.Object,io.vertx.core.http.HttpVersion,boolean,java.lang.String,java.lang.String,int) -> <init>
    88:89:void close(io.vertx.core.http.impl.HttpClientConnection) -> close
    95:216:long connect(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl) -> connect
    220:221:void applyConnectionOptions(io.netty.bootstrap.Bootstrap) -> applyConnectionOptions
    224:227:void applyHttp2ConnectionOptions(io.netty.channel.ChannelPipeline) -> applyHttp2ConnectionOptions
    230:246:void applyHttp1xConnectionOptions(io.netty.channel.ChannelPipeline) -> applyHttp1xConnectionOptions
    249:254:void handshakeFailure(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,java.lang.Throwable,io.vertx.core.http.impl.pool.ConnectionListener) -> handshakeFailure
    263:280:void http1xConnected(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.http.HttpVersion,java.lang.String,int,boolean,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> http1xConnected
    287:319:void http2Connected(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> http2Connected
    322:329:void connectFailed(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.http.impl.pool.ConnectionListener,java.lang.Throwable) -> connectFailed
    44:44:void close(java.lang.Object) -> close
    311:315:void lambda$http2Connected$7(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.http.impl.Http2ClientConnection) -> lambda$http2Connected$7
    297:309:void lambda$http2Connected$6(io.vertx.core.http.impl.pool.ConnectionListener,io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,io.vertx.core.http.impl.Http2ClientConnection) -> lambda$http2Connected$6
    293:293:io.vertx.core.http.impl.Http2ClientConnection lambda$http2Connected$5(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.vertx.core.http.impl.VertxHttp2ConnectionHandler) -> lambda$http2Connected$5
    277:278:void lambda$http1xConnected$4(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.http.impl.Http1xClientConnection) -> lambda$http1xConnected$4
    274:275:void lambda$http1xConnected$3(io.vertx.core.http.impl.pool.ConnectionListener,io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,io.vertx.core.http.impl.Http1xClientConnection) -> lambda$http1xConnected$3
    196:212:void lambda$connect$2(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.vertx.core.AsyncResult) -> lambda$connect$2
    113:192:void lambda$connect$1(boolean,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> lambda$connect$1
    119:138:void lambda$null$0(io.netty.handler.ssl.SslHandler,boolean,io.netty.channel.Channel,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.netty.util.concurrent.Future) -> lambda$null$0
    44:44:java.lang.String access$000(io.vertx.core.http.impl.HttpChannelConnector) -> access$000
    44:44:int access$100(io.vertx.core.http.impl.HttpChannelConnector) -> access$100
    44:44:void access$200(io.vertx.core.http.impl.HttpChannelConnector,io.netty.channel.ChannelPipeline) -> access$200
    44:44:java.lang.String access$300(io.vertx.core.http.impl.HttpChannelConnector) -> access$300
    44:44:void access$400(io.vertx.core.http.impl.HttpChannelConnector,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.http.HttpVersion,java.lang.String,int,boolean,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> access$400
    44:44:void access$500(io.vertx.core.http.impl.HttpChannelConnector,io.netty.channel.ChannelPipeline) -> access$500
    44:44:void access$600(io.vertx.core.http.impl.HttpChannelConnector,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> access$600
io.vertx.core.http.impl.HttpChannelConnector$1 -> io.vertx.core.http.impl.HttpChannelConnector$1:
    io.netty.channel.ChannelPipeline val$pipeline -> val$pipeline
    io.vertx.core.http.impl.pool.ConnectionListener val$listener -> val$listener
    io.vertx.core.impl.ContextImpl val$context -> val$context
    io.netty.channel.Channel val$ch -> val$ch
    io.vertx.core.http.impl.HttpChannelConnector this$0 -> this$0
    176:176:void <init>(io.vertx.core.http.impl.HttpChannelConnector,io.vertx.core.http.Http2Settings,io.netty.channel.ChannelPipeline,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl,io.netty.channel.Channel) -> <init>
    179:181:void upgradeTo(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse) -> upgradeTo
io.vertx.core.http.impl.HttpChannelConnector$1UpgradeRequestHandler -> io.vertx.core.http.impl.HttpChannelConnector$1UpgradeRequestHandler:
    io.netty.handler.codec.http.HttpClientCodec val$httpCodec -> val$httpCodec
    io.netty.channel.Channel val$ch -> val$ch
    io.vertx.core.http.impl.pool.ConnectionListener val$listener -> val$listener
    io.vertx.core.impl.ContextImpl val$context -> val$context
    io.vertx.core.http.impl.HttpChannelConnector this$0 -> this$0
    143:143:void <init>(io.vertx.core.http.impl.HttpChannelConnector,io.netty.handler.codec.http.HttpClientCodec,io.netty.channel.Channel,io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl) -> <init>
    146:155:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    158:166:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    169:174:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
io.vertx.core.http.impl.HttpChunkContentCompressor -> io.vertx.core.http.impl.HttpChunkContentCompressor:
    27:39:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
    42:43:void <init>(int) -> <init>
io.vertx.core.http.impl.HttpClientConnection -> io.vertx.core.http.impl.HttpClientConnection:
    io.netty.channel.Channel channel() -> channel
    void reportBytesWritten(long) -> reportBytesWritten
    void reportBytesRead(long) -> reportBytesRead
    void close() -> close
    void createStream(io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.Handler) -> createStream
    io.vertx.core.impl.ContextImpl getContext() -> getContext
io.vertx.core.http.impl.HttpClientImpl -> io.vertx.core.http.impl.HttpClientImpl:
    java.util.function.Function DEFAULT_HANDLER -> DEFAULT_HANDLER
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.http.HttpClientOptions options -> options
    io.vertx.core.impl.ContextImpl creatingContext -> creatingContext
    io.vertx.core.http.impl.ConnectionManager websocketCM -> websocketCM
    io.vertx.core.http.impl.ConnectionManager httpCM -> httpCM
    io.vertx.core.Closeable closeHook -> closeHook
    io.vertx.core.net.ProxyType proxyType -> proxyType
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    io.vertx.core.spi.metrics.HttpClientMetrics metrics -> metrics
    boolean keepAlive -> keepAlive
    boolean pipelining -> pipelining
    boolean closed -> closed
    java.util.function.Function redirectHandler -> redirectHandler
    65:164:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.HttpClientOptions) -> <init>
    167:167:io.vertx.core.spi.metrics.HttpClientMetrics metrics() -> metrics
    172:172:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> websocket
    177:178:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> websocket
    183:183:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    187:188:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    193:193:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.Handler) -> websocket
    198:198:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    203:203:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.Handler) -> websocket
    208:209:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> websocket
    214:214:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    219:220:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    225:225:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> websocket
    230:230:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    235:235:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler) -> websocket
    240:241:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler) -> websocket
    246:246:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    252:253:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    258:258:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler) -> websocket
    264:264:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    269:270:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler) -> websocket
    276:277:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler) -> websocket
    282:283:io.vertx.core.http.HttpClient websocketAbs(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocketAbs
    288:289:io.vertx.core.http.HttpClient websocket(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    295:296:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    301:301:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler) -> websocket
    307:307:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    312:312:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.Handler) -> websocket
    317:317:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    322:322:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> websocket
    327:327:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    332:332:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler) -> websocket
    337:337:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    342:342:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler) -> websocket
    347:347:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler) -> websocket
    353:353:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(io.vertx.core.http.RequestOptions) -> websocketStream
    358:358:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(int,java.lang.String,java.lang.String) -> websocketStream
    363:363:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,java.lang.String) -> websocketStream
    368:368:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap) -> websocketStream
    373:373:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    378:378:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    383:383:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    388:388:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    393:393:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    400:422:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStreamAbs(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStreamAbs
    427:427:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    433:433:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    438:438:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    443:443:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String) -> websocketStream
    448:448:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    453:453:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    458:458:io.vertx.core.http.impl.HttpClientImpl$WebSocketStream websocketStream(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    463:464:io.vertx.core.http.HttpClientRequest requestAbs(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler) -> requestAbs
    469:469:io.vertx.core.http.HttpClientRequest get(io.vertx.core.http.RequestOptions) -> get
    474:475:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> request
    480:480:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.Handler) -> request
    485:485:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String) -> request
    490:490:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler) -> request
    495:517:io.vertx.core.http.HttpClientRequest requestAbs(io.vertx.core.http.HttpMethod,java.lang.String) -> requestAbs
    522:522:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,int,java.lang.String,java.lang.String) -> request
    527:527:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> request
    532:532:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,io.vertx.core.http.RequestOptions) -> request
    537:537:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String) -> request
    542:542:io.vertx.core.http.HttpClientRequest get(int,java.lang.String,java.lang.String) -> get
    547:547:io.vertx.core.http.HttpClientRequest get(java.lang.String,java.lang.String) -> get
    552:552:io.vertx.core.http.HttpClientRequest get(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> get
    557:557:io.vertx.core.http.HttpClientRequest get(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> get
    562:562:io.vertx.core.http.HttpClientRequest get(java.lang.String,java.lang.String,io.vertx.core.Handler) -> get
    567:567:io.vertx.core.http.HttpClientRequest get(java.lang.String) -> get
    572:572:io.vertx.core.http.HttpClientRequest get(java.lang.String,io.vertx.core.Handler) -> get
    577:577:io.vertx.core.http.HttpClientRequest getAbs(java.lang.String) -> getAbs
    582:582:io.vertx.core.http.HttpClientRequest getAbs(java.lang.String,io.vertx.core.Handler) -> getAbs
    587:587:io.vertx.core.http.HttpClient getNow(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> getNow
    592:593:io.vertx.core.http.HttpClient getNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> getNow
    598:598:io.vertx.core.http.HttpClient getNow(java.lang.String,java.lang.String,io.vertx.core.Handler) -> getNow
    603:604:io.vertx.core.http.HttpClient getNow(java.lang.String,io.vertx.core.Handler) -> getNow
    609:609:io.vertx.core.http.HttpClientRequest post(io.vertx.core.http.RequestOptions) -> post
    614:614:io.vertx.core.http.HttpClientRequest post(int,java.lang.String,java.lang.String) -> post
    619:619:io.vertx.core.http.HttpClientRequest post(java.lang.String,java.lang.String) -> post
    624:624:io.vertx.core.http.HttpClientRequest post(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> post
    629:629:io.vertx.core.http.HttpClientRequest post(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> post
    634:634:io.vertx.core.http.HttpClientRequest post(java.lang.String,java.lang.String,io.vertx.core.Handler) -> post
    639:639:io.vertx.core.http.HttpClientRequest post(java.lang.String) -> post
    644:644:io.vertx.core.http.HttpClientRequest post(java.lang.String,io.vertx.core.Handler) -> post
    649:649:io.vertx.core.http.HttpClientRequest postAbs(java.lang.String) -> postAbs
    654:654:io.vertx.core.http.HttpClientRequest postAbs(java.lang.String,io.vertx.core.Handler) -> postAbs
    659:659:io.vertx.core.http.HttpClientRequest head(io.vertx.core.http.RequestOptions) -> head
    664:664:io.vertx.core.http.HttpClientRequest head(int,java.lang.String,java.lang.String) -> head
    669:669:io.vertx.core.http.HttpClientRequest head(java.lang.String,java.lang.String) -> head
    674:674:io.vertx.core.http.HttpClientRequest head(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> head
    679:679:io.vertx.core.http.HttpClientRequest head(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> head
    684:684:io.vertx.core.http.HttpClientRequest head(java.lang.String,java.lang.String,io.vertx.core.Handler) -> head
    689:689:io.vertx.core.http.HttpClientRequest head(java.lang.String) -> head
    694:694:io.vertx.core.http.HttpClientRequest head(java.lang.String,io.vertx.core.Handler) -> head
    699:699:io.vertx.core.http.HttpClientRequest headAbs(java.lang.String) -> headAbs
    704:704:io.vertx.core.http.HttpClientRequest headAbs(java.lang.String,io.vertx.core.Handler) -> headAbs
    709:709:io.vertx.core.http.HttpClient headNow(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> headNow
    714:715:io.vertx.core.http.HttpClient headNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> headNow
    720:720:io.vertx.core.http.HttpClient headNow(java.lang.String,java.lang.String,io.vertx.core.Handler) -> headNow
    725:726:io.vertx.core.http.HttpClient headNow(java.lang.String,io.vertx.core.Handler) -> headNow
    731:731:io.vertx.core.http.HttpClientRequest options(io.vertx.core.http.RequestOptions) -> options
    736:736:io.vertx.core.http.HttpClientRequest options(int,java.lang.String,java.lang.String) -> options
    741:741:io.vertx.core.http.HttpClientRequest options(java.lang.String,java.lang.String) -> options
    746:746:io.vertx.core.http.HttpClientRequest options(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> options
    751:751:io.vertx.core.http.HttpClientRequest options(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> options
    756:756:io.vertx.core.http.HttpClientRequest options(java.lang.String,java.lang.String,io.vertx.core.Handler) -> options
    761:761:io.vertx.core.http.HttpClientRequest options(java.lang.String) -> options
    766:766:io.vertx.core.http.HttpClientRequest options(java.lang.String,io.vertx.core.Handler) -> options
    771:771:io.vertx.core.http.HttpClientRequest optionsAbs(java.lang.String) -> optionsAbs
    776:776:io.vertx.core.http.HttpClientRequest optionsAbs(java.lang.String,io.vertx.core.Handler) -> optionsAbs
    781:781:io.vertx.core.http.HttpClient optionsNow(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> optionsNow
    786:787:io.vertx.core.http.HttpClient optionsNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> optionsNow
    792:792:io.vertx.core.http.HttpClient optionsNow(java.lang.String,java.lang.String,io.vertx.core.Handler) -> optionsNow
    797:798:io.vertx.core.http.HttpClient optionsNow(java.lang.String,io.vertx.core.Handler) -> optionsNow
    803:803:io.vertx.core.http.HttpClientRequest put(io.vertx.core.http.RequestOptions) -> put
    808:808:io.vertx.core.http.HttpClientRequest put(int,java.lang.String,java.lang.String) -> put
    813:813:io.vertx.core.http.HttpClientRequest put(java.lang.String,java.lang.String) -> put
    818:818:io.vertx.core.http.HttpClientRequest put(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> put
    823:823:io.vertx.core.http.HttpClientRequest put(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> put
    828:828:io.vertx.core.http.HttpClientRequest put(java.lang.String,java.lang.String,io.vertx.core.Handler) -> put
    833:833:io.vertx.core.http.HttpClientRequest put(java.lang.String) -> put
    838:838:io.vertx.core.http.HttpClientRequest put(java.lang.String,io.vertx.core.Handler) -> put
    843:843:io.vertx.core.http.HttpClientRequest putAbs(java.lang.String) -> putAbs
    848:848:io.vertx.core.http.HttpClientRequest putAbs(java.lang.String,io.vertx.core.Handler) -> putAbs
    853:853:io.vertx.core.http.HttpClientRequest delete(io.vertx.core.http.RequestOptions) -> delete
    858:858:io.vertx.core.http.HttpClientRequest delete(int,java.lang.String,java.lang.String) -> delete
    863:863:io.vertx.core.http.HttpClientRequest delete(java.lang.String,java.lang.String) -> delete
    868:868:io.vertx.core.http.HttpClientRequest delete(io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> delete
    873:873:io.vertx.core.http.HttpClientRequest delete(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> delete
    878:878:io.vertx.core.http.HttpClientRequest delete(java.lang.String,java.lang.String,io.vertx.core.Handler) -> delete
    883:883:io.vertx.core.http.HttpClientRequest delete(java.lang.String) -> delete
    888:888:io.vertx.core.http.HttpClientRequest delete(java.lang.String,io.vertx.core.Handler) -> delete
    893:893:io.vertx.core.http.HttpClientRequest deleteAbs(java.lang.String) -> deleteAbs
    898:898:io.vertx.core.http.HttpClientRequest deleteAbs(java.lang.String,io.vertx.core.Handler) -> deleteAbs
    903:915:void close() -> close
    919:919:boolean isMetricsEnabled() -> isMetricsEnabled
    924:924:io.vertx.core.spi.metrics.Metrics getMetrics() -> getMetrics
    929:933:io.vertx.core.http.HttpClient redirectHandler(java.util.function.Function) -> redirectHandler
    938:938:java.util.function.Function redirectHandler() -> redirectHandler
    942:942:io.vertx.core.http.HttpClientOptions getOptions() -> getOptions
    951:961:void getConnectionForWebsocket(boolean,int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl) -> getConnectionForWebsocket
    967:968:void getConnectionForRequest(java.lang.String,boolean,int,java.lang.String,io.vertx.core.Handler,java.util.function.BiFunction,java.util.function.BiConsumer) -> getConnectionForRequest
    974:974:io.vertx.core.impl.VertxInternal getVertx() -> getVertx
    978:978:io.vertx.core.net.impl.SSLHelper getSslHelper() -> getSslHelper
    984:986:java.net.URL parseUrl(java.lang.String) -> parseUrl
    991:992:io.vertx.core.http.HttpClient requestNow(io.vertx.core.http.HttpMethod,io.vertx.core.http.RequestOptions,io.vertx.core.Handler) -> requestNow
    996:996:io.vertx.core.http.HttpClientRequest createRequest(io.vertx.core.http.HttpMethod,java.lang.String,int,java.lang.Boolean,java.lang.String,io.vertx.core.MultiMap) -> createRequest
    1000:1033:io.vertx.core.http.HttpClientRequest createRequest(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,int,java.lang.Boolean,java.lang.String,io.vertx.core.MultiMap) -> createRequest
    1037:1040:void checkClosed() -> checkClosed
    1136:1138:void finalize() -> finalize
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStreamAbs(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String) -> websocketStreamAbs
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(io.vertx.core.http.RequestOptions,io.vertx.core.MultiMap) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(java.lang.String,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(int,java.lang.String,java.lang.String) -> websocketStream
    63:63:io.vertx.core.streams.ReadStream websocketStream(io.vertx.core.http.RequestOptions) -> websocketStream
    957:960:void lambda$getConnectionForWebsocket$5(io.vertx.core.Handler,io.vertx.core.impl.ContextInternal,java.lang.Throwable) -> lambda$getConnectionForWebsocket$5
    958:959:void lambda$null$4(io.vertx.core.Handler,java.lang.Throwable) -> lambda$null$4
    952:955:java.lang.Boolean lambda$getConnectionForWebsocket$3(io.vertx.core.Handler,io.vertx.core.impl.ContextInternal,io.vertx.core.http.impl.HttpClientConnection) -> lambda$getConnectionForWebsocket$3
    953:954:void lambda$null$2(io.vertx.core.Handler,io.vertx.core.http.impl.HttpClientConnection) -> lambda$null$2
    145:147:void lambda$new$1(io.vertx.core.Handler) -> lambda$new$1
    67:103:io.vertx.core.Future lambda$new$0(io.vertx.core.http.HttpClientResponse) -> lambda$new$0
    63:63:void access$000(io.vertx.core.http.impl.HttpClientImpl) -> access$000
    63:63:io.vertx.core.impl.VertxInternal access$100(io.vertx.core.http.impl.HttpClientImpl) -> access$100
    63:63:io.vertx.core.logging.Logger access$200() -> access$200
    63:63:io.vertx.core.http.HttpClientOptions access$300(io.vertx.core.http.impl.HttpClientImpl) -> access$300
    63:63:void access$400(io.vertx.core.http.impl.HttpClientImpl,boolean,int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl) -> access$400
    107:107:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpClientImpl$1 -> io.vertx.core.http.impl.HttpClientImpl$1:
    int[] $SwitchMap$io$vertx$core$http$HttpVersion -> $SwitchMap$io$vertx$core$http$HttpVersion
    129:129:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpClientImpl$WebSocketStream -> io.vertx.core.http.impl.HttpClientImpl$WebSocketStream:
    int port -> port
    java.lang.String host -> host
    java.lang.String requestURI -> requestURI
    io.vertx.core.MultiMap headers -> headers
    io.vertx.core.http.WebsocketVersion version -> version
    java.lang.String subProtocols -> subProtocols
    io.vertx.core.Handler handler -> handler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler endHandler -> endHandler
    java.lang.Boolean ssl -> ssl
    io.vertx.core.http.impl.HttpClientImpl this$0 -> this$0
    1055:1063:void <init>(io.vertx.core.http.impl.HttpClientImpl,int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,java.lang.Boolean) -> <init>
    1066:1076:void subscribe(io.vertx.core.Handler,io.vertx.core.Handler) -> subscribe
    1080:1081:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    1086:1111:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    1116:1117:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    1122:1122:io.vertx.core.streams.ReadStream pause() -> pause
    1127:1127:io.vertx.core.streams.ReadStream resume() -> resume
    1042:1042:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    1107:1109:void lambda$handler$2(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.Http1xClientConnection) -> lambda$handler$2
    1100:1102:void lambda$handler$1(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket) -> lambda$handler$1
    1068:1073:void lambda$subscribe$0(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$subscribe$0
io.vertx.core.http.impl.HttpClientRequestBase -> io.vertx.core.http.impl.HttpClientRequestBase:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.http.impl.HttpClientImpl client -> client
    io.vertx.core.http.HttpMethod method -> method
    java.lang.String uri -> uri
    java.lang.String path -> path
    java.lang.String host -> host
    int port -> port
    java.lang.String query -> query
    boolean ssl -> ssl
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    long currentTimeoutTimerId -> currentTimeoutTimerId
    long currentTimeoutMs -> currentTimeoutMs
    long lastDataReceived -> lastDataReceived
    java.lang.Throwable exceptionOccurred -> exceptionOccurred
    java.lang.Object metric -> metric
    38:53:void <init>(io.vertx.core.http.impl.HttpClientImpl,boolean,io.vertx.core.http.HttpMethod,java.lang.String,int,java.lang.String) -> <init>
    56:56:java.lang.Object metric() -> metric
    60:61:void metric(java.lang.Object) -> metric
    java.lang.Object getLock() -> getLock
    void doHandleResponse(io.vertx.core.http.impl.HttpClientResponseImpl,long) -> doHandleResponse
    void checkComplete() -> checkComplete
    68:71:java.lang.String hostHeader() -> hostHeader
    77:77:java.lang.String absoluteURI() -> absoluteURI
    81:81:java.lang.String query() -> query
    85:85:java.lang.String path() -> path
    89:89:java.lang.String uri() -> uri
    94:94:io.vertx.core.http.HttpMethod method() -> method
    99:107:io.vertx.core.http.HttpClientRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    111:113:io.vertx.core.Handler exceptionHandler() -> exceptionHandler
    118:123:io.vertx.core.http.HttpClientRequest setTimeout(long) -> setTimeout
    127:136:void handleException(java.lang.Throwable) -> handleException
    139:151:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl) -> handleResponse
    154:159:void cancelOutstandingTimeoutTimer() -> cancelOutstandingTimeoutTimer
    162:175:void handleTimeout(long) -> handleTimeout
    178:179:void timeout(long) -> timeout
    182:182:void handleResponseEnd() -> handleResponseEnd
    185:190:void dataReceived() -> dataReceived
    25:25:io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    25:25:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    25:25:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    121:121:void lambda$setTimeout$0(long,java.lang.Long) -> lambda$setTimeout$0
    27:27:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpClientRequestImpl -> io.vertx.core.http.impl.HttpClientRequestImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.Handler respHandler -> respHandler
    io.vertx.core.Handler endHandler -> endHandler
    boolean chunked -> chunked
    java.lang.String hostHeader -> hostHeader
    java.lang.String rawMethod -> rawMethod
    io.vertx.core.Handler continueHandler -> continueHandler
    io.vertx.core.http.impl.HttpClientStream stream -> stream
    java.lang.Object lock -> lock
    io.vertx.core.Handler drainHandler -> drainHandler
    io.vertx.core.Handler pushHandler -> pushHandler
    io.vertx.core.Handler connectionHandler -> connectionHandler
    io.vertx.core.Handler headersCompletionHandler -> headersCompletionHandler
    boolean completed -> completed
    io.vertx.core.Handler completionHandler -> completionHandler
    java.lang.Long reset -> reset
    io.netty.buffer.ByteBuf pendingChunks -> pendingChunks
    int pendingMaxSize -> pendingMaxSize
    int followRedirects -> followRedirects
    boolean connecting -> connecting
    long written -> written
    io.vertx.core.http.CaseInsensitiveHeaders headers -> headers
    67:80:void <init>(io.vertx.core.http.impl.HttpClientImpl,boolean,io.vertx.core.http.HttpMethod,java.lang.String,int,java.lang.String,io.vertx.core.impl.VertxInternal) -> <init>
    84:86:int streamId() -> streamId
    91:99:io.vertx.core.http.HttpClientRequest handler(io.vertx.core.Handler) -> handler
    104:104:io.vertx.core.http.HttpClientRequest pause() -> pause
    109:109:io.vertx.core.http.HttpClientRequest resume() -> resume
    114:122:io.vertx.core.http.HttpClientRequest setFollowRedirects(boolean) -> setFollowRedirects
    127:133:io.vertx.core.http.HttpClientRequest endHandler(io.vertx.core.Handler) -> endHandler
    142:152:io.vertx.core.http.impl.HttpClientRequestImpl setChunked(boolean) -> setChunked
    157:159:boolean isChunked() -> isChunked
    164:166:java.lang.String getRawMethod() -> getRawMethod
    171:174:io.vertx.core.http.HttpClientRequest setRawMethod(java.lang.String) -> setRawMethod
    179:182:io.vertx.core.http.HttpClientRequest setHost(java.lang.String) -> setHost
    187:189:java.lang.String getHost() -> getHost
    194:199:io.vertx.core.MultiMap headers() -> headers
    204:208:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.String) -> putHeader
    213:217:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.Iterable) -> putHeader
    222:230:io.vertx.core.http.HttpClientRequest setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    235:238:boolean writeQueueFull() -> writeQueueFull
    243:260:io.vertx.core.http.HttpClientRequest drainHandler(io.vertx.core.Handler) -> drainHandler
    265:271:io.vertx.core.http.HttpClientRequest continueHandler(io.vertx.core.Handler) -> continueHandler
    276:276:io.vertx.core.http.HttpClientRequest sendHead() -> sendHead
    281:291:io.vertx.core.http.HttpClientRequest sendHead(io.vertx.core.Handler) -> sendHead
    296:300:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.CharSequence) -> putHeader
    305:309:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.Iterable) -> putHeader
    314:317:io.vertx.core.http.HttpClientRequest pushHandler(io.vertx.core.Handler) -> pushHandler
    322:336:boolean reset(long) -> reset
    340:345:boolean tryComplete() -> tryComplete
    351:353:io.vertx.core.http.HttpConnection connection() -> connection
    358:361:io.vertx.core.http.HttpClientRequest connectionHandler(io.vertx.core.Handler) -> connectionHandler
    366:372:io.vertx.core.http.HttpClientRequest writeCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> writeCustomFrame
    376:385:void handleDrained() -> handleDrained
    388:429:void handleNextRequest(io.vertx.core.http.impl.HttpClientRequestImpl,long) -> handleNextRequest
    432:460:void doHandleResponse(io.vertx.core.http.impl.HttpClientResponseImpl,long) -> doHandleResponse
    464:464:java.lang.String hostHeader() -> hostHeader
    473:482:java.lang.Object getLock() -> getLock
    487:491:io.vertx.core.Handler checkConnect(io.vertx.core.http.HttpMethod,io.vertx.core.Handler) -> checkConnect
    495:496:io.vertx.core.Handler connectHandler(io.vertx.core.Handler) -> connectHandler
    617:663:void connect() -> connect
    666:668:void retry() -> retry
    672:722:void connected(io.vertx.core.http.impl.HttpClientStream,io.vertx.core.Handler) -> connected
    725:725:boolean contentLengthSet() -> contentLengthSet
    730:731:void end(java.lang.String) -> end
    735:737:void end(java.lang.String,java.lang.String) -> end
    741:742:void end(io.vertx.core.buffer.Buffer) -> end
    746:747:void end() -> end
    751:753:io.vertx.core.http.impl.HttpClientRequestImpl write(io.vertx.core.buffer.Buffer) -> write
    758:758:io.vertx.core.http.impl.HttpClientRequestImpl write(java.lang.String) -> write
    763:764:io.vertx.core.http.impl.HttpClientRequestImpl write(java.lang.String,java.lang.String) -> write
    768:773:void write(io.netty.buffer.ByteBuf,boolean) -> write
    776:832:void _write(io.netty.buffer.ByteBuf,boolean) -> _write
    835:838:void checkComplete() -> checkComplete
    841:844:void checkResponseHandler() -> checkResponseHandler
    847:849:io.vertx.core.Handler pushHandler() -> pushHandler
    46:46:void handleException(java.lang.Throwable) -> handleException
    46:46:io.vertx.core.http.HttpClientRequest setTimeout(long) -> setTimeout
    46:46:io.vertx.core.http.HttpClientRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    46:46:io.vertx.core.http.HttpMethod method() -> method
    46:46:java.lang.String uri() -> uri
    46:46:java.lang.String path() -> path
    46:46:java.lang.String query() -> query
    46:46:java.lang.String absoluteURI() -> absoluteURI
    46:46:io.vertx.core.http.HttpClientRequest write(java.lang.String,java.lang.String) -> write
    46:46:io.vertx.core.http.HttpClientRequest write(java.lang.String) -> write
    46:46:io.vertx.core.http.HttpClientRequest setChunked(boolean) -> setChunked
    46:46:io.vertx.core.http.HttpClientRequest write(io.vertx.core.buffer.Buffer) -> write
    46:46:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    46:46:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    46:46:void end(java.lang.Object) -> end
    46:46:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    46:46:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    46:46:io.vertx.core.streams.ReadStream resume() -> resume
    46:46:io.vertx.core.streams.ReadStream pause() -> pause
    46:46:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    657:660:void lambda$connect$10(io.vertx.core.impl.ContextInternal,java.lang.Throwable) -> lambda$connect$10
    658:659:void lambda$null$9(java.lang.Throwable) -> lambda$null$9
    641:655:java.lang.Boolean lambda$connect$8(io.vertx.core.impl.ContextInternal,io.vertx.core.http.impl.HttpClientConnection) -> lambda$connect$8
    646:654:void lambda$null$7(io.vertx.core.impl.ContextInternal,io.vertx.core.AsyncResult) -> lambda$null$7
    649:650:void lambda$null$6(io.vertx.core.http.impl.HttpClientStream) -> lambda$null$6
    498:613:void lambda$connectHandler$5(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse) -> lambda$connectHandler$5
    438:443:void lambda$doHandleResponse$4(long,io.vertx.core.AsyncResult) -> lambda$doHandleResponse$4
    424:427:void lambda$handleNextRequest$3(io.vertx.core.Future,java.lang.Void) -> lambda$handleNextRequest$3
    419:422:void lambda$handleNextRequest$2(io.vertx.core.Future,java.lang.Throwable) -> lambda$handleNextRequest$2
    403:411:void lambda$handleNextRequest$1(long,io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.AsyncResult) -> lambda$handleNextRequest$1
    249:254:void lambda$drainHandler$0(java.lang.Void) -> lambda$drainHandler$0
    46:46:io.vertx.core.impl.VertxInternal access$000(io.vertx.core.http.impl.HttpClientRequestImpl) -> access$000
    48:48:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpClientRequestImpl$1 -> io.vertx.core.http.impl.HttpClientRequestImpl$1:
    boolean resumed -> resumed
    io.vertx.core.http.HttpClientResponse val$resp -> val$resp
    io.vertx.core.net.NetSocket val$socket -> val$socket
    io.vertx.core.http.impl.HttpClientRequestImpl this$0 -> this$0
    505:505:void <init>(io.vertx.core.http.impl.HttpClientRequestImpl,io.vertx.core.http.HttpClientResponse,io.vertx.core.net.NetSocket) -> <init>
    510:510:io.vertx.core.http.HttpClientRequest request() -> request
    515:515:int statusCode() -> statusCode
    520:520:java.lang.String statusMessage() -> statusMessage
    525:525:io.vertx.core.MultiMap headers() -> headers
    530:530:java.lang.String getHeader(java.lang.String) -> getHeader
    535:535:java.lang.String getHeader(java.lang.CharSequence) -> getHeader
    540:540:java.lang.String getTrailer(java.lang.String) -> getTrailer
    545:545:io.vertx.core.MultiMap trailers() -> trailers
    550:550:java.util.List cookies() -> cookies
    555:555:io.vertx.core.http.HttpVersion version() -> version
    560:561:io.vertx.core.http.HttpClientResponse bodyHandler(io.vertx.core.Handler) -> bodyHandler
    566:567:io.vertx.core.http.HttpClientResponse customFrameHandler(io.vertx.core.Handler) -> customFrameHandler
    572:576:io.vertx.core.net.NetSocket netSocket() -> netSocket
    581:582:io.vertx.core.http.HttpClientResponse endHandler(io.vertx.core.Handler) -> endHandler
    587:588:io.vertx.core.http.HttpClientResponse handler(io.vertx.core.Handler) -> handler
    593:594:io.vertx.core.http.HttpClientResponse pause() -> pause
    599:600:io.vertx.core.http.HttpClientResponse resume() -> resume
    605:606:io.vertx.core.http.HttpClientResponse exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    505:505:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    505:505:io.vertx.core.streams.ReadStream resume() -> resume
    505:505:io.vertx.core.streams.ReadStream pause() -> pause
    505:505:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    505:505:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    505:505:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    574:574:void lambda$netSocket$0(io.vertx.core.net.NetSocket,java.lang.Void) -> lambda$netSocket$0
io.vertx.core.http.impl.HttpClientRequestPushPromise -> io.vertx.core.http.impl.HttpClientRequestPushPromise:
    io.vertx.core.http.impl.Http2ClientConnection conn -> conn
    io.vertx.core.http.impl.Http2ClientConnection$Http2ClientStream stream -> stream
    java.lang.String rawMethod -> rawMethod
    io.vertx.core.MultiMap headers -> headers
    io.vertx.core.Handler respHandler -> respHandler
    48:53:void <init>(io.vertx.core.http.impl.Http2ClientConnection,io.netty.handler.codec.http2.Http2Stream,io.vertx.core.http.impl.HttpClientImpl,boolean,io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,java.lang.String,int,io.vertx.core.MultiMap) -> <init>
    56:56:io.vertx.core.http.impl.Http2ClientConnection$Http2ClientStream getStream() -> getStream
    61:61:java.lang.Object getLock() -> getLock
    66:71:void doHandleResponse(io.vertx.core.http.impl.HttpClientResponseImpl,long) -> doHandleResponse
    75:75:void checkComplete() -> checkComplete
    79:82:io.vertx.core.http.HttpClientRequest handler(io.vertx.core.Handler) -> handler
    87:87:io.vertx.core.http.HttpConnection connection() -> connection
    92:92:io.vertx.core.http.HttpClientRequest connectionHandler(io.vertx.core.Handler) -> connectionHandler
    97:100:boolean reset(long) -> reset
    105:105:boolean isChunked() -> isChunked
    110:110:io.vertx.core.http.HttpMethod method() -> method
    115:115:java.lang.String getRawMethod() -> getRawMethod
    120:120:io.vertx.core.http.HttpClientRequest setRawMethod(java.lang.String) -> setRawMethod
    125:125:java.lang.String uri() -> uri
    130:130:java.lang.String getHost() -> getHost
    135:135:io.vertx.core.MultiMap headers() -> headers
    140:140:io.vertx.core.http.HttpClientRequest write(io.vertx.core.buffer.Buffer) -> write
    145:145:io.vertx.core.http.HttpClientRequest setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    150:150:io.vertx.core.http.HttpClientRequest drainHandler(io.vertx.core.Handler) -> drainHandler
    155:155:io.vertx.core.http.HttpClientRequest pause() -> pause
    160:160:io.vertx.core.http.HttpClientRequest resume() -> resume
    165:165:io.vertx.core.http.HttpClientRequest endHandler(io.vertx.core.Handler) -> endHandler
    170:170:io.vertx.core.http.HttpClientRequest setFollowRedirects(boolean) -> setFollowRedirects
    175:175:io.vertx.core.http.HttpClientRequest setChunked(boolean) -> setChunked
    180:180:io.vertx.core.http.HttpClientRequest setHost(java.lang.String) -> setHost
    185:185:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.String) -> putHeader
    190:190:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.CharSequence) -> putHeader
    195:195:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.Iterable) -> putHeader
    200:200:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.Iterable) -> putHeader
    205:205:io.vertx.core.http.HttpClientRequest write(java.lang.String) -> write
    210:210:io.vertx.core.http.HttpClientRequest write(java.lang.String,java.lang.String) -> write
    215:215:io.vertx.core.http.HttpClientRequest continueHandler(io.vertx.core.Handler) -> continueHandler
    220:220:io.vertx.core.http.HttpClientRequest sendHead() -> sendHead
    225:225:io.vertx.core.http.HttpClientRequest sendHead(io.vertx.core.Handler) -> sendHead
    230:230:void end(java.lang.String) -> end
    235:235:void end(java.lang.String,java.lang.String) -> end
    240:240:void end(io.vertx.core.buffer.Buffer) -> end
    245:245:io.vertx.core.http.HttpClientRequest pushHandler(io.vertx.core.Handler) -> pushHandler
    250:250:void end() -> end
    255:255:boolean writeQueueFull() -> writeQueueFull
    260:260:io.vertx.core.http.HttpClientRequest writeCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> writeCustomFrame
    29:29:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    29:29:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    29:29:void end(java.lang.Object) -> end
    29:29:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    29:29:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    29:29:io.vertx.core.streams.ReadStream resume() -> resume
    29:29:io.vertx.core.streams.ReadStream pause() -> pause
    29:29:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
io.vertx.core.http.impl.HttpClientResponseImpl -> io.vertx.core.http.impl.HttpClientResponseImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.http.HttpVersion version -> version
    int statusCode -> statusCode
    java.lang.String statusMessage -> statusMessage
    io.vertx.core.http.impl.HttpClientRequestBase request -> request
    io.vertx.core.http.impl.HttpClientConnection conn -> conn
    io.vertx.core.http.impl.HttpClientStream stream -> stream
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler customFrameHandler -> customFrameHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    boolean hasPausedEnd -> hasPausedEnd
    boolean paused -> paused
    io.vertx.core.buffer.Buffer pausedLastChunk -> pausedLastChunk
    io.vertx.core.MultiMap pausedTrailers -> pausedTrailers
    io.vertx.core.net.NetSocket netSocket -> netSocket
    long bytesRead -> bytesRead
    io.vertx.core.MultiMap headers -> headers
    io.vertx.core.MultiMap trailers -> trailers
    java.util.List cookies -> cookies
    67:75:void <init>(io.vertx.core.http.impl.HttpClientRequestBase,io.vertx.core.http.HttpVersion,io.vertx.core.http.impl.HttpClientStream,int,java.lang.String,io.vertx.core.MultiMap) -> <init>
    79:79:io.vertx.core.http.impl.HttpClientRequestBase request() -> request
    84:84:io.vertx.core.http.HttpVersion version() -> version
    89:89:int statusCode() -> statusCode
    94:94:java.lang.String statusMessage() -> statusMessage
    99:99:io.vertx.core.MultiMap headers() -> headers
    104:104:java.lang.String getHeader(java.lang.String) -> getHeader
    109:109:java.lang.String getHeader(java.lang.CharSequence) -> getHeader
    114:119:io.vertx.core.MultiMap trailers() -> trailers
    124:124:java.lang.String getTrailer(java.lang.String) -> getTrailer
    129:138:java.util.List cookies() -> cookies
    143:146:io.vertx.core.http.HttpClientResponse handler(io.vertx.core.Handler) -> handler
    151:154:io.vertx.core.http.HttpClientResponse endHandler(io.vertx.core.Handler) -> endHandler
    159:162:io.vertx.core.http.HttpClientResponse exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    167:173:io.vertx.core.http.HttpClientResponse pause() -> pause
    178:185:io.vertx.core.http.HttpClientResponse resume() -> resume
    190:193:io.vertx.core.http.HttpClientResponse bodyHandler(io.vertx.core.Handler) -> bodyHandler
    198:201:io.vertx.core.http.HttpClientResponse customFrameHandler(io.vertx.core.Handler) -> customFrameHandler
    205:213:void doResume() -> doResume
    216:225:void handleUnknowFrame(io.vertx.core.http.HttpFrame) -> handleUnknowFrame
    228:239:void handleChunk(io.vertx.core.buffer.Buffer) -> handleChunk
    242:264:void handleEnd(io.vertx.core.buffer.Buffer,io.vertx.core.MultiMap) -> handleEnd
    267:274:void handleException(java.lang.Throwable) -> handleException
    278:283:io.vertx.core.net.NetSocket netSocket() -> netSocket
    38:38:io.vertx.core.http.HttpClientRequest request() -> request
    38:38:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    38:38:io.vertx.core.streams.ReadStream resume() -> resume
    38:38:io.vertx.core.streams.ReadStream pause() -> pause
    38:38:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    38:38:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    38:38:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    208:208:void lambda$doResume$1(io.vertx.core.buffer.Buffer,io.vertx.core.MultiMap,java.lang.Void) -> lambda$doResume$1
    192:192:void lambda$bodyHandler$0(io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler,io.vertx.core.Handler,java.lang.Void) -> lambda$bodyHandler$0
    40:40:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpClientResponseImpl$1 -> io.vertx.core.http.impl.HttpClientResponseImpl$1:
io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler -> io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:
    io.vertx.core.buffer.Buffer body -> body
    286:286:void <init>() -> <init>
    291:292:void handle(io.vertx.core.buffer.Buffer) -> handle
    295:298:io.vertx.core.buffer.Buffer body() -> body
    302:305:void notifyHandler(io.vertx.core.Handler) -> notifyHandler
    286:286:void handle(java.lang.Object) -> handle
    286:286:void <init>(io.vertx.core.http.impl.HttpClientResponseImpl$1) -> <init>
io.vertx.core.http.impl.HttpClientStream -> io.vertx.core.http.impl.HttpClientStream:
    int id() -> id
    io.vertx.core.http.HttpVersion version() -> version
    io.vertx.core.http.impl.HttpClientConnection connection() -> connection
    io.vertx.core.Context getContext() -> getContext
    void writeHead(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean) -> writeHead
    void writeHeadWithContent(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,java.lang.String,boolean,io.netty.buffer.ByteBuf,boolean) -> writeHeadWithContent
    void writeBuffer(io.netty.buffer.ByteBuf,boolean) -> writeBuffer
    void writeFrame(int,int,io.netty.buffer.ByteBuf) -> writeFrame
    void doSetWriteQueueMaxSize(int) -> doSetWriteQueueMaxSize
    boolean isNotWritable() -> isNotWritable
    void checkDrained() -> checkDrained
    void doPause() -> doPause
    void doResume() -> doResume
    void reset(long) -> reset
    void beginRequest() -> beginRequest
    void endRequest() -> endRequest
    io.vertx.core.net.NetSocket createNetSocket() -> createNetSocket
io.vertx.core.http.impl.HttpFrameImpl -> io.vertx.core.http.impl.HttpFrameImpl:
    int type -> type
    int flags -> flags
    io.vertx.core.buffer.Buffer payload -> payload
    26:30:void <init>(int,int,io.vertx.core.buffer.Buffer) -> <init>
    34:34:int flags() -> flags
    39:39:int type() -> type
    44:44:io.vertx.core.buffer.Buffer payload() -> payload
io.vertx.core.http.impl.HttpHandlers -> io.vertx.core.http.impl.HttpHandlers:
    io.vertx.core.Handler requesthHandler -> requesthHandler
    io.vertx.core.Handler wsHandler -> wsHandler
    io.vertx.core.Handler connectionHandler -> connectionHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    37:42:void <init>(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler) -> <init>
    46:56:boolean equals(java.lang.Object) -> equals
    61:74:int hashCode() -> hashCode
io.vertx.core.http.impl.HttpServerFileUploadImpl -> io.vertx.core.http.impl.HttpServerFileUploadImpl:
    io.vertx.core.http.HttpServerRequest req -> req
    io.vertx.core.Vertx vertx -> vertx
    java.lang.String name -> name
    java.lang.String filename -> filename
    java.lang.String contentType -> contentType
    java.lang.String contentTransferEncoding -> contentTransferEncoding
    java.nio.charset.Charset charset -> charset
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.file.AsyncFile file -> file
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    long size -> size
    boolean paused -> paused
    io.vertx.core.buffer.Buffer pauseBuff -> pauseBuff
    boolean complete -> complete
    boolean lazyCalculateSize -> lazyCalculateSize
    57:69:void <init>(io.vertx.core.Vertx,io.vertx.core.http.HttpServerRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> <init>
    73:73:java.lang.String filename() -> filename
    78:78:java.lang.String name() -> name
    83:83:java.lang.String contentType() -> contentType
    88:88:java.lang.String contentTransferEncoding() -> contentTransferEncoding
    93:93:java.lang.String charset() -> charset
    98:98:long size() -> size
    103:104:io.vertx.core.http.HttpServerFileUpload handler(io.vertx.core.Handler) -> handler
    109:111:io.vertx.core.http.HttpServerFileUpload pause() -> pause
    116:127:io.vertx.core.http.HttpServerFileUpload resume() -> resume
    132:133:io.vertx.core.http.HttpServerFileUpload exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    138:139:io.vertx.core.http.HttpServerFileUpload endHandler(io.vertx.core.Handler) -> endHandler
    144:155:io.vertx.core.http.HttpServerFileUpload streamToFileSystem(java.lang.String) -> streamToFileSystem
    160:160:boolean isSizeAvailable() -> isSizeAvailable
    164:171:void receiveData(io.vertx.core.buffer.Buffer) -> receiveData
    174:184:void doReceiveData(io.vertx.core.buffer.Buffer) -> doReceiveData
    187:192:void complete() -> complete
    195:206:void handleComplete() -> handleComplete
    209:212:void notifyEndHandler() -> notifyEndHandler
    215:218:void notifyExceptionHandler(java.lang.Throwable) -> notifyExceptionHandler
    34:34:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    34:34:io.vertx.core.streams.ReadStream resume() -> resume
    34:34:io.vertx.core.streams.ReadStream pause() -> pause
    34:34:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    34:34:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    34:34:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    200:204:void lambda$handleComplete$1(io.vertx.core.AsyncResult) -> lambda$handleComplete$1
    146:154:void lambda$streamToFileSystem$0(io.vertx.core.AsyncResult) -> lambda$streamToFileSystem$0
io.vertx.core.http.impl.HttpServerImpl -> io.vertx.core.http.impl.HttpServerImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.Handler DEFAULT_EXCEPTION_HANDLER -> DEFAULT_EXCEPTION_HANDLER
    java.lang.String FLASH_POLICY_HANDLER_PROP_NAME -> FLASH_POLICY_HANDLER_PROP_NAME
    boolean USE_FLASH_POLICY_HANDLER -> USE_FLASH_POLICY_HANDLER
    java.lang.String DISABLE_WEBSOCKETS_PROP_NAME -> DISABLE_WEBSOCKETS_PROP_NAME
    boolean DISABLE_WEBSOCKETS -> DISABLE_WEBSOCKETS
    java.lang.String DISABLE_H2C_PROP_NAME -> DISABLE_H2C_PROP_NAME
    boolean DISABLE_HC2 -> DISABLE_HC2
    java.lang.String[] H2C_HANDLERS_TO_REMOVE -> H2C_HANDLERS_TO_REMOVE
    io.vertx.core.http.HttpServerOptions options -> options
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.net.impl.SSLHelper sslHelper -> sslHelper
    io.vertx.core.impl.ContextImpl creatingContext -> creatingContext
    java.util.Map connectionMap -> connectionMap
    java.util.Map connectionMap2 -> connectionMap2
    io.vertx.core.net.impl.VertxEventLoopGroup availableWorkers -> availableWorkers
    io.vertx.core.net.impl.HandlerManager httpHandlerMgr -> httpHandlerMgr
    io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler wsStream -> wsStream
    io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler requestStream -> requestStream
    io.vertx.core.Handler connectionHandler -> connectionHandler
    java.lang.String serverOrigin -> serverOrigin
    io.netty.channel.group.ChannelGroup serverChannelGroup -> serverChannelGroup
    boolean listening -> listening
    io.vertx.core.net.impl.AsyncResolveConnectHelper bindFuture -> bindFuture
    io.vertx.core.net.impl.ServerID id -> id
    io.vertx.core.http.impl.HttpServerImpl actualServer -> actualServer
    int actualPort -> actualPort
    io.vertx.core.impl.ContextImpl listenContext -> listenContext
    io.vertx.core.spi.metrics.HttpServerMetrics metrics -> metrics
    boolean logEnabled -> logEnabled
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    114:153:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.HttpServerOptions) -> <init>
    157:158:io.vertx.core.http.HttpServer requestHandler(io.vertx.core.Handler) -> requestHandler
    163:163:io.vertx.core.streams.ReadStream requestStream() -> requestStream
    168:169:io.vertx.core.http.HttpServer websocketHandler(io.vertx.core.Handler) -> websocketHandler
    174:174:io.vertx.core.Handler requestHandler() -> requestHandler
    179:183:io.vertx.core.http.HttpServer connectionHandler(io.vertx.core.Handler) -> connectionHandler
    188:192:io.vertx.core.http.HttpServer exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    197:197:io.vertx.core.Handler websocketHandler() -> websocketHandler
    202:202:io.vertx.core.streams.ReadStream websocketStream() -> websocketStream
    207:207:io.vertx.core.http.HttpServer listen() -> listen
    212:212:io.vertx.core.http.HttpServer listen(io.vertx.core.Handler) -> listen
    217:217:io.vertx.core.http.HttpServer listen(int,java.lang.String) -> listen
    222:222:io.vertx.core.http.HttpServer listen(int) -> listen
    227:227:io.vertx.core.http.HttpServer listen(int,io.vertx.core.Handler) -> listen
    231:390:io.vertx.core.http.HttpServer listen(int,java.lang.String,io.vertx.core.Handler) -> listen
    394:424:io.vertx.core.http.impl.VertxHttp2ConnectionHandler setHandler(io.vertx.core.net.impl.HandlerHolder,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.Channel) -> setHandler
    428:468:void configureHttp1(io.netty.channel.ChannelPipeline,io.vertx.core.net.impl.HandlerHolder) -> configureHttp1
    471:477:void handleHttp1(io.netty.channel.Channel) -> handleHttp1
    480:485:void sendServiceUnavailable(io.netty.channel.Channel) -> sendServiceUnavailable
    488:495:void handleHttp2(io.netty.channel.Channel) -> handleHttp2
    498:501:void configureHttp2(io.netty.channel.ChannelPipeline) -> configureHttp2
    505:506:void close() -> close
    510:566:void close(io.vertx.core.Handler) -> close
    570:570:io.vertx.core.spi.metrics.Metrics getMetrics() -> getMetrics
    575:575:boolean isMetricsEnabled() -> isMetricsEnabled
    579:579:io.vertx.core.net.impl.SSLHelper getSslHelper() -> getSslHelper
    583:584:void applyConnectionOptions(io.netty.bootstrap.ServerBootstrap) -> applyConnectionOptions
    588:595:void addHandlers(io.vertx.core.http.impl.HttpServerImpl,io.vertx.core.impl.ContextImpl) -> addHandlers
    598:622:void actualClose(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler) -> actualClose
    626:626:int actualPort() -> actualPort
    630:634:void executeCloseDone(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Exception) -> executeCloseDone
    795:808:void sendError(java.lang.CharSequence,io.netty.handler.codec.http.HttpResponseStatus,io.netty.channel.Channel) -> sendError
    812:824:java.lang.String getWebSocketLocation(io.netty.channel.ChannelPipeline,io.netty.handler.codec.http.HttpRequest) -> getWebSocketLocation
    832:834:void finalize() -> finalize
    837:837:io.vertx.core.http.HttpServerOptions options() -> options
    632:632:void lambda$executeCloseDone$14(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void) -> lambda$executeCloseDone$14
    621:621:void lambda$actualClose$13(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.channel.group.ChannelGroupFuture,io.netty.util.concurrent.Future) -> lambda$actualClose$13
    517:528:void lambda$close$12(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$close$12
    465:466:void lambda$configureHttp1$11(io.netty.channel.ChannelPipeline,io.vertx.core.http.impl.Http1xServerConnection) -> lambda$configureHttp1$11
    462:463:void lambda$configureHttp1$10(io.netty.channel.ChannelPipeline,io.vertx.core.http.impl.Http1xServerConnection) -> lambda$configureHttp1$10
    422:423:void lambda$setHandler$9(io.vertx.core.http.impl.Http2ServerConnection) -> lambda$setHandler$9
    414:420:void lambda$setHandler$8(io.vertx.core.net.impl.HandlerHolder,io.vertx.core.http.impl.Http2ServerConnection) -> lambda$setHandler$8
    417:418:void lambda$null$7(io.vertx.core.net.impl.HandlerHolder,io.vertx.core.http.impl.Http2ServerConnection) -> lambda$null$7
    402:409:io.vertx.core.http.impl.Http2ServerConnection lambda$setHandler$6(io.vertx.core.net.impl.HandlerHolder,io.vertx.core.http.impl.VertxHttp2ConnectionHandler) -> lambda$setHandler$6
    374:388:void lambda$listen$5(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$listen$5
    382:382:void lambda$null$4(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void) -> lambda$null$4
    355:355:void lambda$listen$3(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void) -> lambda$listen$3
    342:351:void lambda$listen$2(int,java.lang.String,io.vertx.core.AsyncResult) -> lambda$listen$2
    242:242:boolean lambda$listen$1(io.vertx.core.http.HttpVersion) -> lambda$listen$1
    108:108:void lambda$static$0(java.lang.Throwable) -> lambda$static$0
    105:105:io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler access$100(io.vertx.core.http.impl.HttpServerImpl) -> access$100
    105:105:io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler access$200(io.vertx.core.http.impl.HttpServerImpl) -> access$200
    105:105:io.vertx.core.net.impl.SSLHelper access$300(io.vertx.core.http.impl.HttpServerImpl) -> access$300
    105:105:io.vertx.core.http.HttpServerOptions access$400(io.vertx.core.http.impl.HttpServerImpl) -> access$400
    105:105:io.vertx.core.impl.VertxInternal access$500(io.vertx.core.http.impl.HttpServerImpl) -> access$500
    105:105:boolean access$600(io.vertx.core.http.impl.HttpServerImpl) -> access$600
    105:105:void access$700(io.vertx.core.http.impl.HttpServerImpl,io.netty.channel.Channel) -> access$700
    105:105:void access$800(io.vertx.core.http.impl.HttpServerImpl,io.netty.channel.Channel) -> access$800
    105:105:io.vertx.core.net.impl.HandlerManager access$900(io.vertx.core.http.impl.HttpServerImpl) -> access$900
    105:105:io.vertx.core.logging.Logger access$1100() -> access$1100
    105:105:io.vertx.core.spi.metrics.HttpServerMetrics access$1200(io.vertx.core.http.impl.HttpServerImpl) -> access$1200
    105:105:boolean access$1300(io.vertx.core.http.impl.HttpServerImpl) -> access$1300
    105:105:java.lang.String[] access$1400() -> access$1400
    105:105:void access$1500(io.vertx.core.http.impl.HttpServerImpl,io.netty.channel.ChannelPipeline) -> access$1500
    105:105:io.vertx.core.http.impl.VertxHttp2ConnectionHandler access$1600(io.vertx.core.http.impl.HttpServerImpl,io.vertx.core.net.impl.HandlerHolder,io.netty.handler.codec.http2.Http2Settings,io.netty.channel.Channel) -> access$1600
    107:115:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpServerImpl$1 -> io.vertx.core.http.impl.HttpServerImpl$1:
    io.vertx.core.http.impl.HttpServerImpl this$0 -> this$0
    255:255:void <init>(io.vertx.core.http.impl.HttpServerImpl) -> <init>
    258:335:void initChannel(io.netty.channel.Channel) -> initChannel
    275:291:void lambda$initChannel$1(io.netty.channel.ChannelPipeline,io.netty.channel.Channel,io.netty.util.concurrent.Future) -> lambda$initChannel$1
    289:289:void lambda$null$0(io.vertx.core.net.impl.HandlerHolder,io.netty.util.concurrent.Future) -> lambda$null$0
io.vertx.core.http.impl.HttpServerImpl$1$1 -> io.vertx.core.http.impl.HttpServerImpl$1$1:
    io.netty.handler.timeout.IdleStateHandler val$idle -> val$idle
    io.netty.channel.ChannelPipeline val$pipeline -> val$pipeline
    io.netty.channel.Channel val$ch -> val$ch
    io.vertx.core.http.impl.HttpServerImpl$1 this$1 -> this$1
    305:305:void <init>(io.vertx.core.http.impl.HttpServerImpl$1,io.netty.handler.timeout.IdleStateHandler,io.netty.channel.ChannelPipeline,io.netty.channel.Channel) -> <init>
    308:317:void configure(io.netty.channel.ChannelHandlerContext,boolean) -> configure
    321:324:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    328:331:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    330:330:void lambda$exceptionCaught$0(io.vertx.core.net.impl.HandlerHolder,java.lang.Throwable) -> lambda$exceptionCaught$0
io.vertx.core.http.impl.HttpServerImpl$2 -> io.vertx.core.http.impl.HttpServerImpl$2:
    int[] $SwitchMap$io$vertx$core$http$impl$FrameType -> $SwitchMap$io$vertx$core$http$impl$FrameType
    688:688:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpServerImpl$Http2UpgradeHandler -> io.vertx.core.http.impl.HttpServerImpl$Http2UpgradeHandler:
    io.netty.handler.codec.http2.Http2Settings settings -> settings
    io.vertx.core.http.impl.HttpServerImpl this$0 -> this$0
    915:915:void <init>(io.vertx.core.http.impl.HttpServerImpl) -> <init>
    921:985:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    966:969:void lambda$channelRead$0(io.netty.channel.ChannelPipeline,io.netty.util.concurrent.Future) -> lambda$channelRead$0
    915:915:void <init>(io.vertx.core.http.impl.HttpServerImpl,io.vertx.core.http.impl.HttpServerImpl$1) -> <init>
io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler -> io.vertx.core.http.impl.HttpServerImpl$HttpStreamHandler:
    io.vertx.core.Handler handler -> handler
    boolean paused -> paused
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.http.impl.HttpServerImpl this$0 -> this$0
    845:845:void <init>(io.vertx.core.http.impl.HttpServerImpl) -> <init>
    852:854:io.vertx.core.Handler handler() -> handler
    858:860:boolean isPaused() -> isPaused
    864:866:io.vertx.core.Handler endHandler() -> endHandler
    871:877:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    882:887:io.vertx.core.streams.ReadStream pause() -> pause
    892:897:io.vertx.core.streams.ReadStream resume() -> resume
    902:905:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    911:911:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    845:845:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    845:845:void <init>(io.vertx.core.http.impl.HttpServerImpl,io.vertx.core.http.impl.HttpServerImpl$1) -> <init>
io.vertx.core.http.impl.HttpServerImpl$ServerHandlerWithWebSockets -> io.vertx.core.http.impl.HttpServerImpl$ServerHandlerWithWebSockets:
    boolean closeFrameSent -> closeFrameSent
    io.netty.handler.codec.http.FullHttpRequest wsRequest -> wsRequest
    io.netty.handler.codec.http.HttpResponseStatus handshakeErrorStatus -> handshakeErrorStatus
    java.lang.String handshakeErrorMsg -> handshakeErrorMsg
    io.vertx.core.http.impl.HttpServerImpl this$0 -> this$0
    643:645:void <init>(io.vertx.core.http.impl.HttpServerImpl,io.vertx.core.net.impl.SSLHelper,io.vertx.core.http.HttpServerOptions,java.lang.String,io.vertx.core.net.impl.HandlerHolder,io.vertx.core.spi.metrics.HttpServerMetrics) -> <init>
    649:732:void handleMessage(io.vertx.core.http.impl.Http1xServerConnection,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    736:791:void handshake(io.vertx.core.http.impl.Http1xServerConnection,io.netty.handler.codec.http.FullHttpRequest,io.netty.channel.Channel,io.netty.channel.ChannelHandlerContext) -> handshake
    636:636:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    749:789:void lambda$handshake$1(io.netty.handler.codec.http.FullHttpRequest,io.vertx.core.http.impl.Http1xServerConnection,io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.vertx.core.net.impl.HandlerHolder,io.netty.channel.Channel,io.netty.channel.ChannelHandlerContext) -> lambda$handshake$1
    761:768:java.lang.String lambda$null$0(io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpRequest,io.vertx.core.http.impl.Http1xServerConnection) -> lambda$null$0
io.vertx.core.http.impl.HttpServerRequestImpl -> io.vertx.core.http.impl.HttpServerRequestImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.http.impl.Http1xServerConnection conn -> conn
    io.netty.handler.codec.http.HttpRequest request -> request
    io.vertx.core.http.HttpServerResponse response -> response
    io.vertx.core.http.HttpVersion version -> version
    io.vertx.core.http.HttpMethod method -> method
    java.lang.String rawMethod -> rawMethod
    java.lang.String uri -> uri
    java.lang.String path -> path
    java.lang.String query -> query
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.MultiMap params -> params
    io.vertx.core.MultiMap headers -> headers
    java.lang.String absoluteURI -> absoluteURI
    io.vertx.core.net.NetSocket netSocket -> netSocket
    io.vertx.core.Handler uploadHandler -> uploadHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.MultiMap attributes -> attributes
    io.netty.handler.codec.http.multipart.HttpPostRequestDecoder decoder -> decoder
    boolean ended -> ended
    91:95:void <init>(io.vertx.core.http.impl.Http1xServerConnection,io.netty.handler.codec.http.HttpRequest,io.vertx.core.http.HttpServerResponse) -> <init>
    99:110:io.vertx.core.http.HttpVersion version() -> version
    115:123:io.vertx.core.http.HttpMethod method() -> method
    128:131:java.lang.String rawMethod() -> rawMethod
    136:139:java.lang.String uri() -> uri
    144:147:java.lang.String path() -> path
    152:155:java.lang.String query() -> query
    160:160:java.lang.String host() -> host
    165:165:io.vertx.core.http.HttpServerResponse response() -> response
    170:173:io.vertx.core.MultiMap headers() -> headers
    178:178:java.lang.String getHeader(java.lang.String) -> getHeader
    183:183:java.lang.String getHeader(java.lang.CharSequence) -> getHeader
    188:191:io.vertx.core.MultiMap params() -> params
    196:196:java.lang.String getParam(java.lang.String) -> getParam
    201:207:io.vertx.core.http.HttpServerRequest handler(io.vertx.core.Handler) -> handler
    212:215:io.vertx.core.http.HttpServerRequest exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    220:225:io.vertx.core.http.HttpServerRequest pause() -> pause
    230:235:io.vertx.core.http.HttpServerRequest resume() -> resume
    240:246:io.vertx.core.http.HttpServerRequest endHandler(io.vertx.core.Handler) -> endHandler
    251:251:java.lang.String scheme() -> scheme
    256:256:boolean isSSL() -> isSSL
    261:261:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    266:273:java.lang.String absoluteURI() -> absoluteURI
    278:278:javax.net.ssl.SSLSession sslSession() -> sslSession
    283:283:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    288:291:io.vertx.core.net.NetSocket netSocket() -> netSocket
    296:302:io.vertx.core.http.HttpServerRequest uploadHandler(io.vertx.core.Handler) -> uploadHandler
    307:307:io.vertx.core.MultiMap formAttributes() -> formAttributes
    312:312:java.lang.String getFormAttribute(java.lang.String) -> getFormAttribute
    317:317:io.vertx.core.http.ServerWebSocket upgrade() -> upgrade
    322:342:io.vertx.core.http.HttpServerRequest setExpectMultipart(boolean) -> setExpectMultipart
    347:349:boolean isExpectMultipart() -> isExpectMultipart
    354:354:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    359:361:boolean isEnded() -> isEnded
    366:366:io.vertx.core.http.HttpServerRequest customFrameHandler(io.vertx.core.Handler) -> customFrameHandler
    371:371:io.vertx.core.http.HttpConnection connection() -> connection
    375:387:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    390:420:void handleEnd() -> handleEnd
    423:428:void handleException(java.lang.Throwable) -> handleException
    431:433:void sendNotImplementedAndClose() -> sendNotImplementedAndClose
    436:439:void checkEnded() -> checkEnded
    444:447:io.vertx.core.MultiMap attributes() -> attributes
    452:452:java.lang.String urlDecode(java.lang.String) -> urlDecode
    58:58:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    58:58:io.vertx.core.streams.ReadStream resume() -> resume
    58:58:io.vertx.core.streams.ReadStream pause() -> pause
    58:58:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    58:58:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    58:58:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    334:334:io.vertx.core.Handler lambda$setExpectMultipart$0() -> lambda$setExpectMultipart$0
    60:60:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpServerResponseImpl -> io.vertx.core.http.impl.HttpServerResponseImpl:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.http.impl.Http1xServerConnection conn -> conn
    io.netty.handler.codec.http.HttpResponseStatus status -> status
    io.netty.handler.codec.http.HttpVersion version -> version
    boolean keepAlive -> keepAlive
    boolean head -> head
    boolean headWritten -> headWritten
    boolean written -> written
    io.vertx.core.Handler drainHandler -> drainHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler closeHandler -> closeHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.Handler headersEndHandler -> headersEndHandler
    io.vertx.core.Handler bodyEndHandler -> bodyEndHandler
    boolean chunked -> chunked
    boolean closed -> closed
    io.vertx.core.http.impl.headers.VertxHttpHeaders headers -> headers
    io.vertx.core.MultiMap trailers -> trailers
    io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    java.lang.String statusMessage -> statusMessage
    long bytesWritten -> bytesWritten
    75:88:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.impl.Http1xServerConnection,io.netty.handler.codec.http.HttpRequest) -> <init>
    92:92:io.vertx.core.MultiMap headers() -> headers
    97:102:io.vertx.core.MultiMap trailers() -> trailers
    107:107:int getStatusCode() -> getStatusCode
    112:113:io.vertx.core.http.HttpServerResponse setStatusCode(int) -> setStatusCode
    118:118:java.lang.String getStatusMessage() -> getStatusMessage
    123:127:io.vertx.core.http.HttpServerResponse setStatusMessage(java.lang.String) -> setStatusMessage
    132:139:io.vertx.core.http.impl.HttpServerResponseImpl setChunked(boolean) -> setChunked
    144:146:boolean isChunked() -> isChunked
    151:155:io.vertx.core.http.impl.HttpServerResponseImpl putHeader(java.lang.String,java.lang.String) -> putHeader
    160:164:io.vertx.core.http.impl.HttpServerResponseImpl putHeader(java.lang.String,java.lang.Iterable) -> putHeader
    169:173:io.vertx.core.http.impl.HttpServerResponseImpl putTrailer(java.lang.String,java.lang.String) -> putTrailer
    178:182:io.vertx.core.http.impl.HttpServerResponseImpl putTrailer(java.lang.String,java.lang.Iterable) -> putTrailer
    187:191:io.vertx.core.http.HttpServerResponse putHeader(java.lang.CharSequence,java.lang.CharSequence) -> putHeader
    196:200:io.vertx.core.http.HttpServerResponse putHeader(java.lang.CharSequence,java.lang.Iterable) -> putHeader
    205:209:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.CharSequence,java.lang.CharSequence) -> putTrailer
    214:218:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.CharSequence,java.lang.Iterable) -> putTrailer
    223:227:io.vertx.core.http.HttpServerResponse setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    232:235:boolean writeQueueFull() -> writeQueueFull
    240:247:io.vertx.core.http.HttpServerResponse drainHandler(io.vertx.core.Handler) -> drainHandler
    252:258:io.vertx.core.http.HttpServerResponse exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    263:269:io.vertx.core.http.HttpServerResponse closeHandler(io.vertx.core.Handler) -> closeHandler
    274:280:io.vertx.core.http.HttpServerResponse endHandler(io.vertx.core.Handler) -> endHandler
    285:286:io.vertx.core.http.impl.HttpServerResponseImpl write(io.vertx.core.buffer.Buffer) -> write
    291:291:io.vertx.core.http.impl.HttpServerResponseImpl write(java.lang.String,java.lang.String) -> write
    296:296:io.vertx.core.http.impl.HttpServerResponseImpl write(java.lang.String) -> write
    301:302:io.vertx.core.http.HttpServerResponse writeContinue() -> writeContinue
    307:308:void end(java.lang.String) -> end
    312:313:void end(java.lang.String,java.lang.String) -> end
    317:320:void end(io.vertx.core.buffer.Buffer) -> end
    324:334:void close() -> close
    338:341:void end() -> end
    345:346:io.vertx.core.http.impl.HttpServerResponseImpl sendFile(java.lang.String,long,long) -> sendFile
    351:352:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long,io.vertx.core.Handler) -> sendFile
    357:359:boolean ended() -> ended
    364:366:boolean closed() -> closed
    371:373:boolean headWritten() -> headWritten
    378:380:long bytesWritten() -> bytesWritten
    385:388:io.vertx.core.http.HttpServerResponse headersEndHandler(io.vertx.core.Handler) -> headersEndHandler
    393:396:io.vertx.core.http.HttpServerResponse bodyEndHandler(io.vertx.core.Handler) -> bodyEndHandler
    400:423:void end0(io.netty.buffer.ByteBuf) -> end0
    426:501:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler) -> doSendFile
    504:507:void closeConnAfterWrite() -> closeConnAfterWrite
    510:515:void handleDrained() -> handleDrained
    518:523:void handleException(java.lang.Throwable) -> handleException
    526:540:void handleClosed() -> handleClosed
    543:549:void checkValid() -> checkValid
    552:569:void prepareHeaders(long) -> prepareHeaders
    572:590:io.vertx.core.http.impl.HttpServerResponseImpl write(io.netty.buffer.ByteBuf) -> write
    595:595:int streamId() -> streamId
    600:600:void reset(long) -> reset
    604:604:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> push
    609:609:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.Handler) -> push
    614:614:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler) -> push
    619:620:io.vertx.core.http.HttpServerResponse push(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler) -> push
    625:625:io.vertx.core.http.HttpServerResponse writeCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> writeCustomFrame
    52:52:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long) -> sendFile
    52:52:io.vertx.core.http.HttpServerResponse write(java.lang.String) -> write
    52:52:io.vertx.core.http.HttpServerResponse write(java.lang.String,java.lang.String) -> write
    52:52:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.String,java.lang.Iterable) -> putTrailer
    52:52:io.vertx.core.http.HttpServerResponse putTrailer(java.lang.String,java.lang.String) -> putTrailer
    52:52:io.vertx.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.Iterable) -> putHeader
    52:52:io.vertx.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.String) -> putHeader
    52:52:io.vertx.core.http.HttpServerResponse setChunked(boolean) -> setChunked
    52:52:io.vertx.core.http.HttpServerResponse write(io.vertx.core.buffer.Buffer) -> write
    52:52:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    52:52:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    52:52:void end(java.lang.Object) -> end
    52:52:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    52:52:io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    52:52:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    530:530:void lambda$handleClosed$6(java.lang.Void) -> lambda$handleClosed$6
    506:506:void lambda$closeConnAfterWrite$5(io.netty.util.concurrent.Future) -> lambda$closeConnAfterWrite$5
    483:489:void lambda$doSendFile$4(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$doSendFile$4
    488:488:void lambda$null$3(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void) -> lambda$null$3
    467:467:void lambda$doSendFile$2(io.vertx.core.Handler,java.io.IOException,java.lang.Void) -> lambda$doSendFile$2
    436:436:void lambda$doSendFile$1(io.vertx.core.Handler,java.lang.Void) -> lambda$doSendFile$1
    245:245:void lambda$drainHandler$0(java.lang.Void) -> lambda$drainHandler$0
    54:54:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpUtils -> io.vertx.core.http.impl.HttpUtils:
    io.vertx.core.http.impl.HttpUtils$CustomCompressor compressor -> compressor
    46:47:void <init>() -> <init>
    50:56:int indexOfSlash(java.lang.CharSequence,int) -> indexOfSlash
    60:60:boolean matches(java.lang.CharSequence,int,java.lang.String) -> matches
    64:79:boolean matches(java.lang.CharSequence,int,java.lang.String,boolean) -> matches
    94:150:java.lang.String removeDots(java.lang.CharSequence) -> removeDots
    157:157:java.net.URI resolveURIReference(java.lang.String,java.lang.String) -> resolveURIReference
    164:212:java.net.URI resolveURIReference(java.net.URI,java.lang.String) -> resolveURIReference
    220:239:java.lang.String parsePath(java.lang.String) -> parsePath
    246:250:java.lang.String parseQuery(java.lang.String) -> parseQuery
    256:269:java.lang.String absoluteURI(java.lang.String,io.vertx.core.http.HttpServerRequest) -> absoluteURI
    273:281:io.vertx.core.MultiMap params(java.lang.String) -> params
    285:311:void fromVertxInitialSettings(boolean,io.vertx.core.http.Http2Settings,io.netty.handler.codec.http2.Http2Settings) -> fromVertxInitialSettings
    314:326:io.netty.handler.codec.http2.Http2Settings fromVertxSettings(io.vertx.core.http.Http2Settings) -> fromVertxSettings
    330:360:io.vertx.core.http.Http2Settings toVertxSettings(io.netty.handler.codec.http2.Http2Settings) -> toVertxSettings
    365:379:io.netty.handler.codec.http2.Http2Settings decodeSettings(java.lang.String) -> decodeSettings
    383:389:io.netty.buffer.ByteBuf generateWSCloseFrameByteBuf(short,java.lang.String) -> generateWSCloseFrameByteBuf
    401:413:java.lang.String determineContentEncoding(io.netty.handler.codec.http2.Http2Headers) -> determineContentEncoding
    417:446:io.netty.handler.codec.http.HttpMethod toNettyHttpMethod(io.vertx.core.http.HttpMethod,java.lang.String) -> toNettyHttpMethod
    452:460:io.netty.handler.codec.http.HttpVersion toNettyHttpVersion(io.vertx.core.http.HttpVersion) -> toNettyHttpVersion
    465:470:io.vertx.core.http.HttpVersion toVertxHttpVersion(io.netty.handler.codec.http.HttpVersion) -> toVertxHttpVersion
    476:478:io.vertx.core.http.HttpMethod toVertxMethod(java.lang.String) -> toVertxMethod
    356:359:void lambda$toVertxSettings$2(io.vertx.core.http.Http2Settings,java.lang.Character,java.lang.Long) -> lambda$toVertxSettings$2
    323:324:void lambda$fromVertxSettings$1(io.netty.handler.codec.http2.Http2Settings,java.lang.Integer,java.lang.Long) -> lambda$fromVertxSettings$1
    307:308:void lambda$fromVertxInitialSettings$0(io.netty.handler.codec.http2.Http2Settings,java.lang.Integer,java.lang.Long) -> lambda$fromVertxInitialSettings$0
    398:398:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpUtils$1 -> io.vertx.core.http.impl.HttpUtils$1:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    int[] $SwitchMap$io$vertx$core$http$HttpMethod -> $SwitchMap$io$vertx$core$http$HttpMethod
    int[] $SwitchMap$io$vertx$core$http$HttpVersion -> $SwitchMap$io$vertx$core$http$HttpVersion
    405:452:void <clinit>() -> <clinit>
io.vertx.core.http.impl.HttpUtils$CustomCompressor -> io.vertx.core.http.impl.HttpUtils$CustomCompressor:
    392:392:void <init>() -> <init>
    395:395:io.netty.handler.codec.compression.ZlibWrapper determineWrapper(java.lang.String) -> determineWrapper
    392:392:void <init>(io.vertx.core.http.impl.HttpUtils$1) -> <init>
io.vertx.core.http.impl.MimeMapping -> io.vertx.core.http.impl.MimeMapping:
    java.util.Map m -> m
    23:23:void <init>() -> <init>
    1012:1012:java.lang.String getMimeTypeForExtension(java.lang.String) -> getMimeTypeForExtension
    1015:1020:java.lang.String getMimeTypeForFilename(java.lang.String) -> getMimeTypeForFilename
    24:1009:void <clinit>() -> <clinit>
io.vertx.core.http.impl.NettyFileUpload -> io.vertx.core.http.impl.NettyFileUpload:
    io.vertx.core.http.impl.HttpServerFileUploadImpl upload -> upload
    java.lang.String name -> name
    java.lang.String contentType -> contentType
    java.lang.String filename -> filename
    java.lang.String contentTransferEncoding -> contentTransferEncoding
    java.nio.charset.Charset charset -> charset
    boolean completed -> completed
    long maxSize -> maxSize
    36:45:void <init>(io.vertx.core.http.impl.HttpServerFileUploadImpl,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset) -> <init>
    49:52:void setContent(io.netty.buffer.ByteBuf) -> setContent
    56:61:void addContent(io.netty.buffer.ByteBuf,boolean) -> addContent
    65:65:void setContent(java.io.File) -> setContent
    70:70:void setContent(java.io.InputStream) -> setContent
    75:75:boolean isCompleted() -> isCompleted
    80:80:long length() -> length
    85:85:void delete() -> delete
    90:90:long definedLength() -> definedLength
    95:98:void checkSize(long) -> checkSize
    102:102:long getMaxSize() -> getMaxSize
    107:108:void setMaxSize(long) -> setMaxSize
    112:112:byte[] get() -> get
    117:117:io.netty.buffer.ByteBuf getChunk(int) -> getChunk
    122:122:java.lang.String getString() -> getString
    127:127:java.lang.String getString(java.nio.charset.Charset) -> getString
    132:133:void setCharset(java.nio.charset.Charset) -> setCharset
    137:137:java.nio.charset.Charset getCharset() -> getCharset
    142:142:boolean renameTo(java.io.File) -> renameTo
    147:147:boolean isInMemory() -> isInMemory
    152:152:java.io.File getFile() -> getFile
    157:157:java.lang.String getName() -> getName
    162:162:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    167:167:int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    172:172:java.lang.String getFilename() -> getFilename
    177:178:void setFilename(java.lang.String) -> setFilename
    182:183:void setContentType(java.lang.String) -> setContentType
    187:187:java.lang.String getContentType() -> getContentType
    192:193:void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    197:197:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    202:202:io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    207:207:io.netty.handler.codec.http.multipart.FileUpload copy() -> copy
    212:212:io.netty.handler.codec.http.multipart.FileUpload duplicate() -> duplicate
    217:217:io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate() -> retainedDuplicate
    222:222:io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf) -> replace
    227:227:io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    232:232:io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    237:237:io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    242:242:io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    247:247:io.netty.buffer.ByteBuf content() -> content
    252:252:int refCnt() -> refCnt
    257:257:boolean release() -> release
    262:262:boolean release(int) -> release
    27:27:io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    27:27:io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    27:27:io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    27:27:io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf) -> replace
    27:27:io.netty.handler.codec.http.multipart.HttpData retainedDuplicate() -> retainedDuplicate
    27:27:io.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    27:27:io.netty.handler.codec.http.multipart.HttpData copy() -> copy
    27:27:io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    27:27:io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    27:27:io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    27:27:io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    27:27:int compareTo(java.lang.Object) -> compareTo
    27:27:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:io.netty.util.ReferenceCounted touch() -> touch
    27:27:io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:io.netty.util.ReferenceCounted retain() -> retain
    27:27:io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    27:27:io.netty.buffer.ByteBufHolder touch() -> touch
    27:27:io.netty.buffer.ByteBufHolder retain(int) -> retain
    27:27:io.netty.buffer.ByteBufHolder retain() -> retain
    27:27:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf) -> replace
    27:27:io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    27:27:io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    27:27:io.netty.buffer.ByteBufHolder copy() -> copy
io.vertx.core.http.impl.NettyFileUploadDataFactory -> io.vertx.core.http.impl.NettyFileUploadDataFactory:
    io.vertx.core.Vertx vertx -> vertx
    io.vertx.core.http.HttpServerRequest request -> request
    java.util.function.Supplier lazyUploadHandler -> lazyUploadHandler
    35:39:void <init>(io.vertx.core.Vertx,io.vertx.core.http.HttpServerRequest,java.util.function.Supplier) -> <init>
    43:51:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> createFileUpload
io.vertx.core.http.impl.ServerWebSocketImpl -> io.vertx.core.http.impl.ServerWebSocketImpl:
    java.lang.String uri -> uri
    java.lang.String path -> path
    java.lang.String query -> query
    java.util.function.Supplier connect -> connect
    io.vertx.core.MultiMap headers -> headers
    boolean connected -> connected
    boolean rejected -> rejected
    io.netty.handler.codec.http.HttpResponseStatus rejectedStatus -> rejectedStatus
    53:59:void <init>(io.vertx.core.impl.VertxInternal,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.impl.Http1xConnectionBase,boolean,java.util.function.Supplier,int,int) -> <init>
    63:63:java.lang.String uri() -> uri
    68:68:java.lang.String path() -> path
    73:73:java.lang.String query() -> query
    78:78:io.vertx.core.MultiMap headers() -> headers
    83:88:void accept() -> accept
    92:93:void reject() -> reject
    97:98:void reject(int) -> reject
    101:112:void reject(io.netty.handler.codec.http.HttpResponseStatus) -> reject
    116:116:javax.net.ssl.SSLSession sslSession() -> sslSession
    121:121:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    126:133:void close() -> close
    137:142:io.vertx.core.http.ServerWebSocket writeFrame(io.vertx.core.http.WebSocketFrame) -> writeFrame
    146:154:boolean checkAccept() -> checkAccept
    158:160:void connect() -> connect
    164:169:void connectNow() -> connectNow
    172:174:boolean isRejected() -> isRejected
    178:180:io.netty.handler.codec.http.HttpResponseStatus getRejectedStatus() -> getRejectedStatus
    38:38:io.vertx.core.http.WebSocketBase writeFrame(io.vertx.core.http.WebSocketFrame) -> writeFrame
    38:38:io.vertx.core.http.ServerWebSocket frameHandler(io.vertx.core.Handler) -> frameHandler
    38:38:io.vertx.core.http.ServerWebSocket closeHandler(io.vertx.core.Handler) -> closeHandler
    38:38:io.vertx.core.http.ServerWebSocket writeBinaryMessage(io.vertx.core.buffer.Buffer) -> writeBinaryMessage
    38:38:io.vertx.core.http.ServerWebSocket writeFinalBinaryFrame(io.vertx.core.buffer.Buffer) -> writeFinalBinaryFrame
    38:38:io.vertx.core.http.ServerWebSocket writeFinalTextFrame(java.lang.String) -> writeFinalTextFrame
    38:38:io.vertx.core.http.ServerWebSocket drainHandler(io.vertx.core.Handler) -> drainHandler
    38:38:io.vertx.core.http.ServerWebSocket setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    38:38:io.vertx.core.http.ServerWebSocket write(io.vertx.core.buffer.Buffer) -> write
    38:38:io.vertx.core.http.ServerWebSocket endHandler(io.vertx.core.Handler) -> endHandler
    38:38:io.vertx.core.http.ServerWebSocket resume() -> resume
    38:38:io.vertx.core.http.ServerWebSocket pause() -> pause
    38:38:io.vertx.core.http.ServerWebSocket handler(io.vertx.core.Handler) -> handler
    38:38:io.vertx.core.http.ServerWebSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.impl.VertxHttp2ClientUpgradeCodec -> io.vertx.core.http.impl.VertxHttp2ClientUpgradeCodec:
    java.util.List UPGRADE_HEADERS -> UPGRADE_HEADERS
    io.vertx.core.http.Http2Settings settings -> settings
    39:41:void <init>(io.vertx.core.http.Http2Settings) -> <init>
    45:45:java.lang.CharSequence protocol() -> protocol
    50:59:java.util.Collection setUpgradeHeaders(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpRequest) -> setUpgradeHeaders
    64:64:void upgradeTo(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse) -> upgradeTo
    35:35:void <clinit>() -> <clinit>
io.vertx.core.http.impl.VertxHttp2ConnectionHandler -> io.vertx.core.http.impl.VertxHttp2ConnectionHandler:
    java.util.function.Function connectionFactory -> connectionFactory
    io.vertx.core.http.impl.Http2ConnectionBase connection -> connection
    io.netty.channel.ChannelHandlerContext chctx -> chctx
    io.vertx.core.Handler addHandler -> addHandler
    io.vertx.core.Handler removeHandler -> removeHandler
    boolean useDecompressor -> useDecompressor
    io.netty.handler.codec.http2.Http2Settings serverUpgradeSettings -> serverUpgradeSettings
    boolean upgrade -> upgrade
    boolean $assertionsDisabled -> $assertionsDisabled
    50:61:void <init>(java.util.function.Function,boolean,io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings,io.netty.handler.codec.http2.Http2Settings,boolean) -> <init>
    64:64:io.netty.channel.ChannelHandlerContext context() -> context
    74:75:io.vertx.core.http.impl.VertxHttp2ConnectionHandler addHandler(io.vertx.core.Handler) -> addHandler
    85:86:io.vertx.core.http.impl.VertxHttp2ConnectionHandler removeHandler(io.vertx.core.Handler) -> removeHandler
    91:93:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    97:99:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    103:117:void channelActive(io.netty.channel.ChannelHandlerContext) -> channelActive
    121:126:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    130:135:void onConnectionError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,io.netty.handler.codec.http2.Http2Exception) -> onConnectionError
    139:144:void onStreamError(io.netty.channel.ChannelHandlerContext,java.lang.Throwable,io.netty.handler.codec.http2.Http2Exception$StreamException) -> onStreamError
    149:155:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    161:162:void onStreamClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamClosed
    166:166:void onStreamAdded(io.netty.handler.codec.http2.Http2Stream) -> onStreamAdded
    170:170:void onStreamActive(io.netty.handler.codec.http2.Http2Stream) -> onStreamActive
    174:174:void onStreamHalfClosed(io.netty.handler.codec.http2.Http2Stream) -> onStreamHalfClosed
    178:178:void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream) -> onStreamRemoved
    182:183:void onGoAwaySent(int,long,io.netty.buffer.ByteBuf) -> onGoAwaySent
    187:188:void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf) -> onGoAwayReceived
    193:201:void writeHeaders(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean) -> writeHeaders
    204:205:void _writeHeaders(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean) -> _writeHeaders
    208:216:void writeData(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,boolean) -> writeData
    219:229:void _writeData(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,boolean) -> _writeData
    232:241:io.netty.channel.ChannelFuture writePing(io.netty.buffer.ByteBuf) -> writePing
    245:247:void _writePing(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> _writePing
    254:261:void consume(io.netty.handler.codec.http2.Http2Stream,int) -> consume
    264:272:void writeFrame(io.netty.handler.codec.http2.Http2Stream,byte,short,io.netty.buffer.ByteBuf) -> writeFrame
    275:277:void _writeFrame(io.netty.handler.codec.http2.Http2Stream,byte,short,io.netty.buffer.ByteBuf) -> _writeFrame
    280:288:void writeReset(int,long) -> writeReset
    291:293:void _writeReset(int,long) -> _writeReset
    296:304:void writeGoAway(long,int,io.netty.buffer.ByteBuf) -> writeGoAway
    307:309:void _writeGoAway(long,int,io.netty.buffer.ByteBuf) -> _writeGoAway
    312:321:io.netty.channel.ChannelFuture writeSettings(io.netty.handler.codec.http2.Http2Settings) -> writeSettings
    325:327:void _writeSettings(io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> _writeSettings
    330:347:void writePushPromise(int,io.netty.handler.codec.http2.Http2Headers,io.vertx.core.Handler) -> writePushPromise
    350:351:void _writePushPromise(int,int,io.netty.handler.codec.http2.Http2Headers,io.netty.channel.ChannelPromise) -> _writePushPromise
    357:357:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    362:362:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    367:369:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    373:373:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    378:378:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    383:383:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    388:398:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    402:402:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    407:407:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    412:412:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    417:417:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    422:422:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    427:427:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
    344:345:void lambda$writePushPromise$11(int,int,io.netty.handler.codec.http2.Http2Headers,io.netty.channel.ChannelPromise) -> lambda$writePushPromise$11
    333:338:void lambda$writePushPromise$10(io.vertx.core.Handler,int,io.netty.util.concurrent.Future) -> lambda$writePushPromise$10
    318:319:void lambda$writeSettings$9(io.netty.handler.codec.http2.Http2Settings,io.netty.channel.ChannelPromise) -> lambda$writeSettings$9
    301:302:void lambda$writeGoAway$8(long,int,io.netty.buffer.ByteBuf) -> lambda$writeGoAway$8
    285:286:void lambda$writeReset$7(int,long) -> lambda$writeReset$7
    269:270:void lambda$writeFrame$6(io.netty.handler.codec.http2.Http2Stream,byte,short,io.netty.buffer.ByteBuf) -> lambda$writeFrame$6
    238:239:void lambda$writePing$5(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise) -> lambda$writePing$5
    213:214:void lambda$writeData$4(io.netty.handler.codec.http2.Http2Stream,io.netty.buffer.ByteBuf,boolean) -> lambda$writeData$4
    198:199:void lambda$writeHeaders$3(io.netty.handler.codec.http2.Http2Stream,io.netty.handler.codec.http2.Http2Headers,boolean) -> lambda$writeHeaders$3
    140:141:void lambda$onStreamError$2(io.netty.handler.codec.http2.Http2Exception$StreamException) -> lambda$onStreamError$2
    131:132:void lambda$onConnectionError$1(java.lang.Throwable) -> lambda$onConnectionError$1
    56:59:void lambda$new$0(io.netty.handler.codec.http2.Http2Stream) -> lambda$new$0
    31:31:void <clinit>() -> <clinit>
io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder -> io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder:
    io.netty.channel.Channel channel -> channel
    boolean useCompression -> useCompression
    boolean useDecompression -> useDecompression
    int compressionLevel -> compressionLevel
    io.vertx.core.http.Http2Settings initialSettings -> initialSettings
    java.util.function.Function connectionFactory -> connectionFactory
    boolean logEnabled -> logEnabled
    boolean upgrade -> upgrade
    io.netty.handler.codec.http2.Http2Settings serverUpgradeSettings -> serverUpgradeSettings
    42:51:void <init>(io.netty.channel.Channel) -> <init>
    54:54:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder server(boolean) -> server
    58:59:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder initialSettings(io.vertx.core.http.Http2Settings) -> initialSettings
    63:64:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder useCompression(boolean) -> useCompression
    68:69:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder clientUpgrade(boolean) -> clientUpgrade
    73:75:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder serverUpgrade(io.netty.handler.codec.http2.Http2Settings) -> serverUpgrade
    98:99:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder compressionLevel(int) -> compressionLevel
    103:104:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder useDecompression(boolean) -> useDecompression
    108:109:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder connectionFactory(java.util.function.Function) -> connectionFactory
    113:114:io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder logEnabled(boolean) -> logEnabled
    119:180:io.vertx.core.http.impl.VertxHttp2ConnectionHandler build() -> build
    185:197:io.vertx.core.http.impl.VertxHttp2ConnectionHandler build(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings) -> build
    37:37:io.netty.handler.codec.http2.Http2ConnectionHandler build(io.netty.handler.codec.http2.Http2ConnectionDecoder,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2Settings) -> build
    37:37:io.netty.handler.codec.http2.Http2ConnectionHandler build() -> build
    37:37:io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder server(boolean) -> server
io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder$1 -> io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder$1:
    io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder this$0 -> this$0
    126:126:void <init>(io.vertx.core.http.impl.VertxHttp2ConnectionHandlerBuilder) -> <init>
    129:129:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean) -> onDataRead
    133:133:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean) -> onHeadersRead
    137:137:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean) -> onHeadersRead
    141:141:void onPriorityRead(io.netty.channel.ChannelHandlerContext,int,int,short,boolean) -> onPriorityRead
    145:145:void onRstStreamRead(io.netty.channel.ChannelHandlerContext,int,long) -> onRstStreamRead
    149:149:void onSettingsAckRead(io.netty.channel.ChannelHandlerContext) -> onSettingsAckRead
    153:153:void onSettingsRead(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Settings) -> onSettingsRead
    157:157:void onPingRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingRead
    161:161:void onPingAckRead(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf) -> onPingAckRead
    165:165:void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int) -> onPushPromiseRead
    169:169:void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf) -> onGoAwayRead
    173:173:void onWindowUpdateRead(io.netty.channel.ChannelHandlerContext,int,int) -> onWindowUpdateRead
    177:177:void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf) -> onUnknownFrame
io.vertx.core.http.impl.VertxHttp2NetSocket -> io.vertx.core.http.impl.VertxHttp2NetSocket:
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler closeHandler -> closeHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler drainHandler -> drainHandler
    50:51:void <init>(io.vertx.core.http.impl.Http2ConnectionBase,io.netty.handler.codec.http2.Http2Stream,boolean) -> <init>
    58:65:void handleEnd(io.vertx.core.MultiMap) -> handleEnd
    69:72:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    76:77:void handleReset(long) -> handleReset
    81:84:void handleException(java.lang.Throwable) -> handleException
    88:91:void handleClose() -> handleClose
    95:99:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    105:108:io.vertx.core.net.NetSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    113:116:io.vertx.core.net.NetSocket handler(io.vertx.core.Handler) -> handler
    121:121:io.vertx.core.net.NetSocket pause() -> pause
    126:126:io.vertx.core.net.NetSocket resume() -> resume
    131:134:io.vertx.core.net.NetSocket endHandler(io.vertx.core.Handler) -> endHandler
    139:142:io.vertx.core.net.NetSocket write(io.vertx.core.buffer.Buffer) -> write
    147:147:io.vertx.core.net.NetSocket setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    152:155:io.vertx.core.net.NetSocket drainHandler(io.vertx.core.Handler) -> drainHandler
    160:160:boolean writeQueueFull() -> writeQueueFull
    166:166:java.lang.String writeHandlerID() -> writeHandlerID
    171:171:io.vertx.core.net.NetSocket write(java.lang.String) -> write
    176:180:io.vertx.core.net.NetSocket write(java.lang.String,java.lang.String) -> write
    185:185:io.vertx.core.net.NetSocket sendFile(java.lang.String,long,long) -> sendFile
    190:239:io.vertx.core.net.NetSocket sendFile(java.lang.String,long,long,io.vertx.core.Handler) -> sendFile
    244:244:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    249:249:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    254:257:void end() -> end
    261:264:void end(io.vertx.core.buffer.Buffer) -> end
    268:269:void close() -> close
    273:276:io.vertx.core.net.NetSocket closeHandler(io.vertx.core.Handler) -> closeHandler
    281:281:io.vertx.core.net.NetSocket upgradeToSsl(io.vertx.core.Handler) -> upgradeToSsl
    286:286:io.vertx.core.net.NetSocket upgradeToSsl(java.lang.String,io.vertx.core.Handler) -> upgradeToSsl
    291:291:boolean isSsl() -> isSsl
    296:296:javax.net.ssl.SSLSession sslSession() -> sslSession
    301:301:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    306:306:java.lang.String indicatedServerName() -> indicatedServerName
    41:41:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    41:41:io.vertx.core.streams.ReadStream resume() -> resume
    41:41:io.vertx.core.streams.ReadStream pause() -> pause
    41:41:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    41:41:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    41:41:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    41:41:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    41:41:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    41:41:void end(java.lang.Object) -> end
    41:41:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    41:41:io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    232:237:void lambda$sendFile$4(io.vertx.core.http.impl.FileStreamChannel,java.io.RandomAccessFile,io.vertx.core.Future,io.netty.channel.ChannelFuture) -> lambda$sendFile$4
    219:224:void lambda$sendFile$3(io.vertx.core.Handler,io.vertx.core.Context,io.vertx.core.AsyncResult) -> lambda$sendFile$3
    221:222:void lambda$null$2(io.vertx.core.Handler,java.lang.Void) -> lambda$null$2
    208:208:void lambda$sendFile$1(io.vertx.core.Handler,java.io.IOException,java.lang.Void) -> lambda$sendFile$1
    196:196:void lambda$sendFile$0(io.vertx.core.Handler,java.lang.Void) -> lambda$sendFile$0
io.vertx.core.http.impl.VertxHttp2Stream -> io.vertx.core.http.impl.VertxHttp2Stream:
    java.lang.Object END -> END
    io.vertx.core.http.impl.Http2ConnectionBase conn -> conn
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.vertx.core.impl.ContextImpl context -> context
    io.netty.channel.ChannelHandlerContext handlerContext -> handlerContext
    io.netty.handler.codec.http2.Http2Stream stream -> stream
    java.util.ArrayDeque pending -> pending
    boolean paused -> paused
    boolean writable -> writable
    38:49:void <init>(io.vertx.core.http.impl.Http2ConnectionBase,io.netty.handler.codec.http2.Http2Stream,boolean) -> <init>
    52:57:void onResetRead(long) -> onResetRead
    60:73:boolean onDataRead(io.vertx.core.buffer.Buffer) -> onDataRead
    77:81:void onWritabilityChanged() -> onWritabilityChanged
    84:85:void onEnd() -> onEnd
    88:99:void onEnd(io.vertx.core.MultiMap) -> onEnd
    105:122:void checkNextTick(java.lang.Void) -> checkNextTick
    125:125:int id() -> id
    129:130:void doPause() -> doPause
    133:135:void doResume() -> doResume
    138:140:boolean isNotWritable() -> isNotWritable
    144:145:void writeFrame(int,int,io.netty.buffer.ByteBuf) -> writeFrame
    148:149:void writeHeaders(io.netty.handler.codec.http2.Http2Headers,boolean) -> writeHeaders
    152:153:void writeData(io.netty.buffer.ByteBuf,boolean) -> writeData
    156:157:void writeReset(long) -> writeReset
    160:160:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    163:163:void handleData(io.vertx.core.buffer.Buffer) -> handleData
    166:166:void handleCustomFrame(int,int,io.vertx.core.buffer.Buffer) -> handleCustomFrame
    169:169:void handleEnd(io.vertx.core.MultiMap) -> handleEnd
    172:172:void handleReset(long) -> handleReset
    175:175:void handleException(java.lang.Throwable) -> handleException
    178:178:void handleClose() -> handleClose
    30:30:void <clinit>() -> <clinit>
io.vertx.core.http.impl.VertxHttpHandler -> io.vertx.core.http.impl.VertxHttpHandler:
    36:36:void <init>() -> <init>
    39:39:io.netty.buffer.ByteBuf safeBuffer(io.netty.buffer.ByteBufHolder,io.netty.buffer.ByteBufAllocator) -> safeBuffer
    44:77:java.lang.Object decode(java.lang.Object,io.netty.buffer.ByteBufAllocator) -> decode
io.vertx.core.http.impl.VertxHttpResponseEncoder -> io.vertx.core.http.impl.VertxHttpResponseEncoder:
    io.netty.channel.ChannelHandlerContext context -> context
    27:27:void <init>() -> <init>
    32:33:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    37:39:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    45:45:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpResponse) -> isContentAlwaysEmpty
    27:27:boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
io.vertx.core.http.impl.WebSocketFrameFactoryImpl -> io.vertx.core.http.impl.WebSocketFrameFactoryImpl:
    22:22:void <init>() -> <init>
    27:27:io.vertx.core.http.WebSocketFrame binaryFrame(io.vertx.core.buffer.Buffer,boolean) -> binaryFrame
    32:32:io.vertx.core.http.WebSocketFrame textFrame(java.lang.String,boolean) -> textFrame
    37:37:io.vertx.core.http.WebSocketFrame continuationFrame(io.vertx.core.buffer.Buffer,boolean) -> continuationFrame
    42:42:io.vertx.core.http.WebSocketFrame pingFrame(io.vertx.core.buffer.Buffer) -> pingFrame
    47:47:io.vertx.core.http.WebSocketFrame pongFrame(io.vertx.core.buffer.Buffer) -> pongFrame
io.vertx.core.http.impl.WebSocketImpl -> io.vertx.core.http.impl.WebSocketImpl:
    32:33:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.impl.Http1xClientConnection,boolean,int,int) -> <init>
    37:44:void handleClosed() -> handleClosed
    27:27:io.vertx.core.http.WebSocket frameHandler(io.vertx.core.Handler) -> frameHandler
    27:27:io.vertx.core.http.WebSocket closeHandler(io.vertx.core.Handler) -> closeHandler
    27:27:io.vertx.core.http.WebSocket writeTextMessage(java.lang.String) -> writeTextMessage
    27:27:io.vertx.core.http.WebSocket writeBinaryMessage(io.vertx.core.buffer.Buffer) -> writeBinaryMessage
    27:27:io.vertx.core.http.WebSocket writeFinalBinaryFrame(io.vertx.core.buffer.Buffer) -> writeFinalBinaryFrame
    27:27:io.vertx.core.http.WebSocket writeFinalTextFrame(java.lang.String) -> writeFinalTextFrame
    27:27:io.vertx.core.http.WebSocket writeFrame(io.vertx.core.http.WebSocketFrame) -> writeFrame
    27:27:io.vertx.core.http.WebSocket drainHandler(io.vertx.core.Handler) -> drainHandler
    27:27:io.vertx.core.http.WebSocket setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    27:27:io.vertx.core.http.WebSocket write(io.vertx.core.buffer.Buffer) -> write
    27:27:io.vertx.core.http.WebSocket endHandler(io.vertx.core.Handler) -> endHandler
    27:27:io.vertx.core.http.WebSocket resume() -> resume
    27:27:io.vertx.core.http.WebSocket pause() -> pause
    27:27:io.vertx.core.http.WebSocket handler(io.vertx.core.Handler) -> handler
    27:27:io.vertx.core.http.WebSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.http.impl.WebSocketImplBase -> io.vertx.core.http.impl.WebSocketImplBase:
    boolean supportsContinuation -> supportsContinuation
    java.lang.String textHandlerID -> textHandlerID
    java.lang.String binaryHandlerID -> binaryHandlerID
    int maxWebSocketFrameSize -> maxWebSocketFrameSize
    int maxWebSocketMessageSize -> maxWebSocketMessageSize
    io.vertx.core.eventbus.MessageConsumer binaryHandlerRegistration -> binaryHandlerRegistration
    io.vertx.core.eventbus.MessageConsumer textHandlerRegistration -> textHandlerRegistration
    java.lang.String subProtocol -> subProtocol
    java.lang.Object metric -> metric
    io.vertx.core.Handler frameHandler -> frameHandler
    io.vertx.core.Handler pongHandler -> pongHandler
    io.vertx.core.Handler dataHandler -> dataHandler
    io.vertx.core.Handler drainHandler -> drainHandler
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler closeHandler -> closeHandler
    io.vertx.core.Handler endHandler -> endHandler
    io.vertx.core.http.impl.Http1xConnectionBase conn -> conn
    boolean closed -> closed
    63:74:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.impl.Http1xConnectionBase,boolean,int,int) -> <init>
    77:77:java.lang.String binaryHandlerID() -> binaryHandlerID
    81:81:java.lang.String textHandlerID() -> textHandlerID
    85:88:boolean writeQueueFull() -> writeQueueFull
    92:97:void close() -> close
    100:101:void close(short) -> close
    104:109:void close(short,java.lang.String) -> close
    113:113:boolean isSsl() -> isSsl
    118:118:javax.net.ssl.SSLSession sslSession() -> sslSession
    123:123:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    128:128:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    133:133:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    138:138:io.vertx.core.http.WebSocketBase writeFinalTextFrame(java.lang.String) -> writeFinalTextFrame
    143:143:io.vertx.core.http.WebSocketBase writeFinalBinaryFrame(io.vertx.core.buffer.Buffer) -> writeFinalBinaryFrame
    148:150:java.lang.String subProtocol() -> subProtocol
    154:157:void subProtocol(java.lang.String) -> subProtocol
    161:165:io.vertx.core.http.WebSocketBase writeBinaryMessage(io.vertx.core.buffer.Buffer) -> writeBinaryMessage
    170:174:io.vertx.core.http.WebSocketBase writeTextMessage(java.lang.String) -> writeTextMessage
    179:183:io.vertx.core.http.WebSocketBase write(io.vertx.core.buffer.Buffer) -> write
    188:189:io.vertx.core.http.WebSocketBase writePing(io.vertx.core.buffer.Buffer) -> writePing
    194:195:io.vertx.core.http.WebSocketBase writePong(io.vertx.core.buffer.Buffer) -> writePong
    199:201:void writeMessageInternal(io.vertx.core.buffer.Buffer) -> writeMessageInternal
    204:207:void writeTextMessageInternal(java.lang.String) -> writeTextMessageInternal
    214:234:void writePartialMessage(io.vertx.core.http.impl.FrameType,io.vertx.core.buffer.Buffer,int) -> writePartialMessage
    237:240:void writeBinaryFrameInternal(io.vertx.core.buffer.Buffer) -> writeBinaryFrameInternal
    243:245:void writeTextFrameInternal(java.lang.String) -> writeTextFrameInternal
    249:254:io.vertx.core.http.WebSocketBase writeFrame(io.vertx.core.http.WebSocketFrame) -> writeFrame
    258:261:void checkClosed() -> checkClosed
    264:287:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal) -> handleFrame
    366:370:io.vertx.core.http.WebSocketBase frameHandler(io.vertx.core.Handler) -> frameHandler
    375:382:io.vertx.core.http.WebSocketBase textMessageHandler(io.vertx.core.Handler) -> textMessageHandler
    387:394:io.vertx.core.http.WebSocketBase binaryMessageHandler(io.vertx.core.Handler) -> binaryMessageHandler
    399:403:io.vertx.core.http.WebSocketBase pongHandler(io.vertx.core.Handler) -> pongHandler
    407:412:void writable() -> writable
    415:420:void handleException(java.lang.Throwable) -> handleException
    423:432:void handleClosed() -> handleClosed
    435:440:void cleanupHandlers() -> cleanupHandlers
    443:444:void setMetric(java.lang.Object) -> setMetric
    447:447:java.lang.Object getMetric() -> getMetric
    452:458:io.vertx.core.http.WebSocketBase handler(io.vertx.core.Handler) -> handler
    463:469:io.vertx.core.http.WebSocketBase endHandler(io.vertx.core.Handler) -> endHandler
    474:480:io.vertx.core.http.WebSocketBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    485:489:io.vertx.core.http.WebSocketBase closeHandler(io.vertx.core.Handler) -> closeHandler
    494:498:io.vertx.core.http.WebSocketBase drainHandler(io.vertx.core.Handler) -> drainHandler
    503:507:io.vertx.core.http.WebSocketBase pause() -> pause
    512:516:io.vertx.core.http.WebSocketBase resume() -> resume
    521:525:io.vertx.core.http.WebSocketBase setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    530:531:void end() -> end
    40:40:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    40:40:io.vertx.core.streams.ReadStream resume() -> resume
    40:40:io.vertx.core.streams.ReadStream pause() -> pause
    40:40:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    40:40:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    40:40:io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    40:40:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler) -> drainHandler
    40:40:io.vertx.core.streams.WriteStream setWriteQueueMaxSize(int) -> setWriteQueueMaxSize
    40:40:io.vertx.core.streams.WriteStream write(java.lang.Object) -> write
    40:40:io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    70:70:void lambda$new$1(io.vertx.core.eventbus.Message) -> lambda$new$1
    68:68:void lambda$new$0(io.vertx.core.eventbus.Message) -> lambda$new$0
    40:40:int access$000(io.vertx.core.http.impl.WebSocketImplBase) -> access$000
io.vertx.core.http.impl.WebSocketImplBase$1 -> io.vertx.core.http.impl.WebSocketImplBase$1:
    int[] $SwitchMap$io$vertx$core$http$impl$FrameType -> $SwitchMap$io$vertx$core$http$impl$FrameType
    271:271:void <clinit>() -> <clinit>
io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator -> io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator:
    io.vertx.core.Handler textMessageHandler -> textMessageHandler
    io.vertx.core.Handler binaryMessageHandler -> binaryMessageHandler
    io.vertx.core.buffer.Buffer textMessageBuffer -> textMessageBuffer
    io.vertx.core.buffer.Buffer binaryMessageBuffer -> binaryMessageBuffer
    io.vertx.core.http.impl.WebSocketImplBase this$0 -> this$0
    289:289:void <init>(io.vertx.core.http.impl.WebSocketImplBase) -> <init>
    298:313:void handle(io.vertx.core.http.impl.ws.WebSocketFrameInternal) -> handle
    316:337:void handleTextFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal) -> handleTextFrame
    340:361:void handleBinaryFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal) -> handleBinaryFrame
    289:289:void handle(java.lang.Object) -> handle
    289:289:void <init>(io.vertx.core.http.impl.WebSocketImplBase,io.vertx.core.http.impl.WebSocketImplBase$1) -> <init>
    289:289:io.vertx.core.Handler access$202(io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator,io.vertx.core.Handler) -> access$202
    289:289:io.vertx.core.Handler access$302(io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator,io.vertx.core.Handler) -> access$302
io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler -> io.vertx.core.http.impl.a.a:
    io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState state -> a
    42:50:void <init>() -> <init>
    54:81:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$1 -> io.vertx.core.http.impl.a.b:
    int[] $SwitchMap$io$vertx$core$http$impl$cgbystrom$FlashPolicyHandler$ParseState -> a
    56:56:void <clinit>() -> <clinit>
io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState -> io.vertx.core.http.impl.a.c:
    io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState MAGIC1 -> a
    io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState MAGIC2 -> b
    io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState[] $VALUES -> c
    45:45:io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState[] values() -> values
    45:45:io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler$ParseState valueOf(java.lang.String) -> valueOf
    45:45:void <init>(java.lang.String,int) -> <init>
    45:47:void <clinit>() -> <clinit>
io.vertx.core.http.impl.headers.VertxHttpHeaders -> io.vertx.core.http.impl.b.a:
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry[] entries -> a
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry head -> b
    38:42:io.vertx.core.MultiMap set0(java.lang.Iterable) -> a
    47:47:io.vertx.core.MultiMap setAll(io.vertx.core.MultiMap) -> setAll
    57:57:int size() -> size
    61:61:int index(int) -> a
    64:69:void <init>() -> <init>
    72:72:boolean contentLengthSet() -> d
    76:76:boolean contentTypeSet() -> e
    81:84:io.vertx.core.http.impl.headers.VertxHttpHeaders add(java.lang.CharSequence,java.lang.Object) -> c
    89:92:io.vertx.core.http.impl.headers.VertxHttpHeaders add(java.lang.String,java.lang.String) -> a
    97:102:io.vertx.core.http.impl.headers.VertxHttpHeaders add(java.lang.String,java.lang.Iterable) -> c
    107:110:io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap) -> addAll
    123:130:void add0(int,int,java.lang.CharSequence,java.lang.CharSequence) -> a
    134:138:io.vertx.core.http.impl.headers.VertxHttpHeaders remove(java.lang.String) -> d
    142:175:void remove0(int,int,java.lang.CharSequence) -> a
    179:179:io.vertx.core.http.impl.headers.VertxHttpHeaders set(java.lang.String,java.lang.String) -> b
    183:187:io.vertx.core.http.impl.headers.VertxHttpHeaders set0(java.lang.CharSequence,java.lang.CharSequence) -> b
    192:205:io.vertx.core.http.impl.headers.VertxHttpHeaders set(java.lang.String,java.lang.Iterable) -> d
    210:214:io.vertx.core.http.impl.headers.VertxHttpHeaders clear() -> f
    219:231:boolean contains(java.lang.String,java.lang.String,boolean) -> a
    236:248:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> b
    253:253:java.lang.String get(java.lang.String) -> get
    257:266:java.lang.CharSequence get0(java.lang.CharSequence) -> e
    271:271:java.util.List getAll(java.lang.String) -> getAll
    276:281:void forEach(java.util.function.Consumer) -> forEach
    285:309:java.util.List entries() -> entries
    314:314:java.util.Iterator iterator() -> iterator
    319:319:boolean contains(java.lang.String) -> b
    324:324:boolean isEmpty() -> isEmpty
    329:335:java.util.Set names() -> names
    340:342:java.lang.String get(java.lang.CharSequence) -> get
    347:360:java.util.List getAll(java.lang.CharSequence) -> getAll
    365:365:boolean contains(java.lang.CharSequence) -> contains
    370:370:io.vertx.core.http.impl.headers.VertxHttpHeaders add(java.lang.CharSequence,java.lang.CharSequence) -> a
    375:379:io.vertx.core.http.impl.headers.VertxHttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> c
    384:384:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.CharSequence) -> set
    389:394:io.vertx.core.http.impl.headers.VertxHttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> d
    399:399:io.vertx.core.http.impl.headers.VertxHttpHeaders remove(java.lang.CharSequence) -> d
    403:407:java.lang.String toString() -> toString
    442:442:java.util.Iterator iteratorCharSequence() -> b
    459:459:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> a
    474:474:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> b
    35:35:io.netty.handler.codec.http.HttpHeaders clear() -> a
    35:35:io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence) -> a
    35:35:io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> a
    35:35:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> b
    35:35:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> b
    35:35:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> a
    35:35:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> a
    35:35:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object) -> a
    35:35:io.vertx.core.MultiMap set(java.lang.CharSequence,java.lang.Iterable) -> set
    35:35:io.vertx.core.MultiMap set(java.lang.String,java.lang.Iterable) -> set
    35:35:io.vertx.core.MultiMap set(java.lang.String,java.lang.String) -> set
    35:35:io.vertx.core.MultiMap add(java.lang.String,java.lang.Iterable) -> add
    35:35:io.vertx.core.MultiMap add(java.lang.String,java.lang.String) -> add
    35:35:io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry access$000(io.vertx.core.http.impl.headers.VertxHttpHeaders) -> a
io.vertx.core.http.impl.headers.VertxHttpHeaders$1 -> io.vertx.core.http.impl.b.b:
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry val$f -> a
    io.vertx.core.http.impl.headers.VertxHttpHeaders this$0 -> b
    289:289:void <init>(io.vertx.core.http.impl.headers.VertxHttpHeaders,io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry) -> <init>
    292:292:java.lang.String getKey() -> a
    296:296:java.lang.String getValue() -> b
    300:300:java.lang.String setValue(java.lang.String) -> a
    304:304:java.lang.String toString() -> toString
    289:289:java.lang.Object setValue(java.lang.Object) -> setValue
    289:289:java.lang.Object getValue() -> getValue
    289:289:java.lang.Object getKey() -> getKey
io.vertx.core.http.impl.headers.VertxHttpHeaders$2 -> io.vertx.core.http.impl.b.c:
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry current -> a
    io.vertx.core.http.impl.headers.VertxHttpHeaders this$0 -> b
    442:443:void <init>(io.vertx.core.http.impl.headers.VertxHttpHeaders) -> <init>
    446:446:boolean hasNext() -> hasNext
    450:452:java.util.Map$Entry next() -> a
    442:442:java.lang.Object next() -> next
io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry -> io.vertx.core.http.impl.b.d:
    int hash -> a
    java.lang.CharSequence key -> b
    java.lang.CharSequence value -> c
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry next -> d
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry before -> e
    io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry after -> f
    494:498:void <init>(int,java.lang.CharSequence,java.lang.CharSequence) -> <init>
    501:503:void remove() -> a
    506:510:void addBefore(io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry) -> a
    514:514:java.lang.CharSequence getKey() -> b
    519:519:java.lang.CharSequence getValue() -> c
    524:527:java.lang.CharSequence setValue(java.lang.CharSequence) -> a
    532:532:java.lang.String toString() -> toString
    487:487:java.lang.Object setValue(java.lang.Object) -> setValue
    487:487:java.lang.Object getValue() -> getValue
    487:487:java.lang.Object getKey() -> getKey
io.vertx.core.http.impl.pool.ConnectionListener -> io.vertx.core.http.impl.c.a:
    void onConnectSuccess(java.lang.Object,long,io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,long,long) -> a
    void onConnectFailure(io.vertx.core.impl.ContextImpl,java.lang.Throwable,long) -> a
    void onConcurrencyChange(long) -> a
    void onRecycle(int,boolean) -> a
    void onDiscard() -> a
io.vertx.core.http.impl.pool.ConnectionProvider -> io.vertx.core.http.impl.c.b:
    long connect(io.vertx.core.http.impl.pool.ConnectionListener,io.vertx.core.impl.ContextImpl) -> connect
    void close(java.lang.Object) -> close
io.vertx.core.http.impl.pool.Pool -> io.vertx.core.http.impl.c.c:
    io.vertx.core.logging.Logger log -> a
    io.vertx.core.http.impl.pool.ConnectionProvider connector -> b
    java.util.function.BiConsumer connectionAdded -> c
    java.util.function.BiConsumer connectionRemoved -> d
    int queueMaxSize -> e
    java.util.Queue waitersQueue -> f
    int waitersCount -> g
    java.util.Deque available -> h
    long maxWeight -> i
    long weight -> j
    boolean closed -> k
    io.vertx.core.Handler poolClosed -> l
    91:115:void <init>(io.vertx.core.http.impl.pool.ConnectionProvider,int,long,io.vertx.core.Handler,java.util.function.BiConsumer,java.util.function.BiConsumer) -> <init>
    140:154:boolean getConnection(io.vertx.core.http.impl.pool.Waiter) -> a
    165:188:boolean acquireConnection(io.vertx.core.http.impl.pool.Waiter) -> b
    193:201:void checkPending() -> a
    204:286:long createConnection(io.vertx.core.http.impl.pool.Waiter) -> c
    290:293:void recycle(io.vertx.core.http.impl.pool.Pool$Holder,int,boolean) -> a
    296:299:void closed(io.vertx.core.http.impl.pool.Pool$Holder) -> a
    302:309:void closeConnection(io.vertx.core.http.impl.pool.Pool$Holder) -> b
    316:320:boolean deliverToWaiter(io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.http.impl.pool.Waiter) -> a
    327:342:void recycleConnection(io.vertx.core.http.impl.pool.Pool$Holder,int,boolean) -> b
    345:353:void initConnection(io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.impl.ContextImpl,long,java.lang.Object,io.netty.channel.Channel,long,long) -> a
    356:361:void checkClose() -> b
    172:182:void lambda$acquireConnection$2(io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.http.impl.pool.Waiter) -> b
    151:152:void lambda$getConnection$1(io.vertx.core.http.impl.pool.Waiter) -> d
    66:66:void access$000(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.impl.ContextImpl,long,java.lang.Object,io.netty.channel.Channel,long,long) -> a
    66:66:java.util.Queue access$100(io.vertx.core.http.impl.pool.Pool) -> a
    66:66:void access$200(io.vertx.core.http.impl.pool.Pool) -> b
    66:66:int access$310(io.vertx.core.http.impl.pool.Pool) -> c
    66:66:java.util.Deque access$400(io.vertx.core.http.impl.pool.Pool) -> d
    66:66:boolean access$500(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.http.impl.pool.Waiter) -> a
    66:66:void access$600(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder,int,boolean) -> a
    66:66:long access$700(io.vertx.core.http.impl.pool.Pool) -> e
    66:66:long access$702(io.vertx.core.http.impl.pool.Pool,long) -> a
    66:66:void access$800(io.vertx.core.http.impl.pool.Pool) -> f
    66:66:void access$900(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder,int,boolean) -> b
    66:66:void access$1000(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder) -> a
    84:84:void <clinit>() -> <clinit>
io.vertx.core.http.impl.pool.Pool$1 -> io.vertx.core.http.impl.c.d:
    io.vertx.core.http.impl.pool.Pool$Holder val$holder -> a
    io.vertx.core.http.impl.pool.Waiter val$waiter -> b
    io.vertx.core.http.impl.pool.Pool this$0 -> c
    205:205:void <init>(io.vertx.core.http.impl.pool.Pool,io.vertx.core.http.impl.pool.Pool$Holder,io.vertx.core.http.impl.pool.Waiter) -> <init>
    209:233:void onConnectSuccess(java.lang.Object,long,io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,long,long) -> a
    236:244:void onConnectFailure(io.vertx.core.impl.ContextImpl,java.lang.Throwable,long) -> a
    247:263:void onConcurrencyChange(long) -> a
    266:275:void onRecycle(int,boolean) -> a
    278:284:void onDiscard() -> a
io.vertx.core.http.impl.pool.Pool$Holder -> io.vertx.core.http.impl.c.e:
    boolean removed -> a
    java.lang.Object connection -> b
    long concurrency -> c
    long capacity -> d
    io.netty.channel.Channel channel -> e
    io.vertx.core.impl.ContextImpl context -> f
    long weight -> g
    73:73:void <init>() -> <init>
io.vertx.core.http.impl.pool.Waiter -> io.vertx.core.http.impl.c.f:
    io.vertx.core.impl.ContextImpl context -> context
    24:26:void <init>(io.vertx.core.impl.ContextImpl) -> <init>
    void handleFailure(io.vertx.core.impl.ContextInternal,java.lang.Throwable) -> handleFailure
    void initConnection(io.vertx.core.impl.ContextInternal,java.lang.Object) -> initConnection
    boolean handleConnection(io.vertx.core.impl.ContextInternal,java.lang.Object) -> handleConnection
io.vertx.core.http.impl.ws.WebSocketFrameImpl -> io.vertx.core.http.impl.d.a:
    io.vertx.core.http.impl.FrameType type -> b
    boolean isFinalFrame -> c
    io.netty.buffer.ByteBuf binaryData -> d
    boolean closeParsed -> e
    45:46:void <init>() -> <init>
    59:60:void <init>(java.lang.String) -> <init>
    37:69:void <init>(java.lang.String,boolean) -> <init>
    81:82:void <init>(io.vertx.core.http.impl.FrameType,io.netty.buffer.ByteBuf) -> <init>
    37:98:void <init>(io.vertx.core.http.impl.FrameType,io.netty.buffer.ByteBuf,boolean) -> <init>
    115:115:io.netty.buffer.ByteBuf getBinaryData() -> c
    123:123:io.vertx.core.buffer.Buffer binaryData() -> a
    142:142:int length() -> d
    147:148:java.lang.String toString() -> toString
    153:153:int refCnt() -> refCnt
    158:158:io.netty.util.ReferenceCounted retain() -> retain
    163:163:io.netty.util.ReferenceCounted retain(int) -> retain
    168:168:boolean release() -> release
    173:173:boolean release(int) -> release
    178:179:io.netty.util.ReferenceCounted touch() -> touch
    184:185:io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    190:190:boolean isFinal() -> b
    232:232:io.vertx.core.http.impl.FrameType type() -> e
io.vertx.core.http.impl.ws.WebSocketFrameInternal -> io.vertx.core.http.impl.d.b:
    io.netty.buffer.ByteBuf getBinaryData() -> c
    int length() -> d
    io.vertx.core.http.impl.FrameType type() -> e
io.vertx.core.impl.Action -> io.vertx.core.impl.a:
    java.lang.Object perform() -> b
io.vertx.core.impl.AddressResolver -> io.vertx.core.impl.b:
    java.util.regex.Pattern NDOTS_OPTIONS_PATTERN -> c
    java.util.regex.Pattern ROTATE_OPTIONS_PATTERN -> d
    int DEFAULT_NDOTS_RESOLV_OPTION -> a
    boolean DEFAULT_ROTATE_RESOLV_OPTION -> b
    io.vertx.core.Vertx vertx -> e
    io.netty.resolver.AddressResolverGroup resolverGroup -> f
    io.vertx.core.spi.resolver.ResolverProvider provider -> g
    37:37:java.util.regex.Pattern resolvOption(java.lang.String) -> c
    70:74:void <init>(io.vertx.core.Vertx,io.vertx.core.dns.AddressResolverOptions) -> <init>
    77:90:void resolveHostname(java.lang.String,io.vertx.core.Handler) -> a
    93:93:io.netty.resolver.AddressResolverGroup nettyAddressResolverGroup() -> a
    101:106:int parseNdotsOptionFromResolvConf(java.lang.String) -> a
    110:111:boolean parseRotateOptionFromResolvConf(java.lang.String) -> b
    81:89:void lambda$resolveHostname$1(io.vertx.core.impl.ContextInternal,io.netty.util.concurrent.Future,io.vertx.core.Handler,io.netty.util.concurrent.Future) -> a
    82:88:void lambda$null$0(io.netty.util.concurrent.Future,io.netty.util.concurrent.Future,io.vertx.core.Handler,java.lang.Void) -> a
    40:64:void <clinit>() -> <clinit>
io.vertx.core.impl.Arguments -> io.vertx.core.impl.c:
    28:31:void require(boolean,java.lang.String) -> a
    43:46:void requireInRange(int,int,int,java.lang.String) -> a
io.vertx.core.impl.BlockedThreadChecker -> io.vertx.core.impl.d:
    io.vertx.core.logging.Logger log -> a
    java.lang.Object O -> b
    java.util.Map threads -> c
    java.util.Timer timer -> d
    31:59:void <init>(long,long) -> <init>
    62:63:void registerThread(io.vertx.core.impl.VertxThread) -> a
    26:26:java.util.Map access$000(io.vertx.core.impl.BlockedThreadChecker) -> a
    26:26:io.vertx.core.logging.Logger access$100() -> a
    28:30:void <clinit>() -> <clinit>
io.vertx.core.impl.BlockedThreadChecker$1 -> io.vertx.core.impl.e:
    long val$warningExceptionTime -> a
    io.vertx.core.impl.BlockedThreadChecker this$0 -> b
    36:36:void <init>(io.vertx.core.impl.BlockedThreadChecker,long) -> <init>
    39:57:void run() -> run
io.vertx.core.impl.CloseHooks -> io.vertx.core.impl.f:
    io.vertx.core.logging.Logger log -> a
    boolean closeHooksRun -> b
    java.util.Set closeHooks -> c
    34:36:void <init>(io.vertx.core.logging.Logger) -> <init>
    44:49:void add(io.vertx.core.Closeable) -> a
    57:60:void remove(io.vertx.core.Closeable) -> b
    68:113:void run(io.vertx.core.Handler) -> a
    88:99:void lambda$run$0(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult) -> a
io.vertx.core.impl.ConcurrentHashSet -> io.vertx.core.impl.g:
    java.util.Map map -> a
    java.lang.Object OBJ -> b
    33:35:void <init>() -> <init>
    39:39:int size() -> size
    44:44:boolean isEmpty() -> isEmpty
    49:49:boolean contains(java.lang.Object) -> contains
    54:54:java.util.Iterator iterator() -> iterator
    59:59:java.lang.Object[] toArray() -> toArray
    64:64:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    69:69:boolean add(java.lang.Object) -> add
    74:74:boolean remove(java.lang.Object) -> remove
    79:79:boolean containsAll(java.util.Collection) -> containsAll
    84:90:boolean addAll(java.util.Collection) -> addAll
    95:95:boolean retainAll(java.util.Collection) -> retainAll
    100:100:boolean removeAll(java.util.Collection) -> removeAll
    105:106:void clear() -> clear
    27:27:void <clinit>() -> <clinit>
io.vertx.core.impl.ContextImpl -> io.vertx.core.impl.h:
    io.vertx.core.logging.Logger log -> i
    boolean THREAD_CHECKS -> j
    boolean DISABLE_TIMINGS -> k
    boolean DISABLE_TCCL -> l
    io.vertx.core.impl.VertxInternal owner -> a
    java.lang.String deploymentID -> b
    io.vertx.core.json.JsonObject config -> c
    io.vertx.core.impl.Deployment deployment -> m
    io.vertx.core.impl.CloseHooks closeHooks -> n
    java.lang.ClassLoader tccl -> o
    io.netty.channel.EventLoop eventLoop -> p
    io.vertx.core.impl.VertxThread contextThread -> d
    io.vertx.core.Handler exceptionHandler -> q
    io.vertx.core.impl.WorkerPool workerPool -> e
    io.vertx.core.impl.WorkerPool internalBlockingPool -> f
    io.vertx.core.impl.TaskQueue orderedTasks -> g
    io.vertx.core.impl.TaskQueue internalOrderedTasks -> h
    40:44:io.netty.channel.EventLoop getEventLoop(io.vertx.core.impl.VertxInternal) -> a
    74:75:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,java.lang.String,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> <init>
    78:92:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.EventLoop,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,java.lang.String,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> <init>
    95:101:void setContext(io.vertx.core.impl.ContextImpl) -> a
    104:112:void setContext(io.vertx.core.impl.VertxThread,io.vertx.core.impl.ContextImpl) -> a
    115:116:void setDeployment(io.vertx.core.impl.Deployment) -> a
    119:119:io.vertx.core.impl.Deployment getDeployment() -> b
    123:124:void addCloseHook(io.vertx.core.Closeable) -> a
    127:128:void removeCloseHook(io.vertx.core.Closeable) -> b
    131:134:void runCloseHooks(io.vertx.core.Handler) -> b
    void executeAsync(io.vertx.core.Handler) -> c
    boolean isEventLoopContext() -> c
    boolean isMultiThreadedWorkerContext() -> d
    162:162:boolean isWorkerContext() -> e
    166:166:boolean isOnWorkerThread() -> f
    179:184:boolean isOnVertxThread(boolean) -> a
    191:196:void executeFromIO(io.vertx.core.impl.ContextTask) -> a
    void checkCorrectThread() -> g
    204:208:void runOnContext(io.vertx.core.Handler) -> a
    228:228:io.netty.channel.EventLoop nettyEventLoop() -> h
    232:232:io.vertx.core.impl.VertxInternal owner() -> i
    237:238:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler) -> a
    242:243:void executeBlocking(io.vertx.core.Handler,boolean,io.vertx.core.Handler) -> a
    247:248:void executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler) -> a
    258:304:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,io.vertx.core.Handler,java.util.concurrent.Executor,io.vertx.core.impl.TaskQueue,io.vertx.core.spi.metrics.PoolMetrics) -> a
    314:315:java.lang.Runnable wrapTask(io.vertx.core.impl.ContextTask,io.vertx.core.Handler,boolean,io.vertx.core.spi.metrics.PoolMetrics) -> a
    367:368:void setTCCL() -> j
    316:363:void lambda$wrapTask$2(boolean,io.vertx.core.spi.metrics.PoolMetrics,java.lang.Object,io.vertx.core.impl.ContextTask,io.vertx.core.Handler) -> a
    261:291:void lambda$executeBlocking$1(io.vertx.core.spi.metrics.PoolMetrics,java.lang.Object,io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler) -> a
    289:289:void lambda$null$0(io.vertx.core.Future,io.vertx.core.Handler,java.lang.Void) -> a
    48:55:void <clinit>() -> <clinit>
io.vertx.core.impl.ContextInternal -> io.vertx.core.impl.i:
    io.netty.channel.EventLoop nettyEventLoop() -> h
    void executeFromIO(io.vertx.core.impl.ContextTask) -> a
io.vertx.core.impl.ContextTask -> io.vertx.core.impl.j:
    void run() -> run
io.vertx.core.impl.Deployment -> io.vertx.core.impl.k:
    boolean addChild(io.vertx.core.impl.Deployment) -> a
    void removeChild(io.vertx.core.impl.Deployment) -> b
    void undeploy(io.vertx.core.Handler) -> a
    void doUndeploy(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler) -> a
    java.lang.String verticleIdentifier() -> a
    io.vertx.core.DeploymentOptions deploymentOptions() -> b
    boolean isChild() -> c
io.vertx.core.impl.DeploymentManager -> io.vertx.core.impl.DeploymentManager:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    java.util.Map deployments -> deployments
    java.util.Map classloaders -> classloaders
    java.util.Map verticleFactories -> verticleFactories
    java.util.List defaultFactories -> defaultFactories
    58:66:void <init>(io.vertx.core.impl.VertxInternal) -> <init>
    69:74:void loadVerticleFactories() -> loadVerticleFactories
    77:77:java.lang.String generateDeploymentID() -> generateDeploymentID
    81:121:void deployVerticle(java.util.function.Supplier,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> deployVerticle
    126:132:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> deployVerticle
    141:144:void doDeployVerticle(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.lang.ClassLoader,io.vertx.core.Handler) -> doDeployVerticle
    155:224:void doDeployVerticle(java.util.Iterator,java.lang.Throwable,java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.lang.ClassLoader,io.vertx.core.Handler) -> doDeployVerticle
    227:234:io.vertx.core.Verticle[] createVerticles(io.vertx.core.spi.VerticleFactory,java.lang.String,int,java.lang.ClassLoader) -> createVerticles
    238:241:java.lang.String getSuffix(int,java.lang.String) -> getSuffix
    245:252:void undeployVerticle(java.lang.String,io.vertx.core.Handler) -> undeployVerticle
    255:255:java.util.Set deployments() -> deployments
    259:259:io.vertx.core.impl.Deployment getDeployment(java.lang.String) -> getDeployment
    266:289:void undeployAll(io.vertx.core.Handler) -> undeployAll
    292:308:void registerVerticleFactory(io.vertx.core.spi.VerticleFactory) -> registerVerticleFactory
    311:328:void unregisterVerticleFactory(io.vertx.core.spi.VerticleFactory) -> unregisterVerticleFactory
    331:335:java.util.Set verticleFactories() -> verticleFactories
    349:371:java.util.List resolveFactories(java.lang.String) -> resolveFactories
    380:419:java.lang.ClassLoader getClassLoader(io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl) -> getClassLoader
    423:427:java.lang.ClassLoader getCurrentClassLoader() -> getCurrentClassLoader
    432:437:void reportFailure(java.lang.Throwable,io.vertx.core.Context,io.vertx.core.Handler) -> reportFailure
    440:443:void reportSuccess(java.lang.Object,io.vertx.core.Context,io.vertx.core.Handler) -> reportSuccess
    446:454:void reportResult(io.vertx.core.Context,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> reportResult
    461:513:void doDeploy(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.ClassLoader,io.vertx.core.Verticle[]) -> doDeploy
    481:511:void lambda$doDeploy$8(io.vertx.core.Verticle,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.Deployment,io.vertx.core.impl.DeploymentManager$DeploymentImpl,java.lang.String,java.util.concurrent.atomic.AtomicInteger,io.vertx.core.Verticle[],io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,java.lang.Void) -> lambda$doDeploy$8
    485:506:void lambda$null$7(io.vertx.core.impl.Deployment,io.vertx.core.impl.DeploymentManager$DeploymentImpl,io.vertx.core.Verticle,java.lang.String,java.util.concurrent.atomic.AtomicInteger,io.vertx.core.Verticle[],io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.impl.ContextImpl,io.vertx.core.AsyncResult) -> lambda$null$7
    448:453:void lambda$reportResult$6(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void) -> lambda$reportResult$6
    306:306:int lambda$registerVerticleFactory$5(io.vertx.core.spi.VerticleFactory,io.vertx.core.spi.VerticleFactory) -> lambda$registerVerticleFactory$5
    287:287:void lambda$undeployAll$4(io.vertx.core.Handler,java.lang.Void) -> lambda$undeployAll$4
    276:283:void lambda$undeployAll$3(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> lambda$undeployAll$3
    173:215:void lambda$doDeployVerticle$2(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.spi.VerticleFactory,java.lang.ClassLoader,java.lang.String,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.util.Iterator,io.vertx.core.AsyncResult) -> lambda$doDeployVerticle$2
    192:198:void lambda$null$1(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.ClassLoader,java.util.Iterator,io.vertx.core.AsyncResult) -> lambda$null$1
    186:191:void lambda$null$0(io.vertx.core.spi.VerticleFactory,java.lang.String,io.vertx.core.DeploymentOptions,java.lang.ClassLoader,io.vertx.core.Future) -> lambda$null$0
    53:53:io.vertx.core.impl.VertxInternal access$100(io.vertx.core.impl.DeploymentManager) -> access$100
    53:53:void access$200(io.vertx.core.impl.DeploymentManager,java.lang.Throwable,io.vertx.core.Context,io.vertx.core.Handler) -> access$200
    53:53:java.util.Map access$300(io.vertx.core.impl.DeploymentManager) -> access$300
    53:53:io.vertx.core.logging.Logger access$400() -> access$400
    53:53:void access$500(io.vertx.core.impl.DeploymentManager,java.lang.Object,io.vertx.core.Context,io.vertx.core.Handler) -> access$500
    55:55:void <clinit>() -> <clinit>
io.vertx.core.impl.DeploymentManager$1 -> io.vertx.core.impl.l:
io.vertx.core.impl.DeploymentManager$DeploymentImpl -> io.vertx.core.impl.m:
    io.vertx.core.impl.Deployment parent -> b
    java.lang.String deploymentID -> c
    java.lang.String verticleIdentifier -> d
    java.util.List verticles -> e
    java.util.Set children -> f
    io.vertx.core.DeploymentOptions options -> g
    int status -> h
    boolean child -> i
    io.vertx.core.impl.DeploymentManager this$0 -> a
    532:543:void <init>(io.vertx.core.impl.DeploymentManager,io.vertx.core.impl.Deployment,java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions) -> <init>
    546:547:void addVerticle(io.vertx.core.impl.DeploymentManager$VerticleHolder) -> a
    550:563:void rollback(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.lang.Throwable) -> a
    567:569:void undeploy(io.vertx.core.Handler) -> a
    572:595:void doUndeployChildren(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler) -> b
    598:652:void doUndeploy(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler) -> a
    656:656:java.lang.String verticleIdentifier() -> a
    661:661:io.vertx.core.DeploymentOptions deploymentOptions() -> b
    666:670:boolean addChild(io.vertx.core.impl.Deployment) -> a
    676:677:void removeChild(io.vertx.core.impl.Deployment) -> b
    690:690:boolean isChild() -> c
    618:649:void lambda$doUndeploy$6(io.vertx.core.impl.DeploymentManager$VerticleHolder,io.vertx.core.impl.ContextImpl,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Void) -> a
    621:638:void lambda$null$5(io.vertx.core.impl.DeploymentManager$VerticleHolder,io.vertx.core.impl.ContextImpl,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult) -> a
    627:637:void lambda$null$4(io.vertx.core.AsyncResult,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult) -> a
    605:610:void lambda$doUndeploy$3(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> a
    579:586:void lambda$doUndeployChildren$2(io.vertx.core.impl.Deployment,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult) -> a
    553:561:void lambda$rollback$1(java.lang.Throwable,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,io.vertx.core.AsyncResult) -> a
    559:559:void lambda$null$0(java.lang.Throwable,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> a
    525:525:void <init>(io.vertx.core.impl.DeploymentManager,io.vertx.core.impl.Deployment,java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.DeploymentManager$1) -> <init>
    525:525:void access$600(io.vertx.core.impl.DeploymentManager$DeploymentImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.lang.Throwable) -> a
    525:525:boolean access$702(io.vertx.core.impl.DeploymentManager$DeploymentImpl,boolean) -> a
io.vertx.core.impl.DeploymentManager$VerticleHolder -> io.vertx.core.impl.n:
    io.vertx.core.Verticle verticle -> a
    io.vertx.core.impl.ContextImpl context -> b
    519:522:void <init>(io.vertx.core.Verticle,io.vertx.core.impl.ContextImpl) -> <init>
io.vertx.core.impl.EventLoopContext -> io.vertx.core.impl.o:
    io.vertx.core.logging.Logger log -> i
    29:30:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,java.lang.String,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> <init>
    39:40:void executeAsync(io.vertx.core.Handler) -> c
    44:44:boolean isEventLoopContext() -> c
    49:49:boolean isMultiThreadedWorkerContext() -> d
    54:60:void checkCorrectThread() -> g
    25:25:void <clinit>() -> <clinit>
io.vertx.core.impl.FailedFuture -> io.vertx.core.impl.p:
    java.lang.Throwable cause -> b
    29:31:void <init>(java.lang.Throwable) -> <init>
    38:39:void <init>(java.lang.String) -> <init>
    43:43:boolean isComplete() -> g
    48:49:io.vertx.core.Future setHandler(io.vertx.core.Handler) -> b
    54:54:void complete(java.lang.Object) -> c
    59:59:void complete() -> h
    64:64:void fail(java.lang.Throwable) -> b
    69:69:void fail(java.lang.String) -> b
    74:74:boolean tryComplete(java.lang.Object) -> d
    84:84:boolean tryFail(java.lang.Throwable) -> c
    94:94:java.lang.Object result() -> a
    99:99:java.lang.Throwable cause() -> b
    104:104:boolean succeeded() -> c
    109:109:boolean failed() -> d
    114:114:void handle(io.vertx.core.AsyncResult) -> a
    119:119:java.lang.String toString() -> toString
    21:21:void handle(java.lang.Object) -> handle
io.vertx.core.impl.FileResolver -> io.vertx.core.impl.q:
    java.lang.String FILE_SEP -> a
    boolean NON_UNIX_FILE_SEP -> b
    boolean ENABLE_CP_RESOLVING -> c
    java.lang.String CACHE_DIR_BASE -> d
    java.util.regex.Pattern JAR_URL_SEP_PATTERN -> e
    io.vertx.core.Vertx vertx -> f
    java.io.File cwd -> g
    java.io.File cacheDir -> h
    java.lang.Thread shutdownHook -> i
    boolean enableCaching -> j
    77:89:void <init>(io.vertx.core.Vertx,boolean) -> <init>
    104:143:java.io.File resolveFile(java.lang.String) -> a
    149:176:java.io.File unpackFromFileURL(java.net.URL,java.lang.String,java.lang.ClassLoader) -> a
    180:236:java.io.File unpackFromJarURL(java.net.URL,java.lang.String,java.lang.ClassLoader) -> b
    240:247:void closeQuietly(java.io.Closeable) -> a
    259:278:java.io.File unpackFromBundleURL(java.net.URL) -> a
    283:287:java.lang.ClassLoader getClassLoader() -> a
    291:306:void setupCacheDir() -> b
    309:314:void deleteCacheDir(io.vertx.core.Handler) -> a
    298:304:void lambda$setupCacheDir$1() -> c
    299:299:void lambda$null$0(java.util.concurrent.CountDownLatch,io.vertx.core.AsyncResult) -> a
    60:65:void <clinit>() -> <clinit>
io.vertx.core.impl.FutureFactoryImpl -> io.vertx.core.impl.FutureFactoryImpl:
    io.vertx.core.impl.SucceededFuture EMPTY -> EMPTY
    20:20:void <init>() -> <init>
    26:26:io.vertx.core.Future future() -> future
    32:33:io.vertx.core.Future succeededFuture() -> succeededFuture
    38:38:io.vertx.core.Future succeededFuture(java.lang.Object) -> succeededFuture
    43:43:io.vertx.core.Future failedFuture(java.lang.Throwable) -> failedFuture
    48:48:io.vertx.core.Future failureFuture(java.lang.String) -> failureFuture
    22:22:void <clinit>() -> <clinit>
io.vertx.core.impl.FutureImpl -> io.vertx.core.impl.r:
    boolean failed -> b
    boolean succeeded -> c
    io.vertx.core.Handler handler -> d
    java.lang.Object result -> e
    java.lang.Throwable throwable -> f
    28:29:void <init>() -> <init>
    35:35:java.lang.Object result() -> a
    42:42:java.lang.Throwable cause() -> b
    49:49:boolean succeeded() -> c
    56:56:boolean failed() -> d
    63:63:boolean isComplete() -> g
    71:78:io.vertx.core.Future setHandler(io.vertx.core.Handler) -> b
    83:86:void complete(java.lang.Object) -> c
    90:93:void complete() -> h
    97:100:void fail(java.lang.Throwable) -> b
    104:107:void fail(java.lang.String) -> b
    112:123:boolean tryComplete(java.lang.Object) -> d
    128:128:boolean tryComplete() -> i
    146:151:void handle(io.vertx.core.AsyncResult) -> a
    156:167:boolean tryFail(java.lang.Throwable) -> c
    172:172:boolean tryFail(java.lang.String) -> c
    177:185:java.lang.String toString() -> toString
    18:18:void handle(java.lang.Object) -> handle
io.vertx.core.impl.HAManager -> io.vertx.core.impl.s:
    io.vertx.core.logging.Logger log -> a
    io.vertx.core.impl.VertxInternal vertx -> b
    io.vertx.core.impl.DeploymentManager deploymentManager -> c
    io.vertx.core.spi.cluster.ClusterManager clusterManager -> d
    int quorumSize -> e
    java.lang.String group -> f
    io.vertx.core.json.JsonObject haInfo -> g
    java.util.Map clusterMap -> h
    java.lang.String nodeID -> i
    java.util.Queue toDeployOnQuorum -> j
    boolean enabled -> k
    long quorumTimerID -> l
    boolean attainedQuorum -> m
    java.util.function.Consumer clusterViewChangedHandler -> n
    117:160:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.impl.DeploymentManager,io.vertx.core.spi.cluster.ClusterManager,int,java.lang.String,boolean) -> <init>
    183:187:void addDataToAHAInfo(java.lang.String,io.vertx.core.json.JsonObject) -> a
    191:197:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> a
    252:253:void setClusterViewChangedHandler(java.util.function.Consumer) -> a
    270:282:void doDeployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> b
    363:389:void checkQuorum() -> a
    394:403:void addToHA(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions) -> a
    408:417:void addToHADeployList(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> c
    421:429:void checkHADeployments() -> b
    433:460:void undeployHADeployments() -> c
    464:476:void deployHADeployments() -> d
    441:453:void lambda$undeployHADeployments$7(java.lang.String,io.vertx.core.impl.Deployment,io.vertx.core.AsyncResult) -> a
    444:449:void lambda$null$6(io.vertx.core.impl.Deployment,io.vertx.core.AsyncResult) -> a
    409:416:void lambda$addToHADeployList$5(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> d
    271:280:void lambda$doDeployVerticle$2(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> a
    155:155:void lambda$new$0(java.lang.Long) -> a
    104:104:void <clinit>() -> <clinit>
io.vertx.core.impl.HAManager$1 -> io.vertx.core.impl.t:
    io.vertx.core.impl.HAManager this$0 -> a
    144:144:void <init>(io.vertx.core.impl.HAManager) -> <init>
io.vertx.core.impl.IsolatingClassLoader -> io.vertx.core.impl.u:
    java.util.List isolatedClasses -> a
    30:32:void <init>(java.net.URL[],java.lang.ClassLoader,java.util.List) -> <init>
    36:66:java.lang.Class loadClass(java.lang.String,boolean) -> loadClass
    70:84:boolean isIsolatedClass(java.lang.String) -> a
    95:102:java.net.URL getResource(java.lang.String) -> getResource
    112:122:java.util.Enumeration getResources(java.lang.String) -> getResources
    126:133:boolean isVertxOrSystemClass(java.lang.String) -> b
io.vertx.core.impl.JavaVerticleFactory -> io.vertx.core.impl.v:
    21:21:void <init>() -> <init>
    25:25:java.lang.String prefix() -> a
    30:39:io.vertx.core.Verticle createVerticle(java.lang.String,java.lang.ClassLoader) -> a
io.vertx.core.impl.MultiThreadedWorkerContext -> io.vertx.core.impl.w:
    24:25:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,java.lang.String,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> <init>
    29:30:void executeAsync(io.vertx.core.Handler) -> c
    34:34:boolean isMultiThreadedWorkerContext() -> d
io.vertx.core.impl.NetSocketInternal -> io.vertx.core.impl.x:
io.vertx.core.impl.NoStackTraceThrowable -> io.vertx.core.impl.y:
    20:21:void <init>(java.lang.String) -> <init>
io.vertx.core.impl.SucceededFuture -> io.vertx.core.impl.z:
    java.lang.Object result -> b
    29:31:void <init>(java.lang.Object) -> <init>
    35:35:boolean isComplete() -> g
    40:41:io.vertx.core.Future setHandler(io.vertx.core.Handler) -> b
    46:46:void complete(java.lang.Object) -> c
    51:51:void complete() -> h
    56:56:void fail(java.lang.Throwable) -> b
    61:61:void fail(java.lang.String) -> b
    66:66:boolean tryComplete(java.lang.Object) -> d
    76:76:boolean tryFail(java.lang.Throwable) -> c
    86:86:java.lang.Object result() -> a
    91:91:java.lang.Throwable cause() -> b
    96:96:boolean succeeded() -> c
    101:101:boolean failed() -> d
    106:106:void handle(io.vertx.core.AsyncResult) -> a
    111:111:java.lang.String toString() -> toString
    21:21:void handle(java.lang.Object) -> handle
io.vertx.core.impl.TaskQueue -> io.vertx.core.impl.A:
    io.vertx.core.logging.Logger log -> a
    java.util.LinkedList tasks -> b
    java.util.concurrent.Executor current -> c
    java.lang.Runnable runner -> d
    48:57:void <init>() -> <init>
    62:80:void run() -> a
    89:96:void execute(java.lang.Runnable,java.util.concurrent.Executor) -> a
    34:34:void <clinit>() -> <clinit>
io.vertx.core.impl.TaskQueue$Task -> io.vertx.core.impl.B:
    java.lang.Runnable runnable -> a
    java.util.concurrent.Executor exec -> b
    41:44:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
    36:36:java.util.concurrent.Executor access$000(io.vertx.core.impl.TaskQueue$Task) -> a
    36:36:java.lang.Runnable access$100(io.vertx.core.impl.TaskQueue$Task) -> b
io.vertx.core.impl.Utils -> io.vertx.core.impl.C:
    java.lang.String LINE_SEPARATOR -> a
    boolean isWindows -> b
    35:35:boolean isWindows() -> a
    22:29:void <clinit>() -> <clinit>
io.vertx.core.impl.VertxFactoryImpl -> io.vertx.core.impl.VertxFactoryImpl:
    26:26:void <init>() -> <init>
    30:30:io.vertx.core.Vertx vertx() -> vertx
    35:38:io.vertx.core.Vertx vertx(io.vertx.core.VertxOptions) -> vertx
    44:46:void clusteredVertx(io.vertx.core.VertxOptions,io.vertx.core.Handler) -> clusteredVertx
    50:50:io.vertx.core.Context context() -> context
io.vertx.core.impl.VertxImpl -> io.vertx.core.impl.D:
    io.vertx.core.logging.Logger log -> d
    int NETTY_IO_RATIO -> e
    io.vertx.core.file.FileSystem fileSystem -> f
    io.vertx.core.shareddata.SharedData sharedData -> g
    io.vertx.core.spi.metrics.VertxMetrics metrics -> h
    java.util.concurrent.ConcurrentMap timeouts -> i
    java.util.concurrent.atomic.AtomicLong timeoutCounter -> j
    io.vertx.core.spi.cluster.ClusterManager clusterManager -> k
    io.vertx.core.impl.DeploymentManager deploymentManager -> l
    io.vertx.core.impl.FileResolver fileResolver -> m
    java.util.Map sharedHttpServers -> n
    java.util.Map sharedNetServers -> o
    io.vertx.core.impl.WorkerPool workerPool -> b
    io.vertx.core.impl.WorkerPool internalBlockingPool -> c
    java.util.concurrent.ThreadFactory eventLoopThreadFactory -> p
    io.netty.channel.EventLoopGroup eventLoopGroup -> q
    io.netty.channel.EventLoopGroup acceptorEventLoopGroup -> r
    io.vertx.core.impl.BlockedThreadChecker checker -> s
    boolean haEnabled -> t
    io.vertx.core.impl.AddressResolver addressResolver -> u
    io.vertx.core.dns.AddressResolverOptions addressResolverOptions -> v
    io.vertx.core.eventbus.EventBus eventBus -> w
    io.vertx.core.impl.HAManager haManager -> x
    boolean closed -> y
    io.vertx.core.Handler exceptionHandler -> z
    java.util.Map namedWorkerPools -> A
    int defaultWorkerPoolSize -> B
    long defaultWorkerMaxExecTime -> C
    io.vertx.core.impl.CloseHooks closeHooks -> D
    io.vertx.core.net.impl.transport.Transport transport -> E
    141:142:void <init>() -> <init>
    145:146:void <init>(io.vertx.core.VertxOptions) -> <init>
    111:212:void <init>(io.vertx.core.VertxOptions,io.vertx.core.Handler) -> <init>
    215:233:void createAndStartEventBus(io.vertx.core.VertxOptions,io.vertx.core.Handler) -> a
    239:239:io.vertx.core.file.FileSystem getFileSystem() -> g
    253:253:io.vertx.core.net.NetServer createNetServer(io.vertx.core.net.NetServerOptions) -> a
    272:272:io.vertx.core.net.impl.transport.Transport transport() -> h
    281:281:io.vertx.core.file.FileSystem fileSystem() -> d
    289:289:io.vertx.core.http.HttpServer createHttpServer(io.vertx.core.http.HttpServerOptions) -> a
    294:294:io.vertx.core.http.HttpServer createHttpServer() -> c
    307:314:io.vertx.core.eventbus.EventBus eventBus() -> e
    318:318:long setPeriodic(long,io.vertx.core.Handler) -> b
    327:327:long setTimer(long,io.vertx.core.Handler) -> a
    336:338:void runOnContext(io.vertx.core.Handler) -> a
    342:342:java.util.concurrent.ExecutorService getWorkerPool() -> i
    346:346:io.netty.channel.EventLoopGroup getEventLoopGroup() -> j
    350:350:io.netty.channel.EventLoopGroup getAcceptorEventLoopGroup() -> k
    354:359:io.vertx.core.impl.ContextImpl getOrCreateContext() -> l
    363:363:java.util.Map sharedHttpServers() -> m
    367:367:java.util.Map sharedNetServers() -> n
    381:386:boolean cancelTimer(long) -> a
    391:391:io.vertx.core.impl.EventLoopContext createEventLoopContext(java.lang.String,io.vertx.core.impl.WorkerPool,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> a
    396:402:io.vertx.core.impl.ContextImpl createWorkerContext(boolean,java.lang.String,io.vertx.core.impl.WorkerPool,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> a
    430:444:io.vertx.core.spi.metrics.VertxMetrics initialiseMetrics(io.vertx.core.VertxOptions) -> b
    448:471:io.vertx.core.spi.cluster.ClusterManager getClusterManager(io.vertx.core.VertxOptions) -> c
    476:483:long scheduleTimeout(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,long,boolean) -> a
    487:491:io.vertx.core.Context context() -> o
    495:499:io.vertx.core.impl.ContextImpl getContext() -> p
    587:588:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler) -> a
    618:622:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> a
    638:648:void deployVerticle(java.util.function.Supplier,io.vertx.core.DeploymentOptions,io.vertx.core.Handler) -> a
    718:720:void executeBlocking(io.vertx.core.Handler,boolean,io.vertx.core.Handler) -> a
    725:726:void executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler) -> a
    771:771:io.vertx.core.spi.metrics.VertxMetrics metricsSPI() -> q
    776:776:java.io.File resolveFile(java.lang.String) -> a
    781:782:void resolveAddress(java.lang.String,io.vertx.core.Handler) -> a
    791:791:io.netty.resolver.AddressResolverGroup nettyAddressResolverGroup() -> r
    1039:1056:io.vertx.core.impl.WorkerExecutorImpl createSharedWorkerExecutor(java.lang.String,int,long) -> a
    1060:1061:void releaseWorkerExecutor(java.lang.String) -> b
    1071:1071:io.vertx.core.Handler exceptionHandler() -> f
    97:97:io.vertx.core.Context getOrCreateContext() -> b
    621:621:io.vertx.core.Verticle lambda$deployVerticle$12(io.vertx.core.Verticle) -> a
    221:232:void lambda$createAndStartEventBus$1(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> a
    195:206:void lambda$new$0(io.vertx.core.Handler,io.vertx.core.VertxOptions,io.vertx.core.AsyncResult) -> a
    97:97:io.vertx.core.spi.metrics.VertxMetrics access$000(io.vertx.core.impl.VertxImpl) -> a
    97:97:java.util.concurrent.ConcurrentMap access$100(io.vertx.core.impl.VertxImpl) -> b
    99:109:void <clinit>() -> <clinit>
io.vertx.core.impl.VertxImpl$InternalTimerHandler -> io.vertx.core.impl.E:
    io.vertx.core.Handler handler -> a
    boolean periodic -> b
    long timerID -> c
    io.vertx.core.impl.ContextImpl context -> d
    java.util.concurrent.Future future -> e
    java.util.concurrent.atomic.AtomicBoolean cancelled -> f
    io.vertx.core.impl.VertxImpl this$0 -> g
    853:860:boolean cancel() -> a
    864:880:void <init>(io.vertx.core.impl.VertxImpl,long,io.vertx.core.Handler,boolean,long,io.vertx.core.impl.ContextImpl) -> <init>
    883:893:void handle(java.lang.Void) -> a
    896:904:void cleanupNonPeriodic() -> b
    908:911:void close(io.vertx.core.Handler) -> close
    844:844:void handle(java.lang.Object) -> handle
    871:871:void lambda$new$0(io.vertx.core.impl.ContextImpl) -> a
io.vertx.core.impl.VertxImpl$SharedWorkerPool -> io.vertx.core.impl.F:
    java.lang.String name -> b
    int refCount -> c
    io.vertx.core.impl.VertxImpl this$0 -> a
    1000:1005:void <init>(io.vertx.core.impl.VertxImpl,java.lang.String,java.util.concurrent.ExecutorService,io.vertx.core.spi.metrics.PoolMetrics) -> <init>
    1009:1015:void close() -> a
    1018:1024:void release() -> b
    997:997:int access$308(io.vertx.core.impl.VertxImpl$SharedWorkerPool) -> a
io.vertx.core.impl.VertxInternal -> io.vertx.core.impl.G:
    io.vertx.core.impl.ContextImpl getOrCreateContext() -> l
    io.netty.channel.EventLoopGroup getEventLoopGroup() -> j
    io.netty.channel.EventLoopGroup getAcceptorEventLoopGroup() -> k
    java.util.concurrent.ExecutorService getWorkerPool() -> i
    java.util.Map sharedHttpServers() -> m
    java.util.Map sharedNetServers() -> n
    io.vertx.core.spi.metrics.VertxMetrics metricsSPI() -> q
    io.vertx.core.net.impl.transport.Transport transport() -> h
    io.vertx.core.impl.ContextImpl getContext() -> p
    io.vertx.core.impl.EventLoopContext createEventLoopContext(java.lang.String,io.vertx.core.impl.WorkerPool,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> a
    io.vertx.core.impl.ContextImpl createWorkerContext(boolean,java.lang.String,io.vertx.core.impl.WorkerPool,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> a
    io.vertx.core.impl.WorkerExecutorImpl createSharedWorkerExecutor(java.lang.String,int,long) -> a
    java.io.File resolveFile(java.lang.String) -> a
    void resolveAddress(java.lang.String,io.vertx.core.Handler) -> a
    io.netty.resolver.AddressResolverGroup nettyAddressResolverGroup() -> r
    43:43:io.vertx.core.Context getOrCreateContext() -> b
io.vertx.core.impl.VertxThread -> io.vertx.core.impl.H:
    boolean worker -> a
    long maxExecTime -> b
    long execStart -> c
    io.vertx.core.impl.ContextImpl context -> d
    27:30:void <init>(java.lang.Runnable,java.lang.String,boolean,long) -> <init>
    33:33:io.vertx.core.impl.ContextImpl getContext() -> c
    37:38:void setContext(io.vertx.core.impl.ContextImpl) -> a
    41:42:void executeStart() -> d
    45:46:void executeEnd() -> e
    49:49:long startTime() -> f
    53:53:boolean isWorker() -> g
    57:57:long getMaxExecTime() -> h
io.vertx.core.impl.VertxThreadFactory -> io.vertx.core.impl.I:
    java.lang.Object FOO -> a
    java.util.Map weakMap -> b
    java.lang.String prefix -> c
    java.util.concurrent.atomic.AtomicInteger threadCount -> d
    io.vertx.core.impl.BlockedThreadChecker checker -> e
    boolean worker -> f
    long maxExecTime -> g
    30:31:void addToMap(io.vertx.core.impl.VertxThread) -> a
    34:44:void <init>(java.lang.String,io.vertx.core.impl.BlockedThreadChecker,boolean,long) -> <init>
    47:52:void unsetContext(io.vertx.core.impl.ContextImpl) -> a
    55:65:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    26:27:void <clinit>() -> <clinit>
io.vertx.core.impl.WorkerContext -> io.vertx.core.impl.J:
    24:25:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,java.lang.String,io.vertx.core.json.JsonObject,java.lang.ClassLoader) -> <init>
    29:30:void executeAsync(io.vertx.core.Handler) -> c
    34:34:boolean isEventLoopContext() -> c
    39:39:boolean isMultiThreadedWorkerContext() -> d
    45:45:void checkCorrectThread() -> g
    51:52:void executeFromIO(io.vertx.core.impl.ContextTask) -> a
io.vertx.core.impl.WorkerExecutorImpl -> io.vertx.core.impl.K:
    io.vertx.core.Vertx vertx -> a
    io.vertx.core.impl.WorkerPool pool -> b
    boolean closed -> c
    boolean releaseOnClose -> d
    33:37:void <init>(io.vertx.core.Vertx,io.vertx.core.impl.WorkerPool,boolean) -> <init>
    56:56:io.vertx.core.impl.WorkerPool getPool() -> a
    69:79:void close() -> b
    83:85:void close(io.vertx.core.Handler) -> close
io.vertx.core.impl.WorkerPool -> io.vertx.core.impl.L:
    java.util.concurrent.ExecutorService pool -> a
    io.vertx.core.spi.metrics.PoolMetrics metrics -> b
    27:30:void <init>(java.util.concurrent.ExecutorService,io.vertx.core.spi.metrics.PoolMetrics) -> <init>
    33:33:java.util.concurrent.ExecutorService executor() -> c
    37:37:io.vertx.core.spi.metrics.PoolMetrics metrics() -> d
    41:45:void close() -> a
io.vertx.core.impl.cpu.CpuCoreSensor -> io.vertx.core.impl.a.a:
    byte[] BITS -> a
    java.nio.charset.Charset ASCII -> b
    54:58:int availableProcessors() -> a
    62:75:int determineProcessors() -> b
    79:107:int readCPUMask(java.io.File) -> a
    55:55:java.lang.Integer lambda$availableProcessors$0() -> c
    34:35:void <clinit>() -> <clinit>
io.vertx.core.impl.launcher.commands.ExecUtils -> io.vertx.core.impl.b.a.a:
    java.lang.String osName -> a
    122:122:boolean isLinux() -> a
    60:60:void <clinit>() -> <clinit>
io.vertx.core.impl.resolver.DefaultResolverProvider -> io.vertx.core.impl.c.a:
    25:25:void <init>() -> <init>
    29:29:io.netty.resolver.AddressResolverGroup resolver(io.vertx.core.dns.AddressResolverOptions) -> a
io.vertx.core.impl.resolver.DnsResolverProvider -> io.vertx.core.impl.c.b:
    io.vertx.core.Vertx vertx -> b
    java.util.List resolvers -> c
    io.netty.resolver.AddressResolverGroup resolverGroup -> d
    java.util.List serverList -> e
    59:193:void <init>(io.vertx.core.impl.VertxImpl,io.vertx.core.dns.AddressResolverOptions) -> <init>
    206:206:io.netty.resolver.AddressResolverGroup resolver(io.vertx.core.dns.AddressResolverOptions) -> a
    103:103:io.netty.resolver.dns.DnsServerAddressStream lambda$new$0(io.netty.resolver.dns.DnsServerAddresses,java.lang.String) -> a
    56:56:java.util.List access$000(io.vertx.core.impl.resolver.DnsResolverProvider) -> a
io.vertx.core.impl.resolver.DnsResolverProvider$1 -> io.vertx.core.impl.c.c:
    io.vertx.core.impl.VertxImpl val$vertx -> a
    io.netty.resolver.dns.DnsServerAddressStreamProvider val$nameServerAddressProvider -> b
    io.netty.resolver.HostsFileEntries val$entries -> c
    io.vertx.core.dns.AddressResolverOptions val$options -> d
    io.netty.resolver.dns.DnsCache val$resolveCache -> e
    io.netty.resolver.dns.DnsCache val$authoritativeDnsServerCache -> f
    io.vertx.core.impl.resolver.DnsResolverProvider this$0 -> g
    133:133:void <init>(io.vertx.core.impl.resolver.DnsResolverProvider,io.vertx.core.impl.VertxImpl,io.netty.resolver.dns.DnsServerAddressStreamProvider,io.netty.resolver.HostsFileEntries,io.vertx.core.dns.AddressResolverOptions,io.netty.resolver.dns.DnsCache,io.netty.resolver.dns.DnsCache) -> <init>
    136:190:io.netty.resolver.AddressResolver newResolver(io.netty.util.concurrent.EventExecutor) -> b
    136:136:io.netty.channel.socket.DatagramChannel lambda$newResolver$0(io.vertx.core.impl.VertxImpl) -> a
io.vertx.core.impl.resolver.DnsResolverProvider$1$1 -> io.vertx.core.impl.c.d:
    io.netty.util.concurrent.EventExecutor val$executor -> a
    io.vertx.core.impl.resolver.DnsResolverProvider$1 this$1 -> b
    137:137:void <init>(io.vertx.core.impl.resolver.DnsResolverProvider$1,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider,io.netty.util.concurrent.EventExecutor) -> <init>
    140:183:io.netty.resolver.NameResolver newNameResolver(io.netty.channel.EventLoop,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider) -> b
io.vertx.core.impl.resolver.DnsResolverProvider$1$1$1 -> io.vertx.core.impl.c.e:
    io.vertx.core.impl.resolver.DnsResolverProvider$1$1 this$2 -> b
    141:141:void <init>(io.vertx.core.impl.resolver.DnsResolverProvider$1$1) -> <init>
    144:148:java.net.InetAddress address(java.lang.String,io.netty.resolver.ResolvedAddressTypes) -> a
    151:163:java.net.InetAddress lookup(java.lang.String,io.netty.resolver.ResolvedAddressTypes) -> b
io.vertx.core.impl.resolver.DnsResolverProvider$2 -> io.vertx.core.impl.c.f:
    int[] $SwitchMap$io$netty$resolver$ResolvedAddressTypes -> a
    151:151:void <clinit>() -> <clinit>
io.vertx.core.impl.resolver.DnsResolverProvider$ResolverRegistration -> io.vertx.core.impl.c.g:
    io.netty.resolver.AddressResolver resolver -> a
    io.netty.channel.EventLoop executor -> b
    198:201:void <init>(io.netty.resolver.AddressResolver,io.netty.channel.EventLoop) -> <init>
io.vertx.core.impl.verticle.CompilingClassLoader -> io.vertx.core.impl.d.a:
    io.vertx.core.logging.Logger log -> a
    java.util.List COMPILER_OPTIONS -> b
    io.vertx.core.impl.verticle.JavaSourceContext javaSourceContext -> c
    io.vertx.core.impl.verticle.MemoryFileManager fileManager -> d
    65:117:void <init>(java.lang.ClassLoader,java.lang.String) -> <init>
    120:120:java.lang.String resolveMainClassName() -> a
    125:129:java.lang.Class findClass(java.lang.String) -> findClass
    133:133:byte[] getClassBytes(java.lang.String) -> a
    41:60:void <clinit>() -> <clinit>
io.vertx.core.impl.verticle.CustomJavaFileObject -> io.vertx.core.impl.d.b:
    java.lang.String binaryName -> a
    javax.tools.JavaFileObject$Kind kind -> b
    java.net.URI uri -> c
    34:38:void <init>(java.net.URI,javax.tools.JavaFileObject$Kind,java.lang.String) -> <init>
    41:41:java.lang.String binaryName() -> a
    46:46:java.io.InputStream openInputStream() -> openInputStream
    50:50:javax.tools.JavaFileObject$Kind getKind() -> getKind
    54:54:javax.lang.model.element.NestingKind getNestingKind() -> getNestingKind
    59:59:java.net.URI toUri() -> toUri
    63:63:java.lang.String getName() -> getName
    67:67:java.io.OutputStream openOutputStream() -> openOutputStream
    71:71:java.io.Reader openReader(boolean) -> openReader
    75:75:java.lang.CharSequence getCharContent(boolean) -> getCharContent
    79:79:java.io.Writer openWriter() -> openWriter
    83:83:long getLastModified() -> getLastModified
    87:87:boolean delete() -> delete
    91:92:boolean isNameCompatible(java.lang.String,javax.tools.JavaFileObject$Kind) -> isNameCompatible
    96:96:javax.lang.model.element.Modifier getAccessLevel() -> getAccessLevel
    101:101:java.lang.String toString() -> toString
io.vertx.core.impl.verticle.JavaSourceContext -> io.vertx.core.impl.d.c:
    java.lang.String className -> a
    java.io.File sourceRoot -> b
    31:52:void <init>(java.io.File) -> <init>
    55:55:java.io.File getSourceRoot() -> a
    59:59:java.lang.String getClassName() -> b
    70:85:java.lang.String parsePackage(java.io.File) -> a
io.vertx.core.impl.verticle.MemoryFileManager -> io.vertx.core.impl.d.d:
    java.util.Map compiledClasses -> a
    io.vertx.core.impl.verticle.PackageHelper helper -> b
    36:42:void <init>(java.lang.ClassLoader,javax.tools.JavaFileManager) -> <init>
    48:56:javax.tools.JavaFileObject getJavaFileForOutput(javax.tools.JavaFileManager$Location,java.lang.String,javax.tools.JavaFileObject$Kind,javax.tools.FileObject) -> getJavaFileForOutput
    61:65:byte[] getCompiledClass(java.lang.String) -> a
    70:73:java.lang.String inferBinaryName(javax.tools.JavaFileManager$Location,javax.tools.JavaFileObject) -> inferBinaryName
    80:83:java.lang.Iterable list(javax.tools.JavaFileManager$Location,java.lang.String,java.util.Set,boolean) -> list
    35:35:java.util.Map access$000(io.vertx.core.impl.verticle.MemoryFileManager) -> a
io.vertx.core.impl.verticle.MemoryFileManager$1 -> io.vertx.core.impl.d.e:
    java.lang.String val$className -> a
    io.vertx.core.impl.verticle.MemoryFileManager this$0 -> b
    48:48:void <init>(io.vertx.core.impl.verticle.MemoryFileManager,java.net.URI,javax.tools.JavaFileObject$Kind,java.lang.String) -> <init>
    50:52:java.io.OutputStream openOutputStream() -> openOutputStream
io.vertx.core.impl.verticle.PackageHelper -> io.vertx.core.impl.d.f:
    java.lang.ClassLoader classLoader -> a
    36:38:void <init>(java.lang.ClassLoader) -> <init>
    41:61:java.util.List find(java.lang.String) -> a
    65:72:java.util.List browseDir(java.lang.String,java.io.File) -> a
    76:95:java.util.List browseJar(java.net.URL) -> a
io.vertx.core.json.DecodeException -> io.vertx.core.e.a:
    21:22:void <init>() -> <init>
    25:26:void <init>(java.lang.String) -> <init>
    29:30:void <init>(java.lang.String,java.lang.Throwable) -> <init>
io.vertx.core.json.EncodeException -> io.vertx.core.e.b:
    20:21:void <init>(java.lang.String) -> <init>
    27:28:void <init>() -> <init>
io.vertx.core.json.Json -> io.vertx.core.e.c:
    com.fasterxml.jackson.databind.ObjectMapper mapper -> a
    com.fasterxml.jackson.databind.ObjectMapper prettyMapper -> b
    71:73:java.lang.String encode(java.lang.Object) -> a
    86:88:io.vertx.core.buffer.Buffer encodeToBuffer(java.lang.Object) -> b
    117:119:java.lang.Object decodeValue(java.lang.String,java.lang.Class) -> a
    165:167:java.lang.Object decodeValue(io.vertx.core.buffer.Buffer,java.lang.Class) -> a
    173:212:java.lang.Object checkAndCopy(java.lang.Object,boolean) -> a
    40:60:void <clinit>() -> <clinit>
io.vertx.core.json.Json$1 -> io.vertx.core.e.d:
io.vertx.core.json.Json$ByteArraySerializer -> io.vertx.core.e.e:
    java.util.Base64$Encoder BASE64 -> a
    241:242:void <init>() -> <init>
    246:247:void serialize(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    241:241:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    241:241:void <init>(io.vertx.core.json.Json$1) -> <init>
io.vertx.core.json.Json$InstantSerializer -> io.vertx.core.e.f:
    234:234:void <init>() -> <init>
    237:238:void serialize(java.time.Instant,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    234:234:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    234:234:void <init>(io.vertx.core.json.Json$1) -> <init>
io.vertx.core.json.Json$JsonArraySerializer -> io.vertx.core.e.g:
    227:227:void <init>() -> <init>
    230:231:void serialize(io.vertx.core.json.JsonArray,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    227:227:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    227:227:void <init>(io.vertx.core.json.Json$1) -> <init>
io.vertx.core.json.Json$JsonObjectSerializer -> io.vertx.core.e.h:
    220:220:void <init>() -> <init>
    223:224:void serialize(io.vertx.core.json.JsonObject,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    220:220:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    220:220:void <init>(io.vertx.core.json.Json$1) -> <init>
io.vertx.core.json.JsonArray -> io.vertx.core.e.i:
    java.util.List list -> a
    52:54:void <init>() -> <init>
    61:63:void <init>(java.util.List) -> <init>
    70:72:void <init>(io.vertx.core.buffer.Buffer) -> <init>
    304:306:io.vertx.core.json.JsonArray add(java.lang.String) -> a
    386:388:io.vertx.core.json.JsonArray add(io.vertx.core.json.JsonObject) -> a
    412:414:io.vertx.core.json.JsonArray add(byte[]) -> a
    519:519:java.util.List getList() -> a
    539:539:java.util.Iterator iterator() -> iterator
    548:548:java.lang.String encode() -> b
    557:557:io.vertx.core.buffer.Buffer toBuffer() -> c
    575:580:io.vertx.core.json.JsonArray copy() -> d
    594:594:java.lang.String toString() -> toString
    599:603:boolean equals(java.lang.Object) -> equals
    608:628:boolean arrayEquals(java.util.List,java.lang.Object) -> a
    633:633:int hashCode() -> hashCode
    658:659:void fromBuffer(io.vertx.core.buffer.Buffer) -> a
io.vertx.core.json.JsonArray$Iter -> io.vertx.core.e.j:
    java.util.Iterator listIter -> a
    io.vertx.core.json.JsonArray this$0 -> b
    665:667:void <init>(io.vertx.core.json.JsonArray,java.util.Iterator) -> <init>
    671:671:boolean hasNext() -> hasNext
    676:682:java.lang.Object next() -> next
    687:688:void remove() -> remove
io.vertx.core.json.JsonObject -> io.vertx.core.e.k:
    java.util.Map map -> a
    46:48:void <init>(java.lang.String) -> <init>
    53:55:void <init>() -> <init>
    62:64:void <init>(java.util.Map) -> <init>
    71:73:void <init>(io.vertx.core.buffer.Buffer) -> <init>
    110:112:java.lang.String getString(java.lang.String) -> a
    227:232:io.vertx.core.json.JsonArray getJsonArray(java.lang.String) -> b
    280:287:java.lang.Object getValue(java.lang.String) -> c
    529:531:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String) -> a
    542:544:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer) -> a
    555:557:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Long) -> a
    594:596:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Boolean) -> a
    619:621:io.vertx.core.json.JsonObject put(java.lang.String,io.vertx.core.json.JsonObject) -> a
    632:634:io.vertx.core.json.JsonObject put(java.lang.String,io.vertx.core.json.JsonArray) -> a
    647:649:io.vertx.core.json.JsonObject put(java.lang.String,byte[]) -> a
    760:760:java.lang.String encode() -> a
    779:779:io.vertx.core.buffer.Buffer toBuffer() -> b
    789:799:io.vertx.core.json.JsonObject copy() -> c
    810:810:java.util.Map getMap() -> d
    829:829:java.util.Iterator iterator() -> iterator
    860:860:java.lang.String toString() -> toString
    865:869:boolean equals(java.lang.Object) -> equals
    874:895:boolean objectEquals(java.util.Map,java.lang.Object) -> a
    899:922:boolean equals(java.lang.Object,java.lang.Object) -> a
    927:927:int hashCode() -> hashCode
    948:949:void fromJson(java.lang.String) -> d
    952:953:void fromBuffer(io.vertx.core.buffer.Buffer) -> a
io.vertx.core.json.JsonObject$Entry -> io.vertx.core.e.l:
    java.lang.String key -> a
    java.lang.Object value -> b
    989:992:void <init>(java.lang.String,java.lang.Object) -> <init>
    996:996:java.lang.String getKey() -> a
    1001:1001:java.lang.Object getValue() -> getValue
    1006:1006:java.lang.Object setValue(java.lang.Object) -> setValue
    985:985:java.lang.Object getKey() -> getKey
io.vertx.core.json.JsonObject$Iter -> io.vertx.core.e.m:
    java.util.Iterator mapIter -> a
    io.vertx.core.json.JsonObject this$0 -> b
    959:961:void <init>(io.vertx.core.json.JsonObject,java.util.Iterator) -> <init>
    965:965:boolean hasNext() -> hasNext
    970:976:java.util.Map$Entry next() -> a
    981:982:void remove() -> remove
    955:955:java.lang.Object next() -> next
io.vertx.core.logging.JULLogDelegate -> io.vertx.core.f.a:
    java.util.logging.Logger logger -> a
    27:29:void <init>(java.lang.String) -> <init>
    36:36:boolean isDebugEnabled() -> a
    40:40:boolean isTraceEnabled() -> b
    52:53:void error(java.lang.Object) -> a
    61:62:void error(java.lang.Object,java.lang.Throwable) -> a
    70:71:void warn(java.lang.Object) -> b
    79:80:void warn(java.lang.Object,java.lang.Throwable) -> b
    88:89:void info(java.lang.Object) -> c
    106:107:void debug(java.lang.Object) -> d
    124:125:void trace(java.lang.Object) -> e
    133:134:void trace(java.lang.Object,java.lang.Throwable) -> c
    142:143:void log(java.util.logging.Level,java.lang.Object) -> a
    146:163:void log(java.util.logging.Level,java.lang.Object,java.lang.Throwable,java.lang.Object[]) -> a
    166:167:void log(java.util.logging.Level,java.lang.Object,java.lang.Throwable) -> a
io.vertx.core.logging.JULLogDelegateFactory -> io.vertx.core.f.b:
    27:27:void <init>() -> <init>
    30:36:void loadConfig() -> a
    46:46:io.vertx.core.spi.logging.LogDelegate createDelegate(java.lang.String) -> a
    40:43:void <clinit>() -> <clinit>
io.vertx.core.logging.Logger -> io.vertx.core.f.c:
    io.vertx.core.spi.logging.LogDelegate delegate -> a
    39:41:void <init>(io.vertx.core.spi.logging.LogDelegate) -> <init>
    48:48:boolean isDebugEnabled() -> a
    52:52:boolean isTraceEnabled() -> b
    64:65:void error(java.lang.Object) -> a
    68:69:void error(java.lang.Object,java.lang.Throwable) -> a
    86:87:void warn(java.lang.Object) -> b
    90:91:void warn(java.lang.Object,java.lang.Throwable) -> b
    108:109:void info(java.lang.Object) -> c
    130:131:void debug(java.lang.Object) -> d
    152:153:void trace(java.lang.Object) -> e
    156:157:void trace(java.lang.Object,java.lang.Throwable) -> c
io.vertx.core.logging.LoggerFactory -> io.vertx.core.f.d:
    io.vertx.core.spi.logging.LogDelegateFactory delegateFactory -> a
    java.util.concurrent.ConcurrentMap loggers -> b
    42:61:void initialise() -> a
    64:67:io.vertx.core.logging.Logger getLogger(java.lang.Class) -> a
    71:85:io.vertx.core.logging.Logger getLogger(java.lang.String) -> a
    29:33:void <clinit>() -> <clinit>
io.vertx.core.metrics.MetricsOptions -> io.vertx.core.g.a:
    boolean enabled -> a
    io.vertx.core.json.JsonObject json -> b
    io.vertx.core.spi.VertxMetricsFactory factory -> c
    39:41:void <init>() -> <init>
    70:70:boolean isEnabled() -> a
    95:95:io.vertx.core.spi.VertxMetricsFactory getFactory() -> b
    120:126:boolean equals(java.lang.Object) -> equals
    132:134:int hashCode() -> hashCode
    139:139:java.lang.String toString() -> toString
io.vertx.core.net.ClientOptionsBase -> io.vertx.core.h.a:
    int connectTimeout -> a
    boolean trustAll -> b
    java.lang.String metricsName -> e
    io.vertx.core.net.ProxyOptions proxyOptions -> f
    java.lang.String localAddress -> g
    53:55:void <init>() -> <init>
    63:69:void <init>(io.vertx.core.net.ClientOptionsBase) -> <init>
    77:80:void <init>(io.vertx.core.json.JsonObject) -> <init>
    88:90:io.vertx.core.json.JsonObject toJson() -> a
    94:99:void init() -> b
    106:106:boolean isTrustAll() -> A
    116:117:io.vertx.core.net.ClientOptionsBase setTrustAll(boolean) -> F
    124:124:int getConnectTimeout() -> B
    134:138:io.vertx.core.net.ClientOptionsBase setConnectTimeout(int) -> t
    145:145:java.lang.String getMetricsName() -> C
    156:157:io.vertx.core.net.ClientOptionsBase setMetricsName(java.lang.String) -> j
    167:168:io.vertx.core.net.ClientOptionsBase setProxyOptions(io.vertx.core.net.ProxyOptions) -> b
    177:177:io.vertx.core.net.ProxyOptions getProxyOptions() -> D
    184:184:java.lang.String getLocalAddress() -> E
    195:196:io.vertx.core.net.ClientOptionsBase setLocalAddress(java.lang.String) -> i
    201:201:io.vertx.core.net.ClientOptionsBase setLogActivity(boolean) -> E
    206:206:io.vertx.core.net.ClientOptionsBase setTcpNoDelay(boolean) -> D
    211:211:io.vertx.core.net.ClientOptionsBase setTcpKeepAlive(boolean) -> C
    216:216:io.vertx.core.net.ClientOptionsBase setSoLinger(int) -> s
    221:221:io.vertx.core.net.ClientOptionsBase setUsePooledBuffers(boolean) -> B
    226:226:io.vertx.core.net.ClientOptionsBase setIdleTimeout(int) -> r
    231:231:io.vertx.core.net.ClientOptionsBase setSsl(boolean) -> A
    241:241:io.vertx.core.net.ClientOptionsBase setKeyStoreOptions(io.vertx.core.net.JksOptions) -> f
    246:246:io.vertx.core.net.ClientOptionsBase setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> f
    251:251:io.vertx.core.net.ClientOptionsBase setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> c
    261:261:io.vertx.core.net.ClientOptionsBase setTrustStoreOptions(io.vertx.core.net.JksOptions) -> e
    266:266:io.vertx.core.net.ClientOptionsBase setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> e
    271:271:io.vertx.core.net.ClientOptionsBase setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> c
    276:276:io.vertx.core.net.ClientOptionsBase setUseAlpn(boolean) -> z
    281:281:io.vertx.core.net.ClientOptionsBase setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> b
    286:286:io.vertx.core.net.ClientOptionsBase setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> b
    291:291:io.vertx.core.net.ClientOptionsBase setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> b
    296:296:io.vertx.core.net.ClientOptionsBase setSendBufferSize(int) -> q
    301:301:io.vertx.core.net.ClientOptionsBase setReceiveBufferSize(int) -> p
    306:306:io.vertx.core.net.ClientOptionsBase setReuseAddress(boolean) -> y
    311:311:io.vertx.core.net.ClientOptionsBase setReusePort(boolean) -> x
    316:316:io.vertx.core.net.ClientOptionsBase setTrafficClass(int) -> o
    321:321:io.vertx.core.net.ClientOptionsBase addEnabledCipherSuite(java.lang.String) -> h
    326:326:io.vertx.core.net.ClientOptionsBase addCrlPath(java.lang.String) -> g
    331:331:io.vertx.core.net.ClientOptionsBase addCrlValue(io.vertx.core.buffer.Buffer) -> c
    346:346:io.vertx.core.net.ClientOptionsBase setTcpFastOpen(boolean) -> w
    351:351:io.vertx.core.net.ClientOptionsBase setTcpCork(boolean) -> v
    356:356:io.vertx.core.net.ClientOptionsBase setTcpQuickAck(boolean) -> u
    361:373:boolean equals(java.lang.Object) -> equals
    378:384:int hashCode() -> hashCode
    25:25:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> h
    25:25:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> f
    25:25:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> i
    25:25:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> g
    25:25:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> h
    25:25:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> G
    25:25:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> H
    25:25:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> I
    25:25:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> J
    25:25:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> c
    25:25:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> c
    25:25:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> c
    25:25:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> K
    25:25:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> b
    25:25:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> c
    25:25:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> d
    25:25:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> b
    25:25:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> c
    25:25:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> c
    25:25:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> b
    25:25:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> d
    25:25:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> d
    25:25:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> j
    25:25:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> i
    25:25:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> k
    25:25:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> j
    25:25:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> l
    25:25:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> m
    25:25:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> n
    25:25:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> L
    25:25:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> k
    25:25:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> o
    25:25:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> l
    25:25:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> m
io.vertx.core.net.ClientOptionsBaseConverter -> io.vertx.core.h.b:
    30:45:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.ClientOptionsBase) -> a
    48:59:void toJson(io.vertx.core.net.ClientOptionsBase,io.vertx.core.json.JsonObject) -> a
io.vertx.core.net.JdkSSLEngineOptions -> io.vertx.core.h.c:
    java.lang.Boolean jdkAlpnAvailable -> a
    31:43:boolean isAlpnAvailable() -> a
    46:47:void <init>() -> <init>
    49:50:void <init>(io.vertx.core.json.JsonObject) -> <init>
    56:56:io.vertx.core.json.JsonObject toJson() -> b
    61:61:int hashCode() -> hashCode
    66:68:boolean equals(java.lang.Object) -> equals
    73:73:io.vertx.core.net.SSLEngineOptions clone() -> c
    22:22:java.lang.Object clone() -> clone
io.vertx.core.net.JksOptions -> io.vertx.core.h.d:
    java.lang.String password -> a
    java.lang.String path -> b
    io.vertx.core.buffer.Buffer value -> c
    58:59:void <init>() -> <init>
    67:71:void <init>(io.vertx.core.net.JksOptions) -> <init>
    79:81:void <init>(io.vertx.core.json.JsonObject) -> <init>
    89:91:io.vertx.core.json.JsonObject toJson() -> a
    98:98:java.lang.String getPassword() -> b
    108:109:io.vertx.core.net.JksOptions setPassword(java.lang.String) -> a
    118:118:java.lang.String getPath() -> c
    128:129:io.vertx.core.net.JksOptions setPath(java.lang.String) -> b
    138:138:io.vertx.core.buffer.Buffer getValue() -> d
    148:149:io.vertx.core.net.JksOptions setValue(io.vertx.core.buffer.Buffer) -> a
    154:173:boolean equals(java.lang.Object) -> equals
    178:183:int hashCode() -> hashCode
    188:188:io.vertx.core.net.JksOptions clone() -> e
    47:47:java.lang.Object clone() -> clone
    47:47:io.vertx.core.net.KeyCertOptions clone() -> f
    47:47:io.vertx.core.net.TrustOptions clone() -> g
io.vertx.core.net.JksOptionsConverter -> io.vertx.core.h.e:
    30:39:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.JksOptions) -> a
    42:51:void toJson(io.vertx.core.net.JksOptions,io.vertx.core.json.JsonObject) -> a
io.vertx.core.net.KeyCertOptions -> io.vertx.core.h.f:
    io.vertx.core.net.KeyCertOptions clone() -> f
    43:43:javax.net.ssl.KeyManagerFactory getKeyManagerFactory(io.vertx.core.Vertx) -> a
    65:66:java.util.function.Function keyManagerMapper(io.vertx.core.Vertx) -> b
io.vertx.core.net.NetClient -> io.vertx.core.h.g:
    io.vertx.core.net.NetClient connect(int,java.lang.String,io.vertx.core.Handler) -> a
    void close() -> a
io.vertx.core.net.NetClientOptions -> io.vertx.core.h.h:
    int reconnectAttempts -> a
    long reconnectInterval -> b
    java.lang.String hostnameVerificationAlgorithm -> e
    52:54:void <init>() -> <init>
    62:66:void <init>(io.vertx.core.net.NetClientOptions) -> <init>
    74:77:void <init>(io.vertx.core.json.JsonObject) -> <init>
    80:83:void init() -> e
    87:88:io.vertx.core.net.NetClientOptions setSendBufferSize(int) -> a
    93:94:io.vertx.core.net.NetClientOptions setReceiveBufferSize(int) -> b
    99:100:io.vertx.core.net.NetClientOptions setReuseAddress(boolean) -> a
    105:106:io.vertx.core.net.NetClientOptions setReusePort(boolean) -> b
    111:112:io.vertx.core.net.NetClientOptions setTrafficClass(int) -> c
    117:118:io.vertx.core.net.NetClientOptions setTcpNoDelay(boolean) -> c
    123:124:io.vertx.core.net.NetClientOptions setTcpKeepAlive(boolean) -> d
    129:130:io.vertx.core.net.NetClientOptions setSoLinger(int) -> d
    135:136:io.vertx.core.net.NetClientOptions setUsePooledBuffers(boolean) -> e
    141:142:io.vertx.core.net.NetClientOptions setIdleTimeout(int) -> e
    147:148:io.vertx.core.net.NetClientOptions setSsl(boolean) -> f
    159:160:io.vertx.core.net.NetClientOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> a
    165:165:io.vertx.core.net.NetClientOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> a
    170:170:io.vertx.core.net.NetClientOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> a
    181:182:io.vertx.core.net.NetClientOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> b
    187:187:io.vertx.core.net.NetClientOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> a
    192:192:io.vertx.core.net.NetClientOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> b
    197:198:io.vertx.core.net.NetClientOptions addEnabledCipherSuite(java.lang.String) -> a
    214:214:io.vertx.core.net.NetClientOptions setUseAlpn(boolean) -> g
    219:219:io.vertx.core.net.NetClientOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> a
    224:224:io.vertx.core.net.NetClientOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> a
    229:229:io.vertx.core.net.NetClientOptions setTcpFastOpen(boolean) -> p
    234:234:io.vertx.core.net.NetClientOptions setTcpCork(boolean) -> q
    239:239:io.vertx.core.net.NetClientOptions setTcpQuickAck(boolean) -> r
    244:244:io.vertx.core.net.ClientOptionsBase setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> b
    249:249:io.vertx.core.net.NetClientOptions addCrlPath(java.lang.String) -> b
    254:254:io.vertx.core.net.NetClientOptions addCrlValue(io.vertx.core.buffer.Buffer) -> a
    259:260:io.vertx.core.net.NetClientOptions setTrustAll(boolean) -> s
    265:266:io.vertx.core.net.NetClientOptions setConnectTimeout(int) -> n
    271:271:io.vertx.core.net.NetClientOptions setMetricsName(java.lang.String) -> e
    281:285:io.vertx.core.net.NetClientOptions setReconnectAttempts(int) -> u
    292:292:int getReconnectAttempts() -> b
    302:306:io.vertx.core.net.NetClientOptions setReconnectInterval(long) -> a
    314:314:java.lang.String getHostnameVerificationAlgorithm() -> c
    326:328:io.vertx.core.net.NetClientOptions setHostnameVerificationAlgorithm(java.lang.String) -> f
    335:335:long getReconnectInterval() -> d
    340:340:io.vertx.core.net.NetClientOptions setLogActivity(boolean) -> t
    344:344:io.vertx.core.net.NetClientOptions setProxyOptions(io.vertx.core.net.ProxyOptions) -> a
    349:349:io.vertx.core.net.NetClientOptions setLocalAddress(java.lang.String) -> k
    354:364:boolean equals(java.lang.Object) -> equals
    369:373:int hashCode() -> hashCode
    25:25:io.vertx.core.net.ClientOptionsBase setTcpQuickAck(boolean) -> u
    25:25:io.vertx.core.net.ClientOptionsBase setTcpCork(boolean) -> v
    25:25:io.vertx.core.net.ClientOptionsBase setTcpFastOpen(boolean) -> w
    25:25:io.vertx.core.net.ClientOptionsBase addCrlValue(io.vertx.core.buffer.Buffer) -> c
    25:25:io.vertx.core.net.ClientOptionsBase addCrlPath(java.lang.String) -> g
    25:25:io.vertx.core.net.ClientOptionsBase addEnabledCipherSuite(java.lang.String) -> h
    25:25:io.vertx.core.net.ClientOptionsBase setTrafficClass(int) -> o
    25:25:io.vertx.core.net.ClientOptionsBase setReusePort(boolean) -> x
    25:25:io.vertx.core.net.ClientOptionsBase setReuseAddress(boolean) -> y
    25:25:io.vertx.core.net.ClientOptionsBase setReceiveBufferSize(int) -> p
    25:25:io.vertx.core.net.ClientOptionsBase setSendBufferSize(int) -> q
    25:25:io.vertx.core.net.ClientOptionsBase setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> b
    25:25:io.vertx.core.net.ClientOptionsBase setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> b
    25:25:io.vertx.core.net.ClientOptionsBase setUseAlpn(boolean) -> z
    25:25:io.vertx.core.net.ClientOptionsBase setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> c
    25:25:io.vertx.core.net.ClientOptionsBase setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> e
    25:25:io.vertx.core.net.ClientOptionsBase setTrustStoreOptions(io.vertx.core.net.JksOptions) -> e
    25:25:io.vertx.core.net.ClientOptionsBase setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> c
    25:25:io.vertx.core.net.ClientOptionsBase setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> f
    25:25:io.vertx.core.net.ClientOptionsBase setKeyStoreOptions(io.vertx.core.net.JksOptions) -> f
    25:25:io.vertx.core.net.ClientOptionsBase setSsl(boolean) -> A
    25:25:io.vertx.core.net.ClientOptionsBase setIdleTimeout(int) -> r
    25:25:io.vertx.core.net.ClientOptionsBase setUsePooledBuffers(boolean) -> B
    25:25:io.vertx.core.net.ClientOptionsBase setSoLinger(int) -> s
    25:25:io.vertx.core.net.ClientOptionsBase setTcpKeepAlive(boolean) -> C
    25:25:io.vertx.core.net.ClientOptionsBase setTcpNoDelay(boolean) -> D
    25:25:io.vertx.core.net.ClientOptionsBase setLogActivity(boolean) -> E
    25:25:io.vertx.core.net.ClientOptionsBase setLocalAddress(java.lang.String) -> i
    25:25:io.vertx.core.net.ClientOptionsBase setProxyOptions(io.vertx.core.net.ProxyOptions) -> b
    25:25:io.vertx.core.net.ClientOptionsBase setMetricsName(java.lang.String) -> j
    25:25:io.vertx.core.net.ClientOptionsBase setConnectTimeout(int) -> t
    25:25:io.vertx.core.net.ClientOptionsBase setTrustAll(boolean) -> F
    25:25:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> h
    25:25:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> f
    25:25:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> i
    25:25:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> g
    25:25:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> h
    25:25:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> G
    25:25:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> H
    25:25:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> I
    25:25:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> J
    25:25:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> c
    25:25:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> c
    25:25:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> c
    25:25:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> K
    25:25:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> b
    25:25:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> c
    25:25:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> d
    25:25:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> b
    25:25:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> c
    25:25:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> c
    25:25:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> b
    25:25:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> d
    25:25:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> d
    25:25:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> j
    25:25:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> i
    25:25:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> k
    25:25:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> j
    25:25:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> l
    25:25:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> m
    25:25:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> n
    25:25:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> L
    25:25:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> k
    25:25:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> o
    25:25:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> l
    25:25:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> m
io.vertx.core.net.NetClientOptionsConverter -> io.vertx.core.h.i:
    30:39:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.NetClientOptions) -> a
io.vertx.core.net.NetServer -> io.vertx.core.h.j:
    io.vertx.core.net.NetServer connectHandler(io.vertx.core.Handler) -> a
    io.vertx.core.net.NetServer listen(io.vertx.core.Handler) -> b
    void close(io.vertx.core.Handler) -> close
    int actualPort() -> a
io.vertx.core.net.NetServerOptions -> io.vertx.core.h.k:
    io.vertx.core.http.ClientAuth DEFAULT_CLIENT_AUTH -> b
    int port -> a
    java.lang.String host -> e
    int acceptBacklog -> f
    io.vertx.core.http.ClientAuth clientAuth -> g
    boolean sni -> h
    64:66:void <init>() -> <init>
    74:80:void <init>(io.vertx.core.net.NetServerOptions) -> <init>
    88:91:void <init>(io.vertx.core.json.JsonObject) -> <init>
    99:101:io.vertx.core.json.JsonObject toJson() -> a
    106:107:io.vertx.core.net.NetServerOptions setSendBufferSize(int) -> v
    112:113:io.vertx.core.net.NetServerOptions setReceiveBufferSize(int) -> u
    118:119:io.vertx.core.net.NetServerOptions setReuseAddress(boolean) -> N
    124:125:io.vertx.core.net.NetServerOptions setReusePort(boolean) -> M
    130:131:io.vertx.core.net.NetServerOptions setTrafficClass(int) -> t
    136:137:io.vertx.core.net.NetServerOptions setTcpNoDelay(boolean) -> F
    142:143:io.vertx.core.net.NetServerOptions setTcpKeepAlive(boolean) -> E
    148:149:io.vertx.core.net.NetServerOptions setSoLinger(int) -> s
    154:155:io.vertx.core.net.NetServerOptions setUsePooledBuffers(boolean) -> D
    160:161:io.vertx.core.net.NetServerOptions setIdleTimeout(int) -> r
    166:167:io.vertx.core.net.NetServerOptions setSsl(boolean) -> C
    172:173:io.vertx.core.net.NetServerOptions setUseAlpn(boolean) -> B
    178:179:io.vertx.core.net.NetServerOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> b
    184:184:io.vertx.core.net.NetServerOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> b
    189:189:io.vertx.core.net.NetServerOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> b
    200:201:io.vertx.core.net.NetServerOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> f
    206:206:io.vertx.core.net.NetServerOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> f
    211:211:io.vertx.core.net.NetServerOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> c
    222:223:io.vertx.core.net.NetServerOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> e
    228:228:io.vertx.core.net.NetServerOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> e
    233:233:io.vertx.core.net.NetServerOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> c
    238:239:io.vertx.core.net.NetServerOptions addEnabledCipherSuite(java.lang.String) -> h
    255:255:io.vertx.core.net.NetServerOptions setTcpFastOpen(boolean) -> A
    260:260:io.vertx.core.net.NetServerOptions setTcpCork(boolean) -> z
    265:265:io.vertx.core.net.NetServerOptions setTcpQuickAck(boolean) -> y
    270:270:io.vertx.core.net.NetServerOptions addCrlPath(java.lang.String) -> g
    275:275:io.vertx.core.net.NetServerOptions addCrlValue(io.vertx.core.buffer.Buffer) -> c
    282:282:int getAcceptBacklog() -> q
    292:293:io.vertx.core.net.NetServerOptions setAcceptBacklog(int) -> q
    301:301:int getPort() -> r
    311:315:io.vertx.core.net.NetServerOptions setPort(int) -> p
    323:323:java.lang.String getHost() -> s
    332:333:io.vertx.core.net.NetServerOptions setHost(java.lang.String) -> f
    342:342:boolean isClientAuthRequired() -> t
    353:354:io.vertx.core.net.NetServerOptions setClientAuthRequired(boolean) -> x
    358:358:io.vertx.core.http.ClientAuth getClientAuth() -> u
    370:371:io.vertx.core.net.NetServerOptions setClientAuth(io.vertx.core.http.ClientAuth) -> b
    376:376:io.vertx.core.net.NetServerOptions setLogActivity(boolean) -> w
    383:383:boolean isSni() -> v
    392:393:io.vertx.core.net.NetServerOptions setSni(boolean) -> v
    398:410:boolean equals(java.lang.Object) -> equals
    415:421:int hashCode() -> hashCode
    425:430:void init() -> b
    24:24:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> h
    24:24:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> f
    24:24:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> i
    24:24:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> g
    24:24:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> h
    24:24:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> G
    24:24:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> H
    24:24:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> I
    24:24:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> J
    24:24:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> c
    24:24:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> c
    24:24:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> c
    24:24:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> K
    24:24:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> b
    24:24:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> c
    24:24:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> d
    24:24:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> b
    24:24:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> c
    24:24:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> c
    24:24:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> b
    24:24:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> d
    24:24:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> d
    24:24:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> j
    24:24:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> i
    24:24:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> k
    24:24:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> j
    24:24:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> l
    24:24:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> m
    24:24:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> n
    24:24:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> L
    24:24:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> k
    24:24:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> o
    24:24:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> l
    24:24:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> m
    47:47:void <clinit>() -> <clinit>
io.vertx.core.net.NetServerOptionsConverter -> io.vertx.core.h.l:
    30:48:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.NetServerOptions) -> a
    51:61:void toJson(io.vertx.core.net.NetServerOptions,io.vertx.core.json.JsonObject) -> a
io.vertx.core.net.NetSocket -> io.vertx.core.h.m:
    io.vertx.core.net.NetSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.net.NetSocket handler(io.vertx.core.Handler) -> handler
    io.vertx.core.net.NetSocket pause() -> pause
    io.vertx.core.net.NetSocket resume() -> resume
    io.vertx.core.net.NetSocket endHandler(io.vertx.core.Handler) -> endHandler
    io.vertx.core.net.NetSocket write(io.vertx.core.buffer.Buffer) -> write
    io.vertx.core.net.NetSocket closeHandler(io.vertx.core.Handler) -> closeHandler
    42:42:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    42:42:io.vertx.core.streams.ReadStream resume() -> resume
    42:42:io.vertx.core.streams.ReadStream pause() -> pause
    42:42:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    42:42:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.net.NetworkOptions -> io.vertx.core.h.n:
    int sendBufferSize -> a
    int receiveBufferSize -> b
    int trafficClass -> c
    boolean reuseAddress -> d
    boolean logActivity -> e
    boolean reusePort -> f
    65:72:void <init>() -> <init>
    79:86:void <init>(io.vertx.core.net.NetworkOptions) -> <init>
    94:96:void <init>(io.vertx.core.json.JsonObject) -> <init>
    104:106:io.vertx.core.json.JsonObject toJson() -> a
    115:115:int getSendBufferSize() -> F
    125:127:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> m
    136:136:int getReceiveBufferSize() -> G
    146:148:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> l
    155:155:boolean isReuseAddress() -> H
    164:165:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> o
    172:172:int getTrafficClass() -> I
    182:184:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> k
    191:191:boolean getLogActivity() -> J
    201:202:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> L
    209:209:boolean isReusePort() -> K
    221:222:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> n
    227:238:boolean equals(java.lang.Object) -> equals
    243:248:int hashCode() -> hashCode
io.vertx.core.net.NetworkOptionsConverter -> io.vertx.core.h.o:
    30:48:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.NetworkOptions) -> a
    51:57:void toJson(io.vertx.core.net.NetworkOptions,io.vertx.core.json.JsonObject) -> a
io.vertx.core.net.OpenSSLEngineOptions -> io.vertx.core.h.p:
    boolean sessionCacheEnabled -> a
    37:37:boolean isAlpnAvailable() -> a
    47:49:void <init>() -> <init>
    51:53:void <init>(io.vertx.core.json.JsonObject) -> <init>
    55:57:void <init>(io.vertx.core.net.OpenSSLEngineOptions) -> <init>
    66:67:io.vertx.core.net.OpenSSLEngineOptions setSessionCacheEnabled(boolean) -> a
    76:76:boolean isSessionCacheEnabled() -> b
    81:88:boolean equals(java.lang.Object) -> equals
    93:93:int hashCode() -> hashCode
    97:99:io.vertx.core.json.JsonObject toJson() -> d
    104:104:io.vertx.core.net.OpenSSLEngineOptions clone() -> e
    23:23:io.vertx.core.net.SSLEngineOptions clone() -> c
    23:23:java.lang.Object clone() -> clone
io.vertx.core.net.OpenSSLEngineOptionsConverter -> io.vertx.core.h.q:
    30:33:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.OpenSSLEngineOptions) -> a
    36:37:void toJson(io.vertx.core.net.OpenSSLEngineOptions,io.vertx.core.json.JsonObject) -> a
io.vertx.core.net.PemKeyCertOptions -> io.vertx.core.h.r:
    java.util.List keyPaths -> a
    java.util.List keyValues -> b
    java.util.List certPaths -> c
    java.util.List certValues -> d
    102:104:void <init>() -> <init>
    107:111:void init() -> h
    119:124:void <init>(io.vertx.core.net.PemKeyCertOptions) -> <init>
    132:135:void <init>(io.vertx.core.json.JsonObject) -> <init>
    143:145:io.vertx.core.json.JsonObject toJson() -> a
    165:169:io.vertx.core.net.PemKeyCertOptions setKeyPath(java.lang.String) -> a
    178:178:java.util.List getKeyPaths() -> b
    188:190:io.vertx.core.net.PemKeyCertOptions setKeyPaths(java.util.List) -> a
    223:227:io.vertx.core.net.PemKeyCertOptions setKeyValue(io.vertx.core.buffer.Buffer) -> a
    236:236:java.util.List getKeyValues() -> c
    246:248:io.vertx.core.net.PemKeyCertOptions setKeyValues(java.util.List) -> b
    281:285:io.vertx.core.net.PemKeyCertOptions setCertPath(java.lang.String) -> b
    294:294:java.util.List getCertPaths() -> d
    304:306:io.vertx.core.net.PemKeyCertOptions setCertPaths(java.util.List) -> c
    339:343:io.vertx.core.net.PemKeyCertOptions setCertValue(io.vertx.core.buffer.Buffer) -> b
    352:352:java.util.List getCertValues() -> e
    362:364:io.vertx.core.net.PemKeyCertOptions setCertValues(java.util.List) -> d
    382:403:boolean equals(java.lang.Object) -> equals
    408:414:int hashCode() -> hashCode
    419:419:io.vertx.core.net.PemKeyCertOptions clone() -> g
    90:90:java.lang.Object clone() -> clone
    90:90:io.vertx.core.net.KeyCertOptions clone() -> f
io.vertx.core.net.PemKeyCertOptionsConverter -> io.vertx.core.h.s:
    30:74:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.PemKeyCertOptions) -> a
    77:97:void toJson(io.vertx.core.net.PemKeyCertOptions,io.vertx.core.json.JsonObject) -> a
    94:94:void lambda$toJson$7(io.vertx.core.json.JsonArray,io.vertx.core.buffer.Buffer) -> a
    89:89:void lambda$toJson$6(io.vertx.core.json.JsonArray,java.lang.String) -> a
    84:84:void lambda$toJson$5(io.vertx.core.json.JsonArray,io.vertx.core.buffer.Buffer) -> b
    79:79:void lambda$toJson$4(io.vertx.core.json.JsonArray,java.lang.String) -> b
    69:71:void lambda$fromJson$3(java.util.ArrayList,java.lang.Object) -> a
    58:60:void lambda$fromJson$2(java.util.ArrayList,java.lang.Object) -> b
    47:49:void lambda$fromJson$1(java.util.ArrayList,java.lang.Object) -> c
    36:38:void lambda$fromJson$0(java.util.ArrayList,java.lang.Object) -> d
io.vertx.core.net.PemTrustOptions -> io.vertx.core.h.t:
    java.util.ArrayList certPaths -> a
    java.util.ArrayList certValues -> b
    69:72:void <init>() -> <init>
    80:83:void <init>(io.vertx.core.net.PemTrustOptions) -> <init>
    91:93:void <init>(io.vertx.core.json.JsonObject) -> <init>
    101:103:io.vertx.core.json.JsonObject toJson() -> a
    110:110:java.util.List getCertPaths() -> b
    121:124:io.vertx.core.net.PemTrustOptions addCertPath(java.lang.String) -> a
    132:132:java.util.List getCertValues() -> c
    143:145:io.vertx.core.net.PemTrustOptions addCertValue(io.vertx.core.buffer.Buffer) -> a
    150:150:io.vertx.core.net.PemTrustOptions clone() -> d
    155:161:boolean equals(java.lang.Object) -> equals
    166:168:int hashCode() -> hashCode
    59:59:java.lang.Object clone() -> clone
    59:59:io.vertx.core.net.TrustOptions clone() -> g
io.vertx.core.net.PemTrustOptionsConverter -> io.vertx.core.h.u:
    30:42:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.PemTrustOptions) -> a
    45:55:void toJson(io.vertx.core.net.PemTrustOptions,io.vertx.core.json.JsonObject) -> a
    52:52:void lambda$toJson$3(io.vertx.core.json.JsonArray,io.vertx.core.buffer.Buffer) -> a
    47:47:void lambda$toJson$2(io.vertx.core.json.JsonArray,java.lang.String) -> a
    38:40:void lambda$fromJson$1(io.vertx.core.net.PemTrustOptions,java.lang.Object) -> a
    32:34:void lambda$fromJson$0(io.vertx.core.net.PemTrustOptions,java.lang.Object) -> b
io.vertx.core.net.PfxOptions -> io.vertx.core.h.v:
    java.lang.String password -> a
    java.lang.String path -> b
    io.vertx.core.buffer.Buffer value -> c
    53:54:void <init>() -> <init>
    62:66:void <init>(io.vertx.core.net.PfxOptions) -> <init>
    74:76:void <init>(io.vertx.core.json.JsonObject) -> <init>
    84:86:io.vertx.core.json.JsonObject toJson() -> a
    95:95:java.lang.String getPassword() -> b
    105:106:io.vertx.core.net.PfxOptions setPassword(java.lang.String) -> a
    115:115:java.lang.String getPath() -> c
    125:126:io.vertx.core.net.PfxOptions setPath(java.lang.String) -> b
    135:135:io.vertx.core.buffer.Buffer getValue() -> d
    145:146:io.vertx.core.net.PfxOptions setValue(io.vertx.core.buffer.Buffer) -> a
    151:169:boolean equals(java.lang.Object) -> equals
    174:178:int hashCode() -> hashCode
    183:183:io.vertx.core.net.PfxOptions clone() -> e
    42:42:java.lang.Object clone() -> clone
    42:42:io.vertx.core.net.KeyCertOptions clone() -> f
    42:42:io.vertx.core.net.TrustOptions clone() -> g
io.vertx.core.net.PfxOptionsConverter -> io.vertx.core.h.w:
    30:39:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.PfxOptions) -> a
    42:51:void toJson(io.vertx.core.net.PfxOptions,io.vertx.core.json.JsonObject) -> a
io.vertx.core.net.ProxyOptions -> io.vertx.core.h.x:
    io.vertx.core.net.ProxyType DEFAULT_TYPE -> a
    java.lang.String host -> b
    int port -> c
    java.lang.String username -> d
    java.lang.String password -> e
    io.vertx.core.net.ProxyType type -> f
    53:57:void <init>() -> <init>
    64:70:void <init>(io.vertx.core.net.ProxyOptions) -> <init>
    78:80:void <init>(io.vertx.core.json.JsonObject) -> <init>
    88:90:io.vertx.core.json.JsonObject toJson() -> a
    99:99:java.lang.String getHost() -> b
    109:111:io.vertx.core.net.ProxyOptions setHost(java.lang.String) -> a
    120:120:int getPort() -> c
    130:134:io.vertx.core.net.ProxyOptions setPort(int) -> a
    143:143:java.lang.String getUsername() -> d
    153:154:io.vertx.core.net.ProxyOptions setUsername(java.lang.String) -> b
    163:163:java.lang.String getPassword() -> e
    173:174:io.vertx.core.net.ProxyOptions setPassword(java.lang.String) -> c
    185:185:io.vertx.core.net.ProxyType getType() -> f
    197:199:io.vertx.core.net.ProxyOptions setType(io.vertx.core.net.ProxyType) -> a
    204:216:boolean equals(java.lang.Object) -> equals
    221:227:int hashCode() -> hashCode
    30:30:void <clinit>() -> <clinit>
io.vertx.core.net.ProxyOptionsConverter -> io.vertx.core.h.y:
    30:45:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.ProxyOptions) -> a
    48:61:void toJson(io.vertx.core.net.ProxyOptions,io.vertx.core.json.JsonObject) -> a
io.vertx.core.net.ProxyType -> io.vertx.core.h.z:
    io.vertx.core.net.ProxyType HTTP -> a
    io.vertx.core.net.ProxyType SOCKS4 -> b
    io.vertx.core.net.ProxyType SOCKS5 -> c
    io.vertx.core.net.ProxyType[] $VALUES -> d
    21:21:io.vertx.core.net.ProxyType[] values() -> values
    21:21:io.vertx.core.net.ProxyType valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    21:34:void <clinit>() -> <clinit>
io.vertx.core.net.SSLEngineOptions -> io.vertx.core.h.A:
    19:19:void <init>() -> <init>
    io.vertx.core.net.SSLEngineOptions clone() -> c
    19:19:java.lang.Object clone() -> clone
io.vertx.core.net.SocketAddress -> io.vertx.core.h.B:
    37:37:io.vertx.core.net.SocketAddress inetSocketAddress(int,java.lang.String) -> a
    java.lang.String host() -> a
    int port() -> b
    java.lang.String path() -> c
io.vertx.core.net.TCPSSLOptions -> io.vertx.core.h.C:
    io.vertx.core.net.SSLEngineOptions DEFAULT_SSL_ENGINE -> c
    java.util.List DEFAULT_ENABLED_SECURE_TRANSPORT_PROTOCOLS -> d
    boolean tcpNoDelay -> a
    boolean tcpKeepAlive -> b
    int soLinger -> e
    boolean usePooledBuffers -> f
    int idleTimeout -> g
    boolean ssl -> h
    io.vertx.core.net.KeyCertOptions keyCertOptions -> i
    io.vertx.core.net.TrustOptions trustOptions -> j
    java.util.Set enabledCipherSuites -> k
    java.util.ArrayList crlPaths -> l
    java.util.ArrayList crlValues -> m
    boolean useAlpn -> n
    io.vertx.core.net.SSLEngineOptions sslEngineOptions -> o
    java.util.Set enabledSecureTransportProtocols -> p
    boolean tcpFastOpen -> q
    boolean tcpCork -> r
    boolean tcpQuickAck -> s
    115:117:void <init>() -> <init>
    125:143:void <init>(io.vertx.core.net.TCPSSLOptions) -> <init>
    151:154:void <init>(io.vertx.core.json.JsonObject) -> <init>
    162:164:io.vertx.core.json.JsonObject toJson() -> a
    168:183:void init() -> b
    189:189:boolean isTcpNoDelay() -> L
    199:200:io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean) -> m
    207:207:boolean isTcpKeepAlive() -> M
    217:218:io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean) -> l
    226:226:int getSoLinger() -> N
    236:240:io.vertx.core.net.TCPSSLOptions setSoLinger(int) -> j
    248:248:boolean isUsePooledBuffers() -> O
    258:259:io.vertx.core.net.TCPSSLOptions setUsePooledBuffers(boolean) -> k
    270:274:io.vertx.core.net.TCPSSLOptions setIdleTimeout(int) -> i
    281:281:int getIdleTimeout() -> P
    289:289:boolean isSsl() -> Q
    299:300:io.vertx.core.net.TCPSSLOptions setSsl(boolean) -> j
    308:308:io.vertx.core.net.KeyCertOptions getKeyCertOptions() -> R
    329:329:io.vertx.core.net.JksOptions getKeyStoreOptions() -> S
    338:339:io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions) -> d
    348:348:io.vertx.core.net.PfxOptions getPfxKeyCertOptions() -> T
    357:358:io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions) -> d
    367:367:io.vertx.core.net.PemKeyCertOptions getPemKeyCertOptions() -> U
    376:377:io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions) -> b
    384:384:io.vertx.core.net.TrustOptions getTrustOptions() -> V
    403:403:io.vertx.core.net.JksOptions getTrustStoreOptions() -> W
    412:413:io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions) -> c
    422:422:io.vertx.core.net.PfxOptions getPfxTrustOptions() -> X
    431:432:io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions) -> c
    441:441:io.vertx.core.net.PemTrustOptions getPemTrustOptions() -> Y
    450:451:io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions) -> b
    461:462:io.vertx.core.net.TCPSSLOptions addEnabledCipherSuite(java.lang.String) -> d
    470:470:java.util.Set getEnabledCipherSuites() -> Z
    478:478:java.util.List getCrlPaths() -> aa
    488:490:io.vertx.core.net.TCPSSLOptions addCrlPath(java.lang.String) -> c
    499:499:java.util.List getCrlValues() -> ab
    510:512:io.vertx.core.net.TCPSSLOptions addCrlValue(io.vertx.core.buffer.Buffer) -> b
    519:519:boolean isUseAlpn() -> ac
    528:529:io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean) -> K
    536:536:io.vertx.core.net.SSLEngineOptions getSslEngineOptions() -> ad
    546:547:io.vertx.core.net.TCPSSLOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions) -> c
    551:551:io.vertx.core.net.JdkSSLEngineOptions getJdkSslEngineOptions() -> ae
    555:555:io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions) -> c
    559:559:io.vertx.core.net.OpenSSLEngineOptions getOpenSslEngineOptions() -> af
    563:563:io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions) -> c
    573:574:io.vertx.core.net.TCPSSLOptions setEnabledSecureTransportProtocols(java.util.Set) -> a
    603:603:boolean isTcpFastOpen() -> ag
    612:613:io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean) -> J
    620:620:boolean isTcpCork() -> ah
    629:630:io.vertx.core.net.TCPSSLOptions setTcpCork(boolean) -> I
    637:637:boolean isTcpQuickAck() -> ai
    646:647:io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean) -> H
    655:655:java.util.Set getEnabledSecureTransportProtocols() -> aj
    660:660:io.vertx.core.net.TCPSSLOptions setLogActivity(boolean) -> G
    665:665:io.vertx.core.net.TCPSSLOptions setSendBufferSize(int) -> h
    670:670:io.vertx.core.net.TCPSSLOptions setReceiveBufferSize(int) -> g
    675:675:io.vertx.core.net.TCPSSLOptions setReuseAddress(boolean) -> i
    680:680:io.vertx.core.net.TCPSSLOptions setTrafficClass(int) -> f
    685:685:io.vertx.core.net.TCPSSLOptions setReusePort(boolean) -> h
    690:715:boolean equals(java.lang.Object) -> equals
    720:739:int hashCode() -> hashCode
    26:26:io.vertx.core.net.NetworkOptions setReusePort(boolean) -> n
    26:26:io.vertx.core.net.NetworkOptions setLogActivity(boolean) -> L
    26:26:io.vertx.core.net.NetworkOptions setTrafficClass(int) -> k
    26:26:io.vertx.core.net.NetworkOptions setReuseAddress(boolean) -> o
    26:26:io.vertx.core.net.NetworkOptions setReceiveBufferSize(int) -> l
    26:26:io.vertx.core.net.NetworkOptions setSendBufferSize(int) -> m
    67:76:void <clinit>() -> <clinit>
io.vertx.core.net.TCPSSLOptionsConverter -> io.vertx.core.h.D:
    30:110:void fromJson(io.vertx.core.json.JsonObject,io.vertx.core.net.TCPSSLOptions) -> a
    113:167:void toJson(io.vertx.core.net.TCPSSLOptions,io.vertx.core.json.JsonObject) -> a
    130:130:void lambda$toJson$7(io.vertx.core.json.JsonArray,java.lang.String) -> a
    125:125:void lambda$toJson$6(io.vertx.core.json.JsonArray,java.lang.String) -> b
    120:120:void lambda$toJson$5(io.vertx.core.json.JsonArray,io.vertx.core.buffer.Buffer) -> a
    115:115:void lambda$toJson$4(io.vertx.core.json.JsonArray,java.lang.String) -> c
    51:53:void lambda$fromJson$3(java.util.LinkedHashSet,java.lang.Object) -> a
    44:46:void lambda$fromJson$2(io.vertx.core.net.TCPSSLOptions,java.lang.Object) -> a
    38:40:void lambda$fromJson$1(io.vertx.core.net.TCPSSLOptions,java.lang.Object) -> b
    32:34:void lambda$fromJson$0(io.vertx.core.net.TCPSSLOptions,java.lang.Object) -> c
io.vertx.core.net.TrustOptions -> io.vertx.core.h.E:
    io.vertx.core.net.TrustOptions clone() -> g
    43:43:javax.net.ssl.TrustManagerFactory getTrustManagerFactory(io.vertx.core.Vertx) -> a_
    59:60:java.util.function.Function trustManagerMapper(io.vertx.core.Vertx) -> b_
io.vertx.core.net.impl.AsyncResolveConnectHelper -> io.vertx.core.h.a.a:
    java.util.List handlers -> a
    io.netty.channel.ChannelFuture future -> b
    io.vertx.core.AsyncResult result -> c
    30:32:void <init>() -> <init>
    37:46:void addListener(io.vertx.core.Handler) -> a
    49:58:void handle(io.netty.channel.ChannelFuture,io.vertx.core.AsyncResult) -> a
    61:64:void checkPort(int) -> a
    68:99:io.vertx.core.net.impl.AsyncResolveConnectHelper doBind(io.vertx.core.impl.VertxInternal,io.vertx.core.net.SocketAddress,io.netty.bootstrap.ServerBootstrap) -> a
    83:97:void lambda$doBind$3(io.vertx.core.net.SocketAddress,io.netty.bootstrap.ServerBootstrap,io.vertx.core.net.impl.AsyncResolveConnectHelper,io.vertx.core.AsyncResult) -> a
    88:93:void lambda$null$2(io.vertx.core.net.impl.AsyncResolveConnectHelper,io.netty.channel.ChannelFuture,io.netty.util.concurrent.Future) -> a
    74:79:void lambda$doBind$1(io.vertx.core.net.impl.AsyncResolveConnectHelper,io.netty.channel.ChannelFuture,io.netty.util.concurrent.Future) -> b
    39:39:void lambda$addListener$0(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> a
io.vertx.core.net.impl.ChannelProvider -> io.vertx.core.h.a.b:
    io.vertx.core.net.impl.ChannelProvider INSTANCE -> a
    37:38:void <init>() -> <init>
    42:57:void connect(io.vertx.core.impl.VertxInternal,io.netty.bootstrap.Bootstrap,io.vertx.core.net.ProxyOptions,io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.Handler) -> a
    51:56:void lambda$connect$0(io.vertx.core.Handler,io.netty.channel.ChannelFuture,io.netty.util.concurrent.Future) -> a
    35:35:void <clinit>() -> <clinit>
io.vertx.core.net.impl.ChannelProvider$1 -> io.vertx.core.h.a.c:
    io.vertx.core.Handler val$channelInitializer -> a
    io.vertx.core.net.impl.ChannelProvider this$0 -> b
    43:43:void <init>(io.vertx.core.net.impl.ChannelProvider,io.vertx.core.Handler) -> <init>
    46:47:void initChannel(io.netty.channel.Channel) -> initChannel
io.vertx.core.net.impl.ConnectionBase -> io.vertx.core.h.a.d:
    io.vertx.core.logging.Logger log -> log
    io.vertx.core.impl.VertxInternal vertx -> vertx
    io.netty.channel.ChannelHandlerContext chctx -> chctx
    io.vertx.core.impl.ContextImpl context -> context
    io.vertx.core.Handler exceptionHandler -> exceptionHandler
    io.vertx.core.Handler closeHandler -> closeHandler
    boolean read -> read
    boolean needsFlush -> needsFlush
    int writeInProgress -> writeInProgress
    java.lang.Object metric -> metric
    boolean $assertionsDisabled -> $assertionsDisabled
    57:61:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.ChannelHandlerContext,io.vertx.core.impl.ContextImpl) -> <init>
    70:70:java.lang.Object encode(java.lang.Object) -> encode
    74:76:void startRead() -> startRead
    79:86:void endReadAndFlush() -> endReadAndFlush
    89:97:void write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    104:109:void writeToChannel(java.lang.Object,io.netty.channel.ChannelPromise) -> writeToChannel
    112:119:void queueForWrite(java.lang.Object,io.netty.channel.ChannelPromise) -> queueForWrite
    122:123:void writeToChannel(java.lang.Object) -> writeToChannel
    127:127:boolean isNotWritable() -> isNotWritable
    135:137:void close() -> close
    140:141:io.vertx.core.net.impl.ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    145:146:io.vertx.core.net.impl.ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    150:150:io.vertx.core.Handler exceptionHandler() -> exceptionHandler
    154:155:void doPause() -> doPause
    158:159:void doResume() -> doResume
    162:164:void doSetWriteQueueMaxSize(int) -> doSetWriteQueueMaxSize
    168:171:void checkContext() -> checkContext
    177:177:io.netty.channel.Channel channel() -> channel
    181:181:io.vertx.core.impl.ContextImpl getContext() -> getContext
    185:186:void metric(java.lang.Object) -> metric
    189:189:java.lang.Object metric() -> metric
    io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    195:204:void handleException(java.lang.Throwable) -> handleException
    207:214:void handleClosed() -> handleClosed
    void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    219:232:void addFuture(io.vertx.core.Handler,io.netty.channel.ChannelFuture) -> addFuture
    235:235:boolean supportsFileRegion() -> supportsFileRegion
    239:243:void reportBytesRead(long) -> reportBytesRead
    246:250:void reportBytesWritten(long) -> reportBytesWritten
    253:253:boolean isSSL() -> isSSL
    258:272:io.netty.channel.ChannelFuture sendFile(java.io.RandomAccessFile,long,long) -> sendFile
    276:276:boolean isSsl() -> isSsl
    280:286:javax.net.ssl.SSLSession sslSession() -> sslSession
    291:297:javax.security.cert.X509Certificate[] peerCertificateChain() -> peerCertificateChain
    302:305:java.lang.String indicatedServerName() -> indicatedServerName
    310:310:io.netty.channel.ChannelPromise channelFuture() -> channelFuture
    314:317:java.lang.String remoteName() -> remoteName
    321:323:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    327:329:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    268:268:void lambda$sendFile$3(java.io.RandomAccessFile,io.netty.util.concurrent.Future) -> lambda$sendFile$3
    220:220:void lambda$addFuture$2(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$addFuture$2
    221:230:void lambda$null$1(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> lambda$null$1
    114:118:void lambda$queueForWrite$0(java.lang.Object,io.netty.channel.ChannelPromise,java.lang.Void) -> lambda$queueForWrite$0
    43:45:void <clinit>() -> <clinit>
io.vertx.core.net.impl.HandlerHolder -> io.vertx.core.h.a.e:
    io.vertx.core.impl.ContextImpl context -> a
    java.lang.Object handler -> b
    23:26:void <init>(io.vertx.core.impl.ContextImpl,java.lang.Object) -> <init>
    30:38:boolean equals(java.lang.Object) -> equals
    43:45:int hashCode() -> hashCode
io.vertx.core.net.impl.HandlerManager -> io.vertx.core.h.a.f:
    io.vertx.core.logging.Logger log -> a
    io.vertx.core.net.impl.VertxEventLoopGroup availableWorkers -> b
    java.util.concurrent.ConcurrentMap handlerMap -> c
    boolean hasHandlers -> d
    34:42:void <init>(io.vertx.core.net.impl.VertxEventLoopGroup) -> <init>
    45:45:boolean hasHandlers() -> a
    49:50:io.vertx.core.net.impl.HandlerHolder chooseHandler(io.netty.channel.EventLoop) -> a
    54:63:void addHandler(java.lang.Object,io.vertx.core.impl.ContextImpl) -> a
    66:79:void removeHandler(java.lang.Object,io.vertx.core.impl.ContextImpl) -> b
    31:31:void <clinit>() -> <clinit>
io.vertx.core.net.impl.HandlerManager$1 -> io.vertx.core.h.a.g:
io.vertx.core.net.impl.HandlerManager$Handlers -> io.vertx.core.h.a.h:
    int pos -> a
    java.util.List list -> b
    81:83:void <init>() -> <init>
    85:88:io.vertx.core.net.impl.HandlerHolder chooseHandler() -> a
    92:93:void addHandler(io.vertx.core.net.impl.HandlerHolder) -> a
    96:100:boolean removeHandler(io.vertx.core.net.impl.HandlerHolder) -> b
    105:105:boolean isEmpty() -> b
    109:112:void checkPos() -> c
    81:81:void <init>(io.vertx.core.net.impl.HandlerManager$1) -> <init>
io.vertx.core.net.impl.KeyStoreHelper -> io.vertx.core.h.a.i:
    java.util.regex.Pattern BEGIN_PATTERN -> a
    java.util.regex.Pattern END_PATTERN -> b
    java.lang.String password -> c
    java.security.KeyStore store -> d
    java.util.Map wildcardMgrMap -> e
    java.util.Map mgrMap -> f
    java.util.Map trustMgrMap -> g
    73:109:io.vertx.core.net.impl.KeyStoreHelper create(io.vertx.core.impl.VertxInternal,io.vertx.core.net.KeyCertOptions) -> a
    114:126:io.vertx.core.net.impl.KeyStoreHelper create(io.vertx.core.impl.VertxInternal,io.vertx.core.net.TrustOptions) -> a
    132:218:void <init>(java.security.KeyStore,java.lang.String) -> <init>
    221:223:javax.net.ssl.KeyManagerFactory getKeyMgrFactory() -> a
    227:235:javax.net.ssl.X509KeyManager getKeyMgr(java.lang.String) -> a
    243:244:javax.net.ssl.TrustManager[] getTrustMgr(java.lang.String) -> b
    248:250:javax.net.ssl.TrustManagerFactory getTrustMgrFactory(io.vertx.core.impl.VertxInternal) -> a
    265:278:java.security.KeyStore loadJKSOrPKCS12(java.lang.String,java.lang.String,java.util.function.Supplier) -> a
    282:297:java.security.KeyStore loadKeyCert(java.util.List,java.util.List) -> a
    301:322:java.security.PrivateKey loadPrivateKey(io.vertx.core.buffer.Buffer) -> a
    326:335:java.security.KeyStore loadCA(java.util.stream.Stream) -> a
    339:367:java.util.List loadPems(io.vertx.core.buffer.Buffer,java.util.function.BiFunction) -> a
    371:390:java.security.cert.X509Certificate[] loadCerts(io.vertx.core.buffer.Buffer) -> b
    377:384:java.util.Collection lambda$loadCerts$5(java.security.cert.CertificateFactory,java.lang.String,byte[]) -> a
    307:316:java.util.Collection lambda$loadPrivateKey$4(java.security.KeyFactory,java.lang.String,byte[]) -> a
    178:178:java.security.cert.X509Certificate lambda$new$3(java.security.cert.Certificate) -> a
    121:121:java.lang.String lambda$create$2(io.vertx.core.impl.VertxInternal,java.lang.String) -> a
    88:88:io.vertx.core.buffer.Buffer lambda$create$1(io.vertx.core.impl.VertxInternal,io.vertx.core.net.PfxOptions) -> a
    77:77:io.vertx.core.buffer.Buffer lambda$create$0(io.vertx.core.impl.VertxInternal,io.vertx.core.net.JksOptions) -> a
    69:70:void <clinit>() -> <clinit>
io.vertx.core.net.impl.KeyStoreHelper$1 -> io.vertx.core.h.a.j:
    java.util.List val$chain -> a
    java.security.PrivateKey val$key -> b
    io.vertx.core.net.impl.KeyStoreHelper this$0 -> c
    180:180:void <init>(io.vertx.core.net.impl.KeyStoreHelper,java.util.List,java.security.PrivateKey) -> <init>
    183:183:java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[]) -> getClientAliases
    187:187:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket) -> chooseClientAlias
    191:191:java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[]) -> getServerAliases
    195:195:java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket) -> chooseServerAlias
    199:199:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String) -> getCertificateChain
    203:203:java.security.PrivateKey getPrivateKey(java.lang.String) -> getPrivateKey
io.vertx.core.net.impl.NetClientImpl -> io.vertx.core.h.a.k:
    io.vertx.core.logging.Logger log -> d
    int idleTimeout -> a
    boolean logEnabled -> b
    io.vertx.core.impl.VertxInternal vertx -> e
    io.vertx.core.net.NetClientOptions options -> f
    io.vertx.core.net.impl.SSLHelper sslHelper -> c
    java.util.Map socketMap -> g
    io.vertx.core.Closeable closeHook -> h
    io.vertx.core.impl.ContextImpl creatingContext -> i
    io.vertx.core.spi.metrics.TCPMetrics metrics -> j
    boolean closed -> k
    58:91:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.NetClientOptions,boolean) -> <init>
    94:104:void initChannel(io.netty.channel.ChannelPipeline) -> a
    107:108:io.vertx.core.net.NetClient connect(int,java.lang.String,io.vertx.core.Handler) -> a
    113:114:io.vertx.core.net.NetClient connect(int,java.lang.String,java.lang.String,io.vertx.core.Handler) -> a
    118:130:void close() -> a
    143:146:void checkClosed() -> b
    149:150:void applyConnectionOptions(io.netty.bootstrap.Bootstrap) -> a
    165:166:void doConnect(io.vertx.core.net.SocketAddress,java.lang.String,io.vertx.core.Handler) -> a
    170:231:void doConnect(io.vertx.core.net.SocketAddress,java.lang.String,io.vertx.core.Handler,int) -> a
    236:258:void connected(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.net.SocketAddress) -> a
    261:265:void failed(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,java.lang.Throwable,io.vertx.core.Handler) -> a
    268:269:void doFailed(io.vertx.core.Handler,java.lang.Throwable) -> a
    276:278:void finalize() -> finalize
    264:264:void lambda$failed$12(io.vertx.core.Handler,java.lang.Throwable) -> b
    255:256:void lambda$connected$11(io.netty.channel.Channel,io.vertx.core.net.impl.NetSocketImpl) -> a
    246:253:void lambda$connected$10(io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.net.impl.NetSocketImpl) -> a
    248:252:void lambda$null$9(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler) -> a
    239:239:io.vertx.core.net.impl.NetSocketImpl lambda$connected$8(io.vertx.core.net.SocketAddress,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext) -> a
    195:228:void lambda$doConnect$7(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.vertx.core.net.SocketAddress,int,java.lang.String,io.vertx.core.AsyncResult) -> a
    218:223:void lambda$null$6(io.vertx.core.net.SocketAddress,java.lang.String,io.vertx.core.Handler,int) -> b
    221:221:void lambda$null$5(io.vertx.core.net.SocketAddress,java.lang.String,io.vertx.core.Handler,int,java.lang.Long) -> a
    205:210:void lambda$null$4(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.net.SocketAddress,io.netty.util.concurrent.Future) -> a
    188:192:void lambda$doConnect$3(io.vertx.core.net.SocketAddress,java.lang.String,io.netty.channel.Channel) -> a
    113:113:void lambda$connect$2(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> a
    113:113:io.vertx.core.net.NetSocket lambda$null$1(io.vertx.core.net.NetSocket) -> a
    73:75:void lambda$new$0(io.vertx.core.Handler) -> a
    51:51:void <clinit>() -> <clinit>
io.vertx.core.net.impl.NetClientImpl$1 -> io.vertx.core.h.a.l:
    io.vertx.core.net.impl.NetClientImpl this$0 -> a
    239:239:void <init>(io.vertx.core.net.impl.NetClientImpl,java.util.function.Function) -> <init>
    242:243:void handleMessage(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> a
    239:239:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
io.vertx.core.net.impl.NetServerImpl -> io.vertx.core.h.a.m:
    io.vertx.core.logging.Logger log -> f
    io.vertx.core.impl.VertxInternal vertx -> a
    io.vertx.core.net.NetServerOptions options -> b
    io.vertx.core.impl.ContextImpl creatingContext -> c
    io.vertx.core.net.impl.SSLHelper sslHelper -> d
    boolean logEnabled -> e
    java.util.Map socketMap -> g
    io.vertx.core.net.impl.VertxEventLoopGroup availableWorkers -> h
    io.vertx.core.net.impl.HandlerManager handlerManager -> i
    io.vertx.core.net.impl.NetServerImpl$NetSocketStream connectStream -> j
    io.netty.channel.group.ChannelGroup serverChannelGroup -> k
    boolean paused -> l
    boolean listening -> m
    io.vertx.core.Handler registeredHandler -> n
    io.vertx.core.net.impl.ServerID id -> o
    io.vertx.core.net.impl.NetServerImpl actualServer -> p
    io.vertx.core.net.impl.AsyncResolveConnectHelper bindFuture -> q
    int actualPort -> r
    io.vertx.core.impl.ContextImpl listenContext -> s
    io.vertx.core.spi.metrics.TCPMetrics metrics -> t
    io.vertx.core.Handler handler -> u
    io.vertx.core.Handler endHandler -> v
    io.vertx.core.Handler exceptionHandler -> w
    66:96:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.NetServerOptions) -> <init>
    99:100:void pauseAccepting() -> b
    103:104:void resumeAccepting() -> c
    107:107:boolean isPaused() -> d
    111:111:boolean isListening() -> e
    121:125:io.vertx.core.net.NetServer connectHandler(io.vertx.core.Handler) -> a
    138:148:void initChannel(io.netty.channel.ChannelPipeline) -> a
    151:286:void listen(io.vertx.core.Handler,io.vertx.core.net.SocketAddress,io.vertx.core.Handler) -> a
    290:291:void close() -> f
    315:320:io.vertx.core.net.NetServer listen(io.vertx.core.net.SocketAddress,io.vertx.core.Handler) -> a
    331:331:io.vertx.core.net.NetServer listen(int,java.lang.String,io.vertx.core.Handler) -> a
    336:336:io.vertx.core.net.NetServer listen(io.vertx.core.Handler) -> b
    346:394:void close(io.vertx.core.Handler) -> close
    397:397:int actualPort() -> a
    411:434:void actualClose(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler) -> a
    437:459:void connected(io.vertx.core.net.impl.HandlerHolder,io.netty.channel.Channel) -> a
    462:466:void executeCloseDone(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Exception) -> a
    474:475:void applyConnectionOptions(io.netty.bootstrap.ServerBootstrap) -> a
    482:484:void finalize() -> finalize
    464:464:void lambda$executeCloseDone$12(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void) -> a
    454:458:void lambda$connected$11(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder) -> a
    450:450:void lambda$connected$10(io.netty.channel.Channel,io.vertx.core.net.impl.NetSocketImpl) -> a
    449:449:void lambda$connected$9(io.netty.channel.Channel,io.vertx.core.net.impl.NetSocketImpl) -> b
    443:443:io.vertx.core.net.impl.NetSocketImpl lambda$connected$8(io.vertx.core.net.impl.HandlerHolder,io.netty.channel.ChannelHandlerContext) -> a
    428:432:void lambda$actualClose$7(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.channel.group.ChannelGroupFuture,io.netty.util.concurrent.Future) -> a
    390:391:void lambda$close$6(io.vertx.core.Handler,java.lang.Void) -> a
    354:360:void lambda$close$5(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> a
    316:319:void lambda$listen$4(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> a
    267:284:void lambda$listen$3(io.vertx.core.Handler,io.vertx.core.AsyncResult) -> b
    278:278:void lambda$null$2(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void) -> a
    244:244:void lambda$listen$1(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void) -> a
    222:239:void lambda$listen$0(java.lang.String,io.vertx.core.AsyncResult) -> a
    57:57:io.vertx.core.net.impl.HandlerManager access$100(io.vertx.core.net.impl.NetServerImpl) -> a
    57:57:void access$200(io.vertx.core.net.impl.NetServerImpl,io.vertx.core.net.impl.HandlerHolder,io.netty.channel.Channel) -> a
    57:57:io.vertx.core.logging.Logger access$300() -> g
    57:57:io.vertx.core.Handler access$402(io.vertx.core.net.impl.NetServerImpl,io.vertx.core.Handler) -> a
    59:59:void <clinit>() -> <clinit>
io.vertx.core.net.impl.NetServerImpl$1 -> io.vertx.core.h.a.n:
    io.vertx.core.net.impl.NetServerImpl this$0 -> a
    174:174:void <init>(io.vertx.core.net.impl.NetServerImpl) -> <init>
    177:212:void initChannel(io.netty.channel.Channel) -> initChannel
    195:207:void lambda$initChannel$1(io.vertx.core.net.impl.HandlerHolder,io.netty.channel.Channel,io.netty.util.concurrent.Future) -> a
    201:202:void lambda$null$0(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> a
io.vertx.core.net.impl.NetServerImpl$2 -> io.vertx.core.h.a.o:
    io.vertx.core.net.impl.NetServerImpl this$0 -> a
    443:443:void <init>(io.vertx.core.net.impl.NetServerImpl,java.util.function.Function) -> <init>
    446:447:void handleMessage(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> a
    443:443:void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
io.vertx.core.net.impl.NetServerImpl$Handlers -> io.vertx.core.h.a.p:
    io.vertx.core.Handler connectionHandler -> a
    io.vertx.core.Handler exceptionHandler -> b
    529:532:void <init>(io.vertx.core.Handler,io.vertx.core.Handler) -> <init>
    534:542:boolean equals(java.lang.Object) -> equals
    545:552:int hashCode() -> hashCode
io.vertx.core.net.impl.NetServerImpl$NetSocketStream -> io.vertx.core.h.a.q:
    io.vertx.core.net.impl.NetServerImpl this$0 -> a
    491:491:void <init>(io.vertx.core.net.impl.NetServerImpl) -> <init>
    495:496:io.vertx.core.net.impl.NetServerImpl$NetSocketStream handler(io.vertx.core.Handler) -> a
    501:502:io.vertx.core.net.impl.NetServerImpl$NetSocketStream pause() -> a
    507:508:io.vertx.core.net.impl.NetServerImpl$NetSocketStream resume() -> b
    513:516:io.vertx.core.net.impl.NetServerImpl$NetSocketStream endHandler(io.vertx.core.Handler) -> b
    522:522:io.vertx.core.net.impl.NetServerImpl$NetSocketStream exceptionHandler(io.vertx.core.Handler) -> c
    491:491:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    491:491:io.vertx.core.streams.ReadStream resume() -> resume
    491:491:io.vertx.core.streams.ReadStream pause() -> pause
    491:491:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    491:491:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    491:491:void <init>(io.vertx.core.net.impl.NetServerImpl,io.vertx.core.net.impl.NetServerImpl$1) -> <init>
io.vertx.core.net.impl.NetSocketImpl -> io.vertx.core.h.a.r:
    io.vertx.core.Handler NULL_MSG_HANDLER -> a
    io.vertx.core.logging.Logger log -> b
    java.lang.String writeHandlerID -> c
    io.vertx.core.eventbus.MessageConsumer registration -> d
    io.vertx.core.net.impl.SSLHelper helper -> e
    io.vertx.core.net.SocketAddress remoteAddress -> f
    io.vertx.core.spi.metrics.TCPMetrics metrics -> g
    io.vertx.core.Handler messageHandler -> h
    io.vertx.core.Handler endHandler -> i
    io.vertx.core.Handler drainHandler -> j
    io.vertx.core.buffer.Buffer pendingData -> k
    boolean paused -> l
    80:81:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.ChannelHandlerContext,io.vertx.core.impl.ContextImpl,io.vertx.core.net.impl.SSLHelper,io.vertx.core.spi.metrics.TCPMetrics) -> <init>
    72:92:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.ChannelHandlerContext,io.vertx.core.net.SocketAddress,io.vertx.core.impl.ContextImpl,io.vertx.core.net.impl.SSLHelper,io.vertx.core.spi.metrics.TCPMetrics) -> <init>
    96:96:io.netty.channel.ChannelHandlerContext channelHandlerContext() -> a
    101:101:io.vertx.core.spi.metrics.TCPMetrics metrics() -> b
    134:136:io.vertx.core.net.NetSocket write(io.vertx.core.buffer.Buffer) -> write
    157:162:io.vertx.core.net.NetSocket handler(io.vertx.core.Handler) -> handler
    167:172:io.vertx.core.impl.NetSocketInternal messageHandler(io.vertx.core.Handler) -> a
    177:181:io.vertx.core.net.NetSocket pause() -> pause
    186:194:io.vertx.core.net.NetSocket resume() -> resume
    205:205:boolean writeQueueFull() -> c
    210:211:io.vertx.core.net.NetSocket endHandler(io.vertx.core.Handler) -> endHandler
    265:265:io.vertx.core.net.SocketAddress remoteAddress() -> remoteAddress
    269:269:io.vertx.core.net.SocketAddress localAddress() -> localAddress
    274:274:io.vertx.core.net.impl.NetSocketImpl exceptionHandler(io.vertx.core.Handler) -> b
    279:279:io.vertx.core.net.impl.NetSocketImpl closeHandler(io.vertx.core.Handler) -> c
    285:287:void close() -> close
    327:329:void handleInterestedOpsChanged() -> handleInterestedOpsChanged
    338:346:void handleClosed() -> handleClosed
    349:353:void handleMessageReceived(java.lang.Object) -> a
    390:392:void write(io.netty.buffer.ByteBuf) -> a
    395:400:void callDrainHandler() -> d
    56:56:io.vertx.core.spi.metrics.NetworkMetrics metrics() -> metrics
    56:56:io.vertx.core.net.impl.ConnectionBase exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    56:56:io.vertx.core.net.impl.ConnectionBase closeHandler(io.vertx.core.Handler) -> closeHandler
    56:56:io.vertx.core.net.NetSocket closeHandler(io.vertx.core.Handler) -> closeHandler
    56:56:io.vertx.core.net.NetSocket exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    56:56:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    56:56:io.vertx.core.streams.ReadStream resume() -> resume
    56:56:io.vertx.core.streams.ReadStream pause() -> pause
    56:56:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    56:56:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    190:190:void lambda$resume$2(java.lang.Void) -> a
    90:90:void lambda$new$1(io.vertx.core.eventbus.Message) -> a
    59:63:void lambda$static$0(java.lang.Object) -> b
    56:56:boolean access$000(io.vertx.core.net.impl.NetSocketImpl) -> a
    56:56:io.vertx.core.buffer.Buffer access$100(io.vertx.core.net.impl.NetSocketImpl) -> b
    56:56:io.vertx.core.buffer.Buffer access$102(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.buffer.Buffer) -> a
    58:65:void <clinit>() -> <clinit>
io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler -> io.vertx.core.h.a.s:
    io.netty.buffer.ByteBufAllocator allocator -> b
    io.vertx.core.Handler dataHandler -> c
    io.vertx.core.net.impl.NetSocketImpl this$0 -> a
    360:363:void <init>(io.vertx.core.net.impl.NetSocketImpl,io.netty.buffer.ByteBufAllocator,io.vertx.core.Handler) -> <init>
    367:386:void handle(java.lang.Object) -> handle
io.vertx.core.net.impl.PartialPooledByteBufAllocator -> io.vertx.core.h.a.t:
    io.netty.buffer.ByteBufAllocator POOLED -> c
    io.netty.buffer.ByteBufAllocator UNPOOLED -> d
    io.vertx.core.net.impl.PartialPooledByteBufAllocator INSTANCE -> b
    48:48:void <init>() -> <init>
    52:52:io.netty.buffer.ByteBuf buffer() -> buffer
    57:57:io.netty.buffer.ByteBuf buffer(int) -> buffer
    62:62:io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    67:67:io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    72:72:io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    82:82:io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    87:87:io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    92:92:io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    97:97:io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    102:102:io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    107:107:io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    117:117:io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    122:122:io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    127:127:io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    132:132:io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    137:137:io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    142:142:boolean isDirectBufferPooled() -> isDirectBufferPooled
    147:147:int calculateNewCapacity(int,int) -> calculateNewCapacity
    154:154:io.netty.channel.ChannelHandlerContext forceDirectAllocator(io.netty.channel.ChannelHandlerContext) -> a
    43:46:void <clinit>() -> <clinit>
io.vertx.core.net.impl.PartialPooledByteBufAllocator$ForceDirectPoooledByteBufAllocator -> io.vertx.core.h.a.u:
    io.netty.buffer.ByteBufAllocator INSTANCE -> b
    383:383:void <init>() -> <init>
    388:388:io.netty.buffer.ByteBuf buffer() -> buffer
    393:393:io.netty.buffer.ByteBuf buffer(int) -> buffer
    398:398:io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    403:403:io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    408:408:io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    418:418:io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    423:423:io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    428:428:io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    433:433:io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    438:438:io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    443:443:io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    453:453:io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    458:458:io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    463:463:io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    468:468:io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    473:473:io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    478:478:boolean isDirectBufferPooled() -> isDirectBufferPooled
    484:484:int calculateNewCapacity(int,int) -> calculateNewCapacity
    384:384:void <clinit>() -> <clinit>
io.vertx.core.net.impl.PartialPooledByteBufAllocator$PooledChannelHandlerContext -> io.vertx.core.h.a.v:
    io.netty.channel.ChannelHandlerContext ctx -> a
    159:161:void <init>(io.netty.channel.ChannelHandlerContext) -> <init>
    165:165:boolean hasAttr(io.netty.util.AttributeKey) -> hasAttr
    170:170:io.netty.channel.Channel channel() -> channel
    175:175:io.netty.util.concurrent.EventExecutor executor() -> executor
    180:180:java.lang.String name() -> name
    185:185:io.netty.channel.ChannelHandler handler() -> handler
    190:190:boolean isRemoved() -> isRemoved
    195:196:io.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    202:203:io.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    208:209:io.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    214:215:io.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    220:221:io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    226:227:io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    232:233:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    238:239:io.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    244:245:io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    250:250:io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    255:255:io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    260:260:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    265:265:io.netty.channel.ChannelFuture disconnect() -> disconnect
    270:270:io.netty.channel.ChannelFuture close() -> close
    276:276:io.netty.channel.ChannelFuture deregister() -> deregister
    281:281:io.netty.channel.ChannelFuture bind(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> bind
    286:286:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    291:291:io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise) -> connect
    296:296:io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise) -> disconnect
    301:301:io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise) -> close
    307:307:io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise) -> deregister
    312:313:io.netty.channel.ChannelHandlerContext read() -> read
    318:318:io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    323:323:io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise) -> write
    328:329:io.netty.channel.ChannelHandlerContext flush() -> flush
    334:334:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise) -> writeAndFlush
    339:339:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    344:344:io.netty.channel.ChannelPipeline pipeline() -> pipeline
    349:349:io.netty.buffer.ByteBufAllocator alloc() -> alloc
    354:354:io.netty.channel.ChannelPromise newPromise() -> newPromise
    359:359:io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    364:364:io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    369:369:io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    374:374:io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    379:379:io.netty.util.Attribute attr(io.netty.util.AttributeKey) -> attr
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    157:157:io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    157:157:io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    157:157:io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    157:157:io.netty.channel.ChannelOutboundInvoker flush() -> flush
    157:157:io.netty.channel.ChannelOutboundInvoker read() -> read
io.vertx.core.net.impl.ProxyChannelProvider -> io.vertx.core.h.a.w:
    io.vertx.core.net.impl.ChannelProvider INSTANCE -> b
    47:48:void <init>() -> <init>
    58:126:void connect(io.vertx.core.impl.VertxInternal,io.netty.bootstrap.Bootstrap,io.vertx.core.net.ProxyOptions,io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.Handler) -> a
    65:125:void lambda$connect$1(int,io.vertx.core.net.ProxyType,java.lang.String,java.lang.String,io.netty.bootstrap.Bootstrap,io.vertx.core.impl.VertxInternal,io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult) -> a
    118:121:void lambda$null$0(io.vertx.core.Handler,io.netty.util.concurrent.Future) -> a
    45:45:void <clinit>() -> <clinit>
io.vertx.core.net.impl.ProxyChannelProvider$1 -> io.vertx.core.h.a.x:
    io.netty.handler.proxy.ProxyHandler val$proxy -> a
    io.vertx.core.Handler val$channelInitializer -> b
    io.vertx.core.Handler val$channelHandler -> c
    io.vertx.core.net.impl.ProxyChannelProvider this$0 -> d
    90:90:void <init>(io.vertx.core.net.impl.ProxyChannelProvider,io.netty.handler.proxy.ProxyHandler,io.vertx.core.Handler,io.vertx.core.Handler) -> <init>
    93:113:void initChannel(io.netty.channel.Channel) -> initChannel
io.vertx.core.net.impl.ProxyChannelProvider$1$1 -> io.vertx.core.h.a.y:
    io.netty.channel.ChannelPipeline val$pipeline -> a
    io.netty.channel.Channel val$ch -> b
    io.vertx.core.net.impl.ProxyChannelProvider$1 this$1 -> c
    95:95:void <init>(io.vertx.core.net.impl.ProxyChannelProvider$1,io.netty.channel.ChannelPipeline,io.netty.channel.Channel) -> <init>
    98:105:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    110:111:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
io.vertx.core.net.impl.ProxyChannelProvider$2 -> io.vertx.core.h.a.z:
    int[] $SwitchMap$io$vertx$core$net$ProxyType -> a
    70:70:void <clinit>() -> <clinit>
io.vertx.core.net.impl.SSLHelper -> io.vertx.core.h.a.A:
    java.util.Map PROTOCOL_NAME_MAPPING -> a
    java.util.List DEFAULT_JDK_CIPHER_SUITE -> b
    io.vertx.core.logging.Logger log -> c
    boolean ssl -> d
    boolean sni -> e
    io.vertx.core.net.KeyCertOptions keyCertOptions -> f
    io.vertx.core.net.TrustOptions trustOptions -> g
    boolean trustAll -> h
    java.util.ArrayList crlPaths -> i
    java.util.ArrayList crlValues -> j
    io.vertx.core.http.ClientAuth clientAuth -> k
    java.util.Set enabledCipherSuites -> l
    boolean openSsl -> m
    boolean client -> n
    boolean useAlpn -> o
    java.util.List applicationProtocols -> p
    java.util.Set enabledProtocols -> q
    java.lang.String endpointIdentificationAlgorithm -> r
    io.netty.handler.ssl.SslContext sslContext -> s
    java.util.Map sslContextMap -> t
    boolean openSslSessionCacheEnabled -> u
    60:95:io.vertx.core.net.SSLEngineOptions resolveEngineOptions(io.vertx.core.net.TCPSSLOptions) -> a
    129:160:void <init>(io.vertx.core.http.HttpClientOptions,io.vertx.core.net.KeyCertOptions,io.vertx.core.net.TrustOptions) -> <init>
    129:177:void <init>(io.vertx.core.http.HttpServerOptions,io.vertx.core.net.KeyCertOptions,io.vertx.core.net.TrustOptions) -> <init>
    129:194:void <init>(io.vertx.core.net.NetClientOptions,io.vertx.core.net.KeyCertOptions,io.vertx.core.net.TrustOptions) -> <init>
    129:211:void <init>(io.vertx.core.net.NetServerOptions,io.vertx.core.net.KeyCertOptions,io.vertx.core.net.TrustOptions) -> <init>
    214:214:boolean isSSL() -> a
    222:222:io.vertx.core.http.ClientAuth getClientAuth() -> b
    230:231:io.vertx.core.net.impl.SSLHelper setApplicationProtocols(java.util.List) -> a
    245:297:io.netty.handler.ssl.SslContext createContext(io.vertx.core.impl.VertxInternal,javax.net.ssl.X509KeyManager,javax.net.ssl.TrustManagerFactory) -> a
    302:302:javax.net.ssl.KeyManagerFactory getKeyMgrFactory(io.vertx.core.impl.VertxInternal) -> c
    306:344:javax.net.ssl.TrustManagerFactory getTrustMgrFactory(io.vertx.core.impl.VertxInternal,java.lang.String) -> b
    352:384:javax.net.ssl.TrustManager[] createUntrustRevokedCertTrustManager(javax.net.ssl.TrustManager[],java.util.ArrayList) -> a
    389:389:javax.net.ssl.TrustManager createTrustAllTrustManager() -> c
    406:442:void configureEngine(javax.net.ssl.SSLEngine,java.lang.String) -> a
    449:474:io.netty.handler.ssl.SslContext getContext(io.vertx.core.impl.VertxInternal,java.lang.String) -> a
    481:484:void validate(io.vertx.core.impl.VertxInternal) -> a
    487:489:javax.net.ssl.SSLEngine createEngine(io.netty.handler.ssl.SslContext) -> a
    493:501:javax.net.ssl.SSLEngine createEngine(io.vertx.core.impl.VertxInternal,io.vertx.core.net.SocketAddress,java.lang.String) -> a
    505:507:javax.net.ssl.SSLEngine createEngine(io.vertx.core.impl.VertxInternal,java.lang.String,int,java.lang.String) -> a
    517:519:javax.net.ssl.SSLEngine createEngine(io.vertx.core.impl.VertxInternal) -> b
    472:472:io.netty.handler.ssl.SslContext lambda$getContext$1(io.vertx.core.impl.VertxInternal,javax.net.ssl.X509KeyManager,javax.net.ssl.TrustManagerFactory,java.security.cert.Certificate) -> a
    334:334:java.lang.String lambda$getTrustMgrFactory$0(io.vertx.core.impl.VertxInternal,java.lang.String) -> c
    98:120:void <clinit>() -> <clinit>
io.vertx.core.net.impl.SSLHelper$1 -> io.vertx.core.h.a.B:
    javax.net.ssl.X509TrustManager val$x509TrustManager -> a
    java.util.ArrayList val$crls -> b
    357:357:void <init>(javax.net.ssl.X509TrustManager,java.util.ArrayList) -> <init>
    360:362:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    365:367:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    369:376:void checkRevoked(java.security.cert.X509Certificate[]) -> a
    379:379:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
io.vertx.core.net.impl.SSLHelper$2 -> io.vertx.core.h.a.C:
    389:389:void <init>() -> <init>
    392:392:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    396:396:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    400:400:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
io.vertx.core.net.impl.SSLHelper$3 -> io.vertx.core.h.a.D:
    int[] $SwitchMap$io$vertx$core$http$ClientAuth -> a
    418:418:void <clinit>() -> <clinit>
io.vertx.core.net.impl.ServerID -> io.vertx.core.h.a.E:
    int port -> a
    java.lang.String host -> b
    24:27:void <init>(int,java.lang.String) -> <init>
    29:30:void <init>() -> <init>
    34:42:boolean equals(java.lang.Object) -> equals
    47:49:int hashCode() -> hashCode
    53:53:java.lang.String toString() -> toString
io.vertx.core.net.impl.SocketAddressImpl -> io.vertx.core.h.a.F:
    java.lang.String hostAddress -> a
    int port -> b
    java.lang.String path -> c
    30:31:void <init>(java.net.InetSocketAddress) -> <init>
    33:40:void <init>(int,java.lang.String) -> <init>
    50:50:java.lang.String path() -> c
    54:54:java.lang.String host() -> a
    58:58:int port() -> b
    62:65:java.lang.String toString() -> toString
    71:80:boolean equals(java.lang.Object) -> equals
    85:88:int hashCode() -> hashCode
io.vertx.core.net.impl.VertxEventLoopGroup -> io.vertx.core.h.a.G:
    int pos -> a
    java.util.List workers -> b
    java.util.Set children -> c
    29:170:void <init>() -> <init>
    36:42:io.netty.channel.EventLoop next() -> next
    48:48:java.util.Iterator iterator() -> iterator
    53:53:io.netty.channel.ChannelFuture register(io.netty.channel.Channel) -> register
    58:58:io.netty.channel.ChannelFuture register(io.netty.channel.Channel,io.netty.channel.ChannelPromise) -> register
    63:63:io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise) -> register
    68:68:boolean isShutdown() -> isShutdown
    73:73:boolean isTerminated() -> isTerminated
    78:78:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    82:88:void addWorker(io.netty.channel.EventLoop) -> a
    91:91:void shutdown() -> shutdown
    96:96:boolean isShuttingDown() -> isShuttingDown
    101:101:io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    106:106:io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    110:116:io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopHolder findHolder(io.netty.channel.EventLoop) -> c
    121:131:void removeWorker(io.netty.channel.EventLoop) -> b
    138:141:void checkPos() -> a
    28:28:io.netty.util.concurrent.EventExecutor next() -> next
    29:29:java.util.List access$000(io.vertx.core.net.impl.VertxEventLoopGroup) -> a
io.vertx.core.net.impl.VertxEventLoopGroup$1 -> io.vertx.core.h.a.H:
    io.vertx.core.net.impl.VertxEventLoopGroup this$0 -> a
    170:170:void <init>(io.vertx.core.net.impl.VertxEventLoopGroup) -> <init>
    173:173:java.util.Iterator iterator() -> iterator
    178:178:int size() -> size
    183:183:boolean isEmpty() -> isEmpty
    188:188:boolean contains(java.lang.Object) -> contains
    193:193:java.lang.Object[] toArray() -> toArray
    198:198:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    203:203:boolean add(io.netty.util.concurrent.EventExecutor) -> a
    208:208:boolean remove(java.lang.Object) -> remove
    213:213:boolean containsAll(java.util.Collection) -> containsAll
    218:218:boolean addAll(java.util.Collection) -> addAll
    223:223:boolean retainAll(java.util.Collection) -> retainAll
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:void clear() -> clear
    170:170:boolean add(java.lang.Object) -> add
io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopHolder -> io.vertx.core.h.a.I:
    int count -> a
    io.netty.channel.EventLoop worker -> b
    144:149:void <init>(io.netty.channel.EventLoop) -> <init>
    153:160:boolean equals(java.lang.Object) -> equals
    165:165:int hashCode() -> hashCode
io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator -> io.vertx.core.h.a.J:
    java.util.Iterator holderIt -> a
    240:242:void <init>(java.util.Iterator) -> <init>
    246:246:boolean hasNext() -> hasNext
    251:251:io.netty.util.concurrent.EventExecutor next() -> a
    256:256:void remove() -> remove
    237:237:java.lang.Object next() -> next
io.vertx.core.net.impl.VertxHandler -> io.vertx.core.h.a.K:
    io.vertx.core.net.impl.ConnectionBase conn -> conn
    io.vertx.core.impl.ContextTask endReadAndFlush -> endReadAndFlush
    io.vertx.core.Handler addHandler -> addHandler
    io.vertx.core.Handler removeHandler -> removeHandler
    30:30:void <init>() -> <init>
    43:48:void setConnection(io.vertx.core.net.impl.ConnectionBase) -> setConnection
    57:58:io.vertx.core.net.impl.VertxHandler addHandler(io.vertx.core.Handler) -> addHandler
    68:69:io.vertx.core.net.impl.VertxHandler removeHandler(io.vertx.core.Handler) -> removeHandler
    73:73:io.vertx.core.net.impl.ConnectionBase getConnection() -> getConnection
    77:93:io.netty.buffer.ByteBuf safeBuffer(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBufAllocator) -> safeBuffer
    98:101:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    105:122:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    126:131:void channelInactive(io.netty.channel.ChannelHandlerContext) -> channelInactive
    135:137:void channelReadComplete(io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    141:148:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    152:156:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    void handleMessage(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleMessage
    java.lang.Object decode(java.lang.Object,io.netty.buffer.ByteBufAllocator) -> decode
    145:147:void lambda$channelRead$1(io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object) -> lambda$channelRead$1
    112:118:void lambda$exceptionCaught$0(io.netty.channel.Channel,io.vertx.core.net.impl.ConnectionBase,java.lang.Throwable) -> lambda$exceptionCaught$0
io.vertx.core.net.impl.VertxNetHandler -> io.vertx.core.h.a.L:
    java.util.function.Function connectionFactory -> connectionFactory
    29:31:void <init>(java.util.function.Function) -> <init>
    34:35:void <init>(io.vertx.core.net.impl.NetSocketImpl) -> <init>
    39:40:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    44:44:java.lang.Object decode(java.lang.Object,io.netty.buffer.ByteBufAllocator) -> decode
    34:34:io.vertx.core.net.impl.NetSocketImpl lambda$new$0(io.vertx.core.net.impl.NetSocketImpl,io.netty.channel.ChannelHandlerContext) -> lambda$new$0
io.vertx.core.net.impl.VertxSniHandler -> io.vertx.core.h.a.M:
    io.netty.util.AttributeKey SERVER_NAME_ATTR -> b
    io.vertx.core.net.impl.SSLHelper helper -> c
    io.netty.channel.ChannelHandlerContext context -> d
    io.netty.util.concurrent.Promise handshakeFuture -> e
    42:56:void <init>(io.vertx.core.net.impl.SSLHelper,io.vertx.core.impl.VertxInternal) -> <init>
    59:59:io.netty.util.concurrent.Future handshakeFuture() -> a
    64:65:void handlerAdded(io.netty.channel.ChannelHandlerContext) -> handlerAdded
    69:93:void replaceHandler(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.handler.ssl.SslContext) -> a
    76:83:void lambda$replaceHandler$1(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.util.concurrent.Future) -> b
    43:43:io.netty.handler.ssl.SslContext lambda$new$0(io.vertx.core.net.impl.SSLHelper,io.vertx.core.impl.VertxInternal,java.lang.String) -> a
    33:33:io.netty.channel.ChannelHandlerContext access$000(io.vertx.core.net.impl.VertxSniHandler) -> a
    35:35:void <clinit>() -> <clinit>
io.vertx.core.net.impl.VertxSniHandler$1 -> io.vertx.core.h.a.N:
    io.vertx.core.net.impl.VertxSniHandler this$0 -> a
    46:46:void <init>(io.vertx.core.net.impl.VertxSniHandler) -> <init>
    49:53:io.netty.util.concurrent.EventExecutor executor() -> executor
io.vertx.core.net.impl.VertxTrustManagerFactory -> io.vertx.core.h.a.O:
    java.security.Provider PROVIDER -> a
    31:45:void <init>(javax.net.ssl.TrustManager[]) -> <init>
    27:27:void <clinit>() -> <clinit>
io.vertx.core.net.impl.VertxTrustManagerFactory$1 -> io.vertx.core.h.a.P:
    27:27:void <init>(java.lang.String,double,java.lang.String) -> <init>
io.vertx.core.net.impl.VertxTrustManagerFactory$2 -> io.vertx.core.h.a.Q:
    javax.net.ssl.TrustManager[] val$tm -> a
    31:31:void <init>(javax.net.ssl.TrustManager[]) -> <init>
    34:34:void engineInit(java.security.KeyStore) -> engineInit
    38:38:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    42:42:javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
io.vertx.core.net.impl.pkcs1.PrivateKeyParser -> io.vertx.core.h.a.a.a:
    59:79:java.security.spec.RSAPrivateCrtKeySpec getRSAKeySpec(byte[]) -> a
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object -> io.vertx.core.h.a.a.b:
    int type -> a
    int length -> b
    byte[] value -> c
    int tag -> d
    265:270:void <init>(int,int,byte[]) -> <init>
    273:273:int getType() -> a
    285:285:boolean isConstructed() -> b
    295:299:io.vertx.core.net.impl.pkcs1.PrivateKeyParser$DerParser getParser() -> c
    309:313:java.math.BigInteger getInteger() -> d
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$DerParser -> io.vertx.core.h.a.a.c:
    io.vertx.core.buffer.Buffer in -> a
    int pos -> b
    143:145:void <init>(io.vertx.core.buffer.Buffer) -> <init>
    154:155:void <init>(byte[]) -> <init>
    158:161:int readByte() -> b
    165:170:byte[] readBytes(int) -> a
    182:185:io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object read() -> a
    207:223:int getLength() -> c
io.vertx.core.net.impl.transport.EpollTransport -> io.vertx.core.h.a.b.a:
    39:40:void <init>() -> <init>
    44:50:java.net.SocketAddress convert(io.vertx.core.net.SocketAddress,boolean) -> a
    57:57:boolean isAvailable() -> a
    67:69:io.netty.channel.EventLoopGroup eventLoopGroup(int,java.util.concurrent.ThreadFactory,int) -> a
    74:74:io.netty.channel.socket.DatagramChannel datagramChannel() -> b
    84:87:java.lang.Class channelType(boolean) -> a
    92:95:java.lang.Class serverChannelType(boolean) -> b
    100:110:io.netty.channel.ChannelOption channelOption(java.lang.String) -> a
io.vertx.core.net.impl.transport.KQueueTransport -> io.vertx.core.h.a.b.b:
    40:41:void <init>() -> <init>
    45:51:java.net.SocketAddress convert(io.vertx.core.net.SocketAddress,boolean) -> a
    58:58:boolean isAvailable() -> a
    68:70:io.netty.channel.EventLoopGroup eventLoopGroup(int,java.util.concurrent.ThreadFactory,int) -> a
    75:75:io.netty.channel.socket.DatagramChannel datagramChannel() -> b
    85:88:java.lang.Class channelType(boolean) -> a
    94:97:java.lang.Class serverChannelType(boolean) -> b
    103:107:io.netty.channel.ChannelOption channelOption(java.lang.String) -> a
io.vertx.core.net.impl.transport.Transport -> io.vertx.core.h.a.b.c:
    io.vertx.core.net.impl.transport.Transport JDK -> a
    57:78:io.vertx.core.net.impl.transport.Transport nativeTransport() -> c
    81:82:void <init>() -> <init>
    88:88:boolean isAvailable() -> a
    99:105:java.net.SocketAddress convert(io.vertx.core.net.SocketAddress,boolean) -> a
    118:118:io.netty.channel.ChannelOption channelOption(java.lang.String) -> a
    125:127:io.netty.channel.EventLoopGroup eventLoopGroup(int,java.util.concurrent.ThreadFactory,int) -> a
    134:134:io.netty.channel.socket.DatagramChannel datagramChannel() -> b
    156:159:java.lang.Class channelType(boolean) -> a
    167:170:java.lang.Class serverChannelType(boolean) -> b
    174:178:void setOption(java.lang.String,java.lang.Object,java.util.function.BiConsumer) -> a
    211:237:void configure(io.vertx.core.net.ClientOptionsBase,io.netty.bootstrap.Bootstrap) -> a
    240:265:void configure(io.vertx.core.net.NetServerOptions,io.netty.bootstrap.ServerBootstrap) -> a
    51:51:void <clinit>() -> <clinit>
io.vertx.core.parsetools.JsonParser -> io.vertx.core.i.a:
    io.vertx.core.parsetools.JsonParser pause() -> a
    io.vertx.core.parsetools.JsonParser resume() -> b
    io.vertx.core.parsetools.JsonParser endHandler(io.vertx.core.Handler) -> a
    io.vertx.core.parsetools.JsonParser handler(io.vertx.core.Handler) -> b
    io.vertx.core.parsetools.JsonParser exceptionHandler(io.vertx.core.Handler) -> c
    37:37:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    37:37:io.vertx.core.streams.ReadStream resume() -> resume
    37:37:io.vertx.core.streams.ReadStream pause() -> pause
    37:37:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    37:37:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.parsetools.RecordParser -> io.vertx.core.i.b:
    void setOutput(io.vertx.core.Handler) -> a
    139:139:io.vertx.core.parsetools.RecordParser newFixed(int) -> a
    void fixedSizeMode(int) -> b
    void handle(io.vertx.core.buffer.Buffer) -> a
    io.vertx.core.parsetools.RecordParser exceptionHandler(io.vertx.core.Handler) -> b
    io.vertx.core.parsetools.RecordParser handler(io.vertx.core.Handler) -> c
    io.vertx.core.parsetools.RecordParser pause() -> a
    io.vertx.core.parsetools.RecordParser resume() -> b
    io.vertx.core.parsetools.RecordParser endHandler(io.vertx.core.Handler) -> d
    54:54:void handle(java.lang.Object) -> handle
    54:54:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    54:54:io.vertx.core.streams.ReadStream resume() -> resume
    54:54:io.vertx.core.streams.ReadStream pause() -> pause
    54:54:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    54:54:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
io.vertx.core.parsetools.impl.RecordParserImpl -> io.vertx.core.i.a.a:
    io.vertx.core.buffer.Buffer buff -> a
    int pos -> b
    int start -> c
    int delimPos -> d
    boolean reset -> e
    boolean delimited -> f
    byte[] delim -> g
    int recordSize -> h
    io.vertx.core.Handler output -> i
    io.vertx.core.Handler endHandler -> j
    io.vertx.core.Handler exceptionHandler -> k
    io.vertx.core.streams.ReadStream stream -> l
    43:46:void <init>(io.vertx.core.streams.ReadStream,io.vertx.core.Handler) -> <init>
    49:51:void setOutput(io.vertx.core.Handler) -> a
    107:110:io.vertx.core.parsetools.RecordParser newFixed(int,io.vertx.core.streams.ReadStream,io.vertx.core.Handler) -> a
    149:153:void fixedSizeMode(int) -> b
    156:175:void handleParsing() -> c
    178:195:void parseDelimited() -> d
    198:206:void parseFixed() -> e
    214:220:void handle(io.vertx.core.buffer.Buffer) -> a
    223:227:void end() -> f
    231:232:io.vertx.core.parsetools.RecordParser exceptionHandler(io.vertx.core.Handler) -> b
    237:253:io.vertx.core.parsetools.RecordParser handler(io.vertx.core.Handler) -> c
    258:261:io.vertx.core.parsetools.RecordParser pause() -> a
    266:269:io.vertx.core.parsetools.RecordParser resume() -> b
    274:275:io.vertx.core.parsetools.RecordParser endHandler(io.vertx.core.Handler) -> d
    26:26:void handle(java.lang.Object) -> handle
    26:26:io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
    26:26:io.vertx.core.streams.ReadStream resume() -> resume
    26:26:io.vertx.core.streams.ReadStream pause() -> pause
    26:26:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    26:26:io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    242:245:void lambda$handler$1(java.lang.Throwable) -> a
    240:240:void lambda$handler$0(java.lang.Void) -> a
io.vertx.core.shareddata.SharedData -> io.vertx.core.j.a:
io.vertx.core.shareddata.impl.SharedDataImpl -> io.vertx.core.j.a.a:
    io.vertx.core.impl.VertxInternal vertx -> a
    io.vertx.core.spi.cluster.ClusterManager clusterManager -> b
    java.util.concurrent.ConcurrentMap localAsyncMaps -> c
    java.util.concurrent.ConcurrentMap localLocks -> d
    java.util.concurrent.ConcurrentMap localCounters -> e
    java.util.concurrent.ConcurrentMap localMaps -> f
    44:52:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.spi.cluster.ClusterManager) -> <init>
io.vertx.core.spi.BufferFactory -> io.vertx.core.spi.BufferFactory:
    io.vertx.core.buffer.Buffer buffer(int) -> buffer
    io.vertx.core.buffer.Buffer buffer() -> buffer
    io.vertx.core.buffer.Buffer buffer(java.lang.String) -> buffer
    io.vertx.core.buffer.Buffer buffer(java.lang.String,java.lang.String) -> buffer
    io.vertx.core.buffer.Buffer buffer(byte[]) -> buffer
    io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf) -> buffer
io.vertx.core.spi.FutureFactory -> io.vertx.core.spi.FutureFactory:
    io.vertx.core.Future future() -> future
    io.vertx.core.Future succeededFuture() -> succeededFuture
    io.vertx.core.Future succeededFuture(java.lang.Object) -> succeededFuture
    io.vertx.core.Future failedFuture(java.lang.Throwable) -> failedFuture
    io.vertx.core.Future failureFuture(java.lang.String) -> failureFuture
io.vertx.core.spi.PumpFactory -> io.vertx.core.spi.a:
    io.vertx.core.streams.Pump pump(io.vertx.core.streams.ReadStream,io.vertx.core.streams.WriteStream) -> a
io.vertx.core.spi.VerticleFactory -> io.vertx.core.spi.b:
    36:43:java.lang.String removePrefix(java.lang.String) -> a
    52:52:int order() -> b
    61:61:boolean requiresResolve() -> c
    70:70:boolean blockingCreate() -> d
    84:85:void resolve(java.lang.String,io.vertx.core.DeploymentOptions,java.lang.ClassLoader,io.vertx.core.Future) -> a
    92:92:void init(io.vertx.core.Vertx) -> a
    java.lang.String prefix() -> a
    io.vertx.core.Verticle createVerticle(java.lang.String,java.lang.ClassLoader) -> a
io.vertx.core.spi.VertxFactory -> io.vertx.core.spi.VertxFactory:
    io.vertx.core.Vertx vertx(io.vertx.core.VertxOptions) -> vertx
    io.vertx.core.Context context() -> context
io.vertx.core.spi.VertxMetricsFactory -> io.vertx.core.spi.c:
    io.vertx.core.spi.metrics.VertxMetrics metrics(io.vertx.core.Vertx,io.vertx.core.VertxOptions) -> a
io.vertx.core.spi.WebSocketFrameFactory -> io.vertx.core.spi.d:
    io.vertx.core.http.WebSocketFrame binaryFrame(io.vertx.core.buffer.Buffer,boolean) -> binaryFrame
    io.vertx.core.http.WebSocketFrame textFrame(java.lang.String,boolean) -> textFrame
    io.vertx.core.http.WebSocketFrame continuationFrame(io.vertx.core.buffer.Buffer,boolean) -> continuationFrame
    io.vertx.core.http.WebSocketFrame pingFrame(io.vertx.core.buffer.Buffer) -> pingFrame
    io.vertx.core.http.WebSocketFrame pongFrame(io.vertx.core.buffer.Buffer) -> pongFrame
io.vertx.core.spi.cluster.AsyncMultiMap -> io.vertx.core.spi.a.a:
    void add(java.lang.Object,java.lang.Object,io.vertx.core.Handler) -> a
    void get(java.lang.Object,io.vertx.core.Handler) -> a
    void remove(java.lang.Object,java.lang.Object,io.vertx.core.Handler) -> b
    void removeAllMatching(java.util.function.Predicate,io.vertx.core.Handler) -> a
io.vertx.core.spi.cluster.ChoosableIterable -> io.vertx.core.spi.a.b:
    boolean isEmpty() -> a
    java.lang.Object choose() -> b
io.vertx.core.spi.cluster.ClusterManager -> io.vertx.core.spi.a.c:
    void setVertx(io.vertx.core.Vertx) -> a
    void getAsyncMultiMap(java.lang.String,io.vertx.core.Handler) -> a
    java.util.Map getSyncMap(java.lang.String) -> a
    java.lang.String getNodeID() -> a
    java.util.List getNodes() -> b
    void nodeListener(io.vertx.core.spi.cluster.NodeListener) -> a
    void join(io.vertx.core.Handler) -> a
io.vertx.core.spi.cluster.NodeListener -> io.vertx.core.spi.a.d:
io.vertx.core.spi.logging.LogDelegate -> io.vertx.core.spi.b.a:
    boolean isDebugEnabled() -> a
    boolean isTraceEnabled() -> b
    void error(java.lang.Object) -> a
    void error(java.lang.Object,java.lang.Throwable) -> a
    void warn(java.lang.Object) -> b
    void warn(java.lang.Object,java.lang.Throwable) -> b
    void info(java.lang.Object) -> c
    void debug(java.lang.Object) -> d
    void trace(java.lang.Object) -> e
    void trace(java.lang.Object,java.lang.Throwable) -> c
io.vertx.core.spi.logging.LogDelegateFactory -> io.vertx.core.spi.b.b:
    io.vertx.core.spi.logging.LogDelegate createDelegate(java.lang.String) -> a
io.vertx.core.spi.metrics.EventBusMetrics -> io.vertx.core.spi.c.a:
    java.lang.Object handlerRegistered(java.lang.String,java.lang.String) -> a
    void handlerUnregistered(java.lang.Object) -> a
    void scheduleMessage(java.lang.Object,boolean) -> a
    void beginHandleMessage(java.lang.Object,boolean) -> b
    void endHandleMessage(java.lang.Object,java.lang.Throwable) -> a
    void messageSent(java.lang.String,boolean,boolean,boolean) -> a
    void messageReceived(java.lang.String,boolean,boolean,int) -> a
    void messageWritten(java.lang.String,int) -> a
    void messageRead(java.lang.String,int) -> b
    void replyFailure(java.lang.String,io.vertx.core.eventbus.ReplyFailure) -> a
io.vertx.core.spi.metrics.HttpClientMetrics -> io.vertx.core.spi.c.b:
    java.lang.Object createEndpoint(java.lang.String,int,int) -> a
    void closeEndpoint(java.lang.String,int,java.lang.Object) -> a
    java.lang.Object enqueueRequest(java.lang.Object) -> a
    void dequeueRequest(java.lang.Object,java.lang.Object) -> a
    void endpointConnected(java.lang.Object,java.lang.Object) -> b
    void endpointDisconnected(java.lang.Object,java.lang.Object) -> c
    java.lang.Object requestBegin(java.lang.Object,java.lang.Object,io.vertx.core.net.SocketAddress,io.vertx.core.net.SocketAddress,io.vertx.core.http.HttpClientRequest) -> a
    void requestEnd(java.lang.Object) -> b
    void responseBegin(java.lang.Object,io.vertx.core.http.HttpClientResponse) -> a
    java.lang.Object responsePushed(java.lang.Object,java.lang.Object,io.vertx.core.net.SocketAddress,io.vertx.core.net.SocketAddress,io.vertx.core.http.HttpClientRequest) -> b
    void requestReset(java.lang.Object) -> c
    void responseEnd(java.lang.Object,io.vertx.core.http.HttpClientResponse) -> b
    java.lang.Object connected(java.lang.Object,java.lang.Object,io.vertx.core.http.WebSocket) -> a
    void disconnected(java.lang.Object) -> d
io.vertx.core.spi.metrics.HttpServerMetrics -> io.vertx.core.spi.c.c:
    java.lang.Object requestBegin(java.lang.Object,io.vertx.core.http.HttpServerRequest) -> a
    void requestReset(java.lang.Object) -> a
    java.lang.Object responsePushed(java.lang.Object,io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.http.HttpServerResponse) -> a
    void responseEnd(java.lang.Object,io.vertx.core.http.HttpServerResponse) -> a
    java.lang.Object upgrade(java.lang.Object,io.vertx.core.http.ServerWebSocket) -> a
    java.lang.Object connected(java.lang.Object,io.vertx.core.http.ServerWebSocket) -> b
    void disconnected(java.lang.Object) -> b
io.vertx.core.spi.metrics.Metrics -> io.vertx.core.spi.c.d:
    boolean METRICS_ENABLED -> a
    void close() -> a
    24:24:void <clinit>() -> <clinit>
io.vertx.core.spi.metrics.NetworkMetrics -> io.vertx.core.spi.c.e:
    void bytesRead(java.lang.Object,io.vertx.core.net.SocketAddress,long) -> a
    void bytesWritten(java.lang.Object,io.vertx.core.net.SocketAddress,long) -> b
    void exceptionOccurred(java.lang.Object,io.vertx.core.net.SocketAddress,java.lang.Throwable) -> a
io.vertx.core.spi.metrics.PoolMetrics -> io.vertx.core.spi.c.f:
    java.lang.Object submitted() -> b
    java.lang.Object begin(java.lang.Object) -> a
    void rejected(java.lang.Object) -> b
    void end(java.lang.Object,boolean) -> a
io.vertx.core.spi.metrics.TCPMetrics -> io.vertx.core.spi.c.g:
    java.lang.Object connected(io.vertx.core.net.SocketAddress,java.lang.String) -> a
    void disconnected(java.lang.Object,io.vertx.core.net.SocketAddress) -> a
io.vertx.core.spi.metrics.VertxMetrics -> io.vertx.core.spi.c.h:
    void verticleDeployed(io.vertx.core.Verticle) -> a
    void verticleUndeployed(io.vertx.core.Verticle) -> b
    void timerCreated(long) -> a
    void timerEnded(long,boolean) -> a
    io.vertx.core.spi.metrics.EventBusMetrics createMetrics(io.vertx.core.eventbus.EventBus) -> a
    io.vertx.core.spi.metrics.HttpServerMetrics createMetrics(io.vertx.core.http.HttpServer,io.vertx.core.net.SocketAddress,io.vertx.core.http.HttpServerOptions) -> a
    io.vertx.core.spi.metrics.HttpClientMetrics createMetrics(io.vertx.core.http.HttpClient,io.vertx.core.http.HttpClientOptions) -> a
    io.vertx.core.spi.metrics.TCPMetrics createMetrics(io.vertx.core.net.SocketAddress,io.vertx.core.net.NetServerOptions) -> a
    io.vertx.core.spi.metrics.TCPMetrics createMetrics(io.vertx.core.net.NetClientOptions) -> a
    160:160:void eventBusInitialized(io.vertx.core.eventbus.EventBus) -> b
    io.vertx.core.spi.metrics.PoolMetrics createMetrics(java.lang.Object,java.lang.String,java.lang.String,int) -> a
io.vertx.core.spi.resolver.ResolverProvider -> io.vertx.core.spi.d.a:
    boolean DISABLE_DNS_RESOLVER -> a
    39:49:io.vertx.core.spi.resolver.ResolverProvider factory(io.vertx.core.Vertx,io.vertx.core.dns.AddressResolverOptions) -> a
    io.netty.resolver.AddressResolverGroup resolver(io.vertx.core.dns.AddressResolverOptions) -> a
    33:33:void <clinit>() -> <clinit>
io.vertx.core.streams.Pump -> io.vertx.core.k.a:
    io.vertx.core.spi.PumpFactory factory -> a
    53:53:io.vertx.core.streams.Pump pump(io.vertx.core.streams.ReadStream,io.vertx.core.streams.WriteStream) -> a
    io.vertx.core.streams.Pump start() -> a
    99:99:void <clinit>() -> <clinit>
io.vertx.core.streams.ReadStream -> io.vertx.core.k.b:
    io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler) -> exceptionHandler
    io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler) -> handler
    io.vertx.core.streams.ReadStream pause() -> pause
    io.vertx.core.streams.ReadStream resume() -> resume
    io.vertx.core.streams.ReadStream endHandler(io.vertx.core.Handler) -> endHandler
io.vertx.core.streams.StreamBase -> io.vertx.core.k.c:
io.vertx.core.streams.WriteStream -> io.vertx.core.k.d:
io.vertx.lang.reactivex.TypeArg -> io.vertx.a.a.a:
    io.vertx.lang.reactivex.TypeArg UNKNOWN -> c
    java.util.function.Function wrap -> a
    java.util.function.Function unwrap -> b
    33:36:void <init>(java.util.function.Function,java.util.function.Function) -> <init>
    12:12:void <clinit>() -> <clinit>
io.vertx.reactivex.FlowableHelper -> io.vertx.b.a:
    35:35:io.reactivex.Flowable toFlowable(io.vertx.core.streams.ReadStream,java.util.function.Function) -> a
io.vertx.reactivex.core.AbstractVerticle -> io.vertx.b.a.a:
    io.vertx.reactivex.core.Vertx vertx -> d
    24:24:void <init>() -> <init>
    31:33:void init(io.vertx.core.Vertx,io.vertx.core.Context) -> a
io.vertx.reactivex.core.MultiMap -> io.vertx.b.a.b:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> a
    io.vertx.core.MultiMap delegate -> b
    44:44:java.lang.String toString() -> toString
    49:52:boolean equals(java.lang.Object) -> equals
    57:57:int hashCode() -> hashCode
    67:69:void <init>(io.vertx.core.MultiMap) -> <init>
    72:72:io.vertx.core.MultiMap getDelegate() -> a
    101:102:java.util.List getAll(java.lang.String) -> a
    143:144:java.util.Set names() -> b
    221:221:io.vertx.reactivex.core.MultiMap newInstance(io.vertx.core.MultiMap) -> a
    61:61:java.lang.Object lambda$static$0(java.lang.Object) -> a
    60:60:void <clinit>() -> <clinit>
io.vertx.reactivex.core.Vertx -> io.vertx.b.a.c:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> a
    io.vertx.core.Vertx delegate -> b
    79:79:java.lang.String toString() -> toString
    84:87:boolean equals(java.lang.Object) -> equals
    92:92:int hashCode() -> hashCode
    102:104:void <init>(io.vertx.core.Vertx) -> <init>
    107:107:io.vertx.core.Vertx getDelegate() -> a
    241:242:io.vertx.reactivex.core.http.HttpServer createHttpServer() -> b
    96:96:java.lang.Object lambda$static$0(java.lang.Object) -> a
    95:95:void <clinit>() -> <clinit>
io.vertx.reactivex.core.buffer.Buffer -> io.vertx.b.a.a.a:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> a
    io.vertx.core.buffer.Buffer delegate -> b
    56:59:boolean equals(java.lang.Object) -> equals
    64:64:int hashCode() -> hashCode
    74:76:void <init>(io.vertx.core.buffer.Buffer) -> <init>
    79:79:io.vertx.core.buffer.Buffer getDelegate() -> a
    131:132:java.lang.String toString() -> toString
    895:895:io.vertx.reactivex.core.buffer.Buffer newInstance(io.vertx.core.buffer.Buffer) -> a
    68:68:java.lang.Object lambda$static$0(java.lang.Object) -> a
    67:67:void <clinit>() -> <clinit>
io.vertx.reactivex.core.http.HttpServer -> io.vertx.b.a.b.a:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> a
    io.vertx.core.http.HttpServer delegate -> b
    io.vertx.reactivex.core.streams.ReadStream cached_0 -> c
    48:48:java.lang.String toString() -> toString
    53:56:boolean equals(java.lang.Object) -> equals
    61:61:int hashCode() -> hashCode
    71:73:void <init>(io.vertx.core.http.HttpServer) -> <init>
    76:76:io.vertx.core.http.HttpServer getDelegate() -> a
    94:99:io.vertx.reactivex.core.streams.ReadStream requestStream() -> b
    238:239:io.vertx.reactivex.core.http.HttpServer listen(int) -> a
    341:341:io.vertx.reactivex.core.http.HttpServer newInstance(io.vertx.core.http.HttpServer) -> a
    65:65:java.lang.Object lambda$static$0(java.lang.Object) -> a
    64:64:void <clinit>() -> <clinit>
io.vertx.reactivex.core.http.HttpServerRequest -> io.vertx.b.a.b.b:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> a
    io.vertx.core.http.HttpServerRequest delegate -> b
    io.reactivex.Flowable flowable -> c
    io.vertx.reactivex.core.http.HttpServerResponse cached_0 -> d
    io.vertx.reactivex.core.MultiMap cached_2 -> e
    54:54:java.lang.String toString() -> toString
    59:62:boolean equals(java.lang.Object) -> equals
    67:67:int hashCode() -> hashCode
    77:79:void <init>(io.vertx.core.http.HttpServerRequest) -> <init>
    82:82:io.vertx.core.http.HttpServerRequest getDelegate() -> a
    97:101:io.reactivex.Flowable toFlowable() -> b
    153:154:java.lang.String rawMethod() -> c
    185:186:java.lang.String path() -> d
    209:214:io.vertx.reactivex.core.http.HttpServerResponse response() -> e
    235:236:java.lang.String getHeader(java.lang.String) -> a
    243:248:io.vertx.reactivex.core.MultiMap params() -> f
    289:290:java.lang.String absoluteURI() -> g
    302:307:io.vertx.reactivex.core.http.HttpServerRequest bodyHandler(io.vertx.core.Handler) -> a
    71:71:java.lang.Object lambda$static$0(java.lang.Object) -> a
    70:70:void <clinit>() -> <clinit>
io.vertx.reactivex.core.http.HttpServerRequest$2 -> io.vertx.b.a.b.c:
    io.vertx.core.Handler val$bodyHandler -> a
    io.vertx.reactivex.core.http.HttpServerRequest this$0 -> b
    302:302:void <init>(io.vertx.reactivex.core.http.HttpServerRequest,io.vertx.core.Handler) -> <init>
    304:305:void handle(io.vertx.core.buffer.Buffer) -> a
    302:302:void handle(java.lang.Object) -> handle
io.vertx.reactivex.core.http.HttpServerResponse -> io.vertx.b.a.b.d:
    io.vertx.lang.reactivex.TypeArg __TYPE_ARG -> a
    io.vertx.core.http.HttpServerResponse delegate -> b
    61:61:java.lang.String toString() -> toString
    66:69:boolean equals(java.lang.Object) -> equals
    74:74:int hashCode() -> hashCode
    84:86:void <init>(io.vertx.core.http.HttpServerResponse) -> <init>
    89:89:io.vertx.core.http.HttpServerResponse getDelegate() -> a
    136:137:io.vertx.reactivex.core.http.HttpServerResponse setStatusCode(int) -> a
    205:206:io.vertx.reactivex.core.http.HttpServerResponse putHeader(java.lang.String,java.lang.String) -> a
    313:314:void end(io.vertx.reactivex.core.buffer.Buffer) -> a
    323:324:void end() -> b
    682:682:io.vertx.reactivex.core.http.HttpServerResponse newInstance(io.vertx.core.http.HttpServerResponse) -> a
    78:78:java.lang.Object lambda$static$0(java.lang.Object) -> a
    77:77:void <clinit>() -> <clinit>
io.vertx.reactivex.core.impl.FlowableReadStream -> io.vertx.b.a.c.a:
    io.vertx.core.streams.ReadStream stream -> b
    java.util.function.Function f -> c
    java.util.concurrent.atomic.AtomicReference processor -> d
    long highWaterMark -> e
    long lowWaterMark -> f
    boolean subscribed -> g
    long pending -> h
    boolean paused -> i
    24:36:void <init>(io.vertx.core.streams.ReadStream,long,java.util.function.Function) -> <init>
    40:121:void subscribeActual(org.reactivestreams.Subscriber) -> b
    18:18:java.util.concurrent.atomic.AtomicReference access$000(io.vertx.reactivex.core.impl.FlowableReadStream) -> a
    18:18:long access$102(io.vertx.reactivex.core.impl.FlowableReadStream,long) -> a
    18:18:long access$100(io.vertx.reactivex.core.impl.FlowableReadStream) -> b
    18:18:boolean access$200(io.vertx.reactivex.core.impl.FlowableReadStream) -> c
    18:18:boolean access$300(io.vertx.reactivex.core.impl.FlowableReadStream) -> d
    18:18:long access$400(io.vertx.reactivex.core.impl.FlowableReadStream) -> e
    18:18:boolean access$302(io.vertx.reactivex.core.impl.FlowableReadStream,boolean) -> a
    18:18:io.vertx.core.streams.ReadStream access$500(io.vertx.reactivex.core.impl.FlowableReadStream) -> f
    18:18:boolean access$202(io.vertx.reactivex.core.impl.FlowableReadStream,boolean) -> b
    18:18:java.util.function.Function access$700(io.vertx.reactivex.core.impl.FlowableReadStream) -> g
    18:18:long access$104(io.vertx.reactivex.core.impl.FlowableReadStream) -> h
    18:18:long access$800(io.vertx.reactivex.core.impl.FlowableReadStream) -> i
io.vertx.reactivex.core.impl.FlowableReadStream$1 -> io.vertx.b.a.c.b:
    io.reactivex.processors.UnicastProcessor val$p -> a
    org.reactivestreams.Subscriber val$subscriber -> b
    io.vertx.reactivex.core.impl.FlowableReadStream this$0 -> c
    45:45:void <init>(io.vertx.reactivex.core.impl.FlowableReadStream,io.reactivex.processors.UnicastProcessor,org.reactivestreams.Subscriber) -> <init>
    47:93:void onSubscribe(org.reactivestreams.Subscription) -> a
    95:96:void onNext(java.lang.Object) -> a
    98:100:void onError(java.lang.Throwable) -> a
    102:104:void onComplete() -> i_
    106:119:void release() -> a
    85:90:void lambda$onSubscribe$1(io.reactivex.processors.UnicastProcessor,java.lang.Object) -> a
    82:82:void lambda$onSubscribe$0(io.reactivex.processors.UnicastProcessor,java.lang.Void) -> a
    45:45:void access$600(io.vertx.reactivex.core.impl.FlowableReadStream$1) -> a
io.vertx.reactivex.core.impl.FlowableReadStream$1$1 -> io.vertx.b.a.c.c:
    io.reactivex.internal.subscriptions.BasicIntQueueSubscription val$sub -> a
    io.vertx.reactivex.core.impl.FlowableReadStream$1 this$1 -> b
    48:48:void <init>(io.vertx.reactivex.core.impl.FlowableReadStream$1,io.reactivex.internal.subscriptions.BasicIntQueueSubscription) -> <init>
    50:50:int requestFusion(int) -> a
    53:53:java.lang.Object poll() -> a
    56:56:boolean isEmpty() -> b
    59:60:void clear() -> h_
    62:76:void request(long) -> a
    78:80:void cancel() -> c
io.vertx.reactivex.core.streams.ReadStream -> io.vertx.b.a.d.a:
    io.reactivex.Flowable toFlowable() -> b
    85:85:io.vertx.reactivex.core.streams.ReadStream newInstance(io.vertx.core.streams.ReadStream,io.vertx.lang.reactivex.TypeArg) -> a
io.vertx.reactivex.core.streams.ReadStreamImpl -> io.vertx.b.a.d.b:
    io.vertx.core.streams.ReadStream delegate -> b
    io.vertx.lang.reactivex.TypeArg __typeArg_0 -> a
    io.reactivex.Flowable flowable -> c
    98:101:void <init>(io.vertx.core.streams.ReadStream,io.vertx.lang.reactivex.TypeArg) -> <init>
    119:123:io.reactivex.Flowable toFlowable() -> b
javax.inject.Provider -> javax.a.a:
    java.lang.Object get() -> a
net.jodah.typetools.TypeResolver -> d.a.a.a:
    java.util.Map TYPE_VARIABLE_CACHE -> a
    boolean CACHE_ENABLED -> b
    boolean RESOLVES_LAMBDAS -> c
    java.lang.reflect.Method GET_CONSTANT_POOL -> d
    java.lang.reflect.Method GET_CONSTANT_POOL_SIZE -> e
    java.lang.reflect.Method GET_CONSTANT_POOL_METHOD_AT -> f
    java.util.Map OBJECT_METHODS -> g
    java.util.Map PRIMITIVE_WRAPPERS -> h
    java.lang.Double JAVA_VERSION -> i
    196:225:java.lang.Class[] resolveRawArguments(java.lang.reflect.Type,java.lang.Class) -> a
    275:290:java.lang.Class resolveRawClass(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    295:334:java.util.Map getTypeVariableMap(java.lang.Class,java.lang.Class) -> a
    342:356:void populateSuperTypeArgs(java.lang.reflect.Type[],java.util.Map,boolean) -> a
    362:399:void populateTypeArgs(java.lang.reflect.ParameterizedType,java.util.Map,boolean) -> a
    405:413:java.lang.reflect.Type resolveBound(java.lang.reflect.TypeVariable) -> a
    421:475:void populateLambdaArgs(java.lang.Class,java.lang.Class,java.util.Map) -> a
    478:478:boolean isDefaultMethod(java.lang.reflect.Method) -> a
    484:506:java.lang.reflect.Member getMemberRef(java.lang.Class) -> a
    510:512:boolean isAutoBoxingMethod(java.lang.reflect.Method) -> b
    516:516:java.lang.Class wrapPrimitives(java.lang.Class) -> b
    521:523:int getConstantPoolSize(java.lang.Object) -> a
    529:531:java.lang.reflect.Member getConstantPoolMethodAt(java.lang.Object,int) -> a
    49:110:void <clinit>() -> <clinit>
net.jodah.typetools.TypeResolver$1 -> d.a.a.b:
    64:64:void <init>() -> <init>
    67:70:sun.misc.Unsafe run() -> a
    64:64:java.lang.Object run() -> run
net.jodah.typetools.TypeResolver$Unknown -> d.a.a.c:
    114:115:void <init>() -> <init>
org.reactivestreams.Processor -> org.a.a:
org.reactivestreams.Publisher -> org.a.b:
    void subscribe(org.reactivestreams.Subscriber) -> a
org.reactivestreams.Subscriber -> org.a.c:
    void onSubscribe(org.reactivestreams.Subscription) -> a
    void onNext(java.lang.Object) -> a
    void onError(java.lang.Throwable) -> a
    void onComplete() -> i_
org.reactivestreams.Subscription -> org.a.d:
    void request(long) -> a
    void cancel() -> c
org.slf4j.ILoggerFactory -> org.slf4j.a:
    org.slf4j.Logger getLogger(java.lang.String) -> c
org.slf4j.IMarkerFactory -> org.slf4j.b:
    org.slf4j.Marker getMarker(java.lang.String) -> a
org.slf4j.Logger -> org.slf4j.c:
    java.lang.String getName() -> c
    boolean isTraceEnabled() -> h
    void trace(java.lang.String) -> c
    void trace(java.lang.String,java.lang.Object) -> a
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> a
    void trace(java.lang.String,java.lang.Object[]) -> a
    void trace(java.lang.String,java.lang.Throwable) -> a
    boolean isDebugEnabled() -> f
    void debug(java.lang.String) -> d
    void debug(java.lang.String,java.lang.Object) -> b
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> b
    void debug(java.lang.String,java.lang.Object[]) -> b
    void debug(java.lang.String,java.lang.Throwable) -> b
    boolean isInfoEnabled() -> g
    void info(java.lang.String) -> f
    void info(java.lang.String,java.lang.Object) -> d
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> d
    void info(java.lang.String,java.lang.Object[]) -> d
    void info(java.lang.String,java.lang.Throwable) -> d
    boolean isWarnEnabled() -> j
    void warn(java.lang.String) -> g
    void warn(java.lang.String,java.lang.Object) -> e
    void warn(java.lang.String,java.lang.Object[]) -> e
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> e
    void warn(java.lang.String,java.lang.Throwable) -> e
    boolean isErrorEnabled() -> i
    void error(java.lang.String) -> e
    void error(java.lang.String,java.lang.Object) -> c
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> c
    void error(java.lang.String,java.lang.Object[]) -> c
    void error(java.lang.String,java.lang.Throwable) -> c
org.slf4j.LoggerFactory -> org.slf4j.d:
    int INITIALIZATION_STATE -> a
    org.slf4j.helpers.SubstituteLoggerFactory SUBST_FACTORY -> b
    org.slf4j.helpers.NOPLoggerFactory NOP_FALLBACK_FACTORY -> c
    boolean DETECT_LOGGER_NAME_MISMATCH -> d
    java.lang.String[] API_COMPATIBILITY_LIST -> e
    java.lang.String STATIC_LOGGER_BINDER_PATH -> f
    105:106:void <init>() -> <init>
    124:128:void performInitialization() -> c
    131:137:boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String) -> b
    142:181:void bind() -> d
    184:192:void fixSubstituteLoggers() -> e
    195:197:void failedBinding(java.lang.Throwable) -> a
    200:216:void replayEvents() -> f
    219:226:void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int) -> a
    229:245:void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent) -> a
    248:253:void emitSubstitutionWarning() -> g
    256:259:void emitReplayWarning(int) -> a
    263:285:void versionSanityCheck() -> h
    296:312:java.util.Set findPossibleStaticLoggerBinderPathSet() -> a
    316:316:boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set) -> a
    325:332:void reportMultipleBindingAmbiguity(java.util.Set) -> b
    335:338:boolean isAndroid() -> i
    343:346:void reportActualBinding(java.util.Set) -> c
    357:358:org.slf4j.Logger getLogger(java.lang.String) -> a
    383:392:org.slf4j.Logger getLogger(java.lang.Class) -> a
    396:396:boolean nonMatchingClasses(java.lang.Class,java.lang.Class) -> a
    408:428:org.slf4j.ILoggerFactory getILoggerFactory() -> b
    85:290:void <clinit>() -> <clinit>
org.slf4j.MDC -> org.slf4j.e:
    org.slf4j.spi.MDCAdapter mdcAdapter -> a
    99:102:org.slf4j.spi.MDCAdapter bwCompatibleGetMDCAdapterFromBinder() -> b
    274:274:org.slf4j.spi.MDCAdapter getMDCAdapter() -> a
    108:123:void <clinit>() -> <clinit>
org.slf4j.Marker -> org.slf4j.f:
    java.lang.String getName() -> a
    boolean contains(org.slf4j.Marker) -> a
    boolean equals(java.lang.Object) -> equals
org.slf4j.MarkerFactory -> org.slf4j.g:
    org.slf4j.IMarkerFactory MARKER_FACTORY -> a
    61:64:org.slf4j.IMarkerFactory bwCompatibleGetMarkerFactoryFromBinder() -> a
    89:89:org.slf4j.Marker getMarker(java.lang.String) -> a
    71:78:void <clinit>() -> <clinit>
org.slf4j.event.EventRecodingLogger -> org.slf4j.a.a:
    java.lang.String name -> a
    org.slf4j.helpers.SubstituteLogger logger -> b
    java.util.Queue eventQueue -> c
    15:19:void <init>(org.slf4j.helpers.SubstituteLogger,java.util.Queue) -> <init>
    22:22:java.lang.String getName() -> c
    26:27:void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> a
    31:42:void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable) -> a
    45:45:boolean isTraceEnabled() -> h
    49:50:void trace(java.lang.String) -> c
    53:54:void trace(java.lang.String,java.lang.Object) -> a
    57:58:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> a
    61:62:void trace(java.lang.String,java.lang.Object[]) -> a
    65:66:void trace(java.lang.String,java.lang.Throwable) -> a
    95:95:boolean isDebugEnabled() -> f
    99:100:void debug(java.lang.String) -> d
    103:105:void debug(java.lang.String,java.lang.Object) -> b
    108:110:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> b
    113:114:void debug(java.lang.String,java.lang.Object[]) -> b
    117:118:void debug(java.lang.String,java.lang.Throwable) -> b
    145:145:boolean isInfoEnabled() -> g
    149:150:void info(java.lang.String) -> f
    153:154:void info(java.lang.String,java.lang.Object) -> d
    157:158:void info(java.lang.String,java.lang.Object,java.lang.Object) -> d
    161:162:void info(java.lang.String,java.lang.Object[]) -> d
    165:166:void info(java.lang.String,java.lang.Throwable) -> d
    194:194:boolean isWarnEnabled() -> j
    198:199:void warn(java.lang.String) -> g
    202:204:void warn(java.lang.String,java.lang.Object) -> e
    207:208:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> e
    211:212:void warn(java.lang.String,java.lang.Object[]) -> e
    215:216:void warn(java.lang.String,java.lang.Throwable) -> e
    244:244:boolean isErrorEnabled() -> i
    248:249:void error(java.lang.String) -> e
    252:254:void error(java.lang.String,java.lang.Object) -> c
    257:259:void error(java.lang.String,java.lang.Object,java.lang.Object) -> c
    262:264:void error(java.lang.String,java.lang.Object[]) -> c
    267:268:void error(java.lang.String,java.lang.Throwable) -> c
org.slf4j.event.Level -> org.slf4j.a.b:
    org.slf4j.event.Level ERROR -> a
    org.slf4j.event.Level WARN -> b
    org.slf4j.event.Level INFO -> c
    org.slf4j.event.Level DEBUG -> d
    org.slf4j.event.Level TRACE -> e
    int levelInt -> f
    java.lang.String levelStr -> g
    org.slf4j.event.Level[] $VALUES -> h
    14:14:org.slf4j.event.Level[] values() -> values
    14:14:org.slf4j.event.Level valueOf(java.lang.String) -> valueOf
    21:24:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    34:34:java.lang.String toString() -> toString
    14:16:void <clinit>() -> <clinit>
org.slf4j.event.LoggingEvent -> org.slf4j.a.c:
org.slf4j.event.SubstituteLoggingEvent -> org.slf4j.a.d:
    org.slf4j.event.Level level -> a
    org.slf4j.Marker marker -> b
    java.lang.String loggerName -> c
    org.slf4j.helpers.SubstituteLogger logger -> d
    java.lang.String threadName -> e
    java.lang.String message -> f
    java.lang.Object[] argArray -> g
    long timeStamp -> h
    java.lang.Throwable throwable -> i
    6:6:void <init>() -> <init>
    23:24:void setLevel(org.slf4j.event.Level) -> a
    31:32:void setMarker(org.slf4j.Marker) -> a
    39:40:void setLoggerName(java.lang.String) -> a
    43:43:org.slf4j.helpers.SubstituteLogger getLogger() -> a
    47:48:void setLogger(org.slf4j.helpers.SubstituteLogger) -> a
    55:56:void setMessage(java.lang.String) -> b
    63:64:void setArgumentArray(java.lang.Object[]) -> a
    71:72:void setTimeStamp(long) -> a
    79:80:void setThreadName(java.lang.String) -> c
    87:88:void setThrowable(java.lang.Throwable) -> a
org.slf4j.helpers.BasicMarker -> org.slf4j.b.a:
    java.lang.String name -> a
    java.util.List referenceList -> b
    java.lang.String OPEN -> c
    java.lang.String CLOSE -> d
    java.lang.String SEP -> e
    43:50:void <init>(java.lang.String) -> <init>
    53:53:java.lang.String getName() -> a
    74:74:boolean hasReferences() -> b
    82:82:java.util.Iterator iterator() -> c
    90:105:boolean contains(org.slf4j.Marker) -> a
    135:143:boolean equals(java.lang.Object) -> equals
    147:147:int hashCode() -> hashCode
    151:167:java.lang.String toString() -> toString
    130:132:void <clinit>() -> <clinit>
org.slf4j.helpers.BasicMarkerFactory -> org.slf4j.b.b:
    java.util.concurrent.ConcurrentMap markerMap -> a
    44:53:void <init>() -> <init>
    63:75:org.slf4j.Marker getMarker(java.lang.String) -> a
org.slf4j.helpers.FormattingTuple -> org.slf4j.b.c:
    org.slf4j.helpers.FormattingTuple NULL -> a
    java.lang.String message -> b
    java.lang.Throwable throwable -> c
    java.lang.Object[] argArray -> d
    41:42:void <init>(java.lang.String) -> <init>
    44:48:void <init>(java.lang.String,java.lang.Object[],java.lang.Throwable) -> <init>
    51:51:java.lang.String getMessage() -> a
    34:34:void <clinit>() -> <clinit>
org.slf4j.helpers.MarkerIgnoringBase -> org.slf4j.b.d:
    38:38:void <init>() -> <init>
    163:163:java.lang.String toString() -> toString
    38:38:java.lang.String getName() -> c
org.slf4j.helpers.MessageFormatter -> org.slf4j.b.e:
    156:164:java.lang.Throwable getThrowableCandidate(java.lang.Object[]) -> a
    168:173:org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[]) -> a
    177:183:java.lang.Object[] trimmedCopy(java.lang.Object[]) -> b
    188:240:org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[],java.lang.Throwable) -> a
    245:252:boolean isEscapedDelimeter(java.lang.String,int) -> a
    257:260:boolean isDoubleEscaped(java.lang.String,int) -> b
    266:295:void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Map) -> a
    299:306:void safeObjectAppend(java.lang.StringBuilder,java.lang.Object) -> a
    309:324:void objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Map) -> a
    327:335:void booleanArrayAppend(java.lang.StringBuilder,boolean[]) -> a
    338:346:void byteArrayAppend(java.lang.StringBuilder,byte[]) -> a
    349:357:void charArrayAppend(java.lang.StringBuilder,char[]) -> a
    360:368:void shortArrayAppend(java.lang.StringBuilder,short[]) -> a
    371:379:void intArrayAppend(java.lang.StringBuilder,int[]) -> a
    382:390:void longArrayAppend(java.lang.StringBuilder,long[]) -> a
    393:401:void floatArrayAppend(java.lang.StringBuilder,float[]) -> a
    404:412:void doubleArrayAppend(java.lang.StringBuilder,double[]) -> a
org.slf4j.helpers.NOPLogger -> org.slf4j.b.f:
    org.slf4j.helpers.NOPLogger NOP_LOGGER -> a
    48:49:void <init>() -> <init>
    55:55:java.lang.String getName() -> c
    63:63:boolean isTraceEnabled() -> h
    69:69:void trace(java.lang.String) -> c
    74:74:void trace(java.lang.String,java.lang.Object) -> a
    79:79:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> a
    84:84:void trace(java.lang.String,java.lang.Object[]) -> a
    89:89:void trace(java.lang.String,java.lang.Throwable) -> a
    96:96:boolean isDebugEnabled() -> f
    102:102:void debug(java.lang.String) -> d
    107:107:void debug(java.lang.String,java.lang.Object) -> b
    112:112:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> b
    117:117:void debug(java.lang.String,java.lang.Object[]) -> b
    122:122:void debug(java.lang.String,java.lang.Throwable) -> b
    130:130:boolean isInfoEnabled() -> g
    136:136:void info(java.lang.String) -> f
    141:141:void info(java.lang.String,java.lang.Object) -> d
    146:146:void info(java.lang.String,java.lang.Object,java.lang.Object) -> d
    151:151:void info(java.lang.String,java.lang.Object[]) -> d
    156:156:void info(java.lang.String,java.lang.Throwable) -> d
    163:163:boolean isWarnEnabled() -> j
    169:169:void warn(java.lang.String) -> g
    174:174:void warn(java.lang.String,java.lang.Object) -> e
    179:179:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> e
    184:184:void warn(java.lang.String,java.lang.Object[]) -> e
    189:189:void warn(java.lang.String,java.lang.Throwable) -> e
    193:193:boolean isErrorEnabled() -> i
    199:199:void error(java.lang.String) -> e
    204:204:void error(java.lang.String,java.lang.Object) -> c
    209:209:void error(java.lang.String,java.lang.Object,java.lang.Object) -> c
    214:214:void error(java.lang.String,java.lang.Object[]) -> c
    219:219:void error(java.lang.String,java.lang.Throwable) -> c
    42:42:void <clinit>() -> <clinit>
org.slf4j.helpers.NOPLoggerFactory -> org.slf4j.b.g:
    40:42:void <init>() -> <init>
    45:45:org.slf4j.Logger getLogger(java.lang.String) -> c
org.slf4j.helpers.NOPMDCAdapter -> org.slf4j.b.h:
    40:40:void <init>() -> <init>
    56:56:java.util.Map getCopyOfContextMap() -> b
org.slf4j.helpers.NamedLoggerBase -> org.slf4j.b.i:
    java.lang.String name -> b
    41:41:void <init>() -> <init>
    48:48:java.lang.String getName() -> c
org.slf4j.helpers.SubstituteLogger -> org.slf4j.b.j:
    java.lang.String name -> a
    org.slf4j.Logger _delegate -> b
    java.lang.Boolean delegateEventAware -> c
    java.lang.reflect.Method logMethodCache -> d
    org.slf4j.event.EventRecodingLogger eventRecodingLogger -> e
    java.util.Queue eventQueue -> f
    boolean createdPostInitialization -> g
    58:62:void <init>(java.lang.String,java.util.Queue,boolean) -> <init>
    65:65:java.lang.String getName() -> c
    69:69:boolean isTraceEnabled() -> h
    73:74:void trace(java.lang.String) -> c
    77:78:void trace(java.lang.String,java.lang.Object) -> a
    81:82:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> a
    85:86:void trace(java.lang.String,java.lang.Object[]) -> a
    89:90:void trace(java.lang.String,java.lang.Throwable) -> a
    117:117:boolean isDebugEnabled() -> f
    121:122:void debug(java.lang.String) -> d
    125:126:void debug(java.lang.String,java.lang.Object) -> b
    129:130:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> b
    133:134:void debug(java.lang.String,java.lang.Object[]) -> b
    137:138:void debug(java.lang.String,java.lang.Throwable) -> b
    165:165:boolean isInfoEnabled() -> g
    169:170:void info(java.lang.String) -> f
    173:174:void info(java.lang.String,java.lang.Object) -> d
    177:178:void info(java.lang.String,java.lang.Object,java.lang.Object) -> d
    181:182:void info(java.lang.String,java.lang.Object[]) -> d
    185:186:void info(java.lang.String,java.lang.Throwable) -> d
    213:213:boolean isWarnEnabled() -> j
    217:218:void warn(java.lang.String) -> g
    221:222:void warn(java.lang.String,java.lang.Object) -> e
    225:226:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> e
    229:230:void warn(java.lang.String,java.lang.Object[]) -> e
    233:234:void warn(java.lang.String,java.lang.Throwable) -> e
    261:261:boolean isErrorEnabled() -> i
    265:266:void error(java.lang.String) -> e
    269:270:void error(java.lang.String,java.lang.Object) -> c
    273:274:void error(java.lang.String,java.lang.Object,java.lang.Object) -> c
    277:278:void error(java.lang.String,java.lang.Object[]) -> c
    281:282:void error(java.lang.String,java.lang.Throwable) -> c
    310:320:boolean equals(java.lang.Object) -> equals
    325:325:int hashCode() -> hashCode
    333:339:org.slf4j.Logger delegate() -> a
    344:347:org.slf4j.Logger getEventRecordingLogger() -> k
    355:356:void setDelegate(org.slf4j.Logger) -> a
    359:368:boolean isDelegateEventAware() -> b
    372:380:void log(org.slf4j.event.LoggingEvent) -> a
    384:384:boolean isDelegateNull() -> d
    388:388:boolean isDelegateNOP() -> e
org.slf4j.helpers.SubstituteLoggerFactory -> org.slf4j.b.k:
    boolean postInitialization -> a
    java.util.Map loggers -> b
    java.util.concurrent.LinkedBlockingQueue eventQueue -> c
    43:49:void <init>() -> <init>
    52:57:org.slf4j.Logger getLogger(java.lang.String) -> c
    65:65:java.util.List getLoggers() -> a
    69:69:java.util.concurrent.LinkedBlockingQueue getEventQueue() -> b
    73:74:void postInitialization() -> c
    77:79:void clear() -> d
org.slf4j.helpers.Util -> org.slf4j.b.l:
    org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER -> a
    boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED -> b
    36:37:void <init>() -> <init>
    40:49:java.lang.String safeGetSystemProperty(java.lang.String) -> a
    53:57:boolean safeGetBooleanSystemProperty(java.lang.String) -> b
    75:82:org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager() -> b
    88:90:org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager() -> c
    100:118:java.lang.Class getCallingClass() -> a
    122:125:void report(java.lang.String,java.lang.Throwable) -> a
    128:129:void report(java.lang.String) -> c
    72:72:void <clinit>() -> <clinit>
org.slf4j.helpers.Util$1 -> org.slf4j.b.m:
org.slf4j.helpers.Util$ClassContextSecurityManager -> org.slf4j.b.n:
    65:65:void <init>() -> <init>
    67:67:java.lang.Class[] getClassContext() -> getClassContext
    65:65:void <init>(org.slf4j.helpers.Util$1) -> <init>
org.slf4j.impl.StaticLoggerBinder -> org.slf4j.impl.a:
    java.lang.String REQUESTED_API_VERSION -> a
    org.slf4j.impl.StaticLoggerBinder SINGLETON -> b
    java.lang.Object KEY -> c
    boolean initialized -> d
    ch.qos.logback.classic.LoggerContext defaultLoggerContext -> e
    ch.qos.logback.classic.util.ContextSelectorStaticBinder contextSelectorBinder -> f
    58:64:void <init>() -> <init>
    67:67:org.slf4j.impl.StaticLoggerBinder getSingleton() -> a
    84:97:void init() -> b
    100:107:org.slf4j.ILoggerFactory getLoggerFactory() -> c
    111:111:java.lang.String getLoggerFactoryClassStr() -> d
    43:56:void <clinit>() -> <clinit>
org.slf4j.impl.StaticMDCBinder -> org.slf4j.impl.StaticMDCBinder:
    org.slf4j.impl.StaticMDCBinder SINGLETON -> a
    32:33:void <init>() -> <init>
    40:40:org.slf4j.spi.MDCAdapter getMDCA() -> a
    30:30:void <clinit>() -> <clinit>
org.slf4j.impl.StaticMarkerBinder -> org.slf4j.impl.b:
    org.slf4j.impl.StaticMarkerBinder SINGLETON -> a
    org.slf4j.IMarkerFactory markerFactory -> b
    35:38:void <init>() -> <init>
    45:45:org.slf4j.IMarkerFactory getMarkerFactory() -> a
    33:33:void <clinit>() -> <clinit>
org.slf4j.spi.LocationAwareLogger -> org.slf4j.c.a:
org.slf4j.spi.MDCAdapter -> org.slf4j.c.b:
    java.util.Map getCopyOfContextMap() -> b
reactor.core.CoreSubscriber -> e.a.a:
    45:45:reactor.util.context.Context currentContext() -> a
    void onSubscribe(org.reactivestreams.Subscription) -> a
reactor.core.Disposable -> e.a.b:
    void dispose() -> c
reactor.core.Disposables -> e.a.c:
    reactor.core.Disposable DISPOSED -> a
    79:79:reactor.core.Disposable disposed() -> a
    521:521:void <clinit>() -> <clinit>
reactor.core.Disposables$AlwaysDisposable -> e.a.d:
    484:484:void <init>() -> <init>
    489:489:void dispose() -> c
reactor.core.Exceptions -> e.a.e:
    java.lang.Throwable TERMINATED -> a
    java.util.concurrent.RejectedExecutionException REJECTED_EXECUTION -> b
    java.util.concurrent.RejectedExecutionException NOT_TIME_CAPABLE_REJECTED_EXECUTION -> c
    68:90:boolean addThrowable(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Throwable) -> a
    107:115:java.lang.RuntimeException multiple(java.lang.Throwable[]) -> a
    153:154:java.lang.RuntimeException bubble(java.lang.Throwable) -> a
    162:162:java.lang.IllegalStateException duplicateOnSubscribeException() -> a
    202:202:java.lang.IllegalStateException failWithOverflow() -> b
    215:215:java.lang.IllegalStateException failWithOverflow(java.lang.String) -> a
    246:249:java.util.concurrent.RejectedExecutionException failWithRejected(java.lang.Throwable) -> b
    288:288:boolean isErrorCallbackNotImplemented(java.lang.Throwable) -> c
    308:308:java.lang.IllegalArgumentException nullOrNegativeRequestException(long) -> a
    322:326:java.lang.RuntimeException propagate(java.lang.Throwable) -> d
    342:346:java.lang.Throwable terminate(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object) -> a
    359:366:void throwIfFatal(java.lang.Throwable) -> e
    377:386:void throwIfJvmFatal(java.lang.Throwable) -> f
    397:401:java.lang.Throwable unwrap(java.lang.Throwable) -> g
    480:495:java.lang.Throwable addSuppressed(java.lang.Throwable,java.lang.Throwable) -> a
    47:504:void <clinit>() -> <clinit>
reactor.core.Exceptions$BubblingException -> e.a.f:
    524:525:void <init>(java.lang.Throwable) -> <init>
reactor.core.Exceptions$CompositeException -> e.a.g:
    511:512:void <init>() -> <init>
reactor.core.Exceptions$ErrorCallbackNotImplemented -> e.a.h:
    560:560:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
reactor.core.Exceptions$OverflowException -> e.a.i:
    585:586:void <init>(java.lang.String) -> <init>
reactor.core.Exceptions$ReactiveException -> e.a.j:
    536:537:void <init>(java.lang.Throwable) -> <init>
    540:541:void <init>(java.lang.String) -> <init>
    545:546:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
reactor.core.Exceptions$ReactorRejectedExecutionException -> e.a.k:
    592:593:void <init>(java.lang.String,java.lang.Throwable) -> <init>
reactor.core.Fuseable -> e.a.l:
reactor.core.Fuseable$ConditionalSubscriber -> e.a.m:
reactor.core.Fuseable$QueueSubscription -> e.a.n:
    int requestFusion(int) -> a
    110:110:java.lang.Object peek() -> peek
    115:115:boolean add(java.lang.Object) -> add
    120:120:boolean offer(java.lang.Object) -> offer
    125:125:java.lang.Object remove() -> remove
    130:130:java.lang.Object element() -> element
    135:135:boolean contains(java.lang.Object) -> contains
    140:140:java.util.Iterator iterator() -> iterator
    145:145:java.lang.Object[] toArray() -> toArray
    150:150:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    155:155:boolean remove(java.lang.Object) -> remove
    160:160:boolean containsAll(java.util.Collection) -> containsAll
    165:165:boolean addAll(java.util.Collection) -> addAll
    170:170:boolean removeAll(java.util.Collection) -> removeAll
    175:175:boolean retainAll(java.util.Collection) -> retainAll
reactor.core.Fuseable$ScalarCallable -> e.a.o:
reactor.core.Fuseable$SynchronousSubscription -> e.a.p:
    190:193:int requestFusion(int) -> a
reactor.core.Scannable -> e.a.q:
    252:258:reactor.core.Scannable from(java.lang.Object) -> b
    287:287:boolean isScanAvailable() -> o_
    334:334:java.util.stream.Stream parents() -> e
    java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    366:369:java.lang.Object scan(reactor.core.Scannable$Attr) -> b
reactor.core.Scannable$Attr -> e.a.r:
    reactor.core.Scannable$Attr ACTUAL -> a
    reactor.core.Scannable$Attr BUFFERED -> b
    reactor.core.Scannable$Attr CAPACITY -> c
    reactor.core.Scannable$Attr CANCELLED -> d
    reactor.core.Scannable$Attr DELAY_ERROR -> e
    reactor.core.Scannable$Attr ERROR -> f
    reactor.core.Scannable$Attr LARGE_BUFFERED -> g
    reactor.core.Scannable$Attr NAME -> h
    reactor.core.Scannable$Attr PARENT -> i
    reactor.core.Scannable$Attr PREFETCH -> j
    reactor.core.Scannable$Attr REQUESTED_FROM_DOWNSTREAM -> k
    reactor.core.Scannable$Attr TERMINATED -> l
    reactor.core.Scannable$Attr TAGS -> m
    java.lang.Object defaultValue -> n
    reactor.core.Scannable UNAVAILABLE_SCAN -> o
    reactor.core.Scannable NULL_SCAN -> p
    176:176:java.lang.Object defaultValue() -> a
    181:183:void <init>(java.lang.Object) -> <init>
    219:223:java.util.stream.Stream recurse(reactor.core.Scannable,reactor.core.Scannable$Attr) -> a
    61:205:void <clinit>() -> <clinit>
reactor.core.Scannable$Attr$1 -> e.a.s:
    189:189:void <init>() -> <init>
    192:192:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    197:197:boolean isScanAvailable() -> o_
reactor.core.Scannable$Attr$2 -> e.a.t:
    205:205:void <init>() -> <init>
    208:208:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    213:213:boolean isScanAvailable() -> o_
reactor.core.Scannable$Attr$3 -> e.a.u:
    reactor.core.Scannable c -> a
    reactor.core.Scannable val$s -> b
    reactor.core.Scannable$Attr val$key -> c
    223:224:void <init>(reactor.core.Scannable,reactor.core.Scannable$Attr) -> <init>
    228:228:boolean hasNext() -> hasNext
    233:235:reactor.core.Scannable next() -> a
    223:223:java.lang.Object next() -> next
reactor.core.publisher.AssemblyOp -> e.a.a.a:
reactor.core.publisher.BlockingMonoSubscriber -> e.a.a.b:
    27:27:void <init>() -> <init>
    31:35:void onNext(java.lang.Object) -> a
    39:43:void onError(java.lang.Throwable) -> a
reactor.core.publisher.BlockingSingleSubscriber -> e.a.a.c:
    java.lang.Object value -> a
    java.lang.Throwable error -> b
    org.reactivestreams.Subscription s -> c
    boolean cancelled -> d
    41:42:void <init>() -> <init>
    46:50:void onSubscribe(org.reactivestreams.Subscription) -> a
    54:55:void onComplete() -> i_
    59:65:void dispose() -> c
    75:92:java.lang.Object blockingGet() -> f
    106:129:java.lang.Object blockingGet(long,java.util.concurrent.TimeUnit) -> a
    137:143:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
reactor.core.publisher.ConnectableFlux -> e.a.a.d:
    java.util.function.Consumer NOOP_DISCONNECT -> a
    34:34:void <init>() -> <init>
    187:187:void lambda$static$1(reactor.core.Disposable) -> a
    185:185:void <clinit>() -> <clinit>
reactor.core.publisher.ConnectableFluxOnAssembly -> e.a.a.e:
    reactor.core.publisher.ConnectableFlux source -> b
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException stacktrace -> c
    53:56:void <init>(reactor.core.publisher.ConnectableFlux) -> <init>
    60:61:void subscribe(reactor.core.CoreSubscriber) -> a
    71:74:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    79:79:java.lang.String toString() -> toString
reactor.core.publisher.FlatMapTracker -> e.a.a.f:
    java.lang.Object[] array -> a
    int[] free -> b
    long producerIndex -> c
    long consumerIndex -> d
    int size -> e
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater SIZE -> f
    int[] FREE_EMPTY -> g
    968:972:void <init>() -> <init>
    java.lang.Object[] empty() -> k_
    java.lang.Object[] terminated() -> j_
    java.lang.Object[] newArray(int) -> a
    void unsubscribeEntry(java.lang.Object) -> b_
    void setIndex(java.lang.Object,int) -> a
    997:1012:void unsubscribe() -> l_
    1015:1015:java.lang.Object[] get() -> m_
    1019:1054:boolean add(java.lang.Object) -> c
    1058:1066:void remove(int) -> b
    1069:1077:int pollFree() -> g
    1081:1087:void offerFree(int) -> c
    1090:1090:boolean isEmpty() -> h
    980:983:void <clinit>() -> <clinit>
reactor.core.publisher.Flux -> e.a.a.g:
    java.util.function.BiFunction TUPLE2_BIFUNCTION -> d
    java.util.function.Supplier LIST_SUPPLIER -> e
    java.util.function.Supplier SET_SUPPLIER -> f
    java.util.function.BooleanSupplier ALWAYS_BOOLEAN_SUPPLIER -> g
    java.util.function.Function HASHCODE_EXTRACTOR -> h
    java.util.function.BiPredicate OBJECT_EQUAL -> i
    java.util.function.Function IDENTITY_FUNCTION -> j
    104:104:void <init>() -> <init>
    4280:4280:int getPrefetch() -> a
    4798:4803:reactor.core.publisher.Mono next() -> b
    6447:6448:void subscribe(org.reactivestreams.Subscriber) -> a
    void subscribe(reactor.core.CoreSubscriber) -> a
    7708:7712:reactor.core.publisher.Flux onAssembly(reactor.core.publisher.Flux) -> a
    7728:7732:reactor.core.publisher.Flux onLastAssembly(reactor.core.publisher.Flux) -> b
    7757:7757:java.lang.String toString() -> toString
    7819:7834:reactor.core.publisher.Mono convertToMono(java.util.concurrent.Callable) -> a
    7968:7968:boolean lambda$static$39() -> c
    7963:7973:void <clinit>() -> <clinit>
reactor.core.publisher.FluxCallableOnAssembly -> e.a.a.h:
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException stacktrace -> a
    44:46:void <init>(reactor.core.publisher.Flux) -> <init>
    51:52:void subscribe(reactor.core.CoreSubscriber) -> a
    57:57:java.lang.Object call() -> call
reactor.core.publisher.FluxContextStart -> e.a.a.i:
    java.util.function.Function doOnContext -> a
    42:50:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.FluxContextStart$ContextStartSubscriber -> e.a.a.j:
    reactor.core.CoreSubscriber actual -> a
    reactor.core.Fuseable$ConditionalSubscriber actualConditional -> b
    reactor.util.context.Context context -> c
    reactor.core.Fuseable$QueueSubscription qs -> d
    org.reactivestreams.Subscription s -> e
    64:73:void <init>(reactor.core.CoreSubscriber,reactor.util.context.Context) -> <init>
    78:81:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    86:86:reactor.util.context.Context currentContext() -> a
    92:99:void onSubscribe(org.reactivestreams.Subscription) -> a
    103:104:void onNext(java.lang.Object) -> a
    117:118:void onError(java.lang.Throwable) -> a
    122:123:void onComplete() -> i_
    127:127:reactor.core.CoreSubscriber actual() -> f
    132:133:void request(long) -> a
    137:138:void cancel() -> c
    142:145:int requestFusion(int) -> a
    151:154:java.lang.Object poll() -> poll
    159:159:boolean isEmpty() -> isEmpty
    164:167:void clear() -> clear
    171:171:int size() -> size
reactor.core.publisher.FluxFlatMap -> e.a.a.k:
    java.util.function.Function mapper -> a
    boolean delayError -> b
    int maxConcurrency -> c
    java.util.function.Supplier mainQueueSupplier -> k
    int prefetch -> l
    java.util.function.Supplier innerQueueSupplier -> m
    87:87:int getPrefetch() -> a
    93:103:void subscribe(reactor.core.CoreSubscriber) -> a
    122:179:boolean trySubscribeScalarMap(org.reactivestreams.Publisher,reactor.core.CoreSubscriber,java.util.function.Function,boolean) -> a
reactor.core.publisher.FluxFlatMap$FlatMapInner -> e.a.a.l:
    reactor.core.publisher.FluxFlatMap$FlatMapMain parent -> a
    int prefetch -> b
    int limit -> c
    org.reactivestreams.Subscription s -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> e
    long produced -> f
    java.util.Queue queue -> g
    boolean done -> h
    int sourceMode -> i
    int index -> j
    877:882:void <init>(reactor.core.publisher.FluxFlatMap$FlatMapMain,int) -> <init>
    886:906:void onSubscribe(org.reactivestreams.Subscription) -> a
    910:916:void onNext(java.lang.Object) -> a
    920:922:void onError(java.lang.Throwable) -> a
    927:929:void onComplete() -> i_
    933:941:void request(long) -> a
    945:945:reactor.util.context.Context currentContext() -> a
    950:951:void cancel() -> c
    956:963:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    859:860:void <clinit>() -> <clinit>
reactor.core.publisher.FluxFlatMap$FlatMapMain -> e.a.a.m:
    boolean delayError -> h
    int maxConcurrency -> i
    int prefetch -> j
    int limit -> k
    java.util.function.Function mapper -> l
    java.util.function.Supplier mainQueueSupplier -> m
    java.util.function.Supplier innerQueueSupplier -> n
    reactor.core.CoreSubscriber actual -> o
    java.util.Queue scalarQueue -> p
    java.lang.Throwable error -> q
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ERROR -> r
    boolean done -> s
    boolean cancelled -> t
    org.reactivestreams.Subscription s -> u
    long requested -> v
    java.util.concurrent.atomic.AtomicLongFieldUpdater REQUESTED -> w
    int wip -> x
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> y
    reactor.core.publisher.FluxFlatMap$FlatMapInner[] EMPTY -> z
    reactor.core.publisher.FluxFlatMap$FlatMapInner[] TERMINATED -> A
    int lastIndex -> B
    int produced -> C
    236:245:void <init>(reactor.core.CoreSubscriber,java.util.function.Function,boolean,int,java.util.function.Supplier,int,java.util.function.Supplier) -> <init>
    249:249:reactor.core.CoreSubscriber actual() -> f
    260:274:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    280:280:reactor.core.publisher.FluxFlatMap$FlatMapInner[] empty() -> i
    286:286:reactor.core.publisher.FluxFlatMap$FlatMapInner[] terminated() -> j
    292:292:reactor.core.publisher.FluxFlatMap$FlatMapInner[] newArray(int) -> d
    297:298:void setIndex(reactor.core.publisher.FluxFlatMap$FlatMapInner,int) -> a
    302:303:void unsubscribeEntry(reactor.core.publisher.FluxFlatMap$FlatMapInner) -> a
    307:311:void request(long) -> a
    315:324:void cancel() -> c
    328:334:void onSubscribe(org.reactivestreams.Subscription) -> a
    339:374:void onNext(java.lang.Object) -> a
    377:382:java.util.Queue getOrCreateScalarQueue() -> k
    387:398:void onError(java.lang.Throwable) -> a
    402:408:void onComplete() -> i_
    411:474:void tryEmitScalar(java.lang.Object) -> d
    477:515:void tryEmit(reactor.core.publisher.FluxFlatMap$FlatMapInner,java.lang.Object) -> a
    518:522:void drain() -> l
    525:733:void drainLoop() -> m
    736:777:boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber) -> a
    781:791:void innerError(reactor.core.publisher.FluxFlatMap$FlatMapInner,java.lang.Throwable) -> a
    794:802:boolean failOverflow(java.lang.Object,org.reactivestreams.Subscription) -> a
    830:835:void innerComplete(reactor.core.publisher.FluxFlatMap$FlatMapInner) -> b
    838:843:java.util.Queue getOrCreateInnerQueue(reactor.core.publisher.FluxFlatMap$FlatMapInner) -> c
    182:182:void setIndex(java.lang.Object,int) -> a
    182:182:void unsubscribeEntry(java.lang.Object) -> b_
    182:182:java.lang.Object[] newArray(int) -> a
    182:182:java.lang.Object[] terminated() -> j_
    182:182:java.lang.Object[] empty() -> k_
    198:223:void <clinit>() -> <clinit>
reactor.core.publisher.FluxHide -> e.a.a.n:
    39:40:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.FluxHide$HideSubscriber -> e.a.a.o:
    reactor.core.CoreSubscriber actual -> a
    org.reactivestreams.Subscription s -> b
    47:49:void <init>(reactor.core.CoreSubscriber) -> <init>
    53:53:reactor.core.CoreSubscriber actual() -> f
    58:59:void request(long) -> a
    63:64:void cancel() -> c
    68:70:void onSubscribe(org.reactivestreams.Subscription) -> a
    74:75:void onNext(java.lang.Object) -> a
    79:80:void onError(java.lang.Throwable) -> a
    84:85:void onComplete() -> i_
    90:92:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
reactor.core.publisher.FluxHide$SuppressFuseableSubscriber -> e.a.a.p:
    reactor.core.CoreSubscriber actual -> a
    org.reactivestreams.Subscription s -> b
    103:106:void <init>(reactor.core.CoreSubscriber) -> <init>
    110:115:void onSubscribe(org.reactivestreams.Subscription) -> a
    120:122:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    127:128:void onNext(java.lang.Object) -> a
    132:133:void onError(java.lang.Throwable) -> a
    137:138:void onComplete() -> i_
    142:143:void request(long) -> a
    147:148:void cancel() -> c
    152:152:int requestFusion(int) -> a
    158:158:java.lang.Object poll() -> poll
    163:163:boolean isEmpty() -> isEmpty
    169:169:void clear() -> clear
    173:173:int size() -> size
    178:178:reactor.core.CoreSubscriber actual() -> f
reactor.core.publisher.FluxMap -> e.a.a.q:
    java.util.function.Function mapper -> a
    56:63:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.FluxMap$MapConditionalSubscriber -> e.a.a.r:
    reactor.core.Fuseable$ConditionalSubscriber actual -> a
    java.util.function.Function mapper -> b
    boolean done -> c
    org.reactivestreams.Subscription s -> d
    169:172:void <init>(reactor.core.Fuseable$ConditionalSubscriber,java.util.function.Function) -> <init>
    176:181:void onSubscribe(org.reactivestreams.Subscription) -> a
    185:202:void onNext(java.lang.Object) -> a
    228:236:void onError(java.lang.Throwable) -> a
    240:246:void onComplete() -> i_
    251:254:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    259:259:reactor.core.CoreSubscriber actual() -> f
    264:265:void request(long) -> a
    269:270:void cancel() -> c
reactor.core.publisher.FluxMap$MapSubscriber -> e.a.a.s:
    reactor.core.CoreSubscriber actual -> a
    java.util.function.Function mapper -> b
    boolean done -> c
    org.reactivestreams.Subscription s -> d
    76:79:void <init>(reactor.core.CoreSubscriber,java.util.function.Function) -> <init>
    83:88:void onSubscribe(org.reactivestreams.Subscription) -> a
    92:109:void onNext(java.lang.Object) -> a
    113:121:void onError(java.lang.Throwable) -> a
    125:131:void onComplete() -> i_
    136:139:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    144:144:reactor.core.CoreSubscriber actual() -> f
    149:150:void request(long) -> a
    154:155:void cancel() -> c
reactor.core.publisher.FluxMapFuseable -> e.a.a.t:
    java.util.function.Function mapper -> a
    58:64:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber -> e.a.a.u:
    reactor.core.Fuseable$ConditionalSubscriber actual -> a
    java.util.function.Function mapper -> b
    boolean done -> c
    reactor.core.Fuseable$QueueSubscription s -> d
    int sourceMode -> e
    217:220:void <init>(reactor.core.Fuseable$ConditionalSubscriber,java.util.function.Function) -> <init>
    225:228:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    234:238:void onSubscribe(org.reactivestreams.Subscription) -> a
    242:264:void onNext(java.lang.Object) -> a
    289:297:void onError(java.lang.Throwable) -> a
    301:307:void onComplete() -> i_
    311:311:reactor.core.CoreSubscriber actual() -> f
    316:317:void request(long) -> a
    321:322:void cancel() -> c
    327:331:java.lang.Object poll() -> poll
    336:336:boolean isEmpty() -> isEmpty
    341:342:void clear() -> clear
    347:354:int requestFusion(int) -> a
    359:359:int size() -> size
reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber -> e.a.a.v:
    reactor.core.CoreSubscriber actual -> a
    java.util.function.Function mapper -> b
    boolean done -> c
    reactor.core.Fuseable$QueueSubscription s -> d
    int sourceMode -> e
    80:83:void <init>(reactor.core.CoreSubscriber,java.util.function.Function) -> <init>
    88:92:void onSubscribe(org.reactivestreams.Subscription) -> a
    96:117:void onNext(java.lang.Object) -> a
    121:129:void onError(java.lang.Throwable) -> a
    133:139:void onComplete() -> i_
    143:146:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    151:151:reactor.core.CoreSubscriber actual() -> f
    156:157:void request(long) -> a
    161:162:void cancel() -> c
    167:171:java.lang.Object poll() -> poll
    176:176:boolean isEmpty() -> isEmpty
    181:182:void clear() -> clear
    187:194:int requestFusion(int) -> a
    199:199:int size() -> size
reactor.core.publisher.FluxOnAssembly -> e.a.a.w:
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException snapshotStack -> a
    boolean fullStackTrace -> b
    66:68:void <init>(reactor.core.publisher.Flux) -> <init>
    87:87:java.lang.String toString() -> toString
    91:171:java.lang.String getStacktrace(reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException) -> a
    176:196:void fillStacktraceHeader(java.lang.StringBuilder,java.lang.Class,reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException) -> a
    203:214:void subscribe(reactor.core.CoreSubscriber,reactor.core.publisher.Flux,reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException) -> a
    217:238:java.lang.String extract(java.lang.String,boolean) -> a
    244:255:void subscribe(reactor.core.CoreSubscriber) -> a
    410:414:int getParentOrThis(reactor.core.Scannable) -> a
    411:411:boolean lambda$getParentOrThis$0(reactor.core.Scannable) -> b
    58:58:void <clinit>() -> <clinit>
reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException -> e.a.a.x:
    boolean checkpointed -> a
    java.lang.String cached -> b
    269:271:void <init>() -> <init>
    283:283:boolean isLight() -> a
    288:291:java.lang.String toString() -> toString
    295:295:java.lang.String stackFirst() -> b
reactor.core.publisher.FluxOnAssembly$OnAssemblyConditionalSubscriber -> e.a.a.y:
    reactor.core.Fuseable$ConditionalSubscriber actualCS -> a
    560:562:void <init>(reactor.core.Fuseable$ConditionalSubscriber,reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException,org.reactivestreams.Publisher) -> <init>
reactor.core.publisher.FluxOnAssembly$OnAssemblyException -> e.a.a.z:
    java.util.List chainOrder -> a
    327:338:void <init>(org.reactivestreams.Publisher,reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException,java.lang.String) -> <init>
    341:347:void mapLine(int,java.lang.StringBuilder,java.lang.String) -> a
    351:351:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    356:388:void add(org.reactivestreams.Publisher,java.lang.String) -> a
    393:405:java.lang.String getMessage() -> getMessage
reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber -> e.a.a.A:
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException snapshotStack -> b
    org.reactivestreams.Publisher parent -> c
    reactor.core.CoreSubscriber actual -> d
    reactor.core.Fuseable$QueueSubscription qs -> e
    org.reactivestreams.Subscription s -> f
    int fusionMode -> g
    429:433:void <init>(reactor.core.CoreSubscriber,reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException,org.reactivestreams.Publisher) -> <init>
    437:437:reactor.core.CoreSubscriber actual() -> f
    443:445:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    450:451:void onNext(java.lang.Object) -> a
    455:456:void onError(java.lang.Throwable) -> a
    460:461:void onComplete() -> i_
    465:473:int requestFusion(int) -> a
    477:497:java.lang.Throwable fail(java.lang.Throwable) -> b
    503:507:boolean isEmpty() -> isEmpty
    513:518:void onSubscribe(org.reactivestreams.Subscription) -> a
    522:522:int size() -> size
    527:528:void clear() -> clear
    532:533:void request(long) -> a
    537:538:void cancel() -> c
    544:548:java.lang.Object poll() -> poll
reactor.core.publisher.FluxOnErrorResume -> e.a.a.B:
    java.util.function.Function nextFactory -> a
    47:48:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber -> e.a.a.C:
    java.util.function.Function nextFactory -> a
    boolean second -> b
    59:61:void <init>(reactor.core.CoreSubscriber,java.util.function.Function) -> <init>
    65:69:void onSubscribe(org.reactivestreams.Subscription) -> a
    73:78:void onNext(java.lang.Object) -> a
    82:102:void onError(java.lang.Throwable) -> a
reactor.core.publisher.FluxOperator -> e.a.a.D:
    reactor.core.publisher.Flux source -> n
    44:46:void <init>(reactor.core.publisher.Flux) -> <init>
    51:53:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
reactor.core.publisher.FluxPeek -> e.a.a.E:
    java.util.function.Consumer onSubscribeCall -> a
    java.util.function.Consumer onNextCall -> b
    java.util.function.Consumer onErrorCall -> c
    java.lang.Runnable onCompleteCall -> k
    java.lang.Runnable onAfterTerminateCall -> l
    java.util.function.LongConsumer onRequestCall -> m
    java.lang.Runnable onCancelCall -> o
    77:84:void subscribe(reactor.core.CoreSubscriber) -> a
    268:268:java.util.function.Consumer onSubscribeCall() -> c
    274:274:java.util.function.Consumer onNextCall() -> f
    280:280:java.util.function.Consumer onErrorCall() -> g
    286:286:java.lang.Runnable onCompleteCall() -> h
    292:292:java.lang.Runnable onAfterTerminateCall() -> i
    298:298:java.util.function.LongConsumer onRequestCall() -> j
    304:304:java.lang.Runnable onCancelCall() -> k
    325:328:void afterCompleteWithFailure(reactor.core.publisher.SignalPeek,java.lang.Throwable,reactor.util.context.Context) -> a
    349:352:void afterErrorWithFailure(reactor.core.publisher.SignalPeek,java.lang.Throwable,java.lang.Throwable,reactor.util.context.Context) -> a
reactor.core.publisher.FluxPeek$PeekSubscriber -> e.a.a.F:
    reactor.core.CoreSubscriber actual -> a
    reactor.core.publisher.SignalPeek parent -> b
    org.reactivestreams.Subscription s -> c
    boolean done -> d
    96:99:void <init>(reactor.core.CoreSubscriber,reactor.core.publisher.SignalPeek) -> <init>
    104:107:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    112:116:reactor.util.context.Context currentContext() -> a
    121:131:void request(long) -> a
    135:146:void cancel() -> c
    150:165:void onSubscribe(org.reactivestreams.Subscription) -> a
    169:186:void onNext(java.lang.Object) -> a
    190:226:void onError(java.lang.Throwable) -> a
    230:256:void onComplete() -> i_
    260:260:reactor.core.CoreSubscriber actual() -> f
reactor.core.publisher.FluxPeekFuseable -> e.a.a.G:
    java.util.function.Consumer onSubscribeCall -> a
    java.util.function.Consumer onNextCall -> b
    java.util.function.Consumer onErrorCall -> c
    java.lang.Runnable onCompleteCall -> k
    java.lang.Runnable onAfterTerminateCall -> l
    java.util.function.LongConsumer onRequestCall -> m
    java.lang.Runnable onCancelCall -> o
    81:87:void subscribe(reactor.core.CoreSubscriber) -> a
    652:652:java.util.function.Consumer onSubscribeCall() -> c
    658:658:java.util.function.Consumer onNextCall() -> f
    664:664:java.util.function.Consumer onErrorCall() -> g
    670:670:java.lang.Runnable onCompleteCall() -> h
    676:676:java.lang.Runnable onAfterTerminateCall() -> i
    682:682:java.util.function.LongConsumer onRequestCall() -> j
    688:688:java.lang.Runnable onCancelCall() -> k
reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber -> e.a.a.H:
    reactor.core.Fuseable$ConditionalSubscriber actual -> a
    reactor.core.publisher.SignalPeek parent -> b
    org.reactivestreams.Subscription s -> c
    boolean done -> d
    703:706:void <init>(reactor.core.Fuseable$ConditionalSubscriber,reactor.core.publisher.SignalPeek) -> <init>
    710:714:reactor.util.context.Context currentContext() -> a
    719:729:void request(long) -> a
    733:744:void cancel() -> c
    748:763:void onSubscribe(org.reactivestreams.Subscription) -> a
    768:771:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    776:792:void onNext(java.lang.Object) -> a
    816:852:void onError(java.lang.Throwable) -> a
    856:882:void onComplete() -> i_
    886:886:reactor.core.CoreSubscriber actual() -> f
reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber -> e.a.a.I:
    reactor.core.Fuseable$ConditionalSubscriber actual -> a
    reactor.core.publisher.SignalPeek parent -> b
    reactor.core.Fuseable$QueueSubscription s -> c
    int sourceMode -> d
    boolean done -> e
    374:377:void <init>(reactor.core.Fuseable$ConditionalSubscriber,reactor.core.publisher.SignalPeek) -> <init>
    381:386:reactor.util.context.Context currentContext() -> a
    392:395:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    400:410:void request(long) -> a
    414:425:void cancel() -> c
    430:445:void onSubscribe(org.reactivestreams.Subscription) -> a
    449:471:void onNext(java.lang.Object) -> a
    495:531:void onError(java.lang.Throwable) -> a
    535:567:void onComplete() -> i_
    571:571:reactor.core.CoreSubscriber actual() -> f
    577:617:java.lang.Object poll() -> poll
    622:622:boolean isEmpty() -> isEmpty
    627:628:void clear() -> clear
    633:640:int requestFusion(int) -> a
    645:645:int size() -> size
reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber -> e.a.a.J:
    reactor.core.CoreSubscriber actual -> a
    reactor.core.publisher.SignalPeek parent -> b
    reactor.core.Fuseable$QueueSubscription s -> c
    int sourceMode -> d
    boolean done -> e
    105:108:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    112:115:void <init>(reactor.core.CoreSubscriber,reactor.core.publisher.SignalPeek) -> <init>
    119:124:reactor.util.context.Context currentContext() -> a
    129:139:void request(long) -> a
    143:154:void cancel() -> c
    159:174:void onSubscribe(org.reactivestreams.Subscription) -> a
    178:200:void onNext(java.lang.Object) -> a
    204:240:void onError(java.lang.Throwable) -> a
    244:277:void onComplete() -> i_
    281:281:reactor.core.CoreSubscriber actual() -> f
    287:327:java.lang.Object poll() -> poll
    332:332:boolean isEmpty() -> isEmpty
    337:338:void clear() -> clear
    343:350:int requestFusion(int) -> a
    355:355:int size() -> size
reactor.core.publisher.FluxSubscribeOnCallable -> e.a.a.K:
    java.util.concurrent.Callable callable -> a
    reactor.core.scheduler.Scheduler scheduler -> b
    50:63:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription -> e.a.a.L:
    reactor.core.CoreSubscriber actual -> a
    java.util.concurrent.Callable callable -> b
    reactor.core.scheduler.Scheduler scheduler -> c
    int state -> d
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater STATE -> e
    java.lang.Object value -> f
    int fusionState -> g
    reactor.core.Disposable mainFuture -> h
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater MAIN_FUTURE -> i
    reactor.core.Disposable requestFuture -> j
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater REQUEST_FUTURE -> k
    110:114:void <init>(reactor.core.CoreSubscriber,java.util.concurrent.Callable,reactor.core.scheduler.Scheduler) -> <init>
    118:118:reactor.core.CoreSubscriber actual() -> f
    124:127:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    132:148:void cancel() -> c
    152:154:void clear() -> clear
    158:158:boolean isEmpty() -> isEmpty
    164:168:java.lang.Object poll() -> poll
    173:177:int requestFusion(int) -> a
    182:182:int size() -> size
    187:195:void setMainFuture(reactor.core.Disposable) -> a
    200:208:void setRequestFuture(reactor.core.Disposable) -> b
    216:250:void run() -> run
    255:279:void request(long) -> a
    282:293:void emitValue() -> a
    76:103:void <clinit>() -> <clinit>
reactor.core.publisher.FluxSubscribeOnValue -> e.a.a.M:
    java.lang.Object value -> a
    reactor.core.scheduler.Scheduler scheduler -> b
    53:70:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.FluxSubscribeOnValue$ScheduledEmpty -> e.a.a.N:
    org.reactivestreams.Subscriber actual -> a
    reactor.core.Disposable future -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater FUTURE -> c
    reactor.core.Disposable FINISHED -> d
    225:227:void <init>(org.reactivestreams.Subscriber) -> <init>
    231:232:void request(long) -> a
    236:243:void cancel() -> c
    248:253:void run() -> run
    256:262:void setFuture(reactor.core.Disposable) -> a
    266:266:int requestFusion(int) -> a
    272:272:java.lang.Void poll() -> a
    277:277:boolean isEmpty() -> isEmpty
    282:282:int size() -> size
    288:288:void clear() -> clear
    213:213:java.lang.Object poll() -> poll
    218:223:void <clinit>() -> <clinit>
reactor.core.publisher.FluxSubscribeOnValue$ScheduledScalar -> e.a.a.O:
    reactor.core.CoreSubscriber actual -> a
    java.lang.Object value -> b
    reactor.core.scheduler.Scheduler scheduler -> c
    int once -> d
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater ONCE -> e
    reactor.core.Disposable future -> f
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater FUTURE -> g
    reactor.core.Disposable FINISHED -> h
    int fusionState -> i
    101:105:void <init>(reactor.core.CoreSubscriber,java.lang.Object,reactor.core.scheduler.Scheduler) -> <init>
    109:109:reactor.core.CoreSubscriber actual() -> f
    115:125:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    130:150:void request(long) -> a
    154:162:void cancel() -> c
    167:176:void run() -> run
    180:184:int requestFusion(int) -> a
    190:194:java.lang.Object poll() -> poll
    199:199:boolean isEmpty() -> isEmpty
    204:204:int size() -> size
    209:210:void clear() -> clear
    83:93:void <clinit>() -> <clinit>
reactor.core.publisher.FluxZip -> e.a.a.P:
    org.reactivestreams.Publisher[] sources -> a
    java.lang.Iterable sourcesIterable -> b
    java.util.function.Function zipper -> c
    java.util.function.Supplier queueSupplier -> k
    int prefetch -> l
    112:112:int getPrefetch() -> a
    134:141:void subscribe(reactor.core.CoreSubscriber) -> a
    146:222:void handleIterableMode(reactor.core.CoreSubscriber,java.lang.Iterable) -> a
    227:268:void handleArrayMode(reactor.core.CoreSubscriber,org.reactivestreams.Publisher[]) -> a
    291:328:void handleBoth(reactor.core.CoreSubscriber,org.reactivestreams.Publisher[],java.lang.Object[],int,int) -> a
reactor.core.publisher.FluxZip$PairwiseZipper -> e.a.a.Q:
    java.util.function.BiFunction[] zippers -> a
    948:950:void <init>(java.util.function.BiFunction[]) -> <init>
    954:958:java.lang.Object apply(java.lang.Object[]) -> a
    962:968:reactor.core.publisher.FluxZip$PairwiseZipper then(java.util.function.BiFunction) -> a
    943:943:java.lang.Object apply(java.lang.Object) -> apply
reactor.core.publisher.FluxZip$ZipCoordinator -> e.a.a.R:
    reactor.core.CoreSubscriber actual -> a
    reactor.core.publisher.FluxZip$ZipInner[] subscribers -> b
    java.util.function.Function zipper -> c
    int wip -> d
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> e
    long requested -> f
    java.util.concurrent.atomic.AtomicLongFieldUpdater REQUESTED -> g
    java.lang.Throwable error -> h
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ERROR -> i
    boolean cancelled -> j
    java.lang.Object[] current -> k
    556:565:void <init>(reactor.core.CoreSubscriber,java.util.function.Function,int,java.util.function.Supplier,int) -> <init>
    568:575:void subscribe(org.reactivestreams.Publisher[],int) -> a
    579:583:void request(long) -> a
    587:592:void cancel() -> c
    596:596:reactor.core.CoreSubscriber actual() -> f
    607:611:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    615:621:void error(java.lang.Throwable,int) -> a
    624:627:void cancelAll() -> a
    631:806:void drain() -> b
    533:544:void <clinit>() -> <clinit>
reactor.core.publisher.FluxZip$ZipInner -> e.a.a.S:
    reactor.core.publisher.FluxZip$ZipCoordinator parent -> a
    int prefetch -> b
    int limit -> c
    int index -> d
    java.util.function.Supplier queueSupplier -> e
    java.util.Queue queue -> f
    org.reactivestreams.Subscription s -> g
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> h
    long produced -> i
    boolean done -> j
    int sourceMode -> k
    840:846:void <init>(reactor.core.publisher.FluxZip$ZipCoordinator,int,int,java.util.function.Supplier) -> <init>
    851:877:void onSubscribe(org.reactivestreams.Subscription) -> a
    881:889:void onNext(java.lang.Object) -> a
    893:893:reactor.util.context.Context currentContext() -> a
    898:904:void onError(java.lang.Throwable) -> a
    908:910:void onComplete() -> i_
    915:922:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    926:927:void cancel() -> c
    930:940:void request(long) -> a
    826:827:void <clinit>() -> <clinit>
reactor.core.publisher.FluxZip$ZipSingleCoordinator -> e.a.a.T:
    java.util.function.Function zipper -> a
    java.lang.Object[] scalars -> b
    reactor.core.publisher.FluxZip$ZipSingleSubscriber[] subscribers -> c
    int wip -> d
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> e
    348:358:void <init>(reactor.core.CoreSubscriber,java.lang.Object[],int,java.util.function.Function) -> <init>
    361:372:void subscribe(int,int,org.reactivestreams.Publisher[]) -> a
    375:392:void next(java.lang.Object,int) -> a
    395:402:void error(java.lang.Throwable,int) -> a
    405:409:void complete(int) -> b
    413:415:void cancel() -> c
    420:423:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    432:437:void cancelAll() -> g
    340:341:void <clinit>() -> <clinit>
reactor.core.publisher.FluxZip$ZipSingleSubscriber -> e.a.a.U:
    reactor.core.publisher.FluxZip$ZipSingleCoordinator parent -> a
    int index -> b
    org.reactivestreams.Subscription s -> c
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> d
    boolean done -> e
    456:459:void <init>(reactor.core.publisher.FluxZip$ZipSingleCoordinator,int) -> <init>
    463:463:reactor.util.context.Context currentContext() -> a
    469:475:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    480:484:void onSubscribe(org.reactivestreams.Subscription) -> a
    488:495:void onNext(java.lang.Object) -> a
    499:505:void onError(java.lang.Throwable) -> a
    509:514:void onComplete() -> i_
    518:519:void dispose() -> c
    449:450:void <clinit>() -> <clinit>
reactor.core.publisher.Hooks -> e.a.a.V:
    java.util.function.Function onEachOperatorHook -> a
    java.util.function.Function onLastOperatorHook -> b
    java.util.function.BiFunction onOperatorErrorHook -> c
    java.util.function.Consumer onErrorDroppedHook -> d
    java.util.function.Consumer onNextDroppedHook -> e
    java.util.LinkedHashMap onEachOperatorHooks -> g
    java.util.LinkedHashMap onLastOperatorHooks -> h
    java.util.LinkedHashMap onOperatorErrorHooks -> i
    reactor.util.Logger log -> f
    69:70:void onEachOperator(java.util.function.Function) -> a
    98:106:void onEachOperator(java.lang.String,java.util.function.Function) -> a
    412:422:java.util.function.Function createOrUpdateOpHook(java.util.Collection) -> a
    480:481:void <init>() -> <init>
    467:516:void <clinit>() -> <clinit>
reactor.core.publisher.Hooks$OnOperatorDebug -> e.a.a.W:
    reactor.core.publisher.Hooks$OnOperatorDebug INSTANCE -> a
    483:483:void <init>() -> <init>
    491:491:reactor.core.publisher.Hooks$OnOperatorDebug instance() -> a
    497:512:org.reactivestreams.Publisher apply(org.reactivestreams.Publisher) -> a
    483:483:java.lang.Object apply(java.lang.Object) -> apply
    486:486:void <clinit>() -> <clinit>
reactor.core.publisher.InnerConsumer -> e.a.a.X:
reactor.core.publisher.InnerOperator -> e.a.a.Y:
    32:32:reactor.util.context.Context currentContext() -> a
reactor.core.publisher.InnerProducer -> e.a.a.Z:
    reactor.core.CoreSubscriber actual() -> f
    42:45:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
reactor.core.publisher.Mono -> e.a.a.aa:
    java.util.function.BiPredicate EQUALS_BIPREDICATE -> a
    90:90:void <init>() -> <init>
    236:236:reactor.core.publisher.Mono empty() -> a
    251:251:reactor.core.publisher.Mono error(java.lang.Throwable) -> a
    298:308:reactor.core.publisher.Mono from(org.reactivestreams.Publisher) -> a
    324:324:reactor.core.publisher.Mono fromCallable(java.util.concurrent.Callable) -> a
    452:452:reactor.core.publisher.Mono just(java.lang.Object) -> a
    576:576:reactor.core.publisher.Mono subscriberContext() -> b
    754:754:reactor.core.publisher.Mono zip(reactor.core.publisher.Mono,reactor.core.publisher.Mono,java.util.function.BiFunction) -> a
    890:890:reactor.core.publisher.Mono zip(java.lang.Iterable,java.util.function.Function) -> a
    1159:1161:java.lang.Object block() -> d
    1183:1185:java.lang.Object block(java.time.Duration) -> a
    1586:1587:reactor.core.publisher.Mono doOnNext(java.util.function.Consumer) -> a
    2000:2000:reactor.core.publisher.Mono flatMap(java.util.function.Function) -> a
    2253:2256:reactor.core.publisher.Mono map(java.util.function.Function) -> b
    2405:2405:reactor.core.publisher.Mono onErrorResume(java.util.function.Function) -> c
    2539:2553:reactor.core.publisher.Mono publishOn(reactor.core.scheduler.Scheduler) -> a
    2913:2914:void subscribe(org.reactivestreams.Subscriber) -> a
    void subscribe(reactor.core.CoreSubscriber) -> a
    2949:2949:reactor.core.publisher.Mono subscriberContext(reactor.util.context.Context) -> a
    2972:2972:reactor.core.publisher.Mono subscriberContext(java.util.function.Function) -> d
    3448:3456:reactor.core.publisher.Mono zipWith(reactor.core.publisher.Mono,java.util.function.BiFunction) -> a
    3472:3476:reactor.core.publisher.Mono onAssembly(reactor.core.publisher.Mono) -> a
    3492:3496:reactor.core.publisher.Mono onLastAssembly(reactor.core.publisher.Mono) -> b
    3501:3501:java.lang.String toString() -> toString
    3519:3527:reactor.core.publisher.Mono doOnSignal(reactor.core.publisher.Mono,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable,java.util.function.LongConsumer,java.lang.Runnable) -> a
    2949:2949:reactor.util.context.Context lambda$subscriberContext$30(reactor.util.context.Context,reactor.util.context.Context) -> a
    3539:3539:void <clinit>() -> <clinit>
reactor.core.publisher.MonoCallable -> e.a.a.ab:
    java.util.concurrent.Callable callable -> b
    41:43:void <init>(java.util.concurrent.Callable) -> <init>
    48:69:void subscribe(reactor.core.CoreSubscriber) -> a
    75:75:java.lang.Object block() -> d
    82:85:java.lang.Object block(java.time.Duration) -> a
    92:92:java.lang.Object call() -> call
reactor.core.publisher.MonoCallableOnAssembly -> e.a.a.ac:
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException stacktrace -> b
    48:50:void <init>(reactor.core.publisher.Mono) -> <init>
    56:56:java.lang.Object block() -> d
    64:67:java.lang.Object block(java.time.Duration) -> a
    74:84:void subscribe(reactor.core.CoreSubscriber) -> a
    90:90:java.lang.Object call() -> call
    95:95:java.lang.String toString() -> toString
reactor.core.publisher.MonoCurrentContext -> e.a.a.ad:
    reactor.core.publisher.MonoCurrentContext INSTANCE -> b
    26:26:void <init>() -> <init>
    32:34:void subscribe(reactor.core.CoreSubscriber) -> a
    28:28:void <clinit>() -> <clinit>
reactor.core.publisher.MonoEmpty -> e.a.a.ae:
    org.reactivestreams.Publisher INSTANCE -> b
    39:41:void <init>() -> <init>
    45:46:void subscribe(reactor.core.CoreSubscriber) -> a
    56:56:reactor.core.publisher.Mono instance() -> c
    62:62:java.lang.Object call() -> call
    68:68:java.lang.Object block(java.time.Duration) -> a
    74:74:java.lang.Object block() -> d
    37:37:void <clinit>() -> <clinit>
reactor.core.publisher.MonoError -> e.a.a.af:
    java.lang.Throwable error -> b
    36:38:void <init>(java.lang.Throwable) -> <init>
    42:42:java.lang.Object block(java.time.Duration) -> a
    47:47:java.lang.Object block() -> d
    52:53:void subscribe(reactor.core.CoreSubscriber) -> a
    57:60:java.lang.Object call() -> call
reactor.core.publisher.MonoFlatMap -> e.a.a.ag:
    java.util.function.Function mapper -> b
    46:48:void <init>(reactor.core.publisher.Mono,java.util.function.Function) -> <init>
    53:61:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.MonoFlatMap$FlatMapInner -> e.a.a.ah:
    reactor.core.publisher.MonoFlatMap$FlatMapMain parent -> a
    org.reactivestreams.Subscription s -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> c
    boolean done -> d
    206:208:void <init>(reactor.core.publisher.MonoFlatMap$FlatMapMain) -> <init>
    213:213:reactor.util.context.Context currentContext() -> a
    219:224:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    229:232:void onSubscribe(org.reactivestreams.Subscription) -> a
    236:242:void onNext(java.lang.Object) -> a
    246:252:void onError(java.lang.Throwable) -> a
    256:261:void onComplete() -> i_
    264:265:void cancel() -> c
    199:200:void <clinit>() -> <clinit>
reactor.core.publisher.MonoFlatMap$FlatMapMain -> e.a.a.ai:
    java.util.function.Function mapper -> a
    reactor.core.publisher.MonoFlatMap$FlatMapInner second -> b
    boolean done -> c
    org.reactivestreams.Subscription s -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> e
    80:83:void <init>(reactor.core.CoreSubscriber,java.util.function.Function) -> <init>
    93:97:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    102:105:void onSubscribe(org.reactivestreams.Subscription) -> a
    109:156:void onNext(java.lang.Object) -> a
    160:166:void onError(java.lang.Throwable) -> a
    170:175:void onComplete() -> i_
    179:182:void cancel() -> c
    185:186:void secondError(java.lang.Throwable) -> b
    189:190:void secondComplete() -> g
    73:74:void <clinit>() -> <clinit>
reactor.core.publisher.MonoFromFluxOperator -> e.a.a.aj:
    reactor.core.publisher.Flux source -> b
    41:43:void <init>(reactor.core.publisher.Flux) -> <init>
    48:50:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
reactor.core.publisher.MonoFromPublisher -> e.a.a.ak:
    org.reactivestreams.Publisher source -> b
    37:39:void <init>(org.reactivestreams.Publisher) -> <init>
    43:44:void subscribe(reactor.core.CoreSubscriber) -> a
    49:52:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
reactor.core.publisher.MonoJust -> e.a.a.al:
    java.lang.Object value -> b
    33:35:void <init>(java.lang.Object) -> <init>
    39:39:java.lang.Object call() -> call
    44:44:java.lang.Object block(java.time.Duration) -> a
    49:49:java.lang.Object block() -> d
    54:55:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.MonoMap -> e.a.a.am:
    java.util.function.Function mapper -> b
    43:45:void <init>(reactor.core.publisher.Mono,java.util.function.Function) -> <init>
    50:56:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.MonoMapFuseable -> e.a.a.an:
    java.util.function.Function mapper -> b
    46:48:void <init>(reactor.core.publisher.Mono,java.util.function.Function) -> <init>
    53:60:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.MonoNext -> e.a.a.ao:
    35:36:void <init>(reactor.core.publisher.Flux) -> <init>
    40:41:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.MonoNext$NextSubscriber -> e.a.a.ap:
    reactor.core.CoreSubscriber actual -> a
    org.reactivestreams.Subscription s -> b
    boolean done -> c
    int wip -> d
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> e
    56:58:void <init>(reactor.core.CoreSubscriber) -> <init>
    62:66:void onSubscribe(org.reactivestreams.Subscription) -> a
    70:78:void onNext(java.lang.Object) -> a
    82:88:void onError(java.lang.Throwable) -> a
    92:97:void onComplete() -> i_
    101:104:void request(long) -> a
    108:109:void cancel() -> c
    114:117:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    122:122:reactor.core.CoreSubscriber actual() -> f
    53:54:void <clinit>() -> <clinit>
reactor.core.publisher.MonoOnAssembly -> e.a.a.aq:
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException stacktrace -> b
    47:49:void <init>(reactor.core.publisher.Mono) -> <init>
    68:80:void subscribe(reactor.core.CoreSubscriber) -> a
    84:84:java.lang.String toString() -> toString
reactor.core.publisher.MonoOnErrorResume -> e.a.a.ar:
    java.util.function.Function nextFactory -> b
    38:40:void <init>(reactor.core.publisher.Mono,java.util.function.Function) -> <init>
    44:45:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.MonoOperator -> e.a.a.as:
    reactor.core.publisher.Mono source -> c
    45:47:void <init>(reactor.core.publisher.Mono) -> <init>
    52:54:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
reactor.core.publisher.MonoPeek -> e.a.a.at:
    java.util.function.Consumer onSubscribeCall -> b
    java.util.function.Consumer onNextCall -> d
    java.util.function.Consumer onErrorCall -> e
    java.lang.Runnable onCompleteCall -> f
    java.util.function.LongConsumer onRequestCall -> g
    java.lang.Runnable onCancelCall -> h
    54:61:void <init>(reactor.core.publisher.Mono,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable,java.util.function.LongConsumer,java.lang.Runnable) -> <init>
    66:72:void subscribe(reactor.core.CoreSubscriber) -> a
    77:77:java.util.function.Consumer onSubscribeCall() -> c
    83:83:java.util.function.Consumer onNextCall() -> f
    89:89:java.util.function.Consumer onErrorCall() -> g
    95:95:java.lang.Runnable onCompleteCall() -> h
    101:101:java.lang.Runnable onAfterTerminateCall() -> i
    107:107:java.util.function.LongConsumer onRequestCall() -> j
    113:113:java.lang.Runnable onCancelCall() -> k
reactor.core.publisher.MonoPeekFuseable -> e.a.a.au:
    java.util.function.Consumer onSubscribeCall -> b
    java.util.function.Consumer onNextCall -> d
    java.util.function.Consumer onErrorCall -> e
    java.lang.Runnable onCompleteCall -> f
    java.util.function.LongConsumer onRequestCall -> g
    java.lang.Runnable onCancelCall -> h
    56:64:void <init>(reactor.core.publisher.Mono,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable,java.util.function.LongConsumer,java.lang.Runnable) -> <init>
    69:75:void subscribe(reactor.core.CoreSubscriber) -> a
    80:80:java.util.function.Consumer onSubscribeCall() -> c
    86:86:java.util.function.Consumer onNextCall() -> f
    92:92:java.util.function.Consumer onErrorCall() -> g
    98:98:java.lang.Runnable onCompleteCall() -> h
    104:104:java.lang.Runnable onAfterTerminateCall() -> i
    110:110:java.util.function.LongConsumer onRequestCall() -> j
    116:116:java.lang.Runnable onCancelCall() -> k
reactor.core.publisher.MonoPublishOn -> e.a.a.av:
    reactor.core.scheduler.Scheduler scheduler -> b
    39:41:void <init>(reactor.core.publisher.Mono,reactor.core.scheduler.Scheduler) -> <init>
    45:46:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.MonoPublishOn$PublishOnSubscriber -> e.a.a.aw:
    reactor.core.CoreSubscriber actual -> a
    reactor.core.scheduler.Scheduler scheduler -> b
    org.reactivestreams.Subscription s -> c
    reactor.core.Disposable future -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater FUTURE -> e
    java.lang.Object value -> f
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater VALUE -> g
    java.lang.Throwable error -> h
    77:80:void <init>(reactor.core.CoreSubscriber,reactor.core.scheduler.Scheduler) -> <init>
    85:89:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    94:94:reactor.core.CoreSubscriber actual() -> f
    99:104:void onSubscribe(org.reactivestreams.Subscription) -> a
    108:110:void onNext(java.lang.Object) -> a
    114:116:void onError(java.lang.Throwable) -> a
    120:123:void onComplete() -> i_
    130:141:void trySchedule(org.reactivestreams.Subscription,java.lang.Throwable,java.lang.Object) -> a
    145:146:void request(long) -> a
    150:159:void cancel() -> c
    164:182:void run() -> run
    60:70:void <clinit>() -> <clinit>
reactor.core.publisher.MonoSubscribeOnCallable -> e.a.a.ax:
    java.util.concurrent.Callable callable -> b
    reactor.core.scheduler.Scheduler scheduler -> c
    39:42:void <init>(java.util.concurrent.Callable,reactor.core.scheduler.Scheduler) -> <init>
    46:58:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.MonoSubscribeOnValue -> e.a.a.ay:
    java.lang.Object value -> b
    reactor.core.scheduler.Scheduler scheduler -> c
    39:42:void <init>(java.lang.Object,reactor.core.scheduler.Scheduler) -> <init>
    46:63:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.MonoSubscriberContext -> e.a.a.az:
    java.util.function.Function doOnContext -> b
    32:34:void <init>(reactor.core.publisher.Mono,java.util.function.Function) -> <init>
    40:48:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.MonoZip -> e.a.a.aA:
    boolean delayError -> b
    org.reactivestreams.Publisher[] sources -> c
    java.lang.Iterable sourcesIterable -> d
    java.util.function.Function zipper -> e
    55:60:void <init>(boolean,org.reactivestreams.Publisher,org.reactivestreams.Publisher,java.util.function.BiFunction) -> <init>
    64:69:void <init>(boolean,java.util.function.Function,org.reactivestreams.Publisher[]) -> <init>
    73:78:void <init>(boolean,java.util.function.Function,java.lang.Iterable) -> <init>
    83:95:reactor.core.publisher.Mono zipAdditionalSource(org.reactivestreams.Publisher,java.util.function.BiFunction) -> a
    102:127:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.MonoZip$ZipCoordinator -> e.a.a.aB:
    reactor.core.publisher.MonoZip$ZipInner[] subscribers -> a
    boolean delayError -> b
    java.util.function.Function zipper -> c
    int done -> d
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater DONE -> e
    147:154:void <init>(reactor.core.CoreSubscriber,int,boolean,java.util.function.Function) -> <init>
    159:169:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    178:182:void subscribe(org.reactivestreams.Publisher[]) -> a
    185:195:void signalError(java.lang.Throwable) -> b
    199:260:void signal() -> g
    264:270:void cancel() -> c
    139:140:void <clinit>() -> <clinit>
reactor.core.publisher.MonoZip$ZipInner -> e.a.a.aC:
    reactor.core.publisher.MonoZip$ZipCoordinator parent -> a
    org.reactivestreams.Subscription s -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> c
    java.lang.Object value -> d
    java.lang.Throwable error -> e
    287:289:void <init>(reactor.core.publisher.MonoZip$ZipCoordinator) -> <init>
    294:307:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    312:312:reactor.util.context.Context currentContext() -> a
    317:323:void onSubscribe(org.reactivestreams.Subscription) -> a
    327:331:void onNext(java.lang.Object) -> a
    335:337:void onError(java.lang.Throwable) -> a
    341:344:void onComplete() -> i_
    347:348:void cancel() -> c
    279:280:void <clinit>() -> <clinit>
reactor.core.publisher.OperatorDisposables -> e.a.a.aD:
    reactor.core.Disposable DISPOSED -> a
    189:189:boolean isDisposed(reactor.core.Disposable) -> a
    40:40:void <clinit>() -> <clinit>
reactor.core.publisher.Operators -> e.a.a.aE:
    reactor.core.CoreSubscriber EMPTY_SUBSCRIBER -> a
    reactor.util.Logger log -> b
    59:63:long addCap(long,long) -> a
    79:85:long addCap(java.util.concurrent.atomic.AtomicLongFieldUpdater,java.lang.Object,long) -> a
    98:101:reactor.core.Fuseable$QueueSubscription as(org.reactivestreams.Subscription) -> a
    115:115:org.reactivestreams.Subscription cancelledSubscription() -> a
    124:126:void complete(org.reactivestreams.Subscriber) -> a
    174:176:void error(org.reactivestreams.Subscriber,java.lang.Throwable) -> a
    251:259:void onErrorDropped(java.lang.Throwable,reactor.util.context.Context) -> a
    272:284:void onNextDropped(java.lang.Object,reactor.util.context.Context) -> a
    298:298:java.lang.Throwable onOperatorError(java.lang.Throwable,reactor.util.context.Context) -> b
    316:316:java.lang.Throwable onOperatorError(org.reactivestreams.Subscription,java.lang.Throwable,reactor.util.context.Context) -> a
    338:360:java.lang.Throwable onOperatorError(org.reactivestreams.Subscription,java.lang.Throwable,java.lang.Object,reactor.util.context.Context) -> a
    376:376:java.lang.RuntimeException onRejectedExecution(java.lang.Throwable,reactor.util.context.Context) -> c
    400:413:java.lang.RuntimeException onRejectedExecution(java.lang.Throwable,org.reactivestreams.Subscription,java.lang.Throwable,java.lang.Object,reactor.util.context.Context) -> a
    475:479:void reportBadRequest(long) -> a
    488:492:void reportMoreProduced() -> b
    500:504:void reportSubscriptionSet() -> c
    517:517:org.reactivestreams.Subscription scalarSubscription(reactor.core.CoreSubscriber,java.lang.Object) -> a
    583:608:boolean setOnce(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,org.reactivestreams.Subscription) -> a
    638:646:boolean terminate(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object) -> a
    658:665:boolean validate(org.reactivestreams.Subscription,org.reactivestreams.Subscription) -> a
    674:678:boolean validate(long) -> b
    717:728:reactor.core.CoreSubscriber toCoreSubscriber(org.reactivestreams.Subscriber) -> b
    797:797:long unboundedOrPrefetch(int) -> a
    801:801:int unboundedOrLimit(int) -> b
    804:805:void <init>() -> <init>
    807:1726:void <clinit>() -> <clinit>
reactor.core.publisher.Operators$1 -> e.a.a.aF:
    807:807:void <init>() -> <init>
    810:812:void onSubscribe(org.reactivestreams.Subscription) -> a
    816:818:void onNext(java.lang.Object) -> a
    822:824:void onError(java.lang.Throwable) -> a
    828:830:void onComplete() -> i_
reactor.core.publisher.Operators$CancelledSubscription -> e.a.a.aG:
    reactor.core.publisher.Operators$CancelledSubscription INSTANCE -> a
    834:834:void <init>() -> <init>
    840:843:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    849:849:void cancel() -> c
    854:854:void request(long) -> a
    835:835:void <clinit>() -> <clinit>
reactor.core.publisher.Operators$EmptySubscription -> e.a.a.aH:
    reactor.core.publisher.Operators$EmptySubscription INSTANCE -> a
    860:860:void <init>() -> <init>
    866:866:void cancel() -> c
    871:871:void clear() -> clear
    875:875:boolean isEmpty() -> isEmpty
    881:881:java.lang.Object poll() -> poll
    887:887:void request(long) -> a
    891:891:int requestFusion(int) -> a
    897:898:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    903:903:int size() -> size
    861:861:void <clinit>() -> <clinit>
reactor.core.publisher.Operators$MonoSubscriber -> e.a.a.aI:
    reactor.core.CoreSubscriber actual -> f
    java.lang.Object value -> g
    int state -> h
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater STATE -> i
    1029:1031:void <init>(reactor.core.CoreSubscriber) -> <init>
    1035:1037:void cancel() -> c
    1042:1046:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    1051:1053:void clear() -> clear
    1063:1098:void complete(java.lang.Object) -> c
    1105:1105:reactor.core.CoreSubscriber actual() -> f
    1113:1113:boolean isCancelled() -> h
    1118:1118:boolean isEmpty() -> isEmpty
    1123:1124:void onComplete() -> i_
    1128:1129:void onError(java.lang.Throwable) -> a
    1134:1135:void onNext(java.lang.Object) -> a
    1140:1140:void onSubscribe(org.reactivestreams.Subscription) -> a
    1145:1151:java.lang.Object poll() -> poll
    1156:1183:void request(long) -> a
    1187:1191:int requestFusion(int) -> a
    1201:1202:void setValue(java.lang.Object) -> d
    1206:1206:int size() -> size
    1242:1243:void <clinit>() -> <clinit>
reactor.core.publisher.Operators$MultiSubscriptionSubscriber -> e.a.a.aJ:
    reactor.core.CoreSubscriber actual -> c
    boolean unbounded -> d
    org.reactivestreams.Subscription subscription -> e
    long requested -> f
    org.reactivestreams.Subscription missedSubscription -> g
    long missedRequested -> h
    long missedProduced -> i
    int wip -> j
    boolean cancelled -> k
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater MISSED_SUBSCRIPTION -> l
    java.util.concurrent.atomic.AtomicLongFieldUpdater MISSED_REQUESTED -> m
    java.util.concurrent.atomic.AtomicLongFieldUpdater MISSED_PRODUCED -> n
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> o
    1280:1282:void <init>(reactor.core.CoreSubscriber) -> <init>
    1286:1286:reactor.core.CoreSubscriber actual() -> f
    1291:1296:void cancel() -> c
    1301:1307:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    1315:1315:boolean isCancelled() -> g
    1320:1321:void onComplete() -> i_
    1325:1326:void onError(java.lang.Throwable) -> a
    1330:1331:void onSubscribe(org.reactivestreams.Subscription) -> a
    1366:1395:void producedOne() -> h
    1399:1430:void request(long) -> a
    1433:1467:void set(org.reactivestreams.Subscription) -> b
    1475:1475:boolean shouldCancelCurrent() -> i
    1479:1483:void drain() -> j
    1486:1559:void drainLoop() -> k
    1563:1576:void <clinit>() -> <clinit>
reactor.core.publisher.Operators$ScalarSubscription -> e.a.a.aK:
    reactor.core.CoreSubscriber actual -> a
    java.lang.Object value -> b
    int once -> c
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater ONCE -> d
    1593:1596:void <init>(reactor.core.CoreSubscriber,java.lang.Object) -> <init>
    1600:1601:void cancel() -> c
    1605:1606:void clear() -> clear
    1610:1610:boolean isEmpty() -> isEmpty
    1615:1615:reactor.core.CoreSubscriber actual() -> f
    1621:1625:java.lang.Object poll() -> poll
    1631:1634:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    1639:1648:void request(long) -> a
    1652:1655:int requestFusion(int) -> a
    1660:1660:int size() -> size
    1664:1665:void <clinit>() -> <clinit>
reactor.core.publisher.ParallelFlux -> e.a.a.aL:
    66:66:void <init>() -> <init>
    int parallelism() -> a
    843:843:reactor.core.publisher.Flux sequential() -> b
    856:858:reactor.core.publisher.Flux sequential(int) -> a
    void subscribe(reactor.core.CoreSubscriber[]) -> a
    992:994:void subscribe(org.reactivestreams.Subscriber) -> a
    1027:1027:java.lang.String toString() -> toString
    1039:1048:boolean validate(org.reactivestreams.Subscriber[]) -> a
    1114:1114:int getPrefetch() -> c
reactor.core.publisher.ParallelFluxOnAssembly -> e.a.a.aM:
    reactor.core.publisher.ParallelFlux source -> a
    reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException stacktrace -> b
    49:52:void <init>(reactor.core.publisher.ParallelFlux) -> <init>
    80:80:int getPrefetch() -> c
    85:85:int parallelism() -> a
    91:115:void subscribe(reactor.core.CoreSubscriber[]) -> a
    120:123:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    128:128:java.lang.String toString() -> toString
reactor.core.publisher.ParallelMergeSequential -> e.a.a.aN:
    reactor.core.publisher.ParallelFlux source -> a
    int prefetch -> b
    java.util.function.Supplier queueSupplier -> c
    44:51:void <init>(reactor.core.publisher.ParallelFlux,int,java.util.function.Supplier) -> <init>
    56:59:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    64:64:int getPrefetch() -> a
    69:73:void subscribe(reactor.core.CoreSubscriber) -> a
reactor.core.publisher.ParallelMergeSequential$MergeSequentialInner -> e.a.a.aO:
    reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain parent -> a
    int prefetch -> b
    int limit -> c
    long produced -> d
    org.reactivestreams.Subscription s -> e
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> f
    java.util.Queue queue -> g
    boolean done -> h
    364:368:void <init>(reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain,int) -> <init>
    373:380:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    385:385:reactor.util.context.Context currentContext() -> a
    390:393:void onSubscribe(org.reactivestreams.Subscription) -> a
    397:398:void onNext(java.lang.Object) -> a
    402:403:void onError(java.lang.Throwable) -> a
    407:408:void onComplete() -> i_
    411:418:void requestOne() -> c
    421:422:void cancel() -> f
    425:430:java.util.Queue getQueue(java.util.function.Supplier) -> a
    357:358:void <clinit>() -> <clinit>
reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain -> e.a.a.aP:
    reactor.core.publisher.ParallelMergeSequential$MergeSequentialInner[] subscribers -> a
    java.util.function.Supplier queueSupplier -> b
    reactor.core.CoreSubscriber actual -> c
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ERROR -> d
    int wip -> e
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> f
    long requested -> g
    java.util.concurrent.atomic.AtomicLongFieldUpdater REQUESTED -> h
    boolean cancelled -> i
    int done -> j
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater DONE -> k
    java.lang.Throwable error -> l
    107:119:void <init>(reactor.core.CoreSubscriber,int,int,java.util.function.Supplier) -> <init>
    123:123:reactor.core.CoreSubscriber actual() -> f
    129:134:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    144:148:void request(long) -> a
    152:161:void cancel() -> c
    164:167:void cancelAll() -> a
    170:173:void cleanup() -> b
    176:210:void onNext(reactor.core.publisher.ParallelMergeSequential$MergeSequentialInner,java.lang.Object) -> a
    213:220:void onError(java.lang.Throwable) -> a
    223:227:void onComplete() -> g
    230:235:void drain() -> h
    238:342:void drainLoop() -> i
    83:102:void <clinit>() -> <clinit>
reactor.core.publisher.Signal -> e.a.a.aQ:
    java.lang.Throwable getThrowable() -> a
    org.reactivestreams.Subscription getSubscription() -> b
    java.lang.Object get() -> get
    reactor.core.publisher.SignalType getType() -> c
    169:169:boolean isOnError() -> d
    179:179:boolean isOnComplete() -> e
    189:189:boolean isOnSubscribe() -> f
    198:198:boolean isOnNext() -> g
    209:221:void accept(org.reactivestreams.Subscriber) -> a
    35:35:void accept(java.lang.Object) -> accept
reactor.core.publisher.SignalPeek -> e.a.a.aR:
    java.util.function.Consumer onSubscribeCall() -> c
    java.util.function.Consumer onNextCall() -> f
    java.util.function.Consumer onErrorCall() -> g
    java.lang.Runnable onCompleteCall() -> h
    java.lang.Runnable onAfterTerminateCall() -> i
    java.util.function.LongConsumer onRequestCall() -> j
    java.lang.Runnable onCancelCall() -> k
    107:107:java.util.function.Consumer onCurrentContextCall() -> n_
reactor.core.publisher.SignalType -> e.a.a.aS:
    reactor.core.publisher.SignalType SUBSCRIBE -> a
    reactor.core.publisher.SignalType REQUEST -> b
    reactor.core.publisher.SignalType CANCEL -> c
    reactor.core.publisher.SignalType ON_SUBSCRIBE -> d
    reactor.core.publisher.SignalType ON_NEXT -> e
    reactor.core.publisher.SignalType ON_ERROR -> f
    reactor.core.publisher.SignalType ON_COMPLETE -> g
    reactor.core.publisher.SignalType AFTER_TERMINATE -> h
    reactor.core.publisher.SignalType CURRENT_CONTEXT -> i
    reactor.core.publisher.SignalType ON_CONTEXT -> j
    reactor.core.publisher.SignalType[] $VALUES -> k
    23:23:reactor.core.publisher.SignalType[] values() -> values
    23:23:reactor.core.publisher.SignalType valueOf(java.lang.String) -> valueOf
    23:23:void <init>(java.lang.String,int) -> <init>
    68:88:java.lang.String toString() -> toString
    23:64:void <clinit>() -> <clinit>
reactor.core.publisher.SignalType$1 -> e.a.a.aT:
    int[] $SwitchMap$reactor$core$publisher$SignalType -> a
    68:68:void <clinit>() -> <clinit>
reactor.core.publisher.StrictSubscriber -> e.a.a.aU:
    org.reactivestreams.Subscriber actual -> a
    org.reactivestreams.Subscription s -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater S -> c
    long requested -> d
    java.util.concurrent.atomic.AtomicLongFieldUpdater REQUESTED -> e
    int wip -> f
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WIP -> g
    java.lang.Throwable error -> h
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ERROR -> i
    boolean done -> j
    64:66:void <init>(org.reactivestreams.Subscriber) -> <init>
    70:84:void onSubscribe(org.reactivestreams.Subscription) -> a
    88:99:void onNext(java.lang.Object) -> a
    103:112:void onError(java.lang.Throwable) -> a
    116:126:void onComplete() -> i_
    130:150:void request(long) -> a
    154:157:void cancel() -> c
    162:175:java.lang.Object scanUnsafe(reactor.core.Scannable$Attr) -> a
    40:58:void <clinit>() -> <clinit>
reactor.core.scheduler.ElasticScheduler -> e.a.b.a:
    java.util.concurrent.atomic.AtomicLong COUNTER -> a
    java.util.concurrent.ThreadFactory EVICTOR_FACTORY -> b
    reactor.core.scheduler.ElasticScheduler$CachedService SHUTDOWN -> c
    java.util.concurrent.ThreadFactory factory -> d
    int ttlSeconds -> e
    java.util.Queue cache -> f
    java.util.Queue all -> g
    java.util.concurrent.ScheduledExecutorService evictor -> h
    boolean shutdown -> i
    78:91:void <init>(java.util.concurrent.ThreadFactory,int) -> <init>
    99:99:java.util.concurrent.ScheduledExecutorService get() -> a
    114:128:void dispose() -> c
    131:146:reactor.core.scheduler.ElasticScheduler$CachedService pick() -> b
    151:153:reactor.core.Disposable schedule(java.lang.Runnable) -> a
    186:196:void eviction() -> d
    50:50:java.lang.Object get() -> get
    55:57:java.lang.Thread lambda$static$0(java.lang.Runnable) -> b
    52:60:void <clinit>() -> <clinit>
reactor.core.scheduler.ElasticScheduler$CachedService -> e.a.b.b:
    reactor.core.scheduler.ElasticScheduler parent -> a
    java.util.concurrent.ScheduledExecutorService exec -> b
    203:213:void <init>(reactor.core.scheduler.ElasticScheduler) -> <init>
    217:230:void dispose() -> c
reactor.core.scheduler.ElasticScheduler$DirectScheduleTask -> e.a.b.c:
    java.lang.Runnable delegate -> a
    reactor.core.scheduler.ElasticScheduler$CachedService cached -> b
    238:241:void <init>(java.lang.Runnable,reactor.core.scheduler.ElasticScheduler$CachedService) -> <init>
    246:254:void run() -> run
reactor.core.scheduler.ElasticScheduler$ScheduledExecutorServiceExpiry -> e.a.b.d:
    reactor.core.scheduler.ElasticScheduler$CachedService cached -> a
    long expireMillis -> b
    262:265:void <init>(reactor.core.scheduler.ElasticScheduler$CachedService,long) -> <init>
reactor.core.scheduler.ImmediateScheduler -> e.a.b.e:
    reactor.core.scheduler.ImmediateScheduler INSTANCE -> b
    reactor.core.Disposable FINISHED -> a
    35:35:reactor.core.scheduler.Scheduler instance() -> a
    38:40:void <init>() -> <init>
    46:47:reactor.core.Disposable schedule(java.lang.Runnable) -> a
    53:53:void dispose() -> c
    32:42:void <clinit>() -> <clinit>
reactor.core.scheduler.ParallelScheduler -> e.a.b.f:
    java.util.concurrent.atomic.AtomicLong COUNTER -> a
    int n -> b
    java.util.concurrent.ThreadFactory factory -> c
    java.util.concurrent.ScheduledExecutorService[] executors -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater EXECUTORS -> e
    java.util.concurrent.ScheduledExecutorService[] SHUTDOWN -> f
    java.util.concurrent.ScheduledExecutorService TERMINATED -> g
    int roundRobin -> h
    58:65:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    73:73:java.util.concurrent.ScheduledExecutorService get() -> a
    77:82:void init(int) -> a
    118:127:void dispose() -> c
    130:142:java.util.concurrent.ScheduledExecutorService pick() -> b
    147:147:reactor.core.Disposable schedule(java.lang.Runnable) -> a
    36:36:java.lang.Object get() -> get
    38:54:void <clinit>() -> <clinit>
reactor.core.scheduler.Scheduler -> e.a.b.g:
    reactor.core.Disposable schedule(java.lang.Runnable) -> a
    129:129:void dispose() -> c
reactor.core.scheduler.SchedulerTask -> e.a.b.h:
    java.lang.Runnable task -> a
    java.util.concurrent.Future FINISHED -> b
    java.util.concurrent.Future CANCELLED -> c
    java.util.concurrent.Future future -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater FUTURE -> e
    java.lang.Thread thread -> f
    40:42:void <init>(java.lang.Runnable) -> <init>
    47:66:java.lang.Void call() -> a
    71:72:void run() -> run
    76:87:void setFuture(java.util.concurrent.Future) -> a
    99:110:void dispose() -> c
    27:27:java.lang.Object call() -> call
    32:32:java.lang.Void lambda$static$1() -> b
    31:31:java.lang.Void lambda$static$0() -> d
    31:36:void <clinit>() -> <clinit>
reactor.core.scheduler.Schedulers -> e.a.b.i:
    int DEFAULT_POOL_SIZE -> a
    java.util.function.BiConsumer onHandleErrorHook -> b
    java.util.concurrent.atomic.AtomicReference CACHED_ELASTIC -> c
    java.util.concurrent.atomic.AtomicReference CACHED_PARALLEL -> d
    java.util.concurrent.atomic.AtomicReference CACHED_SINGLE -> e
    java.util.function.Supplier ELASTIC_SUPPLIER -> f
    java.util.function.Supplier PARALLEL_SUPPLIER -> g
    java.util.function.Supplier SINGLE_SUPPLIER -> h
    reactor.core.scheduler.Schedulers$Factory DEFAULT -> i
    reactor.core.scheduler.Schedulers$Factory factory -> j
    reactor.util.Logger log -> k
    55:55:void <init>() -> <init>
    123:123:reactor.core.scheduler.Scheduler elastic() -> a
    132:132:reactor.core.scheduler.Scheduler immediate() -> b
    190:190:reactor.core.scheduler.Scheduler newElastic(java.lang.String,int,boolean) -> a
    211:211:reactor.core.scheduler.Scheduler newElastic(int,java.util.concurrent.ThreadFactory) -> a
    255:255:reactor.core.scheduler.Scheduler newParallel(java.lang.String,int,boolean) -> b
    271:271:reactor.core.scheduler.Scheduler newParallel(int,java.util.concurrent.ThreadFactory) -> b
    299:299:reactor.core.scheduler.Scheduler newSingle(java.lang.String,boolean) -> a
    314:314:reactor.core.scheduler.Scheduler newSingle(java.util.concurrent.ThreadFactory) -> a
    522:533:reactor.core.scheduler.Schedulers$CachedScheduler cache(java.util.concurrent.atomic.AtomicReference,java.lang.String,java.util.function.Supplier) -> a
    572:585:void handleError(java.lang.Throwable) -> a
    659:669:reactor.core.Disposable directSchedule(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> a
    744:744:java.util.concurrent.ScheduledExecutorService decorateExecutorService(java.lang.String,java.util.function.Supplier) -> a
    502:502:reactor.core.scheduler.Scheduler lambda$static$2() -> c
    497:499:reactor.core.scheduler.Scheduler lambda$static$1() -> d
    495:495:reactor.core.scheduler.Scheduler lambda$static$0() -> e
    63:536:void <clinit>() -> <clinit>
reactor.core.scheduler.Schedulers$1 -> e.a.b.j:
    504:504:void <init>() -> <init>
reactor.core.scheduler.Schedulers$CachedScheduler -> e.a.b.k:
    reactor.core.scheduler.Scheduler cached -> a
    java.lang.String key -> b
    592:595:void <init>(java.lang.String,reactor.core.scheduler.Scheduler) -> <init>
    599:599:reactor.core.Disposable schedule(java.lang.Runnable) -> a
    632:632:void dispose() -> c
    647:647:reactor.core.scheduler.Scheduler get() -> a
    651:652:void _dispose() -> b
    587:587:java.lang.Object get() -> get
reactor.core.scheduler.Schedulers$Factory -> e.a.b.l:
    435:435:java.util.concurrent.ScheduledExecutorService decorateExecutorService(java.lang.String,java.util.function.Supplier) -> a
    451:451:reactor.core.scheduler.Scheduler newElastic(int,java.util.concurrent.ThreadFactory) -> a
    466:466:reactor.core.scheduler.Scheduler newParallel(int,java.util.concurrent.ThreadFactory) -> b
    479:479:reactor.core.scheduler.Scheduler newSingle(java.util.concurrent.ThreadFactory) -> a
reactor.core.scheduler.Schedulers$SchedulerThreadFactory -> e.a.b.m:
    java.lang.String name -> a
    boolean daemon -> b
    java.util.concurrent.atomic.AtomicLong COUNTER -> c
    545:549:void <init>(java.lang.String,boolean,java.util.concurrent.atomic.AtomicLong) -> <init>
    553:556:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    561:563:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    567:567:java.lang.String get() -> a
    538:538:java.lang.Object get() -> get
reactor.core.scheduler.SingleScheduler -> e.a.b.n:
    java.util.concurrent.atomic.AtomicLong COUNTER -> a
    java.util.concurrent.ThreadFactory factory -> b
    java.util.concurrent.ScheduledExecutorService executor -> c
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater EXECUTORS -> d
    java.util.concurrent.ScheduledExecutorService TERMINATED -> e
    54:57:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    65:67:java.util.concurrent.ScheduledExecutorService get() -> a
    71:73:void init() -> b
    105:112:void dispose() -> c
    116:116:reactor.core.Disposable schedule(java.lang.Runnable) -> a
    35:35:java.lang.Object get() -> get
    37:52:void <clinit>() -> <clinit>
reactor.util.Logger -> e.b.a:
    boolean isDebugEnabled() -> a
    void debug(java.lang.String) -> a
    void debug(java.lang.String,java.lang.Object[]) -> a
    void debug(java.lang.String,java.lang.Throwable) -> a
    void error(java.lang.String,java.lang.Throwable) -> b
reactor.util.Loggers -> e.b.b:
    reactor.util.Loggers$LoggerFactory LOGGER_FACTORY -> a
    66:76:void resetLoggerFactory() -> a
    86:86:boolean isFallbackToJdk() -> b
    99:103:void useConsoleLoggers() -> c
    113:117:void useJdkLoggers() -> d
    128:132:void useSl4jLoggers() -> e
    158:158:reactor.util.Logger getLogger(java.lang.Class) -> a
    51:52:void <clinit>() -> <clinit>
reactor.util.Loggers$1 -> e.b.c:
reactor.util.Loggers$ConsoleLogger -> e.b.d:
    java.lang.String name -> a
    java.io.PrintStream err -> b
    java.io.PrintStream log -> c
    436:440:void <init>(java.lang.String,java.io.PrintStream,java.io.PrintStream) -> <init>
    443:444:void <init>(java.lang.String) -> <init>
    453:462:java.lang.String format(java.lang.String,java.lang.Object[]) -> b
    487:487:boolean isDebugEnabled() -> a
    492:493:void debug(java.lang.String) -> a
    497:498:void debug(java.lang.String,java.lang.Object[]) -> a
    502:504:void debug(java.lang.String,java.lang.Throwable) -> a
    565:567:void error(java.lang.String,java.lang.Throwable) -> b
reactor.util.Loggers$ConsoleLoggerFactory -> e.b.e:
    java.util.HashMap consoleLoggers -> a
    570:570:void <init>() -> <init>
    576:576:reactor.util.Logger getLogger(java.lang.String) -> a
    570:570:void <init>(reactor.util.Loggers$1) -> <init>
    572:572:void <clinit>() -> <clinit>
reactor.util.Loggers$JdkLogger -> e.b.f:
    java.util.logging.Logger logger -> a
    294:296:void <init>(java.util.logging.Logger) -> <init>
    325:325:boolean isDebugEnabled() -> a
    330:331:void debug(java.lang.String) -> a
    335:336:void debug(java.lang.String,java.lang.Object[]) -> a
    340:341:void debug(java.lang.String,java.lang.Throwable) -> a
    400:401:void error(java.lang.String,java.lang.Throwable) -> b
    405:414:java.lang.String format(java.lang.String,java.lang.Object[]) -> b
reactor.util.Loggers$JdkLoggerFactory -> e.b.g:
    418:418:void <init>() -> <init>
    422:422:reactor.util.Logger getLogger(java.lang.String) -> a
    418:418:void <init>(reactor.util.Loggers$1) -> <init>
reactor.util.Loggers$LoggerFactory -> e.b.h:
    reactor.util.Logger getLogger(java.lang.String) -> a
reactor.util.Loggers$Slf4JLogger -> e.b.i:
    org.slf4j.Logger logger -> a
    177:179:void <init>(org.slf4j.Logger) -> <init>
    208:208:boolean isDebugEnabled() -> a
    213:214:void debug(java.lang.String) -> a
    218:219:void debug(java.lang.String,java.lang.Object[]) -> a
    223:224:void debug(java.lang.String,java.lang.Throwable) -> a
    283:284:void error(java.lang.String,java.lang.Throwable) -> b
reactor.util.Loggers$Slf4JLoggerFactory -> e.b.j:
    165:165:void <init>() -> <init>
    169:169:reactor.util.Logger getLogger(java.lang.String) -> a
    165:165:void <init>(reactor.util.Loggers$1) -> <init>
reactor.util.concurrent.Queues -> e.b.a.a:
    int XS_BUFFER_SIZE -> a
    int SMALL_BUFFER_SIZE -> b
    java.util.function.Supplier ONE_SUPPLIER -> c
    java.util.function.Supplier XS_SUPPLIER -> d
    java.util.function.Supplier SMALL_SUPPLIER -> e
    java.util.function.Supplier SMALL_UNBOUNDED -> f
    java.util.function.Supplier XS_UNBOUNDED -> g
    88:88:int ceilingNextPowerOfTwo(int) -> a
    99:117:java.util.function.Supplier get(int) -> b
    344:344:java.lang.Object lambda$static$5() -> a
    342:342:java.lang.Object lambda$static$4() -> b
    339:339:java.lang.Object lambda$static$3() -> c
    337:337:java.lang.Object lambda$static$2() -> d
    117:117:java.util.Queue lambda$get$0(int) -> c
    70:344:void <clinit>() -> <clinit>
reactor.util.concurrent.Queues$OneQueue -> e.b.a.b:
    192:192:void <init>() -> <init>
    196:198:boolean add(java.lang.Object) -> add
    203:203:boolean addAll(java.util.Collection) -> addAll
    208:209:void clear() -> clear
    213:213:boolean contains(java.lang.Object) -> contains
    218:218:boolean containsAll(java.util.Collection) -> containsAll
    223:223:java.lang.Object element() -> element
    228:228:boolean isEmpty() -> isEmpty
    233:233:java.util.Iterator iterator() -> iterator
    238:242:boolean offer(java.lang.Object) -> offer
    248:248:java.lang.Object peek() -> peek
    254:258:java.lang.Object poll() -> poll
    263:263:java.lang.Object remove() -> remove
    268:268:boolean remove(java.lang.Object) -> remove
    273:273:boolean removeAll(java.util.Collection) -> removeAll
    278:278:boolean retainAll(java.util.Collection) -> retainAll
    283:283:int size() -> size
    288:292:java.lang.Object[] toArray() -> toArray
    298:305:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
reactor.util.concurrent.Queues$QueueIterator -> e.b.a.c:
    java.util.Queue queue -> a
    315:317:void <init>(java.util.Queue) -> <init>
    321:321:boolean hasNext() -> hasNext
    326:326:java.lang.Object next() -> next
    331:332:void remove() -> remove
reactor.util.concurrent.SpscArrayQueue -> e.b.a.d:
    44:45:void <init>(int) -> <init>
    49:57:boolean offer(java.lang.Object) -> offer
    63:71:java.lang.Object poll() -> poll
    77:78:java.lang.Object peek() -> peek
    83:83:boolean isEmpty() -> isEmpty
    88:89:void clear() -> clear
    93:101:int size() -> size
    106:106:boolean contains(java.lang.Object) -> contains
    111:111:java.util.Iterator iterator() -> iterator
    116:116:java.lang.Object[] toArray() -> toArray
    121:121:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    126:126:boolean remove(java.lang.Object) -> remove
    131:131:boolean containsAll(java.util.Collection) -> containsAll
    136:136:boolean addAll(java.util.Collection) -> addAll
    141:141:boolean removeAll(java.util.Collection) -> removeAll
    146:146:boolean retainAll(java.util.Collection) -> retainAll
    151:151:boolean add(java.lang.Object) -> add
    156:156:java.lang.Object remove() -> remove
    161:161:java.lang.Object element() -> element
reactor.util.concurrent.SpscArrayQueueCold -> e.b.a.e:
    int mask -> a
    172:174:void <init>(int) -> <init>
reactor.util.concurrent.SpscArrayQueueConsumer -> e.b.a.f:
    long consumerIndex -> b
    java.util.concurrent.atomic.AtomicLongFieldUpdater CONSUMER_INDEX -> c
    222:223:void <init>(int) -> <init>
    227:228:void <clinit>() -> <clinit>
reactor.util.concurrent.SpscArrayQueueP1 -> e.b.a.g:
    184:185:void <init>(int) -> <init>
reactor.util.concurrent.SpscArrayQueueP2 -> e.b.a.h:
    212:213:void <init>(int) -> <init>
reactor.util.concurrent.SpscArrayQueueP3 -> e.b.a.i:
    240:241:void <init>(int) -> <init>
reactor.util.concurrent.SpscArrayQueueProducer -> e.b.a.j:
    long producerIndex -> d
    java.util.concurrent.atomic.AtomicLongFieldUpdater PRODUCER_INDEX -> e
    194:195:void <init>(int) -> <init>
    199:200:void <clinit>() -> <clinit>
reactor.util.concurrent.SpscLinkedArrayQueue -> e.b.a.k:
    int mask -> a
    long producerIndex -> b
    java.util.concurrent.atomic.AtomicLongFieldUpdater PRODUCER_INDEX -> c
    java.util.concurrent.atomic.AtomicReferenceArray producerArray -> d
    long consumerIndex -> e
    java.util.concurrent.atomic.AtomicLongFieldUpdater CONSUMER_INDEX -> f
    java.util.concurrent.atomic.AtomicReferenceArray consumerArray -> g
    java.lang.Object NEXT -> h
    64:68:void <init>(int) -> <init>
    72:96:boolean offer(java.lang.Object) -> offer
    110:138:boolean test(java.lang.Object,java.lang.Object) -> test
    145:166:java.lang.Object poll() -> poll
    173:189:java.lang.Object peek() -> peek
    194:194:boolean isEmpty() -> isEmpty
    199:207:int size() -> size
    212:214:void clear() -> clear
    218:218:java.util.Iterator iterator() -> iterator
    50:62:void <clinit>() -> <clinit>
reactor.util.context.Context -> e.b.b.a:
    50:50:reactor.util.context.Context empty() -> a
    61:61:reactor.util.context.Context of(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> get
    186:189:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    boolean hasKey(java.lang.Object) -> a
    221:221:boolean isEmpty() -> isEmpty
    reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> b
    java.util.stream.Stream stream() -> b
    264:267:reactor.util.context.Context putAll(reactor.util.context.Context) -> a
    269:269:reactor.util.context.Context lambda$putAll$1(reactor.util.context.Context,reactor.util.context.Context) -> a
    268:268:reactor.util.context.Context lambda$putAll$0(reactor.util.context.Context,java.util.Map$Entry) -> a
reactor.util.context.Context0 -> e.b.b.b:
    reactor.util.context.Context0 INSTANCE -> a
    23:23:void <init>() -> <init>
    29:31:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> b
    41:41:java.lang.Object get(java.lang.Object) -> get
    46:46:boolean hasKey(java.lang.Object) -> a
    51:51:java.lang.String toString() -> toString
    56:56:java.util.stream.Stream stream() -> b
    25:25:void <clinit>() -> <clinit>
reactor.util.context.Context1 -> e.b.b.c:
    java.lang.Object key -> a
    java.lang.Object value -> b
    28:31:void <init>(java.lang.Object,java.lang.Object) -> <init>
    35:42:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> b
    56:56:boolean hasKey(java.lang.Object) -> a
    62:65:java.lang.Object get(java.lang.Object) -> get
    70:70:java.util.stream.Stream stream() -> b
    75:75:java.lang.Object getKey() -> getKey
    80:80:java.lang.Object getValue() -> getValue
    85:85:java.lang.Object setValue(java.lang.Object) -> setValue
    90:90:java.lang.String toString() -> toString
reactor.util.context.Context2 -> e.b.b.d:
    java.lang.Object key1 -> a
    java.lang.Object value1 -> b
    java.lang.Object key2 -> c
    java.lang.Object value2 -> d
    31:36:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    40:51:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> b
    74:74:boolean hasKey(java.lang.Object) -> a
    80:86:java.lang.Object get(java.lang.Object) -> get
    91:91:java.util.stream.Stream stream() -> b
    98:98:java.lang.String toString() -> toString
reactor.util.context.Context3 -> e.b.b.e:
    java.lang.Object key1 -> a
    java.lang.Object value1 -> b
    java.lang.Object key2 -> c
    java.lang.Object value2 -> d
    java.lang.Object key3 -> e
    java.lang.Object value3 -> f
    35:42:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    46:61:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> b
    85:85:boolean hasKey(java.lang.Object) -> a
    91:100:java.lang.Object get(java.lang.Object) -> get
    105:105:java.util.stream.Stream stream() -> b
    113:113:java.lang.String toString() -> toString
reactor.util.context.Context4 -> e.b.b.f:
    java.lang.Object key1 -> a
    java.lang.Object value1 -> b
    java.lang.Object key2 -> c
    java.lang.Object value2 -> d
    java.lang.Object key3 -> e
    java.lang.Object value3 -> f
    java.lang.Object key4 -> g
    java.lang.Object value4 -> h
    38:47:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    51:70:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> b
    99:99:boolean hasKey(java.lang.Object) -> a
    105:117:java.lang.Object get(java.lang.Object) -> get
    122:122:java.util.stream.Stream stream() -> b
    131:131:java.lang.String toString() -> toString
reactor.util.context.Context5 -> e.b.b.g:
    java.lang.Object key1 -> a
    java.lang.Object value1 -> b
    java.lang.Object key2 -> c
    java.lang.Object value2 -> d
    java.lang.Object key3 -> e
    java.lang.Object value3 -> f
    java.lang.Object key4 -> g
    java.lang.Object value4 -> h
    java.lang.Object key5 -> i
    java.lang.Object value5 -> j
    41:52:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    56:79:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> b
    111:112:boolean hasKey(java.lang.Object) -> a
    118:133:java.lang.Object get(java.lang.Object) -> get
    138:138:java.util.stream.Stream stream() -> b
    148:148:java.lang.String toString() -> toString
reactor.util.context.ContextN -> e.b.b.h:
    38:45:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    48:51:void <init>(java.util.Map,java.lang.Object,java.lang.Object) -> <init>
    54:57:void <init>(java.util.Map,java.util.Map) -> <init>
    61:63:reactor.util.context.Context put(java.lang.Object,java.lang.Object) -> b
    98:98:boolean hasKey(java.lang.Object) -> a
    103:106:java.lang.Object get(java.lang.Object) -> get
    112:112:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    117:117:java.util.stream.Stream stream() -> b
    122:122:java.util.Map$Entry apply(java.util.Map$Entry) -> a
    127:132:reactor.util.context.Context putAll(reactor.util.context.Context) -> a
    137:137:java.lang.String toString() -> toString
    31:31:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    31:31:java.lang.Object apply(java.lang.Object) -> apply
reactor.util.function.Tuple2 -> e.b.c.a:
    java.lang.Object t1 -> a
    java.lang.Object t2 -> b
    45:48:void <init>(java.lang.Object,java.lang.Object) -> <init>
    56:56:java.lang.Object getT1() -> a
    65:65:java.lang.Object getT2() -> b
    93:93:java.util.List toList() -> c
    102:102:java.lang.Object[] toArray() -> d
    107:107:java.util.Iterator iterator() -> iterator
    112:121:boolean equals(java.lang.Object) -> equals
    127:130:int hashCode() -> hashCode
    139:139:int size() -> e
    149:149:java.lang.String toString() -> toString
reactor.util.function.Tuple3 -> e.b.c.b:
    java.lang.Object t3 -> c
    40:42:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    50:50:java.lang.Object getT3() -> f
    70:70:java.lang.Object[] toArray() -> d
    75:82:boolean equals(java.lang.Object) -> equals
    87:87:int size() -> e
    92:94:int hashCode() -> hashCode
reactor.util.function.Tuple4 -> e.b.c.c:
    java.lang.Object t4 -> d
    41:43:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    73:73:java.lang.Object[] toArray() -> d
    78:85:boolean equals(java.lang.Object) -> equals
    91:93:int hashCode() -> hashCode
    98:98:int size() -> e
reactor.util.function.Tuple5 -> e.b.c.d:
    java.lang.Object t5 -> e
    42:44:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    76:76:java.lang.Object[] toArray() -> d
    81:88:boolean equals(java.lang.Object) -> equals
    94:96:int hashCode() -> hashCode
    101:101:int size() -> e
reactor.util.function.Tuple6 -> e.b.c.e:
    java.lang.Object t6 -> f
    43:45:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    79:79:java.lang.Object[] toArray() -> d
    84:91:boolean equals(java.lang.Object) -> equals
    97:99:int hashCode() -> hashCode
    104:104:int size() -> e
reactor.util.function.Tuple7 -> e.b.c.f:
    java.lang.Object t7 -> g
    44:46:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    82:82:java.lang.Object[] toArray() -> d
    87:94:boolean equals(java.lang.Object) -> equals
    100:102:int hashCode() -> hashCode
    107:107:int size() -> e
reactor.util.function.Tuple8 -> e.b.c.g:
    java.lang.Object t8 -> h
    46:48:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    86:86:java.lang.Object[] toArray() -> d
    91:98:boolean equals(java.lang.Object) -> equals
    104:106:int hashCode() -> hashCode
    111:111:int size() -> e
reactor.util.function.Tuples -> e.b.c.h:
    reactor.util.function.Tuples empty -> a
    41:61:reactor.util.function.Tuple2 fromArray(java.lang.Object[]) -> a
    74:74:reactor.util.function.Tuple2 of(java.lang.Object,java.lang.Object) -> a
    89:89:reactor.util.function.Tuple3 of(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    106:106:reactor.util.function.Tuple4 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    130:130:reactor.util.function.Tuple5 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    157:157:reactor.util.function.Tuple6 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    187:187:reactor.util.function.Tuple7 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    220:220:reactor.util.function.Tuple8 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    465:465:reactor.util.function.Tuple2 apply(java.lang.Object) -> a
    479:489:java.lang.StringBuilder tupleStringRepresentation(java.lang.Object[]) -> b
    495:495:void <init>() -> <init>
    28:28:java.lang.Object apply(java.lang.Object) -> apply
    493:493:void <clinit>() -> <clinit>
reactor.util.function.Tuples$1 -> e.b.c.i:
    493:493:void <init>() -> <init>
    493:493:java.lang.Object apply(java.lang.Object) -> apply
